{"version":3,"file":"app/main.89c693f4381efac50f01.js","mappings":"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BACCA,OAA+B2P,MAAxBtT,KAAKsgL,gBAA+BH,EAAsBC,EACtE,CAEArgL,W,MACsB,QAApB,EAAAC,KAAKsgL,uBAAe,SAAE1D,cAAc,WACtC,E,iCAfWyD,GAAkB,e,mBAAlBA,EAAkB,2E,uICzBxB,MAAME,EACXnhL,YAAgCkhL,GAAA,KAAAA,gBAAAA,CAAyC,CAEtC7pK,gBACjC,OAAO,YAAqB,CAC1B,gBACA,oBAEA,4BACA,+BACC9S,OAA+B2P,MAAxBtT,KAAKsgL,gBAA+B,KAAsB,KACtE,CAEAvgL,W,MACsB,QAApB,EAAAC,KAAKsgL,uBAAe,SAAE1D,cAAc,WACtC,E,iCAfW2D,GAAkB,e,mBAAlBA,EAAkB,2E,yNCHzBjE,EAAY,CAMhB,cACA,yBACA,kBACA,qBACA,yBACA,uBACA,uBACA,iBACA,6BACA,yBAGIV,EAA2C,CAC/C4E,SAAU,CACR,oBACA,oBACA,wBACA,gCACA,gCACA,6CACA,yBACA,uCACA,sCACGlE,GAELmE,KAAM,CACJ,oBACA,gBACA,wBACA,gCACA,4BACA,yCACA,yBACA,uCACA,sCACGnE,GAELoE,MAAO,CACL,oBACA,iBACA,wBACA,gCACA,8BACA,2CACA,yBACA,uCACA,sCACGpE,GAELT,QAAS,CACP,oBACA,oBACA,wBACA,0BACA,8BACA,2CACA,yBACA,uCACA,sCACGS,GAELR,UAAW,CACT,oBACA,iBACA,uBACA,0BACA,yBACA,2CACA,yBACA,sCACA,mCACA,gCACA,yCACGQ,GAELP,OAAQ,CACN,oBACA,kBACA,uBACA,0BACA,yBACA,2CACA,yBACA,sCACA,mCACA,iCACA,yCACGO,GAELqE,MAAO,CACL,oBACA,gBACA,wBACA,gCACA,4BACA,yCACA,uCACA,sCACGrE,GAELE,SAAU,IAKNoE,EAA0C,CAC9C1tB,QAAS,CAAC,YAAa,aACvBmnB,MAAO,CAAC,kBAAmB,eAAgB,WAQtC,MAAMwG,EALb,cAUW,KAAA50K,KAAuB,UA0BvB,KAAAvM,SAAU,EACV,KAAA2jC,UAAW,C,CAzBM5sB,gB,MACxB,MAAO,CACL,mBACA,YA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","sources":["webpack://@bitwarden/web-vault/webpack/runtime/chunk loaded","webpack://@bitwarden/web-vault/webpack/runtime/load script","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.module.ts","webpack://@bitwarden/web-vault/./src/app/common/base.accept.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/event.view.ts","webpack://@bitwarden/web-vault/./src/app/common/base.events.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/common/base.people.component.ts","webpack://@bitwarden/web-vault/./src/app/components/dynamic-avatar.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/not-premium.directive.ts","webpack://@bitwarden/web-vault/./src/app/components/premium-badge.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/user-verification.component.ts","webpack://@bitwarden/web-vault/./src/app/components/user-verification.component.html","webpack://@bitwarden/web-vault/./src/app/components/user-verification.component.ts","webpack://@bitwarden/web-vault/./src/app/core/event.service.ts","webpack://@bitwarden/web-vault/./src/app/core/policy-list.service.ts","webpack://@bitwarden/web-vault/./src/app/core/router.service.ts","webpack://@bitwarden/web-vault/./src/app/core/state/account.ts","webpack://@bitwarden/web-vault/./src/app/core/state/state.service.ts","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/product-switcher/product-switcher-content.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/product-switcher/product-switcher-content.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/product-switcher/product-switcher.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/product-switcher/product-switcher.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/product-switcher/product-switcher.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-create.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-information.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-information.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/guards/org-permissions.guard.ts","webpack://@bitwarden/web-vault/./src/app/organizations/guards/org-redirect.guard.ts","webpack://@bitwarden/web-vault/./src/app/components/organization-switcher.component.html","webpack://@bitwarden/web-vault/./src/app/components/organization-switcher.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/layouts/organization-layout.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/layouts/organization-layout.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-bulk-confirm.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-remove.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-status.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-status.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/policy.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/base-policy.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policies.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policy-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policy-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policies.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policies.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-update.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-settings-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-settings.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergency-access-accept.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-accept.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/password-hint.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/hint.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/lock.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/misc/captcha_iframe.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/iframe_component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authRequestType.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/captchaProtected.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/log-in-credentials.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/passwordless-create-auth.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login/login-with-device.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/login/login-with-device.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/login.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login/login.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/login/login.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/delete-recover.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/two-factor-recovery.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/remove-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-reset-password-enrollment.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/set-password.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/change-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/set-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/shared/components/password-strength/password-strength.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/shared/components/password-strength/password-strength.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/sso.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/reference-event.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/register.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/inputsFieldMatch.validator.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/register.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-forbes.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-forbes.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-us-news.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-us-news.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/confirmation-details.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/confirmation-details.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/billing.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/billing.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/default-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/default-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise1-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise1-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise2-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise2-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams1-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams1-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams2-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams2-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-cnet.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-cnet.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-individual-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-individual-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/webauthn_iframe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/two-factor.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/password.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/update-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-reset-password.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-temp-password.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/update-temp-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verify-email.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verify-delete-recover.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.html","webpack://@bitwarden/web-vault/./src/app/guards/home.guard.ts","webpack://@bitwarden/web-vault/./src/app/organizations/components/access-selector/access-selector.models.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/utils/form-selection-list.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/multi-select/multi-select.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/multi-select/multi-select.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/components/access-selector/user-type.pipe.ts","webpack://@bitwarden/web-vault/./src/app/organizations/components/access-selector/access-selector.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/components/access-selector/access-selector.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/components/access-selector/access-selector.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/selection-read-only.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collection-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collection-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/org-upgrade-dialog/org-upgrade-dialog.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/org-upgrade-dialog/org-upgrade-dialog.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/group.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-confirm.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-restore-revoke.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-restore-revoke.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/reset-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-update.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-invite.request.ts","webpack://@bitwarden/web-vault/./src/app/components/nested-checkbox.component.html","webpack://@bitwarden/web-vault/./src/app/components/nested-checkbox.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-update-groups.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/people.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/people.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/shared/pipes/pipes.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/shared/vault.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/shared/vault-shared.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-filter/vault-filter.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/models/vault-filter.model.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.html","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/attachments.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.html","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/collections.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/vault-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/collection-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/collection-filter/collection-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/collection-filter/collection-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/folder-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/folder-filter/folder-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/folder-filter/folder-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/status-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/status-filter/status-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/status-filter/status-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/type-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/type-filter/type-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/type-filter/type-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/organization-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/enroll-master-password-reset.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/enroll-master-password-reset.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/link-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/link-sso.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-options.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-options.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-filter/vault-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/vault-items.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/ellipsis.pipe.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-name-badge.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-name-badge.component.html","webpack://@bitwarden/web-vault/./src/app/vault/shared/pipes/get-organization-name.pipe.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-items.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-items.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-items.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-delete.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-move.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-move.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-restore.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/types/checkable.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-restore.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-actions.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-actions.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/organization-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/shared-organization.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/organization.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/planSponsorshipType.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/accept-family-sponsorship.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/accept-family-sponsorship.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization/organization-sponsorship-redeem.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/send-access.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send-access.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/send-access.request.ts","webpack://@bitwarden/web-vault/./src/app/send/access.component.html","webpack://@bitwarden/web-vault/./src/app/send/access.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/send.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.html","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/send.component.html","webpack://@bitwarden/web-vault/./src/app/send/send.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.html","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/email-token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/email.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-profile.request.ts","webpack://@bitwarden/web-vault/./src/app/components/selectable-avatar.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-avatar.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-avatar.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.html","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-domains.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.html","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/emergencyAccessStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/emergencyAccessType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergency-access-confirm.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergency-access-invite.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergency-access-update.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergency-access-password.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.html","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/preferences.component.html","webpack://@bitwarden/web-vault/./src/app/settings/preferences.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/folder-with-id.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/send-with-id.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-key.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/kdf.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security-keys.component.html","webpack://@bitwarden/web-vault/./src/app/settings/security-keys.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security.component.html","webpack://@bitwarden/web-vault/./src/app/settings/security.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/notAllowedValueAsync.validator.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/billing-history-view.component.html","webpack://@bitwarden/web-vault/./src/app/settings/billing-history-view.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.html","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/subscription-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/generator.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/password-generator-history.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/select-copy.directive.ts","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.html","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.html","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.html","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/share.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault.module.ts","webpack://@bitwarden/web-vault/./src/app/oss-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/shared/guards/has-premium.guard.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/breach-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/breach-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-breach.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-exposed-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-inactive-two-factor.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-reused-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-unsecured-websites.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-weak-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports.ts","webpack://@bitwarden/web-vault/./src/app/reports/shared/reports-shared.module.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reports-home.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reports-home.component.html","webpack://@bitwarden/web-vault/./src/app/reports/reports-layout.component.html","webpack://@bitwarden/web-vault/./src/app/reports/reports-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports.module.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/cipher-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/exposed-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/inactive-two-factor-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reused-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/unsecured-websites-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/weak-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/shared/models/report-variant.ts","webpack://@bitwarden/web-vault/./src/app/reports/shared/report-card/report-card.component.html","webpack://@bitwarden/web-vault/./src/app/reports/shared/report-card/report-card.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/shared/report-list/report-list.component.html","webpack://@bitwarden/web-vault/./src/app/reports/shared/report-list/report-list.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/storage.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.html","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.html","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/transactionType.ts","webpack://@bitwarden/web-vault/./src/app/settings/billing-history.component.html","webpack://@bitwarden/web-vault/./src/app/settings/billing-history.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-create.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-upgrade.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-organization-create.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.html","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verify-bank.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/bit-pay-invoice.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/payment.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment-method.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment-method.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.html","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.html","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/two-factor-provider.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-base.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-duo.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-authenticator.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-email.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-web-authn-delete.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-web-authn.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-yubio-otp.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.html","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.html","webpack://@bitwarden/web-vault/./src/app/shared/loose-components.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/async-actions/async-actions.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/avatar/avatar.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon-button/icon-button.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/dialog.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/link/link.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/navigation/navigation.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/table/table.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tabs.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/color-password/color-password.module.ts","webpack://@bitwarden/web-vault/./src/app/shared/locales.ts","webpack://@bitwarden/web-vault/./src/app/shared/shared.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/true-false-value.directive.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.html","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-badge.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/vault-filter-shared.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/vault-filter.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.module.ts","webpack://@bitwarden/web-vault/./src/utils/flags.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/account/account.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/config-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/event/event-upload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/notifications.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/settings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/sync/syncNotifier.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/userVerification/userVerification-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/accountFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/globalStateFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/stateFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/stateVersion.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/global-state.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-avatar.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/notificationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/notification.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/anonymousHub.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/device.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identity-token/token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identity-token/user-api-token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/api-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/attachment-upload-data.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/auth-request.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/authentication/register.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billing.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billing-history.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billing-payment.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/breach-account.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/selection-read-only.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/collection.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/device-verification.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/global-domain.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/domains.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/event.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/group.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identity-captcha.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identity-token.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identity-two-factor.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/key-connector-user-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-connection.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-export.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-sponsorship-sync-status.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profile-organization.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profile-provider-organization.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profile-provider.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profile.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/payment.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/plan.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/prelogin.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider-organization.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/responses/organization-user-bulk-public-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider-user-bulk-public-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider-user-bulk.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider-user.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/send-access.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/send-file-download-data.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/send.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/send-file-upload-data.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sso-pre-validate.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/subscription.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/folder.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sync.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/tax-info.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/tax-rate.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-authenticator.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-duo.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-email.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-provider.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-recover.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-web-authn.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-yubi-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/user-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/audit.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/throttle.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identity-token/password-token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/auth-result.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/logIn.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/passwordLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/passwordlessLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identity-token/sso-token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/ssoLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/user-api-login.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/prelogin.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/sequentialize.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sorted-ciphers-cache.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-bulk-move.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-bulk-restore.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-bulk-share.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-partial.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-share.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cipher.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/server-config.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/server-config.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/wordlist.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encrypted-organization-key.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/crypto.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encrypted-object.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/encrypt.service.implementation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/get-class-initializer.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/multithread-encrypt.service.implementation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/event.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/event.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/fileUploadType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/azureFileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/bitwardenFileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/account/set-key-connector-key.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/key-connector-user-key.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/login.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/responses/organization-user.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/responses/organization-user-bulk.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization-user/requests/organization-user-bulk.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/ssoEnums.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-api-key-information.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-auto-enroll-status.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/keys.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-keys.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-subscription.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/sso-config.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization/organization-sso.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/password-generator-policy-options.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/reset-password-policy-options.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/providerUserStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/providerUserType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/provider.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/search.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/token.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/stateMigration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/organization.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/sync/sync.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/totp.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/account/verify-otp.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/email-forwarders/anon-addy-forwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/email-forwarders/duck-duck-go-forwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/email-forwarders/fastmail-forwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/email-forwarders/firefox-relay-forwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/email-forwarders/forwarder-options.ts","webpack://@bitwarden/web-vault/../../libs/common/src/email-forwarders/simple-login-forwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/usernameGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/decrypt-parameters.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/themeBuilder.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/theming.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/jslib-services.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/appId.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/auth.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/folder/folder.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/folder/folder-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/account/account-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/account/account.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/account/avatar-update.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/environment.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/fileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/settings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/vaultTimeout/vaultTimeoutSettings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/vaultTimeout/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/export.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/notifications.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/webCryptoFunction.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/event/event-upload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/event/event-collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/policy/policy.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/policy/policy-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/send.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/keyConnector.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/userVerification/userVerification.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization/organization.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization-user/organization-user.service.implementation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/provider.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/formValidationErrors.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/userVerification/userVerification-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization/organization-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/sync/syncNotifier.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/config.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/config/config.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/config/config-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/validation.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/memoryStorage.service.ts","webpack://@bitwarden/web-vault/./src/app/core/broadcaster-messaging.service.ts","webpack://@bitwarden/web-vault/./src/app/core/html-storage.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/container.service.ts","webpack://@bitwarden/web-vault/./src/app/core/init.service.ts","webpack://@bitwarden/web-vault/./src/app/core/modal.service.ts","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.html","webpack://@bitwarden/web-vault/./src/app/core/password-reprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileDownload/fileDownloadBuilder.ts","webpack://@bitwarden/web-vault/./src/app/core/web-file-download.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/clientType.ts","webpack://@bitwarden/web-vault/./src/app/core/web-platform-utils.service.ts","webpack://@bitwarden/web-vault/./src/app/core/core.module.ts","webpack://@bitwarden/web-vault/./src/app/core/state/global-state.ts","webpack://@bitwarden/web-vault/./src/app/core/i18n.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/i18n.service.ts","webpack://@bitwarden/web-vault/./src/app/core/state-migration.service.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login/login.module.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.module.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/organization-manage.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/organization-user.module.ts","webpack://@bitwarden/web-vault/./src/app/oss.module.ts","webpack://@bitwarden/web-vault/./src/app/wildcard-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-add-organization.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/services/webProvider.service.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/add-organization.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/add-organization.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/guards/provider-permissions.guard.ts","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.html","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/clients.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/clients.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/create-organization.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/create-organization.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-accept.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/accept-provider.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/accept-provider.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/events.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/events.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/manage.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/manage.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-bulk.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-confirm.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-bulk-confirm.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-invite.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-update.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/user-add-edit.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/user-add-edit.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/people.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/people.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-layout.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-layout.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-update.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/account.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/account.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/settings.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup-provider.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup-provider.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-setup.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-routing.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/app.component.ts","webpack://@bitwarden/web-vault/./src/app/app.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/disable-personal-vault-export.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/disable-personal-vault-export.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/maximum-vault-timeout.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/maximum-vault-timeout.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/scim-config.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/scim-config.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/scim.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/scim.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization/organization-sso.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sso-config.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/view.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/input-strip-spaces.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/copy-click.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/launch-click.directive.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/base-cva.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-checkbox.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-checkbox.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/sso.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/sso.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/organizations-routing.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/organizations.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/main.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/callout.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/callout.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/fallback-src.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/icon.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/icon.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/modal.ref.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/a11y-title.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/api-action.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/autofocus.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/input-verbatim.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/stop-click.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/stop-prop.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/auth.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/lock.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/unauth.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/toastr.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/credit-card-number.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/jslib.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/i18n.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/search.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/user-name.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/injection-tokens.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/dynamic-modal.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/modal-injector.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/modal.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/theming.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/models/dynamic-tree-node.model.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/services/vault-filter.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/account/account-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/account/avatar-update.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/anonymousHub.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/appId.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/audit.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/auth.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/cipher.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/crypto.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/cryptoFunction.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/encrypt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/environment.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/event/event-collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/export.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileDownload/fileDownload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/folder/folder-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/folder/folder.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/formValidationErrors.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/i18n.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/keyConnector.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/log.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/login.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/messaging.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/organization-user.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization/organization-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization/organization.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/platformUtils.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/policy/policy-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/policy/policy.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/provider.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/search.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/send.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/stateMigration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/storage.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/sync/sync.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/token.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/totp.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/twoFactor.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/userVerification/userVerification.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/usernameGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/validation.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/vaultTimeout/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/vaultTimeout/vaultTimeoutSettings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authenticationStatus.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authenticationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/cipherRepromptType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/cipherType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/deviceType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/encryptionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/eventType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/fieldType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/hashPurpose.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/htmlStorageLocation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/kdfType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/keySuffixOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/linkedIdType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/logLevelType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationApiKeyType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationConnectionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationUserStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationUserType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/paymentMethodType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/planType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/policyType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/productType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/secureNoteType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/sendType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/themeType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/twoFactorProviderType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/uriMatchType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/verificationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/flags.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/linkedFieldOption.decorator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/tree-node.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/serviceUtils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/utils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/card.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/field.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/identity.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/login-uri.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/login.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/permissions.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/secure-note.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/send-file.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/send-text.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/attachment.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/card.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/cipher.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/collection.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/event.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/field.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/folder.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/identity.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/login-uri.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/login.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/password-history.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/policy.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/provider.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/secure-note.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/send-file.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/send-text.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/send.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/server-config.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/account.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/attachment.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/card.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/cipher.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/collection.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/domain-base.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/enc-array-buffer.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/enc-string.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/environment-urls.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/field.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/folder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/generated-password-history.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/identity.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/login-uri.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/login.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/master-password-policy-options.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/organization.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/password.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/policy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/secure-note.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send-file.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send-text.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/symmetric-crypto-key.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/window-state.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/card.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/field.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/identity.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/login-uri.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/login.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/secure-note.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cipher.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cipher-with-ids.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/collection.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/collection-with-id.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/folder.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/folder-with-id.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-bulk-delete.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-collections.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-create.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-with-id.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/attachment.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/collection.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/folder.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identity-token/token-two-factor.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/keys.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-api-key.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-connection.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-keys.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-tax-info-update.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/secret-verification.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/send.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/tax-info-update.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/two-factor-email.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/attachment.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/base.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/password-history.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/cipher.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/emergency-access.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/error.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/list.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/policy.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/attachment.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/card.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/cipher.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/collection.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/field.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/folder.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/identity.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/item.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/login-uri.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/login.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/password-history.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/secure-note.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/send-file.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/send-text.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/send.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/consoleLog.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/initializer-key.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/storageLocation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/state.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/twoFactor.service.ts","webpack://@bitwarden/web-vault/../../libs/components/src/avatar/avatar.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge/badge.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge/badge.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/color-password/color-password.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/dialog.service.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/directives/dialog-title-container.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/simple-dialog/simple-dialog.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/simple-dialog/simple-dialog.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-control/hint.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-control/label.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/error-summary.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field-control.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/error.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-control/form-control.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/input/input.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/multi-select/multi-select.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/password-input-toggle.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/prefix.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/suffix.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon-button/icon-button.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon-button/icon-button.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icons/search.ts","webpack://@bitwarden/web-vault/../../libs/components/src/input/input.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/link/link.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-divider.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-divider.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-item.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-trigger-for.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/shared/button-like.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/components/src/shared/i18n.pipe.ts","webpack://@bitwarden/web-vault/../../libs/components/src/shared/shared.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/table/cell.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/table/row.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/table/table.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/table/table.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/shared/tab-header.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/shared/tab-list-container.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/shared/tab-list-item.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-nav-bar/tab-link.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-nav-bar/tab-link.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-nav-bar/tab-nav-bar.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-nav-bar/tab-nav-bar.component.html","webpack://@bitwarden/web-vault/webpack/bootstrap","webpack://@bitwarden/web-vault/webpack/runtime/compat get default export","webpack://@bitwarden/web-vault/webpack/runtime/define property getters","webpack://@bitwarden/web-vault/webpack/runtime/ensure chunk","webpack://@bitwarden/web-vault/webpack/runtime/get javascript chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/get mini-css chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/global","webpack://@bitwarden/web-vault/webpack/runtime/hasOwnProperty shorthand","webpack://@bitwarden/web-vault/webpack/runtime/make namespace object","webpack://@bitwarden/web-vault/webpack/runtime/node module decorator","webpack://@bitwarden/web-vault/webpack/runtime/publicPath","webpack://@bitwarden/web-vault/webpack/runtime/jsonp chunk loading","webpack://@bitwarden/web-vault/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"@bitwarden/web-vault:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { RegisterFormComponent } from \"./register-form.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [RegisterFormComponent],\n  exports: [RegisterFormComponent],\n})\nexport class RegisterFormModule {}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Directive()\nexport abstract class BaseAcceptComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  actionPromise: Promise<any>;\n\n  protected requiredParameters: string[] = [];\n  protected failedShortMessage = \"inviteAcceptFailedShort\";\n  protected failedMessage = \"inviteAcceptFailed\";\n\n  constructor(\n    protected router: Router,\n    protected platformUtilService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService\n  ) {}\n\n  abstract authedHandler(qParams: Params): Promise<void>;\n  abstract unauthedHandler(qParams: Params): Promise<void>;\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      let error = this.requiredParameters.some((e) => qParams?.[e] == null || qParams[e] === \"\");\n      let errorMessage: string = null;\n      if (!error) {\n        this.authed = await this.stateService.getIsAuthenticated();\n        this.email = qParams.email;\n\n        if (this.authed) {\n          try {\n            await this.authedHandler(qParams);\n          } catch (e) {\n            error = true;\n            errorMessage = e.message;\n          }\n        } else {\n          await this.unauthedHandler(qParams);\n        }\n      }\n\n      if (error) {\n        const message =\n          errorMessage != null\n            ? this.i18nService.t(this.failedShortMessage, errorMessage)\n            : this.i18nService.t(this.failedMessage);\n        this.platformUtilService.showToast(\"error\", null, message, { timeout: 10000 });\n        this.router.navigate([\"/\"]);\n      }\n\n      this.loading = false;\n    });\n  }\n}\n","import { EventSystemUser } from \"../../enums/event-system-user\";\nimport { EventType } from \"../../enums/eventType\";\n\nexport class EventView {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: EventType;\n  installationId: string;\n  systemUser: EventSystemUser;\n\n  constructor(data: Required<EventView>) {\n    this.message = data.message;\n    this.humanReadableMessage = data.humanReadableMessage;\n    this.appIcon = data.appIcon;\n    this.appName = data.appName;\n    this.userId = data.userId;\n    this.userName = data.userName;\n    this.userEmail = data.userEmail;\n    this.date = data.date;\n    this.ip = data.ip;\n    this.type = data.type;\n    this.installationId = data.installationId;\n    this.systemUser = data.systemUser;\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/event.response\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { EventView } from \"@bitwarden/common/models/view/event.view\";\n\nimport { EventService } from \"../core\";\n\n@Directive()\nexport abstract class BaseEventsComponent {\n  loading = true;\n  loaded = false;\n  events: EventView[];\n  start: string;\n  end: string;\n  dirtyDates = true;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  exportPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  abstract readonly exportFileName: string;\n\n  constructor(\n    protected eventService: EventService,\n    protected i18nService: I18nService,\n    protected exportService: ExportService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected fileDownloadService: FileDownloadService\n  ) {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n  }\n\n  async exportEvents() {\n    if (this.appApiPromiseUnfulfilled() || this.dirtyDates) {\n      return;\n    }\n\n    this.loading = true;\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    try {\n      this.exportPromise = this.export(dates[0], dates[1]);\n\n      await this.exportPromise;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    this.exportPromise = null;\n    this.loading = false;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.appApiPromiseUnfulfilled()) {\n      return;\n    }\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    this.loading = true;\n    let events: EventView[] = [];\n    try {\n      const promise = this.loadAndParseEvents(\n        dates[0],\n        dates[1],\n        clearExisting ? null : this.continuationToken\n      );\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      const result = await promise;\n      this.continuationToken = result.continuationToken;\n      events = result.events;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.dirtyDates = false;\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n\n  protected abstract requestEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ): Promise<ListResponse<EventResponse>>;\n  protected abstract getUserName(r: EventResponse, userId: string): { name: string; email: string };\n\n  protected async loadAndParseEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ) {\n    const response = await this.requestEvents(startDate, endDate, continuationToken);\n\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user = this.getUserName(r, userId);\n        const userName = user != null ? user.name : this.i18nService.t(\"unknown\");\n\n        return new EventView({\n          message: eventInfo.message,\n          humanReadableMessage: eventInfo.humanReadableMessage,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: userName,\n          userEmail: user != null ? user.email : \"\",\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n          installationId: r.installationId,\n          systemUser: r.systemUser,\n        });\n      })\n    );\n    return { continuationToken: response.continuationToken, events: events };\n  }\n\n  protected parseDates() {\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return null;\n    }\n    return dates;\n  }\n\n  protected appApiPromiseUnfulfilled() {\n    return this.refreshPromise != null || this.morePromise != null || this.exportPromise != null;\n  }\n\n  private async export(start: string, end: string) {\n    let continuationToken = this.continuationToken;\n    let events = [].concat(this.events);\n\n    while (continuationToken != null) {\n      const result = await this.loadAndParseEvents(start, end, continuationToken);\n      continuationToken = result.continuationToken;\n      events = events.concat(result.events);\n    }\n\n    const data = await this.exportService.getEventExport(events);\n    const fileName = this.exportService.getFileName(this.exportFileName, \"csv\");\n    this.fileDownloadService.download({\n      fileName,\n      blobData: data,\n      blobOptions: { type: \"text/plain\" },\n    });\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-user-confirm\",\n  templateUrl: \"user-confirm.component.html\",\n})\nexport class UserConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() publicKey: Uint8Array;\n  @Output() onConfirmedUser = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      if (this.publicKey != null) {\n        const fingerprint = await this.cryptoService.getFingerprint(\n          this.userId,\n          this.publicKey.buffer\n        );\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    this.onConfirmedUser.emit();\n  }\n}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/abstractions/organization-user/responses\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { ProviderUserUserDetailsResponse } from \"@bitwarden/common/models/response/provider/provider-user.response\";\n\nimport { UserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\n\ntype StatusType = OrganizationUserStatusType | ProviderUserStatusType;\n\nconst MaxCheckedCount = 500;\n\n@Directive()\nexport abstract class BasePeopleComponent<\n  UserType extends ProviderUserUserDetailsResponse | OrganizationUserUserDetailsResponse\n> {\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  get allCount() {\n    return this.activeUsers != null ? this.activeUsers.length : 0;\n  }\n\n  get invitedCount() {\n    return this.statusMap.has(this.userStatusType.Invited)\n      ? this.statusMap.get(this.userStatusType.Invited).length\n      : 0;\n  }\n\n  get acceptedCount() {\n    return this.statusMap.has(this.userStatusType.Accepted)\n      ? this.statusMap.get(this.userStatusType.Accepted).length\n      : 0;\n  }\n\n  get confirmedCount() {\n    return this.statusMap.has(this.userStatusType.Confirmed)\n      ? this.statusMap.get(this.userStatusType.Confirmed).length\n      : 0;\n  }\n\n  get revokedCount() {\n    return this.statusMap.has(this.userStatusType.Revoked)\n      ? this.statusMap.get(this.userStatusType.Revoked).length\n      : 0;\n  }\n\n  get showConfirmUsers(): boolean {\n    return (\n      this.activeUsers != null &&\n      this.statusMap != null &&\n      this.activeUsers.length > 1 &&\n      this.confirmedCount > 0 &&\n      this.confirmedCount < 3 &&\n      this.acceptedCount > 0\n    );\n  }\n\n  get showBulkConfirmUsers(): boolean {\n    return this.acceptedCount > 0;\n  }\n\n  abstract userType: typeof OrganizationUserType | typeof ProviderUserType;\n  abstract userStatusType: typeof OrganizationUserStatusType | typeof ProviderUserStatusType;\n\n  loading = true;\n  statusMap = new Map<StatusType, UserType[]>();\n  status: StatusType;\n  users: UserType[] = [];\n  pagedUsers: UserType[] = [];\n  searchText: string;\n  actionPromise: Promise<void>;\n\n  protected allUsers: UserType[] = [];\n  protected activeUsers: UserType[] = [];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedUsersCount = 0;\n\n  constructor(\n    protected apiService: ApiService,\n    private searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cryptoService: CryptoService,\n    protected validationService: ValidationService,\n    protected modalService: ModalService,\n    private logService: LogService,\n    private searchPipe: SearchPipe,\n    protected userNamePipe: UserNamePipe,\n    protected stateService: StateService\n  ) {}\n\n  abstract edit(user: UserType): void;\n  abstract getUsers(): Promise<ListResponse<UserType>>;\n  abstract deleteUser(id: string): Promise<void>;\n  abstract revokeUser(id: string): Promise<void>;\n  abstract restoreUser(id: string): Promise<void>;\n  abstract reinviteUser(id: string): Promise<void>;\n  abstract confirmUser(user: UserType, publicKey: Uint8Array): Promise<void>;\n\n  async load() {\n    const response = await this.getUsers();\n    this.statusMap.clear();\n    this.activeUsers = [];\n    for (const status of Utils.iterateEnum(this.userStatusType)) {\n      this.statusMap.set(status, []);\n    }\n\n    this.allUsers = response.data != null && response.data.length > 0 ? response.data : [];\n    this.allUsers.sort(\n      Utils.getSortFunction<ProviderUserUserDetailsResponse | OrganizationUserUserDetailsResponse>(\n        this.i18nService,\n        \"email\"\n      )\n    );\n    this.allUsers.forEach((u) => {\n      if (!this.statusMap.has(u.status)) {\n        this.statusMap.set(u.status, [u]);\n      } else {\n        this.statusMap.get(u.status).push(u);\n      }\n      if (u.status !== this.userStatusType.Revoked) {\n        this.activeUsers.push(u);\n      }\n    });\n    this.filter(this.status);\n    this.loading = false;\n  }\n\n  filter(status: StatusType) {\n    this.status = status;\n    if (this.status != null) {\n      this.users = this.statusMap.get(this.status);\n    } else {\n      this.users = this.activeUsers;\n    }\n    // Reset checkbox selecton\n    this.selectAll(false);\n    this.resetPaging();\n  }\n\n  loadMore() {\n    if (!this.users || this.users.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedUsers.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedUsersCount > this.pageSize) {\n      pagedSize = this.pagedUsersCount;\n    }\n    if (this.users.length > pagedLength) {\n      this.pagedUsers = this.pagedUsers.concat(\n        this.users.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedUsersCount = this.pagedUsers.length;\n    this.didScroll = this.pagedUsers.length > this.pageSize;\n  }\n\n  checkUser(user: OrganizationUserUserDetailsResponse, select?: boolean) {\n    (user as any).checked = select == null ? !(user as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n\n    const filteredUsers = this.searchPipe.transform(\n      this.users,\n      this.searchText,\n      \"name\",\n      \"email\",\n      \"id\"\n    );\n\n    const selectCount =\n      select && filteredUsers.length > MaxCheckedCount ? MaxCheckedCount : filteredUsers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkUser(filteredUsers[i], select);\n    }\n  }\n\n  async resetPaging() {\n    this.pagedUsers = [];\n    this.loadMore();\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  protected async removeUserConfirmationDialog(user: UserType) {\n    return this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.userNamePipe.transform(user),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n  }\n\n  async remove(user: UserType) {\n    const confirmed = await this.removeUserConfirmationDialog(user);\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.deleteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(user))\n      );\n      this.removeUser(user);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async revoke(user: UserType) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.revokeWarningMessage(),\n      this.i18nService.t(\"revokeUserId\", this.userNamePipe.transform(user)),\n      this.i18nService.t(\"revokeAccess\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.revokeUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"revokedUserId\", this.userNamePipe.transform(user))\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async restore(user: UserType) {\n    this.actionPromise = this.restoreUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"restoredUserId\", this.userNamePipe.transform(user))\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async reinvite(user: UserType) {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    this.actionPromise = this.reinviteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"hasBeenReinvited\", this.userNamePipe.transform(user))\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async confirm(user: UserType) {\n    function updateUser(self: BasePeopleComponent<UserType>) {\n      user.status = self.userStatusType.Confirmed;\n      const mapIndex = self.statusMap.get(self.userStatusType.Accepted).indexOf(user);\n      if (mapIndex > -1) {\n        self.statusMap.get(self.userStatusType.Accepted).splice(mapIndex, 1);\n        self.statusMap.get(self.userStatusType.Confirmed).push(user);\n      }\n    }\n\n    const confirmUser = async (publicKey: Uint8Array) => {\n      try {\n        this.actionPromise = this.confirmUser(user, publicKey);\n        await this.actionPromise;\n        updateUser(this);\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(user))\n        );\n      } catch (e) {\n        this.validationService.showError(e);\n        throw e;\n      } finally {\n        this.actionPromise = null;\n      }\n    };\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(user.userId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n      if (autoConfirm == null || !autoConfirm) {\n        const [modal] = await this.modalService.openViewRef(\n          UserConfirmComponent,\n          this.confirmModalRef,\n          (comp) => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.userId = user != null ? user.userId : null;\n            comp.publicKey = publicKey;\n            // eslint-disable-next-line rxjs/no-async-subscribe\n            comp.onConfirmedUser.subscribe(async () => {\n              try {\n                comp.formPromise = confirmUser(publicKey);\n                await comp.formPromise;\n                modal.close();\n              } catch (e) {\n                this.logService.error(e);\n              }\n            });\n          }\n        );\n        return;\n      }\n\n      try {\n        const fingerprint = await this.cryptoService.getFingerprint(user.userId, publicKey.buffer);\n        this.logService.info(`User's fingerprint: ${fingerprint.join(\"-\")}`);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      await confirmUser(publicKey);\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.users && this.users.length > this.pageSize;\n  }\n\n  protected revokeWarningMessage(): string {\n    return this.i18nService.t(\"revokeUserConfirmation\");\n  }\n\n  protected getCheckedUsers() {\n    return this.users.filter((u) => (u as any).checked);\n  }\n\n  protected removeUser(user: UserType) {\n    let index = this.users.indexOf(user);\n    if (index > -1) {\n      this.users.splice(index, 1);\n      this.resetPaging();\n    }\n\n    index = this.allUsers.indexOf(user);\n    if (index > -1) {\n      this.allUsers.splice(index, 1);\n    }\n\n    if (this.statusMap.has(user.status)) {\n      index = this.statusMap.get(user.status).indexOf(user);\n      if (index > -1) {\n        this.statusMap.get(user.status).splice(index, 1);\n      }\n    }\n  }\n}\n","import { Component, Input, OnDestroy } from \"@angular/core\";\nimport { Observable, Subject } from \"rxjs\";\n\nimport { AvatarUpdateService } from \"@bitwarden/common/abstractions/account/avatar-update.service\";\ntype SizeTypes = \"xlarge\" | \"large\" | \"default\" | \"small\" | \"xsmall\";\n@Component({\n  selector: \"dynamic-avatar\",\n  template: `<span [title]=\"title\">\n    <bit-avatar\n      appStopClick\n      [text]=\"text\"\n      [size]=\"size\"\n      [color]=\"color$ | async\"\n      [border]=\"border\"\n      [id]=\"id\"\n      [title]=\"title\"\n    >\n    </bit-avatar>\n  </span>`,\n})\nexport class DynamicAvatarComponent implements OnDestroy {\n  @Input() border = false;\n  @Input() id: string;\n  @Input() text: string;\n  @Input() title: string;\n  @Input() size: SizeTypes = \"default\";\n  color$: Observable<string | null>;\n  private destroy$ = new Subject<void>();\n\n  constructor(private accountUpdateService: AvatarUpdateService) {\n    if (this.text) {\n      this.text = this.text.toUpperCase();\n    }\n    this.color$ = this.accountUpdateService.avatarUpdate$;\n  }\n\n  async ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { Directive, OnInit, TemplateRef, ViewContainerRef } from \"@angular/core\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n/**\n * Hides the element if the user has premium.\n */\n@Directive({\n  selector: \"[appNotPremium]\",\n})\nexport class NotPremiumDirective implements OnInit {\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    const premium = await this.stateService.getCanAccessPremium();\n\n    if (premium) {\n      this.viewContainer.clear();\n    } else {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\n@Component({\n  selector: \"app-premium-badge\",\n  template: `\n    <button type=\"button\" *appNotPremium bitBadge badgeType=\"success\" (click)=\"premiumRequired()\">\n      {{ \"premium\" | i18n }}\n    </button>\n  `,\n})\nexport class PremiumBadgeComponent {\n  constructor(private messagingService: MessagingService) {}\n\n  premiumRequired() {\n    this.messagingService.send(\"premiumRequired\");\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, FormControl } from \"@angular/forms\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Collects the user's master password, or if they are using Key Connector, prompts for an OTP via email.\n * This is exposed to the parent component via the ControlValueAccessor interface (e.g. bind it to a FormControl).\n * Use UserVerificationService to verify the user's input.\n */\n@Directive({\n  selector: \"app-user-verification\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class UserVerificationComponent implements ControlValueAccessor, OnInit {\n  usesKeyConnector = false;\n  disableRequestOTP = false;\n  sentCode = false;\n\n  secret = new FormControl(\"\");\n\n  private onChange: (value: Verification) => void;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async ngOnInit() {\n    this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.processChanges(this.secret.value);\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.secret.valueChanges.subscribe((secret: string) => this.processChanges(secret));\n  }\n\n  async requestOTP() {\n    if (this.usesKeyConnector) {\n      this.disableRequestOTP = true;\n      try {\n        await this.userVerificationService.requestOTP();\n        this.sentCode = true;\n      } finally {\n        this.disableRequestOTP = false;\n      }\n    }\n  }\n\n  writeValue(obj: any): void {\n    this.secret.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Not implemented\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disableRequestOTP = isDisabled;\n    if (isDisabled) {\n      this.secret.disable();\n    } else {\n      this.secret.enable();\n    }\n  }\n\n  private processChanges(secret: string) {\n    if (this.onChange == null) {\n      return;\n    }\n\n    this.onChange({\n      type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n      secret: Utils.isNullOrWhitespace(secret) ? null : secret,\n    });\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n  <input\n    id=\"masterPassword\"\n    type=\"password\"\n    name=\"MasterPasswordHash\"\n    class=\"form-control\"\n    [formControl]=\"secret\"\n    required\n    appAutofocus\n    appInputVerbatim\n  />\n  <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"form-group\">\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n    <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { UserVerificationComponent as BaseComponent } from \"@bitwarden/angular/components/user-verification.component\";\n\n@Component({\n  selector: \"app-user-verification\",\n  templateUrl: \"user-verification.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UserVerificationComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class UserVerificationComponent extends BaseComponent {}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { EventResponse } from \"@bitwarden/common/models/response/event.response\";\n\n@Injectable()\nexport class EventService {\n  private policies: Policy[];\n\n  constructor(private i18nService: I18nService, policyService: PolicyService) {\n    policyService.policies$.subscribe((policies) => {\n      this.policies = policies;\n    });\n  }\n\n  getDefaultDateFilters() {\n    const d = new Date();\n    const end = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59);\n    d.setDate(d.getDate() - 30);\n    const start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0);\n    return [this.toDateTimeLocalString(start), this.toDateTimeLocalString(end)];\n  }\n\n  formatDateFilters(filterStart: string, filterEnd: string) {\n    const start: Date = new Date(filterStart);\n    const end: Date = new Date(filterEnd + \":59.999\");\n    if (isNaN(start.getTime()) || isNaN(end.getTime()) || end < start) {\n      throw new Error(\"Invalid date range.\");\n    }\n    return [start.toISOString(), end.toISOString()];\n  }\n\n  async getEventInfo(ev: EventResponse, options = new EventOptions()): Promise<EventInfo> {\n    const appInfo = this.getAppInfo(ev.deviceType);\n    const { message, humanReadableMessage } = await this.getEventMessage(ev, options);\n    return {\n      message: message,\n      humanReadableMessage: humanReadableMessage,\n      appIcon: appInfo[0],\n      appName: appInfo[1],\n    };\n  }\n\n  private async getEventMessage(ev: EventResponse, options: EventOptions) {\n    let msg = \"\";\n    let humanReadableMsg = \"\";\n    switch (ev.type) {\n      // User\n      case EventType.User_LoggedIn:\n        msg = humanReadableMsg = this.i18nService.t(\"loggedIn\");\n        break;\n      case EventType.User_ChangedPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"changedPassword\");\n        break;\n      case EventType.User_Updated2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledUpdated2fa\");\n        break;\n      case EventType.User_Disabled2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"disabled2fa\");\n        break;\n      case EventType.User_Recovered2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"recovered2fa\");\n        break;\n      case EventType.User_FailedLogIn:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin\");\n        break;\n      case EventType.User_FailedLogIn2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin2fa\");\n        break;\n      case EventType.User_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedVault\");\n        break;\n      case EventType.User_UpdatedTempPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"updatedMasterPassword\");\n        break;\n      case EventType.User_MigratedKeyToKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"migratedKeyConnector\");\n        break;\n      // Cipher\n      case EventType.Cipher_Created:\n        msg = this.i18nService.t(\"createdItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"createdItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Updated:\n        msg = this.i18nService.t(\"editedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"editedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Deleted:\n        msg = this.i18nService.t(\"permanentlyDeletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"permanentlyDeletedItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_SoftDeleted:\n        msg = this.i18nService.t(\"deletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"deletedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Restored:\n        msg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        break;\n      case EventType.Cipher_AttachmentCreated:\n        msg = this.i18nService.t(\"createdAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"createdAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_AttachmentDeleted:\n        msg = this.i18nService.t(\"deletedAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_Shared:\n        msg = this.i18nService.t(\"movedItemIdToOrg\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"movedItemIdToOrg\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientViewed:\n        msg = this.i18nService.t(\"viewedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledPasswordVisible:\n        msg = this.i18nService.t(\"viewedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledHiddenFieldVisible:\n        msg = this.i18nService.t(\"viewedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientToggledCardNumberVisible:\n        msg = this.i18nService.t(\"viewedCardNumberItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedCardNumberItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientToggledCardCodeVisible:\n        msg = this.i18nService.t(\"viewedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedHiddenField:\n        msg = this.i18nService.t(\"copiedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedPassword:\n        msg = this.i18nService.t(\"copiedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"copiedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientCopiedCardCode:\n        msg = this.i18nService.t(\"copiedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientAutofilled:\n        msg = this.i18nService.t(\"autofilledItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"autofilledItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_UpdatedCollections:\n        msg = this.i18nService.t(\"editedCollectionsForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionsForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      // Collection\n      case EventType.Collection_Created:\n        msg = this.i18nService.t(\"createdCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Updated:\n        msg = this.i18nService.t(\"editedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Deleted:\n        msg = this.i18nService.t(\"deletedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      // Group\n      case EventType.Group_Created:\n        msg = this.i18nService.t(\"createdGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"createdGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Updated:\n        msg = this.i18nService.t(\"editedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Deleted:\n        msg = this.i18nService.t(\"deletedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"deletedGroupId\", this.getShortId(ev.groupId));\n        break;\n      // Org user\n      case EventType.OrganizationUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"invitedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UpdatedGroups:\n        msg = this.i18nService.t(\"editedGroupsForUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedGroupsForUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UnlinkedSso:\n        msg = this.i18nService.t(\"unlinkedSsoUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"unlinkedSsoUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Enroll:\n        msg = this.i18nService.t(\"eventEnrollPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventEnrollPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Withdraw:\n        msg = this.i18nService.t(\"eventWithdrawPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventWithdrawPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_AdminResetPassword:\n        msg = this.i18nService.t(\"eventAdminPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventAdminPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetSsoLink:\n        msg = this.i18nService.t(\"eventResetSsoLink\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventResetSsoLink\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_FirstSsoLogin:\n        msg = this.i18nService.t(\"firstSsoLogin\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"firstSsoLogin\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Revoked:\n        msg = this.i18nService.t(\"revokedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"revokedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Restored:\n        msg = this.i18nService.t(\"restoredUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"restoredUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      // Org\n      case EventType.Organization_Updated:\n        msg = humanReadableMsg = this.i18nService.t(\"editedOrgSettings\");\n        break;\n      case EventType.Organization_PurgedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"purgedOrganizationVault\");\n        break;\n      case EventType.Organization_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedOrganizationVault\");\n        break;\n      case EventType.Organization_VaultAccessed:\n        msg = humanReadableMsg = this.i18nService.t(\"vaultAccessedByProvider\");\n        break;\n      case EventType.Organization_EnabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledSso\");\n        break;\n      case EventType.Organization_DisabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledSso\");\n        break;\n      case EventType.Organization_EnabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledKeyConnector\");\n        break;\n      case EventType.Organization_DisabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledKeyConnector\");\n        break;\n      case EventType.Organization_SponsorshipsSynced:\n        msg = humanReadableMsg = this.i18nService.t(\"sponsorshipsSynced\");\n        break;\n      // Policies\n      case EventType.Policy_Updated: {\n        msg = this.i18nService.t(\"modifiedPolicyId\", this.formatPolicyId(ev));\n\n        const policy = this.policies.filter((p) => p.id === ev.policyId)[0];\n        let p1 = this.getShortId(ev.policyId);\n        if (policy != null) {\n          p1 = PolicyType[policy.type];\n        }\n\n        humanReadableMsg = this.i18nService.t(\"modifiedPolicyId\", p1);\n        break;\n      }\n      // Provider users:\n      case EventType.ProviderUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"invitedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.providerUserId)\n        );\n        break;\n      case EventType.ProviderUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"removedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderOrganization_Created:\n        msg = this.i18nService.t(\"createdOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Added:\n        msg = this.i18nService.t(\"addedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"addedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Removed:\n        msg = this.i18nService.t(\"removedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_VaultAccessed:\n        msg = this.i18nService.t(\"accessedClientVault\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"accessedClientVault\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      default:\n        break;\n    }\n    return {\n      message: msg === \"\" ? null : msg,\n      humanReadableMessage: humanReadableMsg === \"\" ? null : humanReadableMsg,\n    };\n  }\n\n  private getAppInfo(deviceType: DeviceType): [string, string] {\n    switch (deviceType) {\n      case DeviceType.Android:\n        return [\"bwi-android\", this.i18nService.t(\"mobile\") + \" - Android\"];\n      case DeviceType.iOS:\n        return [\"bwi-apple\", this.i18nService.t(\"mobile\") + \" - iOS\"];\n      case DeviceType.UWP:\n        return [\"bwi-windows\", this.i18nService.t(\"mobile\") + \" - Windows\"];\n      case DeviceType.ChromeExtension:\n        return [\"bwi-chrome\", this.i18nService.t(\"extension\") + \" - Chrome\"];\n      case DeviceType.FirefoxExtension:\n        return [\"bwi-firefox\", this.i18nService.t(\"extension\") + \" - Firefox\"];\n      case DeviceType.OperaExtension:\n        return [\"bwi-opera\", this.i18nService.t(\"extension\") + \" - Opera\"];\n      case DeviceType.EdgeExtension:\n        return [\"bwi-edge\", this.i18nService.t(\"extension\") + \" - Edge\"];\n      case DeviceType.VivaldiExtension:\n        return [\"bwi-puzzle\", this.i18nService.t(\"extension\") + \" - Vivaldi\"];\n      case DeviceType.SafariExtension:\n        return [\"bwi-safari\", this.i18nService.t(\"extension\") + \" - Safari\"];\n      case DeviceType.WindowsDesktop:\n        return [\"bwi-windows\", this.i18nService.t(\"desktop\") + \" - Windows\"];\n      case DeviceType.MacOsDesktop:\n        return [\"bwi-apple\", this.i18nService.t(\"desktop\") + \" - macOS\"];\n      case DeviceType.LinuxDesktop:\n        return [\"bwi-linux\", this.i18nService.t(\"desktop\") + \" - Linux\"];\n      case DeviceType.ChromeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Chrome\"];\n      case DeviceType.FirefoxBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Firefox\"];\n      case DeviceType.OperaBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Opera\"];\n      case DeviceType.SafariBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Safari\"];\n      case DeviceType.VivaldiBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Vivaldi\"];\n      case DeviceType.EdgeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Edge\"];\n      case DeviceType.IEBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - IE\"];\n      case DeviceType.UnknownBrowser:\n        return [\n          \"bwi-globe\",\n          this.i18nService.t(\"webVault\") + \" - \" + this.i18nService.t(\"unknown\"),\n        ];\n      default:\n        return [\"bwi-globe\", this.i18nService.t(\"unknown\")];\n    }\n  }\n\n  private formatCipherId(ev: EventResponse, options: EventOptions) {\n    const shortId = this.getShortId(ev.cipherId);\n    if (ev.organizationId == null || !options.cipherInfo) {\n      return \"<code>\" + shortId + \"</code>\";\n    }\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/vault?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.cipherId\n    );\n    return a.outerHTML;\n  }\n\n  private formatGroupId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.groupId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\"href\", \"#/organizations/\" + ev.organizationId + \"/groups?search=\" + shortId);\n    return a.outerHTML;\n  }\n\n  private formatCollectionId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.collectionId);\n    const a = this.makeAnchor(shortId);\n    // TODO: Update view/edit collection link after EC-14 is completed\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/collections?search=\" + shortId\n    );\n    return a.outerHTML;\n  }\n\n  private formatOrgUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.organizationUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/members?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.organizationUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/providers/\" +\n        ev.providerId +\n        \"/manage/people?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.providerUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderOrganizationId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerOrganizationId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\"href\", \"#/providers/\" + ev.providerId + \"/clients?search=\" + shortId);\n    return a.outerHTML;\n  }\n\n  private formatPolicyId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.policyId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/policies?policyId=\" + ev.policyId\n    );\n    return a.outerHTML;\n  }\n\n  private makeAnchor(shortId: string) {\n    const a = document.createElement(\"a\");\n    a.title = this.i18nService.t(\"view\");\n    a.innerHTML = \"<code>\" + shortId + \"</code>\";\n    return a;\n  }\n\n  private getShortId(id: string) {\n    return id?.substring(0, 8);\n  }\n\n  private toDateTimeLocalString(date: Date) {\n    return (\n      date.getFullYear() +\n      \"-\" +\n      this.pad(date.getMonth() + 1) +\n      \"-\" +\n      this.pad(date.getDate()) +\n      \"T\" +\n      this.pad(date.getHours()) +\n      \":\" +\n      this.pad(date.getMinutes())\n    );\n  }\n\n  private pad(num: number) {\n    const norm = Math.floor(Math.abs(num));\n    return (norm < 10 ? \"0\" : \"\") + norm;\n  }\n}\n\nexport class EventInfo {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n}\n\nexport class EventOptions {\n  cipherInfo = true;\n}\n","import { BasePolicy } from \"../organizations/policies\";\n\nexport class PolicyListService {\n  private policies: BasePolicy[] = [];\n\n  addPolicies(policies: BasePolicy[]) {\n    this.policies.push(...policies);\n  }\n\n  getPolicies(): BasePolicy[] {\n    return this.policies;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Title } from \"@angular/platform-browser\";\nimport { ActivatedRoute, NavigationEnd, Router } from \"@angular/router\";\nimport { filter } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Injectable()\nexport class RouterService {\n  private previousUrl: string = undefined;\n  private currentUrl: string = undefined;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title,\n    i18nService: I18nService\n  ) {\n    this.currentUrl = this.router.url;\n\n    router.events\n      .pipe(filter((e) => e instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => {\n        this.currentUrl = event.url;\n\n        let title = i18nService.t(\"pageTitle\", \"Bitwarden\");\n        let child = this.activatedRoute.firstChild;\n        while (child.firstChild) {\n          child = child.firstChild;\n        }\n\n        const titleId: string = child?.snapshot?.data?.titleId;\n        const rawTitle: string = child?.snapshot?.data?.title;\n        const updateUrl = !child?.snapshot?.data?.doNotSaveUrl ?? true;\n\n        if (titleId != null || rawTitle != null) {\n          const newTitle = rawTitle != null ? rawTitle : i18nService.t(titleId);\n          if (newTitle != null && newTitle !== \"\") {\n            title = newTitle + \" | \" + title;\n          }\n        }\n        this.titleService.setTitle(title);\n        if (updateUrl) {\n          this.setPreviousUrl(this.currentUrl);\n        }\n      });\n  }\n\n  getPreviousUrl() {\n    return this.previousUrl;\n  }\n\n  setPreviousUrl(url: string) {\n    this.previousUrl = url;\n  }\n}\n","import {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"@bitwarden/common/models/domain/account\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout: number = process.env.NODE_ENV === \"development\" ? null : 15;\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n  }\n}\n","import { Inject, Injectable } from \"@angular/core\";\n\nimport {\n  MEMORY_STORAGE,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n} from \"@bitwarden/angular/services/injection-tokens\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateMigrationService } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipher.data\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { FolderData } from \"@bitwarden/common/models/data/folder.data\";\nimport { SendData } from \"@bitwarden/common/models/data/send.data\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storage-options\";\nimport { StateService as BaseStateService } from \"@bitwarden/common/services/state.service\";\n\nimport { Account } from \"./account\";\nimport { GlobalState } from \"./global-state\";\n\n@Injectable()\nexport class StateService extends BaseStateService<GlobalState, Account> {\n  constructor(\n    storageService: AbstractStorageService,\n    @Inject(SECURE_STORAGE) secureStorageService: AbstractStorageService,\n    @Inject(MEMORY_STORAGE) memoryStorageService: AbstractStorageService,\n    logService: LogService,\n    stateMigrationService: StateMigrationService,\n    @Inject(STATE_FACTORY) stateFactory: StateFactory<GlobalState, Account>,\n    @Inject(STATE_SERVICE_USE_CACHE) useAccountCache = true\n  ) {\n    super(\n      storageService,\n      secureStorageService,\n      memoryStorageService,\n      logService,\n      stateMigrationService,\n      stateFactory,\n      useAccountCache\n    );\n  }\n\n  async addAccount(account: Account) {\n    // Apply web overrides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedCiphers(options);\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedCiphers(value, options);\n  }\n\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedCollections(options);\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedCollections(value, options);\n  }\n\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedFolders(options);\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedFolders(value, options);\n  }\n\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedSends(options);\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedSends(value, options);\n  }\n\n  override async getLastSync(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getLastSync(options);\n  }\n\n  override async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setLastSync(value, options);\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-footer\",\n  templateUrl: \"footer.component.html\",\n})\nexport class FooterComponent implements OnInit {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n  }\n}\n","<div class=\"container footer text-muted\">\n  <div class=\"row\">\n    <div class=\"col\">&copy; {{ year }} Bitwarden Inc.</div>\n    <div class=\"col text-center\"></div>\n    <div class=\"col text-right\">\n      {{ \"versionNumber\" | i18n: version }}\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-frontend-layout\",\n  templateUrl: \"frontend-layout.component.html\",\n})\nexport class FrontendLayoutComponent implements OnInit, OnDestroy {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n    document.body.classList.add(\"layout_frontend\");\n  }\n\n  ngOnDestroy() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<router-outlet></router-outlet>\n<div class=\"container my-5 text-muted text-center\">\n  &copy; {{ year }} Bitwarden Inc. <br />\n  {{ \"versionNumber\" | i18n: version }}\n</div>\n","<nav class=\"navbar navbar-expand navbar-dark\" [ngClass]=\"{ 'nav-background-alt': selfHosted }\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\" appA11yTitle=\"{{ 'pageTitle' | i18n: 'Bitwarden' }}\">\n      <i class=\"bwi bwi-shield\" aria-hidden=\"true\"></i>\n    </a>\n    <div class=\"collapse navbar-collapse\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/vault\">{{ \"vaults\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/sends\">{{ \"send\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/tools\">{{ \"tools\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/reports\">{{ \"reports\" | i18n }}</a>\n        </li>\n        <li\n          *ngIf=\"(organizations$ | async)?.length >= 1\"\n          class=\"nav-item\"\n          routerLinkActive=\"active\"\n        >\n          <a class=\"nav-link\" [routerLink]=\"['/organizations', (organizations$ | async)[0].id]\">{{\n            \"organizations\" | i18n\n          }}</a>\n        </li>\n        <ng-container *ngIf=\"providers.length >= 1\">\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length == 1\">\n            <a class=\"nav-link\" [routerLink]=\"['/providers', providers[0].id]\">{{\n              \"provider\" | i18n\n            }}</a>\n          </li>\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length > 1\">\n            <a class=\"nav-link\" routerLink=\"/providers\">{{ \"provider\" | i18n }}</a>\n          </li>\n        </ng-container>\n      </ul>\n    </div>\n    <product-switcher buttonType=\"light\"></product-switcher>\n    <ul class=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\">\n      <li>\n        <button\n          [bitMenuTriggerFor]=\"accountMenu\"\n          class=\"tw-border-0 tw-bg-transparent tw-text-alt2 tw-opacity-70 hover:tw-opacity-90\"\n        >\n          <dynamic-avatar [text]=\"name\" size=\"xsmall\" aria-hidden=\"true\"></dynamic-avatar>\n          <i class=\"bwi bwi-caret-down bwi-sm\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu class=\"dropdown-menu\" #accountMenu>\n          <div class=\"tw-flex tw-min-w-[200px] tw-max-w-[300px] tw-flex-col\">\n            <div\n              class=\"tw-flex tw-items-center tw-py-1 tw-px-4 tw-leading-tight tw-text-info\"\n              *ngIf=\"name\"\n              appStopProp\n            >\n              <dynamic-avatar [text]=\"name\" size=\"small\"></dynamic-avatar>\n              <div class=\"tw-ml-2 tw-block tw-overflow-hidden tw-whitespace-nowrap\">\n                <span>{{ \"loggedInAs\" | i18n }}</span>\n                <small class=\"tw-block tw-overflow-hidden tw-whitespace-nowrap tw-text-muted\">{{\n                  name\n                }}</small>\n              </div>\n            </div>\n            <bit-menu-divider></bit-menu-divider>\n            <a bitMenuItem routerLink=\"/settings/account\">\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"accountSettings\" | i18n }}\n            </a>\n            <a bitMenuItem href=\"https://bitwarden.com/help/\" target=\"_blank\" rel=\"noopener\">\n              <i class=\"bwi bwi-fw bwi-question-circle\" aria-hidden=\"true\"></i>\n              {{ \"getHelp\" | i18n }}\n            </a>\n            <a bitMenuItem href=\"https://bitwarden.com/download/\" target=\"_blank\" rel=\"noopener\">\n              <i class=\"bwi bwi-fw bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"getApps\" | i18n }}\n            </a>\n            <bit-menu-divider></bit-menu-divider>\n            <button bitMenuItem type=\"button\" (click)=\"lock()\">\n              <i class=\"bwi bwi-fw bwi-lock\" aria-hidden=\"true\"></i>\n              {{ \"lockNow\" | i18n }}\n            </button>\n            <button bitMenuItem type=\"button\" (click)=\"logOut()\">\n              <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </bit-menu>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, OnInit } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport {\n  canAccessAdmin,\n  isNotProviderUser,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"navbar.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class NavbarComponent implements OnInit {\n  selfHosted = false;\n  name: string;\n  email: string;\n  providers: Provider[] = [];\n  userId: string;\n  organizations$: Observable<Organization[]>;\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private providerService: ProviderService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService,\n    private i18nService: I18nService\n  ) {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.name = await this.tokenService.getName();\n    this.email = await this.tokenService.getEmail();\n    this.userId = await this.tokenService.getUserId();\n    if (this.name == null || this.name.trim() === \"\") {\n      this.name = this.email;\n    }\n\n    // Ensure providers and organizations are loaded\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n    this.providers = await this.providerService.getAll();\n\n    this.organizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter(isNotProviderUser)),\n      canAccessAdmin(this.i18nService)\n    );\n  }\n\n  lock() {\n    this.messagingService.send(\"lockVault\");\n  }\n\n  logOut() {\n    this.messagingService.send(\"logout\");\n  }\n}\n","<bit-menu #menu ariaRole=\"dialog\" [ariaLabel]=\"'switchProducts' | i18n\">\n  <div class=\"tw-px-4 tw-py-2\" *ngIf=\"products$ | async as products\">\n    <!-- Bento options -->\n    <!-- grid-template-columns is dynamic so we can collapse empty columns  -->\n    <section\n      [ngStyle]=\"{\n        '--num-products': products.bento.length,\n        'grid-template-columns': 'repeat(min(var(--num-products,1),3),auto)'\n      }\"\n      class=\"tw-grid tw-gap-2\"\n    >\n      <a\n        *ngFor=\"let product of products.bento\"\n        [routerLink]=\"product.appRoute\"\n        class=\"tw-group tw-flex tw-h-24 tw-w-28 tw-flex-col tw-items-center tw-justify-center tw-rounded tw-p-1 tw-text-primary-500 tw-outline-none hover:tw-bg-background-alt hover:tw-text-primary-700 hover:tw-no-underline focus-visible:!tw-ring-2 focus-visible:!tw-ring-primary-700\"\n        routerLinkActive=\"tw-font-bold tw-bg-primary-500 hover:tw-bg-primary-500 !tw-text-contrast tw-ring-offset-2\"\n        ariaCurrentWhenActive=\"page\"\n      >\n        <i class=\"bwi {{ product.icon }} tw-text-4xl !tw-m-0 !tw-mb-1\"></i>\n        <span class=\"tw-text-center tw-text-sm tw-leading-snug group-hover:tw-underline\">{{\n          product.name\n        }}</span>\n      </a>\n    </section>\n\n    <!-- Other options -->\n    <section\n      *ngIf=\"products.other.length > 0\"\n      class=\"tw-mt-4 tw-flex tw-w-full tw-flex-col tw-border-0 tw-border-t tw-border-solid tw-border-t-text-muted tw-p-2 tw-pb-0\"\n    >\n      <span class=\"tw-mb-1 tw-text-xs tw-text-muted\">{{ \"moreFromBitwarden\" | i18n }}</span>\n      <a *ngFor=\"let product of products.other\" bitLink [href]=\"product.marketingRoute\">\n        <span class=\"tw-font-normal\">\n          <i class=\"bwi {{ product.icon }} tw-m-0 !tw-mr-3\"></i>{{ product.name }}\n        </span>\n      </a>\n    </section>\n  </div>\n</bit-menu>\n","import { Component, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { combineLatest, map } from \"rxjs\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { MenuComponent } from \"@bitwarden/components\";\n\ntype ProductSwitcherItem = {\n  /**\n   * Displayed name\n   */\n  name: string;\n\n  /**\n   * Displayed icon\n   */\n  icon: string;\n\n  /**\n   * Route for items in the `bentoProducts$` section\n   */\n  appRoute?: string | any[];\n\n  /**\n   * Route for items in the `otherProducts$` section\n   */\n  marketingRoute?: string | any[];\n};\n\n@Component({\n  selector: \"product-switcher-content\",\n  templateUrl: \"./product-switcher-content.component.html\",\n})\nexport class ProductSwitcherContentComponent {\n  @ViewChild(\"menu\")\n  menu: MenuComponent;\n\n  protected products$ = combineLatest([\n    this.organizationService.organizations$,\n    this.route.paramMap,\n  ]).pipe(\n    map(([orgs, paramMap]) => {\n      const routeOrg = orgs.find((o) => o.id === paramMap.get(\"organizationId\"));\n      // If the active route org doesn't have access to SM, find the first org that does.\n      const smOrg = routeOrg?.canAccessSecretsManager\n        ? routeOrg\n        : orgs.find((o) => o.canAccessSecretsManager);\n\n      /**\n       * We can update this to the \"satisfies\" type upon upgrading to TypeScript 4.9\n       * https://devblogs.microsoft.com/typescript/announcing-typescript-4-9/#satisfies\n       */\n      const products: Record<\"pm\" | \"sm\" | \"orgs\", ProductSwitcherItem> = {\n        pm: {\n          name: \"Password Manager\",\n          icon: \"bwi-lock\",\n          appRoute: \"/vault\",\n          marketingRoute: \"https://bitwarden.com/products/personal/\",\n        },\n        sm: {\n          name: \"Secrets Manager Beta\",\n          icon: \"bwi-cli\",\n          appRoute: [\"/sm\", smOrg?.id],\n          // TODO: update marketing link\n          marketingRoute: \"#\",\n        },\n        orgs: {\n          name: \"Organizations\",\n          icon: \"bwi-business\",\n          marketingRoute: \"https://bitwarden.com/products/business/\",\n        },\n      };\n\n      const bento: ProductSwitcherItem[] = [products.pm];\n      const other: ProductSwitcherItem[] = [];\n\n      if (smOrg) {\n        bento.push(products.sm);\n      }\n\n      if (orgs.length === 0) {\n        other.push(products.orgs);\n      }\n\n      return {\n        bento,\n        other,\n      };\n    })\n  );\n\n  constructor(private organizationService: OrganizationService, private route: ActivatedRoute) {}\n}\n","<ng-template [ngIf]=\"isEnabled\">\n  <button\n    bitIconButton=\"bwi bwi-fw bwi-filter\"\n    [bitMenuTriggerFor]=\"content?.menu\"\n    [buttonType]=\"buttonType\"\n    [attr.aria-label]=\"'switchProducts' | i18n\"\n  ></button>\n  <product-switcher-content #content></product-switcher-content>\n</ng-template>\n","import { AfterViewInit, ChangeDetectorRef, Component, Input } from \"@angular/core\";\n\nimport { IconButtonType } from \"@bitwarden/components/src/icon-button/icon-button.component\";\n\nimport { flagEnabled } from \"../../../utils/flags\";\n\n@Component({\n  selector: \"product-switcher\",\n  templateUrl: \"./product-switcher.component.html\",\n})\nexport class ProductSwitcherComponent implements AfterViewInit {\n  protected isEnabled = flagEnabled(\"secretsManager\");\n\n  /**\n   * Passed to the product switcher's `bitIconButton`\n   */\n  @Input()\n  buttonType: IconButtonType = \"main\";\n\n  ngAfterViewInit() {\n    /**\n     * Resolves https://angular.io/errors/NG0100 [SM-403]\n     *\n     * Caused by `[bitMenuTriggerFor]=\"content?.menu\"` in template\n     */\n    this.changeDetector.detectChanges();\n  }\n\n  constructor(private changeDetector: ChangeDetectorRef) {}\n}\n","import { A11yModule } from \"@angular/cdk/a11y\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { I18nPipe } from \"@bitwarden/angular/pipes/i18n.pipe\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { ProductSwitcherContentComponent } from \"./product-switcher-content.component\";\nimport { ProductSwitcherComponent } from \"./product-switcher.component\";\n\n@NgModule({\n  imports: [SharedModule, A11yModule, RouterModule],\n  declarations: [ProductSwitcherComponent, ProductSwitcherContentComponent],\n  exports: [ProductSwitcherComponent],\n  providers: [I18nPipe],\n})\nexport class ProductSwitcherModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { OrganizationInformationComponent } from \"./organization-information.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [OrganizationInformationComponent],\n  exports: [OrganizationInformationComponent],\n})\nexport class OrganizationCreateModule {}\n","<form #form [formGroup]=\"formGroup\" *ngIf=\"nameOnly\">\n  <bit-form-field>\n    <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"name\" />\n  </bit-form-field>\n</form>\n<form #form [formGroup]=\"formGroup\" *ngIf=\"!nameOnly\">\n  <h2>{{ \"generalInformation\" | i18n }}</h2>\n  <div class=\"tw-flex tw-w-full tw-space-x-4\" *ngIf=\"createOrganization\">\n    <bit-form-field class=\"tw-w-1/2\">\n      <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n      <input bitInput type=\"text\" formControlName=\"name\" />\n    </bit-form-field>\n    <bit-form-field class=\"tw-w-1/2\">\n      <bit-label>{{ \"billingEmail\" | i18n }}</bit-label>\n      <input bitInput type=\"email\" formControlName=\"billingEmail\" />\n    </bit-form-field>\n    <bit-form-field class=\"tw-w-1/2\" *ngIf=\"isProvider\">\n      <bit-label>{{ \"clientOwnerEmail\" | i18n }}</bit-label>\n      <input bitInput type=\"email\" formControlName=\"clientOwnerEmail\" />\n    </bit-form-field>\n  </div>\n  <div *ngIf=\"!isProvider && !acceptingSponsorship\">\n    <input\n      type=\"checkbox\"\n      name=\"businessOwned\"\n      formControlName=\"businessOwned\"\n      (change)=\"changedBusinessOwned.emit()\"\n    />\n    <bit-label for=\"businessOwned\" class=\"tw-mb-3\">{{ \"accountOwnedBusiness\" | i18n }}</bit-label>\n    <div class=\"tw-mt-4\" *ngIf=\"formGroup.controls['businessOwned'].value\">\n      <bit-form-field class=\"tw-w-1/2\">\n        <bit-label>{{ \"businessName\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"businessName\" />\n      </bit-form-field>\n    </div>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { UntypedFormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-org-info\",\n  templateUrl: \"organization-information.component.html\",\n})\nexport class OrganizationInformationComponent {\n  @Input() nameOnly = false;\n  @Input() createOrganization = true;\n  @Input() isProvider = false;\n  @Input() acceptingSponsorship = false;\n  @Input() formGroup: UntypedFormGroup;\n  @Output() changedBusinessOwned = new EventEmitter<void>();\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport {\n  canAccessOrgAdmin,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OrganizationPermissionsGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private organizationService: OrganizationService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private syncService: SyncService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    // TODO: We need to fix this issue once and for all.\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n\n    const org = this.organizationService.get(route.params.organizationId);\n    if (org == null) {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    if (!org.isOwner && !org.enabled) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"organizationIsDisabled\")\n      );\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    const permissionsCallback: (organization: Organization) => boolean =\n      route.data?.organizationPermissions;\n    const hasPermissions = permissionsCallback == null || permissionsCallback(org);\n\n    if (!hasPermissions) {\n      // Handle linkable ciphers for organizations the user only has view access to\n      // https://bitwarden.atlassian.net/browse/EC-203\n      const cipherId =\n        state.root.queryParamMap.get(\"itemId\") || state.root.queryParamMap.get(\"cipherId\");\n      if (cipherId) {\n        return this.router.createUrlTree([\"/vault\"], {\n          queryParams: {\n            itemId: cipherId,\n          },\n        });\n      }\n\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"accessDenied\"));\n      return canAccessOrgAdmin(org)\n        ? this.router.createUrlTree([\"/organizations\", org.id])\n        : this.router.createUrlTree([\"/\"]);\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport {\n  canAccessOrgAdmin,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OrganizationRedirectGuard implements CanActivate {\n  constructor(private router: Router, private organizationService: OrganizationService) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const org = this.organizationService.get(route.params.organizationId);\n\n    const customRedirect = route.data?.autoRedirectCallback;\n    if (customRedirect) {\n      let redirectPath = customRedirect(org);\n      if (typeof redirectPath === \"string\") {\n        redirectPath = [redirectPath];\n      }\n      return this.router.createUrlTree([state.url, ...redirectPath]);\n    }\n\n    if (canAccessOrgAdmin(org)) {\n      return this.router.createUrlTree([\"/organizations\", org.id]);\n    }\n    return this.router.createUrlTree([\"/\"]);\n  }\n}\n","<div *ngIf=\"loaded && activeOrganization != null\" class=\"tw-flex\">\n  <button\n    class=\"tw-flex tw-items-center tw-border-none tw-bg-background-alt\"\n    type=\"button\"\n    id=\"pickerButton\"\n    [appA11yTitle]=\"'organizationPicker' | i18n\"\n    [bitMenuTriggerFor]=\"orgPickerMenu\"\n  >\n    <bit-avatar [text]=\"activeOrganization.name\" [id]=\"activeOrganization.id\"></bit-avatar>\n    <div class=\"tw-flex\">\n      <div class=\"org-name tw-ml-3\">\n        <span>{{ activeOrganization.name }}</span>\n        <small class=\"tw-text-muted\">{{ \"organization\" | i18n }}</small>\n      </div>\n      <div class=\"tw-ml-3\">\n        <i class=\"bwi bwi-angle-down tw-text-main\" aria-hidden=\"true\"></i>\n      </div>\n    </div>\n  </button>\n  <div>\n    <div\n      class=\"tw-ml-3 tw-rounded tw-border tw-border-solid tw-border-danger-500 tw-text-danger\"\n      *ngIf=\"!activeOrganization.enabled\"\n    >\n      <div class=\"tw-py-2 tw-px-5\">\n        <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n        {{ \"organizationIsDisabled\" | i18n }}\n      </div>\n    </div>\n    <div\n      class=\"tw-ml-3 tw-rounded tw-border tw-border-solid tw-border-info-500 tw-text-info\"\n      *ngIf=\"activeOrganization.isProviderUser\"\n    >\n      <div class=\"tw-py-2 tw-px-5\">\n        <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n        {{ \"accessingUsingProvider\" | i18n: activeOrganization.providerName }}\n      </div>\n    </div>\n  </div>\n\n  <bit-menu #orgPickerMenu>\n    <ul aria-labelledby=\"pickerButton\" class=\"tw-m-0 tw-p-0\">\n      <li\n        *ngFor=\"let org of organizations$ | async\"\n        class=\"tw-flex tw-list-none tw-flex-col\"\n        role=\"none\"\n      >\n        <a bitMenuItem [routerLink]=\"['/organizations', org.id]\">\n          <i\n            class=\"bwi bwi-check mr-2\"\n            [ngClass]=\"org.id === activeOrganization.id ? 'visible' : 'invisible'\"\n          >\n            <span class=\"tw-sr-only\">{{ \"currentOrganization\" | i18n }}</span>\n          </i>\n          {{ org.name }}\n        </a>\n      </li>\n      <bit-menu-divider></bit-menu-divider>\n      <li class=\"tw-list-none\" role=\"none\">\n        <a bitMenuItem routerLink=\"/create-organization\">\n          <i class=\"bwi bwi-plus mr-2\"></i>\n          {{ \"newOrganization\" | i18n }}</a\n        >\n      </li>\n    </ul>\n  </bit-menu>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport {\n  canAccessAdmin,\n  isNotProviderUser,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-organization-switcher\",\n  templateUrl: \"organization-switcher.component.html\",\n})\nexport class OrganizationSwitcherComponent implements OnInit {\n  constructor(private organizationService: OrganizationService, private i18nService: I18nService) {}\n\n  @Input() activeOrganization: Organization = null;\n  organizations$: Observable<Organization[]>;\n\n  loaded = false;\n\n  async ngOnInit() {\n    this.organizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter(isNotProviderUser)),\n      canAccessAdmin(this.i18nService),\n      map((orgs) => orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")))\n    );\n\n    this.loaded = true;\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav !tw-h-32\" *ngIf=\"organization$ | async as organization\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <app-organization-switcher\n        class=\"my-auto pl-1\"\n        [activeOrganization]=\"organization\"\n      ></app-organization-switcher>\n      <bit-tab-nav-bar class=\"-tw-mb-px\">\n        <bit-tab-link route=\"vault\">{{ \"vault\" | i18n }}</bit-tab-link>\n        <bit-tab-link *ngIf=\"canShowManageTab(organization)\" route=\"manage\">\n          {{ \"manage\" | i18n }}\n        </bit-tab-link>\n        <bit-tab-link *ngIf=\"canShowReportsTab(organization)\" route=\"reporting\">\n          {{ getReportTabLabel(organization) | i18n }}\n        </bit-tab-link>\n        <bit-tab-link *ngIf=\"canShowBillingTab(organization)\" route=\"billing\">{{\n          \"billing\" | i18n\n        }}</bit-tab-link>\n        <bit-tab-link *ngIf=\"canShowSettingsTab(organization)\" route=\"settings\">{{\n          \"settings\" | i18n\n        }}</bit-tab-link>\n      </bit-tab-nav-bar>\n    </div>\n  </div>\n</div>\n\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { map, mergeMap, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport {\n  canAccessBillingTab,\n  canAccessGroupsTab,\n  canAccessManageTab,\n  canAccessMembersTab,\n  canAccessReportingTab,\n  canAccessSettingsTab,\n  getOrganizationById,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-organization-layout\",\n  templateUrl: \"organization-layout.component.html\",\n})\nexport class OrganizationLayoutComponent implements OnInit, OnDestroy {\n  organization$: Observable<Organization>;\n\n  private _destroy = new Subject<void>();\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n\n    this.organization$ = this.route.params\n      .pipe(takeUntil(this._destroy))\n      .pipe<string>(map((p) => p.organizationId))\n      .pipe(\n        mergeMap((id) => {\n          return this.organizationService.organizations$\n            .pipe(takeUntil(this._destroy))\n            .pipe(getOrganizationById(id));\n        })\n      );\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  canShowSettingsTab(organization: Organization): boolean {\n    return canAccessSettingsTab(organization);\n  }\n\n  canShowManageTab(organization: Organization): boolean {\n    return canAccessManageTab(organization);\n  }\n\n  canShowMembersTab(organization: Organization): boolean {\n    return canAccessMembersTab(organization);\n  }\n\n  canShowGroupsTab(organization: Organization): boolean {\n    return canAccessGroupsTab(organization);\n  }\n\n  canShowReportsTab(organization: Organization): boolean {\n    return canAccessReportingTab(organization);\n  }\n\n  canShowBillingTab(organization: Organization): boolean {\n    return canAccessBillingTab(organization);\n  }\n\n  getReportTabLabel(organization: Organization): string {\n    return organization.useEvents ? \"reporting\" : \"reports\";\n  }\n}\n","type OrganizationUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class OrganizationUserBulkConfirmRequest {\n  keys: OrganizationUserBulkRequestEntry[];\n\n  constructor(keys: OrganizationUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"confirmUsers\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <app-callout type=\"danger\" *ngIf=\"filteredUsers.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!loading && !done\">\n          <p>\n            {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n            <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n              {{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"fingerprint\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ fingerprints.get(user.id) }}\n              </td>\n            </tr>\n            <tr *ngFor=\"let user of excludedUsers\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"!loading && done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserBulkConfirmRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-confirm\",\n  templateUrl: \"bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent implements OnInit {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  excludedUsers: BulkUserDetails[];\n  filteredUsers: BulkUserDetails[];\n  publicKeys: Map<string, Uint8Array> = new Map();\n  fingerprints: Map<string, string> = new Map();\n  statuses: Map<string, string> = new Map();\n\n  loading = true;\n  done = false;\n  error: string;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    private organizationUserService: OrganizationUserService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    this.excludedUsers = this.users.filter((u) => !this.isAccepted(u));\n    this.filteredUsers = this.users.filter((u) => this.isAccepted(u));\n\n    if (this.filteredUsers.length <= 0) {\n      this.done = true;\n    }\n\n    const response = await this.getPublicKeys();\n\n    for (const entry of response.data) {\n      const publicKey = Utils.fromB64ToArray(entry.key);\n      const fingerprint = await this.cryptoService.getFingerprint(entry.userId, publicKey.buffer);\n      if (fingerprint != null) {\n        this.publicKeys.set(entry.id, publicKey);\n        this.fingerprints.set(entry.id, fingerprint.join(\"-\"));\n      }\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.loading = true;\n    try {\n      const key = await this.getCryptoKey();\n      const userIdsWithKeys: any[] = [];\n      for (const user of this.filteredUsers) {\n        const publicKey = this.publicKeys.get(user.id);\n        if (publicKey == null) {\n          continue;\n        }\n        const encryptedKey = await this.cryptoService.rsaEncrypt(key.key, publicKey.buffer);\n        userIdsWithKeys.push({\n          id: user.id,\n          key: encryptedKey.encryptedString,\n        });\n      }\n      const response = await this.postConfirmRequest(userIdsWithKeys);\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkConfirmMessage\");\n        this.statuses.set(entry.id, error);\n      });\n\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n    this.loading = false;\n  }\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === OrganizationUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    return await this.organizationUserService.postOrganizationUsersPublicKey(\n      this.organizationId,\n      this.filteredUsers.map((user) => user.id)\n    );\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getOrgKey(this.organizationId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new OrganizationUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.organizationUserService.postOrganizationUserBulkConfirm(\n      this.organizationId,\n      request\n    );\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"removeUsers\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"danger\" *ngIf=\"users.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!done\">\n          <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error\">\n            {{ removeUsersWarning }}\n          </app-callout>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done && users.length > 0\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"removeUsers\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-remove\",\n  templateUrl: \"bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  statuses: Map<string, string> = new Map();\n\n  loading = false;\n  done = false;\n  error: string;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    private organizationUserService: OrganizationUserService\n  ) {}\n\n  async submit() {\n    this.loading = true;\n    try {\n      const response = await this.deleteUsers();\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkRemovedMessage\");\n        this.statuses.set(entry.id, error);\n      });\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n\n    this.loading = false;\n  }\n\n  protected async deleteUsers() {\n    return await this.organizationUserService.deleteManyOrganizationUsers(\n      this.organizationId,\n      this.users.map((user) => user.id)\n    );\n  }\n\n  protected get removeUsersWarning() {\n    return this.i18nService.t(\"removeOrgUsersConfirmation\");\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"bulkConfirmStatus\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              <th>{{ \"status\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tr *ngFor=\"let item of users\">\n            <td width=\"30\">\n              <bit-avatar\n                [text]=\"item.user | userName\"\n                [id]=\"item.user.id\"\n                size=\"small\"\n              ></bit-avatar>\n            </td>\n            <td>\n              {{ item.user.email }}\n              <small class=\"text-muted d-block\" *ngIf=\"item.user.name\">{{ item.user.name }}</small>\n            </td>\n            <td class=\"text-danger\" *ngIf=\"item.error\">\n              {{ item.message }}\n            </td>\n            <td *ngIf=\"!item.error\">\n              {{ item.message }}\n            </td>\n          </tr>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\n\nexport interface BulkUserDetails {\n  id: string;\n  name: string;\n  email: string;\n  status: OrganizationUserStatusType | ProviderUserStatusType;\n}\n\ntype BulkStatusEntry = {\n  user: BulkUserDetails;\n  error: boolean;\n  message: string;\n};\n\n@Component({\n  selector: \"app-bulk-status\",\n  templateUrl: \"bulk-status.component.html\",\n})\nexport class BulkStatusComponent {\n  users: BulkStatusEntry[];\n  loading = false;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"eventLogsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"eventLogsTitle\">\n          {{ \"eventLogs\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loaded\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loaded\">\n        <div class=\"d-flex\">\n          <div class=\"form-inline\">\n            <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"start\"\n              placeholder=\"{{ 'startDate' | i18n }}\"\n              [(ngModel)]=\"start\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n            <span class=\"mx-2\">-</span>\n            <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"end\"\n              placeholder=\"{{ 'endDate' | i18n }}\"\n              [(ngModel)]=\"end\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n          </div>\n          <button\n            #refreshBtn\n            [appApiAction]=\"refreshPromise\"\n            type=\"button\"\n            class=\"btn btn-sm btn-outline-primary ml-3\"\n            (click)=\"loadEvents(true)\"\n            [disabled]=\"loaded && $any(refreshBtn).loading\"\n          >\n            <i\n              class=\"bwi bwi-refresh bwi-fw\"\n              [ngClass]=\"{ 'bwi-spin': loaded && $any(refreshBtn).loading }\"\n              aria-hidden=\"true\"\n            ></i>\n            {{ \"refresh\" | i18n }}\n          </button>\n        </div>\n        <hr />\n        <div *ngIf=\"!events || !events.length\">\n          {{ \"noEventsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover mb-0\" *ngIf=\"events && events.length\">\n          <thead>\n            <tr>\n              <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n              <th class=\"border-top-0\" width=\"40\">\n                <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n              </th>\n              <th class=\"border-top-0\" width=\"150\" *ngIf=\"showUser\">{{ \"user\" | i18n }}</th>\n              <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let e of events\">\n              <td>{{ e.date | date: \"medium\" }}</td>\n              <td>\n                <i\n                  class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n                  title=\"{{ e.appName }}, {{ e.ip }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n              </td>\n              <td *ngIf=\"showUser\">\n                <span appA11yTitle=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n              </td>\n              <td [innerHTML]=\"e.message\"></td>\n            </tr>\n          </tbody>\n        </table>\n        <button\n          #moreBtn\n          [appApiAction]=\"morePromise\"\n          type=\"button\"\n          class=\"btn btn-block btn-link btn-submit\"\n          (click)=\"loadEvents(false)\"\n          [disabled]=\"loaded && $any(moreBtn).loading\"\n          *ngIf=\"continuationToken\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"loadMore\" | i18n }}</span>\n        </button>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/event.response\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\n\nimport { EventService } from \"../../core\";\n\n@Component({\n  selector: \"app-entity-events\",\n  templateUrl: \"entity-events.component.html\",\n})\nexport class EntityEventsComponent implements OnInit {\n  @Input() name: string;\n  @Input() entity: \"user\" | \"cipher\";\n  @Input() entityId: string;\n  @Input() organizationId: string;\n  @Input() providerId: string;\n  @Input() showUser = false;\n\n  loading = true;\n  loaded = false;\n  events: any[];\n  start: string;\n  end: string;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n  private orgUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private eventService: EventService,\n    private platformUtilsService: PlatformUtilsService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService,\n    private organizationUserService: OrganizationUserService\n  ) {}\n\n  async ngOnInit() {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n    await this.load();\n  }\n\n  async load() {\n    if (this.showUser) {\n      const response = await this.organizationUserService.getAllUsers(this.organizationId);\n      response.data.forEach((u) => {\n        const name = this.userNamePipe.transform(u);\n        this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n        this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n      });\n    }\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.refreshPromise != null || this.morePromise != null) {\n      return;\n    }\n\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return;\n    }\n\n    this.loading = true;\n    let response: ListResponse<EventResponse>;\n    try {\n      let promise: Promise<any>;\n      if (this.entity === \"user\" && this.providerId) {\n        promise = this.apiService.getEventsProviderUser(\n          this.providerId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else if (this.entity === \"user\") {\n        promise = this.apiService.getEventsOrganizationUser(\n          this.organizationId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else {\n        promise = this.apiService.getEventsCipher(\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      }\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      response = await promise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.continuationToken = response.continuationToken;\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user =\n          this.showUser && userId != null && this.orgUsersUserIdMap.has(userId)\n            ? this.orgUsersUserIdMap.get(userId)\n            : null;\n        return {\n          message: eventInfo.message,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: user != null ? user.name : this.showUser ? this.i18nService.t(\"unknown\") : null,\n          userEmail: user != null ? user.email : this.showUser ? \"\" : null,\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n        };\n      })\n    );\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nexport class PolicyRequest {\n  type: PolicyType;\n  enabled: boolean;\n  data: any;\n}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\nexport abstract class BasePolicy {\n  abstract name: string;\n  abstract description: string;\n  abstract type: PolicyType;\n  abstract component: any;\n\n  display(organization: Organization) {\n    return true;\n  }\n}\n\n@Directive()\nexport abstract class BasePolicyComponent implements OnInit {\n  @Input() policyResponse: PolicyResponse;\n  @Input() policy: BasePolicy;\n\n  enabled = new UntypedFormControl(false);\n  data: UntypedFormGroup = null;\n\n  ngOnInit(): void {\n    this.enabled.setValue(this.policyResponse.enabled);\n\n    if (this.policyResponse.data != null) {\n      this.loadData();\n    }\n  }\n\n  loadData() {\n    this.data.patchValue(this.policyResponse.data ?? {});\n  }\n\n  buildRequestData() {\n    if (this.data != null) {\n      return this.data.value;\n    }\n\n    return null;\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>) {\n    const request = new PolicyRequest();\n    request.enabled = this.enabled.value;\n    request.type = this.policy.type;\n    request.data = this.buildRequestData();\n\n    return Promise.resolve(request);\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\n\nimport { DisableSendPolicyComponent } from \"./disable-send.component\";\nimport { MasterPasswordPolicyComponent } from \"./master-password.component\";\nimport { PasswordGeneratorPolicyComponent } from \"./password-generator.component\";\nimport { PersonalOwnershipPolicyComponent } from \"./personal-ownership.component\";\nimport { PoliciesComponent } from \"./policies.component\";\nimport { PolicyEditComponent } from \"./policy-edit.component\";\nimport { RequireSsoPolicyComponent } from \"./require-sso.component\";\nimport { ResetPasswordPolicyComponent } from \"./reset-password.component\";\nimport { SendOptionsPolicyComponent } from \"./send-options.component\";\nimport { SingleOrgPolicyComponent } from \"./single-org.component\";\nimport { TwoFactorAuthenticationPolicyComponent } from \"./two-factor-authentication.component\";\n\n@NgModule({\n  imports: [SharedModule, LooseComponentsModule],\n  declarations: [\n    DisableSendPolicyComponent,\n    MasterPasswordPolicyComponent,\n    PasswordGeneratorPolicyComponent,\n    PersonalOwnershipPolicyComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    SendOptionsPolicyComponent,\n    SingleOrgPolicyComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    PoliciesComponent,\n    PolicyEditComponent,\n  ],\n  exports: [\n    DisableSendPolicyComponent,\n    MasterPasswordPolicyComponent,\n    PasswordGeneratorPolicyComponent,\n    PersonalOwnershipPolicyComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    SendOptionsPolicyComponent,\n    SingleOrgPolicyComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    PoliciesComponent,\n    PolicyEditComponent,\n  ],\n})\nexport class PoliciesModule {}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class DisableSendPolicy extends BasePolicy {\n  name = \"disableSend\";\n  description = \"disableSendPolicyDesc\";\n  type = PolicyType.DisableSend;\n  component = DisableSendPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-send\",\n  templateUrl: \"disable-send.component.html\",\n})\nexport class DisableSendPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"disableSendExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minComplexity\">{{ \"minComplexityScore\" | i18n }}</label>\n      <select\n        id=\"minComplexity\"\n        name=\"minComplexity\"\n        formControlName=\"minComplexity\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of passwordScores\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        min=\"8\"\n        name=\"minLength\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireUpper\"\n      name=\"requireUpper\"\n      formControlName=\"requireUpper\"\n    />\n    <label class=\"form-check-label\" for=\"requireUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireLower\"\n      name=\"requireLower\"\n      formControlName=\"requireLower\"\n    />\n    <label class=\"form-check-label\" for=\"requireLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireNumbers\"\n      name=\"requireNumbers\"\n      formControlName=\"requireNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"requireNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireSpecial\"\n      name=\"requireSpecial\"\n      formControlName=\"requireSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"requireSpecial\">!@#$%^&amp;*</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class MasterPasswordPolicy extends BasePolicy {\n  name = \"masterPassPolicyTitle\";\n  description = \"masterPassPolicyDesc\";\n  type = PolicyType.MasterPassword;\n  component = MasterPasswordPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-master-password\",\n  templateUrl: \"master-password.component.html\",\n})\nexport class MasterPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    minComplexity: [null],\n    minLength: [null],\n    requireUpper: [null],\n    requireLower: [null],\n    requireNumbers: [null],\n    requireSpecial: [null],\n  });\n\n  passwordScores: { name: string; value: number }[];\n  showKeyConnectorInfo = false;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    i18nService: I18nService,\n    private organizationService: OrganizationService\n  ) {\n    super();\n\n    this.passwordScores = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"weak\") + \" (0)\", value: 0 },\n      { name: i18nService.t(\"weak\") + \" (1)\", value: 1 },\n      { name: i18nService.t(\"weak\") + \" (2)\", value: 2 },\n      { name: i18nService.t(\"good\") + \" (3)\", value: 3 },\n      { name: i18nService.t(\"strong\") + \" (4)\", value: 4 },\n    ];\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group mb-0\">\n      <label for=\"defaultType\">{{ \"defaultType\" | i18n }}</label>\n      <select\n        id=\"defaultType\"\n        name=\"defaultType\"\n        formControlName=\"defaultType\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of defaultTypes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n  </div>\n  <h3 class=\"mt-4\">{{ \"password\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minLength\"\n        min=\"5\"\n        max=\"128\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumbers\">{{ \"minNumbers\" | i18n }}</label>\n      <input\n        id=\"minNumbers\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumbers\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minNumbers\"\n      />\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minSpecial\">{{ \"minSpecial\" | i18n }}</label>\n      <input\n        id=\"minSpecial\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minSpecial\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minSpecial\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useUpper\"\n      formControlName=\"useUpper\"\n      name=\"useUpper\"\n    />\n    <label class=\"form-check-label\" for=\"useUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useLower\"\n      name=\"useLower\"\n      formControlName=\"useLower\"\n    />\n    <label class=\"form-check-label\" for=\"useLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useNumbers\"\n      name=\"useNumbers\"\n      formControlName=\"useNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"useNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useSpecial\"\n      name=\"useSpecial\"\n      formControlName=\"useSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"useSpecial\">!@#$%^&amp;*</label>\n  </div>\n  <h3 class=\"mt-4\">{{ \"passphrase\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumberWords\">{{ \"minimumNumberOfWords\" | i18n }}</label>\n      <input\n        id=\"minNumberWords\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumberWords\"\n        min=\"3\"\n        max=\"20\"\n        formControlName=\"minNumberWords\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"capitalize\"\n      name=\"capitalize\"\n      formControlName=\"capitalize\"\n    />\n    <label class=\"form-check-label\" for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"includeNumber\"\n      name=\"includeNumber\"\n      formControlName=\"includeNumber\"\n    />\n    <label class=\"form-check-label\" for=\"includeNumber\">{{ \"includeNumber\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PasswordGeneratorPolicy extends BasePolicy {\n  name = \"passwordGenerator\";\n  description = \"passwordGeneratorPolicyDesc\";\n  type = PolicyType.PasswordGenerator;\n  component = PasswordGeneratorPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-password-generator\",\n  templateUrl: \"password-generator.component.html\",\n})\nexport class PasswordGeneratorPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    defaultType: [null],\n    minLength: [null],\n    useUpper: [null],\n    useLower: [null],\n    useNumbers: [null],\n    useSpecial: [null],\n    minNumbers: [null],\n    minSpecial: [null],\n    minNumberWords: [null],\n    capitalize: [null],\n    includeNumber: [null],\n  });\n\n  defaultTypes: { name: string; value: string }[];\n\n  constructor(private formBuilder: UntypedFormBuilder, i18nService: I18nService) {\n    super();\n\n    this.defaultTypes = [\n      { name: i18nService.t(\"userPreference\"), value: null },\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PersonalOwnershipPolicy extends BasePolicy {\n  name = \"personalOwnership\";\n  description = \"personalOwnershipPolicyDesc\";\n  type = PolicyType.PersonalOwnership;\n  component = PersonalOwnershipPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-personal-ownership\",\n  templateUrl: \"personal-ownership.component.html\",\n})\nexport class PersonalOwnershipPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"personalOwnershipExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class RequireSsoPolicy extends BasePolicy {\n  name = \"requireSso\";\n  description = \"requireSsoPolicyDesc\";\n  type = PolicyType.RequireSso;\n  component = RequireSsoPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useSso;\n  }\n}\n\n@Component({\n  selector: \"policy-require-sso\",\n  templateUrl: \"require-sso.component.html\",\n})\nexport class RequireSsoPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n<app-callout type=\"warning\">\n  {{ \"requireSsoExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<app-callout type=\"warning\">\n  {{ \"resetPasswordPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"resetPasswordPolicyAutoEnroll\" | i18n }}</h3>\n  <p>{{ \"resetPasswordPolicyAutoEnrollDescription\" | i18n }}</p>\n  <app-callout type=\"warning\">\n    {{ \"resetPasswordPolicyAutoEnrollWarning\" | i18n }}\n  </app-callout>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"autoEnrollEnabled\"\n      name=\"AutoEnrollEnabled\"\n      formControlName=\"autoEnrollEnabled\"\n    />\n    <label class=\"form-check-label\" for=\"autoEnrollEnabled\">\n      {{ \"resetPasswordPolicyAutoEnrollCheckbox\" | i18n }}\n    </label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class ResetPasswordPolicy extends BasePolicy {\n  name = \"resetPasswordPolicy\";\n  description = \"resetPasswordPolicyDescription\";\n  type = PolicyType.ResetPassword;\n  component = ResetPasswordPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useResetPassword;\n  }\n}\n\n@Component({\n  selector: \"policy-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    autoEnrollEnabled: false,\n  });\n\n  defaultTypes: { name: string; value: string }[];\n  showKeyConnectorInfo = false;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private organizationService: OrganizationService\n  ) {\n    super();\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SendOptionsPolicy extends BasePolicy {\n  name = \"sendOptions\";\n  description = \"sendOptionsPolicyDesc\";\n  type = PolicyType.SendOptions;\n  component = SendOptionsPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-send-options\",\n  templateUrl: \"send-options.component.html\",\n})\nexport class SendOptionsPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    disableHideEmail: false,\n  });\n\n  constructor(private formBuilder: UntypedFormBuilder) {\n    super();\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"sendOptionsExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"disableHideEmail\"\n      name=\"DisableHideEmail\"\n      formControlName=\"disableHideEmail\"\n    />\n    <label class=\"form-check-label\" for=\"disableHideEmail\">{{ \"disableHideEmail\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SingleOrgPolicy extends BasePolicy {\n  name = \"singleOrg\";\n  description = \"singleOrgDesc\";\n  type = PolicyType.SingleOrg;\n  component = SingleOrgPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-single-org\",\n  templateUrl: \"single-org.component.html\",\n})\nexport class SingleOrgPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    if (!this.enabled.value) {\n      if (policiesEnabledMap.get(PolicyType.RequireSso) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"requireSso\"))\n        );\n      }\n\n      if (policiesEnabledMap.get(PolicyType.MaximumVaultTimeout) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"maximumVaultTimeoutLabel\"))\n        );\n      }\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"singleOrgPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class TwoFactorAuthenticationPolicy extends BasePolicy {\n  name = \"twoStepLoginPolicyTitle\";\n  description = \"twoStepLoginPolicyDesc\";\n  type = PolicyType.TwoFactorAuthentication;\n  component = TwoFactorAuthenticationPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-two-factor-authentication\",\n  templateUrl: \"two-factor-authentication.component.html\",\n})\nexport class TwoFactorAuthenticationPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"twoStepLoginPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"policiesEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"policiesEditTitle\">\n          {{ \"editPolicy\" | i18n }} - {{ policy.name | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n\n      <div class=\"modal-body\">\n        <div class=\"modal-body\" *ngIf=\"loading\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div [hidden]=\"loading\">\n          <p>{{ policy.description | i18n }}</p>\n          <ng-template #policyForm></ng-template>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\nimport { BasePolicy, BasePolicyComponent } from \"../policies\";\n\n@Component({\n  selector: \"app-policy-edit\",\n  templateUrl: \"policy-edit.component.html\",\n})\nexport class PolicyEditComponent {\n  @Input() policy: BasePolicy;\n  @Input() organizationId: string;\n  @Input() policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n  @Output() onSavedPolicy = new EventEmitter();\n\n  @ViewChild(\"policyForm\", { read: ViewContainerRef, static: true })\n  policyFormRef: ViewContainerRef;\n\n  policyType = PolicyType;\n  loading = true;\n  enabled = false;\n  formPromise: Promise<any>;\n  defaultTypes: any[];\n  policyComponent: BasePolicyComponent;\n\n  private policyResponse: PolicyResponse;\n\n  constructor(\n    private policyApiService: PolicyApiServiceAbstraction,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private cdr: ChangeDetectorRef,\n    private logService: LogService\n  ) {}\n\n  async ngAfterViewInit() {\n    await this.load();\n    this.loading = false;\n\n    const factory = this.componentFactoryResolver.resolveComponentFactory(this.policy.component);\n    this.policyComponent = this.policyFormRef.createComponent(factory)\n      .instance as BasePolicyComponent;\n    this.policyComponent.policy = this.policy;\n    this.policyComponent.policyResponse = this.policyResponse;\n\n    this.cdr.detectChanges();\n  }\n\n  async load() {\n    try {\n      this.policyResponse = await this.policyApiService.getPolicy(\n        this.organizationId,\n        this.policy.type\n      );\n    } catch (e) {\n      if (e.statusCode === 404) {\n        this.policyResponse = new PolicyResponse({ Enabled: false });\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  async submit() {\n    let request: PolicyRequest;\n    try {\n      request = await this.policyComponent.buildRequest(this.policiesEnabledMap);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, e.message);\n      return;\n    }\n\n    try {\n      this.formPromise = this.policyApiService.putPolicy(\n        this.organizationId,\n        this.policy.type,\n        request\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedPolicyId\", this.i18nService.t(this.policy.name))\n      );\n      this.onSavedPolicy.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"policies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n  <tbody>\n    <tr *ngFor=\"let p of policies\">\n      <td *ngIf=\"p.display(organization)\">\n        <a href=\"#\" appStopClick (click)=\"edit(p)\">{{ p.name | i18n }}</a>\n        <span bitBadge badgeType=\"success\" *ngIf=\"policiesEnabledMap.get(p.type)\">{{\n          \"on\" | i18n\n        }}</span>\n        <small class=\"text-muted d-block\">{{ p.description | i18n }}</small>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<ng-template #editTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\nimport { PolicyListService } from \"../../core\";\nimport { BasePolicy } from \"../policies\";\n\nimport { PolicyEditComponent } from \"./policy-edit.component\";\n\n@Component({\n  selector: \"app-org-policies\",\n  templateUrl: \"policies.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PoliciesComponent implements OnInit {\n  @ViewChild(\"editTemplate\", { read: ViewContainerRef, static: true })\n  editModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  policies: BasePolicy[];\n  organization: Organization;\n\n  private orgPolicies: PolicyResponse[];\n  protected policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n\n  constructor(\n    private route: ActivatedRoute,\n    private modalService: ModalService,\n    private organizationService: OrganizationService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyListService: PolicyListService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.organization = await this.organizationService.get(this.organizationId);\n      this.policies = this.policyListService.getPolicies();\n\n      await this.load();\n\n      // Handle policies component launch from Event message\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        if (qParams.policyId != null) {\n          const policyIdFromEvents: string = qParams.policyId;\n          for (const orgPolicy of this.orgPolicies) {\n            if (orgPolicy.id === policyIdFromEvents) {\n              for (let i = 0; i < this.policies.length; i++) {\n                if (this.policies[i].type === orgPolicy.type) {\n                  this.edit(this.policies[i]);\n                  break;\n                }\n              }\n              break;\n            }\n          }\n        }\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.policyApiService.getPolicies(this.organizationId);\n    this.orgPolicies = response.data != null && response.data.length > 0 ? response.data : [];\n    this.orgPolicies.forEach((op) => {\n      this.policiesEnabledMap.set(op.type, op.enabled);\n    });\n\n    this.loading = false;\n  }\n\n  async edit(policy: BasePolicy) {\n    const [modal] = await this.modalService.openViewRef(\n      PolicyEditComponent,\n      this.editModalRef,\n      (comp) => {\n        comp.policy = policy;\n        comp.organizationId = this.organizationId;\n        comp.policiesEnabledMap = this.policiesEnabledMap;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedPolicy.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n}\n","import { OrganizationKeysRequest } from \"./organization-keys.request\";\n\nexport class OrganizationUpdateRequest {\n  name: string;\n  /**\n   * @deprecated 2022-08-03 Moved to OrganizationSsoRequest, left for backwards compatability.\n   * https://bitwarden.atlassian.net/browse/EC-489\n   */\n  identifier: string;\n  businessName: string;\n  billingEmail: string;\n  keys: OrganizationKeysRequest;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteOrganizationTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      *ngIf=\"loaded\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"deleteOrganizationTitle\">{{ \"deleteOrganization\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{\n          \"deletingOrganizationIsPermanentWarning\" | i18n: organizationName\n        }}</app-callout>\n        <p id=\"organizationDeleteDescription\">\n          <ng-container\n            *ngIf=\"\n              deleteOrganizationRequestType === 'InvalidFamiliesForEnterprise';\n              else regularDelete\n            \"\n          >\n            {{ \"orgCreatedSponsorshipInvalid\" | i18n }}\n          </ng-container>\n          <ng-template #regularDelete>\n            <ng-container *ngIf=\"organizationContentSummary.totalItemCount > 0\">\n              {{ \"deletingOrganizationContentWarning\" | i18n: organizationName }}\n              <ul>\n                <li *ngFor=\"let type of organizationContentSummary.itemCountByType\">\n                  {{ type.count }} {{ type.localizationKey | i18n }}\n                </li>\n              </ul>\n              {{ \"deletingOrganizationActiveUserAccountsWarning\" | i18n }}\n            </ng-container>\n          </ng-template>\n        </p>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteOrganization\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\nclass CountBasedLocalizationKey {\n  singular: string;\n  plural: string;\n\n  getKey(count: number) {\n    return count == 1 ? this.singular : this.plural;\n  }\n\n  constructor(singular: string, plural: string) {\n    this.singular = singular;\n    this.plural = plural;\n  }\n}\n\nclass OrganizationContentSummaryItem {\n  count: number;\n  get localizationKey(): string {\n    return this.localizationKeyOptions.getKey(this.count);\n  }\n  private localizationKeyOptions: CountBasedLocalizationKey;\n  constructor(count: number, localizationKeyOptions: CountBasedLocalizationKey) {\n    this.count = count;\n    this.localizationKeyOptions = localizationKeyOptions;\n  }\n}\n\nclass OrganizationContentSummary {\n  totalItemCount = 0;\n  itemCountByType: OrganizationContentSummaryItem[] = [];\n}\n\n@Component({\n  selector: \"app-delete-organization\",\n  templateUrl: \"delete-organization.component.html\",\n})\nexport class DeleteOrganizationComponent implements OnInit {\n  organizationId: string;\n  loaded: boolean;\n  deleteOrganizationRequestType: \"InvalidFamiliesForEnterprise\" | \"RegularDelete\" = \"RegularDelete\";\n  organizationName: string;\n  organizationContentSummary: OrganizationContentSummary = new OrganizationContentSummary();\n  @Output() onSuccess: EventEmitter<void> = new EventEmitter();\n\n  masterPassword: Verification;\n  formPromise: Promise<void>;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService,\n    private cipherService: CipherService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    await this.load();\n  }\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.organizationApiService.delete(this.organizationId, request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"organizationDeleted\"),\n        this.i18nService.t(\"organizationDeletedDesc\")\n      );\n      this.onSuccess.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async load() {\n    this.organizationName = (await this.organizationService.get(this.organizationId)).name;\n    this.organizationContentSummary = await this.buildOrganizationContentSummary();\n    this.loaded = true;\n  }\n\n  private async buildOrganizationContentSummary(): Promise<OrganizationContentSummary> {\n    const organizationContentSummary = new OrganizationContentSummary();\n    const organizationItems = (\n      await this.cipherService.getAllFromApiForOrganization(this.organizationId)\n    ).filter((item) => item.deletedDate == null);\n\n    if (organizationItems.length < 1) {\n      return organizationContentSummary;\n    }\n\n    organizationContentSummary.totalItemCount = organizationItems.length;\n    for (const cipherType of Utils.iterateEnum(CipherType)) {\n      const count = this.getOrganizationItemCountByType(organizationItems, cipherType);\n      if (count > 0) {\n        organizationContentSummary.itemCountByType.push(\n          new OrganizationContentSummaryItem(\n            count,\n            this.getOrganizationItemLocalizationKeysByType(CipherType[cipherType])\n          )\n        );\n      }\n    }\n\n    return organizationContentSummary;\n  }\n\n  private getOrganizationItemCountByType(items: CipherView[], type: CipherType) {\n    return items.filter((item) => item.type == type).length;\n  }\n\n  private getOrganizationItemLocalizationKeysByType(type: string): CountBasedLocalizationKey {\n    return new CountBasedLocalizationKey(`type${type}`, `type${type}Plural`);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"organizationInfo\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"org && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"organizationName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"org.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"org.billingEmail\"\n          [disabled]=\"selfHosted || !canManageBilling\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"businessName\">{{ \"businessName\" | i18n }}</label>\n        <input\n          id=\"businessName\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BusinessName\"\n          [(ngModel)]=\"org.businessName\"\n          [disabled]=\"selfHosted || !canManageBilling\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <bit-avatar [text]=\"org.name\" [id]=\"org.id\" size=\"large\"></bit-avatar>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n<ng-container *ngIf=\"canUseApi\">\n  <div class=\"secondary-header border-0 mb-0\">\n    <h1>{{ \"apiKey\" | i18n }}</h1>\n  </div>\n  <p>\n    {{ \"apiKeyDesc\" | i18n }}\n    <a href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noopener\">\n      {{ \"learnMore\" | i18n }}\n    </a>\n  </p>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewApiKey()\">\n    {{ \"viewApiKey\" | i18n }}\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateApiKey()\">\n    {{ \"rotateApiKey\" | i18n }}\n  </button>\n</ng-container>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteOrganization()\">\n      {{ \"deleteOrganization\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n<ng-template #purgeOrganizationTemplate></ng-template>\n<ng-template #apiKeyTemplate></ng-template>\n<ng-template #rotateApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organization-keys.request\";\nimport { OrganizationUpdateRequest } from \"@bitwarden/common/models/request/organization-update.request\";\nimport { OrganizationResponse } from \"@bitwarden/common/models/response/organization.response\";\n\nimport { ApiKeyComponent } from \"../../settings/api-key.component\";\nimport { PurgeVaultComponent } from \"../../settings/purge-vault.component\";\n\nimport { DeleteOrganizationComponent } from \"./delete-organization.component\";\n\n@Component({\n  selector: \"app-org-account\",\n  templateUrl: \"account.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccountComponent {\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n  @ViewChild(\"purgeOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"apiKeyTemplate\", { read: ViewContainerRef, static: true })\n  apiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateApiKeyModalRef: ViewContainerRef;\n\n  selfHosted = false;\n  canManageBilling = true;\n  loading = true;\n  canUseApi = false;\n  org: OrganizationResponse;\n  formPromise: Promise<OrganizationResponse>;\n  taxFormPromise: Promise<unknown>;\n\n  private organizationId: string;\n\n  constructor(\n    private modalService: ModalService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private router: Router,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.canManageBilling = this.organizationService.get(this.organizationId).canManageBilling;\n      try {\n        this.org = await this.organizationApiService.get(this.organizationId);\n        this.canUseApi = this.org.useApi;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationUpdateRequest();\n      request.name = this.org.name;\n      request.businessName = this.org.businessName;\n      request.billingEmail = this.org.billingEmail;\n      request.identifier = this.org.identifier;\n\n      // Backfill pub/priv key if necessary\n      if (!this.org.hasPublicAndPrivateKeys) {\n        const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n        request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n      }\n\n      this.formPromise = this.organizationApiService.save(this.organizationId, request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"organizationUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async deleteOrganization() {\n    await this.modalService.openViewRef(\n      DeleteOrganizationComponent,\n      this.deleteModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSuccess.subscribe(() => {\n          this.router.navigate([\"/\"]);\n        });\n      }\n    );\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef, (comp) => {\n      comp.organizationId = this.organizationId;\n    });\n  }\n\n  async viewApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.apiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.getOrCreateApiKey.bind(\n        this.organizationApiService\n      );\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyDesc\";\n    });\n  }\n\n  async rotateApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateApiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.isRotation = true;\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.rotateApiKey.bind(this.organizationApiService);\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div class=\"tabbed-header\">\n  <h1 *ngIf=\"!organizationId\">{{ \"twoStepLogin\" | i18n }}</h1>\n  <h1 *ngIf=\"organizationId\">{{ \"twoStepLoginEnforcement\" | i18n }}</h1>\n</div>\n<p *ngIf=\"!organizationId\">{{ \"twoStepLoginDesc\" | i18n }}</p>\n<ng-container *ngIf=\"organizationId\">\n  <p>\n    {{ \"twoStepLoginOrganizationDescStart\" | i18n }}\n    <a routerLink=\"../policies\">{{ \"twoStepLoginPolicy\" | i18n }}.</a>\n    <br />\n    {{ \"twoStepLoginOrganizationDuoDesc\" | i18n }}\n  </p>\n  <p>{{ \"twoStepLoginOrganizationSsoDesc\" | i18n }}</p>\n</ng-container>\n<bit-callout type=\"warning\" *ngIf=\"!organizationId\">\n  <p>{{ \"twoStepLoginRecoveryWarning\" | i18n }}</p>\n  <button bitButton buttonType=\"secondary\" (click)=\"recoveryCode()\">\n    {{ \"viewRecoveryCode\" | i18n }}\n  </button>\n</bit-callout>\n<h2 [ngClass]=\"{ 'mt-5': !organizationId }\">\n  {{ \"providers\" | i18n }}\n  <small *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-fw text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </small>\n</h2>\n<bit-callout type=\"warning\" *ngIf=\"showPolicyWarning\">\n  {{ \"twoStepLoginPolicyUserWarning\" | i18n }}\n</bit-callout>\n<ul class=\"list-group list-group-2fa\">\n  <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\">\n    <div class=\"logo-2fa d-flex justify-content-center\">\n      <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n    </div>\n    <div class=\"mx-4\">\n      <h3 class=\"mb-0\">\n        {{ p.name }}\n        <ng-container *ngIf=\"p.enabled\">\n          <i\n            class=\"bwi bwi-check text-success bwi-fw\"\n            title=\"{{ 'enabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"enabled\" | i18n }}</span>\n        </ng-container>\n        <app-premium-badge *ngIf=\"p.premium\"></app-premium-badge>\n      </h3>\n      {{ p.description }}\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        bitButton\n        buttonType=\"secondary\"\n        [disabled]=\"!canAccessPremium && p.premium\"\n        (click)=\"manage(p.type)\"\n      >\n        {{ \"manage\" | i18n }}\n      </button>\n    </div>\n  </li>\n</ul>\n\n<ng-template #authenticatorTemplate></ng-template>\n<ng-template #recoveryTemplate></ng-template>\n<ng-template #duoTemplate></ng-template>\n<ng-template #emailTemplate></ng-template>\n<ng-template #yubikeyTemplate></ng-template>\n<ng-template #webAuthnTemplate></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { TwoFactorDuoComponent } from \"../../settings/two-factor-duo.component\";\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from \"../../settings/two-factor-setup.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"../../settings/two-factor-setup.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\n  constructor(\n    apiService: ApiService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    private route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(apiService, modalService, messagingService, policyService, stateService);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await super.ngOnInit();\n    });\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.OrganizationDuo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        duoComp.type = TwoFactorProviderType.OrganizationDuo;\n        duoComp.organizationId = this.organizationId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type !== TwoFactorProviderType.OrganizationDuo;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { canAccessSettingsTab } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { OrganizationPermissionsGuard } from \"../guards/org-permissions.guard\";\nimport { OrganizationRedirectGuard } from \"../guards/org-redirect.guard\";\nimport { PoliciesComponent } from \"../policies\";\n\nimport { AccountComponent } from \"./account.component\";\nimport { SettingsComponent } from \"./settings.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SettingsComponent,\n    canActivate: [OrganizationPermissionsGuard],\n    data: { organizationPermissions: canAccessSettingsTab },\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        canActivate: [OrganizationRedirectGuard],\n        data: {\n          autoRedirectCallback: getSettingsRoute,\n        },\n        children: [], // This is required to make the auto redirect work,\n      },\n      { path: \"account\", component: AccountComponent, data: { titleId: \"organizationInfo\" } },\n      {\n        path: \"two-factor\",\n        component: TwoFactorSetupComponent,\n        data: { titleId: \"twoStepLogin\" },\n      },\n      {\n        path: \"policies\",\n        component: PoliciesComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: (org: Organization) => org.canManagePolicies,\n          titleId: \"policies\",\n        },\n      },\n      {\n        path: \"tools\",\n        loadChildren: () =>\n          import(\"../tools/import-export/org-import-export.module\").then(\n            (m) => m.OrganizationImportExportModule\n          ),\n      },\n    ],\n  },\n];\n\nfunction getSettingsRoute(organization: Organization) {\n  if (organization.isOwner) {\n    return \"account\";\n  }\n  if (organization.canManagePolicies) {\n    return \"policies\";\n  }\n  if (organization.canAccessImportExport) {\n    return [\"tools\", \"import\"];\n  }\n  if (organization.canManageSso) {\n    return \"sso\";\n  }\n  if (organization.canManageScim) {\n    return \"scim\";\n  }\n  return undefined;\n}\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationSettingsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\nimport { PoliciesModule } from \"../policies\";\n\nimport { AccountComponent } from \"./account.component\";\nimport { DeleteOrganizationComponent } from \"./delete-organization.component\";\nimport { OrganizationSettingsRoutingModule } from \"./organization-settings-routing.module\";\nimport { SettingsComponent } from \"./settings.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\n@NgModule({\n  imports: [SharedModule, LooseComponentsModule, PoliciesModule, OrganizationSettingsRoutingModule],\n  declarations: [\n    SettingsComponent,\n    AccountComponent,\n    DeleteOrganizationComponent,\n    TwoFactorSetupComponent,\n  ],\n})\nexport class OrganizationSettingsModule {}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"account\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.isOwner\"\n          >\n            {{ \"organizationInfo\" | i18n }}\n          </a>\n          <a\n            routerLink=\"policies\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.canManagePolicies\"\n          >\n            {{ \"policies\" | i18n }}\n          </a>\n          <a\n            routerLink=\"two-factor\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.use2fa && organization?.isOwner\"\n          >\n            {{ \"twoStepLogin\" | i18n }}\n          </a>\n          <a\n            routerLink=\"tools/import\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.canAccessImportExport\"\n          >\n            {{ \"importData\" | i18n }}\n          </a>\n          <a\n            routerLink=\"tools/export\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.canAccessImportExport\"\n          >\n            {{ \"exportVault\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sso\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.canManageSso\"\n          >\n            {{ \"singleSignOn\" | i18n }}\n          </a>\n          <a\n            routerLink=\"scim\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.canManageScim\"\n          >\n            {{ \"scim\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  organization: Organization;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    this.route.params\n      .pipe(\n        switchMap(async (params) => await this.organizationService.get(params.organizationId)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((organization) => {\n        this.organization = organization;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"cipherAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"cipherAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"cipher\">\n        <app-callout type=\"info\" *ngIf=\"allowOwnershipAssignment() && !allowPersonal\">\n          {{ \"personalOwnershipPolicyInEffect\" | i18n }}\n        </app-callout>\n        <div class=\"row\" *ngIf=\"!editMode && !viewOnly\">\n          <div class=\"col-6 form-group\">\n            <label for=\"type\">{{ \"whatTypeOfItem\" | i18n }}</label>\n            <select\n              id=\"type\"\n              name=\"Type\"\n              [(ngModel)]=\"cipher.type\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted\"\n              appAutofocus\n            >\n              <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"cipher.name\"\n              required\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"col-6 form-group\" *ngIf=\"!organization\">\n            <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n            <select\n              id=\"folder\"\n              name=\"FolderId\"\n              [(ngModel)]=\"cipher.folderId\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            >\n              <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n            </select>\n          </div>\n        </div>\n        <!-- Login -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Login\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"loginUsername\">{{ \"username\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginUsername\"\n                  class=\"form-control\"\n                  type=\"text\"\n                  name=\"Login.Username\"\n                  [(ngModel)]=\"cipher.login.username\"\n                  appInputVerbatim\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                  [readonly]=\"!cipher.edit && editMode\"\n                />\n                <div class=\"input-group-append\" *ngIf=\"!cipher.isDeleted\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n                    (click)=\"copy(cipher.login.username, 'username', 'Username')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-6 form-group\">\n              <div class=\"d-flex\">\n                <label for=\"loginPassword\">{{ \"password\" | i18n }}</label>\n                <div class=\"ml-auto d-flex\" *ngIf=\"!cipher.isDeleted && !viewOnly\">\n                  <a\n                    href=\"#\"\n                    class=\"d-block mr-2 bwi-icon-above-input\"\n                    appStopClick\n                    appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                    (click)=\"generatePassword()\"\n                    *ngIf=\"cipher.viewPassword && !(!cipher.edit && editMode)\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-fw bwi-generate\" aria-hidden=\"true\"></i>\n                  </a>\n                  <a\n                    href=\"#\"\n                    class=\"d-block bwi-icon-above-input\"\n                    #checkPasswordBtn\n                    appStopClick\n                    appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n                    (click)=\"checkPassword()\"\n                    [appApiAction]=\"checkPasswordPromise\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-check-circle\"\n                      [hidden]=\"$any(checkPasswordBtn).loading\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-spinner bwi-spin\"\n                      aria-hidden=\"true\"\n                      [hidden]=\"!$any(checkPasswordBtn).loading\"\n                      title=\"{{ 'loading' | i18n }}\"\n                    ></i>\n                  </a>\n                  <a\n                    href=\"#\"\n                    class=\"d-block bwi-icon-above-input\"\n                    appStopClick\n                    [appA11yTitle]=\"'toggleCharacterCount' | i18n\"\n                    (click)=\"togglePasswordCount()\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-fw bwi-numbered-list\" aria-hidden=\"true\"></i>\n                  </a>\n                </div>\n              </div>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginPassword\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Login.Password\"\n                  [(ngModel)]=\"cipher.login.password\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n                  [readonly]=\"!cipher.edit && editMode\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePassword()\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                    (click)=\"copy(cipher.login.password, 'password', 'Password')\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"showPasswordCount\" class=\"tw-mb-4\">\n            <label>{{ \"passwordCharacterCount\" | i18n }}</label>\n            <div class=\"tw-flex tw-justify-between\">\n              <bit-color-password\n                [password]=\"cipher.login.password\"\n                [showCount]=\"true\"\n              ></bit-color-password>\n              <button type=\"button\" bitLink (click)=\"togglePasswordCount()\">\n                {{ \"hide\" | i18n }}\n              </button>\n            </div>\n          </div>\n          <div class=\"tw-flex tw-flex-row\">\n            <div class=\"tw-mb-4 tw-w-1/2\">\n              <label for=\"loginTotp\">{{ \"authenticatorKeyTotp\" | i18n }}</label>\n              <input\n                id=\"loginTotp\"\n                type=\"{{ cipher.viewPassword ? 'text' : 'password' }}\"\n                name=\"Login.Totp\"\n                class=\"form-control text-monospace\"\n                [(ngModel)]=\"cipher.login.totp\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"tw-mb-4 tw-ml-4 tw-flex tw-w-1/2 tw-items-end\" [ngClass]=\"{ low: totpLow }\">\n              <div\n                class=\"totp tw-flex tw-flex-row tw-items-center\"\n                *ngIf=\"!cipher.login.totp || !totpCode\"\n              >\n                <span class=\"totp-countdown\">\n                  <span class=\"totp-sec tw-text-muted\">15</span>\n                  <svg>\n                    <g>\n                      <circle\n                        class=\"totp-circle-muted inner\"\n                        r=\"12.6\"\n                        cy=\"16\"\n                        cx=\"16\"\n                        opacity=\"0.25\"\n                        [ngStyle]=\"{ 'stroke-dashoffset.px': 40 }\"\n                      ></circle>\n                      <circle\n                        class=\"totp-circle-muted outer\"\n                        opacity=\"0.25\"\n                        r=\"14\"\n                        cy=\"16\"\n                        cx=\"16\"\n                      ></circle>\n                    </g>\n                  </svg>\n                </span>\n                <span\n                  class=\"totp-code tw-mr-3 tw-ml-2 tw-text-muted\"\n                  title=\"{{ 'verificationCodeTotp' | i18n }}\"\n                  >--- ---</span\n                >\n                <i class=\"bwi bwi-lg bwi-clone tw-text-muted\" aria-hidden=\"true\"></i>\n              </div>\n              <div class=\"tw-pb-2\" *ngIf=\"!cipher.login.totp || !totpCode\">\n                <app-premium-badge\n                  *ngIf=\"!organization && !cipher.organizationId\"\n                  class=\"ml-3\"\n                ></app-premium-badge>\n                <a\n                  href=\"#\"\n                  appStopClick\n                  bitBadge\n                  badgeType=\"primary\"\n                  class=\"tw-ml-4\"\n                  (click)=\"upgradeOrganization()\"\n                  *ngIf=\"\n                    (organization && !organization.useTotp) ||\n                    (!organization &&\n                      !canAccessPremium &&\n                      cipher.organizationId &&\n                      !cipher.organizationUseTotp)\n                  \"\n                >\n                  {{ \"upgrade\" | i18n }}\n                </a>\n              </div>\n              <div\n                *ngIf=\"cipher.login.totp && totpCode\"\n                class=\"totp tw-flex tw-flex-row tw-items-center\"\n              >\n                <span class=\"totp-countdown\">\n                  <span class=\"totp-sec\">{{ totpSec }}</span>\n                  <svg>\n                    <g>\n                      <circle\n                        class=\"totp-circle inner\"\n                        r=\"12.6\"\n                        cy=\"16\"\n                        cx=\"16\"\n                        [ngStyle]=\"{ 'stroke-dashoffset.px': totpDash }\"\n                      ></circle>\n                      <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n                    </g>\n                  </svg>\n                </span>\n                <span\n                  class=\"totp-code tw-mr-2 tw-ml-2 tw-mt-1\"\n                  title=\"{{ 'verificationCodeTotp' | i18n }}\"\n                  >{{ totpCodeFormatted }}</span\n                >\n                <button\n                  type=\"button\"\n                  class=\"tw-items-center tw-border-none tw-bg-transparent tw-text-primary-500\"\n                  appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n                  (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"\n                >\n                  <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <ng-container *ngIf=\"cipher.login.hasUris\">\n            <div\n              role=\"group\"\n              class=\"row\"\n              *ngFor=\"let u of cipher.login.uris; let i = index; trackBy: trackByFunction\"\n              attr.aria-label=\"{{ 'uriPosition' | i18n: i + 1 }}\"\n            >\n              <div class=\"col-7 form-group\">\n                <label for=\"loginUri{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n                <div class=\"input-group\">\n                  <input\n                    class=\"form-control\"\n                    id=\"loginUri{{ i }}\"\n                    type=\"text\"\n                    name=\"Login.Uris[{{ i }}].Uri\"\n                    [(ngModel)]=\"u.uri\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                    placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                    appInputVerbatim\n                  />\n                  <div class=\"input-group-append\">\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'launch' | i18n }}\"\n                      (click)=\"launch(u)\"\n                      [disabled]=\"!u.canLaunch\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n                    </button>\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'copyUri' | i18n }}\"\n                      (click)=\"copy(u.uri, 'uri', 'URI')\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-5 form-group\">\n                <div class=\"d-flex\">\n                  <label for=\"loginUriMatch{{ i }}\">\n                    {{ \"matchDetection\" | i18n }}\n                  </label>\n                  <a\n                    class=\"ml-auto\"\n                    href=\"https://bitwarden.com/help/uri-match-detection/\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n                  >\n                    <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n                  </a>\n                </div>\n                <div class=\"d-flex\">\n                  <select\n                    class=\"form-control overflow-hidden\"\n                    id=\"loginUriMatch{{ i }}\"\n                    name=\"Login.Uris[{{ i }}].Match\"\n                    [(ngModel)]=\"u.match\"\n                    (change)=\"loginUriMatchChanged(u)\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                  >\n                    <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">\n                      {{ o.name }}\n                    </option>\n                  </select>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-link text-danger ml-2\"\n                    (click)=\"removeUri(u)\"\n                    appA11yTitle=\"{{ 'remove' | i18n }}\"\n                    *ngIf=\"!cipher.isDeleted && !viewOnly\"\n                  >\n                    <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </ng-container>\n          <a\n            href=\"#\"\n            appStopClick\n            (click)=\"addUri()\"\n            class=\"d-inline-block mb-3\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\"\n          >\n            <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n          </a>\n        </ng-container>\n        <!-- Card -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Card\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCardholderName\">{{ \"cardholderName\" | i18n }}</label>\n              <input\n                id=\"cardCardholderName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.CardCardholderName\"\n                [(ngModel)]=\"cipher.card.cardholderName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"cardBrand\">{{ \"brand\" | i18n }}</label>\n              <span *ngIf=\"!(!cipher.edit && editMode); else readonlyCardBrand\">\n                <select\n                  id=\"cardBrand\"\n                  class=\"form-control\"\n                  name=\"Card.Brand\"\n                  [(ngModel)]=\"cipher.card.brand\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                >\n                  <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">\n                    {{ o.name }}\n                  </option>\n                </select>\n              </span>\n              <ng-template #readonlyCardBrand>\n                <input\n                  id=\"cardBrand\"\n                  class=\"form-control\"\n                  name=\"Card.Brand\"\n                  type=\"text\"\n                  [readonly]=\"true\"\n                  [value]=\"cipher.card.brand\"\n                />\n              </ng-template>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardNumber\">{{ \"number\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardNumber\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardNumber ? 'text' : 'password' }}\"\n                  name=\"Card.Number\"\n                  [(ngModel)]=\"cipher.card.number\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                  [readonly]=\"!cipher.edit && editMode\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardNumber()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{\n                        'bwi-eye': !showCardNumber,\n                        'bwi-eye-slash': showCardNumber\n                      }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n                    (click)=\"copy(cipher.card.number, 'number', 'Number')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpMonth\">{{ \"expirationMonth\" | i18n }}</label>\n              <span *ngIf=\"!(!cipher.edit && editMode); else readonlyCardExpMonth\">\n                <select\n                  id=\"cardExpMonth\"\n                  class=\"form-control\"\n                  name=\"Card.ExpMonth\"\n                  [(ngModel)]=\"cipher.card.expMonth\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                >\n                  <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">\n                    {{ o.name }}\n                  </option>\n                </select>\n              </span>\n              <ng-template #readonlyCardExpMonth>\n                <input\n                  id=\"cardExpMonth\"\n                  class=\"form-control\"\n                  type=\"text\"\n                  name=\"Card.ExpMonth\"\n                  [readonly]=\"true\"\n                  [value]=\"getCardExpMonthDisplay()\"\n                />\n              </ng-template>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpYear\">{{ \"expirationYear\" | i18n }}</label>\n              <input\n                id=\"cardExpYear\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.ExpYear\"\n                [(ngModel)]=\"cipher.card.expYear\"\n                placeholder=\"{{ 'ex' | i18n }} 2019\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCode\">{{ \"securityCode\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardCode\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardCode ? 'text' : 'password' }}\"\n                  name=\"Card.Code\"\n                  [(ngModel)]=\"cipher.card.code\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                  [readonly]=\"!cipher.edit && editMode\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardCode()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'securityCode' | i18n }}\"\n                    (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <!-- Identity -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Identity\">\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idTitle\">{{ \"title\" | i18n }}</label>\n              <span *ngIf=\"!(!cipher.edit && editMode); else readonlyIdTitle\">\n                <select\n                  id=\"idTitle\"\n                  class=\"form-control\"\n                  name=\"Identity.Title\"\n                  [(ngModel)]=\"cipher.identity.title\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                >\n                  <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">\n                    {{ o.name }}\n                  </option>\n                </select>\n              </span>\n              <ng-template #readonlyIdTitle>\n                <input\n                  id=\"idTitle\"\n                  class=\"form-control\"\n                  name=\"Identity.Title\"\n                  type=\"text\"\n                  [readonly]=\"true\"\n                  [value]=\"cipher.identity.title\"\n                />\n              </ng-template>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idFirstName\">{{ \"firstName\" | i18n }}</label>\n              <input\n                id=\"idFirstName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.FirstName\"\n                [(ngModel)]=\"cipher.identity.firstName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idMiddleName\">{{ \"middleName\" | i18n }}</label>\n              <input\n                id=\"idMiddleName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.MiddleName\"\n                [(ngModel)]=\"cipher.identity.middleName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLastName\">{{ \"lastName\" | i18n }}</label>\n              <input\n                id=\"idLastName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LastName\"\n                [(ngModel)]=\"cipher.identity.lastName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idUsername\">{{ \"username\" | i18n }}</label>\n              <input\n                id=\"idUsername\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Username\"\n                [(ngModel)]=\"cipher.identity.username\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idCompany\">{{ \"company\" | i18n }}</label>\n              <input\n                id=\"idCompany\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Company\"\n                [(ngModel)]=\"cipher.identity.company\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idSsn\">{{ \"ssn\" | i18n }}</label>\n              <input\n                id=\"idSsn\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.SSN\"\n                [(ngModel)]=\"cipher.identity.ssn\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idPassportNumber\">{{ \"passportNumber\" | i18n }}</label>\n              <input\n                id=\"idPassportNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PassportNumber\"\n                [(ngModel)]=\"cipher.identity.passportNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLicenseNumber\">{{ \"licenseNumber\" | i18n }}</label>\n              <input\n                id=\"idLicenseNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LicenseNumber\"\n                [(ngModel)]=\"cipher.identity.licenseNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idEmail\">{{ \"email\" | i18n }}</label>\n              <input\n                id=\"idEmail\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"email\"\n                name=\"Identity.Email\"\n                [(ngModel)]=\"cipher.identity.email\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPhone\">{{ \"phone\" | i18n }}</label>\n              <input\n                id=\"idPhone\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"tel\"\n                name=\"Identity.Phone\"\n                [(ngModel)]=\"cipher.identity.phone\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress1\">{{ \"address1\" | i18n }}</label>\n              <input\n                id=\"idAddress1\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address1\"\n                [(ngModel)]=\"cipher.identity.address1\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress2\">{{ \"address2\" | i18n }}</label>\n              <input\n                id=\"idAddress2\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address2\"\n                [(ngModel)]=\"cipher.identity.address2\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress3\">{{ \"address3\" | i18n }}</label>\n              <input\n                id=\"idAddress3\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address3\"\n                [(ngModel)]=\"cipher.identity.address3\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idCity\">{{ \"cityTown\" | i18n }}</label>\n              <input\n                id=\"idCity\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.City\"\n                [(ngModel)]=\"cipher.identity.city\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idState\">{{ \"stateProvince\" | i18n }}</label>\n              <input\n                id=\"idState\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.State\"\n                [(ngModel)]=\"cipher.identity.state\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n              <input\n                id=\"idPostalCode\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PostalCode\"\n                [(ngModel)]=\"cipher.identity.postalCode\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idCountry\">{{ \"country\" | i18n }}</label>\n              <input\n                id=\"idCountry\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Country\"\n                [(ngModel)]=\"cipher.identity.country\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n        </ng-container>\n        <div class=\"form-group\">\n          <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n          <textarea\n            id=\"notes\"\n            name=\"Notes\"\n            rows=\"6\"\n            [(ngModel)]=\"cipher.notes\"\n            [disabled]=\"cipher.isDeleted || viewOnly\"\n            [readonly]=\"!cipher.edit && editMode\"\n            class=\"form-control\"\n          ></textarea>\n        </div>\n        <app-vault-add-edit-custom-fields\n          *ngIf=\"!(!cipher.hasFields && !cipher.edit && editMode)\"\n          [cipher]=\"cipher\"\n          [thisCipherType]=\"cipher.type\"\n          [viewOnly]=\"viewOnly\"\n          [copy]=\"copy.bind(this)\"\n          [editMode]=\"editMode\"\n        ></app-vault-add-edit-custom-fields>\n        <ng-container *ngIf=\"allowOwnershipAssignment()\">\n          <h3 class=\"mt-4\">{{ \"ownership\" | i18n }}</h3>\n          <div class=\"row\">\n            <div class=\"col-5\">\n              <label for=\"organizationId\">{{ \"whoOwnsThisItem\" | i18n }}</label>\n              <select\n                id=\"organizationId\"\n                class=\"form-control\"\n                name=\"OrganizationId\"\n                [(ngModel)]=\"cipher.organizationId\"\n                (change)=\"organizationChanged()\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n          <h3 class=\"mt-4\">{{ \"collections\" | i18n }}</h3>\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <ng-container *ngIf=\"collections && collections.length\">\n            <div class=\"form-check\" *ngFor=\"let c of collections; let i = index\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"$any(c).checked\"\n                id=\"collection-{{ i }}\"\n                name=\"Collection[{{ i }}].Checked\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n              <label class=\"form-check-label\" for=\"collection-{{ i }}\">{{ c.name }}</label>\n            </div>\n          </ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"editMode\">\n          <div class=\"small text-muted mt-4\">\n            <div>\n              <b class=\"font-weight-semibold\">{{ \"dateUpdated\" | i18n }}:</b>\n              {{ cipher.revisionDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"cipher.creationDate\">\n              <b class=\"font-weight-semibold\">{{ \"dateCreated\" | i18n }}:</b>\n              {{ cipher.creationDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"showRevisionDate\">\n              <b class=\"font-weight-semibold\">{{ \"datePasswordUpdated\" | i18n }}:</b>\n              {{ cipher.passwordRevisionDisplayDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"hasPasswordHistory\">\n              <b class=\"font-weight-semibold\">{{ \"passwordHistory\" | i18n }}:</b>\n              <a href=\"#\" appStopClick (click)=\"viewHistory()\" title=\"{{ 'view' | i18n }}\">\n                {{ cipher.passwordHistory.length }}\n              </a>\n            </div>\n            <div class=\"ml-3\" *ngIf=\"viewingPasswordHistory\">\n              <div *ngFor=\"let ph of cipher.passwordHistory\">\n                {{ ph.lastUsedDate | date: \"short\" }} -\n                <bit-color-password [password]=\"ph.password\"></bit-color-password>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"canUseReprompt\">\n          <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [ngModel]=\"reprompt\"\n              (change)=\"repromptChanged()\"\n              id=\"passwordPrompt\"\n              name=\"passwordPrompt\"\n              [disabled]=\"cipher.isDeleted || viewOnly || (!cipher.edit && editMode)\"\n            />\n            <label class=\"form-check-label\" for=\"passwordPrompt\">{{\n              \"passwordPrompt\" | i18n\n            }}</label>\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/managing-items/#protect-individual-items\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (cipher?.isDeleted ? \"restore\" : \"save\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ (viewOnly ? \"close\" : \"cancel\") | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"cipher && !viewOnly\">\n          <button\n            *ngIf=\"!organization && !cipher.isDeleted\"\n            type=\"button\"\n            (click)=\"toggleFavorite()\"\n            class=\"btn btn-link\"\n            appA11yTitle=\"{{ (cipher.favorite ? 'unfavorite' : 'favorite') | i18n }}\"\n          >\n            <i\n              class=\"bwi bwi-lg\"\n              [ngClass]=\"{ 'bwi-star-f': cipher.favorite, 'bwi-star': !cipher.favorite }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ (cipher.isDeleted ? 'permanentlyDelete' : 'delete') | i18n }}\"\n            *ngIf=\"editMode && !cloneMode && !(!cipher.edit && editMode)\"\n            [disabled]=\"$any(deleteBtn).loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipher.data\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherCreateRequest } from \"@bitwarden/common/models/request/cipher-create.request\";\nimport { CipherRequest } from \"@bitwarden/common/models/request/cipher.request\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../../vault/add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  originalCipher: Cipher = null;\n  protected override componentName = \"app-org-vault-add-edit\";\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    private apiService: ApiService,\n    messagingService: MessagingService,\n    eventCollectionService: EventCollectionService,\n    policyService: PolicyService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventCollectionService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  protected allowOwnershipAssignment() {\n    if (\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    ) {\n      if (this.organization != null) {\n        return this.cloneMode && this.organization.canEditAnyCollection;\n      } else {\n        return !this.editMode || this.cloneMode;\n      }\n    }\n    return false;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    const data = new CipherData(response);\n\n    data.edit = true;\n    const cipher = new Cipher(data);\n    this.originalCipher = cipher;\n    return cipher;\n  }\n\n  protected encryptCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.encryptCipher();\n    }\n    return this.cipherService.encrypt(this.cipher, null, this.originalCipher);\n  }\n\n  protected async saveCipher(cipher: Cipher) {\n    if (!this.organization.canEditAnyCollection || cipher.organizationId == null) {\n      return super.saveCipher(cipher);\n    }\n    if (this.editMode && !this.cloneMode) {\n      const request = new CipherRequest(cipher);\n      return this.apiService.putCipherAdmin(this.cipherId, request);\n    } else {\n      const request = new CipherCreateRequest(cipher);\n      return this.apiService.postCipherAdmin(request);\n    }\n  }\n\n  protected async deleteCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher();\n    }\n    return this.cipher.isDeleted\n      ? this.apiService.deleteCipherAdmin(this.cipherId)\n      : this.apiService.putDeleteCipherAdmin(this.cipherId);\n  }\n}\n","export class EmergencyAccessAcceptRequest {\n  token: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"emergencyAccess\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ name }}\n          </p>\n          <p>{{ \"acceptEmergencyAccess\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EmergencyAccessAcceptRequest } from \"@bitwarden/common/models/request/emergency-access-accept.request\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-emergency\",\n  templateUrl: \"accept-emergency.component.html\",\n})\nexport class AcceptEmergencyComponent extends BaseAcceptComponent {\n  name: string;\n\n  protected requiredParameters: string[] = [\"id\", \"name\", \"email\", \"token\"];\n  protected failedShortMessage = \"emergencyInviteAcceptFailedShort\";\n  protected failedMessage = \"emergencyInviteAcceptFailed\";\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params): Promise<void> {\n    const request = new EmergencyAccessAcceptRequest();\n    request.token = qParams.token;\n    this.actionPromise = this.apiService.postEmergencyAccessAccept(qParams.id, request);\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"emergencyInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params): Promise<void> {\n    this.name = qParams.name;\n    if (this.name != null) {\n      // Fix URL encoding of space issue with Angular\n      this.name = this.name.replace(/\\+/g, \" \");\n    }\n  }\n}\n","export class OrganizationUserAcceptRequest {\n  token: string;\n  // Used to auto-enroll in master password reset\n  resetPasswordKey: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img src=\"../../images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinOrganization\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ orgName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinOrganizationDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserAcceptRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-organization\",\n  templateUrl: \"accept-organization.component.html\",\n})\nexport class AcceptOrganizationComponent extends BaseAcceptComponent {\n  orgName: string;\n\n  protected requiredParameters: string[] = [\"organizationId\", \"organizationUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    private cryptoService: CryptoService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService,\n    private messagingService: MessagingService\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params): Promise<void> {\n    const needsReAuth = (await this.stateService.getOrganizationInvitation()) != null;\n    if (!needsReAuth) {\n      // Accepting an org invite requires authentication from a logged out state\n      this.messagingService.send(\"logout\", { redirect: false });\n      await this.prepareOrganizationInvitation(qParams);\n      return;\n    }\n\n    // User has already logged in and passed the Master Password policy check\n    this.actionPromise = this.prepareAcceptRequest(qParams).then(async (request) => {\n      await this.organizationUserService.postOrganizationUserAccept(\n        qParams.organizationId,\n        qParams.organizationUserId,\n        request\n      );\n    });\n\n    await this.stateService.setOrganizationInvitation(null);\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"inviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params): Promise<void> {\n    await this.prepareOrganizationInvitation(qParams);\n  }\n\n  private async prepareAcceptRequest(qParams: Params): Promise<OrganizationUserAcceptRequest> {\n    const request = new OrganizationUserAcceptRequest();\n    request.token = qParams.token;\n\n    if (await this.performResetPasswordAutoEnroll(qParams)) {\n      const response = await this.organizationApiService.getKeys(qParams.organizationId);\n\n      if (response == null) {\n        throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n      }\n\n      const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n      // RSA Encrypt user's encKey.key with organization public key\n      const encKey = await this.cryptoService.getEncKey();\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Add reset password key to accept request\n      request.resetPasswordKey = encryptedKey.encryptedString;\n    }\n    return request;\n  }\n\n  private async performResetPasswordAutoEnroll(qParams: Params): Promise<boolean> {\n    let policyList: Policy[] = null;\n    try {\n      const policies = await this.policyApiService.getPoliciesByToken(\n        qParams.organizationId,\n        qParams.token,\n        qParams.email,\n        qParams.organizationUserId\n      );\n      policyList = this.policyService.mapPoliciesFromToken(policies);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (policyList != null) {\n      const result = this.policyService.getResetPasswordPolicyOptions(\n        policyList,\n        qParams.organizationId\n      );\n      // Return true if policy enabled and auto-enroll enabled\n      return result[1] && result[0].autoEnrollEnabled;\n    }\n\n    return false;\n  }\n\n  private async prepareOrganizationInvitation(qParams: Params): Promise<void> {\n    this.orgName = qParams.organizationName;\n    if (this.orgName != null) {\n      // Fix URL encoding of space issue with Angular\n      this.orgName = this.orgName.replace(/\\+/g, \" \");\n    }\n    await this.stateService.setOrganizationInvitation(qParams);\n  }\n}\n","export class PasswordHintRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PasswordHintRequest } from \"@bitwarden/common/models/request/password-hint.request\";\n\n@Directive()\nexport class HintComponent implements OnInit {\n  email = \"\";\n  formPromise: Promise<any>;\n\n  protected successRoute = \"login\";\n  protected onSuccessfulSubmit: () => void;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private loginService: LoginService\n  ) {}\n\n  ngOnInit(): void {\n    this.email = this.loginService.getEmail() ?? \"\";\n  }\n\n  async submit() {\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"masterPassSent\"));\n      if (this.onSuccessfulSubmit != null) {\n        this.onSuccessfulSubmit();\n      } else if (this.router != null) {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { HintComponent as BaseHintComponent } from \"@bitwarden/angular/components/hint.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-hint\",\n  templateUrl: \"hint.component.html\",\n})\nexport class HintComponent extends BaseHintComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    loginService: LoginService\n  ) {\n    super(router, i18nService, apiService, platformUtilsService, logService, loginService);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"passwordHint\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n            <small class=\"form-text text-muted\">{{ \"enterEmailToGetHint\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Directive, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subject } from \"rxjs\";\nimport { concatMap, take, takeUntil } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { KeySuffixOptions } from \"@bitwarden/common/enums/keySuffixOptions\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\n\n@Directive()\nexport class LockComponent implements OnInit, OnDestroy {\n  masterPassword = \"\";\n  pin = \"\";\n  showPassword = false;\n  email: string;\n  pinLock = false;\n  webVaultHostname = \"\";\n  formPromise: Promise<any>;\n  supportsBiometric: boolean;\n  biometricLock: boolean;\n  biometricText: string;\n  hideInput: boolean;\n\n  protected successRoute = \"vault\";\n  protected onSuccessfulSubmit: () => Promise<void>;\n\n  private invalidPinAttempts = 0;\n  private pinSet: [boolean, boolean];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected cryptoService: CryptoService,\n    protected vaultTimeoutService: VaultTimeoutService,\n    protected vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected apiService: ApiService,\n    protected logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    protected ngZone: NgZone\n  ) {}\n\n  async ngOnInit() {\n    this.stateService.activeAccount$\n      .pipe(\n        concatMap(async () => {\n          await this.load();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async submit() {\n    if (this.pinLock) {\n      return await this.handlePinRequiredUnlock();\n    }\n\n    await this.handleMasterPasswordRequiredUnlock();\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const success = (await this.cryptoService.getKey(KeySuffixOptions.Biometric)) != null;\n\n    if (success) {\n      await this.doContinue();\n    }\n\n    return success;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    const input = document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\");\n    if (this.ngZone.isStable) {\n      input.focus();\n    } else {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => input.focus());\n    }\n  }\n\n  private async handlePinRequiredUnlock() {\n    if (this.pin == null || this.pin === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"pinRequired\")\n      );\n      return;\n    }\n\n    return await this.doUnlockWithPin();\n  }\n\n  private async doUnlockWithPin() {\n    let failed = true;\n    try {\n      const kdf = await this.stateService.getKdfType();\n      const kdfIterations = await this.stateService.getKdfIterations();\n      if (this.pinSet[0]) {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfIterations,\n          await this.stateService.getDecryptedPinProtected()\n        );\n        const encKey = await this.cryptoService.getEncKey(key);\n        const protectedPin = await this.stateService.getProtectedPin();\n        const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n        failed = decPin !== this.pin;\n        if (!failed) {\n          await this.setKeyAndContinue(key);\n        }\n      } else {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfIterations\n        );\n        failed = false;\n        await this.setKeyAndContinue(key);\n      }\n    } catch {\n      failed = true;\n    }\n\n    if (failed) {\n      this.invalidPinAttempts++;\n      if (this.invalidPinAttempts >= 5) {\n        this.messagingService.send(\"logout\");\n        return;\n      }\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidPin\")\n      );\n    }\n  }\n\n  private async handleMasterPasswordRequiredUnlock() {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return;\n    }\n    await this.doUnlockWithMasterPassword();\n  }\n\n  private async doUnlockWithMasterPassword() {\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      kdf,\n      kdfIterations\n    );\n    const storedKeyHash = await this.cryptoService.getKeyHash();\n\n    let passwordValid = false;\n\n    if (storedKeyHash != null) {\n      passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n    } else {\n      const request = new SecretVerificationRequest();\n      const serverKeyHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      request.masterPasswordHash = serverKeyHash;\n      try {\n        this.formPromise = this.apiService.postAccountVerifyPassword(request);\n        await this.formPromise;\n        passwordValid = true;\n        const localKeyHash = await this.cryptoService.hashPassword(\n          this.masterPassword,\n          key,\n          HashPurpose.LocalAuthorization\n        );\n        await this.cryptoService.setKeyHash(localKeyHash);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (!passwordValid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    if (this.pinSet[0]) {\n      const protectedPin = await this.stateService.getProtectedPin();\n      const encKey = await this.cryptoService.getEncKey(key);\n      const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n      const pinKey = await this.cryptoService.makePinKey(decPin, this.email, kdf, kdfIterations);\n      await this.stateService.setDecryptedPinProtected(\n        await this.cryptoService.encrypt(key.key, pinKey)\n      );\n    }\n    await this.setKeyAndContinue(key);\n  }\n  private async setKeyAndContinue(key: SymmetricCryptoKey) {\n    await this.cryptoService.setKey(key);\n    await this.doContinue();\n  }\n\n  private async doContinue() {\n    await this.stateService.setEverBeenUnlocked(true);\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    this.messagingService.send(\"unlocked\");\n    if (this.onSuccessfulSubmit != null) {\n      await this.onSuccessfulSubmit();\n    } else if (this.router != null) {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  private async load() {\n    this.pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n    this.pinLock =\n      (this.pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) ||\n      this.pinSet[1];\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometricLock =\n      (await this.vaultTimeoutSettingsService.isBiometricLockSet()) &&\n      ((await this.cryptoService.hasKeyStored(KeySuffixOptions.Biometric)) ||\n        !this.platformUtilsService.supportsSecureStorage());\n    this.biometricText = await this.stateService.getBiometricText();\n    this.email = await this.stateService.getEmail();\n    const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.hideInput = usesKeyConnector && !this.pinLock;\n\n    // Users with key connector and without biometric or pin has no MP to unlock using\n    if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n      await this.vaultTimeoutService.logOut();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const vaultUrl =\n      webVaultUrl === \"https://vault.bitwarden.com\" ? \"https://bitwarden.com\" : webVaultUrl;\n    this.webVaultHostname = Utils.getHostname(vaultUrl);\n  }\n}\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LockComponent as BaseLockComponent } from \"@bitwarden/angular/components/lock.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\n\nimport { RouterService } from \"../core\";\n\n@Component({\n  selector: \"app-lock\",\n  templateUrl: \"lock.component.html\",\n})\nexport class LockComponent extends BaseLockComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    cryptoService: CryptoService,\n    vaultTimeoutService: VaultTimeoutService,\n    vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    environmentService: EnvironmentService,\n    private routerService: RouterService,\n    stateService: StateService,\n    apiService: ApiService,\n    logService: LogService,\n    keyConnectorService: KeyConnectorService,\n    ngZone: NgZone\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      messagingService,\n      cryptoService,\n      vaultTimeoutService,\n      vaultTimeoutSettingsService,\n      environmentService,\n      stateService,\n      apiService,\n      logService,\n      keyConnectorService,\n      ngZone\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.onSuccessfulSubmit = async () => {\n      const previousUrl = this.routerService.getPreviousUrl();\n      if (previousUrl && previousUrl !== \"/\" && previousUrl.indexOf(\"lock\") === -1) {\n        this.successRoute = previousUrl;\n      }\n      this.router.navigateByUrl(this.successRoute);\n    };\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"text-center mb-4\">\n        <i class=\"bwi bwi-lock bwi-4x text-muted\" aria-hidden=\"true\"></i>\n      </p>\n      <p class=\"lead text-center mx-4 mb-4\">{{ \"yourVaultIsLocked\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appAutofocus\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n            <small class=\"text-muted form-text\">\n              {{ \"loggedInAsEmailOn\" | i18n: email:webVaultHostname }}\n            </small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-unlock\" aria-hidden=\"true\"></i> {{ \"unlock\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { I18nService } from \"../abstractions/i18n.service\";\n\nimport { IFrameComponent } from \"./iframe_component\";\n\nexport class CaptchaIFrame extends IFrameComponent {\n  constructor(\n    win: Window,\n    webVaultUrl: string,\n    private i18nService: I18nService,\n    successCallback: (message: string) => any,\n    errorCallback: (message: string) => any,\n    infoCallback: (message: string) => any\n  ) {\n    super(\n      win,\n      webVaultUrl,\n      \"captcha-connector.html\",\n      \"hcaptcha_iframe\",\n      successCallback,\n      errorCallback,\n      (message: string) => {\n        const parsedMessage = JSON.parse(message);\n        if (typeof parsedMessage !== \"string\") {\n          this.iframe.height = parsedMessage.height.toString();\n          this.iframe.width = parsedMessage.width.toString();\n        } else {\n          infoCallback(parsedMessage);\n        }\n      }\n    );\n  }\n\n  init(siteKey: string): void {\n    super.initComponent(\n      this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1)\n    );\n  }\n}\n","export abstract class IFrameComponent {\n  iframe: HTMLIFrameElement;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    protected webVaultUrl: string,\n    private path: string,\n    private iframeId: string,\n    public successCallback?: (message: string) => any,\n    public errorCallback?: (message: string) => any,\n    public infoCallback?: (message: string) => any\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  protected createParams(data: any, version: number) {\n    return new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      v: version.toString(),\n    });\n  }\n\n  protected initComponent(params: URLSearchParams): void {\n    this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n    this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n    this.iframe.src = this.connectorLink.href;\n\n    this.win.addEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","export enum AuthRequestType {\n  AuthenticateAndUnlock = 0,\n  Unlock = 1,\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CaptchaIFrame } from \"@bitwarden/common/misc/captcha_iframe\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n  @Input() captchaSiteKey: string = null;\n  captchaToken: string = null;\n  captcha: CaptchaIFrame;\n\n  constructor(\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async setupCaptcha() {\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n    this.captcha = new CaptchaIFrame(\n      window,\n      webVaultUrl,\n      this.i18nService,\n      (token: string) => {\n        this.captchaToken = token;\n      },\n      (error: string) => {\n        this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n      },\n      (info: string) => {\n        this.platformUtilsService.showToast(\"info\", this.i18nService.t(\"info\"), info);\n      }\n    );\n  }\n\n  showCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  protected handleCaptchaRequired(response: { captchaSiteKey: string }): boolean {\n    if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n      return false;\n    }\n\n    this.captchaSiteKey = response.captchaSiteKey;\n    this.captcha.init(response.captchaSiteKey);\n    return true;\n  }\n}\n","import { AuthenticationType } from \"../../enums/authenticationType\";\nimport { TokenTwoFactorRequest } from \"../request/identity-token/token-two-factor.request\";\n\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class PasswordLogInCredentials {\n  readonly type = AuthenticationType.Password;\n\n  constructor(\n    public email: string,\n    public masterPassword: string,\n    public captchaToken?: string,\n    public twoFactor?: TokenTwoFactorRequest\n  ) {}\n}\n\nexport class SsoLogInCredentials {\n  readonly type = AuthenticationType.Sso;\n\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUrl: string,\n    public orgId: string,\n    public twoFactor?: TokenTwoFactorRequest\n  ) {}\n}\n\nexport class UserApiLogInCredentials {\n  readonly type = AuthenticationType.UserApi;\n\n  constructor(public clientId: string, public clientSecret: string) {}\n}\n\nexport class PasswordlessLogInCredentials {\n  readonly type = AuthenticationType.Passwordless;\n\n  constructor(\n    public email: string,\n    public accessCode: string,\n    public authRequestId: string,\n    public decKey: SymmetricCryptoKey,\n    public localPasswordHash: string,\n    public twoFactor?: TokenTwoFactorRequest\n  ) {}\n}\n","import { AuthRequestType } from \"../../enums/authRequestType\";\n\nexport class PasswordlessCreateAuthRequest {\n  constructor(\n    readonly email: string,\n    readonly deviceIdentifier: string,\n    readonly publicKey: string,\n    readonly type: AuthRequestType,\n    readonly accessCode: string,\n    readonly fingerprintPhrase: string\n  ) {}\n}\n","<div\n  class=\"tw-mx-auto tw-mt-5 tw-flex tw-max-w-lg tw-flex-col tw-items-center tw-justify-center tw-p-8\"\n>\n  <div>\n    <img class=\"logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"tw-mx-4 tw-mt-3 tw-mb-4 tw-text-center tw-text-xl\">\n      {{ \"loginOrCreateNewAccount\" | i18n }}\n    </p>\n\n    <div\n      class=\"tw-mt-3 tw-rounded-md tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-6\"\n    >\n      <h2 class=\"tw-mb-6 tw-text-xl tw-font-semibold\">{{ \"logInInitiated\" | i18n }}</h2>\n\n      <div class=\"tw-text-light\">\n        <p class=\"tw-mb-6\">{{ \"notificationSentDevice\" | i18n }}</p>\n\n        <p class=\"tw-mb-6\">\n          {{ \"fingerprintMatchInfo\" | i18n }}\n        </p>\n      </div>\n\n      <div class=\"tw-mb-6\">\n        <h4 class=\"tw-font-semibold\">{{ \"fingerprintPhraseHeader\" | i18n }}</h4>\n        <p>\n          <code>{{ passwordlessRequest?.fingerprintPhrase }}</code>\n        </p>\n      </div>\n\n      <div class=\"tw-my-10\" *ngIf=\"showResendNotification\">\n        <a [routerLink]=\"[]\" disabled=\"true\" (click)=\"startPasswordlessLogin()\">{{\n          \"resendNotification\" | i18n\n        }}</a>\n      </div>\n\n      <hr />\n\n      <div class=\"tw-text-light tw-mt-3\">\n        {{ \"loginWithDeviceEnabledInfo\" | i18n }}\n        <a routerLink=\"/login\">{{ \"viewAllLoginOptions\" | i18n }}</a>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { CaptchaProtectedComponent } from \"@bitwarden/angular/components/captchaProtected.component\";\nimport { AnonymousHubService } from \"@bitwarden/common/abstractions/anonymousHub.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { AuthRequestType } from \"@bitwarden/common/enums/authRequestType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { PasswordlessLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { PasswordlessCreateAuthRequest } from \"@bitwarden/common/models/request/passwordless-create-auth.request\";\nimport { AuthRequestResponse } from \"@bitwarden/common/models/response/auth-request.response\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\n\nimport { StateService } from \"../../core/state/state.service\";\n\n@Component({\n  selector: \"app-login-with-device\",\n  templateUrl: \"login-with-device.component.html\",\n})\nexport class LoginWithDeviceComponent\n  extends CaptchaProtectedComponent\n  implements OnInit, OnDestroy\n{\n  private destroy$ = new Subject<void>();\n  email: string;\n  showResendNotification = false;\n  passwordlessRequest: PasswordlessCreateAuthRequest;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  private authRequestKeyPair: [publicKey: ArrayBuffer, privateKey: ArrayBuffer];\n\n  constructor(\n    private router: Router,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private appIdService: AppIdService,\n    private passwordGenerationService: PasswordGenerationService,\n    private apiService: ApiService,\n    private authService: AuthService,\n    private logService: LogService,\n    environmentService: EnvironmentService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private anonymousHubService: AnonymousHubService,\n    private validationService: ValidationService,\n    private stateService: StateService,\n    private loginService: LoginService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n\n    const navigation = this.router.getCurrentNavigation();\n    if (navigation) {\n      this.email = this.loginService.getEmail();\n    }\n\n    //gets signalR push notification\n    this.authService\n      .getPushNotifcationObs$()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((id) => {\n        this.confirmResponse(id);\n      });\n  }\n\n  async ngOnInit() {\n    if (!this.email) {\n      this.router.navigate([\"/login\"]);\n      return;\n    }\n\n    this.startPasswordlessLogin();\n  }\n\n  async startPasswordlessLogin() {\n    this.showResendNotification = false;\n\n    try {\n      await this.buildAuthRequest();\n      const reqResponse = await this.apiService.postAuthRequest(this.passwordlessRequest);\n\n      if (reqResponse.id) {\n        this.anonymousHubService.createHubConnection(reqResponse.id);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    setTimeout(() => {\n      this.showResendNotification = true;\n    }, 12000);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.anonymousHubService.stopHubConnection();\n  }\n\n  private async confirmResponse(requestId: string) {\n    try {\n      const response = await this.apiService.getAuthResponse(\n        requestId,\n        this.passwordlessRequest.accessCode\n      );\n\n      if (!response.requestApproved) {\n        return;\n      }\n\n      const credentials = await this.buildLoginCredntials(requestId, response);\n      const loginResponse = await this.authService.logIn(credentials);\n\n      if (loginResponse.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (loginResponse.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        await this.loginService.saveEmailSettings();\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (error) {\n      if (error instanceof ErrorResponse) {\n        this.router.navigate([\"/login\"]);\n        this.validationService.showError(error);\n        return;\n      }\n\n      this.logService.error(error);\n    }\n  }\n\n  private async buildAuthRequest() {\n    this.authRequestKeyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const fingerprint = await (\n      await this.cryptoService.getFingerprint(this.email, this.authRequestKeyPair[0])\n    ).join(\"-\");\n    const deviceIdentifier = await this.appIdService.getAppId();\n    const publicKey = Utils.fromBufferToB64(this.authRequestKeyPair[0]);\n    const accessCode = await this.passwordGenerationService.generatePassword({ length: 25 });\n\n    this.passwordlessRequest = new PasswordlessCreateAuthRequest(\n      this.email,\n      deviceIdentifier,\n      publicKey,\n      AuthRequestType.AuthenticateAndUnlock,\n      accessCode,\n      fingerprint\n    );\n  }\n\n  private async buildLoginCredntials(\n    requestId: string,\n    response: AuthRequestResponse\n  ): Promise<PasswordlessLogInCredentials> {\n    const decKey = await this.cryptoService.rsaDecrypt(response.key, this.authRequestKeyPair[1]);\n    const decMasterPasswordHash = await this.cryptoService.rsaDecrypt(\n      response.masterPasswordHash,\n      this.authRequestKeyPair[1]\n    );\n    const key = new SymmetricCryptoKey(decKey);\n    const localHashedPassword = Utils.fromBufferToUtf8(decMasterPasswordHash);\n\n    return new PasswordlessLogInCredentials(\n      this.email,\n      this.passwordlessRequest.accessCode,\n      requestId,\n      key,\n      localHashedPassword\n    );\n  }\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/auth-result\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n  showPassword = false;\n  formPromise: Promise<AuthResult>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n  private selfHosted = false;\n  showLoginWithDevice: boolean;\n  validatedEmail = false;\n  paramEmailSet = false;\n\n  formGroup = this.formBuilder.group({\n    email: [\"\", [Validators.required, Validators.email]],\n    masterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n    rememberEmail: [false],\n  });\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n\n  get loggedEmail() {\n    return this.formGroup.value.email;\n  }\n\n  constructor(\n    protected apiService: ApiService,\n    protected appIdService: AppIdService,\n    protected authService: AuthService,\n    protected router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    protected stateService: StateService,\n    environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected ngZone: NgZone,\n    protected formBuilder: FormBuilder,\n    protected formValidationErrorService: FormValidationErrorsService,\n    protected route: ActivatedRoute,\n    protected loginService: LoginService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  get selfHostedDomain() {\n    return this.environmentService.hasBaseUrl() ? this.environmentService.getWebVaultUrl() : null;\n  }\n\n  async ngOnInit() {\n    this.route?.queryParams.subscribe((params) => {\n      if (params != null) {\n        const queryParamsEmail = params[\"email\"];\n        if (queryParamsEmail != null && queryParamsEmail.indexOf(\"@\") > -1) {\n          this.formGroup.get(\"email\").setValue(queryParamsEmail);\n          this.loginService.setEmail(queryParamsEmail);\n          this.paramEmailSet = true;\n        }\n      }\n    });\n    let email = this.loginService.getEmail();\n\n    if (email == null || email === \"\") {\n      email = await this.stateService.getRememberedEmail();\n    }\n\n    if (!this.paramEmailSet) {\n      this.formGroup.get(\"email\")?.setValue(email ?? \"\");\n    }\n    let rememberEmail = this.loginService.getRememberEmail();\n    if (rememberEmail == null) {\n      rememberEmail = (await this.stateService.getRememberedEmail()) != null;\n    }\n    this.formGroup.get(\"rememberEmail\")?.setValue(rememberEmail);\n  }\n\n  async submit(showToast = true) {\n    const data = this.formGroup.value;\n\n    await this.setupCaptcha();\n\n    this.formGroup.markAllAsTouched();\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return;\n    }\n\n    //desktop, browser; This should be removed once all clients use reactive forms\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return;\n    }\n\n    try {\n      const credentials = new PasswordLogInCredentials(\n        data.email,\n        data.masterPassword,\n        this.captchaToken,\n        null\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      this.setFormValues();\n      await this.loginService.saveEmailSettings();\n      if (this.handleCaptchaRequired(response)) {\n        return;\n      } else if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    if (this.ngZone.isStable) {\n      document.getElementById(\"masterPassword\").focus();\n    } else {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => document.getElementById(\"masterPassword\").focus());\n    }\n  }\n\n  async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n    await this.saveEmailSettings();\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n    const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    // Save sso params\n    await this.stateService.setSsoState(state);\n    await this.stateService.setSsoCodeVerifier(ssoCodeVerifier);\n\n    // Build URI\n    const webUrl = this.environmentService.getWebVaultUrl();\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      webUrl +\n        \"/#/sso?clientId=\" +\n        clientId +\n        \"&redirectUri=\" +\n        encodeURIComponent(ssoRedirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n\n  async validateEmail() {\n    this.formGroup.controls.email.markAsTouched();\n    const emailInvalid = this.formGroup.get(\"email\").invalid;\n    if (!emailInvalid) {\n      this.toggleValidateEmail(true);\n      await this.getLoginWithDevice(this.loggedEmail);\n    }\n  }\n\n  toggleValidateEmail(value: boolean) {\n    this.validatedEmail = value;\n    this.formGroup.controls.masterPassword.reset();\n  }\n\n  setFormValues() {\n    this.loginService.setEmail(this.formGroup.value.email);\n    this.loginService.setRememberEmail(this.formGroup.value.rememberEmail);\n  }\n\n  async saveEmailSettings() {\n    this.setFormValues();\n    await this.loginService.saveEmailSettings();\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  private async getLoginWithDevice(email: string) {\n    try {\n      const deviceIdentifier = await this.appIdService.getAppId();\n      const res = await this.apiService.getKnownDevice(email, deviceIdentifier);\n      //ensure the application is not self-hosted\n      this.showLoginWithDevice = res && !this.selfHosted;\n    } catch (e) {\n      this.showLoginWithDevice = false;\n    }\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"tw-container tw-mx-auto\"\n  [formGroup]=\"formGroup\"\n>\n  <div\n    class=\"tw-mx-auto tw-mt-5 tw-flex tw-max-w-lg tw-flex-col tw-items-center tw-justify-center tw-p-8\"\n  >\n    <div>\n      <img class=\"logo logo-themed\" alt=\"Bitwarden\" />\n      <p class=\"tw-mx-4 tw-mt-3 tw-mb-4 tw-text-center tw-text-xl\">\n        {{ \"loginOrCreateNewAccount\" | i18n }}\n      </p>\n      <div\n        class=\"tw-mt-3 tw-rounded-md tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-6\"\n      >\n        <ng-container *ngIf=\"!validatedEmail; else loginPage\">\n          <div class=\"tw-mb-3\">\n            <bit-form-field>\n              <bit-label>{{ \"emailAddress\" | i18n }}</bit-label>\n              <input\n                id=\"login_input_email\"\n                bitInput\n                type=\"email\"\n                formControlName=\"email\"\n                appAutofocus\n                (keyup.enter)=\"validateEmail()\"\n              />\n            </bit-form-field>\n          </div>\n\n          <div class=\"tw-mb-3 tw-flex tw-items-start\">\n            <div class=\"tw-flex tw-h-6 tw-items-center\">\n              <input\n                id=\"login_input_remember-email\"\n                class=\"tw-w-4 tw-rounded tw-border\"\n                bitInput\n                type=\"checkbox\"\n                formControlName=\"rememberEmail\"\n              />\n            </div>\n            <bit-label class=\"ml-2\">\n              {{ \"rememberEmail\" | i18n }}\n            </bit-label>\n          </div>\n\n          <div class=\"tw-mb-3\">\n            <button\n              bitButton\n              type=\"button\"\n              buttonType=\"primary\"\n              class=\"tw-w-full\"\n              [disabled]=\"form.loading\"\n              (click)=\"validateEmail()\"\n            >\n              <span> {{ \"continue\" | i18n }} </span>\n            </button>\n          </div>\n\n          <hr />\n\n          <p class=\"tw-m-0 tw-text-sm\">\n            {{ \"newAroundHere\" | i18n }}\n            <a routerLink=\"/register\">{{ \"createAccount\" | i18n }}</a>\n          </p>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</form>\n\n<ng-template [formGroup]=\"formGroup\" #loginPage>\n  <div class=\"tw-mb-6 tw-h-28\">\n    <bit-form-field class=\"!tw-mb-1\">\n      <bit-label>{{ \"masterPass\" | i18n }}</bit-label>\n      <input\n        id=\"login_input_master-password\"\n        type=\"password\"\n        bitInput\n        formControlName=\"masterPassword\"\n        appAutofocus\n      />\n      <button type=\"button\" bitSuffix bitIconButton bitPasswordInputToggle></button>\n    </bit-form-field>\n    <a class=\"-tw-mt-2\" routerLink=\"/hint\" (mousedown)=\"goToHint()\" (click)=\"setFormValues()\">{{\n      \"getMasterPasswordHint\" | i18n\n    }}</a>\n  </div>\n\n  <div [hidden]=\"!showCaptcha()\">\n    <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n  </div>\n\n  <div class=\"tw-mb-3 tw-flex tw-space-x-4\">\n    <button bitButton buttonType=\"primary\" type=\"submit\" [block]=\"true\" [loading]=\"form.loading\">\n      <span> {{ \"loginWithMasterPassword\" | i18n }} </span>\n    </button>\n  </div>\n\n  <div class=\"tw-mb-3\" *ngIf=\"showLoginWithDevice && showPasswordless\">\n    <button\n      bitButton\n      type=\"button\"\n      [block]=\"true\"\n      buttonType=\"secondary\"\n      (click)=\"startPasswordlessLogin()\"\n    >\n      <span> <i class=\"bwi bwi-mobile\"></i> {{ \"loginWithDevice\" | i18n }} </span>\n    </button>\n  </div>\n\n  <div class=\"tw-mb-3\">\n    <a\n      routerLink=\"/sso\"\n      (click)=\"saveEmailSettings()\"\n      bitButton\n      buttonType=\"secondary\"\n      class=\"tw-w-full\"\n    >\n      <i class=\"bwi bwi-provider tw-mr-2\"></i>\n      {{ \"enterpriseSingleSignOn\" | i18n }}\n    </a>\n  </div>\n\n  <hr />\n\n  <div class=\"tw-m-0 tw-text-sm\">\n    <p class=\"tw-mb-1\">{{ \"loggingInAs\" | i18n }} {{ loggedEmail }}</p>\n    <a [routerLink]=\"[]\" (click)=\"toggleValidateEmail(false)\">{{ \"notYou\" | i18n }}</a>\n  </div>\n</ng-template>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nimport { LoginComponent as BaseLoginComponent } from \"@bitwarden/angular/components/login.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\nimport { flagEnabled } from \"../../../utils/flags\";\nimport { RouterService, StateService } from \"../../core\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"login.component.html\",\n})\nexport class LoginComponent extends BaseLoginComponent implements OnInit, OnDestroy {\n  showResetPasswordAutoEnrollWarning = false;\n  enforcedPasswordPolicyOptions: MasterPasswordPolicyOptions;\n  policies: ListResponse<PolicyResponse>;\n  showPasswordless = false;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    apiService: ApiService,\n    appIdService: AppIdService,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    cryptoFunctionService: CryptoFunctionService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: InternalPolicyService,\n    logService: LogService,\n    ngZone: NgZone,\n    protected stateService: StateService,\n    private messagingService: MessagingService,\n    private routerService: RouterService,\n    formBuilder: FormBuilder,\n    formValidationErrorService: FormValidationErrorsService,\n    loginService: LoginService\n  ) {\n    super(\n      apiService,\n      appIdService,\n      authService,\n      router,\n      platformUtilsService,\n      i18nService,\n      stateService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      logService,\n      ngZone,\n      formBuilder,\n      formValidationErrorService,\n      route,\n      loginService\n    );\n    this.onSuccessfulLogin = async () => {\n      this.messagingService.send(\"setFullWidth\");\n    };\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n    this.showPasswordless = flagEnabled(\"showPasswordless\");\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.premium != null) {\n        this.routerService.setPreviousUrl(\"/settings/premium\");\n      } else if (qParams.org != null) {\n        const route = this.router.createUrlTree([\"create-organization\"], {\n          queryParams: { plan: qParams.org },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n\n      // Are they coming from an email for sponsoring a families organization\n      if (qParams.sponsorshipToken != null) {\n        const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n          queryParams: { token: qParams.sponsorshipToken },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      await super.ngOnInit();\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      let policyList: Policy[] = null;\n      try {\n        this.policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        policyList = this.policyService.mapPoliciesFromToken(this.policies);\n      } catch (e) {\n        this.logService.error(e);\n      }\n\n      if (policyList != null) {\n        const resetPasswordPolicy = this.policyService.getResetPasswordPolicyOptions(\n          policyList,\n          invite.organizationId\n        );\n        // Set to true if policy enabled and auto-enroll enabled\n        this.showResetPasswordAutoEnrollWarning =\n          resetPasswordPolicy[1] && resetPasswordPolicy[0].autoEnrollEnabled;\n\n        this.policyService\n          .masterPasswordPolicyOptions$(policyList)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((enforcedPasswordPolicyOptions) => {\n            this.enforcedPasswordPolicyOptions = enforcedPasswordPolicyOptions;\n          });\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async goAfterLogIn() {\n    const masterPassword = this.formGroup.value.masterPassword;\n\n    // Check master password against policy\n    if (this.enforcedPasswordPolicyOptions != null) {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      const masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n\n      // If invalid, save policies and require update\n      if (\n        !this.policyService.evaluateMasterPassword(\n          masterPasswordScore,\n          masterPassword,\n          this.enforcedPasswordPolicyOptions\n        )\n      ) {\n        const policiesData: { [id: string]: PolicyData } = {};\n        this.policies.data.map((p) => (policiesData[p.id] = new PolicyData(p)));\n        await this.policyService.replace(policiesData);\n        this.router.navigate([\"update-password\"]);\n        return;\n      }\n    }\n\n    const previousUrl = this.routerService.getPreviousUrl();\n    if (previousUrl) {\n      this.router.navigateByUrl(previousUrl);\n    } else {\n      this.loginService.clearValues();\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  goToHint() {\n    this.setFormValues();\n    this.router.navigateByUrl(\"/hint\");\n  }\n\n  async submit() {\n    const rememberEmail = this.formGroup.value.rememberEmail;\n\n    if (!rememberEmail) {\n      await this.stateService.setRememberedEmail(null);\n    }\n    await super.submit(false);\n  }\n\n  async startPasswordlessLogin() {\n    this.formGroup.get(\"masterPassword\")?.clearValidators();\n    this.formGroup.get(\"masterPassword\")?.updateValueAndValidity();\n\n    if (!this.formGroup.valid) {\n      return;\n    }\n\n    this.setFormValues();\n    this.router.navigate([\"/login-with-device\"]);\n  }\n\n  private getPasswordStrengthUserInput() {\n    const email = this.formGroup.value.email;\n    let userInput: string[] = [];\n    const atPosition = email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n}\n","export class DeleteRecoverRequest {\n  email: string;\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { DeleteRecoverRequest } from \"@bitwarden/common/models/request/delete-recover.request\";\n\n@Component({\n  selector: \"app-recover-delete\",\n  templateUrl: \"recover-delete.component.html\",\n})\nexport class RecoverDeleteComponent {\n  email: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new DeleteRecoverRequest();\n      request.email = this.email.trim().toLowerCase();\n      this.formPromise = this.apiService.postAccountRecoverDelete(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deleteRecoverEmailSent\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>{{ \"deleteRecoverDesc\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class TwoFactorRecoveryRequest extends SecretVerificationRequest {\n  recoveryCode: string;\n  email: string;\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorRecoveryRequest } from \"@bitwarden/common/models/request/two-factor-recovery.request\";\n\n@Component({\n  selector: \"app-recover-two-factor\",\n  templateUrl: \"recover-two-factor.component.html\",\n})\nexport class RecoverTwoFactorComponent {\n  email: string;\n  masterPassword: string;\n  recoveryCode: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private authService: AuthService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new TwoFactorRecoveryRequest();\n      request.recoveryCode = this.recoveryCode.replace(/\\s/g, \"\").toLowerCase();\n      request.email = this.email.trim().toLowerCase();\n      const key = await this.authService.makePreloginKey(this.masterPassword, request.email);\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n      this.formPromise = this.apiService.postTwoFactorRecover(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"twoStepRecoverDisabled\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"recoverAccountTwoStep\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>\n            {{ \"recoverAccountTwoStepDesc\" | i18n }}\n            <a\n              href=\"https://bitwarden.com/help/lost-two-step-device/\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              >{{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"password\"\n              name=\"MasterPassword\"\n              class=\"form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"recoveryCode\">{{ \"recoveryCodeTitle\" | i18n }}</label>\n            <input\n              id=\"recoveryCode\"\n              class=\"text-monospace form-control\"\n              type=\"text\"\n              name=\"RecoveryCode\"\n              [(ngModel)]=\"recoveryCode\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n  actionPromise: Promise<void | boolean>;\n  continuing = false;\n  leaving = false;\n\n  loading = true;\n  organization: Organization;\n  email: string;\n\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private keyConnectorService: KeyConnectorService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.organization = await this.keyConnectorService.getManagingOrganization();\n    this.email = await this.stateService.getEmail();\n    await this.syncService.fullSync(false);\n    this.loading = false;\n  }\n\n  async convert() {\n    this.continuing = true;\n    this.actionPromise = this.keyConnectorService.migrateUser();\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedMasterPassword\")\n      );\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n    }\n  }\n\n  async leave() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      this.organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.leaving = true;\n      this.actionPromise = this.organizationApiService.leave(this.organization.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e);\n    }\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"removeMasterPassword\" | i18n }}</p>\n      <hr />\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"convertOrganizationEncryptionDesc\" | i18n: organization.name }}</p>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-block\"\n            (click)=\"convert()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"continuing\"\n            ></i>\n            {{ \"removeMasterPassword\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-block\"\n            (click)=\"leave()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"leaving\"\n            ></i>\n            {{ \"leaveOrganization\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from \"@bitwarden/angular/components/remove-password.component\";\n\n@Component({\n  selector: \"app-remove-password\",\n  templateUrl: \"remove-password.component.html\",\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {}\n","import { SecretVerificationRequest } from \"../../../models/request/secret-verification.request\";\n\nexport class OrganizationUserResetPasswordEnrollmentRequest extends SecretVerificationRequest {\n  resetPasswordKey: string;\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { KeysRequest } from \"./keys.request\";\n\nexport class SetPasswordRequest {\n  masterPasswordHash: string;\n  key: string;\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    masterPasswordHash: string,\n    key: string,\n    masterPasswordHint: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.masterPasswordHash = masterPasswordHash;\n    this.key = key;\n    this.masterPasswordHint = masterPasswordHint;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit, OnDestroy {\n  masterPassword: string;\n  masterPasswordRetype: string;\n  formPromise: Promise<any>;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  protected email: string;\n  protected kdf: KdfType;\n  protected kdfIterations: number;\n\n  protected destroy$ = new Subject<void>();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected messagingService: MessagingService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.email = await this.stateService.getEmail();\n    this.policyService\n      .masterPasswordPolicyOptions$()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (enforcedPasswordPolicyOptions) =>\n          (this.enforcedPolicyOptions ??= enforcedPasswordPolicyOptions)\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    const email = await this.stateService.getEmail();\n    if (this.kdf == null) {\n      this.kdf = await this.stateService.getKdfType();\n    }\n    if (this.kdfIterations == null) {\n      this.kdfIterations = await this.stateService.getKdfIterations();\n    }\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email.trim().toLowerCase(),\n      this.kdf,\n      this.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    let encKey: [SymmetricCryptoKey, EncString] = null;\n    const existingEncKey = await this.cryptoService.getEncKey();\n    if (existingEncKey == null) {\n      encKey = await this.cryptoService.makeEncKey(key);\n    } else {\n      encKey = await this.cryptoService.remakeEncKey(key);\n    }\n\n    await this.performSubmitActions(masterPasswordHash, key, encKey);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    // Override in sub-class\n    // Can be used for additional validation and/or other processes the should occur before changing passwords\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    // Override in sub-class\n  }\n\n  async strongPassword(): Promise<boolean> {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordMinlength\")\n      );\n      return false;\n    }\n    if (this.masterPassword !== this.masterPasswordRetype) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return false;\n    }\n\n    const strengthResult = this.passwordStrengthResult;\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return false;\n    }\n\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keys.request\";\nimport { SetPasswordRequest } from \"@bitwarden/common/models/request/set-password.request\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n  syncLoading = true;\n  showPassword = false;\n  hint = \"\";\n  identifier: string = null;\n  orgId: string;\n  resetPasswordAutoEnroll = false;\n\n  onSuccessfulChangePassword: () => Promise<void>;\n  successRoute = \"vault\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    protected router: Router,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    this.syncLoading = false;\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    // Automatic Enrollment Detection\n    if (this.identifier != null) {\n      try {\n        const response = await this.organizationApiService.getAutoEnrollStatus(this.identifier);\n        this.orgId = response.id;\n        this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n        this.enforcedPolicyOptions =\n          await this.policyApiService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    }\n\n    super.ngOnInit();\n  }\n\n  async setupSubmitActions() {\n    this.kdf = DEFAULT_KDF_TYPE;\n    this.kdfIterations = DEFAULT_KDF_ITERATIONS;\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new SetPasswordRequest(\n      masterPasswordHash,\n      encKey[1].encryptedString,\n      this.hint,\n      this.kdf,\n      this.kdfIterations,\n      this.identifier,\n      new KeysRequest(keys[0], keys[1].encryptedString)\n    );\n    try {\n      if (this.resetPasswordAutoEnroll) {\n        this.formPromise = this.apiService\n          .setPassword(request)\n          .then(async () => {\n            await this.onSetPasswordSuccess(key, encKey, keys);\n            return this.organizationApiService.getKeys(this.orgId);\n          })\n          .then(async (response) => {\n            if (response == null) {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n            const userId = await this.stateService.getUserId();\n            const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n            // RSA Encrypt user's encKey.key with organization public key\n            const userEncKey = await this.cryptoService.getEncKey();\n            const encryptedKey = await this.cryptoService.rsaEncrypt(\n              userEncKey.key,\n              publicKey.buffer\n            );\n\n            const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n            resetRequest.masterPasswordHash = masterPasswordHash;\n            resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n            return this.organizationUserService.putOrganizationUserResetPasswordEnrollment(\n              this.orgId,\n              userId,\n              resetRequest\n            );\n          });\n      } else {\n        this.formPromise = this.apiService.setPassword(request).then(async () => {\n          await this.onSetPasswordSuccess(key, encKey, keys);\n        });\n      }\n\n      await this.formPromise;\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  private async onSetPasswordSuccess(\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString],\n    keys: [string, EncString]\n  ) {\n    await this.stateService.setKdfType(this.kdf);\n    await this.stateService.setKdfIterations(this.kdfIterations);\n    await this.cryptoService.setKey(key);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n    await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n    const localKeyHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    await this.cryptoService.setKeyHash(localKeyHash);\n  }\n}\n","<div class=\"progress\">\n  <div\n    class=\"progress-bar {{ color }}\"\n    role=\"progressbar\"\n    [ngStyle]=\"{ width: scoreWidth + '%' }\"\n    attr.aria-valuenow=\"{{ scoreWidth }}\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n  >\n    <ng-container *ngIf=\"showText && text\">\n      {{ text }}\n    </ng-container>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\n\nexport interface PasswordColorText {\n  color: string;\n  text: string;\n}\n\n@Component({\n  selector: \"app-password-strength\",\n  templateUrl: \"password-strength.component.html\",\n})\nexport class PasswordStrengthComponent implements OnChanges {\n  @Input() showText = false;\n  @Input() email: string;\n  @Input() name: string;\n  @Input() set password(value: string) {\n    this.updatePasswordStrength(value);\n  }\n  @Output() passwordStrengthResult = new EventEmitter<any>();\n  @Output() passwordScoreColor = new EventEmitter<PasswordColorText>();\n\n  masterPasswordScore: number;\n  scoreWidth = 0;\n  color = \"bg-danger\";\n  text: string;\n\n  private masterPasswordStrengthTimeout: any;\n\n  //used by desktop and browser to display strength text color\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  //used by desktop and browser to display strength text\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n\n  constructor(\n    private i18nService: I18nService,\n    private passwordGenerationService: PasswordGenerationService\n  ) {}\n\n  ngOnChanges(): void {\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      this.scoreWidth = this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n\n      switch (this.masterPasswordScore) {\n        case 4:\n          this.color = \"bg-success\";\n          this.text = this.i18nService.t(\"strong\");\n          break;\n        case 3:\n          this.color = \"bg-primary\";\n          this.text = this.i18nService.t(\"good\");\n          break;\n        case 2:\n          this.color = \"bg-warning\";\n          this.text = this.i18nService.t(\"weak\");\n          break;\n        default:\n          this.color = \"bg-danger\";\n          this.text = this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n          break;\n      }\n\n      this.setPasswordScoreText(this.color, this.text);\n    }, 300);\n  }\n\n  updatePasswordStrength(password: string) {\n    const masterPassword = password;\n\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n    this.passwordStrengthResult.emit(strengthResult);\n    this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n  }\n\n  getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const email = this.email;\n    const name = this.name;\n    const atPosition = email?.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (name != null && name !== \"\") {\n      userInput = userInput.concat(name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n\n  setPasswordScoreText(color: string, text: string) {\n    color = color.slice(3);\n    this.passwordScoreColor.emit({ color: color, text: text });\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body text-center\" *ngIf=\"syncLoading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!syncLoading\">\n          <app-callout type=\"info\">{{ \"ssoCompleteRegistration\" | i18n }}</app-callout>\n          <app-callout\n            type=\"warning\"\n            title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n            *ngIf=\"resetPasswordAutoEnroll\"\n          >\n            {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n          </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength\n                  [password]=\"masterPassword\"\n                  [email]=\"email\"\n                  [showText]=\"true\"\n                  (passwordStrengthResult)=\"getStrengthResult($event)\"\n                >\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n            <small class=\"form-text text-muted\">{{ \"masterPassDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SetPasswordComponent as BaseSetPasswordComponent } from \"@bitwarden/angular/components/set-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-set-password\",\n  templateUrl: \"set-password.component.html\",\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    router: Router,\n    syncService: SyncService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    organizationApiService: OrganizationApiServiceAbstraction,\n    organizationUserService: OrganizationUserService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyApiService,\n      policyService,\n      router,\n      apiService,\n      syncService,\n      route,\n      stateService,\n      organizationApiService,\n      organizationUserService\n    );\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/auth-result\";\nimport { SsoLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\nimport { SsoPreValidateResponse } from \"@bitwarden/common/models/response/sso-pre-validate.response\";\n\n@Directive()\nexport class SsoComponent {\n  identifier: string;\n  loggingIn = false;\n\n  formPromise: Promise<AuthResult>;\n  initiateSsoFormPromise: Promise<SsoPreValidateResponse>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"lock\";\n  protected changePasswordRoute = \"set-password\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected clientId: string;\n  protected redirectUri: string;\n  protected state: string;\n  protected codeChallenge: string;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.code != null && qParams.state != null) {\n        const codeVerifier = await this.stateService.getSsoCodeVerifier();\n        const state = await this.stateService.getSsoState();\n        await this.stateService.setSsoCodeVerifier(null);\n        await this.stateService.setSsoState(null);\n        if (\n          qParams.code != null &&\n          codeVerifier != null &&\n          state != null &&\n          this.checkState(state, qParams.state)\n        ) {\n          await this.logIn(\n            qParams.code,\n            codeVerifier,\n            this.getOrgIdentifierFromState(qParams.state)\n          );\n        }\n      } else if (\n        qParams.clientId != null &&\n        qParams.redirectUri != null &&\n        qParams.state != null &&\n        qParams.codeChallenge != null\n      ) {\n        this.redirectUri = qParams.redirectUri;\n        this.state = qParams.state;\n        this.codeChallenge = qParams.codeChallenge;\n        this.clientId = qParams.clientId;\n      }\n    });\n  }\n\n  async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n    if (this.identifier == null || this.identifier === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"ssoValidationFailed\"),\n        this.i18nService.t(\"ssoIdentifierRequired\")\n      );\n      return;\n    }\n\n    this.initiateSsoFormPromise = this.apiService.preValidateSso(this.identifier);\n    const response = await this.initiateSsoFormPromise;\n\n    const authorizeUrl = await this.buildAuthorizeUrl(\n      returnUri,\n      includeUserIdentifier,\n      response.token\n    );\n    this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n  }\n\n  protected async buildAuthorizeUrl(\n    returnUri?: string,\n    includeUserIdentifier?: boolean,\n    token?: string\n  ): Promise<string> {\n    let codeChallenge = this.codeChallenge;\n    let state = this.state;\n\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    if (codeChallenge == null) {\n      const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n      codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      await this.stateService.setSsoCodeVerifier(codeVerifier);\n    }\n\n    if (state == null) {\n      state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      if (returnUri) {\n        state += `_returnUri='${returnUri}'`;\n      }\n    }\n\n    // Add Organization Identifier to state\n    state += `_identifier=${this.identifier}`;\n\n    // Save state (regardless of new or existing)\n    await this.stateService.setSsoState(state);\n\n    let authorizeUrl =\n      this.environmentService.getIdentityUrl() +\n      \"/connect/authorize?\" +\n      \"client_id=\" +\n      this.clientId +\n      \"&redirect_uri=\" +\n      encodeURIComponent(this.redirectUri) +\n      \"&\" +\n      \"response_type=code&scope=api offline_access&\" +\n      \"state=\" +\n      state +\n      \"&code_challenge=\" +\n      codeChallenge +\n      \"&\" +\n      \"code_challenge_method=S256&response_mode=query&\" +\n      \"domain_hint=\" +\n      encodeURIComponent(this.identifier) +\n      \"&ssoToken=\" +\n      encodeURIComponent(token);\n\n    if (includeUserIdentifier) {\n      const userIdentifier = await this.apiService.getSsoUserIdentifier();\n      authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n    }\n\n    return authorizeUrl;\n  }\n\n  private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n    this.loggingIn = true;\n    try {\n      const credentials = new SsoLogInCredentials(\n        code,\n        codeVerifier,\n        this.redirectUri,\n        orgIdFromState\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n              sso: \"true\",\n            },\n          });\n        }\n      } else if (response.resetMasterPassword) {\n        if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n          this.onSuccessfulLoginChangePasswordNavigate();\n        } else {\n          this.router.navigate([this.changePasswordRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n            },\n          });\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n\n      // TODO: Key Connector Service should pass this error message to the logout callback instead of displaying here\n      if (e.message === \"Key Connector error\") {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"ssoKeyConnectorError\")\n        );\n      }\n    }\n    this.loggingIn = false;\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  class=\"container\"\n  [appApiAction]=\"initiateSsoFormPromise\"\n  ngNativeValidate\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <img class=\"logo mb-2 logo-themed\" alt=\"Bitwarden\" />\n      <div class=\"card d-block mt-4\">\n        <div class=\"card-body\" *ngIf=\"loggingIn\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loggingIn\">\n          <p>{{ \"ssoLogInWithOrgIdentifier\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"identifier\">{{ \"ssoIdentifier\" | i18n }}</label>\n            <input\n              id=\"identifier\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Identifier\"\n              [(ngModel)]=\"identifier\"\n              required\n              appAutofocus\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"logIn\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SsoComponent as BaseSsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-sso\",\n  templateUrl: \"sso.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SsoComponent extends BaseSsoComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      } else {\n        const storedIdentifier = await this.stateService.getSsoOrgIdentifier();\n        if (storedIdentifier != null) {\n          this.identifier = storedIdentifier;\n        }\n      }\n    });\n  }\n\n  async submit() {\n    await this.stateService.setSsoOrganizationIdentifier(this.identifier);\n    if (this.clientId === \"browser\") {\n      document.cookie = `ssoHandOffMessage=${this.i18nService.t(\"ssoHandOff\")};SameSite=strict`;\n    }\n    super.submit();\n  }\n}\n","export class ReferenceEventRequest {\n  id: string;\n  layout: string;\n  flow: string;\n}\n","<ng-template>\n  <div\n    class=\"tw-inline-block tw-w-11/12 tw-pl-7\"\n    [ngClass]=\"{ 'tw-border-0 tw-border-l tw-border-solid tw-border-secondary-300': applyBorder }\"\n  >\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","import { CdkStep } from \"@angular/cdk/stepper\";\nimport { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-vertical-step\",\n  templateUrl: \"vertical-step.component.html\",\n  providers: [{ provide: CdkStep, useExisting: VerticalStep }],\n})\nexport class VerticalStep extends CdkStep {\n  @Input() subLabel = \"\";\n  @Input() applyBorder = true;\n}\n","<div class=\"tw-m-2.5 tw-h-16 tw-text-center\">\n  <button\n    (click)=\"selectStep()\"\n    [disabled]=\"disabled\"\n    class=\"tw-flex tw-w-full tw-items-center tw-border-none tw-bg-transparent\"\n    [ngClass]=\"{\n      'hover:tw-bg-secondary-100': !disabled && step.editable\n    }\"\n    [attr.aria-expanded]=\"selected\"\n  >\n    <span\n      class=\"tw-mr-3.5 tw-w-9 tw-rounded-full tw-font-bold tw-leading-9\"\n      *ngIf=\"!step.completed\"\n      [ngClass]=\"{\n        'tw-bg-primary-500 tw-text-contrast': selected,\n        'tw-bg-secondary-300 tw-text-main': !selected && !disabled && step.editable,\n        'tw-bg-transparent tw-text-muted': disabled\n      }\"\n    >\n      {{ stepNumber }}\n    </span>\n    <span\n      class=\"tw-mr-3.5 tw-w-9 tw-rounded-full tw-bg-primary-500 tw-font-bold tw-leading-9 tw-text-contrast\"\n      *ngIf=\"step.completed\"\n    >\n      <i class=\"bwi bwi-fw bwi-check tw-p-1\" aria-hidden=\"true\"></i>\n    </span>\n    <div\n      class=\"tw-txt-main tw-mt-3.5 tw-h-12 tw-text-left tw-leading-snug\"\n      [ngClass]=\"{\n        'tw-font-bold': selected\n      }\"\n    >\n      <p\n        class=\"main-label text tw-mb-1 tw-text-main\"\n        [ngClass]=\"{\n          'tw-mt-1': !step.subLabel\n        }\"\n      >\n        {{ step.label }}\n      </p>\n      <p class=\"sub-label small tw-text-muted\">{{ step.subLabel }}</p>\n    </div>\n  </button>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { VerticalStep } from \"./vertical-step.component\";\n\n@Component({\n  selector: \"app-vertical-step-content\",\n  templateUrl: \"vertical-step-content.component.html\",\n})\nexport class VerticalStepContentComponent {\n  @Output() onSelectStep = new EventEmitter<void>();\n\n  @Input() disabled = false;\n  @Input() selected = false;\n  @Input() step: VerticalStep;\n  @Input() stepNumber: number;\n\n  selectStep() {\n    this.onSelectStep.emit();\n  }\n}\n","<div>\n  <ul class=\"tw-flex tw-list-none tw-flex-col tw-flex-wrap tw-p-5\">\n    <li *ngFor=\"let step of steps; let i = index; let isLast = last\">\n      <app-vertical-step-content\n        [disabled]=\"isStepDisabled(i)\"\n        [selected]=\"selectedIndex === i\"\n        [step]=\"step\"\n        [stepNumber]=\"i + 1\"\n        (onSelectStep)=\"selectStepByIndex(i)\"\n      ></app-vertical-step-content>\n      <div\n        class=\"tw-inline-block tw-pl-7\"\n        *ngIf=\"selectedIndex === i\"\n        [ngTemplateOutlet]=\"selected ? selected.content : null\"\n      ></div>\n      <div\n        class=\"tw-ml-8 tw-h-6 tw-border-0 tw-border-l tw-border-solid tw-border-secondary-300\"\n        *ngIf=\"!isLast && !(selectedIndex === i)\"\n      ></div>\n    </li>\n  </ul>\n</div>\n","import { CdkStepper } from \"@angular/cdk/stepper\";\nimport { Component, Input, QueryList } from \"@angular/core\";\n\nimport { VerticalStep } from \"./vertical-step.component\";\n\n@Component({\n  selector: \"app-vertical-stepper\",\n  templateUrl: \"vertical-stepper.component.html\",\n  providers: [{ provide: CdkStepper, useExisting: VerticalStepperComponent }],\n})\nexport class VerticalStepperComponent extends CdkStepper {\n  readonly steps: QueryList<VerticalStep>;\n\n  @Input()\n  activeClass = \"active\";\n\n  isNextButtonHidden() {\n    return !(this.steps.length === this.selectedIndex + 1);\n  }\n\n  isStepDisabled(index: number) {\n    if (this.selectedIndex !== index) {\n      return this.selectedIndex === index - 1\n        ? !this.steps.find((_, i) => i == index - 1)?.completed\n        : true;\n    }\n    return false;\n  }\n\n  selectStepByIndex(index: number): void {\n    this.selectedIndex = index;\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { CaptchaProtectedRequest } from \"./captcha-protected.request\";\nimport { KeysRequest } from \"./keys.request\";\nimport { ReferenceEventRequest } from \"./reference-event.request\";\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  token: string;\n  organizationUserId: string;\n\n  constructor(\n    public email: string,\n    public name: string,\n    public masterPasswordHash: string,\n    masterPasswordHint: string,\n    public key: string,\n    public kdf: KdfType,\n    public kdfIterations: number,\n    public referenceData: ReferenceEventRequest,\n    public captchaResponse: string\n  ) {\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { AbstractControl, UntypedFormGroup, ValidatorFn } from \"@angular/forms\";\n\nimport { FormGroupControls } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\n\nexport class InputsFieldMatch {\n  //check to ensure two fields do not have the same value\n  static validateInputsDoesntMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? {\n              inputsMatchError: {\n                message: errorMessage,\n              },\n            }\n          : null;\n      }\n\n      return null;\n    };\n  }\n\n  //check to ensure two fields have the same value\n  static validateInputsMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? null\n          : {\n              inputsDoesntMatchError: {\n                message: errorMessage,\n              },\n            };\n      }\n\n      return null;\n    };\n  }\n\n  //checks the formGroup if two fields have the same value and validation is controlled from either field\n  static validateFormInputsMatch(field: string, fieldMatchTo: string, errorMessage: string) {\n    return (formGroup: UntypedFormGroup) => {\n      const fieldCtrl = formGroup.controls[field];\n      const fieldMatchToCtrl = formGroup.controls[fieldMatchTo];\n\n      if (fieldCtrl.value !== fieldMatchToCtrl.value) {\n        fieldMatchToCtrl.setErrors({\n          inputsDoesntMatchError: {\n            message: errorMessage,\n          },\n        });\n      } else {\n        fieldMatchToCtrl.setErrors(null);\n      }\n    };\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { AbstractControl, UntypedFormBuilder, ValidatorFn, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keys.request\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/reference-event.request\";\nimport { RegisterRequest } from \"@bitwarden/common/models/request/register.request\";\nimport { RegisterResponse } from \"@bitwarden/common/models/response/authentication/register.response\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\nimport { InputsFieldMatch } from \"../validators/inputsFieldMatch.validator\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() isInTrialFlow = false;\n  @Output() createdAccount = new EventEmitter<string>();\n\n  showPassword = false;\n  formPromise: Promise<RegisterResponse>;\n  referenceData: ReferenceEventRequest;\n  showTerms = true;\n  showErrorSummary = false;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  formGroup = this.formBuilder.group(\n    {\n      email: [\"\", [Validators.required, Validators.email]],\n      name: [\"\"],\n      masterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      confirmMasterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      hint: [\n        null,\n        [\n          InputsFieldMatch.validateInputsDoesntMatch(\n            \"masterPassword\",\n            this.i18nService.t(\"hintEqualsPassword\")\n          ),\n        ],\n      ],\n      acceptPolicies: [false, [this.acceptPoliciesValidation()]],\n    },\n    {\n      validator: InputsFieldMatch.validateFormInputsMatch(\n        \"masterPassword\",\n        \"confirmMasterPassword\",\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      ),\n    }\n  );\n\n  protected successRoute = \"login\";\n\n  protected accountCreated = false;\n\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected formValidationErrorService: FormValidationErrorsService,\n    protected formBuilder: UntypedFormBuilder,\n    protected authService: AuthService,\n    protected router: Router,\n    i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    protected passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    protected logService: LogService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.showTerms = !platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.setupCaptcha();\n  }\n\n  async submit(showToast = true) {\n    let email = this.formGroup.value.email;\n    email = email.trim().toLowerCase();\n    let name = this.formGroup.value.name;\n    name = name === \"\" ? null : name; // Why do we do this?\n    const masterPassword = this.formGroup.value.masterPassword;\n    try {\n      if (!this.accountCreated) {\n        const registerResponse = await this.registerAccount(\n          await this.buildRegisterRequest(email, masterPassword, name),\n          showToast\n        );\n        if (!registerResponse.successful) {\n          return;\n        }\n        this.captchaBypassToken = registerResponse.captchaBypassToken;\n        this.accountCreated = true;\n      }\n      if (this.isInTrialFlow) {\n        if (!this.accountCreated) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"trialAccountCreated\")\n          );\n        }\n        const loginResponse = await this.logIn(email, masterPassword, this.captchaBypassToken);\n        if (loginResponse.captchaRequired) {\n          return;\n        }\n        this.createdAccount.emit(this.formGroup.value.email);\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"newAccountCreated\")\n        );\n        this.router.navigate([this.successRoute], { queryParams: { email: email } });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        case \"inputsDoesntMatchError\":\n          return this.i18nService.t(\"masterPassDoesntMatch\");\n        case \"inputsMatchError\":\n          return this.i18nService.t(\"hintEqualsPassword\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  //validation would be ignored on selfhosted\n  private acceptPoliciesValidation(): ValidatorFn {\n    return (control: AbstractControl) => {\n      const ctrlValue = control.value;\n\n      return !ctrlValue && this.showTerms ? { required: true } : null;\n    };\n  }\n\n  private async validateRegistration(showToast: boolean): Promise<{ isValid: boolean }> {\n    this.formGroup.markAllAsTouched();\n    this.showErrorSummary = true;\n\n    if (this.formGroup.get(\"acceptPolicies\").hasError(\"required\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"acceptPoliciesRequired\")\n      );\n      return { isValid: false };\n    }\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return { isValid: false };\n    }\n\n    //desktop, browser\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return { isValid: false };\n    }\n\n    if (this.passwordStrengthResult != null && this.passwordStrengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return { isValid: false };\n      }\n    }\n    return { isValid: true };\n  }\n\n  private async buildRegisterRequest(\n    email: string,\n    masterPassword: string,\n    name: string\n  ): Promise<RegisterRequest> {\n    const hint = this.formGroup.value.hint;\n    const kdf = DEFAULT_KDF_TYPE;\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new RegisterRequest(\n      email,\n      name,\n      hashedPassword,\n      hint,\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      this.referenceData,\n      this.captchaToken\n    );\n    request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n    const orgInvite = await this.stateService.getOrganizationInvitation();\n    if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n      request.token = orgInvite.token;\n      request.organizationUserId = orgInvite.organizationUserId;\n    }\n    return request;\n  }\n\n  private async registerAccount(\n    request: RegisterRequest,\n    showToast: boolean\n  ): Promise<{ successful: boolean; captchaBypassToken?: string }> {\n    if (!(await this.validateRegistration(showToast)).isValid) {\n      return { successful: false };\n    }\n    this.formPromise = this.apiService.postRegister(request);\n    try {\n      const response = await this.formPromise;\n      return { successful: true, captchaBypassToken: response.captchaBypassToken };\n    } catch (e) {\n      if (this.handleCaptchaRequired(e)) {\n        return { successful: false };\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  private async logIn(\n    email: string,\n    masterPassword: string,\n    captchaBypassToken: string\n  ): Promise<{ captchaRequired: boolean }> {\n    const credentials = new PasswordLogInCredentials(\n      email,\n      masterPassword,\n      captchaBypassToken,\n      null\n    );\n    const loginResponse = await this.authService.logIn(credentials);\n    if (this.handleCaptchaRequired(loginResponse)) {\n      return { captchaRequired: true };\n    }\n    return { captchaRequired: false };\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"tw-container tw-mx-auto\"\n  [formGroup]=\"formGroup\"\n>\n  <div>\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"emailAddress\" | i18n }}</bit-label>\n        <input id=\"register-form_input_email\" bitInput type=\"email\" formControlName=\"email\" />\n        <bit-hint>{{ \"emailAddressDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"name\" | i18n }}</bit-label>\n        <input id=\"register-form_input_name\" bitInput type=\"text\" formControlName=\"name\" />\n        <bit-hint>{{ \"yourNameDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <app-callout\n        type=\"info\"\n        [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n        *ngIf=\"enforcedPolicyOptions\"\n      >\n      </app-callout>\n      <bit-form-field>\n        <bit-label>{{ \"masterPass\" | i18n }}</bit-label>\n        <input\n          id=\"register-form_input_master-password\"\n          bitInput\n          type=\"password\"\n          formControlName=\"masterPassword\"\n        />\n        <button\n          type=\"button\"\n          bitSuffix\n          bitIconButton\n          bitPasswordInputToggle\n          [(toggled)]=\"showPassword\"\n        ></button>\n        <bit-hint>\n          <span class=\"tw-font-semibold\">Important:</span>\n          {{ \"masterPassImportant\" | i18n }}\n        </bit-hint>\n      </bit-form-field>\n      <app-password-strength\n        [password]=\"formGroup.get('masterPassword')?.value\"\n        [email]=\"formGroup.get('email')?.value\"\n        [name]=\"formGroup.get('name')?.value\"\n        [showText]=\"true\"\n        (passwordStrengthResult)=\"getStrengthResult($event)\"\n      >\n      </app-password-strength>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"reTypeMasterPass\" | i18n }}</bit-label>\n        <input\n          id=\"register-form_input_confirm-master-password\"\n          bitInput\n          type=\"password\"\n          formControlName=\"confirmMasterPassword\"\n        />\n        <button\n          type=\"button\"\n          bitSuffix\n          bitIconButton\n          bitPasswordInputToggle\n          [(toggled)]=\"showPassword\"\n        ></button>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"masterPassHint\" | i18n }}</bit-label>\n        <input id=\"register-form_input_hint\" bitInput type=\"text\" formControlName=\"hint\" />\n        <bit-hint>{{ \"masterPassHintDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div [hidden]=\"!showCaptcha()\">\n      <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n    </div>\n\n    <div class=\"tw-mb-3 tw-flex tw-items-start\" *ngIf=\"showTerms\">\n      <div class=\"tw-flex tw-h-6 tw-items-center\">\n        <input\n          id=\"register-form_input_accept-policies\"\n          class=\"tw-border-gray-300 tw-w-4 tw-rounded tw-border\"\n          bitInput\n          type=\"checkbox\"\n          formControlName=\"acceptPolicies\"\n        />\n      </div>\n      <bit-label class=\"ml-2\">\n        {{ \"acceptPolicies\" | i18n }}<br />\n        <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{\n          \"termsOfService\" | i18n\n        }}</a\n        >,\n        <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{\n          \"privacyPolicy\" | i18n\n        }}</a>\n      </bit-label>\n    </div>\n\n    <div class=\"tw-mb-3 tw-flex\">\n      <ng-container *ngIf=\"!accountCreated\">\n        <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n          {{ \"createAccount\" | i18n }}\n        </button>\n        <a\n          bitButton\n          buttonType=\"secondary\"\n          routerLink=\"/login\"\n          class=\"tw-ml-3 tw-inline-flex tw-items-center tw-px-3\"\n        >\n          <i class=\"bwi bwi-sign-in tw-mr-2\"></i>\n          {{ \"logIn\" | i18n }}\n        </a>\n      </ng-container>\n      <ng-container *ngIf=\"accountCreated\">\n        <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n          {{ \"logIn\" | i18n }}\n        </button>\n      </ng-container>\n    </div>\n    <bit-error-summary *ngIf=\"showErrorSummary\" [formGroup]=\"formGroup\"></bit-error-summary>\n  </div>\n</form>\n","import { Component, Input } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"@bitwarden/angular/components/register.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/reference-event.request\";\n\n@Component({\n  selector: \"app-register-form\",\n  templateUrl: \"./register-form.component.html\",\n})\nexport class RegisterFormComponent extends BaseRegisterComponent {\n  @Input() queryParamEmail: string;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() referenceDataValue: ReferenceEventRequest;\n\n  showErrorSummary = false;\n\n  constructor(\n    formValidationErrorService: FormValidationErrorsService,\n    formBuilder: UntypedFormBuilder,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      formValidationErrorService,\n      formBuilder,\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.referenceData = this.referenceDataValue;\n\n    if (this.queryParamEmail) {\n      this.formGroup.get(\"email\")?.setValue(this.queryParamEmail);\n    }\n  }\n\n  async submit() {\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.passwordStrengthResult.score,\n        this.formGroup.value.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    await super.submit(false);\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-forbes\",\n  templateUrl: \"logo-forbes.component.html\",\n})\nexport class LogoForbesComponent {}\n","<figure>\n  <figcaption>\n    <cite>\n      <img\n        src=\"../../images/register-layout/forbes-logo.svg\"\n        class=\"tw-mx-auto tw-block tw-w-40\"\n        alt=\"Forbes Logo\"\n      />\n    </cite>\n  </figcaption>\n  <blockquote class=\"tw-mx-auto tw-mt-2 tw-max-w-xl tw-px-4 tw-text-center\">\n    “Bitwarden boasts the backing of some of the world's best security experts and an attractive,\n    easy-to-use interface”\n  </blockquote>\n</figure>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-us-news\",\n  templateUrl: \"logo-us-news.component.html\",\n})\nexport class LogoUSNewsComponent {}\n","<img\n  src=\"../../images/register-layout/usnews-360-badge.svg\"\n  class=\"tw-mx-auto tw-block tw-w-48\"\n  alt=\"US News 360 Reviews Best Password Manager\"\n/>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise-content\",\n  templateUrl: \"enterprise-content.component.html\",\n})\nexport class EnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams-content\",\n  templateUrl: \"teams-content.component.html\",\n})\nexport class TeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-trial-confirmation-details\",\n  templateUrl: \"confirmation-details.component.html\",\n})\nexport class ConfirmationDetailsComponent {\n  @Input() email: string;\n  @Input() orgLabel: string;\n}\n","<div class=\"tw-pl-6 tw-pb-6\">\n  <p class=\"tw-text-xl\">{{ \"trialThankYou\" | i18n: orgLabel }}</p>\n  <ul class=\"tw-list-disc\">\n    <li>\n      <p>\n        {{ \"trialConfirmationEmail\" | i18n }}\n        <span class=\"tw-font-bold\">{{ email }}</span\n        >.\n      </p>\n    </li>\n    <li>\n      <p>\n        {{ \"trialPaidInfoMessage\" | i18n: orgLabel }}\n      </p>\n    </li>\n  </ul>\n</div>\n","<form #form [formGroup]=\"formGroup\" [appApiAction]=\"formPromise\" (ngSubmit)=\"submit()\">\n  <div class=\"tw-container tw-mb-3\">\n    <div class=\"tw-mb-6\">\n      <h2 class=\"tw-mb-3 tw-text-base tw-font-semibold\">{{ \"billingPlanLabel\" | i18n }}</h2>\n      <div class=\"tw-mb-1 tw-items-center\" *ngFor=\"let selectablePlan of selectablePlans\">\n        <label class=\"tw- tw-block tw-text-main\" for=\"interval{{ selectablePlan.type }}\">\n          <input\n            checked\n            class=\"tw-h-4 tw-w-4 tw-align-middle\"\n            id=\"interval{{ selectablePlan.type }}\"\n            name=\"plan\"\n            type=\"radio\"\n            [value]=\"selectablePlan.type\"\n            formControlName=\"plan\"\n          />\n          <ng-container *ngIf=\"selectablePlan.isAnnual\">\n            {{ \"annual\" | i18n }} -\n            {{\n              (selectablePlan.basePrice === 0 ? selectablePlan.seatPrice : selectablePlan.basePrice)\n                | currency: \"$\"\n            }}\n            /{{ \"yr\" | i18n }}\n          </ng-container>\n          <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n            {{ \"monthly\" | i18n }} -\n            {{\n              (selectablePlan.basePrice === 0 ? selectablePlan.seatPrice : selectablePlan.basePrice)\n                | currency: \"$\"\n            }}\n            /{{ \"monthAbbr\" | i18n }}\n          </ng-container>\n        </label>\n      </div>\n    </div>\n\n    <div class=\"tw-mb-4\">\n      <h2 class=\"tw-mb-3 tw-text-base tw-font-semibold\">{{ \"paymentType\" | i18n }}</h2>\n      <app-payment [hideCredit]=\"true\" [trialFlow]=\"true\"></app-payment>\n      <app-tax-info [trialFlow]=\"true\" (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    </div>\n\n    <div class=\"tw-flex tw-space-x-2\">\n      <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n        {{ \"startTrial\" | i18n }}\n      </button>\n\n      <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"stepBack()\">Back</button>\n    </div>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { UntypedFormBuilder, FormGroup } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\nimport { OrganizationPlansComponent } from \"../../settings/organization-plans.component\";\n\n@Component({\n  selector: \"app-billing\",\n  templateUrl: \"./billing.component.html\",\n})\nexport class BillingComponent extends OrganizationPlansComponent {\n  @Input() orgInfoForm: FormGroup;\n  @Output() previousStep = new EventEmitter();\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    router: Router,\n    syncService: SyncService,\n    policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    messagingService: MessagingService,\n    formBuilder: UntypedFormBuilder,\n    organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      apiService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      router,\n      syncService,\n      policyService,\n      organizationService,\n      logService,\n      messagingService,\n      formBuilder,\n      organizationApiService\n    );\n  }\n\n  async ngOnInit() {\n    const additionalSeats = this.product == ProductType.Families ? 0 : 1;\n    this.formGroup.patchValue({\n      name: this.orgInfoForm.value.name,\n      billingEmail: this.orgInfoForm.value.email,\n      additionalSeats: additionalSeats,\n      plan: this.plan,\n      product: this.product,\n    });\n    this.isInTrialFlow = true;\n    await super.ngOnInit();\n  }\n\n  stepBack() {\n    this.previousStep.emit();\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-default-content\",\n  templateUrl: \"default-content.component.html\",\n})\nexport class DefaultContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise1-content\",\n  templateUrl: \"enterprise1-content.component.html\",\n})\nexport class Enterprise1ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise2-content\",\n  templateUrl: \"enterprise2-content.component.html\",\n})\nexport class Enterprise2ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Enterprise Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams1-content\",\n  templateUrl: \"teams1-content.component.html\",\n})\nexport class Teams1ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Teams Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams2-content\",\n  templateUrl: \"teams2-content.component.html\",\n})\nexport class Teams2ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-cnet\",\n  templateUrl: \"logo-cnet.component.html\",\n})\nexport class LogoCnetComponent {}\n","<figure>\n  <figcaption>\n    <cite>\n      <img\n        src=\"../../images/register-layout/cnet-logo.svg\"\n        class=\"tw-mx-auto tw-block tw-w-40\"\n        alt=\"CNET Logo\"\n      />\n    </cite>\n  </figcaption>\n  <blockquote class=\"tw-mx-auto tw-mt-2 tw-max-w-xl tw-px-4 tw-text-center\">\n    \"No more excuses; start using Bitwarden today. The identity you save could be your own. The\n    money definitely will be.\"\n  </blockquote>\n</figure>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-enterprise-content\",\n  templateUrl: \"cnet-enterprise-content.component.html\",\n})\nexport class CnetEnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Enterprise Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-individual-content\",\n  templateUrl: \"cnet-individual-content.component.html\",\n})\nexport class CnetIndividualContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Premium Account Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Secure your account with advanced two-step login</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-teams-content\",\n  templateUrl: \"cnet-teams-content.component.html\",\n})\nexport class CnetTeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Teams Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-abm-enterprise-content\",\n  templateUrl: \"abm-enterprise-content.component.html\",\n})\nexport class AbmEnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-abm-teams-content\",\n  templateUrl: \"abm-teams-content.component.html\",\n})\nexport class AbmTeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","<div *ngIf=\"accountCreateOnly\" class=\"\">\n  <h1 class=\"tw-mt-12 tw-text-center tw-text-xl\">{{ \"createAccount\" | i18n }}</h1>\n  <div\n    class=\"tw-min-w-xl tw-m-auto tw-max-w-xl tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-8\"\n  >\n    <app-register-form\n      [queryParamEmail]=\"email\"\n      [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n      [referenceDataValue]=\"referenceData\"\n    ></app-register-form>\n  </div>\n</div>\n<div *ngIf=\"!accountCreateOnly\">\n  <div class=\"tw-absolute tw--z-10 tw--mt-48 tw-h-[28rem] tw-w-full tw-bg-background-alt2\"></div>\n  <div class=\"tw-min-w-4xl tw-mx-auto tw-flex tw-max-w-screen-xl tw-gap-12 tw-px-4\">\n    <div class=\"tw-w-1/2\">\n      <img\n        alt=\"Bitwarden\"\n        style=\"height: 50px; width: 335px\"\n        class=\"tw-mt-6\"\n        src=\"../../images/register-layout/logo-horizontal-white.svg\"\n      />\n\n      <div class=\"tw-pt-12\">\n        <!-- Layout params are used by marketing to determine left-hand content -->\n        <app-default-content *ngIf=\"layout === layouts.default\"></app-default-content>\n        <app-teams-content *ngIf=\"layout === layouts.teams\"></app-teams-content>\n        <app-teams1-content *ngIf=\"layout === layouts.teams1\"></app-teams1-content>\n        <app-teams2-content *ngIf=\"layout === layouts.teams2\"></app-teams2-content>\n        <app-enterprise-content *ngIf=\"layout === layouts.enterprise\"></app-enterprise-content>\n        <app-enterprise1-content *ngIf=\"layout === layouts.enterprise1\"></app-enterprise1-content>\n        <app-enterprise2-content *ngIf=\"layout === layouts.enterprise2\"></app-enterprise2-content>\n        <app-cnet-enterprise-content\n          *ngIf=\"layout === layouts.cnetcmpgnent\"\n        ></app-cnet-enterprise-content>\n        <app-cnet-individual-content\n          *ngIf=\"layout === layouts.cnetcmpgnind\"\n        ></app-cnet-individual-content>\n        <app-cnet-teams-content *ngIf=\"layout === layouts.cnetcmpgnteams\"></app-cnet-teams-content>\n        <app-abm-enterprise-content\n          *ngIf=\"layout === layouts.abmenterprise\"\n        ></app-abm-enterprise-content>\n        <app-abm-teams-content *ngIf=\"layout === layouts.abmteams\"></app-abm-teams-content>\n      </div>\n    </div>\n    <div class=\"tw-w-1/2\">\n      <div *ngIf=\"!useTrialStepper\">\n        <div\n          class=\"tw-min-w-xl tw-m-auto tw-mt-28 tw-max-w-xl tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-8\"\n        >\n          <app-register-form\n            [queryParamEmail]=\"email\"\n            [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n            [referenceDataValue]=\"referenceData\"\n          ></app-register-form>\n        </div>\n      </div>\n      <div class=\"tw-pt-44\" *ngIf=\"useTrialStepper\">\n        <div class=\"tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background\">\n          <div class=\"tw-flex tw-h-12 tw-w-full tw-items-center tw-rounded-t tw-bg-secondary-100\">\n            <h2 class=\"tw-mb-0 tw-pl-4 tw-text-base tw-font-bold tw-uppercase\">\n              Start your 7-Day free trial of Bitwarden for {{ org }}\n            </h2>\n          </div>\n          <app-vertical-stepper #stepper linear (selectionChange)=\"stepSelectionChange($event)\">\n            <app-vertical-step label=\"Create Account\" [editable]=\"false\" [subLabel]=\"email\">\n              <app-register-form\n                [isInTrialFlow]=\"true\"\n                (createdAccount)=\"createdAccount($event)\"\n                [referenceDataValue]=\"referenceData\"\n              ></app-register-form>\n            </app-vertical-step>\n            <app-vertical-step label=\"Organization Information\" [subLabel]=\"orgInfoSubLabel\">\n              <app-org-info [nameOnly]=\"true\" [formGroup]=\"orgInfoFormGroup\"></app-org-info>\n              <button\n                bitButton\n                buttonType=\"primary\"\n                [disabled]=\"orgInfoFormGroup.get('name').invalid\"\n                cdkStepperNext\n              >\n                Next\n              </button>\n            </app-vertical-step>\n            <app-vertical-step label=\"Billing\" [subLabel]=\"billingSubLabel\">\n              <app-billing\n                *ngIf=\"stepper.selectedIndex === 2\"\n                [plan]=\"plan\"\n                [product]=\"product\"\n                [orgInfoForm]=\"orgInfoFormGroup\"\n                (previousStep)=\"previousStep()\"\n                (onTrialBillingSuccess)=\"billingSuccess($event)\"\n              ></app-billing>\n            </app-vertical-step>\n            <app-vertical-step label=\"Confirmation Details\" [applyBorder]=\"false\">\n              <app-trial-confirmation-details\n                [email]=\"email\"\n                [orgLabel]=\"orgLabel\"\n              ></app-trial-confirmation-details>\n              <div class=\"tw-mb-3 tw-flex\">\n                <button bitButton buttonType=\"primary\" (click)=\"navigateToOrgVault()\">\n                  Get Started\n                </button>\n                <button\n                  bitButton\n                  buttonType=\"secondary\"\n                  (click)=\"navigateToOrgInvite()\"\n                  class=\"tw-ml-3 tw-inline-flex tw-items-center tw-px-3\"\n                >\n                  Invite Users\n                </button>\n              </div>\n            </app-vertical-step>\n          </app-vertical-stepper>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { StepperSelectionEvent } from \"@angular/cdk/stepper\";\nimport { TitleCasePipe } from \"@angular/common\";\nimport { Component, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\nimport { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first, Subject, takeUntil } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/reference-event.request\";\n\nimport { RouterService } from \"./../../core/router.service\";\nimport { VerticalStepperComponent } from \"./vertical-stepper/vertical-stepper.component\";\n\nenum ValidOrgParams {\n  families = \"families\",\n  enterprise = \"enterprise\",\n  teams = \"teams\",\n  individual = \"individual\",\n  premium = \"premium\",\n  free = \"free\",\n}\n\nenum ValidLayoutParams {\n  default = \"default\",\n  teams = \"teams\",\n  teams1 = \"teams1\",\n  teams2 = \"teams2\",\n  enterprise = \"enterprise\",\n  enterprise1 = \"enterprise1\",\n  enterprise2 = \"enterprise2\",\n  cnetcmpgnent = \"cnetcmpgnent\",\n  cnetcmpgnind = \"cnetcmpgnind\",\n  cnetcmpgnteams = \"cnetcmpgnteams\",\n  abmenterprise = \"abmenterprise\",\n  abmteams = \"abmteams\",\n}\n\n@Component({\n  selector: \"app-trial\",\n  templateUrl: \"trial-initiation.component.html\",\n})\nexport class TrialInitiationComponent implements OnInit, OnDestroy {\n  email = \"\";\n  org = \"\";\n  orgInfoSubLabel = \"\";\n  orgId = \"\";\n  orgLabel = \"\";\n  billingSubLabel = \"\";\n  layout = \"default\";\n  plan: PlanType;\n  product: ProductType;\n  accountCreateOnly = true;\n  useTrialStepper = false;\n  policies: Policy[];\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  trialFlowOrgs: string[] = [\n    ValidOrgParams.teams,\n    ValidOrgParams.enterprise,\n    ValidOrgParams.families,\n  ];\n  routeFlowOrgs: string[] = [\n    ValidOrgParams.free,\n    ValidOrgParams.premium,\n    ValidOrgParams.individual,\n  ];\n  layouts = ValidLayoutParams;\n  referenceData: ReferenceEventRequest;\n  @ViewChild(\"stepper\", { static: false }) verticalStepper: VerticalStepperComponent;\n\n  orgInfoFormGroup = this.formBuilder.group({\n    name: [\"\", { validators: [Validators.required, Validators.maxLength(50)], updateOn: \"change\" }],\n    email: [\"\"],\n  });\n\n  private set referenceDataId(referenceId: string) {\n    if (referenceId != null) {\n      this.referenceData.id = referenceId;\n    } else {\n      this.referenceData.id = (\"; \" + document.cookie)\n        .split(\"; reference=\")\n        .pop()\n        .split(\";\")\n        .shift();\n    }\n\n    if (this.referenceData.id === \"\") {\n      this.referenceData.id = null;\n    }\n  }\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private route: ActivatedRoute,\n    protected router: Router,\n    private formBuilder: UntypedFormBuilder,\n    private titleCasePipe: TitleCasePipe,\n    private stateService: StateService,\n    private logService: LogService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    private i18nService: I18nService,\n    private routerService: RouterService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      this.referenceData = new ReferenceEventRequest();\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n\n      this.referenceDataId = qParams.reference;\n\n      if (Object.values(ValidLayoutParams).includes(qParams.layout)) {\n        this.layout = qParams.layout;\n        this.accountCreateOnly = false;\n      }\n\n      if (this.trialFlowOrgs.includes(qParams.org)) {\n        this.org = qParams.org;\n        this.orgLabel = this.titleCasePipe.transform(this.org);\n        this.useTrialStepper = true;\n        this.referenceData.flow = qParams.org;\n\n        if (this.org === ValidOrgParams.families) {\n          this.plan = PlanType.FamiliesAnnually;\n          this.product = ProductType.Families;\n        } else if (this.org === ValidOrgParams.teams) {\n          this.plan = PlanType.TeamsAnnually;\n          this.product = ProductType.Teams;\n        } else if (this.org === ValidOrgParams.enterprise) {\n          this.plan = PlanType.EnterpriseAnnually;\n          this.product = ProductType.Enterprise;\n        }\n      } else if (this.routeFlowOrgs.includes(qParams.org)) {\n        this.referenceData.flow = qParams.org;\n        const route = this.router.createUrlTree([\"create-organization\"], {\n          queryParams: { plan: qParams.org },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n\n      // Are they coming from an email for sponsoring a families organization\n      // After logging in redirect them to setup the families sponsorship\n      this.setupFamilySponsorship(qParams.sponsorshipToken);\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      try {\n        const policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        if (policies.data != null) {\n          const policiesData = policies.data.map((p) => new PolicyData(p));\n          this.policies = policiesData.map((p) => new Policy(p));\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (this.policies != null) {\n      this.policyService\n        .masterPasswordPolicyOptions$(this.policies)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((enforcedPasswordPolicyOptions) => {\n          this.enforcedPolicyOptions = enforcedPasswordPolicyOptions;\n        });\n    }\n\n    this.orgInfoFormGroup.controls.name.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.orgInfoFormGroup.controls.name.markAsTouched();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  stepSelectionChange(event: StepperSelectionEvent) {\n    // Set org info sub label\n    if (event.selectedIndex === 1 && this.orgInfoFormGroup.controls.name.value === \"\") {\n      this.orgInfoSubLabel =\n        \"Enter your \" + this.titleCasePipe.transform(this.org) + \" organization information\";\n    } else if (event.previouslySelectedIndex === 1) {\n      this.orgInfoSubLabel = this.orgInfoFormGroup.controls.name.value;\n    }\n\n    //set billing sub label\n    if (event.selectedIndex === 2) {\n      this.billingSubLabel = this.i18nService.t(\"billingTrialSubLabel\");\n    }\n  }\n\n  createdAccount(email: string) {\n    this.email = email;\n    this.orgInfoFormGroup.get(\"email\")?.setValue(email);\n    this.verticalStepper.next();\n  }\n\n  billingSuccess(event: any) {\n    this.orgId = event?.orgId;\n    this.billingSubLabel = event?.subLabelText;\n    this.verticalStepper.next();\n  }\n\n  navigateToOrgVault() {\n    this.router.navigate([\"organizations\", this.orgId, \"vault\"]);\n  }\n\n  navigateToOrgInvite() {\n    this.router.navigate([\"organizations\", this.orgId, \"manage\", \"members\"]);\n  }\n\n  previousStep() {\n    this.verticalStepper.previous();\n  }\n\n  private setupFamilySponsorship(sponsorshipToken: string) {\n    if (sponsorshipToken != null) {\n      const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n        queryParams: { plan: sponsorshipToken },\n      });\n      this.routerService.setPreviousUrl(route.toString());\n    }\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nexport class WebAuthnIFrame {\n  private iframe: HTMLIFrameElement = null;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    private webVaultUrl: string,\n    private webAuthnNewTab: boolean,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private successCallback: Function, // eslint-disable-line\n    private errorCallback: Function, // eslint-disable-line\n    private infoCallback: Function // eslint-disable-line\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  init(data: any): void {\n    const params = new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      btnText: encodeURIComponent(this.i18nService.t(\"webAuthnAuthenticate\")),\n      v: \"1\",\n    });\n\n    if (this.webAuthnNewTab) {\n      // Firefox fallback which opens the webauthn page in a new tab\n      params.append(\"locale\", this.i18nService.translationLocale);\n      this.platformUtilsService.launchUri(\n        `${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`\n      );\n    } else {\n      this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n      this.iframe = this.win.document.getElementById(\"webauthn_iframe\") as HTMLIFrameElement;\n      this.iframe.allow = \"publickey-credentials-get \" + new URL(this.webVaultUrl).origin;\n      this.iframe.src = this.connectorLink.href;\n\n      this.win.addEventListener(\"message\", this.parseFunction, false);\n    }\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport * as DuoWebSDK from \"duo_web_sdk\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { WebAuthnIFrame } from \"@bitwarden/common/misc/webauthn_iframe\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/auth-result\";\nimport { TokenTwoFactorRequest } from \"@bitwarden/common/models/request/identity-token/token-two-factor.request\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/two-factor-email.request\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class TwoFactorComponent extends CaptchaProtectedComponent implements OnInit, OnDestroy {\n  token = \"\";\n  remember = false;\n  webAuthnReady = false;\n  webAuthnNewTab = false;\n  providers = TwoFactorProviders;\n  providerType = TwoFactorProviderType;\n  selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n  webAuthnSupported = false;\n  webAuthn: WebAuthnIFrame = null;\n  title = \"\";\n  twoFactorEmail: string = null;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n  identifier: string = null;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n\n  get webAuthnAllow(): string {\n    return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n  }\n\n  protected loginRoute = \"login\";\n  protected successRoute = \"vault\";\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected route: ActivatedRoute,\n    protected logService: LogService,\n    protected twoFactorService: TwoFactorService,\n    protected appIdService: AppIdService,\n    protected loginService: LoginService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n  }\n\n  async ngOnInit() {\n    if (!this.authing || this.twoFactorService.getProviders() == null) {\n      this.router.navigate([this.loginRoute]);\n      return;\n    }\n\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    if (this.needsLock) {\n      this.successRoute = \"lock\";\n    }\n\n    if (this.win != null && this.webAuthnSupported) {\n      const webVaultUrl = this.environmentService.getWebVaultUrl();\n      this.webAuthn = new WebAuthnIFrame(\n        this.win,\n        webVaultUrl,\n        this.webAuthnNewTab,\n        this.platformUtilsService,\n        this.i18nService,\n        (token: string) => {\n          this.token = token;\n          this.submit();\n        },\n        (error: string) => {\n          this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n        },\n        (info: string) => {\n          if (info === \"ready\") {\n            this.webAuthnReady = true;\n          }\n        }\n      );\n    }\n\n    this.selectedProviderType = this.twoFactorService.getDefaultProvider(this.webAuthnSupported);\n    await this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupWebAuthn();\n    this.webAuthn = null;\n  }\n\n  async init() {\n    if (this.selectedProviderType == null) {\n      this.title = this.i18nService.t(\"loginUnavailable\");\n      return;\n    }\n\n    this.cleanupWebAuthn();\n    this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n    switch (this.selectedProviderType) {\n      case TwoFactorProviderType.WebAuthn:\n        if (!this.webAuthnNewTab) {\n          setTimeout(() => {\n            this.authWebAuthn();\n          }, 500);\n        }\n        break;\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        setTimeout(() => {\n          DuoWebSDK.init({\n            iframe: undefined,\n            host: providerData.Host,\n            sig_request: providerData.Signature,\n            submit_callback: async (f: HTMLFormElement) => {\n              const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n              if (sig != null) {\n                this.token = sig.value;\n                await this.submit();\n              }\n            },\n          });\n        }, 0);\n        break;\n      case TwoFactorProviderType.Email:\n        this.twoFactorEmail = providerData.Email;\n        if (this.twoFactorService.getProviders().size > 1) {\n          await this.sendEmail(false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.token == null || this.token === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"verificationCodeRequired\")\n      );\n      return;\n    }\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n      if (this.webAuthn != null) {\n        this.webAuthn.stop();\n      } else {\n        return;\n      }\n    } else if (\n      this.selectedProviderType === TwoFactorProviderType.Email ||\n      this.selectedProviderType === TwoFactorProviderType.Authenticator\n    ) {\n      this.token = this.token.replace(\" \", \"\").trim();\n    }\n\n    try {\n      await this.doSubmit();\n    } catch {\n      if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n        this.webAuthn.start();\n      }\n    }\n  }\n\n  async doSubmit() {\n    this.formPromise = this.authService.logInTwoFactor(\n      new TokenTwoFactorRequest(this.selectedProviderType, this.token, this.remember),\n      this.captchaToken\n    );\n    const response: AuthResult = await this.formPromise;\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    if (this.handleCaptchaRequired(response)) {\n      return;\n    }\n    if (this.onSuccessfulLogin != null) {\n      this.loginService.clearValues();\n      this.onSuccessfulLogin();\n    }\n    if (response.resetMasterPassword) {\n      this.successRoute = \"set-password\";\n    }\n    if (response.forcePasswordReset) {\n      this.successRoute = \"update-temp-password\";\n    }\n    if (this.onSuccessfulLoginNavigate != null) {\n      this.loginService.clearValues();\n      this.onSuccessfulLoginNavigate();\n    } else {\n      this.loginService.clearValues();\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n\n  async sendEmail(doToast: boolean) {\n    if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n      return;\n    }\n\n    if (this.emailPromise != null) {\n      return;\n    }\n\n    try {\n      const request = new TwoFactorEmailRequest();\n      request.email = this.authService.email;\n      request.masterPasswordHash = this.authService.masterPasswordHash;\n      request.deviceIdentifier = await this.appIdService.getAppId();\n      request.authRequestAccessCode = this.authService.accessCode;\n      request.authRequestId = this.authService.authRequestId;\n      this.emailPromise = this.apiService.postTwoFactorEmail(request);\n      await this.emailPromise;\n      if (doToast) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"verificationCodeEmailSent\", this.twoFactorEmail)\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.emailPromise = null;\n  }\n\n  authWebAuthn() {\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n\n    if (!this.webAuthnSupported || this.webAuthn == null) {\n      return;\n    }\n\n    this.webAuthn.init(providerData);\n  }\n\n  private cleanupWebAuthn() {\n    if (this.webAuthn != null) {\n      this.webAuthn.stop();\n      this.webAuthn.cleanup();\n    }\n  }\n\n  get authing(): boolean {\n    return (\n      this.authService.authingWithPassword() ||\n      this.authService.authingWithSso() ||\n      this.authService.authingWithUserApiKey() ||\n      this.authService.authingWithPasswordless()\n    );\n  }\n\n  get needsLock(): boolean {\n    return this.authService.authingWithSso() || this.authService.authingWithUserApiKey();\n  }\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n  @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n  @Output() onRecoverSelected = new EventEmitter();\n\n  providers: any[] = [];\n\n  constructor(\n    protected twoFactorService: TwoFactorService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window\n  ) {}\n\n  ngOnInit() {\n    this.providers = this.twoFactorService.getSupportedProviders(this.win);\n  }\n\n  choose(p: any) {\n    this.onProviderSelected.emit(p.type);\n  }\n\n  recover() {\n    this.platformUtilsService.launchUri(\"https://bitwarden.com/help/lost-two-step-device/\");\n    this.onRecoverSelected.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"twoStepOptionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"twoStepOptionsTitle\">{{ \"twoStepOptions\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"list-group list-group-flush-2fa\">\n          <div *ngFor=\"let p of providers\" class=\"list-group-item list-group-item-action\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ p.name }}</h3>\n                {{ p.description }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-describedby]=\"p.name\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"choose(p)\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"list-group-item list-group-item-action\" (click)=\"recover()\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img class=\"recovery-code-img\" alt=\"rc logo\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ \"recoveryCodeTitle\" | i18n }}</h3>\n                {{ \"recoveryCodeDesc\" | i18n }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-descibedby]=\"'recoveryCodeTitle' | i18n\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"recover()\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent } from \"@bitwarden/angular/components/two-factor-options.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\n\n@Component({\n  selector: \"app-two-factor-options\",\n  templateUrl: \"two-factor-options.component.html\",\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n  constructor(\n    twoFactorService: TwoFactorService,\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService\n  ) {\n    super(twoFactorService, router, i18nService, platformUtilsService, window);\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"container\"\n  ngNativeValidate\n  autocomplete=\"off\"\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div\n      class=\"col-5\"\n      [ngClass]=\"{\n        'col-9':\n          selectedProviderType === providerType.Duo ||\n          selectedProviderType === providerType.OrganizationDuo\n      }\"\n    >\n      <p class=\"lead text-center mb-4\">{{ title }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Email ||\n              selectedProviderType === providerType.Authenticator\n            \"\n          >\n            <p *ngIf=\"selectedProviderType === providerType.Authenticator\">\n              {{ \"enterVerificationCodeApp\" | i18n }}\n            </p>\n            <p *ngIf=\"selectedProviderType === providerType.Email\">\n              {{ \"enterVerificationCodeEmail\" | i18n: twoFactorEmail }}\n            </p>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"text\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                inputmode=\"tel\"\n                appInputVerbatim\n              />\n              <small class=\"form-text\" *ngIf=\"selectedProviderType === providerType.Email\">\n                <a\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"sendEmail(true)\"\n                  [appApiAction]=\"emailPromise\"\n                  *ngIf=\"selectedProviderType === providerType.Email\"\n                >\n                  {{ \"sendVerificationCodeEmailAgain\" | i18n }}\n                </a>\n              </small>\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n            <p class=\"text-center\">{{ \"insertYubiKey\" | i18n }}</p>\n            <picture>\n              <source srcset=\"../../images/yubikey.avif\" type=\"image/avif\" />\n              <source srcset=\"../../images/yubikey.webp\" type=\"image/webp\" />\n              <img src=\"../../images/yubikey.jpg\" class=\"rounded img-fluid mb-3\" alt=\"\" />\n            </picture>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"password\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn\">\n            <div id=\"web-authn-frame\" class=\"mb-3\">\n              <iframe id=\"webauthn_iframe\" [attr.allow]=\"webAuthnAllow\"></iframe>\n            </div>\n          </ng-container>\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Duo ||\n              selectedProviderType === providerType.OrganizationDuo\n            \"\n          >\n            <div id=\"duo-frame\" class=\"mb-3\">\n              <iframe id=\"duo_iframe\"></iframe>\n            </div>\n          </ng-container>\n          <i\n            class=\"bwi bwi-spinner text-muted bwi-spin pull-right\"\n            title=\"{{ 'loading' | i18n }}\"\n            *ngIf=\"form.loading && selectedProviderType === providerType.WebAuthn\"\n            aria-hidden=\"true\"\n          ></i>\n          <div class=\"form-check\" *ngIf=\"selectedProviderType != null\">\n            <input\n              id=\"remember\"\n              type=\"checkbox\"\n              name=\"Remember\"\n              class=\"form-check-input\"\n              [(ngModel)]=\"remember\"\n            />\n            <label for=\"remember\" class=\"form-check-label\">{{ \"rememberMe\" | i18n }}</label>\n          </div>\n          <ng-container *ngIf=\"selectedProviderType == null\">\n            <p>{{ \"noTwoStepProviders\" | i18n }}</p>\n            <p>{{ \"noTwoStepProviders2\" | i18n }}</p>\n          </ng-container>\n          <hr />\n          <div [hidden]=\"!showCaptcha()\">\n            <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n          </div>\n          <div class=\"d-flex mb-3\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n              *ngIf=\"\n                selectedProviderType != null &&\n                selectedProviderType !== providerType.Duo &&\n                selectedProviderType !== providerType.OrganizationDuo &&\n                selectedProviderType !== providerType.WebAuthn\n              \"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n          <div class=\"text-center\">\n            <a href=\"#\" appStopClick (click)=\"anotherMethod()\">{{\n              \"useAnotherTwoStepMethod\" | i18n\n            }}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<ng-template #twoFactorOptions></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from \"@bitwarden/angular/components/two-factor.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { RouterService } from \"../core\";\n\nimport { TwoFactorOptionsComponent } from \"./two-factor-options.component\";\n\n@Component({\n  selector: \"app-two-factor\",\n  templateUrl: \"two-factor.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n  @ViewChild(\"twoFactorOptions\", { read: ViewContainerRef, static: true })\n  twoFactorOptionsModal: ViewContainerRef;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    private modalService: ModalService,\n    route: ActivatedRoute,\n    logService: LogService,\n    twoFactorService: TwoFactorService,\n    appIdService: AppIdService,\n    private routerService: RouterService,\n    loginService: LoginService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      apiService,\n      platformUtilsService,\n      window,\n      environmentService,\n      stateService,\n      route,\n      logService,\n      twoFactorService,\n      appIdService,\n      loginService\n    );\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n  }\n\n  async anotherMethod() {\n    const [modal] = await this.modalService.openViewRef(\n      TwoFactorOptionsComponent,\n      this.twoFactorOptionsModal,\n      (comp) => {\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onProviderSelected.subscribe(async (provider: TwoFactorProviderType) => {\n          modal.close();\n          this.selectedProviderType = provider;\n          await this.init();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onRecoverSelected.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async goAfterLogIn() {\n    this.loginService.clearValues();\n    const previousUrl = this.routerService.getPreviousUrl();\n    if (previousUrl) {\n      this.router.navigateByUrl(previousUrl);\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class PasswordRequest extends SecretVerificationRequest {\n  newMasterPasswordHash: string;\n  masterPasswordHint: string;\n  key: string;\n}\n","import { Directive } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { PasswordRequest } from \"@bitwarden/common/models/request/password.request\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdatePasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n  currentMasterPassword: string;\n\n  onSuccessfulChangePassword: () => Promise<void>;\n\n  constructor(\n    protected router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async cancel() {\n    await this.stateService.setOrganizationInvitation(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n\n    const secret: Verification = {\n      type: VerificationType.MasterPassword,\n      secret: this.currentMasterPassword,\n    };\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return false;\n    }\n\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create Request\n      const request = new PasswordRequest();\n      request.masterPasswordHash = await this.cryptoService.hashPassword(\n        this.currentMasterPassword,\n        null\n      );\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.key = encKey[1].encryptedString;\n\n      // Update user's password\n      this.apiService.postPassword(request);\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"masterPasswordInvalidWarning\" | i18n }} </app-callout>\n          <app-callout\n            type=\"info\"\n            [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n            *ngIf=\"enforcedPolicyOptions\"\n          ></app-callout>\n\n          <form\n            #form\n            (ngSubmit)=\"submit()\"\n            [appApiAction]=\"formPromise\"\n            ngNativeValidate\n            autocomplete=\"off\"\n          >\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"currentMasterPassword\"\n                    type=\"password\"\n                    name=\"MasterPasswordHash\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"currentMasterPassword\"\n                    required\n                    appInputVerbatim\n                  />\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"newMasterPassword\"\n                    type=\"password\"\n                    name=\"NewMasterPasswordHash\"\n                    class=\"form-control mb-1\"\n                    [(ngModel)]=\"masterPassword\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                  <app-password-strength\n                    [password]=\"masterPassword\"\n                    [email]=\"email\"\n                    [showText]=\"true\"\n                    (passwordStrengthResult)=\"getStrengthResult($event)\"\n                  ></app-password-strength>\n                </div>\n              </div>\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"masterPasswordRetype\"\n                    type=\"password\"\n                    name=\"MasterPasswordRetype\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"masterPasswordRetype\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n              <i\n                class=\"fa fa-spinner fa-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"changeMasterPassword\" | i18n }}</span>\n            </button>\n            <button (click)=\"cancel()\" type=\"button\" class=\"btn btn-outline-secondary\">\n              <span>{{ \"cancel\" | i18n }}</span>\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { UpdatePasswordComponent as BaseUpdatePasswordComponent } from \"@bitwarden/angular/components/update-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\n\n@Component({\n  selector: \"app-update-password\",\n  templateUrl: \"update-password.component.html\",\n})\nexport class UpdatePasswordComponent extends BaseUpdatePasswordComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      userVerificationService,\n      logService\n    );\n  }\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { OrganizationUserResetPasswordRequest } from \"../../abstractions/organization-user/requests\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { UpdateTempPasswordRequest } from \"@bitwarden/common/models/request/update-temp-password.request\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private syncService: SyncService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    super.ngOnInit();\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    this.email = await this.stateService.getEmail();\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async submit() {\n    // Validation\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email.trim().toLowerCase(),\n        this.kdf,\n        this.kdfIterations\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = encKey[1].encryptedString;\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.masterPasswordHint = this.hint;\n\n      // Update user's password\n      this.formPromise = this.apiService.putUpdateTempPassword(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedMasterPassword\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"updateMasterPasswordWarning\" | i18n }} </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength\n                  [password]=\"masterPassword\"\n                  [email]=\"email\"\n                  [showText]=\"true\"\n                  (passwordStrengthResult)=\"getStrengthResult($event)\"\n                >\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from \"@bitwarden/angular/components/update-temp-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-update-temp-password\",\n  templateUrl: \"update-temp-password.component.html\",\n})\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    syncService: SyncService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      syncService,\n      logService\n    );\n  }\n}\n","export class VerifyEmailRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VerifyEmailRequest } from \"@bitwarden/common/models/request/verify-email.request\";\n\n@Component({\n  selector: \"app-verify-email-token\",\n  templateUrl: \"verify-email-token.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class VerifyEmailTokenComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null) {\n        try {\n          await this.apiService.postAccountVerifyEmailToken(\n            new VerifyEmailRequest(qParams.userId, qParams.token)\n          );\n          if (await this.stateService.getIsAuthenticated()) {\n            await this.apiService.refreshIdentityToken();\n          }\n          this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailVerified\"));\n          this.router.navigate([\"/\"]);\n          return;\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"emailVerifiedFailed\"));\n      this.router.navigate([\"/\"]);\n    });\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","export class VerifyDeleteRecoverRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { VerifyDeleteRecoverRequest } from \"@bitwarden/common/models/request/verify-delete-recover.request\";\n\n@Component({\n  selector: \"app-verify-recover-delete\",\n  templateUrl: \"verify-recover-delete.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class VerifyRecoverDeleteComponent implements OnInit {\n  email: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private token: string;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private logService: LogService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null && qParams.email != null) {\n        this.userId = qParams.userId;\n        this.token = qParams.token;\n        this.email = qParams.email;\n      } else {\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    try {\n      const request = new VerifyDeleteRecoverRequest(this.userId, this.token);\n      this.formPromise = this.apiService.postAccountRecoverDeleteToken(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n          <p class=\"text-center\">\n            <strong>{{ email }}</strong>\n          </p>\n          <p>{{ \"deleteRecoverConfirmDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-danger btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"deleteAccount\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HomeGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return this.router.createUrlTree([\"/login\"], { queryParams: route.queryParams });\n    }\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"/lock\"], { queryParams: route.queryParams });\n    }\n    return this.router.createUrlTree([\"/vault\"], { queryParams: route.queryParams });\n  }\n}\n","import { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\nimport { SelectionReadOnlyResponse } from \"@bitwarden/common/models/response/selection-read-only.response\";\nimport { SelectItemView } from \"@bitwarden/components/src/multi-select/models/select-item-view\";\n\n/**\n * Permission options that replace/correspond with readOnly and hidePassword server fields.\n */\nexport enum CollectionPermission {\n  View = \"view\",\n  ViewExceptPass = \"viewExceptPass\",\n  Edit = \"edit\",\n  EditExceptPass = \"editExceptPass\",\n}\n\nexport enum AccessItemType {\n  Collection,\n  Group,\n  Member,\n}\n\n/**\n * A \"generic\" type that describes an item that can be selected from a\n * ng-select list and have its collection permission modified.\n *\n * Currently, it supports Collections, Groups, and Members. Members require some additional\n * details to render in the AccessSelectorComponent so their type is defined separately\n * and then joined back with the base type.\n *\n */\nexport type AccessItemView =\n  | SelectItemView & {\n      /**\n       * Flag that this group/member can access all items.\n       * This will disable the permission editor for this item.\n       */\n      accessAllItems?: boolean;\n\n      /**\n       * Flag that this item cannot be modified.\n       * This will disable the permission editor and will keep\n       * the item always selected.\n       */\n      readonly?: boolean;\n\n      /**\n       * Optional permission that will be rendered for this\n       * item if it set to readonly.\n       */\n      readonlyPermission?: CollectionPermission;\n    } & (\n        | {\n            type: AccessItemType.Collection;\n            viaGroupName?: string;\n          }\n        | {\n            type: AccessItemType.Group;\n          }\n        | {\n            type: AccessItemType.Member; // Members have a few extra details required to display, so they're added here\n            email: string;\n            role: OrganizationUserType;\n            status: OrganizationUserStatusType;\n          }\n      );\n\n/**\n * A type that is emitted as a value for the ngControl\n */\nexport type AccessItemValue = {\n  id: string;\n  permission?: CollectionPermission;\n  type: AccessItemType;\n};\n\n/**\n * Converts the older SelectionReadOnly interface to one of the new CollectionPermission values\n * for the dropdown in the AccessSelectorComponent\n * @param value\n */\nexport const convertToPermission = (value: SelectionReadOnlyResponse) => {\n  if (value.readOnly) {\n    return value.hidePasswords ? CollectionPermission.ViewExceptPass : CollectionPermission.View;\n  } else {\n    return value.hidePasswords ? CollectionPermission.EditExceptPass : CollectionPermission.Edit;\n  }\n};\n\n/**\n * Converts an AccessItemValue back into a SelectionReadOnly class using the CollectionPermission\n * to determine the values for `readOnly` and `hidePassword`\n * @param value\n */\nexport const convertToSelectionReadOnly = (value: AccessItemValue) => {\n  return new SelectionReadOnlyRequest(\n    value.id,\n    readOnly(value.permission),\n    hidePassword(value.permission)\n  );\n};\n\nconst readOnly = (perm: CollectionPermission) =>\n  [CollectionPermission.View, CollectionPermission.ViewExceptPass].includes(perm);\n\nconst hidePassword = (perm: CollectionPermission) =>\n  [CollectionPermission.ViewExceptPass, CollectionPermission.EditExceptPass].includes(perm);\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-user-layout\",\n  templateUrl: \"user-layout.component.html\",\n})\nexport class UserLayoutComponent implements OnInit {\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","import { AbstractControl, FormArray } from \"@angular/forms\";\n\nexport type SelectionItemId = {\n  id: string;\n};\n\nfunction findSortedIndex<T>(sortedArray: T[], val: T, compareFn: (a: T, b: T) => number) {\n  let low = 0;\n  let high = sortedArray.length || 0;\n  let mid = -1,\n    c = 0;\n  while (low < high) {\n    mid = Math.floor((low + high) / 2);\n    c = compareFn(sortedArray[mid], val);\n    if (c < 0) {\n      low = mid + 1;\n    } else if (c > 0) {\n      high = mid;\n    } else {\n      return mid;\n    }\n  }\n  return low;\n}\n\n/**\n * Utility to help manage a list of selectable items for use with Reactive Angular forms and FormArrays.\n *\n * It supports selecting/deselecting items, keeping items sorted, and synchronizing the selected items\n * with an array of FormControl.\n *\n * The first type parameter TItem represents the item being selected/deselected, it must have an `id`\n * property for identification/comparison. The second type parameter TControlValue represents the value\n * type of the form control.\n */\nexport class FormSelectionList<\n  TItem extends SelectionItemId,\n  TControlValue extends SelectionItemId\n> {\n  allItems: TItem[] = [];\n  /**\n   * Sorted list of selected items\n   * Immutable and should be recreated whenever a modification is made\n   */\n  selectedItems: TItem[] = [];\n\n  /**\n   * Sorted list of deselected items\n   * Immutable and should be recreated whenever a modification is made\n   */\n  deselectedItems: TItem[] = [];\n\n  /**\n   * Sorted FormArray that corresponds and stays in sync with the selectedItems\n   */\n  formArray: FormArray<AbstractControl<Partial<TControlValue>, TControlValue>> = new FormArray([]);\n\n  /**\n   * Construct a new FormSelectionList\n   * @param controlFactory - Factory responsible for creating initial form controls for each selected item. It is\n   * provided a copy of the selected item for any form control initialization logic. Specify any additional form\n   * control options or validators here.\n   * @param compareFn - Comparison function used for sorting the items.\n   */\n  constructor(\n    private controlFactory: (item: TItem) => AbstractControl<Partial<TControlValue>, TControlValue>,\n    private compareFn: (a: TItem, b: TItem) => number\n  ) {}\n\n  /**\n   * Select multiple items by their ids at once. Optionally provide an initial form control value.\n   * @param ids - List of ids to select\n   * @param initialValue - Value that will be applied to the corresponding form controls\n   * The provided `id` arguments will be automatically assigned to each form control value\n   */\n  selectItems(ids: string[], initialValue?: Partial<TControlValue> | undefined) {\n    for (const id of ids) {\n      this.selectItem(id, initialValue);\n    }\n  }\n\n  /**\n   * Deselect multiple items by their ids at once\n   * @param ids - List of ids to deselect\n   */\n  deselectItems(ids: string[]) {\n    for (const id of ids) {\n      this.deselectItem(id);\n    }\n  }\n\n  deselectAll() {\n    this.formArray.clear();\n    this.selectedItems = [];\n    this.deselectedItems = [...this.allItems];\n  }\n\n  /**\n   * Select a single item by id.\n   *\n   * Maintains list order for both selected items, deselected items, and the FormArray.\n   *\n   * @param id - Id of the item to select\n   * @param initialValue - Value that will be applied to the corresponding form control for the selected item.\n   * The provided `id` argument will be automatically assigned unless explicitly set in the initialValue.\n   */\n  selectItem(id: string, initialValue?: Partial<TControlValue>) {\n    const index = this.deselectedItems.findIndex((o) => o.id === id);\n\n    if (index === -1) {\n      return;\n    }\n\n    const selectedOption = this.deselectedItems[index];\n\n    // Note: Changes to the deselected/selected arrays must create a new copy of the array\n    // in order for Angular's Change Detection to pick up the modification (i.e. treat the arrays as immutable)\n\n    // Remove from the list of deselected options\n    this.deselectedItems = [\n      ...this.deselectedItems.slice(0, index),\n      ...this.deselectedItems.slice(index + 1),\n    ];\n\n    // Insert into the sorted selected options list\n    const sortedInsertIndex = findSortedIndex(this.selectedItems, selectedOption, this.compareFn);\n\n    this.selectedItems = [\n      ...this.selectedItems.slice(0, sortedInsertIndex),\n      selectedOption,\n      ...this.selectedItems.slice(sortedInsertIndex),\n    ];\n\n    const newControl = this.controlFactory(selectedOption);\n\n    // Patch the value and ensure the `id` is set\n    newControl.patchValue({\n      id,\n      ...initialValue,\n    });\n\n    this.formArray.insert(sortedInsertIndex, newControl);\n  }\n\n  /**\n   * Deselect a single item by id.\n   *\n   * Maintains list order for both selected items, deselected items, and the FormArray.\n   *\n   * @param id - Id of the item to deselect\n   */\n  deselectItem(id: string) {\n    const index = this.selectedItems.findIndex((o) => o.id === id);\n\n    if (index === -1) {\n      return;\n    }\n\n    const deselectedOption = this.selectedItems[index];\n\n    // Note: Changes to the deselected/selected arrays must create a new copy of the array\n    // in order for Angular's Change Detection to pick up the modification (i.e. treat the arrays as immutable)\n\n    // Remove from the list of selected items (and FormArray)\n    this.selectedItems = [\n      ...this.selectedItems.slice(0, index),\n      ...this.selectedItems.slice(index + 1),\n    ];\n    this.formArray.removeAt(index);\n\n    // Insert into the sorted deselected array\n    const sortedInsertIndex = findSortedIndex(\n      this.deselectedItems,\n      deselectedOption,\n      this.compareFn\n    );\n\n    this.deselectedItems = [\n      ...this.deselectedItems.slice(0, sortedInsertIndex),\n      deselectedOption,\n      ...this.deselectedItems.slice(sortedInsertIndex),\n    ];\n  }\n\n  /**\n   * Populate the list of deselected items, and optional specify which items should be selected and with what initial\n   * value for their Form Control\n   * @param items - A list of all items. (Will be sorted internally)\n   * @param selectedItems - The items to select initially\n   */\n  populateItems(items: TItem[], selectedItems: TControlValue[] = []) {\n    this.formArray.clear();\n    this.allItems = [...items].sort(this.compareFn);\n    this.selectedItems = [];\n    this.deselectedItems = [...this.allItems];\n\n    for (const selectedItem of selectedItems) {\n      this.selectItem(selectedItem.id, selectedItem);\n    }\n  }\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","<ng-select\n  [items]=\"baseItems\"\n  [(ngModel)]=\"selectedItems\"\n  (ngModelChange)=\"onChange($event)\"\n  (blur)=\"onBlur()\"\n  bindLabel=\"listName\"\n  groupBy=\"parentGrouping\"\n  [placeholder]=\"placeholder\"\n  [loading]=\"loading\"\n  [loadingText]=\"loadingText\"\n  notFoundText=\"{{ 'multiSelectNotFound' | i18n }}\"\n  clearAllText=\"{{ 'multiSelectClearAll' | i18n }}\"\n  [multiple]=\"true\"\n  [selectOnTab]=\"true\"\n  [closeOnSelect]=\"false\"\n  (close)=\"onDropdownClosed()\"\n  [disabled]=\"disabled\"\n  [clearSearchOnAdd]=\"true\"\n  [labelForId]=\"labelForId\"\n  appendTo=\"body\"\n>\n  <ng-template ng-loadingspinner-tmp>\n    <i class=\"bwi bwi-spinner bwi-spin tw-mr-1\" [title]=\"loadingText\" aria-hidden=\"true\"></i>\n  </ng-template>\n  <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n    <button\n      type=\"button\"\n      bitBadge\n      badgeType=\"primary\"\n      class=\"tw-mr-1 disabled:tw-border-0\"\n      [disabled]=\"disabled\"\n      (click)=\"clear(item)\"\n    >\n      <i\n        *ngIf=\"item.icon != null\"\n        class=\"tw-mr-1 bwi bwi-fw {{ item.icon }}\"\n        aria-hidden=\"true\"\n      ></i>\n      {{ item.labelName }}\n      <i class=\"bwi bwi-fw bwi-close bwi-sm tw-ml-1\" aria-hidden=\"true\"></i>\n    </button>\n  </ng-template>\n  <ng-template ng-option-tmp let-item=\"item\">\n    <div class=\"tw-flex\">\n      <div class=\"tw-w-7 tw-flex-none\">\n        <i *ngIf=\"isSelected(item)\" class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n      </div>\n      <div class=\"tw-mr-2 tw-flex-initial\">\n        <i *ngIf=\"item.icon != null\" class=\"bwi bwi-fw {{ item.icon }}\" aria-hidden=\"true\"></i>\n      </div>\n      <div class=\"tw-flex-1\">\n        {{ item.listName }}\n      </div>\n    </div>\n  </ng-template>\n</ng-select>\n","import {\n  Component,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n  EventEmitter,\n  HostBinding,\n  Optional,\n  Self,\n} from \"@angular/core\";\nimport { ControlValueAccessor, NgControl, Validators } from \"@angular/forms\";\nimport { NgSelectComponent } from \"@ng-select/ng-select\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\nimport { BitFormFieldControl } from \"../form-field/form-field-control\";\n\nimport { SelectItemView } from \"./models/select-item-view\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Component({\n  selector: \"bit-multi-select\",\n  templateUrl: \"./multi-select.component.html\",\n  providers: [{ provide: BitFormFieldControl, useExisting: MultiSelectComponent }],\n})\n/**\n * This component has been implemented to only support Multi-select list events\n */\nexport class MultiSelectComponent implements OnInit, BitFormFieldControl, ControlValueAccessor {\n  @ViewChild(NgSelectComponent) select: NgSelectComponent;\n\n  // Parent component should only pass selectable items (complete list - selected items = baseItems)\n  @Input() baseItems: SelectItemView[];\n  // Defaults to native ng-select behavior - set to \"true\" to clear selected items on dropdown close\n  @Input() removeSelectedItems = false;\n  @Input() placeholder: string;\n  @Input() loading = false;\n  @Input() disabled = false;\n\n  // Internal tracking of selected items\n  @Input() selectedItems: SelectItemView[];\n\n  // Default values for our implementation\n  loadingText: string;\n\n  protected searchInputId = `search-input-${nextId++}`;\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  private notifyOnChange?: (value: SelectItemView[]) => void;\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  private notifyOnTouched?: () => void;\n\n  @Output() onItemsConfirmed = new EventEmitter<any[]>();\n\n  constructor(private i18nService: I18nService, @Optional() @Self() private ngControl?: NgControl) {\n    if (ngControl != null) {\n      ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit(): void {\n    // Default Text Values\n    this.placeholder = this.placeholder ?? this.i18nService.t(\"multiSelectPlaceholder\");\n    this.loadingText = this.i18nService.t(\"multiSelectLoading\");\n  }\n\n  /** Helper method for showing selected state in custom template */\n  isSelected(item: any): boolean {\n    return this.selectedItems?.find((selected) => selected.id === item.id) != undefined;\n  }\n\n  /**\n   * The `close` callback will act as the only trigger for signifying the user's intent of completing the selection\n   * of items. Selected items will be emitted to the parent component in order to allow for separate data handling.\n   */\n  onDropdownClosed(): void {\n    // Early exit\n    if (this.selectedItems == null || this.selectedItems.length == 0) {\n      return;\n    }\n\n    // Emit results to parent component\n    this.onItemsConfirmed.emit(this.selectedItems);\n\n    // Remove selected items from base list based on input property\n    if (this.removeSelectedItems) {\n      let updatedBaseItems = this.baseItems;\n      this.selectedItems.forEach((selectedItem) => {\n        updatedBaseItems = updatedBaseItems.filter((item) => selectedItem.id !== item.id);\n      });\n\n      // Reset Lists\n      this.selectedItems = null;\n      this.baseItems = updatedBaseItems;\n    }\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  writeValue(obj: SelectItemView[]): void {\n    this.selectedItems = obj;\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  registerOnChange(fn: (value: SelectItemView[]) => void): void {\n    this.notifyOnChange = fn;\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  registerOnTouched(fn: any): void {\n    this.notifyOnTouched = fn;\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  protected onChange(items: SelectItemView[]) {\n    if (!this.notifyOnChange) {\n      return;\n    }\n\n    this.notifyOnChange(items);\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  protected onBlur() {\n    if (!this.notifyOnTouched) {\n      return;\n    }\n\n    this.notifyOnTouched();\n  }\n\n  /**Implemented as part of BitFormFieldControl */\n  @HostBinding(\"attr.aria-describedby\")\n  get ariaDescribedBy() {\n    return this._ariaDescribedBy;\n  }\n  set ariaDescribedBy(value: string) {\n    this._ariaDescribedBy = value;\n    this.select?.searchInput.nativeElement.setAttribute(\"aria-describedby\", value);\n  }\n  private _ariaDescribedBy: string;\n\n  /**Implemented as part of BitFormFieldControl */\n  get labelForId() {\n    return this.searchInputId;\n  }\n\n  /**Implemented as part of BitFormFieldControl */\n  @HostBinding() @Input() id = `bit-multi-select-${nextId++}`;\n\n  /**Implemented as part of BitFormFieldControl */\n  @HostBinding(\"attr.required\")\n  @Input()\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value: any) {\n    this._required = value != null && value !== false;\n  }\n  private _required: boolean;\n\n  /**Implemented as part of BitFormFieldControl */\n  get hasError() {\n    return this.ngControl?.status === \"INVALID\" && this.ngControl?.touched;\n  }\n\n  /**Implemented as part of BitFormFieldControl */\n  get error(): [string, any] {\n    const key = Object.keys(this.ngControl?.errors)[0];\n    return [key, this.ngControl?.errors[key]];\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\n\n@Pipe({\n  name: \"userType\",\n})\nexport class UserTypePipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(value?: OrganizationUserType, unknownText?: string): string {\n    if (value == null) {\n      return unknownText ?? this.i18nService.t(\"unknown\");\n    }\n    switch (value) {\n      case OrganizationUserType.Owner:\n        return this.i18nService.t(\"owner\");\n      case OrganizationUserType.Admin:\n        return this.i18nService.t(\"admin\");\n      case OrganizationUserType.User:\n        return this.i18nService.t(\"user\");\n      case OrganizationUserType.Manager:\n        return this.i18nService.t(\"manager\");\n      case OrganizationUserType.Custom:\n        return this.i18nService.t(\"custom\");\n    }\n  }\n}\n","<div class=\"tw-flex\">\n  <bit-form-field *ngIf=\"permissionMode == 'edit'\">\n    <bit-label>{{ \"permission\" | i18n }}</bit-label>\n    <select\n      bitInput\n      [disabled]=\"disabled\"\n      [(ngModel)]=\"initialPermission\"\n      [ngModelOptions]=\"{ standalone: true }\"\n      (blur)=\"handleBlur()\"\n    >\n      <option *ngFor=\"let p of permissionList\" [value]=\"p.perm\">\n        {{ p.labelId | i18n }}\n      </option>\n    </select>\n  </bit-form-field>\n\n  <bit-form-field class=\"tw-ml-3 tw-flex-grow\">\n    <bit-label>{{ selectorLabelText }}</bit-label>\n    <bit-multi-select\n      class=\"tw-w-full\"\n      [baseItems]=\"selectionList.deselectedItems\"\n      [removeSelectedItems]=\"true\"\n      [disabled]=\"disabled\"\n      (onItemsConfirmed)=\"selectItems($event)\"\n      (blur)=\"handleBlur()\"\n    ></bit-multi-select>\n    <bit-hint *ngIf=\"selectorHelpText\">{{ selectorHelpText }}</bit-hint>\n  </bit-form-field>\n</div>\n\n<bit-table [formGroup]=\"formGroup\">\n  <ng-container header>\n    <tr>\n      <th bitCell>{{ columnHeader }}</th>\n      <th bitCell id=\"permissionColHeading\" *ngIf=\"permissionMode != 'hidden'\">\n        {{ \"permission\" | i18n }}\n      </th>\n      <th bitCell id=\"roleColHeading\" *ngIf=\"showMemberRoles\">{{ \"role\" | i18n }}</th>\n      <th bitCell id=\"groupColHeading\" *ngIf=\"showGroupColumn\">{{ \"group\" | i18n }}</th>\n      <th bitCell style=\"width: 50px\"></th>\n    </tr>\n  </ng-container>\n  <ng-container body formArrayName=\"items\">\n    <tr\n      bitRow\n      *ngFor=\"let item of selectionList.selectedItems; let i = index\"\n      [formGroupName]=\"i\"\n      [ngClass]=\"{ 'tw-text-muted': item.readonly }\"\n    >\n      <td bitCell [ngSwitch]=\"item.type\">\n        <div class=\"tw-flex tw-items-center\" *ngSwitchCase=\"itemType.Member\">\n          <bit-avatar size=\"small\" class=\"tw-mr-3\" text=\"{{ item.labelName }}\"></bit-avatar>\n          <div class=\"tw-flex tw-flex-col\">\n            <div class=\"tw-text-sm\">\n              {{ item.labelName }}\n              <span *ngIf=\"$any(item).status == 0\" bitBadge badgeType=\"secondary\">\n                {{ \"invited\" | i18n }}\n              </span>\n            </div>\n            <div class=\"tw-text-xs tw-text-muted\" *ngIf=\"$any(item).status != 0\">\n              {{ $any(item).email }}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"tw-flex tw-items-center tw-text-sm\" *ngSwitchDefault>\n          <i\n            class=\"bwi tw-mr-3 tw-px-0.5 tw-text-2xl\"\n            [ngClass]=\"item.icon || itemIcon(item)\"\n            aria-hidden=\"true\"\n          ></i>\n          <span>{{ item.labelName }}</span>\n        </div>\n      </td>\n\n      <td bitCell *ngIf=\"permissionMode != 'hidden'\">\n        <ng-container *ngIf=\"canEditItemPermission(item); else readOnlyPerm\">\n          <label class=\"sr-only\" [for]=\"'permission' + i\"\n            >{{ item.labelName }} {{ \"permission\" | i18n }}</label\n          >\n          <select\n            bitInput\n            class=\"-tw-ml-1 tw-max-w-36 tw-overflow-ellipsis !tw-rounded tw-border-0 !tw-bg-transparent tw-pl-0 tw-font-bold\"\n            formControlName=\"permission\"\n            [id]=\"'permission' + i\"\n            (blur)=\"handleBlur()\"\n          >\n            <option *ngFor=\"let p of permissionList\" [value]=\"p.perm\">\n              {{ p.labelId | i18n }}\n            </option>\n          </select>\n        </ng-container>\n\n        <ng-template #readOnlyPerm>\n          <div\n            *ngIf=\"item.accessAllItems\"\n            class=\"tw-max-w-36 tw-overflow-hidden tw-overflow-ellipsis tw-whitespace-nowrap tw-font-bold tw-text-muted\"\n            [appA11yTitle]=\"accessAllLabelId(item) | i18n\"\n          >\n            {{ \"canEdit\" | i18n }}\n            <i class=\"bwi bwi-filter tw-ml-1\" aria-hidden=\"true\"></i>\n          </div>\n\n          <div\n            *ngIf=\"item.readonly\"\n            class=\"tw-max-w-36 tw-overflow-hidden tw-overflow-ellipsis tw-whitespace-nowrap tw-font-bold tw-text-muted\"\n            [title]=\"permissionLabelId(item.readonlyPermission) | i18n\"\n          >\n            {{ permissionLabelId(item.readonlyPermission) | i18n }}\n          </div>\n        </ng-template>\n      </td>\n\n      <td bitCell *ngIf=\"showMemberRoles\">\n        {{ $any(item).role | userType: \"-\" }}\n      </td>\n\n      <td bitCell *ngIf=\"showGroupColumn\">\n        {{ $any(item).viaGroupName ?? \"-\" }}\n      </td>\n\n      <td bitCell>\n        <button\n          *ngIf=\"!item.readonly\"\n          type=\"button\"\n          bitIconButton=\"bwi-close\"\n          buttonType=\"muted\"\n          appA11yTitle=\"{{ 'remove' | i18n }} {{ item.labelName }}\"\n          [disabled]=\"disabled\"\n          (click)=\"selectionList.deselectItem(item.id); handleBlur()\"\n        ></button>\n      </td>\n    </tr>\n    <tr *ngIf=\"selectionList.selectedItems.length == 0\">\n      <td bitCell>{{ emptySelectionText }}</td>\n    </tr>\n  </ng-container>\n</bit-table>\n","import { Component, forwardRef, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, FormBuilder, NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { FormSelectionList } from \"@bitwarden/angular/utils/form-selection-list\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { SelectItemView } from \"@bitwarden/components/src/multi-select/models/select-item-view\";\n\nimport {\n  AccessItemType,\n  AccessItemValue,\n  AccessItemView,\n  CollectionPermission,\n} from \"./access-selector.models\";\n\nexport enum PermissionMode {\n  /**\n   * No permission controls or column present. No permission values are emitted.\n   */\n  Hidden = \"hidden\",\n\n  /**\n   * No permission controls. Column rendered an if available on an item. No permission values are emitted\n   */\n  Readonly = \"readonly\",\n\n  /**\n   * Permission Controls and column present. Permission values are emitted.\n   */\n  Edit = \"edit\",\n}\n\n@Component({\n  selector: \"bit-access-selector\",\n  templateUrl: \"access-selector.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AccessSelectorComponent),\n      multi: true,\n    },\n  ],\n})\nexport class AccessSelectorComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n  private notifyOnChange: (v: unknown) => void;\n  private notifyOnTouch: () => void;\n  private pauseChangeNotification: boolean;\n\n  /**\n   * The internal selection list that tracks the value of this form control / component.\n   * It's responsible for keeping items sorted and synced with the rendered form controls\n   * @protected\n   */\n  protected selectionList = new FormSelectionList<AccessItemView, AccessItemValue>((item) => {\n    const permissionControl = this.formBuilder.control(this.initialPermission);\n\n    const fg = this.formBuilder.group({\n      id: item.id,\n      type: item.type,\n      permission: permissionControl,\n    });\n\n    // Disable entire row form group if readonly\n    if (item.readonly) {\n      fg.disable();\n    }\n\n    // Disable permission control if accessAllItems is enabled\n    if (item.accessAllItems || this.permissionMode != PermissionMode.Edit) {\n      permissionControl.disable();\n    }\n\n    return fg;\n  }, this._itemComparator.bind(this));\n\n  /**\n   * Internal form group for this component.\n   * @protected\n   */\n  protected formGroup = this.formBuilder.group({\n    items: this.selectionList.formArray,\n  });\n\n  protected itemType = AccessItemType;\n  protected permissionList = [\n    { perm: CollectionPermission.View, labelId: \"canView\" },\n    { perm: CollectionPermission.ViewExceptPass, labelId: \"canViewExceptPass\" },\n    { perm: CollectionPermission.Edit, labelId: \"canEdit\" },\n    { perm: CollectionPermission.EditExceptPass, labelId: \"canEditExceptPass\" },\n  ];\n  protected initialPermission = CollectionPermission.View;\n\n  disabled: boolean;\n\n  /**\n   * List of all selectable items that. Sorted internally.\n   */\n  @Input()\n  get items(): AccessItemView[] {\n    return this.selectionList.allItems;\n  }\n\n  set items(val: AccessItemView[]) {\n    const selected = (this.selectionList.formArray.getRawValue() ?? []).concat(\n      val.filter((m) => m.readonly)\n    );\n    this.selectionList.populateItems(\n      val.map((m) => {\n        m.icon = m.icon ?? this.itemIcon(m); // Ensure an icon is set\n        return m;\n      }),\n      selected\n    );\n  }\n\n  /**\n   * Permission mode that controls if the permission form controls and column should be present.\n   */\n  @Input()\n  get permissionMode(): PermissionMode {\n    return this._permissionMode;\n  }\n\n  set permissionMode(value: PermissionMode) {\n    this._permissionMode = value;\n    // Toggle any internal permission controls\n    for (const control of this.selectionList.formArray.controls) {\n      if (value == PermissionMode.Edit) {\n        control.get(\"permission\").enable();\n      } else {\n        control.get(\"permission\").disable();\n      }\n    }\n  }\n  private _permissionMode: PermissionMode = PermissionMode.Hidden;\n\n  /**\n   * Column header for the selected items table\n   */\n  @Input() columnHeader: string;\n\n  /**\n   * Label used for the ng selector\n   */\n  @Input() selectorLabelText: string;\n\n  /**\n   * Helper text displayed under the ng selector\n   */\n  @Input() selectorHelpText: string;\n\n  /**\n   * Text that is shown in the table when no items are selected\n   */\n  @Input() emptySelectionText: string;\n\n  /**\n   * Flag for if the member roles column should be present\n   */\n  @Input() showMemberRoles: boolean;\n\n  /**\n   * Flag for if the group column should be present\n   */\n  @Input() showGroupColumn: boolean;\n\n  constructor(\n    private readonly formBuilder: FormBuilder,\n    private readonly i18nService: I18nService\n  ) {}\n\n  /** Required for NG_VALUE_ACCESSOR */\n  registerOnChange(fn: any): void {\n    this.notifyOnChange = fn;\n  }\n\n  /** Required for NG_VALUE_ACCESSOR */\n  registerOnTouched(fn: any): void {\n    this.notifyOnTouch = fn;\n  }\n\n  /** Required for NG_VALUE_ACCESSOR */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n\n    // Keep the internal FormGroup in sync\n    if (this.disabled) {\n      this.formGroup.disable();\n    } else {\n      this.formGroup.enable();\n    }\n  }\n\n  /** Required for NG_VALUE_ACCESSOR */\n  writeValue(selectedItems: AccessItemValue[]): void {\n    // Modifying the selection list, mistakenly fires valueChanges in the\n    // internal form array, so we need to know to pause external notification\n    this.pauseChangeNotification = true;\n\n    // Always clear the internal selection list on a new value\n    this.selectionList.deselectAll();\n\n    // We need to also select any read only items to appear in the table\n    this.selectionList.selectItems(this.items.filter((m) => m.readonly).map((m) => m.id));\n\n    // If the new value is null, then we're done\n    if (selectedItems == null) {\n      this.pauseChangeNotification = false;\n      return;\n    }\n\n    // Unable to handle other value types, throw\n    if (!Array.isArray(selectedItems)) {\n      throw new Error(\"The access selector component only supports Array form values!\");\n    }\n\n    // Iterate and internally select each item\n    for (const value of selectedItems) {\n      this.selectionList.selectItem(value.id, value);\n    }\n\n    this.pauseChangeNotification = false;\n  }\n\n  ngOnInit() {\n    // Watch the internal formArray for changes and propagate them\n    this.selectionList.formArray.valueChanges.pipe(takeUntil(this.destroy$)).subscribe((v) => {\n      if (!this.notifyOnChange || this.pauseChangeNotification) {\n        return;\n      }\n      this.notifyOnChange(v);\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  protected handleBlur() {\n    if (!this.notifyOnTouch) {\n      return;\n    }\n\n    this.notifyOnTouch();\n  }\n\n  protected selectItems(items: SelectItemView[]) {\n    this.pauseChangeNotification = true;\n    this.selectionList.selectItems(items.map((i) => i.id));\n    this.pauseChangeNotification = false;\n    if (this.notifyOnChange != undefined) {\n      this.notifyOnChange(this.selectionList.formArray.value);\n    }\n  }\n\n  protected itemIcon(item: AccessItemView) {\n    switch (item.type) {\n      case AccessItemType.Collection:\n        return \"bwi-collection\";\n      case AccessItemType.Group:\n        return \"bwi-users\";\n      case AccessItemType.Member:\n        return \"bwi-user\";\n    }\n  }\n\n  protected permissionLabelId(perm: CollectionPermission) {\n    return this.permissionList.find((p) => p.perm == perm)?.labelId;\n  }\n\n  protected accessAllLabelId(item: AccessItemView) {\n    return item.type == AccessItemType.Group ? \"groupAccessAll\" : \"memberAccessAll\";\n  }\n\n  protected canEditItemPermission(item: AccessItemView) {\n    return this.permissionMode == PermissionMode.Edit && !item.readonly && !item.accessAllItems;\n  }\n\n  private _itemComparator(a: AccessItemView, b: AccessItemView) {\n    if (a.type != b.type) {\n      return a.type - b.type;\n    }\n    return this.i18nService.collator.compare(\n      a.listName + a.labelName + a.readonly,\n      b.listName + b.labelName + b.readonly\n    );\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\n\nimport { AccessSelectorComponent } from \"./access-selector.component\";\nimport { UserTypePipe } from \"./user-type.pipe\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [AccessSelectorComponent, UserTypePipe],\n  exports: [AccessSelectorComponent],\n})\nexport class AccessSelectorModule {}\n","export class SelectionReadOnlyRequest {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(id: string, readOnly: boolean, hidePasswords: boolean) {\n    this.id = id;\n    this.readOnly = readOnly;\n    this.hidePasswords = hidePasswords;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"collectionAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <div class=\"form-group\">\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"name\"\n            required\n            appAutofocus\n            [disabled]=\"!this.canSave\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"externalId\">{{ \"externalId\" | i18n }}</label>\n          <input\n            id=\"externalId\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"ExternalId\"\n            [(ngModel)]=\"externalId\"\n            [disabled]=\"!this.canSave\"\n          />\n          <small class=\"form-text text-muted\">{{ \"externalIdDesc\" | i18n }}</small>\n        </div>\n        <ng-container *ngIf=\"accessGroups\">\n          <h3 class=\"mt-4 d-flex mb-0\">\n            {{ \"groupAccess\" | i18n }}\n            <div class=\"ml-auto\" *ngIf=\"groups && groups.length && this.canSave\">\n              <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"selectAll\" | i18n }}\n              </button>\n              <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"unselectAll\" | i18n }}\n              </button>\n            </div>\n          </h3>\n          <div *ngIf=\"!groups || !groups.length\">\n            {{ \"noGroupsInList\" | i18n }}\n          </div>\n          <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let g of groups; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"$any(g).checked\"\n                    name=\"Groups[{{ i }}].Checked\"\n                    [disabled]=\"g.accessAll || !this.canSave\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(g)\">\n                  {{ g.name }}\n                  <ng-container *ngIf=\"g.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter text-muted bwi-fw\"\n                      title=\"{{ 'groupAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"groupAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"$any(g).hidePasswords\"\n                    name=\"Groups[{{ i }}].HidePasswords\"\n                    [disabled]=\"!$any(g).checked || g.accessAll || !this.canSave\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"$any(g).readOnly\"\n                    name=\"Groups[{{ i }}].ReadOnly\"\n                    [disabled]=\"!$any(g).checked || g.accessAll || !this.canSave\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"this.canSave\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"this.canDelete\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"$any(deleteBtn).loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { CollectionRequest } from \"@bitwarden/common/models/request/collection.request\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/group.response\";\n\n@Component({\n  selector: \"app-collection-add-edit\",\n  templateUrl: \"collection-add-edit.component.html\",\n})\nexport class CollectionAddEditComponent implements OnInit {\n  @Input() collectionId: string;\n  @Input() organizationId: string;\n  @Input() canSave: boolean;\n  @Input() canDelete: boolean;\n  @Output() onSavedCollection = new EventEmitter();\n  @Output() onDeletedCollection = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  accessGroups = false;\n  title: string;\n  name: string;\n  externalId: string;\n  groups: GroupResponse[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  private orgKey: SymmetricCryptoKey;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    const organization = await this.organizationService.get(this.organizationId);\n    this.accessGroups = organization.useGroups;\n    this.editMode = this.loading = this.collectionId != null;\n    if (this.accessGroups) {\n      const groupsResponse = await this.apiService.getGroups(this.organizationId);\n      this.groups = groupsResponse.data\n        .map((r) => r)\n        .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    }\n    this.orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editCollection\");\n      try {\n        const collection = await this.apiService.getCollectionDetails(\n          this.organizationId,\n          this.collectionId\n        );\n        this.name = await this.cryptoService.decryptToUtf8(\n          new EncString(collection.name),\n          this.orgKey\n        );\n        this.externalId = collection.externalId;\n        if (collection.groups != null && this.groups.length > 0) {\n          collection.groups.forEach((s) => {\n            const group = this.groups.filter((g) => !g.accessAll && g.id === s.id);\n            if (group != null && group.length > 0) {\n              (group[0] as any).checked = true;\n              (group[0] as any).readOnly = s.readOnly;\n              (group[0] as any).hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"addCollection\");\n    }\n\n    this.groups.forEach((g) => {\n      if (g.accessAll) {\n        (g as any).checked = true;\n      }\n    });\n\n    this.loading = false;\n  }\n\n  check(g: GroupResponse, select?: boolean) {\n    if (g.accessAll) {\n      return;\n    }\n    (g as any).checked = select == null ? !(g as any).checked : select;\n    if (!(g as any).checked) {\n      (g as any).readOnly = false;\n      (g as any).hidePasswords = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.groups.forEach((g) => this.check(g, select));\n  }\n\n  async submit() {\n    if (this.orgKey == null) {\n      throw new Error(\"No encryption key for this organization.\");\n    }\n\n    const request = new CollectionRequest();\n    request.name = (await this.cryptoService.encrypt(this.name, this.orgKey)).encryptedString;\n    request.externalId = this.externalId;\n    request.groups = this.groups\n      .filter((g) => (g as any).checked && !g.accessAll)\n      .map(\n        (g) => new SelectionReadOnlyRequest(g.id, !!(g as any).readOnly, !!(g as any).hidePasswords)\n      );\n\n    try {\n      if (this.editMode) {\n        this.formPromise = this.apiService.putCollection(\n          this.organizationId,\n          this.collectionId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.postCollection(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedCollectionId\" : \"createdCollectionId\", this.name)\n      );\n      this.onSavedCollection.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      \"app-collection-add-edit .modal-content\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteCollection(this.organizationId, this.collectionId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", this.name)\n      );\n      this.onDeletedCollection.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"userAccessTitle\">\n          {{ \"userAccess\" | i18n }}\n          <small>{{ entityName }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading || !users\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <cdk-virtual-scroll-viewport\n        itemSize=\"46\"\n        minBufferPx=\"600\"\n        maxBufferPx=\"1200\"\n        [style]=\"scrollViewportStyle\"\n      >\n        <div class=\"modal-body\" *ngIf=\"!loading && users && searchedUsers\">\n          <div class=\"d-flex\">\n            <div class=\"mr-3\">\n              <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n              <input\n                type=\"search\"\n                class=\"form-control form-control-sm\"\n                id=\"search\"\n                placeholder=\"{{ 'search' | i18n }}\"\n                name=\"SearchText\"\n                [(ngModel)]=\"searchText\"\n              />\n            </div>\n            <div class=\"btn-group btn-group-sm\" role=\"group\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{ active: !showSelected }\"\n                (click)=\"filterSelected(false)\"\n              >\n                {{ \"all\" | i18n }}\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{ active: showSelected }\"\n                (click)=\"filterSelected(true)\"\n              >\n                {{ \"selected\" | i18n }}\n                <span bitBadge badgeType=\"info\" *ngIf=\"selectedCount\">{{ selectedCount }}</span>\n              </button>\n            </div>\n          </div>\n          <ng-container *ngIf=\"!searchedUsers.length\">\n            <hr />\n            {{ \"noUsersInList\" | i18n }}\n          </ng-container>\n          <table class=\"table table-hover table-list mb-0\" [hidden]=\"!searchedUsers.length\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th *ngIf=\"entity === 'collection'\">&nbsp;</th>\n                <th>{{ \"userType\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"hidePasswords\" | i18n }}\n                </th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"readOnly\" | i18n }}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *cdkVirtualFor=\"let u of searchedUsers\" class=\"\">\n                <td class=\"table-list-checkbox\" (click)=\"check(u)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.checked\"\n                    name=\"{{ u.id.substr(0, 8) }}_Checked\"\n                    [disabled]=\"entity === 'collection' && u.accessAll\"\n                    (change)=\"selectedChanged(u)\"\n                    appStopProp\n                  />\n                </td>\n                <td width=\"30\" (click)=\"check(u)\">\n                  <bit-avatar [text]=\"u | userName\" [id]=\"u.id\" size=\"small\"></bit-avatar>\n                </td>\n                <td>\n                  {{ u.email }}\n                  <span\n                    bitBadge\n                    badgeType=\"secondary\"\n                    *ngIf=\"u.status === organizationUserStatusType.Invited\"\n                    >{{ \"invited\" | i18n }}</span\n                  >\n                  <span\n                    bitBadge\n                    badgeType=\"warning\"\n                    *ngIf=\"u.status === organizationUserStatusType.Accepted\"\n                    >{{ \"accepted\" | i18n }}</span\n                  >\n                  <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n                </td>\n                <td *ngIf=\"entity === 'collection'\">\n                  <ng-container *ngIf=\"u.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter\"\n                      title=\"{{ 'userAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"userAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td>\n                  <span *ngIf=\"u.type === organizationUserType.Owner\">{{ \"owner\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Admin\">{{ \"admin\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Manager\">{{\n                    \"manager\" | i18n\n                  }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.User\">{{ \"user\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Custom\">{{ \"custom\" | i18n }}</span>\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.hidePasswords\"\n                    name=\"{{ u.id.substr(0, 8) }}_HidePasswords\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.readOnly\"\n                    name=\"{{ u.id.substr(0, 8) }}_ReadOnly\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </cdk-virtual-scroll-viewport>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/abstractions/organization-user/responses\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\n\n@Component({\n  selector: \"app-entity-users\",\n  templateUrl: \"entity-users.component.html\",\n  providers: [SearchPipe],\n})\nexport class EntityUsersComponent implements OnInit {\n  @Input() entity: \"group\" | \"collection\";\n  @Input() entityId: string;\n  @Input() entityName: string;\n  @Input() organizationId: string;\n  @Output() onEditedUsers = new EventEmitter();\n\n  organizationUserType = OrganizationUserType;\n  organizationUserStatusType = OrganizationUserStatusType;\n\n  showSelected = false;\n  loading = true;\n  formPromise: Promise<any>;\n  selectedCount = 0;\n  searchText: string;\n\n  private allUsers: OrganizationUserUserDetailsResponse[] = [];\n\n  constructor(\n    private search: SearchPipe,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationUserService: OrganizationUserService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.loadUsers();\n    this.loading = false;\n  }\n\n  get users() {\n    if (this.showSelected) {\n      return this.allUsers.filter((u) => (u as any).checked);\n    } else {\n      return this.allUsers;\n    }\n  }\n\n  get searchedUsers() {\n    return this.search.transform(this.users, this.searchText, \"name\", \"email\", \"id\");\n  }\n\n  get scrollViewportStyle() {\n    return `min-height: 120px; height: ${120 + this.searchedUsers.length * 46}px`;\n  }\n\n  async loadUsers() {\n    const users = await this.organizationUserService.getAllUsers(this.organizationId);\n    this.allUsers = users.data.map((r) => r).sort(Utils.getSortFunction(this.i18nService, \"email\"));\n    if (this.entity === \"group\") {\n      const response = await this.apiService.getGroupUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => u.id === s);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n          }\n        });\n      }\n    } else if (this.entity === \"collection\") {\n      const response = await this.apiService.getCollectionUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => !u.accessAll && u.id === s.id);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n            (user[0] as any).readOnly = s.readOnly;\n            (user[0] as any).hidePasswords = s.hidePasswords;\n          }\n        });\n      }\n    }\n\n    this.allUsers.forEach((u) => {\n      if (this.entity === \"collection\" && u.accessAll) {\n        (u as any).checked = true;\n      }\n      if ((u as any).checked) {\n        this.selectedCount++;\n      }\n    });\n  }\n\n  check(u: OrganizationUserUserDetailsResponse) {\n    if (this.entity === \"collection\" && u.accessAll) {\n      return;\n    }\n    (u as any).checked = !(u as any).checked;\n    this.selectedChanged(u);\n  }\n\n  selectedChanged(u: OrganizationUserUserDetailsResponse) {\n    if ((u as any).checked) {\n      this.selectedCount++;\n    } else {\n      if (this.entity === \"collection\") {\n        (u as any).readOnly = false;\n        (u as any).hidePasswords = false;\n      }\n      this.selectedCount--;\n    }\n  }\n\n  filterSelected(showSelected: boolean) {\n    this.showSelected = showSelected;\n  }\n\n  async submit() {\n    try {\n      if (this.entity === \"group\") {\n        const selections = this.users.filter((u) => (u as any).checked).map((u) => u.id);\n        this.formPromise = this.apiService.putGroupUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      } else {\n        const selections = this.users\n          .filter((u) => (u as any).checked && !u.accessAll)\n          .map(\n            (u) =>\n              new SelectionReadOnlyRequest(u.id, !!(u as any).readOnly, !!(u as any).hidePasswords)\n          );\n        this.formPromise = this.apiService.putCollectionUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedUsers\"));\n      this.onEditedUsers.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<bit-simple-dialog>\n  <i\n    bit-dialog-icon\n    class=\"bwi bwi-business tw-text-5xl tw-text-primary-500\"\n    aria-hidden=\"true\"\n  ></i>\n  <span bitDialogTitle class=\"font-bold\">{{ \"upgradeOrganization\" | i18n }}</span>\n  <span bitDialogContent>\n    {{ data.dialogBodyText }}\n  </span>\n  <div bitDialogFooter class=\"tw-flex tw-flex-row tw-gap-2\">\n    <ng-container *ngIf=\"data.orgCanManageBilling\">\n      <button\n        bitButton\n        buttonType=\"primary\"\n        [routerLink]=\"['/organizations', data.orgId, 'billing', 'subscription']\"\n        [queryParams]=\"{ upgrade: true }\"\n        (click)=\"dialogRef.close()\"\n      >\n        {{ \"upgrade\" | i18n }}\n      </button>\n      <button bitButton buttonType=\"secondary\" (click)=\"dialogRef.close()\">\n        {{ \"cancel\" | i18n }}\n      </button>\n    </ng-container>\n\n    <ng-container *ngIf=\"!data.orgCanManageBilling\">\n      <button bitButton buttonType=\"primary\" (click)=\"dialogRef.close()\">\n        {{ \"ok\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n</bit-simple-dialog>\n","import { DialogRef, DIALOG_DATA } from \"@angular/cdk/dialog\";\nimport { Component, Inject } from \"@angular/core\";\n\nexport interface OrgUpgradeDialogData {\n  orgId: string;\n  orgCanManageBilling: boolean;\n  dialogBodyText: string;\n}\n\n@Component({\n  selector: \"app-org-upgrade-dialog\",\n  templateUrl: \"org-upgrade-dialog.component.html\",\n})\nexport class OrgUpgradeDialogComponent {\n  constructor(\n    public dialogRef: DialogRef,\n    @Inject(DIALOG_DATA) public data: OrgUpgradeDialogData\n  ) {}\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"collections\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <button\n      type=\"button\"\n      *ngIf=\"this.canCreate\"\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"add()\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newCollection\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging()\n      ? pagedCollections\n      : (collections | search: searchText:'name':'id')) as searchedCollections\n  \"\n>\n  <p *ngIf=\"!searchedCollections.length\">{{ \"noCollectionsInList\" | i18n }}</p>\n  <table\n    class=\"table table-hover table-list\"\n    *ngIf=\"searchedCollections.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of searchedCollections\">\n        <td>\n          <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.name }}</a>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown *ngIf=\"this.canEdit(c) || this.canDelete(c)\">\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canEdit(c)\"\n                (click)=\"users(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                {{ \"users\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item text-danger\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canDelete(c)\"\n                (click)=\"delete(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport {\n  CollectionDetailsResponse,\n  CollectionResponse,\n} from \"@bitwarden/common/models/response/collection.response\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { DialogService } from \"@bitwarden/components\";\n\nimport { CollectionAddEditComponent } from \"./collection-add-edit.component\";\nimport { EntityUsersComponent } from \"./entity-users.component\";\nimport { OrgUpgradeDialogComponent } from \"./org-upgrade-dialog/org-upgrade-dialog.component\";\n\n@Component({\n  selector: \"app-org-manage-collections\",\n  templateUrl: \"collections.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CollectionsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organization: Organization;\n  canCreate = false;\n  organizationId: string;\n  collections: CollectionView[];\n  assignedCollections: CollectionView[];\n  pagedCollections: CollectionView[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedCollectionsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private collectionService: CollectionService,\n    private modalService: ModalService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private dialogService: DialogService\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    this.canCreate = this.organization.canCreateNewCollections;\n\n    const decryptCollections = async (r: ListResponse<CollectionResponse>) => {\n      const collections = r.data\n        .filter((c) => c.organizationId === this.organizationId)\n        .map((d) => new Collection(new CollectionData(d as CollectionDetailsResponse)));\n      return await this.collectionService.decryptMany(collections);\n    };\n\n    if (this.organization.canViewAssignedCollections) {\n      const response = await this.apiService.getUserCollections();\n      this.assignedCollections = await decryptCollections(response);\n    }\n\n    if (this.organization.canViewAllCollections) {\n      const response = await this.apiService.getCollections(this.organizationId);\n      this.collections = await decryptCollections(response);\n    } else {\n      this.collections = this.assignedCollections;\n    }\n\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.collections || this.collections.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCollections.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedCollectionsCount > this.pageSize) {\n      pagedSize = this.pagedCollectionsCount;\n    }\n    if (this.collections.length > pagedLength) {\n      this.pagedCollections = this.pagedCollections.concat(\n        this.collections.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCollectionsCount = this.pagedCollections.length;\n    this.didScroll = this.pagedCollections.length > this.pageSize;\n  }\n\n  async edit(collection: CollectionView) {\n    const canCreate = collection == null && this.canCreate;\n    const canEdit = collection != null && this.canEdit(collection);\n    const canDelete = collection != null && this.canDelete(collection);\n\n    if (!(canCreate || canEdit || canDelete)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n      return;\n    }\n\n    if (\n      !collection &&\n      this.organization.planProductType === ProductType.Free &&\n      this.collections.length === this.organization.maxCollections\n    ) {\n      // Show org upgrade modal\n      const dialogBodyText = this.organization.canManageBilling\n        ? this.i18nService.t(\n            \"freeOrgMaxCollectionReachedManageBilling\",\n            this.organization.maxCollections.toString()\n          )\n        : this.i18nService.t(\n            \"freeOrgMaxCollectionReachedNoManageBilling\",\n            this.organization.maxCollections.toString()\n          );\n\n      this.dialogService.open(OrgUpgradeDialogComponent, {\n        data: {\n          orgId: this.organization.id,\n          dialogBodyText: dialogBodyText,\n          orgCanManageBilling: this.organization.canManageBilling,\n        },\n      });\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      CollectionAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.collectionId = collection != null ? collection.id : null;\n        comp.canSave = canCreate || canEdit;\n        comp.canDelete = canDelete;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedCollection.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedCollection.subscribe(() => {\n          modal.close();\n          this.removeCollection(collection);\n        });\n      }\n    );\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(collection: CollectionView) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      collection.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteCollection(this.organizationId, collection.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", collection.name)\n      );\n      this.removeCollection(collection);\n    } catch (e) {\n      this.logService.error(e);\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n    }\n  }\n\n  async users(collection: CollectionView) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"collection\";\n        comp.entityId = collection.id;\n        comp.entityName = collection.name;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onEditedUsers.subscribe(() => {\n          this.load();\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedCollections = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.collections && this.collections.length > this.pageSize;\n  }\n\n  canEdit(collection: CollectionView) {\n    if (this.organization.canEditAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canEditAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  canDelete(collection: CollectionView) {\n    if (this.organization.canDeleteAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canDeleteAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  private removeCollection(collection: CollectionView) {\n    const index = this.collections.indexOf(collection);\n    if (index > -1) {\n      this.collections.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","import { SelectionReadOnlyRequest } from \"./selection-read-only.request\";\n\nexport class GroupRequest {\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n  collections: SelectionReadOnlyRequest[] = [];\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"groupAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <div class=\"form-group\">\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"name\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"externalId\">{{ \"externalId\" | i18n }}</label>\n          <input\n            id=\"externalId\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"ExternalId\"\n            [(ngModel)]=\"externalId\"\n          />\n          <small class=\"form-text text-muted\">{{ \"externalIdDesc\" | i18n }}</small>\n        </div>\n        <h3 class=\"mt-4 d-flex\">\n          <div class=\"mb-2\">\n            {{ \"accessControl\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/user-types-access-control/#access-control\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </h3>\n        <div class=\"form-group\" [ngClass]=\"{ 'mb-0': access !== 'selected' }\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessAll\"\n              value=\"all\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessAll\">\n              {{ \"groupAccessAllItems\" | i18n }}\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessSelected\"\n              value=\"selected\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessSelected\">\n              {{ \"groupAccessSelectedCollections\" | i18n }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"access === 'selected'\">\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"$any(c).checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(c)\">\n                  {{ c.name }}\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.hidePasswords\"\n                    name=\"Collection[{{ i }}].HidePasswords\"\n                    [disabled]=\"!$any(c).checked\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.readOnly\"\n                    name=\"Collection[{{ i }}].ReadOnly\"\n                    [disabled]=\"!$any(c).checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"$any(deleteBtn).loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n              title=\"{{ 'loading' | i18n }}\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { GroupRequest } from \"@bitwarden/common/models/request/group.request\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collection.response\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Component({\n  selector: \"app-group-add-edit\",\n  templateUrl: \"group-add-edit.component.html\",\n})\nexport class GroupAddEditComponent implements OnInit {\n  @Input() groupId: string;\n  @Input() organizationId: string;\n  @Output() onSavedGroup = new EventEmitter();\n  @Output() onDeletedGroup = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  title: string;\n  name: string;\n  externalId: string;\n  access: \"all\" | \"selected\" = \"selected\";\n  collections: CollectionView[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.groupId != null;\n    await this.loadCollections();\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editGroup\");\n      try {\n        const group = await this.apiService.getGroupDetails(this.organizationId, this.groupId);\n        this.access = group.accessAll ? \"all\" : \"selected\";\n        this.name = group.name;\n        this.externalId = group.externalId;\n        if (group.collections != null && this.collections != null) {\n          group.collections.forEach((s) => {\n            const collection = this.collections.filter((c) => c.id === s.id);\n            if (collection != null && collection.length > 0) {\n              (collection[0] as any).checked = true;\n              collection[0].readOnly = s.readOnly;\n              collection[0].hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"addGroup\");\n    }\n\n    this.loading = false;\n  }\n\n  async loadCollections() {\n    const response = await this.apiService.getCollections(this.organizationId);\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    this.collections = await this.collectionService.decryptMany(collections);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n    if (!(c as any).checked) {\n      c.readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n\n  async submit() {\n    const request = new GroupRequest();\n    request.name = this.name;\n    request.externalId = this.externalId;\n    request.accessAll = this.access === \"all\";\n    if (!request.accessAll) {\n      request.collections = this.collections\n        .filter((c) => (c as any).checked)\n        .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n    }\n\n    try {\n      if (this.editMode) {\n        this.formPromise = this.apiService.putGroup(this.organizationId, this.groupId, request);\n      } else {\n        this.formPromise = this.apiService.postGroup(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedGroupId\" : \"createdGroupId\", this.name)\n      );\n      this.onSavedGroup.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      \"app-group-add-edit .modal-content\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteGroup(this.organizationId, this.groupId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", this.name)\n      );\n      this.onDeletedGroup.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"groups\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newGroup\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedGroups : (groups | search: searchText:'name':'id')) as searchedGroups\n  \"\n>\n  <p *ngIf=\"!searchedGroups.length\">{{ \"noGroupsInList\" | i18n }}</p>\n  <table\n    class=\"table table-hover table-list\"\n    *ngIf=\"searchedGroups.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let g of searchedGroups\">\n        <td>\n          <a href=\"#\" appStopClick (click)=\"edit(g)\">{{ g.name }}</a>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"users(g)\">\n                <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                {{ \"users\" | i18n }}\n              </a>\n              <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(g)\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/group.response\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\nimport { GroupAddEditComponent } from \"./group-add-edit.component\";\n\n@Component({\n  selector: \"app-org-groups\",\n  templateUrl: \"groups.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class GroupsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  groups: GroupResponse[];\n  pagedGroups: GroupResponse[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedGroupsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getGroups(this.organizationId);\n    const groups = response.data != null && response.data.length > 0 ? response.data : [];\n    groups.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.groups = groups;\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.groups || this.groups.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedGroups.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedGroupsCount > this.pageSize) {\n      pagedSize = this.pagedGroupsCount;\n    }\n    if (this.groups.length > pagedLength) {\n      this.pagedGroups = this.pagedGroups.concat(\n        this.groups.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedGroupsCount = this.pagedGroups.length;\n    this.didScroll = this.pagedGroups.length > this.pageSize;\n  }\n\n  async edit(group: GroupResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      GroupAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.groupId = group != null ? group.id : null;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedGroup.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedGroup.subscribe(() => {\n          modal.close();\n          this.removeGroup(group);\n        });\n      }\n    );\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(group: GroupResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      group.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteGroup(this.organizationId, group.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", group.name)\n      );\n      this.removeGroup(group);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async users(group: GroupResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"group\";\n        comp.entityId = group.id;\n        comp.entityName = group.name;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onEditedUsers.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedGroups = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.groups && this.groups.length > this.pageSize;\n  }\n\n  private removeGroup(group: GroupResponse) {\n    const index = this.groups.indexOf(group);\n    if (index > -1) {\n      this.groups.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"organization\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"members\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageUsers\"\n          >\n            {{ \"members\" | i18n }}\n          </a>\n          <a\n            routerLink=\"collections\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canViewAllCollections || organization.canViewAssignedCollections\"\n          >\n            {{ \"collections\" | i18n }}\n          </a>\n          <a\n            routerLink=\"groups\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageGroups\"\n          >\n            {{ \"groups\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-manage\",\n  templateUrl: \"manage.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ManageComponent implements OnInit {\n  organization: Organization;\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n    });\n  }\n}\n","export class OrganizationUserConfirmRequest {\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"bulkTitle\">\n          {{ bulkTitle }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"danger\" *ngIf=\"users.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!done\">\n          <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error && isRevoking\">\n            {{ \"revokeUsersWarning\" | i18n }}\n          </app-callout>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done && users.length > 0\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ bulkTitle }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ModalConfig } from \"@bitwarden/angular/services/modal.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-restore-revoke\",\n  templateUrl: \"bulk-restore-revoke.component.html\",\n})\nexport class BulkRestoreRevokeComponent {\n  isRevoking: boolean;\n  organizationId: string;\n  users: BulkUserDetails[];\n\n  statuses: Map<string, string> = new Map();\n\n  loading = false;\n  done = false;\n  error: string;\n\n  constructor(\n    protected i18nService: I18nService,\n    private organizationUserService: OrganizationUserService,\n    config: ModalConfig\n  ) {\n    this.isRevoking = config.data.isRevoking;\n    this.organizationId = config.data.organizationId;\n    this.users = config.data.users;\n  }\n\n  get bulkTitle() {\n    const titleKey = this.isRevoking ? \"revokeUsers\" : \"restoreUsers\";\n    return this.i18nService.t(titleKey);\n  }\n\n  async submit() {\n    this.loading = true;\n    try {\n      const response = await this.performBulkUserAction();\n\n      const bulkMessage = this.isRevoking ? \"bulkRevokedMessage\" : \"bulkRestoredMessage\";\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(bulkMessage);\n        this.statuses.set(entry.id, error);\n      });\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n\n    this.loading = false;\n  }\n\n  protected async performBulkUserAction() {\n    const userIds = this.users.map((user) => user.id);\n    if (this.isRevoking) {\n      return await this.organizationUserService.revokeManyOrganizationUsers(\n        this.organizationId,\n        userIds\n      );\n    } else {\n      return await this.organizationUserService.restoreManyOrganizationUsers(\n        this.organizationId,\n        userIds\n      );\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"resetPasswordTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"resetPasswordTitle\">\n          {{ \"resetPassword\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\"\n          >{{ \"resetPasswordLoggedOutWarning\" | i18n: loggedOutWarningName }}\n        </app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          enforcedPolicyMessage=\"{{ 'resetPasswordMasterPasswordPolicyInEffect' | i18n }}\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col form-group\">\n            <div class=\"d-flex\">\n              <label for=\"newPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"ml-auto d-flex\">\n                <a\n                  href=\"#\"\n                  class=\"d-block mr-2 bwi-icon-above-input\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                  (click)=\"generatePassword()\"\n                >\n                  <i class=\"bwi bwi-lg bwi-fw bwi-refresh\" aria-hidden=\"true\"></i>\n                </a>\n              </div>\n            </div>\n            <div class=\"input-group mb-1\">\n              <input\n                id=\"newPassword\"\n                class=\"form-control text-monospace\"\n                appAutofocus\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"NewPassword\"\n                [(ngModel)]=\"newPassword\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <div class=\"input-group-append\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword()\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary\"\n                  appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                  (click)=\"copy(newPassword)\"\n                >\n                  <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n            <app-password-strength\n              [password]=\"newPassword\"\n              [email]=\"email\"\n              [showText]=\"true\"\n              (passwordStrengthResult)=\"getStrengthResult($event)\"\n            >\n            </app-password-strength>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport zxcvbn from \"zxcvbn\";\n\nimport { PasswordStrengthComponent } from \"@bitwarden/angular/shared/components/password-strength/password-strength.component\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserResetPasswordRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\n\n@Component({\n  selector: \"app-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordComponent implements OnInit, OnDestroy {\n  @Input() name: string;\n  @Input() email: string;\n  @Input() id: string;\n  @Input() organizationId: string;\n  @Output() onPasswordReset = new EventEmitter();\n  @ViewChild(PasswordStrengthComponent) passwordStrengthComponent: PasswordStrengthComponent;\n\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  newPassword: string = null;\n  showPassword = false;\n  passwordStrengthResult: zxcvbn.ZXCVBNResult;\n  formPromise: Promise<any>;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private organizationUserService: OrganizationUserService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService\n      .masterPasswordPolicyOptions$()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (enforcedPasswordPolicyOptions) =>\n          (this.enforcedPolicyOptions = enforcedPasswordPolicyOptions)\n      );\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get loggedOutWarningName() {\n    return this.name != null ? this.name : this.i18nService.t(\"thisUser\");\n  }\n\n  async generatePassword() {\n    const options = (await this.passwordGenerationService.getOptions())?.[0] ?? {};\n    this.newPassword = await this.passwordGenerationService.generatePassword(options);\n    this.passwordStrengthComponent.updatePasswordStrength(this.newPassword);\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"newPassword\").focus();\n  }\n\n  copy(value: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  async submit() {\n    // Validation\n    if (this.newPassword == null || this.newPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n\n    if (this.newPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordMinlength\")\n      );\n      return false;\n    }\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.passwordStrengthResult.score,\n        this.newPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    if (this.passwordStrengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    // Get user Information (kdf type, kdf iterations, resetPasswordKey, private key) and change password\n    try {\n      this.formPromise = this.organizationUserService\n        .getOrganizationUserResetPasswordDetails(this.organizationId, this.id)\n        .then(async (response) => {\n          if (response == null) {\n            throw new Error(this.i18nService.t(\"resetPasswordDetailsError\"));\n          }\n\n          const kdfType = response.kdf;\n          const kdfIterations = response.kdfIterations;\n          const resetPasswordKey = response.resetPasswordKey;\n          const encryptedPrivateKey = response.encryptedPrivateKey;\n\n          // Decrypt Organization's encrypted Private Key with org key\n          const orgSymKey = await this.cryptoService.getOrgKey(this.organizationId);\n          const decPrivateKey = await this.cryptoService.decryptToBytes(\n            new EncString(encryptedPrivateKey),\n            orgSymKey\n          );\n\n          // Decrypt User's Reset Password Key to get EncKey\n          const decValue = await this.cryptoService.rsaDecrypt(resetPasswordKey, decPrivateKey);\n          const userEncKey = new SymmetricCryptoKey(decValue);\n\n          // Create new key and hash new password\n          const newKey = await this.cryptoService.makeKey(\n            this.newPassword,\n            this.email.trim().toLowerCase(),\n            kdfType,\n            kdfIterations\n          );\n          const newPasswordHash = await this.cryptoService.hashPassword(this.newPassword, newKey);\n\n          // Create new encKey for the User\n          const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n          // Create request\n          const request = new OrganizationUserResetPasswordRequest();\n          request.key = newEncKey[1].encryptedString;\n          request.newMasterPasswordHash = newPasswordHash;\n\n          // Change user's password\n          return this.organizationUserService.putOrganizationUserResetPassword(\n            this.organizationId,\n            this.id,\n            request\n          );\n        });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"resetPasswordSuccess\")\n      );\n      this.onPasswordReset.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  getStrengthResult(result: zxcvbn.ZXCVBNResult) {\n    this.passwordStrengthResult = result;\n  }\n}\n","import { OrganizationUserType } from \"../../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../../../models/api/permissions.api\";\nimport { SelectionReadOnlyRequest } from \"../../../models/request/selection-read-only.request\";\n\nexport class OrganizationUserUpdateRequest {\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  permissions: PermissionsApi;\n}\n","import { OrganizationUserType } from \"../../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../../../models/api/permissions.api\";\nimport { SelectionReadOnlyRequest } from \"../../../models/request/selection-read-only.request\";\n\nexport class OrganizationUserInviteRequest {\n  emails: string[] = [];\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  permissions: PermissionsApi;\n}\n","<div class=\"form-group mb-0\">\n  <div class=\"form-check mt-1 form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      [name]=\"pascalize(parentId)\"\n      [id]=\"parentId\"\n      [(ngModel)]=\"parentChecked\"\n      [indeterminate]=\"parentIndeterminate\"\n    />\n    <label class=\"form-check-label font-weight-normal\" [for]=\"parentId\">\n      {{ parentId | i18n }}\n    </label>\n  </div>\n  <div class=\"form-group form-group-child-check mb-0\">\n    <div class=\"form-check mt-1\" *ngFor=\"let c of checkboxes\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        [name]=\"pascalize(c.id)\"\n        [id]=\"c.id\"\n        [ngModel]=\"c.get()\"\n        (ngModelChange)=\"c.set($event)\"\n      />\n      <label class=\"form-check-label font-weight-normal\" [for]=\"c.id\">\n        {{ c.id | i18n }}\n      </label>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-nested-checkbox\",\n  templateUrl: \"nested-checkbox.component.html\",\n})\nexport class NestedCheckboxComponent {\n  @Input() parentId: string;\n  @Input() checkboxes: { id: string; get: () => boolean; set: (v: boolean) => void }[];\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  get parentIndeterminate() {\n    return !this.parentChecked && this.checkboxes.some((c) => c.get());\n  }\n\n  get parentChecked() {\n    return this.checkboxes.every((c) => c.get());\n  }\n\n  set parentChecked(value: boolean) {\n    this.checkboxes.forEach((c) => {\n      c.set(value);\n    });\n  }\n\n  pascalize(s: string) {\n    return Utils.camelToPascalCase(s);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n          <span bitBadge badgeType=\"secondary\" *ngIf=\"isRevoked\">{{ \"revoked\" | i18n }}</span>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteUserDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"emails\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"emails\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Emails\"\n              [(ngModel)]=\"emails\"\n              required\n              appAutoFocus\n            />\n            <small class=\"text-muted\">{{ \"inviteMultipleEmailDesc\" | i18n: \"20\" }}</small>\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userType\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/user-types-access-control/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeUser\"\n            [value]=\"organizationUserType.User\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeUser\">\n            {{ \"user\" | i18n }}\n            <small>{{ \"userDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeManager\"\n            [value]=\"organizationUserType.Manager\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeManager\">\n            {{ \"manager\" | i18n }}\n            <small>{{ \"managerDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeAdmin\"\n            [value]=\"organizationUserType.Admin\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeAdmin\">\n            {{ \"admin\" | i18n }}\n            <small>{{ \"adminDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeOwner\"\n            [value]=\"organizationUserType.Owner\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeOwner\">\n            {{ \"owner\" | i18n }}\n            <small>{{ \"ownerDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeCustom\"\n            [value]=\"organizationUserType.Custom\"\n            [(ngModel)]=\"type\"\n            [attr.disabled]=\"!canUseCustomPermissions || null\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeCustom\">\n            {{ \"custom\" | i18n }}\n            <ng-container *ngIf=\"!canUseCustomPermissions; else enterprise\">\n              <small\n                >{{ \"customDescNonEnterpriseStart\" | i18n\n                }}<a href=\"https://bitwarden.com/contact/\" target=\"_blank\">{{\n                  \"customDescNonEnterpriseLink\" | i18n\n                }}</a\n                >{{ \"customDescNonEnterpriseEnd\" | i18n }}</small\n              >\n            </ng-container>\n            <ng-template #enterprise>\n              <small>{{ \"customDesc\" | i18n }}</small>\n            </ng-template>\n          </label>\n        </div>\n        <ng-container *ngIf=\"customUserTypeSelected\">\n          <h3 class=\"mt-4 d-flex\">\n            {{ \"permissions\" | i18n }}\n          </h3>\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <div class=\"mb-3\">\n                <label class=\"font-weight-bold mb-0\">{{ \"managerPermissions\" | i18n }}</label>\n                <hr class=\"my-0 mr-2\" />\n                <app-nested-checkbox\n                  parentId=\"manageAssignedCollections\"\n                  [checkboxes]=\"manageAssignedCollectionsCheckboxes\"\n                >\n                </app-nested-checkbox>\n              </div>\n            </div>\n            <div class=\"col-6\">\n              <div class=\"mb-3\">\n                <label class=\"font-weight-bold mb-0\">{{ \"adminPermissions\" | i18n }}</label>\n                <hr class=\"my-0 mr-2\" />\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessEventLogs\"\n                      id=\"accessEventLogs\"\n                      [(ngModel)]=\"permissions.accessEventLogs\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessEventLogs\">\n                      {{ \"accessEventLogs\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessImportExport\"\n                      id=\"accessImportExport\"\n                      [(ngModel)]=\"permissions.accessImportExport\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessImportExport\">\n                      {{ \"accessImportExport\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessReports\"\n                      id=\"accessReports\"\n                      [(ngModel)]=\"permissions.accessReports\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessReports\">\n                      {{ \"accessReports\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <app-nested-checkbox\n                  parentId=\"manageAllCollections\"\n                  [checkboxes]=\"manageAllCollectionsCheckboxes\"\n                >\n                </app-nested-checkbox>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageGroups\"\n                      id=\"manageGroups\"\n                      [(ngModel)]=\"permissions.manageGroups\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageGroups\">\n                      {{ \"manageGroups\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageSso\"\n                      id=\"managePolicies\"\n                      [(ngModel)]=\"permissions.manageSso\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageSso\">\n                      {{ \"manageSso\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"managePolicies\"\n                      id=\"managePolicies\"\n                      [(ngModel)]=\"permissions.managePolicies\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"managePolicies\">\n                      {{ \"managePolicies\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageUsers\"\n                      id=\"manageUsers\"\n                      [(ngModel)]=\"permissions.manageUsers\"\n                      (change)=\"handleDependentPermissions()\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageUsers\">\n                      {{ \"manageUsers\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageResetPassword\"\n                      id=\"manageResetPassword\"\n                      [(ngModel)]=\"permissions.manageResetPassword\"\n                      (change)=\"handleDependentPermissions()\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageResetPassword\">\n                      {{ \"manageResetPassword\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-4 d-flex\">\n          <div class=\"mb-3\">\n            {{ \"accessControl\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/user-types-access-control/#access-control\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </h3>\n        <div class=\"form-group\" [ngClass]=\"{ 'mb-0': access !== 'selected' }\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessAll\"\n              value=\"all\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessAll\">\n              {{ \"userAccessAllItems\" | i18n }}\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessSelected\"\n              value=\"selected\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessSelected\">\n              {{ \"userAccessSelectedCollections\" | i18n }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"access === 'selected'\">\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"$any(c).checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(c)\">\n                  {{ c.name }}\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.hidePasswords\"\n                    name=\"Collection[{{ i }}].HidePasswords\"\n                    [disabled]=\"!$any(c).checked\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.readOnly\"\n                    name=\"Collection[{{ i }}].ReadOnly\"\n                    [disabled]=\"!$any(c).checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            type=\"button\"\n            (click)=\"restore()\"\n            class=\"btn btn-outline-secondary\"\n            *ngIf=\"editMode && isRevoked\"\n            [disabled]=\"form.loading\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"restoreAccess\" | i18n }}</span>\n          </button>\n          <button\n            type=\"button\"\n            (click)=\"revoke()\"\n            class=\"btn btn-outline-secondary\"\n            *ngIf=\"editMode && !isRevoked\"\n            [disabled]=\"form.loading\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"revokeAccess\" | i18n }}</span>\n          </button>\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"$any(deleteBtn).loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport {\n  OrganizationUserInviteRequest,\n  OrganizationUserUpdateRequest,\n} from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { PermissionsApi } from \"@bitwarden/common/models/api/permissions.api\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collection.response\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Component({\n  selector: \"app-user-add-edit\",\n  templateUrl: \"user-add-edit.component.html\",\n})\nexport class UserAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() organizationUserId: string;\n  @Input() organizationId: string;\n  @Input() usesKeyConnector = false;\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n  @Output() onRevokedUser = new EventEmitter();\n  @Output() onRestoredUser = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  isRevoked = false;\n  title: string;\n  emails: string;\n  type: OrganizationUserType = OrganizationUserType.User;\n  permissions = new PermissionsApi();\n  showCustom = false;\n  access: \"all\" | \"selected\" = \"selected\";\n  collections: CollectionView[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  organizationUserType = OrganizationUserType;\n  canUseCustomPermissions: boolean;\n\n  manageAllCollectionsCheckboxes = [\n    {\n      id: \"createNewCollections\",\n      get: () => this.permissions.createNewCollections,\n      set: (v: boolean) => (this.permissions.createNewCollections = v),\n    },\n    {\n      id: \"editAnyCollection\",\n      get: () => this.permissions.editAnyCollection,\n      set: (v: boolean) => (this.permissions.editAnyCollection = v),\n    },\n    {\n      id: \"deleteAnyCollection\",\n      get: () => this.permissions.deleteAnyCollection,\n      set: (v: boolean) => (this.permissions.deleteAnyCollection = v),\n    },\n  ];\n\n  manageAssignedCollectionsCheckboxes = [\n    {\n      id: \"editAssignedCollections\",\n      get: () => this.permissions.editAssignedCollections,\n      set: (v: boolean) => (this.permissions.editAssignedCollections = v),\n    },\n    {\n      id: \"deleteAssignedCollections\",\n      get: () => this.permissions.deleteAssignedCollections,\n      set: (v: boolean) => (this.permissions.deleteAssignedCollections = v),\n    },\n  ];\n\n  get customUserTypeSelected(): boolean {\n    return this.type === OrganizationUserType.Custom;\n  }\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private logService: LogService,\n    private organizationUserService: OrganizationUserService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.organizationUserId != null;\n    const organization = this.organizationService.get(this.organizationId);\n    this.canUseCustomPermissions = organization.useCustomPermissions;\n    await this.loadCollections();\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editUser\");\n      try {\n        const user = await this.organizationUserService.getOrganizationUser(\n          this.organizationId,\n          this.organizationUserId\n        );\n        this.access = user.accessAll ? \"all\" : \"selected\";\n        this.type = user.type;\n        this.isRevoked = user.status === OrganizationUserStatusType.Revoked;\n        if (user.type === OrganizationUserType.Custom) {\n          this.permissions = user.permissions;\n        }\n        if (user.collections != null && this.collections != null) {\n          user.collections.forEach((s) => {\n            const collection = this.collections.filter((c) => c.id === s.id);\n            if (collection != null && collection.length > 0) {\n              (collection[0] as any).checked = true;\n              collection[0].readOnly = s.readOnly;\n              collection[0].hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteUser\");\n    }\n\n    this.loading = false;\n  }\n\n  async loadCollections() {\n    const response = await this.apiService.getCollections(this.organizationId);\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    this.collections = await this.collectionService.decryptMany(collections);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n    if (!(c as any).checked) {\n      c.readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n\n  setRequestPermissions(p: PermissionsApi, clearPermissions: boolean) {\n    Object.assign(p, clearPermissions ? new PermissionsApi() : this.permissions);\n    return p;\n  }\n\n  handleDependentPermissions() {\n    // Manage Password Reset must have Manage Users enabled\n    if (this.permissions.manageResetPassword && !this.permissions.manageUsers) {\n      this.permissions.manageUsers = true;\n      (document.getElementById(\"manageUsers\") as HTMLInputElement).checked = true;\n      this.platformUtilsService.showToast(\n        \"info\",\n        null,\n        this.i18nService.t(\"resetPasswordManageUsers\")\n      );\n    }\n  }\n\n  async submit() {\n    if (!this.canUseCustomPermissions && this.type === OrganizationUserType.Custom) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"customNonEnterpriseError\")\n      );\n      return;\n    }\n\n    let collections: SelectionReadOnlyRequest[] = null;\n    if (this.access !== \"all\") {\n      collections = this.collections\n        .filter((c) => (c as any).checked)\n        .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n    }\n\n    try {\n      if (this.editMode) {\n        this.updateUser(collections);\n      } else {\n        this.inviteUser(collections);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const message = this.usesKeyConnector\n      ? \"removeUserConfirmationKeyConnector\"\n      : \"removeOrgUserConfirmation\";\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(message),\n      this.i18nService.t(\"removeUserIdAccess\", this.name),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      \"app-user-add-edit .modal-content\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.organizationUserService.deleteOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.name)\n      );\n      this.onDeletedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async revoke() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"revokeUserConfirmation\"),\n      this.i18nService.t(\"revokeUserId\", this.name),\n      this.i18nService.t(\"revokeAccess\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\",\n      false,\n      \"app-user-add-edit .modal-content\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.formPromise = this.organizationUserService.revokeOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"revokedUserId\", this.name)\n      );\n      this.isRevoked = true;\n      this.onRevokedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async restore() {\n    if (!this.editMode) {\n      return;\n    }\n\n    try {\n      this.formPromise = this.organizationUserService.restoreOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"restoredUserId\", this.name)\n      );\n      this.isRevoked = false;\n      this.onRestoredUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  updateUser(collections: SelectionReadOnlyRequest[]) {\n    const request = new OrganizationUserUpdateRequest();\n    request.accessAll = this.access === \"all\";\n    request.type = this.type;\n    request.collections = collections;\n    request.permissions = this.setRequestPermissions(\n      request.permissions ?? new PermissionsApi(),\n      request.type !== OrganizationUserType.Custom\n    );\n    this.formPromise = this.organizationUserService.putOrganizationUser(\n      this.organizationId,\n      this.organizationUserId,\n      request\n    );\n  }\n\n  inviteUser(collections: SelectionReadOnlyRequest[]) {\n    const request = new OrganizationUserInviteRequest();\n    request.emails = [...new Set(this.emails.trim().split(/\\s*,\\s*/))];\n    request.accessAll = this.access === \"all\";\n    request.type = this.type;\n    request.permissions = this.setRequestPermissions(\n      request.permissions ?? new PermissionsApi(),\n      request.type !== OrganizationUserType.Custom\n    );\n    request.collections = collections;\n    this.formPromise = this.organizationUserService.postOrganizationUserInvite(\n      this.organizationId,\n      request\n    );\n  }\n}\n","export class OrganizationUserUpdateGroupsRequest {\n  groupIds: string[] = [];\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"groupAccessTitle\">\n          {{ \"groupAccess\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <p>{{ \"groupAccessUserDesc\" | i18n }}</p>\n        <div *ngIf=\"!groups || !groups.length\">\n          {{ \"noGroupsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n          <tbody>\n            <tr *ngFor=\"let g of groups; let i = index\">\n              <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"$any(g).checked\"\n                  name=\"Groups[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td (click)=\"check(g)\">\n                {{ g.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserUpdateGroupsRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/group.response\";\n\n@Component({\n  selector: \"app-user-groups\",\n  templateUrl: \"user-groups.component.html\",\n})\nexport class UserGroupsComponent implements OnInit {\n  @Input() name: string;\n  @Input() organizationUserId: string;\n  @Input() organizationId: string;\n  @Output() onSavedUser = new EventEmitter();\n\n  loading = true;\n  groups: GroupResponse[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationUserService: OrganizationUserService\n  ) {}\n\n  async ngOnInit() {\n    const groupsResponse = await this.apiService.getGroups(this.organizationId);\n    const groups = groupsResponse.data.map((r) => r);\n    groups.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.groups = groups;\n\n    try {\n      const userGroups = await this.organizationUserService.getOrganizationUserGroups(\n        this.organizationId,\n        this.organizationUserId\n      );\n      if (userGroups != null && this.groups != null) {\n        userGroups.forEach((ug) => {\n          const group = this.groups.filter((g) => g.id === ug);\n          if (group != null && group.length > 0) {\n            (group[0] as any).checked = true;\n          }\n        });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.loading = false;\n  }\n\n  check(g: GroupResponse, select?: boolean) {\n    (g as any).checked = select == null ? !(g as any).checked : select;\n    if (!(g as any).checked) {\n      (g as any).readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.groups.forEach((g) => this.check(g, select));\n  }\n\n  async submit() {\n    const request = new OrganizationUserUpdateGroupsRequest();\n    request.groupIds = this.groups.filter((g) => (g as any).checked).map((g) => g.id);\n\n    try {\n      this.formPromise = this.organizationUserService.putOrganizationUserGroups(\n        this.organizationId,\n        this.organizationUserId,\n        request\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedGroupsForUser\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div\n  class=\"-tw-mt-2 tw-mb-2 tw-flex tw-flex-wrap tw-border-0 tw-border-b tw-border-solid tw-border-secondary-300 tw-pb-2.5\"\n>\n  <h1 class=\"tw-mt-2 tw-mb-0 tw-grow tw-pr-3\">{{ \"members\" | i18n }}</h1>\n  <div class=\"tw-mt-2 tw-flex tw-justify-start tw-space-x-3\">\n    <div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == null }\"\n        (click)=\"filter(null)\"\n      >\n        {{ \"all\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"allCount\">{{ allCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Invited }\"\n        (click)=\"filter(userStatusType.Invited)\"\n      >\n        {{ \"invited\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"invitedCount\">{{ invitedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Accepted }\"\n        (click)=\"filter(userStatusType.Accepted)\"\n      >\n        {{ \"accepted\" | i18n }}\n        <span bitBadge badgeType=\"warning\" *ngIf=\"acceptedCount\">{{ acceptedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Revoked }\"\n        (click)=\"filter(userStatusType.Revoked)\"\n      >\n        {{ \"revoked\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"revokedCount\">{{ revokedCount }}</span>\n      </button>\n    </div>\n    <div class=\"tw-w-44\">\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <div class=\"dropdown\" appListDropdown>\n      <button\n        class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"bulkActionsButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        appA11yTitle=\"{{ 'options' | i18n }}\"\n      >\n        <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\">\n          <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n          {{ \"reinviteSelected\" | i18n }}\n        </button>\n        <button\n          class=\"dropdown-item text-success\"\n          appStopClick\n          (click)=\"bulkConfirm()\"\n          *ngIf=\"showBulkConfirmUsers\"\n        >\n          <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n          {{ \"confirmSelected\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkRestore()\">\n          <i class=\"bwi bwi-fw bwi-plus-circle\" aria-hidden=\"true\"></i>\n          {{ \"restoreAccess\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkRevoke()\">\n          <i class=\"bwi bwi-fw bwi-minus-circle\" aria-hidden=\"true\"></i>\n          {{ \"revokeAccess\" | i18n }}\n        </button>\n        <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\">\n          <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n          {{ \"remove\" | i18n }}\n        </button>\n        <div class=\"dropdown-divider\"></div>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n          <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n          <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary\" (click)=\"invite()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"inviteUser\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedUsers : (users | search: searchText:'name':'email':'id')) as searchedUsers\n  \"\n>\n  <p *ngIf=\"!searchedUsers.length\">{{ \"noUsersInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedUsers.length\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'confirmUsers' | i18n }}\"\n      icon=\"bwi bwi-check-circle\"\n      *ngIf=\"showConfirmUsers\"\n    >\n      {{ \"usersNeedConfirmed\" | i18n }}\n    </app-callout>\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let u of searchedUsers\">\n          <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\">\n            <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp />\n          </td>\n          <td width=\"30\">\n            <bit-avatar [text]=\"u | userName\" [id]=\"u.userId\" size=\"small\"></bit-avatar>\n          </td>\n          <td>\n            <a href=\"#\" appStopClick (click)=\"edit(u)\">{{ u.email }}</a>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{\n              \"invited\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{\n              \"accepted\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Revoked\">{{\n              \"revoked\" | i18n\n            }}</span>\n            <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n          </td>\n          <td>\n            <ng-container *ngIf=\"u.twoFactorEnabled\">\n              <i\n                class=\"bwi bwi-lock\"\n                title=\"{{ 'userUsingTwoStep' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"userUsingTwoStep\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"showEnrolledStatus(u)\">\n              <i\n                class=\"bwi bwi-key\"\n                title=\"{{ 'enrolledPasswordReset' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"enrolledPasswordReset\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td>\n            <span *ngIf=\"u.type === userType.Owner\">{{ \"owner\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Admin\">{{ \"admin\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Manager\">{{ \"manager\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.User\">{{ \"user\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Custom\">{{ \"custom\" | i18n }}</span>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"reinvite(u)\"\n                  *ngIf=\"u.status === userStatusType.Invited\"\n                >\n                  <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n                  {{ \"resendInvitation\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item text-success\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"confirm(u)\"\n                  *ngIf=\"u.status === userStatusType.Accepted\"\n                >\n                  <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n                  {{ \"confirm\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"groups(u)\"\n                  *ngIf=\"organization.useGroups\"\n                >\n                  <i class=\"bwi bwi-fw bwi-sitemap\" aria-hidden=\"true\"></i>\n                  {{ \"groups\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"events(u)\"\n                  *ngIf=\"organization.useEvents && u.status === userStatusType.Confirmed\"\n                >\n                  <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                  {{ \"eventLogs\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"resetPassword(u)\"\n                  *ngIf=\"allowResetPassword(u)\"\n                >\n                  <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n                  {{ \"resetPassword\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"restore(u)\"\n                  *ngIf=\"u.status === userStatusType.Revoked\"\n                >\n                  <i class=\"bwi bwi-fw bwi-plus-circle\" aria-hidden=\"true\"></i>\n                  {{ \"restoreAccess\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"revoke(u)\"\n                  *ngIf=\"u.status !== userStatusType.Revoked\"\n                >\n                  <i class=\"bwi bwi-fw bwi-minus-circle\" aria-hidden=\"true\"></i>\n                  {{ \"revokeAccess\" | i18n }}\n                </a>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #groupsTemplate></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n<ng-template #resetPasswordTemplate></ng-template>\n<ng-template #bulkStatusTemplate></ng-template>\n<ng-template #bulkConfirmTemplate></ng-template>\n<ng-template #bulkRemoveTemplate></ng-template>\n","import { Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { combineLatest, concatMap, Subject, takeUntil } from \"rxjs\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserConfirmRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport {\n  OrganizationUserBulkResponse,\n  OrganizationUserUserDetailsResponse,\n} from \"@bitwarden/common/abstractions/organization-user/responses\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organization-keys.request\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { DialogService } from \"@bitwarden/components\";\n\nimport { BasePeopleComponent } from \"../../common/base.people.component\";\n\nimport { BulkConfirmComponent } from \"./bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./bulk/bulk-remove.component\";\nimport { BulkRestoreRevokeComponent } from \"./bulk/bulk-restore-revoke.component\";\nimport { BulkStatusComponent } from \"./bulk/bulk-status.component\";\nimport { EntityEventsComponent } from \"./entity-events.component\";\nimport { OrgUpgradeDialogComponent } from \"./org-upgrade-dialog/org-upgrade-dialog.component\";\nimport { ResetPasswordComponent } from \"./reset-password.component\";\nimport { UserAddEditComponent } from \"./user-add-edit.component\";\nimport { UserGroupsComponent } from \"./user-groups.component\";\n\n@Component({\n  selector: \"app-org-people\",\n  templateUrl: \"people.component.html\",\n})\nexport class PeopleComponent\n  extends BasePeopleComponent<OrganizationUserUserDetailsResponse>\n  implements OnInit, OnDestroy\n{\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"groupsTemplate\", { read: ViewContainerRef, static: true })\n  groupsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n  @ViewChild(\"resetPasswordTemplate\", { read: ViewContainerRef, static: true })\n  resetPasswordModalRef: ViewContainerRef;\n  @ViewChild(\"bulkStatusTemplate\", { read: ViewContainerRef, static: true })\n  bulkStatusModalRef: ViewContainerRef;\n  @ViewChild(\"bulkConfirmTemplate\", { read: ViewContainerRef, static: true })\n  bulkConfirmModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRemoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkRemoveModalRef: ViewContainerRef;\n\n  userType = OrganizationUserType;\n  userStatusType = OrganizationUserStatusType;\n\n  organization: Organization;\n  status: OrganizationUserStatusType = null;\n  orgResetPasswordPolicyEnabled = false;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    i18nService: I18nService,\n    modalService: ModalService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    searchService: SearchService,\n    validationService: ValidationService,\n    private policyService: PolicyService,\n    logService: LogService,\n    searchPipe: SearchPipe,\n    userNamePipe: UserNamePipe,\n    private syncService: SyncService,\n    stateService: StateService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService,\n    private dialogService: DialogService\n  ) {\n    super(\n      apiService,\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      validationService,\n      modalService,\n      logService,\n      searchPipe,\n      userNamePipe,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    combineLatest([this.route.params, this.route.queryParams, this.policyService.policies$])\n      .pipe(\n        concatMap(async ([params, qParams, policies]) => {\n          this.organization = await this.organizationService.get(params.organizationId);\n\n          // Backfill pub/priv key if necessary\n          if (\n            this.organization.canManageUsersPassword &&\n            !this.organization.hasPublicAndPrivateKeys\n          ) {\n            const orgShareKey = await this.cryptoService.getOrgKey(this.organization.id);\n            const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n            const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n            const response = await this.organizationApiService.updateKeys(\n              this.organization.id,\n              request\n            );\n            if (response != null) {\n              this.organization.hasPublicAndPrivateKeys =\n                response.publicKey != null && response.privateKey != null;\n              await this.syncService.fullSync(true); // Replace oganizations with new data\n            } else {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n          }\n\n          const resetPasswordPolicy = policies\n            .filter((policy) => policy.type === PolicyType.ResetPassword)\n            .find((p) => p.organizationId === this.organization.id);\n          this.orgResetPasswordPolicyEnabled = resetPasswordPolicy?.enabled;\n\n          await this.load();\n\n          this.searchText = qParams.search;\n          if (qParams.viewEvents != null) {\n            const user = this.users.filter((u) => u.id === qParams.viewEvents);\n            if (user.length > 0 && user[0].status === OrganizationUserStatusType.Confirmed) {\n              this.events(user[0]);\n            }\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load() {\n    super.load();\n    await super.load();\n  }\n\n  getUsers(): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    return this.organizationUserService.getAllUsers(this.organization.id);\n  }\n\n  deleteUser(id: string): Promise<void> {\n    return this.organizationUserService.deleteOrganizationUser(this.organization.id, id);\n  }\n\n  revokeUser(id: string): Promise<void> {\n    return this.organizationUserService.revokeOrganizationUser(this.organization.id, id);\n  }\n\n  restoreUser(id: string): Promise<void> {\n    return this.organizationUserService.restoreOrganizationUser(this.organization.id, id);\n  }\n\n  reinviteUser(id: string): Promise<void> {\n    return this.organizationUserService.postOrganizationUserReinvite(this.organization.id, id);\n  }\n\n  async confirmUser(\n    user: OrganizationUserUserDetailsResponse,\n    publicKey: Uint8Array\n  ): Promise<void> {\n    const orgKey = await this.cryptoService.getOrgKey(this.organization.id);\n    const key = await this.cryptoService.rsaEncrypt(orgKey.key, publicKey.buffer);\n    const request = new OrganizationUserConfirmRequest();\n    request.key = key.encryptedString;\n    await this.organizationUserService.postOrganizationUserConfirm(\n      this.organization.id,\n      user.id,\n      request\n    );\n  }\n\n  allowResetPassword(orgUser: OrganizationUserUserDetailsResponse): boolean {\n    // Hierarchy check\n    let callingUserHasPermission = false;\n\n    switch (this.organization.type) {\n      case OrganizationUserType.Owner:\n        callingUserHasPermission = true;\n        break;\n      case OrganizationUserType.Admin:\n        callingUserHasPermission = orgUser.type !== OrganizationUserType.Owner;\n        break;\n      case OrganizationUserType.Custom:\n        callingUserHasPermission =\n          orgUser.type !== OrganizationUserType.Owner &&\n          orgUser.type !== OrganizationUserType.Admin;\n        break;\n    }\n\n    // Final\n    return (\n      this.organization.canManageUsersPassword &&\n      callingUserHasPermission &&\n      this.organization.useResetPassword &&\n      this.organization.hasPublicAndPrivateKeys &&\n      orgUser.resetPasswordEnrolled &&\n      this.orgResetPasswordPolicyEnabled &&\n      orgUser.status === OrganizationUserStatusType.Confirmed\n    );\n  }\n\n  showEnrolledStatus(orgUser: OrganizationUserUserDetailsResponse): boolean {\n    return (\n      this.organization.useResetPassword &&\n      orgUser.resetPasswordEnrolled &&\n      this.orgResetPasswordPolicyEnabled\n    );\n  }\n\n  async edit(user: OrganizationUserUserDetailsResponse) {\n    // Invite User: Add Flow\n    // Click on user email: Edit Flow\n\n    // User attempting to invite new users in a free org with max users\n    if (\n      !user &&\n      this.organization.planProductType === ProductType.Free &&\n      this.allUsers.length === this.organization.seats\n    ) {\n      // Show org upgrade modal\n\n      const dialogBodyText = this.organization.canManageBilling\n        ? this.i18nService.t(\n            \"freeOrgInvLimitReachedManageBilling\",\n            this.organization.seats.toString()\n          )\n        : this.i18nService.t(\n            \"freeOrgInvLimitReachedNoManageBilling\",\n            this.organization.seats.toString()\n          );\n\n      this.dialogService.open(OrgUpgradeDialogComponent, {\n        data: {\n          orgId: this.organization.id,\n          orgCanManageBilling: this.organization.canManageBilling,\n          dialogBodyText: dialogBodyText,\n        },\n      });\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      UserAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.organizationId = this.organization.id;\n        comp.organizationUserId = user?.id || null;\n        comp.usesKeyConnector = user?.usesKeyConnector;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedUser.subscribe(() => {\n          modal.close();\n          this.removeUser(user);\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onRevokedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onRestoredUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n\n  async groups(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserGroupsComponent,\n      this.groupsModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.organizationId = this.organization.id;\n        comp.organizationUserId = user != null ? user.id : null;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async bulkRemove() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRemoveComponent,\n      this.bulkRemoveModalRef,\n      (comp) => {\n        comp.organizationId = this.organization.id;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkRevoke() {\n    await this.bulkRevokeOrRestore(true);\n  }\n\n  async bulkRestore() {\n    await this.bulkRevokeOrRestore(false);\n  }\n\n  async bulkRevokeOrRestore(isRevoking: boolean) {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const ref = this.modalService.open(BulkRestoreRevokeComponent, {\n      allowMultipleModals: true,\n      data: {\n        organizationId: this.organization.id,\n        users: this.getCheckedUsers(),\n        isRevoking: isRevoking,\n      },\n    });\n\n    await ref.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkReinvite() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const users = this.getCheckedUsers();\n    const filteredUsers = users.filter((u) => u.status === OrganizationUserStatusType.Invited);\n\n    if (filteredUsers.length <= 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"noSelectedUsersApplicable\")\n      );\n      return;\n    }\n\n    try {\n      const response = this.organizationUserService.postManyOrganizationUserReinvite(\n        this.organization.id,\n        filteredUsers.map((user) => user.id)\n      );\n      this.showBulkStatus(\n        users,\n        filteredUsers,\n        response,\n        this.i18nService.t(\"bulkReinviteMessage\")\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkConfirm() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkConfirmComponent,\n      this.bulkConfirmModalRef,\n      (comp) => {\n        comp.organizationId = this.organization.id;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async events(user: OrganizationUserUserDetailsResponse) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = this.userNamePipe.transform(user);\n      comp.organizationId = this.organization.id;\n      comp.entityId = user.id;\n      comp.showUser = false;\n      comp.entity = \"user\";\n    });\n  }\n\n  async resetPassword(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      ResetPasswordComponent,\n      this.resetPasswordModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.email = user != null ? user.email : null;\n        comp.organizationId = this.organization.id;\n        comp.id = user != null ? user.id : null;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onPasswordReset.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n\n  protected async removeUserConfirmationDialog(user: OrganizationUserUserDetailsResponse) {\n    const warningMessage = user.usesKeyConnector\n      ? this.i18nService.t(\"removeUserConfirmationKeyConnector\")\n      : this.i18nService.t(\"removeOrgUserConfirmation\");\n\n    return this.platformUtilsService.showDialog(\n      warningMessage,\n      this.i18nService.t(\"removeUserIdAccess\", this.userNamePipe.transform(user)),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n  }\n\n  private async showBulkStatus(\n    users: OrganizationUserUserDetailsResponse[],\n    filteredUsers: OrganizationUserUserDetailsResponse[],\n    request: Promise<ListResponse<OrganizationUserBulkResponse>>,\n    successfullMessage: string\n  ) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      BulkStatusComponent,\n      this.bulkStatusModalRef,\n      (comp) => {\n        comp.loading = true;\n      }\n    );\n\n    // Workaround to handle closing the modal shortly after it has been opened\n    let close = false;\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    modal.onShown.subscribe(() => {\n      if (close) {\n        modal.close();\n      }\n    });\n\n    try {\n      const response = await request;\n\n      if (modal) {\n        const keyedErrors: any = response.data\n          .filter((r) => r.error !== \"\")\n          .reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n        const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n        childComponent.users = users.map((user) => {\n          let message = keyedErrors[user.id] ?? successfullMessage;\n          // eslint-disable-next-line\n          if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n            message = this.i18nService.t(\"bulkFilteredMessage\");\n          }\n\n          return {\n            user: user,\n            error: keyedErrors.hasOwnProperty(user.id), // eslint-disable-line\n            message: message,\n          };\n        });\n        childComponent.loading = false;\n      }\n    } catch {\n      close = true;\n      modal.close();\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { GetOrgNameFromIdPipe } from \"./get-organization-name.pipe\";\n\n@NgModule({\n  declarations: [GetOrgNameFromIdPipe],\n  exports: [GetOrgNameFromIdPipe],\n})\nexport class PipesModule {}\n","import { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\n\nexport class VaultService {\n  calculateSearchBarLocalizationString(vaultFilter: VaultFilter): string {\n    if (vaultFilter.status === \"favorites\") {\n      return \"searchFavorites\";\n    }\n    if (vaultFilter.status === \"trash\") {\n      return \"searchTrash\";\n    }\n    if (vaultFilter.cipherType != null) {\n      return \"searchType\";\n    }\n    if (vaultFilter.selectedFolderId != null && vaultFilter.selectedFolderId != \"none\") {\n      return \"searchFolder\";\n    }\n    if (vaultFilter.selectedCollection) {\n      return \"searchCollection\";\n    }\n    if (vaultFilter.selectedOrganizationId != null) {\n      return \"searchOrganization\";\n    }\n    if (vaultFilter.myVaultOnly) {\n      return \"searchMyVault\";\n    }\n\n    return \"searchVault\";\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\nimport { LooseComponentsModule } from \"../../shared/loose-components.module\";\nimport { VaultFilterModule } from \"../vault-filter/vault-filter.module\";\n\nimport { PipesModule } from \"./pipes/pipes.module\";\nimport { VaultService } from \"./vault.service\";\n\n@NgModule({\n  imports: [SharedModule, VaultFilterModule, LooseComponentsModule, PipesModule],\n  exports: [SharedModule, VaultFilterModule, LooseComponentsModule, PipesModule],\n  providers: [\n    {\n      provide: VaultService,\n      useClass: VaultService,\n    },\n  ],\n})\nexport class VaultSharedModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { VaultFilterSharedModule } from \"../../../vault/vault-filter/shared/vault-filter-shared.module\";\n\nimport { VaultFilterComponent } from \"./vault-filter.component\";\n\n@NgModule({\n  imports: [VaultFilterSharedModule],\n  declarations: [VaultFilterComponent],\n  exports: [VaultFilterComponent],\n})\nexport class VaultFilterModule {}\n","import { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherStatus } from \"./cipher-status.model\";\n\nexport type VaultFilterFunction = (cipher: CipherView) => boolean;\n\nexport class VaultFilter {\n  cipherType?: CipherType;\n  selectedCollection = false; // This is needed because of how the \"Unassigned\" collection works. It has a null id.\n  selectedCollectionId?: string;\n  status?: CipherStatus;\n  selectedFolder = false; // This is needed because of how the \"No Folder\" folder works. It has a null id.\n  selectedFolderId?: string;\n  selectedOrganizationId?: string;\n  myVaultOnly = false;\n  refreshCollectionsAndFolders = false;\n\n  constructor(init?: Partial<VaultFilter>) {\n    Object.assign(this, init);\n  }\n\n  resetFilter() {\n    this.cipherType = null;\n    this.status = null;\n    this.selectedCollection = false;\n    this.selectedCollectionId = null;\n    this.selectedFolder = false;\n    this.selectedFolderId = null;\n  }\n\n  resetOrganization() {\n    this.myVaultOnly = false;\n    this.selectedOrganizationId = null;\n    this.resetFilter();\n  }\n\n  buildFilter(): VaultFilterFunction {\n    return (cipher) => {\n      let cipherPassesFilter = true;\n      if (this.status === \"favorites\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.favorite;\n      }\n      if (this.status === \"trash\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.isDeleted;\n      }\n      if (this.cipherType != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.type === this.cipherType;\n      }\n      if (this.selectedFolder && this.selectedFolderId == null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId == null;\n      }\n      if (this.selectedFolder && this.selectedFolderId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId === this.selectedFolderId;\n      }\n      if (this.selectedCollection && this.selectedCollectionId == null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.organizationId != null &&\n          (cipher.collectionIds == null || cipher.collectionIds.length === 0);\n      }\n      if (this.selectedCollection && this.selectedCollectionId != null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.collectionIds != null && cipher.collectionIds.includes(this.selectedCollectionId);\n      }\n      if (this.selectedOrganizationId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === this.selectedOrganizationId;\n      }\n      if (this.myVaultOnly && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === null;\n      }\n      return cipherPassesFilter;\n    };\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/enc-array-buffer\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachment.view\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Output() onUploadedAttachment = new EventEmitter();\n  @Output() onDeletedAttachment = new EventEmitter();\n  @Output() onReuploadedAttachment = new EventEmitter();\n\n  cipher: CipherView;\n  cipherDomain: Cipher;\n  hasUpdatedKey: boolean;\n  canAccessAttachments: boolean;\n  formPromise: Promise<any>;\n  deletePromises: { [id: string]: Promise<any> } = {};\n  reuploadPromises: { [id: string]: Promise<any> } = {};\n  emergencyAccessId?: string = null;\n  protected componentName = \"\";\n\n  constructor(\n    protected cipherService: CipherService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected win: Window,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit() {\n    if (!this.hasUpdatedKey) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"updateKey\")\n      );\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    if (files[0].size > 524288000) {\n      // 500 MB\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"maxFileSize\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.saveCipherAttachment(files[0]);\n      this.cipherDomain = await this.formPromise;\n      this.cipher = await this.cipherDomain.decrypt();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"attachmentSaved\"));\n      this.onUploadedAttachment.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    // reset file input\n    // ref: https://stackoverflow.com/a/20552042\n    fileEl.type = \"\";\n    fileEl.type = \"file\";\n    fileEl.value = \"\";\n  }\n\n  async delete(attachment: AttachmentView) {\n    if (this.deletePromises[attachment.id] != null) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteAttachmentConfirmation\"),\n      this.i18nService.t(\"deleteAttachment\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      this.componentName != \"\" ? this.componentName + \" .modal-content\" : null\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n      await this.deletePromises[attachment.id];\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedAttachment\"));\n      const i = this.cipher.attachments.indexOf(attachment);\n      if (i > -1) {\n        this.cipher.attachments.splice(i, 1);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.deletePromises[attachment.id] = null;\n    this.onDeletedAttachment.emit();\n  }\n\n  async download(attachment: AttachmentView) {\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (!this.canAccessAttachments) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id,\n        this.emergencyAccessId\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n      this.fileDownloadService.download({\n        fileName: attachment.fileName,\n        blobData: decBuf,\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected async init() {\n    this.cipherDomain = await this.loadCipher();\n    this.cipher = await this.cipherDomain.decrypt();\n\n    this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n    if (!this.canAccessAttachments) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"premiumRequiredDesc\"),\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\")\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n      }\n    } else if (!this.hasUpdatedKey) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateKey\"),\n        this.i18nService.t(\"featureUnavailable\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\n          \"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        );\n      }\n    }\n  }\n\n  protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n    const a = attachment as any;\n    if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n      return;\n    }\n\n    try {\n      this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n        // 1. Download\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: \"no-store\" }));\n        if (response.status !== 200) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n          a.downloading = false;\n          return;\n        }\n\n        try {\n          // 2. Resave\n          const encBuf = await EncArrayBuffer.fromResponse(response);\n          const key =\n            attachment.key != null\n              ? attachment.key\n              : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n          const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n          this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n            this.cipherDomain,\n            attachment.fileName,\n            decBuf,\n            admin\n          );\n          this.cipher = await this.cipherDomain.decrypt();\n\n          // 3. Delete old\n          this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n          await this.deletePromises[attachment.id];\n          const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n          if (foundAttachment.length > 0) {\n            const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n            if (i > -1) {\n              this.cipher.attachments.splice(i, 1);\n            }\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"attachmentSaved\")\n          );\n          this.onReuploadedAttachment.emit();\n        } catch (e) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n        }\n\n        a.downloading = false;\n      });\n      await this.reuploadPromises[attachment.id];\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    // TODO: This should be removed but is needed since we re-use the same template\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"attachmentsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"attachmentsTitle\">\n          {{ \"attachments\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <table class=\"table table-hover table-list\" *ngIf=\"cipher && cipher.hasAttachments\">\n          <tbody>\n            <tr *ngFor=\"let a of cipher.attachments\">\n              <td class=\"table-list-icon\">\n                <i\n                  class=\"bwi bwi-fw bwi-lg bwi-file\"\n                  *ngIf=\"!$any(a).downloading\"\n                  aria-hidden=\"true\"\n                ></i>\n                <i\n                  class=\"bwi bwi-spinner bwi-lg bwi-fw bwi-spin\"\n                  *ngIf=\"$any(a).downloading\"\n                  aria-hidden=\"true\"\n                ></i>\n              </td>\n              <td class=\"wrap\">\n                <div class=\"d-flex\">\n                  <a href=\"#\" appStopClick (click)=\"download(a)\">{{ a.fileName }}</a>\n                  <div *ngIf=\"showFixOldAttachments(a)\" class=\"ml-2\">\n                    <a\n                      href=\"https://bitwarden.com/help/attachments/#fixing-old-attachments\"\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                    >\n                      <i\n                        class=\"bwi bwi-exclamation-triangle text-warning\"\n                        title=\"{{ 'attachmentFixDesc' | i18n }}\"\n                        aria-hidden=\"true\"\n                      ></i>\n                      <span class=\"sr-only\">{{ \"attachmentFixDesc\" | i18n }}</span></a\n                    >\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-primary btn-sm m-0 py-0 px-2\"\n                      (click)=\"reupload(a)\"\n                      #reuploadBtn\n                      [appApiAction]=\"reuploadPromises[a.id]\"\n                      [disabled]=\"$any(reuploadBtn).loading\"\n                    >\n                      {{ \"fix\" | i18n }}\n                    </button>\n                  </div>\n                </div>\n                <small>{{ a.sizeName }}</small>\n              </td>\n              <td class=\"table-list-options\" *ngIf=\"!viewOnly\">\n                <button\n                  class=\"btn btn-outline-danger\"\n                  type=\"button\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'delete' | i18n }}\"\n                  (click)=\"delete(a)\"\n                  #deleteBtn\n                  [appApiAction]=\"deletePromises[a.id]\"\n                  [disabled]=\"$any(deleteBtn).loading\"\n                >\n                  <i\n                    class=\"bwi bwi-trash bwi-lg bwi-fw\"\n                    [hidden]=\"$any(deleteBtn).loading\"\n                    aria-hidden=\"true\"\n                  ></i>\n                  <i\n                    class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                    [hidden]=\"!$any(deleteBtn).loading\"\n                    title=\"{{ 'loading' | i18n }}\"\n                    aria-hidden=\"true\"\n                  ></i>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div *ngIf=\"!viewOnly\">\n          <h3>{{ \"newAttachment\" | i18n }}</h3>\n          <label for=\"file\" class=\"sr-only\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n          <small class=\"form-text text-muted\">{{ \"maxFileSize\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachment.view\";\n\n@Component({\n  selector: \"app-vault-attachments\",\n  templateUrl: \"attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n  protected override componentName = \"app-vault-attachments\";\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.showFixOldAttachments(attachment)) {\n      await this.reuploadCipherAttachment(attachment, false);\n    }\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.cipher.organizationId == null;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipher.data\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachment.view\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"../../vault/attachments.component\";\n\n@Component({\n  selector: \"app-org-vault-attachments\",\n  templateUrl: \"../../vault/attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n  organization: Organization;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      stateService,\n      platformUtilsService,\n      apiService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.organization.canEditAnyCollection && this.showFixOldAttachments(attachment)) {\n      await super.reuploadCipherAttachment(attachment, true);\n    }\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(\n      this.cipherDomain,\n      file,\n      this.organization.canEditAnyCollection\n    );\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipherAttachment(attachmentId);\n    }\n    return this.apiService.deleteCipherAttachmentAdmin(this.cipherId, attachmentId);\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.organization.canEditAnyCollection;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() allowSelectNone = false;\n  @Output() onSavedCollections = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collectionIds: string[];\n  collections: CollectionView[] = [];\n\n  protected cipherDomain: Cipher;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.cipherDomain = await this.loadCipher();\n    this.collectionIds = this.loadCipherCollections();\n    this.cipher = await this.cipherDomain.decrypt();\n    this.collections = await this.loadCollections();\n\n    this.collections.forEach((c) => ((c as any).checked = false));\n    if (this.collectionIds != null) {\n      this.collections.forEach((c) => {\n        (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n      });\n    }\n  }\n\n  async submit() {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n    this.cipherDomain.collectionIds = selectedCollectionIds;\n    try {\n      this.formPromise = this.saveCollections();\n      await this.formPromise;\n      this.onSavedCollections.emit();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"editedItem\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected loadCipherCollections() {\n    return this.cipherDomain.collectionIds;\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter(\n      (c) => !c.readOnly && c.organizationId === this.cipher.organizationId\n    );\n  }\n\n  protected saveCollections() {\n    return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"collectionsTitle\">\n          {{ \"collections\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"collectionsDesc\" | i18n }}</p>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"$any(c).checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"@bitwarden/angular/components/collections.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Component({\n  selector: \"app-vault-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipher.data\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherCollectionsRequest } from \"@bitwarden/common/models/request/cipher-collections.request\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"../../vault/collections.component\";\n\n@Component({\n  selector: \"app-org-vault-collections\",\n  templateUrl: \"../../vault/collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n  organization: Organization;\n\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    private apiService: ApiService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n    this.allowSelectNone = true;\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canViewAllCollections) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected loadCipherCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCipherCollections();\n    }\n    return this.collectionIds;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected saveCollections() {\n    if (this.organization.canEditAnyCollection) {\n      const request = new CipherCollectionsRequest(this.cipherDomain.collectionIds);\n      return this.apiService.putCipherCollectionsAdmin(this.cipherId, request);\n    } else {\n      return super.saveCollections();\n    }\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, Observable } from \"rxjs\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\nimport { VaultFilterService } from \"../services/vault-filter.service\";\n\n@Directive()\nexport class VaultFilterComponent implements OnInit {\n  @Input() activeFilter: VaultFilter = new VaultFilter();\n  @Input() hideFolders = false;\n  @Input() hideCollections = false;\n  @Input() hideFavorites = false;\n  @Input() hideTrash = false;\n  @Input() hideOrganizations = false;\n\n  @Output() onFilterChange = new EventEmitter<VaultFilter>();\n  @Output() onAddFolder = new EventEmitter<never>();\n  @Output() onEditFolder = new EventEmitter<FolderView>();\n\n  isLoaded = false;\n  collapsedFilterNodes: Set<string>;\n  organizations: Organization[];\n  activePersonalOwnershipPolicy: boolean;\n  activeSingleOrganizationPolicy: boolean;\n  collections: DynamicTreeNode<CollectionView>;\n  folders$: Observable<DynamicTreeNode<FolderView>>;\n\n  constructor(protected vaultFilterService: VaultFilterService) {}\n\n  get displayCollections() {\n    return this.collections?.fullList != null && this.collections.fullList.length > 0;\n  }\n\n  async ngOnInit(): Promise<void> {\n    this.collapsedFilterNodes = await this.vaultFilterService.buildCollapsedFilterNodes();\n    this.organizations = await this.vaultFilterService.buildOrganizations();\n    if (this.organizations != null && this.organizations.length > 0) {\n      this.activePersonalOwnershipPolicy =\n        await this.vaultFilterService.checkForPersonalOwnershipPolicy();\n      this.activeSingleOrganizationPolicy =\n        await this.vaultFilterService.checkForSingleOrganizationPolicy();\n    }\n    this.folders$ = await this.vaultFilterService.buildNestedFolders();\n    this.collections = await this.initCollections();\n    this.isLoaded = true;\n  }\n\n  // overwritten in web for organization vaults\n  async initCollections() {\n    return await this.vaultFilterService.buildCollections();\n  }\n\n  async toggleFilterNodeCollapseState(node: ITreeNodeObject) {\n    if (this.collapsedFilterNodes.has(node.id)) {\n      this.collapsedFilterNodes.delete(node.id);\n    } else {\n      this.collapsedFilterNodes.add(node.id);\n    }\n    await this.vaultFilterService.storeCollapsedFilterNodes(this.collapsedFilterNodes);\n  }\n\n  async applyFilter(filter: VaultFilter) {\n    if (filter.refreshCollectionsAndFolders) {\n      await this.reloadCollectionsAndFolders(filter);\n      filter = await this.pruneInvalidatedFilterSelections(filter);\n    }\n    this.onFilterChange.emit(filter);\n  }\n\n  async reloadCollectionsAndFolders(filter: VaultFilter) {\n    this.folders$ = await this.vaultFilterService.buildNestedFolders(filter.selectedOrganizationId);\n    this.collections = filter.myVaultOnly\n      ? null\n      : await this.vaultFilterService.buildCollections(filter.selectedOrganizationId);\n  }\n\n  async reloadOrganizations() {\n    this.organizations = await this.vaultFilterService.buildOrganizations();\n    this.activePersonalOwnershipPolicy =\n      await this.vaultFilterService.checkForPersonalOwnershipPolicy();\n    this.activeSingleOrganizationPolicy =\n      await this.vaultFilterService.checkForSingleOrganizationPolicy();\n  }\n\n  addFolder() {\n    this.onAddFolder.emit();\n  }\n\n  editFolder(folder: FolderView) {\n    this.onEditFolder.emit(folder);\n  }\n\n  protected async pruneInvalidatedFilterSelections(filter: VaultFilter): Promise<VaultFilter> {\n    filter = await this.pruneInvalidFolderSelection(filter);\n    filter = this.pruneInvalidCollectionSelection(filter);\n    return filter;\n  }\n\n  protected async pruneInvalidFolderSelection(filter: VaultFilter): Promise<VaultFilter> {\n    if (\n      filter.selectedFolder &&\n      !(await firstValueFrom(this.folders$))?.hasId(filter.selectedFolderId)\n    ) {\n      filter.selectedFolder = false;\n      filter.selectedFolderId = null;\n    }\n    return filter;\n  }\n\n  protected pruneInvalidCollectionSelection(filter: VaultFilter): VaultFilter {\n    if (\n      filter.myVaultOnly ||\n      (filter.selectedCollection &&\n        filter.selectedCollectionId != null &&\n        !this.collections?.hasId(filter.selectedCollectionId))\n    ) {\n      filter.selectedCollection = false;\n      filter.selectedCollectionId = null;\n    }\n    return filter;\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class CollectionFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() collectionNodes: DynamicTreeNode<CollectionView>;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  readonly collectionsGrouping: TopLevelTreeNode = {\n    id: \"collections\",\n    name: \"collections\",\n  };\n\n  get collections() {\n    return this.collectionNodes?.fullList;\n  }\n\n  get nestedCollections() {\n    return this.collectionNodes?.nestedList;\n  }\n\n  get show() {\n    return !this.hide && this.collections != null && this.collections.length > 0;\n  }\n\n  isCollapsed(node: ITreeNodeObject) {\n    return this.collapsedFilterNodes.has(node.id);\n  }\n\n  applyFilter(collection: CollectionView) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.selectedCollection = true;\n    this.activeFilter.selectedCollectionId = collection.id;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  async toggleCollapse(node: ITreeNodeObject) {\n    this.onNodeCollapseStateChange.emit(node);\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <div class=\"filter-heading\">\n    <button\n      (click)=\"toggleCollapse(collectionsGrouping)\"\n      [attr.aria-expanded]=\"!isCollapsed(collectionsGrouping)\"\n      aria-controls=\"collection-filters\"\n      title=\"{{ 'toggleCollapse' | i18n }}\"\n      class=\"toggle-button\"\n    >\n      <i\n        class=\"bwi bwi-fw\"\n        [ngClass]=\"{\n          'bwi-angle-right': isCollapsed(collectionsGrouping),\n          'bwi-angle-down': !isCollapsed(collectionsGrouping)\n        }\"\n        aria-hidden=\"true\"\n      ></i>\n    </button>\n    <h3 class=\"filter-title\">&nbsp;{{ collectionsGrouping.name | i18n }}</h3>\n  </div>\n  <ul id=\"collection-filters\" *ngIf=\"!isCollapsed(collectionsGrouping)\" class=\"filter-options\">\n    <ng-template #recursiveCollections let-collections>\n      <li\n        *ngFor=\"let c of collections\"\n        [ngClass]=\"{\n          active: c.node.id === activeFilter.selectedCollectionId && activeFilter.selectedCollection\n        }\"\n        class=\"filter-option\"\n      >\n        <span class=\"filter-buttons\">\n          <button\n            class=\"toggle-button\"\n            *ngIf=\"c.children.length\"\n            (click)=\"toggleCollapse(c.node)\"\n            title=\"{{ 'toggleCollapse' | i18n }}\"\n            [attr.aria-expanded]=\"!isCollapsed(c.node)\"\n            [attr.aria-controls]=\"c.node.name + '_children'\"\n          >\n            <i\n              class=\"bwi bwi-fw\"\n              [ngClass]=\"{\n                'bwi-angle-right': isCollapsed(c.node),\n                'bwi-angle-down': !isCollapsed(c.node)\n              }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button class=\"filter-button\" (click)=\"applyFilter(c.node)\">\n            <i\n              *ngIf=\"c.children.length === 0\"\n              class=\"bwi bwi-collection bwi-fw\"\n              aria-hidden=\"true\"\n            ></i\n            >&nbsp;{{ c.node.name }}\n          </button>\n        </span>\n        <ul\n          [id]=\"c.node.name + '_children'\"\n          class=\"nested-filter-options\"\n          *ngIf=\"c.children.length && !isCollapsed(c.node)\"\n        >\n          <ng-container\n            *ngTemplateOutlet=\"recursiveCollections; context: { $implicit: c.children }\"\n          >\n          </ng-container>\n        </ul>\n      </li>\n    </ng-template>\n    <ng-container\n      *ngTemplateOutlet=\"recursiveCollections; context: { $implicit: nestedCollections }\"\n    >\n    </ng-container>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { CollectionFilterComponent as BaseCollectionFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/collection-filter.component\";\n\n@Component({\n  selector: \"app-collection-filter\",\n  templateUrl: \"collection-filter.component.html\",\n})\nexport class CollectionFilterComponent extends BaseCollectionFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/tree-node\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class FolderFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() folderNodes: DynamicTreeNode<FolderView>;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n  @Output() onAddFolder = new EventEmitter();\n  @Output() onEditFolder = new EventEmitter<FolderView>();\n\n  get folders() {\n    return this.folderNodes?.fullList;\n  }\n\n  get nestedFolders() {\n    return this.folderNodes?.nestedList;\n  }\n\n  readonly foldersGrouping: TopLevelTreeNode = {\n    id: \"folders\",\n    name: \"folders\",\n  };\n\n  applyFilter(folder: FolderView) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.selectedFolder = true;\n    this.activeFilter.selectedFolderId = folder.id;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  addFolder() {\n    this.onAddFolder.emit();\n  }\n\n  editFolder(folder: FolderView) {\n    this.onEditFolder.emit(folder);\n  }\n\n  isCollapsed(node: ITreeNodeObject) {\n    return this.collapsedFilterNodes.has(node.id);\n  }\n\n  async toggleCollapse(node: ITreeNodeObject) {\n    this.onNodeCollapseStateChange.emit(node);\n  }\n}\n","<ng-container *ngIf=\"!hide\">\n  <div class=\"filter-heading\">\n    <button\n      class=\"toggle-button\"\n      (click)=\"toggleCollapse(foldersGrouping)\"\n      [attr.aria-expanded]=\"!isCollapsed(foldersGrouping)\"\n      aria-controls=\"folder-filters\"\n      title=\"{{ 'toggleCollapse' | i18n }}\"\n    >\n      <i\n        class=\"bwi bwi-fw\"\n        aria-hidden=\"true\"\n        [ngClass]=\"{\n          'bwi-angle-right': isCollapsed(foldersGrouping),\n          'bwi-angle-down': !isCollapsed(foldersGrouping)\n        }\"\n      ></i>\n    </button>\n    <h3 class=\"filter-title\">&nbsp;{{ \"folders\" | i18n }}</h3>\n    <button\n      class=\"text-muted ml-auto add-button\"\n      (click)=\"addFolder()\"\n      appA11yTitle=\"{{ 'addFolder' | i18n }}\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n  <ul id=\"folder-filters\" *ngIf=\"!isCollapsed(foldersGrouping)\" class=\"filter-options\">\n    <ng-template #recursiveFolders let-folders>\n      <li\n        *ngFor=\"let f of folders\"\n        [ngClass]=\"{\n          active: f.node.id === activeFilter.selectedFolderId && activeFilter.selectedFolder\n        }\"\n        class=\"filter-option\"\n      >\n        <span class=\"filter-buttons\">\n          <button\n            *ngIf=\"f.children.length\"\n            title=\"{{ 'toggleCollapse' | i18n }}\"\n            (click)=\"toggleCollapse(f.node)\"\n            [attr.aria-expanded]=\"!isCollapsed(f.node)\"\n            [attr.aria-controls]=\"f.node.name + '_children'\"\n            class=\"toggle-button\"\n          >\n            <i\n              class=\"bwi bwi-fw\"\n              [ngClass]=\"{\n                'bwi-angle-right': isCollapsed(f.node),\n                'bwi-angle-down': !isCollapsed(f.node)\n              }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button class=\"filter-button\" (click)=\"applyFilter(f.node)\">\n            <i *ngIf=\"f.children.length === 0\" class=\"bwi bwi-fw bwi-folder\" aria-hidden=\"true\"></i\n            >&nbsp;{{ f.node.name }}\n          </button>\n          <button\n            class=\"edit-button\"\n            (click)=\"editFolder(f.node)\"\n            appA11yTitle=\"{{ 'editFolder' | i18n }}\"\n            *ngIf=\"f.node.id\"\n          >\n            <i class=\"bwi bwi-pencil bwi-fw\" aria-hidden=\"true\"></i>\n          </button>\n        </span>\n        <ul\n          [id]=\"f.node.name + '_children'\"\n          class=\"nested-filter-options\"\n          *ngIf=\"f.children.length && !isCollapsed(f.node)\"\n        >\n          <ng-container *ngTemplateOutlet=\"recursiveFolders; context: { $implicit: f.children }\">\n          </ng-container>\n        </ul>\n      </li>\n    </ng-template>\n    <ng-container\n      *ngTemplateOutlet=\"recursiveFolders; context: { $implicit: nestedFolders }\"\n    ></ng-container>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { FolderFilterComponent as BaseFolderFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/folder-filter.component\";\n\n@Component({\n  selector: \"app-folder-filter\",\n  templateUrl: \"folder-filter.component.html\",\n})\nexport class FolderFilterComponent extends BaseFolderFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherStatus } from \"../models/cipher-status.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class StatusFilterComponent {\n  @Input() hideFavorites = false;\n  @Input() hideTrash = false;\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n  @Input() activeFilter: VaultFilter;\n\n  get show() {\n    return !(this.hideFavorites && this.hideTrash);\n  }\n\n  applyFilter(cipherStatus: CipherStatus) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.status = cipherStatus;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <ul class=\"filter-options\">\n    <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.status === 'all' }\">\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('all')\">\n          <i class=\"bwi bwi-fw bwi-filter\" aria-hidden=\"true\"></i>&nbsp;{{ \"allItems\" | i18n }}\n        </button>\n      </span>\n    </li>\n    <li\n      *ngIf=\"!hideFavorites\"\n      class=\"filter-option\"\n      [ngClass]=\"{ active: activeFilter.status === 'favorites' }\"\n    >\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('favorites')\">\n          <i class=\"bwi bwi-fw bwi-star\" aria-hidden=\"true\"></i>&nbsp;{{ \"favorites\" | i18n }}\n        </button>\n      </span>\n    </li>\n    <li\n      *ngIf=\"!hideTrash\"\n      class=\"filter-option\"\n      [ngClass]=\"{ active: activeFilter.status === 'trash' }\"\n    >\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('trash')\">\n          <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>&nbsp;{{ \"trash\" | i18n }}\n        </button>\n      </span>\n    </li>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { StatusFilterComponent as BaseStatusFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/status-filter.component\";\n\n@Component({\n  selector: \"app-status-filter\",\n  templateUrl: \"status-filter.component.html\",\n})\nexport class StatusFilterComponent extends BaseStatusFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/tree-node\";\n\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class TypeFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() selectedCipherType: CipherType = null;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  readonly typesNode: TopLevelTreeNode = {\n    id: \"types\",\n    name: \"types\",\n  };\n\n  cipherTypeEnum = CipherType; // used in the template\n\n  get isCollapsed() {\n    return this.collapsedFilterNodes.has(this.typesNode.id);\n  }\n\n  applyFilter(cipherType: CipherType) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.cipherType = cipherType;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  async toggleCollapse() {\n    this.onNodeCollapseStateChange.emit(this.typesNode);\n  }\n}\n","<div class=\"filter-heading\">\n  <button\n    class=\"toggle-button\"\n    [attr.aria-expanded]=\"!isCollapsed\"\n    aria-controls=\"type-filters\"\n    (click)=\"toggleCollapse()\"\n    title=\"{{ 'toggleCollapse' | i18n }}\"\n  >\n    <i\n      class=\"bwi bwi-fw\"\n      aria-hidden=\"true\"\n      [ngClass]=\"{\n        'bwi-angle-right': isCollapsed,\n        'bwi-angle-down': !isCollapsed\n      }\"\n    ></i>\n  </button>\n  <h3>&nbsp;{{ \"types\" | i18n }}</h3>\n</div>\n<ul id=\"type-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Login }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Login)\">\n        <i class=\"bwi bwi-fw bwi-globe\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeLogin\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Card }\">\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Card)\">\n        <i class=\"bwi bwi-fw bwi-credit-card\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeCard\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Identity }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Identity)\">\n        <i class=\"bwi bwi-fw bwi-id-card\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeIdentity\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.SecureNote }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.SecureNote)\">\n        <i class=\"bwi bwi-fw bwi-sticky-note\" aria-hidden=\"true\"></i>&nbsp;{{\n          \"typeSecureNote\" | i18n\n        }}\n      </button>\n    </span>\n  </li>\n</ul>\n","import { Component } from \"@angular/core\";\n\nimport { TypeFilterComponent as BaseTypeFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/type-filter.component\";\n\n@Component({\n  selector: \"app-type-filter\",\n  templateUrl: \"type-filter.component.html\",\n})\nexport class TypeFilterComponent extends BaseTypeFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/tree-node\";\n\nimport { DisplayMode } from \"../models/display-mode\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class OrganizationFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() organizations: Organization[];\n  @Input() activeFilter: VaultFilter;\n  @Input() activePersonalOwnershipPolicy: boolean;\n  @Input() activeSingleOrganizationPolicy: boolean;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  get displayMode(): DisplayMode {\n    let displayMode: DisplayMode = \"organizationMember\";\n    if (this.organizations == null || this.organizations.length < 1) {\n      displayMode = \"noOrganizations\";\n    } else if (this.activePersonalOwnershipPolicy && !this.activeSingleOrganizationPolicy) {\n      displayMode = \"personalOwnershipPolicy\";\n    } else if (!this.activePersonalOwnershipPolicy && this.activeSingleOrganizationPolicy) {\n      displayMode = \"singleOrganizationPolicy\";\n    } else if (this.activePersonalOwnershipPolicy && this.activeSingleOrganizationPolicy) {\n      displayMode = \"singleOrganizationAndPersonalOwnershipPolicies\";\n    }\n\n    return displayMode;\n  }\n\n  get hasActiveFilter() {\n    return this.activeFilter.myVaultOnly || this.activeFilter.selectedOrganizationId != null;\n  }\n\n  readonly organizationGrouping: TopLevelTreeNode = {\n    id: \"vaults\",\n    name: \"allVaults\",\n  };\n\n  async applyOrganizationFilter(organization: Organization) {\n    this.activeFilter.selectedOrganizationId = organization.id;\n    this.activeFilter.myVaultOnly = false;\n    this.activeFilter.refreshCollectionsAndFolders = true;\n    this.applyFilter(this.activeFilter);\n  }\n\n  async applyMyVaultFilter() {\n    this.activeFilter.selectedOrganizationId = null;\n    this.activeFilter.myVaultOnly = true;\n    this.activeFilter.refreshCollectionsAndFolders = true;\n    this.applyFilter(this.activeFilter);\n  }\n\n  clearFilter() {\n    this.activeFilter.myVaultOnly = false;\n    this.activeFilter.selectedOrganizationId = null;\n    this.applyFilter(new VaultFilter(this.activeFilter));\n  }\n\n  private applyFilter(filter: VaultFilter) {\n    this.onFilterChange.emit(filter);\n  }\n\n  async toggleCollapse() {\n    this.onNodeCollapseStateChange.emit(this.organizationGrouping);\n  }\n\n  get isCollapsed() {\n    return this.collapsedFilterNodes.has(this.organizationGrouping.id);\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalConfig } from \"@bitwarden/angular/services/modal.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-enroll-master-password-reset\",\n  templateUrl: \"enroll-master-password-reset.component.html\",\n})\nexport class EnrollMasterPasswordReset {\n  organization: Organization;\n\n  verification: Verification;\n  formPromise: Promise<void>;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private modalRef: ModalRef,\n    config: ModalConfig,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService\n  ) {\n    this.organization = config.data.organization;\n  }\n\n  async submit() {\n    let toastStringRef = \"withdrawPasswordResetSuccess\";\n\n    this.formPromise = this.userVerificationService\n      .buildRequest(this.verification, OrganizationUserResetPasswordEnrollmentRequest)\n      .then(async (request) => {\n        // Set variables\n        let keyString: string = null;\n\n        // Retrieve Public Key\n        const orgKeys = await this.organizationApiService.getKeys(this.organization.id);\n        if (orgKeys == null) {\n          throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n        }\n\n        const publicKey = Utils.fromB64ToArray(orgKeys.publicKey);\n\n        // RSA Encrypt user's encKey.key with organization public key\n        const encKey = await this.cryptoService.getEncKey();\n        const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n        keyString = encryptedKey.encryptedString;\n        toastStringRef = \"enrollPasswordResetSuccess\";\n\n        // Create request and execute enrollment\n        request.resetPasswordKey = keyString;\n        await this.organizationUserService.putOrganizationUserResetPasswordEnrollment(\n          this.organization.id,\n          this.organization.userId,\n          request\n        );\n\n        await this.syncService.fullSync(true);\n      });\n    try {\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(toastStringRef));\n      this.modalRef.close();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div\n  class=\"modal fade\"\n  role=\"dialog\"\n  aria-modal=\"true\"\n  aria-labelledby=\"enrollMasterPasswordResetTitle\"\n>\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"enrollMasterPasswordResetTitle\">\n          {{ \"enrollPasswordReset\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">\n          {{ \"resetPasswordEnrollmentWarning\" | i18n }}\n        </app-callout>\n        <app-user-verification [(ngModel)]=\"verification\" name=\"secret\"> </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n          {{ \"submit\" | i18n }}\n        </button>\n        <button\n          bitButton\n          buttonType=\"secondary\"\n          type=\"button\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span>\n            {{ \"cancel\" | i18n }}\n          </span>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { AfterContentInit, Component, Input } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-link-sso\",\n  templateUrl: \"link-sso.component.html\",\n})\nexport class LinkSsoComponent extends SsoComponent implements AfterContentInit {\n  @Input() organization: Organization;\n  returnUri = \"/settings/organizations\";\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    apiService: ApiService,\n    authService: AuthService,\n    router: Router,\n    route: ActivatedRoute,\n    cryptoFunctionService: CryptoFunctionService,\n    passwordGenerationService: PasswordGenerationService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n\n    this.returnUri = \"/settings/organizations\";\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngAfterContentInit() {\n    this.identifier = this.organization.identifier;\n  }\n}\n","<a\n  class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main tw-no-underline hover:tw-bg-secondary-100 hover:tw-no-underline focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n  href=\"#\"\n  appStopClick\n  (click)=\"submit(returnUri, true)\"\n>\n  <i class=\"bwi bwi-fw bwi-link\" aria-hidden=\"true\"></i>\n  {{ \"linkSso\" | i18n }}\n</a>\n","<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted tw-m-2\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<div\n  *ngIf=\"loaded\"\n  class=\"tw-flex tw-min-w-[200px] tw-max-w-[300px] tw-flex-col\"\n  [appApiAction]=\"actionPromise\"\n>\n  <button\n    *ngIf=\"allowEnrollmentChanges(organization) && !organization.resetPasswordEnrolled\"\n    class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"toggleResetPasswordEnrollment(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n    {{ \"enrollPasswordReset\" | i18n }}\n  </button>\n  <button\n    *ngIf=\"allowEnrollmentChanges(organization) && organization.resetPasswordEnrolled\"\n    class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"toggleResetPasswordEnrollment(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n    {{ \"withdrawPasswordReset\" | i18n }}\n  </button>\n  <ng-container *ngIf=\"organization.useSso && organization.identifier\">\n    <button\n      *ngIf=\"organization.ssoBound; else linkSso\"\n      class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n      (click)=\"unlinkSso(organization)\"\n    >\n      <i class=\"bwi bwi-fw bwi-chain-broken\" aria-hidden=\"true\"></i>\n      {{ \"unlinkSso\" | i18n }}\n    </button>\n    <ng-template #linkSso>\n      <app-link-sso [organization]=\"organization\"> </app-link-sso>\n    </ng-template>\n  </ng-container>\n  <button\n    class=\"text-danger tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"leave(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n    {{ \"leave\" | i18n }}\n  </button>\n</div>\n","import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { map, Subject, takeUntil } from \"rxjs\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\nimport { EnrollMasterPasswordReset } from \"../../../organizations/users/enroll-master-password-reset.component\";\n\n@Component({\n  selector: \"app-organization-options\",\n  templateUrl: \"organization-options.component.html\",\n})\nexport class OrganizationOptionsComponent implements OnInit, OnDestroy {\n  actionPromise: Promise<void | boolean>;\n  policies: Policy[];\n  loaded = false;\n\n  @Input() organization: Organization;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private modalService: ModalService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService.policies$\n      .pipe(\n        map((policies) => policies.filter((policy) => policy.type === PolicyType.ResetPassword)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((policies) => {\n        this.policies = policies;\n        this.loaded = true;\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  allowEnrollmentChanges(org: Organization): boolean {\n    if (org.usePolicies && org.useResetPassword && org.hasPublicAndPrivateKeys) {\n      const policy = this.policies.find((p) => p.organizationId === org.id);\n      if (policy != null && policy.enabled) {\n        return org.resetPasswordEnrolled && policy.data.autoEnrollEnabled ? false : true;\n      }\n    }\n\n    return false;\n  }\n\n  showEnrolledStatus(org: Organization): boolean {\n    return (\n      org.useResetPassword &&\n      org.resetPasswordEnrolled &&\n      this.policies.some((p) => p.organizationId === org.id && p.enabled)\n    );\n  }\n\n  async unlinkSso(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"unlinkSsoConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.apiService.deleteSsoUser(org.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, \"Unlinked SSO\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async leave(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.organizationApiService.leave(org.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async toggleResetPasswordEnrollment(org: Organization) {\n    if (!this.organization.resetPasswordEnrolled) {\n      this.modalService.open(EnrollMasterPasswordReset, {\n        allowMultipleModals: true,\n        data: {\n          organization: org,\n        },\n      });\n    } else {\n      // Remove reset password\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.masterPasswordHash = \"ignored\";\n      request.resetPasswordKey = null;\n      this.actionPromise = this.organizationUserService.putOrganizationUserResetPasswordEnrollment(\n        this.organization.id,\n        this.organization.userId,\n        request\n      );\n      try {\n        await this.actionPromise;\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"withdrawPasswordResetSuccess\")\n        );\n        this.syncService.fullSync(true);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n}\n","<ng-container *ngIf=\"!hide\">\n  <ng-container [ngSwitch]=\"displayMode\">\n    <ng-container *ngSwitchCase=\"'noOrganizations'\">\n      <ul class=\"filter-options\">\n        <li class=\"filter-option active\">\n          <span class=\"filter-buttons\">\n            <button\n              class=\"filter-button\"\n              [attr.aria-pressed]=\"activeFilter.myVaultOnly\"\n              appA11yTitle=\"{{ 'vault' | i18n }}: {{ 'myVault' | i18n }}\"\n            >\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"myVault\" | i18n }}\n            </button>\n          </span>\n        </li>\n        <li class=\"filter-option\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'personalOwnershipPolicy'\">\n      <div class=\"filter-heading\">\n        <button\n          (click)=\"toggleCollapse()\"\n          title=\"{{ 'toggleCollapse' | i18n }}\"\n          class=\"toggle-button\"\n          [attr.aria-expanded]=\"!isCollapsed\"\n          aria-controls=\"organization-filters\"\n        >\n          <i\n            class=\"bwi bwi-fw\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-right': isCollapsed,\n              'bwi-angle-down': !isCollapsed\n            }\"\n          ></i>\n        </button>\n        <button\n          class=\"filter-button\"\n          (click)=\"clearFilter()\"\n          [ngClass]=\"{ active: !hasActiveFilter }\"\n          appA11yTitle=\"{{ 'vault' | i18n }}: {{ organizationGrouping.name | i18n }}\"\n        >\n          &nbsp;{{ organizationGrouping.name | i18n }}\n        </button>\n      </div>\n      <ul id=\"organization-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n        <li\n          class=\"filter-option\"\n          *ngFor=\"let organization of organizations\"\n          [ngClass]=\"{ active: organization.id === activeFilter.selectedOrganizationId }\"\n        >\n          <span class=\"filter-buttons\">\n            <button\n              class=\"filter-button\"\n              [ngClass]=\"{ 'disabled-organization': !organization.enabled }\"\n              (click)=\"applyOrganizationFilter(organization)\"\n              [attr.aria-pressed]=\"activeFilter.selectedOrganizationId === organization.id\"\n              appA11yTitle=\"{{ 'vault' | i18n }}: {{ organization.name }}\"\n            >\n              <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n              {{ organization.name }}\n            </button>\n            <span class=\"ml-auto\">\n              <i\n                *ngIf=\"!organization.enabled\"\n                class=\"org-options bwi bwi-fw bwi-exclamation-triangle text-danger\"\n                attr.aria-label=\"{{ 'organizationIsDisabled' | i18n }}\"\n                appA11yTitle=\"{{ 'organizationIsDisabled' | i18n }}\"\n              ></i\n              ><button [bitMenuTriggerFor]=\"orgMenu\" class=\"org-options\">\n                <i class=\"bwi bwi-ellipsis-v\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu class=\"filter-organization-options\" #orgMenu>\n                <app-organization-options [organization]=\"organization\"></app-organization-options>\n              </bit-menu>\n            </span>\n          </span>\n        </li>\n        <li class=\"filter-option\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'singleOrganizationAndPersonalOwnershipPolicies'\">\n      <div class=\"filter-heading\">\n        <button\n          class=\"filter-button active\"\n          [attr.aria-pressed]=\"activeFilter.selectedOrganizationId === organizations[0].id\"\n          appA11yTitle=\"{{ 'vault' | i18n }}: {{ organizations[0].name }}\"\n        >\n          <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n          {{ organizations[0].name }}\n        </button>\n        <span class=\"tw-ml-auto\">\n          <button [bitMenuTriggerFor]=\"orgMenu\" class=\"org-options\">\n            <i class=\"bwi bwi-ellipsis-v\" aria-hidden=\"true\"></i>\n          </button>\n          <bit-menu class=\"filter-organization-options\" #orgMenu>\n            <app-organization-options [organization]=\"organizations[0]\"></app-organization-options>\n          </bit-menu>\n        </span>\n      </div>\n    </ng-container>\n    <ng-container *ngSwitchDefault>\n      <div class=\"filter-heading\">\n        <button\n          class=\"toggle-button\"\n          title=\"{{ 'toggleCollapse' | i18n }}\"\n          (click)=\"toggleCollapse()\"\n          [attr.aria-expanded]=\"!isCollapsed\"\n          aria-controls=\"organization-filters\"\n        >\n          <i\n            class=\"bwi bwi-fw\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-right': isCollapsed,\n              'bwi-angle-down': !isCollapsed\n            }\"\n          ></i>\n        </button>\n        <button\n          class=\"filter-button\"\n          (click)=\"clearFilter()\"\n          [ngClass]=\"{ active: !hasActiveFilter }\"\n          appA11yTitle=\"{{ 'vault' | i18n }}: {{ organizationGrouping.name | i18n }}\"\n        >\n          &nbsp;{{ organizationGrouping.name | i18n }}\n        </button>\n      </div>\n      <ul id=\"organization-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n        <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.myVaultOnly }\">\n          <span class=\"filter-buttons\">\n            <button\n              class=\"filter-button\"\n              (click)=\"applyMyVaultFilter()\"\n              appA11yTitle=\"{{ 'vault' | i18n }}: {{ 'myVault' | i18n }}\"\n              [attr.aria-pressed]=\"activeFilter.myVaultOnly\"\n            >\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"myVault\" | i18n }}\n            </button>\n          </span>\n        </li>\n        <li\n          class=\"filter-option\"\n          *ngFor=\"let organization of organizations\"\n          [ngClass]=\"{ active: organization.id === activeFilter.selectedOrganizationId }\"\n        >\n          <span class=\"filter-buttons\">\n            <button\n              class=\"filter-button\"\n              [ngClass]=\"{ 'disabled-organization': !organization.enabled }\"\n              (click)=\"applyOrganizationFilter(organization)\"\n              appA11yTitle=\"{{ 'vault' | i18n }}: {{ organization.name }}\"\n            >\n              <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n              {{ organization.name }}\n            </button>\n            <span class=\"ml-auto\">\n              <i\n                *ngIf=\"!organization.enabled\"\n                class=\"org-options bwi bwi-fw bwi-exclamation-triangle text-danger\"\n                appA11yTitle=\"{{ 'organizationIsDisabled' | i18n }}\"\n              ></i\n              ><button [bitMenuTriggerFor]=\"orgMenu\" class=\"org-options\">\n                <i class=\"bwi bwi-ellipsis-v\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu class=\"filter-organization-options\" #orgMenu>\n                <app-organization-options [organization]=\"organization\"></app-organization-options>\n              </bit-menu>\n            </span>\n          </span>\n        </li>\n        <li class=\"filter-option\" *ngIf=\"!(displayMode === 'singleOrganizationPolicy')\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n  </ng-container>\n  <hr />\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { OrganizationFilterComponent as BaseOrganizationFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/organization-filter.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-organization-filter\",\n  templateUrl: \"organization-filter.component.html\",\n})\nexport class OrganizationFilterComponent extends BaseOrganizationFilterComponent {\n  displayText = \"allVaults\";\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {\n    super();\n  }\n\n  async applyOrganizationFilter(organization: Organization) {\n    if (organization.enabled) {\n      //proceed with default behaviour for enabled organizations\n      super.applyOrganizationFilter(organization);\n    } else {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"disabledOrganizationFilterError\")\n      );\n    }\n  }\n}\n","<div class=\"card vault-filters\">\n  <div class=\"container loading-spinner\" *ngIf=\"!isLoaded\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n  </div>\n  <div *ngIf=\"isLoaded\">\n    <div class=\"card-header d-flex\">\n      {{ \"filters\" | i18n }}\n      <a\n        class=\"ml-auto\"\n        href=\"https://bitwarden.com/help/searching-vault/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <div class=\"card-body\">\n      <input\n        type=\"search\"\n        placeholder=\"{{ (searchPlaceholder | i18n) || ('searchVault' | i18n) }}\"\n        id=\"search\"\n        class=\"form-control\"\n        [(ngModel)]=\"searchText\"\n        (input)=\"searchTextChanged()\"\n        autocomplete=\"off\"\n        appAutofocus\n      />\n      <app-organization-filter\n        [hide]=\"hideOrganizations\"\n        [activeFilter]=\"activeFilter\"\n        [collapsedFilterNodes]=\"collapsedFilterNodes\"\n        [organizations]=\"organizations\"\n        [activePersonalOwnershipPolicy]=\"activePersonalOwnershipPolicy\"\n        [activeSingleOrganizationPolicy]=\"activeSingleOrganizationPolicy\"\n        (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n        (onFilterChange)=\"applyFilter($event)\"\n      ></app-organization-filter>\n      <div class=\"filter\">\n        <app-status-filter\n          [hideFavorites]=\"hideFavorites\"\n          [hideTrash]=\"hideTrash\"\n          [activeFilter]=\"activeFilter\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-status-filter>\n      </div>\n      <div class=\"filter\">\n        <app-type-filter\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-type-filter>\n      </div>\n      <div class=\"filter\">\n        <app-folder-filter\n          [hide]=\"hideFolders\"\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          [folderNodes]=\"folders$ | async\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n          (onAddFolder)=\"addFolder()\"\n          (onEditFolder)=\"editFolder($event)\"\n        ></app-folder-filter>\n      </div>\n      <div class=\"filter\">\n        <app-collection-filter\n          [hide]=\"hideCollections\"\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          [collectionNodes]=\"collections\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-collection-filter>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { VaultFilterComponent as BaseVaultFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/vault-filter.component\";\n\nimport { VaultFilterService } from \"./shared/vault-filter.service\";\n\n@Component({\n  selector: \"./app-vault-filter\",\n  templateUrl: \"vault-filter.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class VaultFilterComponent extends BaseVaultFilterComponent {\n  @Output() onSearchTextChanged = new EventEmitter<string>();\n\n  searchPlaceholder: string;\n  searchText = \"\";\n\n  constructor(protected vaultFilterService: VaultFilterService) {\n    // This empty constructor is required to provide the web vaultFilterService subclass to super()\n    // TODO: refactor this to use proper dependency injection\n    super(vaultFilterService);\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.vaultFilterService.collapsedFilterNodes$.subscribe((nodes) => {\n      this.collapsedFilterNodes = nodes;\n    });\n  }\n\n  searchTextChanged() {\n    this.onSearchTextChanged.emit(this.searchText);\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { VaultFilterComponent as BaseVaultFilterComponent } from \"../../../vault/vault-filter/vault-filter.component\";\n\n@Component({\n  selector: \"app-organization-vault-filter\",\n  templateUrl: \"../../../vault/vault-filter/vault-filter.component.html\",\n})\nexport class VaultFilterComponent extends BaseVaultFilterComponent {\n  hideOrganizations = true;\n  hideFavorites = true;\n  hideFolders = true;\n\n  organization: Organization;\n\n  async initCollections() {\n    if (this.organization.canEditAnyCollection) {\n      return await this.vaultFilterService.buildAdminCollections(this.organization.id);\n    }\n    return await this.vaultFilterService.buildCollections(this.organization.id);\n  }\n\n  async reloadCollectionsAndFolders() {\n    this.collections = await this.initCollections();\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n@Directive()\nexport class VaultItemsComponent {\n  @Input() activeCipherId: string = null;\n  @Output() onCipherClicked = new EventEmitter<CipherView>();\n  @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n  @Output() onAddCipher = new EventEmitter();\n  @Output() onAddCipherOptions = new EventEmitter();\n\n  loaded = false;\n  ciphers: CipherView[] = [];\n  searchText: string;\n  searchPlaceholder: string = null;\n  filter: (cipher: CipherView) => boolean = null;\n  deleted = false;\n  organization: Organization;\n  accessEvents = false;\n\n  protected searchPending = false;\n\n  private searchTimeout: any = null;\n\n  constructor(protected searchService: SearchService) {}\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async reload(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.loaded = false;\n    await this.load(filter, deleted);\n  }\n\n  async refresh() {\n    await this.reload(this.filter, this.deleted);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      await this.doSearch(indexedCiphers);\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      await this.doSearch(indexedCiphers);\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.onCipherClicked.emit(cipher);\n  }\n\n  rightClickCipher(cipher: CipherView) {\n    this.onCipherRightClicked.emit(cipher);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  addCipherOptions() {\n    this.onAddCipherOptions.emit();\n  }\n\n  isSearching() {\n    return !this.searchPending && this.searchService.isSearchable(this.searchText);\n  }\n\n  protected deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n\n  protected async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"ellipsis\",\n})\nexport class EllipsisPipe implements PipeTransform {\n  transform(value: string, limit = 25, completeWords = false, ellipsis = \"...\") {\n    if (value.length <= limit) {\n      return value;\n    }\n    limit -= ellipsis.length;\n    if (completeWords && value.length > limit && value.indexOf(\" \") > 0) {\n      limit = value.substring(0, limit).lastIndexOf(\" \");\n    }\n    return value.substring(0, limit) + ellipsis;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { AvatarUpdateService } from \"@bitwarden/common/abstractions/account/avatar-update.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-org-badge\",\n  templateUrl: \"organization-name-badge.component.html\",\n})\nexport class OrganizationNameBadgeComponent implements OnInit {\n  @Input() organizationName: string;\n  @Input() profileName: string;\n\n  @Output() onOrganizationClicked = new EventEmitter<string>();\n\n  color: string;\n  textColor: string;\n  isMe: boolean;\n\n  constructor(\n    private i18nService: I18nService,\n    private avatarService: AvatarUpdateService,\n    private tokenService: TokenService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    if (this.organizationName == null || this.organizationName === \"\") {\n      this.organizationName = this.i18nService.t(\"me\");\n      this.isMe = true;\n    }\n    if (this.isMe) {\n      this.color = await this.avatarService.loadColorFromState();\n      if (this.color == null) {\n        const userName = await this.tokenService.getName();\n        this.color = Utils.stringToColor(userName.toUpperCase());\n      }\n    } else {\n      this.color = Utils.stringToColor(this.organizationName);\n    }\n    this.textColor = Utils.pickTextColorBasedOnBgColor(this.color, 135, true) + \"!important\";\n  }\n\n  emitOnOrganizationClicked() {\n    this.onOrganizationClicked.emit();\n  }\n}\n","<button\n  bitBadge\n  [style.color]=\"textColor\"\n  [style.background-color]=\"color\"\n  appA11yTitle=\"{{ organizationName }}\"\n  (click)=\"emitOnOrganizationClicked()\"\n>\n  {{ organizationName | ellipsis: 13 }}\n</button>\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Pipe({\n  name: \"orgNameFromId\",\n  pure: true,\n})\nexport class GetOrgNameFromIdPipe implements PipeTransform {\n  transform(value: string, organizations: Organization[]) {\n    const orgName = organizations.find((o) => o.id === value)?.name;\n    return orgName;\n  }\n}\n","<ng-container *ngIf=\"isPaging() ? pagedCiphers : ciphers as filteredCiphers\">\n  <table\n    class=\"table table-hover table-list table-ciphers\"\n    *ngIf=\"filteredCiphers.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of filteredCiphers\">\n        <td (click)=\"checkCipher(c)\" class=\"table-list-checkbox\">\n          <input type=\"checkbox\" [(ngModel)]=\"$any(c).checked\" appStopProp />\n        </td>\n        <td (click)=\"checkCipher(c)\" class=\"table-list-icon\">\n          <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n        </td>\n        <td (click)=\"checkCipher(c)\" class=\"reduced-lh wrap\">\n          <a\n            appStopProp\n            [routerLink]=\"[]\"\n            [queryParams]=\"{ itemId: c.id }\"\n            queryParamsHandling=\"merge\"\n            title=\"{{ 'editItem' | i18n }}\"\n            >{{ c.name }}</a\n          >\n          <ng-container *ngIf=\"c.hasAttachments\">\n            <i\n              class=\"bwi bwi-paperclip\"\n              appStopProp\n              title=\"{{ 'attachments' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            <ng-container *ngIf=\"showFixOldAttachments(c)\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-warning\"\n                appStopProp\n                title=\"{{ 'attachmentsNeedFix' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachmentsNeedFix\" | i18n }}</span>\n            </ng-container>\n          </ng-container>\n          <br />\n          <small appStopProp>{{ c.subTitle }}</small>\n        </td>\n        <td *ngIf=\"organizations.length > 0 && !organization\" class=\"tw-w-28\">\n          <app-org-badge\n            organizationName=\"{{ c.organizationId | orgNameFromId: organizations }}\"\n            profileName=\"{{ profileName }}\"\n            (onOrganizationClicked)=\"onOrganizationClicked(c.organizationId)\"\n          >\n          </app-org-badge>\n        </td>\n        <td class=\"table-list-options\">\n          <button\n            [bitMenuTriggerFor]=\"cipherOptions\"\n            class=\"tw-border-none tw-bg-transparent tw-text-main\"\n            type=\"button\"\n            appA11yTitle=\"{{ 'options' | i18n }}\"\n          >\n            <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <bit-menu #cipherOptions>\n            <ng-container *ngIf=\"c.type === cipherType.Login && !c.isDeleted\">\n              <button bitMenuItem (click)=\"copy(c, c.login.username, 'username', 'Username')\">\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyUsername\" | i18n }}\n              </button>\n              <button\n                bitMenuItem\n                (click)=\"copy(c, c.login.password, 'password', 'Password')\"\n                *ngIf=\"c.viewPassword\"\n              >\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyPassword\" | i18n }}\n              </button>\n              <button\n                bitMenuItem\n                (click)=\"copy(c, c.login.totp, 'verificationCodeTotp', 'TOTP')\"\n                *ngIf=\"displayTotpCopyButton(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyVerificationCode\" | i18n }}\n              </button>\n              <button bitMenuItem *ngIf=\"c.login.canLaunch\" (click)=\"launch(c.login.launchUri)\">\n                <i class=\"bwi bwi-fw bwi-share-square\" aria-hidden=\"true\"></i>\n                {{ \"launch\" | i18n }}\n              </button>\n            </ng-container>\n            <button bitMenuItem (click)=\"attachments(c)\">\n              <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n              {{ \"attachments\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"((!organization && !c.organizationId) || organization) && !c.isDeleted\"\n              (click)=\"clone(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-files\" aria-hidden=\"true\"></i>\n              {{ \"clone\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"!organization && !c.organizationId && !c.isDeleted\"\n              (click)=\"share(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n              {{ \"moveToOrganization\" | i18n }}\n            </button>\n            <button bitMenuItem *ngIf=\"c.organizationId && !c.isDeleted\" (click)=\"collections(c)\">\n              <i class=\"bwi bwi-fw bwi-collection\" aria-hidden=\"true\"></i>\n              {{ \"collections\" | i18n }}\n            </button>\n            <button bitMenuItem *ngIf=\"c.organizationId && accessEvents\" (click)=\"events(c)\">\n              <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n              {{ \"eventLogs\" | i18n }}\n            </button>\n            <button bitMenuItem (click)=\"restore(c)\" *ngIf=\"c.isDeleted\">\n              <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n              {{ \"restore\" | i18n }}\n            </button>\n            <button bitMenuItem (click)=\"delete(c)\">\n              <span class=\"tw-text-danger\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ (c.isDeleted ? \"permanentlyDelete\" : \"delete\") | i18n }}\n              </span>\n            </button>\n          </bit-menu>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <div class=\"no-items\" *ngIf=\"!filteredCiphers.length\">\n    <ng-container *ngIf=\"!loaded\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </ng-container>\n    <ng-container *ngIf=\"loaded\">\n      <bit-icon [icon]=\"noItemIcon\" aria-hidden=\"true\"></bit-icon>\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button (click)=\"addCipher()\" class=\"btn btn-outline-primary\" *ngIf=\"showAddNew\">\n        <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"addItem\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n</ng-container>\n","import { Component, EventEmitter, Input, OnDestroy, Output } from \"@angular/core\";\n\nimport { VaultItemsComponent as BaseVaultItemsComponent } from \"@bitwarden/angular/components/vault-items.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { Icons } from \"@bitwarden/components\";\n\nconst MaxCheckedCount = 500;\n\n@Component({\n  selector: \"app-vault-items\",\n  templateUrl: \"vault-items.component.html\",\n})\nexport class VaultItemsComponent extends BaseVaultItemsComponent implements OnDestroy {\n  @Input() showAddNew = true;\n  @Output() onAttachmentsClicked = new EventEmitter<CipherView>();\n  @Output() onShareClicked = new EventEmitter<CipherView>();\n  @Output() onCollectionsClicked = new EventEmitter<CipherView>();\n  @Output() onCloneClicked = new EventEmitter<CipherView>();\n  @Output() onOrganzationBadgeClicked = new EventEmitter<string>();\n\n  pagedCiphers: CipherView[] = [];\n  pageSize = 200;\n  cipherType = CipherType;\n  actionPromise: Promise<any>;\n  userHasPremiumAccess = false;\n  organizations: Organization[] = [];\n  profileName: string;\n  noItemIcon = Icons.Search;\n\n  private didScroll = false;\n  private pagedCiphersCount = 0;\n  private refreshing = false;\n\n  constructor(\n    searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cipherService: CipherService,\n    protected eventCollectionService: EventCollectionService,\n    protected totpService: TotpService,\n    protected stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private tokenService: TokenService\n  ) {\n    super(searchService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  // load() is called after the page loads and the first sync has completed.\n  // Do not use ngOnInit() for anything that requires sync data.\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    await super.load(filter, deleted);\n    this.profileName = await this.tokenService.getName();\n    this.organizations = await this.organizationService.getAll();\n    this.userHasPremiumAccess = await this.stateService.getCanAccessPremium();\n  }\n\n  loadMore() {\n    if (this.ciphers.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCiphers.length;\n    let pagedSize = this.pageSize;\n    if (this.refreshing && pagedLength === 0 && this.pagedCiphersCount > this.pageSize) {\n      pagedSize = this.pagedCiphersCount;\n    }\n    if (this.ciphers.length > pagedLength) {\n      this.pagedCiphers = this.pagedCiphers.concat(\n        this.ciphers.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCiphersCount = this.pagedCiphers.length;\n    this.didScroll = this.pagedCiphers.length > this.pageSize;\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter, this.deleted);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.ciphers.length > this.pageSize;\n  }\n\n  async resetPaging() {\n    this.pagedCiphers = [];\n    this.loadMore();\n  }\n\n  async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n    this.resetPaging();\n  }\n\n  launch(uri: string) {\n    this.platformUtilsService.launchUri(uri);\n  }\n\n  async attachments(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onAttachmentsClicked.emit(c);\n  }\n\n  async share(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onShareClicked.emit(c);\n  }\n\n  collections(c: CipherView) {\n    this.onCollectionsClicked.emit(c);\n  }\n\n  async clone(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onCloneClicked.emit(c);\n  }\n\n  async delete(c: CipherView): Promise<boolean> {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    if (this.actionPromise != null) {\n      return;\n    }\n    const permanent = c.isDeleted;\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        permanent ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(permanent ? \"permanentlyDeleteItem\" : \"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.deleteCipher(c.id, permanent);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(permanent ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async restore(c: CipherView): Promise<boolean> {\n    if (this.actionPromise != null || !c.isDeleted) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.cipherService.restoreWithServer(c.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n    if (\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.repromptCipher(cipher))\n    ) {\n      return;\n    }\n\n    if (value == null || (aType === \"TOTP\" && !this.displayTotpCopyButton(cipher))) {\n      return;\n    } else if (value === cipher.login.totp) {\n      value = await this.totpService.getCode(value);\n    }\n\n    if (!cipher.viewPassword) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\" || typeI18nKey === \"verificationCodeTotp\") {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledHiddenFieldVisible,\n        cipher.id\n      );\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventCollectionService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n    }\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n    const selectCount =\n      select && this.ciphers.length > MaxCheckedCount ? MaxCheckedCount : this.ciphers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkCipher(this.ciphers[i], select);\n    }\n  }\n\n  checkCipher(c: CipherView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  getSelected(): CipherView[] {\n    if (this.ciphers == null) {\n      return [];\n    }\n    return this.ciphers.filter((c) => !!(c as any).checked);\n  }\n\n  getSelectedIds(): string[] {\n    return this.getSelected().map((c) => c.id);\n  }\n\n  displayTotpCopyButton(cipher: CipherView) {\n    return (\n      (cipher?.login?.hasTotp ?? false) && (cipher.organizationUseTotp || this.userHasPremiumAccess)\n    );\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (await this.repromptCipher(cipher)) {\n      super.selectCipher(cipher);\n    }\n  }\n\n  onOrganizationClicked(organizationId: string) {\n    this.onOrganzationBadgeClicked.emit(organizationId);\n  }\n\n  events(c: CipherView) {\n    // TODO: This should be removed but is needed since we reuse the same template\n  }\n\n  protected deleteCipher(id: string, permanent: boolean) {\n    return permanent\n      ? this.cipherService.deleteWithServer(id)\n      : this.cipherService.softDeleteWithServer(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return c.hasOldAttachments && c.organizationId == null;\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { VaultItemsComponent as BaseVaultItemsComponent } from \"../../vault/vault-items.component\";\n\n@Component({\n  selector: \"app-org-vault-items\",\n  templateUrl: \"../../vault/vault-items.component.html\",\n})\nexport class VaultItemsComponent extends BaseVaultItemsComponent {\n  @Output() onEventsClicked = new EventEmitter<CipherView>();\n\n  protected allCiphers: CipherView[] = [];\n\n  constructor(\n    searchService: SearchService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cipherService: CipherService,\n    eventCollectionService: EventCollectionService,\n    totpService: TotpService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService,\n    stateService: StateService,\n    organizationService: OrganizationService,\n    tokenService: TokenService,\n    private apiService: ApiService\n  ) {\n    super(\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cipherService,\n      eventCollectionService,\n      totpService,\n      stateService,\n      passwordRepromptService,\n      logService,\n      organizationService,\n      tokenService\n    );\n  }\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    if (this.organization.canEditAnyCollection) {\n      this.accessEvents = this.organization.useEvents;\n      this.allCiphers = await this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    } else {\n      this.allCiphers = (await this.cipherService.getAllDecrypted()).filter(\n        (c) => c.organizationId === this.organization.id\n      );\n    }\n    await this.searchService.indexCiphers(this.organization.id, this.allCiphers);\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    if (this.organization.canViewAllCollections) {\n      await super.applyFilter(filter);\n    } else {\n      const f = (c: CipherView) =>\n        c.organizationId === this.organization.id && (filter == null || filter(c));\n      await super.applyFilter(f);\n    }\n  }\n\n  async search(timeout: number = null) {\n    await super.search(timeout, this.allCiphers);\n  }\n\n  events(c: CipherView) {\n    this.onEventsClicked.emit(c);\n  }\n\n  protected deleteCipher(id: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher(id, this.deleted);\n    }\n    return this.deleted\n      ? this.apiService.deleteCipherAdmin(id)\n      : this.apiService.putDeleteCipherAdmin(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return this.organization.canEditAnyCollection && c.hasOldAttachments;\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherBulkDeleteRequest } from \"@bitwarden/common/models/request/cipher-bulk-delete.request\";\n\n@Component({\n  selector: \"app-vault-bulk-delete\",\n  templateUrl: \"bulk-delete.component.html\",\n})\nexport class BulkDeleteComponent {\n  @Input() cipherIds: string[] = [];\n  @Input() permanent = false;\n  @Input() organization: Organization;\n  @Output() onDeleted = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  async submit() {\n    if (!this.organization || !this.organization.canEditAnyCollection) {\n      await this.deleteCiphers();\n    } else {\n      await this.deleteCiphersAdmin();\n    }\n\n    await this.formPromise;\n\n    this.onDeleted.emit();\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(this.permanent ? \"permanentlyDeletedItems\" : \"deletedItems\")\n    );\n  }\n\n  private async deleteCiphers() {\n    if (this.permanent) {\n      this.formPromise = await this.cipherService.deleteManyWithServer(this.cipherIds);\n    } else {\n      this.formPromise = await this.cipherService.softDeleteManyWithServer(this.cipherIds);\n    }\n  }\n\n  private async deleteCiphersAdmin() {\n    const deleteRequest = new CipherBulkDeleteRequest(this.cipherIds, this.organization.id);\n    if (this.permanent) {\n      this.formPromise = await this.apiService.deleteManyCiphersAdmin(deleteRequest);\n    } else {\n      this.formPromise = await this.apiService.putDeleteManyCiphersAdmin(deleteRequest);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"deleteSelectedTitle\">\n          {{ (permanent ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{\n          (permanent ? \"permanentlyDeleteSelectedItemsDesc\" : \"deleteSelectedItemsDesc\")\n            | i18n: cipherIds.length\n        }}\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          appAutoFocus\n          type=\"submit\"\n          class=\"btn btn-danger btn-submit\"\n          [disabled]=\"form.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (permanent ? \"permanentlyDelete\" : \"delete\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"moveSelectedTitle\">\n          {{ \"moveSelected\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"moveSelectedItemsDesc\" | i18n: cipherIds.length }}</p>\n        <div class=\"form-group\">\n          <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n          <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"folderId\" class=\"form-control\">\n            <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, Observable } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\n@Component({\n  selector: \"app-vault-bulk-move\",\n  templateUrl: \"bulk-move.component.html\",\n})\nexport class BulkMoveComponent implements OnInit {\n  @Input() cipherIds: string[] = [];\n  @Output() onMoved = new EventEmitter();\n\n  folderId: string = null;\n  folders$: Observable<FolderView[]>;\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private folderService: FolderService\n  ) {}\n\n  async ngOnInit() {\n    this.folders$ = this.folderService.folderViews$;\n    this.folderId = (await firstValueFrom(this.folders$))[0].id;\n  }\n\n  async submit() {\n    this.formPromise = this.cipherService.moveManyWithServer(this.cipherIds, this.folderId);\n    await this.formPromise;\n    this.onMoved.emit();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"movedItems\"));\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-bulk-restore\",\n  templateUrl: \"bulk-restore.component.html\",\n})\nexport class BulkRestoreComponent {\n  @Input() cipherIds: string[] = [];\n  @Output() onRestored = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async submit() {\n    this.formPromise = this.cipherService.restoreManyWithServer(this.cipherIds);\n    await this.formPromise;\n    this.onRestored.emit();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItems\"));\n  }\n}\n","type CheckableBase = {\n  checked?: boolean;\n};\n\nexport type Checkable<T> = T & CheckableBase;\n\nexport function isChecked(item: CheckableBase): boolean {\n  return !!item.checked;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"restoreSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"restoreSelectedTitle\">\n          {{ \"restoreSelected\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"restoreSelectedItemsDesc\" | i18n: cipherIds.length }}\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          appAutoFocus\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"restore\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedToOrgTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"moveSelectedToOrgTitle\">\n          {{ \"moveSelectedToOrg\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"moveManyToOrgDesc\" | i18n }}</p>\n        <p>\n          {{\n            \"moveSelectedItemsCountDesc\"\n              | i18n: this.ciphers.length:shareableCiphers.length:nonShareableCount\n          }}\n        </p>\n        <div class=\"form-group\">\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            class=\"form-control\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"$any(c).checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [disabled]=\"form.loading || !canSave\"\n          [ngClass]=\"{ loading: form.loading }\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { Checkable, isChecked } from \"@bitwarden/common/types/checkable\";\n\n@Component({\n  selector: \"app-vault-bulk-share\",\n  templateUrl: \"bulk-share.component.html\",\n})\nexport class BulkShareComponent implements OnInit {\n  @Input() ciphers: CipherView[] = [];\n  @Input() organizationId: string;\n  @Output() onShared = new EventEmitter();\n\n  nonShareableCount = 0;\n  collections: Checkable<CollectionView>[] = [];\n  organizations: Organization[] = [];\n  shareableCiphers: CipherView[] = [];\n  formPromise: Promise<void>;\n\n  private writeableCollections: CollectionView[] = [];\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.shareableCiphers = this.ciphers.filter(\n      (c) => !c.hasOldAttachments && c.organizationId == null\n    );\n    this.nonShareableCount = this.ciphers.length - this.shareableCiphers.length;\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.filter((c) => !c.readOnly);\n    this.organizations = await this.organizationService.getAll();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  filterCollections() {\n    this.selectAll(false);\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit() {\n    const checkedCollectionIds = this.collections.filter(isChecked).map((c) => c.id);\n    try {\n      this.formPromise = this.cipherService.shareManyWithServer(\n        this.shareableCiphers,\n        this.organizationId,\n        checkedCollectionIds\n      );\n      await this.formPromise;\n      this.onShared.emit();\n      const orgName =\n        this.organizations.find((o) => o.id === this.organizationId)?.name ??\n        this.i18nService.t(\"organization\");\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"movedItemsToOrg\", orgName)\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  check(c: Checkable<CollectionView>, select?: boolean) {\n    c.checked = select == null ? !c.checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n\n  get canSave() {\n    if (\n      this.shareableCiphers != null &&\n      this.shareableCiphers.length > 0 &&\n      this.collections != null\n    ) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if (this.collections[i].checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"dropdown mr-2\" appListDropdown>\n  <button\n    class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n    type=\"button\"\n    id=\"bulkActionsButton\"\n    data-toggle=\"dropdown\"\n    aria-haspopup=\"true\"\n    aria-expanded=\"false\"\n    appA11yTitle=\"{{ 'options' | i18n }}\"\n  >\n    <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n  </button>\n  <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n    <button\n      class=\"dropdown-item\"\n      appStopClick\n      (click)=\"bulkMove()\"\n      *ngIf=\"!deleted && !organization\"\n    >\n      <i class=\"bwi bwi-fw bwi-folder\" aria-hidden=\"true\"></i>\n      {{ \"moveSelected\" | i18n }}\n    </button>\n    <button\n      class=\"dropdown-item\"\n      appStopClick\n      (click)=\"bulkShare()\"\n      *ngIf=\"!deleted && !organization\"\n    >\n      <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n      {{ \"moveSelectedToOrg\" | i18n }}\n    </button>\n    <button class=\"dropdown-item\" (click)=\"bulkRestore()\" *ngIf=\"deleted && !organization\">\n      <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n      {{ \"restoreSelected\" | i18n }}\n    </button>\n    <button class=\"dropdown-item text-danger\" (click)=\"bulkDelete()\">\n      <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n      {{ (deleted ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n    </button>\n    <div class=\"dropdown-divider\"></div>\n    <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n      <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n      {{ \"selectAll\" | i18n }}\n    </button>\n    <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n      <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n      {{ \"unselectAll\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<ng-template #bulkDeleteTemplate></ng-template>\n<ng-template #bulkRestoreTemplate></ng-template>\n<ng-template #bulkMoveTemplate></ng-template>\n<ng-template #bulkShareTemplate></ng-template>\n","import { Component, Input, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { BulkDeleteComponent } from \"./bulk-delete.component\";\nimport { BulkMoveComponent } from \"./bulk-move.component\";\nimport { BulkRestoreComponent } from \"./bulk-restore.component\";\nimport { BulkShareComponent } from \"./bulk-share.component\";\nimport { VaultItemsComponent } from \"./vault-items.component\";\n\n@Component({\n  selector: \"app-vault-bulk-actions\",\n  templateUrl: \"bulk-actions.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class BulkActionsComponent {\n  @Input() vaultItemsComponent: VaultItemsComponent;\n  @Input() deleted: boolean;\n  @Input() organization: Organization;\n\n  @ViewChild(\"bulkDeleteTemplate\", { read: ViewContainerRef, static: true })\n  bulkDeleteModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRestoreTemplate\", { read: ViewContainerRef, static: true })\n  bulkRestoreModalRef: ViewContainerRef;\n  @ViewChild(\"bulkMoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkMoveModalRef: ViewContainerRef;\n  @ViewChild(\"bulkShareTemplate\", { read: ViewContainerRef, static: true })\n  bulkShareModalRef: ViewContainerRef;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async bulkDelete() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.vaultItemsComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkDeleteComponent,\n      this.bulkDeleteModalRef,\n      (comp) => {\n        comp.permanent = this.deleted;\n        comp.cipherIds = selectedIds;\n        comp.organization = this.organization;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeleted.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkRestore() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.vaultItemsComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRestoreComponent,\n      this.bulkRestoreModalRef,\n      (comp) => {\n        comp.cipherIds = selectedIds;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onRestored.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkShare() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedCiphers = this.vaultItemsComponent.getSelected();\n    if (selectedCiphers.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkShareComponent,\n      this.bulkShareModalRef,\n      (comp) => {\n        comp.ciphers = selectedCiphers;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onShared.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkMove() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.vaultItemsComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkMoveComponent,\n      this.bulkMoveModalRef,\n      (comp) => {\n        comp.cipherIds = selectedIds;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onMoved.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n  }\n\n  selectAll(select: boolean) {\n    this.vaultItemsComponent.selectAll(select);\n  }\n\n  private async promptPassword() {\n    const selectedCiphers = this.vaultItemsComponent.getSelected();\n    const notProtected = !selectedCiphers.find(\n      (cipher) => cipher.reprompt !== CipherRepromptType.None\n    );\n\n    return notProtected || (await this.passwordRepromptService.showPasswordPrompt());\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"groupings\">\n        <div class=\"content\">\n          <div class=\"inner-content\">\n            <app-organization-vault-filter\n              #vaultFilter\n              [activeFilter]=\"activeFilter\"\n              (onFilterChange)=\"applyVaultFilter($event)\"\n              (onSearchTextChanged)=\"filterSearchText($event)\"\n            ></app-organization-vault-filter>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"vaultItems\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"vaultItemsComponent.actionPromise\">\n            <ng-container *ngIf=\"$any(actionSpinner).loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <app-vault-bulk-actions\n            [vaultItemsComponent]=\"vaultItemsComponent\"\n            [deleted]=\"deleted\"\n            [organization]=\"organization\"\n          >\n          </app-vault-bulk-actions>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm ml-auto\"\n            (click)=\"addCipher()\"\n            *ngIf=\"!deleted\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"addItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout type=\"warning\" *ngIf=\"deleted\" icon=\"bwi bwi-exclamation-triangle\">\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-org-vault-items\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onCollectionsClicked)=\"editCipherCollections($event)\"\n        (onEventsClicked)=\"viewEvents($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n      >\n      </app-org-vault-items>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #eventsTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { VaultService } from \"../../vault/shared/vault.service\";\nimport { EntityEventsComponent } from \"../manage/entity-events.component\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { VaultFilterComponent } from \"./vault-filter/vault-filter.component\";\nimport { VaultItemsComponent } from \"./vault-items.component\";\n\nconst BroadcasterSubscriptionId = \"OrgVaultComponent\";\n\n@Component({\n  selector: \"app-org-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(\"vaultFilter\", { static: true })\n  vaultFilterComponent: VaultFilterComponent;\n  @ViewChild(VaultItemsComponent, { static: true }) vaultItemsComponent: VaultItemsComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n\n  organization: Organization;\n  collectionId: string = null;\n  type: CipherType = null;\n  trashCleanupWarning: string = null;\n  activeFilter: VaultFilter = new VaultFilter();\n\n  // This is a hack to avoid redundant api calls that fetch OrganizationVaultFilterComponent collections\n  // When it makes sense to do so we should leverage some other communication method for change events that isn't directly tied to the query param for organizationId\n  // i.e. exposing the VaultFiltersService to the OrganizationSwitcherComponent to make relevant updates from a change event instead of just depending on the router\n  firstLoaded = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private syncService: SyncService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private messagingService: MessagingService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private vaultService: VaultService,\n    private cipherService: CipherService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  ngOnInit() {\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params: any) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.vaultFilterComponent.organization = this.organization;\n      this.vaultItemsComponent.organization = this.organization;\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.vaultItemsComponent.searchText = this.vaultFilterComponent.searchText = qParams.search;\n        if (!this.organization.canViewAllCollections) {\n          await this.syncService.fullSync(false);\n          this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n            this.ngZone.run(async () => {\n              switch (message.command) {\n                case \"syncCompleted\":\n                  if (message.successfully) {\n                    await Promise.all([\n                      this.vaultFilterComponent.reloadCollectionsAndFolders(),\n                      this.vaultItemsComponent.refresh(),\n                    ]);\n                    this.changeDetectorRef.detectChanges();\n                  }\n                  break;\n              }\n            });\n          });\n        }\n\n        if (this.firstLoaded) {\n          await this.vaultFilterComponent.reloadCollectionsAndFolders();\n        }\n        this.firstLoaded = true;\n\n        await this.vaultItemsComponent.reload();\n\n        if (qParams.viewEvents != null) {\n          const cipher = this.vaultItemsComponent.ciphers.filter(\n            (c) => c.id === qParams.viewEvents\n          );\n          if (cipher.length > 0) {\n            this.viewEvents(cipher[0]);\n          }\n        }\n\n        /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n        this.route.queryParams.subscribe(async (params) => {\n          const cipherId = getCipherIdFromParams(params);\n          if (cipherId) {\n            if (\n              // Handle users with implicit collection access since they use the admin endpoint\n              this.organization.canEditAnyCollection ||\n              (await this.cipherService.get(cipherId)) != null\n            ) {\n              this.editCipherId(cipherId);\n            } else {\n              this.platformUtilsService.showToast(\n                \"error\",\n                this.i18nService.t(\"errorOccurred\"),\n                this.i18nService.t(\"unknownCipher\")\n              );\n              this.router.navigate([], {\n                queryParams: { cipherId: null, itemId: null },\n                queryParamsHandling: \"merge\",\n              });\n            }\n          }\n        });\n      });\n    });\n  }\n\n  get deleted(): boolean {\n    return this.activeFilter.status === \"trash\";\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async applyVaultFilter(vaultFilter: VaultFilter) {\n    this.vaultItemsComponent.showAddNew = vaultFilter.status !== \"trash\";\n    this.activeFilter = vaultFilter;\n\n    // Hack to avoid calling cipherService.getAllFromApiForOrganization every time the vault filter changes.\n    // Call VaultItemsComponent.applyFilter directly instead of going through VaultItemsComponent.reload, which\n    // reloads all the ciphers unnecessarily. Will be fixed properly by EC-14.\n    this.vaultItemsComponent.loaded = false;\n    this.vaultItemsComponent.deleted = vaultFilter.status === \"trash\" || false;\n    await this.vaultItemsComponent.applyFilter(this.activeFilter.buildFilter());\n    this.vaultItemsComponent.loaded = true;\n    // End hack\n\n    this.vaultFilterComponent.searchPlaceholder =\n      this.vaultService.calculateSearchBarLocalizationString(this.activeFilter);\n    this.go();\n  }\n\n  filterSearchText(searchText: string) {\n    this.vaultItemsComponent.searchText = searchText;\n    this.vaultItemsComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    if (this.organization.maxStorageGb == null || this.organization.maxStorageGb === 0) {\n      this.messagingService.send(\"upgradeOrganization\", { organizationId: cipher.organizationId });\n      return;\n    }\n\n    let madeAttachmentChanges = false;\n\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.vaultItemsComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        if (this.organization.canEditAnyCollection) {\n          comp.collectionIds = cipher.collectionIds;\n          comp.collections = this.vaultFilterComponent.collections.fullList.filter(\n            (c) => !c.readOnly && c.id != null\n          );\n        }\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.organizationId = this.organization.id;\n    component.type = this.type;\n    if (this.organization.canEditAnyCollection) {\n      component.collections = this.vaultFilterComponent.collections.fullList.filter(\n        (c) => !c.readOnly && c.id != null\n      );\n    }\n    if (this.collectionId != null) {\n      component.collectionIds = [this.collectionId];\n    }\n  }\n\n  async editCipher(cipher: CipherView) {\n    return this.editCipherId(cipher?.id);\n  }\n\n  async editCipherId(cipherId: string) {\n    const cipher = await this.cipherService.get(cipherId);\n    if (cipher != null && cipher.reprompt != 0) {\n      if (!(await this.passwordRepromptService.showPasswordPrompt())) {\n        this.go({ cipherId: null, itemId: null });\n        return;\n      }\n    }\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipherId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n\n    modal.onClosedPromise().then(() => {\n      this.go({ cipherId: null, itemId: null });\n    });\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n    component.organizationId = this.organization.id;\n    if (this.organization.canEditAnyCollection) {\n      component.collections = this.vaultFilterComponent.collections.fullList.filter(\n        (c) => !c.readOnly && c.id != null\n      );\n    }\n    // Regardless of Admin state, the collection Ids need to passed manually as they are not assigned value\n    // in the add-edit componenet\n    component.collectionIds = cipher.collectionIds;\n  }\n\n  async viewEvents(cipher: CipherView) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = cipher.name;\n      comp.organizationId = this.organization.id;\n      comp.entityId = cipher.id;\n      comp.showUser = true;\n      comp.entity = \"cipher\";\n    });\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        type: this.activeFilter.cipherType,\n        collectionId: this.activeFilter.selectedCollectionId,\n        deleted: this.deleted ? true : null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      queryParamsHandling: \"merge\",\n      replaceUrl: true,\n    });\n  }\n}\n\n/**\n * Allows backwards compatibility with\n * old links that used the original `cipherId` param\n */\nconst getCipherIdFromParams = (params: Params): string => {\n  return params[\"itemId\"] || params[\"cipherId\"];\n};\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { VaultComponent } from \"./vault.component\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: VaultComponent,\n    data: { titleId: \"vaults\" },\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VaultRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { OrganizationBadgeModule } from \"../../vault/organization-badge/organization-badge.module\";\nimport { VaultSharedModule } from \"../../vault/shared/vault-shared.module\";\n\nimport { VaultFilterModule } from \"./vault-filter/vault-filter.module\";\nimport { VaultItemsComponent } from \"./vault-items.component\";\nimport { VaultRoutingModule } from \"./vault-routing.module\";\nimport { VaultComponent } from \"./vault.component\";\n\n@NgModule({\n  imports: [VaultSharedModule, VaultRoutingModule, VaultFilterModule, OrganizationBadgeModule],\n  declarations: [VaultComponent, VaultItemsComponent],\n  exports: [VaultComponent],\n})\nexport class VaultModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport {\n  canAccessGroupsTab,\n  canAccessManageTab,\n  canAccessMembersTab,\n  canAccessOrgAdmin,\n  canManageCollections,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { OrganizationPermissionsGuard } from \"./guards/org-permissions.guard\";\nimport { OrganizationRedirectGuard } from \"./guards/org-redirect.guard\";\nimport { OrganizationLayoutComponent } from \"./layouts/organization-layout.component\";\nimport { CollectionsComponent } from \"./manage/collections.component\";\nimport { GroupsComponent } from \"./manage/groups.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { VaultModule } from \"./vault/vault.module\";\n\nconst routes: Routes = [\n  {\n    path: \":organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuard, OrganizationPermissionsGuard],\n    data: {\n      organizationPermissions: canAccessOrgAdmin,\n    },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"vault\" },\n      {\n        path: \"vault\",\n        loadChildren: () => VaultModule,\n      },\n      {\n        path: \"settings\",\n        loadChildren: () => import(\"./settings\").then((m) => m.OrganizationSettingsModule),\n      },\n      {\n        path: \"manage\",\n        component: ManageComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: canAccessManageTab,\n        },\n        children: [\n          {\n            path: \"\",\n            pathMatch: \"full\",\n            canActivate: [OrganizationRedirectGuard],\n            data: {\n              autoRedirectCallback: getManageRoute,\n            },\n            children: [], // This is required to make the auto redirect work\n          },\n          {\n            path: \"collections\",\n            component: CollectionsComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"collections\",\n              organizationPermissions: canManageCollections,\n            },\n          },\n          {\n            path: \"groups\",\n            component: GroupsComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"groups\",\n              organizationPermissions: canAccessGroupsTab,\n            },\n          },\n          {\n            path: \"members\",\n            component: PeopleComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"members\",\n              organizationPermissions: canAccessMembersTab,\n            },\n          },\n        ],\n      },\n      {\n        path: \"reporting\",\n        loadChildren: () =>\n          import(\"./reporting/organization-reporting.module\").then(\n            (m) => m.OrganizationReportingModule\n          ),\n      },\n      {\n        path: \"billing\",\n        loadChildren: () =>\n          import(\"./billing/organization-billing.module\").then((m) => m.OrganizationBillingModule),\n      },\n    ],\n  },\n];\n\nfunction getManageRoute(organization: Organization): string {\n  if (organization.canManageUsers) {\n    return \"members\";\n  }\n  if (organization.canViewAssignedCollections || organization.canViewAllCollections) {\n    return \"collections\";\n  }\n  if (organization.canManageGroups) {\n    return \"groups\";\n  }\n  return undefined;\n}\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { SearchInputComponent } from \"./components/search-input/search-input.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [SearchInputComponent],\n  exports: [SharedModule, SearchInputComponent],\n})\nexport class SharedOrganizationModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { AccessSelectorModule } from \"./components/access-selector\";\nimport { OrgUpgradeDialogComponent } from \"./manage/org-upgrade-dialog/org-upgrade-dialog.component\";\nimport { OrganizationsRoutingModule } from \"./organization-routing.module\";\nimport { SharedOrganizationModule } from \"./shared\";\n\n@NgModule({\n  imports: [SharedOrganizationModule, AccessSelectorModule, OrganizationsRoutingModule],\n  declarations: [OrgUpgradeDialogComponent],\n})\nexport class OrganizationModule {}\n","export enum PlanSponsorshipType {\n  FamiliesForEnterprise = 0,\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Params } from \"@angular/router\";\n\nimport { BaseAcceptComponent } from \"../../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-family-sponsorship\",\n  templateUrl: \"accept-family-sponsorship.component.html\",\n})\nexport class AcceptFamilySponsorshipComponent extends BaseAcceptComponent {\n  failedShortMessage = \"inviteAcceptFailedShort\";\n  failedMessage = \"inviteAcceptFailed\";\n\n  requiredParameters = [\"email\", \"token\"];\n\n  async authedHandler(qParams: Params) {\n    this.router.navigate([\"/setup/families-for-enterprise\"], { queryParams: qParams });\n  }\n\n  async unauthedHandler(qParams: Params) {\n    if (!qParams.register) {\n      this.router.navigate([\"/login\"], { queryParams: { email: qParams.email } });\n    } else {\n      this.router.navigate([\"/register\"], { queryParams: { email: qParams.email } });\n    }\n  }\n}\n","import { PlanSponsorshipType } from \"../../../enums/planSponsorshipType\";\n\nexport class OrganizationSponsorshipRedeemRequest {\n  planSponsorshipType: PlanSponsorshipType;\n  sponsoredOrganizationId: string;\n}\n","<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"sponsoredFamiliesOffer\" | i18n }}</h1>\n  </div>\n  <div *ngIf=\"loading\" class=\"mt-5 d-flex justify-content-center\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </div>\n  <div *ngIf=\"!loading && badToken\" class=\"mt-5 d-flex justify-content-center\">\n    <span>{{ \"badToken\" | i18n }}</span>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    ngNativeValidate\n    *ngIf=\"!loading && !badToken\"\n  >\n    <p>\n      <span>{{ \"acceptBitwardenFamiliesHelp\" | i18n }}</span>\n    </p>\n    <div class=\"form-group col-6\">\n      <label for=\"availableSponsorshipOrg\">{{ \"sponsoredFamiliesSelectOffer\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        [(ngModel)]=\"selectedFamilyOrganizationId\"\n        class=\"form-control\"\n        required\n      >\n        <option value=\"\" disabled>-- {{ \"select\" | i18n }} --</option>\n        <option value=\"createNew\">{{ \"newFamiliesOrganization\" | i18n }}</option>\n        <option *ngFor=\"let o of existingFamilyOrganizations$ | async\" [ngValue]=\"o.id\">\n          {{ o.name }}\n        </option>\n      </select>\n    </div>\n    <div *ngIf=\"showNewOrganization\" class=\"col-12\">\n      <app-organization-plans></app-organization-plans>\n    </div>\n    <div class=\"form-group col-6\" *ngIf=\"!showNewOrganization\">\n      <button class=\"btn btn-primary mt-2 btn-submit\" [disabled]=\"form.loading\" type=\"submit\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"acceptOffer\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n","import { Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Observable, Subject } from \"rxjs\";\nimport { first, map, takeUntil } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { PlanSponsorshipType } from \"@bitwarden/common/enums/planSponsorshipType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationSponsorshipRedeemRequest } from \"@bitwarden/common/models/request/organization/organization-sponsorship-redeem.request\";\n\nimport { DeleteOrganizationComponent } from \"../../organizations/settings\";\nimport { OrganizationPlansComponent } from \"../../settings/organization-plans.component\";\n\n@Component({\n  selector: \"families-for-enterprise-setup\",\n  templateUrl: \"families-for-enterprise-setup.component.html\",\n})\nexport class FamiliesForEnterpriseSetupComponent implements OnInit, OnDestroy {\n  @ViewChild(OrganizationPlansComponent, { static: false })\n  set organizationPlansComponent(value: OrganizationPlansComponent) {\n    if (!value) {\n      return;\n    }\n\n    value.plan = PlanType.FamiliesAnnually;\n    value.product = ProductType.Families;\n    value.acceptingSponsorship = true;\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    value.onSuccess.subscribe(this.onOrganizationCreateSuccess.bind(this));\n  }\n\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  loading = true;\n  badToken = false;\n  formPromise: Promise<any>;\n\n  token: string;\n  existingFamilyOrganizations: Organization[];\n  existingFamilyOrganizations$: Observable<Organization[]>;\n\n  showNewOrganization = false;\n  _organizationPlansComponent: OrganizationPlansComponent;\n  _selectedFamilyOrganizationId = \"\";\n\n  private _destroy = new Subject<void>();\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService,\n    private organizationService: OrganizationService,\n    private modalService: ModalService\n  ) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.token == null;\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"sponsoredFamiliesAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.token = qParams.token;\n\n      await this.syncService.fullSync(true);\n      this.badToken = !(await this.apiService.postPreValidateSponsorshipToken(this.token));\n      this.loading = false;\n    });\n\n    this.existingFamilyOrganizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter((o) => o.planProductType === ProductType.Families))\n    );\n\n    this.existingFamilyOrganizations$.pipe(takeUntil(this._destroy)).subscribe((orgs) => {\n      if (orgs.length === 0) {\n        this.selectedFamilyOrganizationId = \"createNew\";\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit(this._selectedFamilyOrganizationId);\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  get selectedFamilyOrganizationId() {\n    return this._selectedFamilyOrganizationId;\n  }\n\n  set selectedFamilyOrganizationId(value: string) {\n    this._selectedFamilyOrganizationId = value;\n    this.showNewOrganization = value === \"createNew\";\n  }\n\n  private async doSubmit(organizationId: string) {\n    try {\n      const request = new OrganizationSponsorshipRedeemRequest();\n      request.planSponsorshipType = PlanSponsorshipType.FamiliesForEnterprise;\n      request.sponsoredOrganizationId = organizationId;\n\n      await this.apiService.postRedeemSponsorship(this.token, request);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"sponsoredFamiliesOfferRedeemed\")\n      );\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      if (this.showNewOrganization) {\n        await this.modalService.openViewRef(\n          DeleteOrganizationComponent,\n          this.deleteModalRef,\n          (comp) => {\n            comp.organizationId = organizationId;\n            comp.deleteOrganizationRequestType = \"InvalidFamiliesForEnterprise\";\n            // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n            comp.onSuccess.subscribe(() => {\n              this.router.navigate([\"/\"]);\n            });\n          }\n        );\n      }\n      this.validationService.showError(this.i18nService.t(\"sponsorshipTokenHasExpired\"));\n    }\n  }\n\n  private async onOrganizationCreateSuccess(value: any) {\n    // Use newly created organization id\n    await this.doSubmit(value.organizationId);\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccess } from \"../domain/send-access\";\n\nimport { SendFileView } from \"./send-file.view\";\nimport { SendTextView } from \"./send-text.view\";\nimport { View } from \"./view\";\n\nexport class SendAccessView implements View {\n  id: string = null;\n  name: string = null;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  expirationDate: Date = null;\n  creatorIdentifier: string = null;\n\n  constructor(s?: SendAccess) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.type = s.type;\n    this.expirationDate = s.expirationDate;\n    this.creatorIdentifier = s.creatorIdentifier;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccessResponse } from \"../response/send-access.response\";\nimport { SendAccessView } from \"../view/send-access.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SendFile } from \"./send-file\";\nimport { SendText } from \"./send-text\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SendAccess extends Domain {\n  id: string;\n  type: SendType;\n  name: EncString;\n  file: SendFile;\n  text: SendText;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(obj?: SendAccessResponse) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n        expirationDate: null,\n        creatorIdentifier: null,\n      },\n      [\"id\", \"expirationDate\", \"creatorIdentifier\"]\n    );\n\n    this.type = obj.type;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendAccessView> {\n    const model = new SendAccessView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n      },\n      null,\n      key\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(key);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(key);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","export class SendAccessRequest {\n  password: string;\n}\n","<form #form (ngSubmit)=\"load()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-center mt-5\">\n    <div class=\"col-12\">\n      <h1 class=\"lead text-center mb-4\">Bitwarden Send</h1>\n    </div>\n    <div class=\"col-12 text-center\" *ngIf=\"creatorIdentifier != null\">\n      <p>{{ \"sendCreatorIdentifier\" | i18n: creatorIdentifier }}</p>\n    </div>\n    <div class=\"col-8\" *ngIf=\"hideEmail\">\n      <app-callout type=\"warning\" title=\"{{ 'warning' | i18n }}\">\n        {{ \"viewSendHiddenEmailWarning\" | i18n }}\n        <a href=\"https://bitwarden.com/help/receive-send/\" target=\"_blank\">{{\n          \"learnMore\" | i18n\n        }}</a\n        >.\n      </app-callout>\n    </div>\n  </div>\n  <div class=\"row justify-content-center\">\n    <div class=\"col-5\">\n      <div class=\"card d-block\">\n        <div class=\"card-body\" *ngIf=\"loading\" class=\"text-center\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && passwordRequired\">\n          <p>{{ \"sendProtectedPassword\" | i18n }}</p>\n          <p>{{ \"sendProtectedPasswordDontKnow\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"password\">{{ \"password\" | i18n }}</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              name=\"Password\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"password\"\n              required\n              appInputVerbatim\n              appAutofocus\n            />\n          </div>\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && unavailable\">\n          {{ \"sendAccessUnavailable\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && error\">\n          {{ \"unexpectedError\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && !passwordRequired && send\">\n          <p class=\"text-center\">\n            <b>{{ send.name }}</b>\n          </p>\n          <hr />\n          <!-- Text -->\n          <ng-container *ngIf=\"send.type === sendType.Text\">\n            <app-callout *ngIf=\"send.text.hidden\" type=\"tip\">{{\n              \"sendHiddenByDefault\" | i18n\n            }}</app-callout>\n            <div class=\"form-group\">\n              <textarea\n                id=\"text\"\n                rows=\"8\"\n                name=\"Text\"\n                [ngModel]=\"sendText\"\n                class=\"form-control\"\n                readonly\n              ></textarea>\n            </div>\n            <button\n              class=\"btn btn-block btn-link\"\n              type=\"button\"\n              (click)=\"toggleText()\"\n              *ngIf=\"send.text.hidden\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showText, 'bwi-eye-slash': showText }\"\n              ></i>\n              {{ \"toggleVisibility\" | i18n }}\n            </button>\n            <button class=\"btn btn-block btn-link\" type=\"button\" (click)=\"copyText()\">\n              <i class=\"bwi bwi-copy\" aria-hidden=\"true\"></i> {{ \"copyValue\" | i18n }}\n            </button>\n          </ng-container>\n          <!-- File -->\n          <ng-container *ngIf=\"send.type === sendType.File\">\n            <p>{{ send.file.fileName }}</p>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              (click)=\"download()\"\n              *ngIf=\"!downloading\"\n            >\n              <i class=\"bwi bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"downloadFile\" | i18n }} ({{ send.file.sizeName }})\n            </button>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              *ngIf=\"downloading\"\n              disabled=\"true\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </ng-container>\n          <p *ngIf=\"expirationDate\" class=\"text-center text-muted\">\n            Expires: {{ expirationDate | date: \"medium\" }}\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 text-center mt-5 text-muted\">\n      <p class=\"mb-0\">\n        {{ \"sendAccessTaglineProductDesc\" | i18n }}<br />\n        {{ \"sendAccessTaglineLearnMore\" | i18n }}\n        <a href=\"https://www.bitwarden.com/products/send?source=web-vault\" target=\"_blank\"\n          >Bitwarden Send</a\n        >\n        {{ \"sendAccessTaglineOr\" | i18n }}\n        <a href=\"https://vault.bitwarden.com/#/register\" target=\"_blank\">{{\n          \"sendAccessTaglineSignUp\" | i18n\n        }}</a>\n        {{ \"sendAccessTaglineTryToday\" | i18n }}\n      </p>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SEND_KDF_ITERATIONS } from \"@bitwarden/common/enums/kdfType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/enc-array-buffer\";\nimport { SendAccess } from \"@bitwarden/common/models/domain/send-access\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { SendAccessRequest } from \"@bitwarden/common/models/request/send-access.request\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\nimport { SendAccessResponse } from \"@bitwarden/common/models/response/send-access.response\";\nimport { SendAccessView } from \"@bitwarden/common/models/view/send-access.view\";\n\n@Component({\n  selector: \"app-send-access\",\n  templateUrl: \"access.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccessComponent implements OnInit {\n  send: SendAccessView;\n  sendType = SendType;\n  downloading = false;\n  loading = true;\n  passwordRequired = false;\n  formPromise: Promise<SendAccessResponse>;\n  password: string;\n  showText = false;\n  unavailable = false;\n  error = false;\n  hideEmail = false;\n\n  private id: string;\n  private key: string;\n  private decKey: SymmetricCryptoKey;\n  private accessRequest: SendAccessRequest;\n\n  constructor(\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService,\n    private fileDownloadService: FileDownloadService\n  ) {}\n\n  get sendText() {\n    if (this.send == null || this.send.text == null) {\n      return null;\n    }\n    return this.showText ? this.send.text.text : this.send.text.maskedText;\n  }\n\n  get expirationDate() {\n    if (this.send == null || this.send.expirationDate == null) {\n      return null;\n    }\n    return this.send.expirationDate;\n  }\n\n  get creatorIdentifier() {\n    if (this.send == null || this.send.creatorIdentifier == null) {\n      return null;\n    }\n    return this.send.creatorIdentifier;\n  }\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.params.subscribe(async (params) => {\n      this.id = params.sendId;\n      this.key = params.key;\n      if (this.key == null || this.id == null) {\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async download() {\n    if (this.send == null || this.decKey == null) {\n      return;\n    }\n\n    if (this.downloading) {\n      return;\n    }\n\n    const downloadData = await this.apiService.getSendFileDownloadData(\n      this.send,\n      this.accessRequest\n    );\n\n    if (Utils.isNullOrWhitespace(downloadData.url)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingSendFile\"));\n      return;\n    }\n\n    this.downloading = true;\n    const response = await fetch(new Request(downloadData.url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      this.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, this.decKey);\n      this.fileDownloadService.download({\n        fileName: this.send.file.fileName,\n        blobData: decBuf,\n        downloadMethod: \"save\",\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    this.downloading = false;\n  }\n\n  copyText() {\n    this.platformUtilsService.copyToClipboard(this.send.text.text);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendTypeText\"))\n    );\n  }\n\n  toggleText() {\n    this.showText = !this.showText;\n  }\n\n  async load() {\n    this.unavailable = false;\n    this.error = false;\n    this.hideEmail = false;\n    const keyArray = Utils.fromUrlB64ToArray(this.key);\n    this.accessRequest = new SendAccessRequest();\n    if (this.password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        this.password,\n        keyArray,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      this.accessRequest.password = Utils.fromBufferToB64(passwordHash);\n    }\n    try {\n      let sendResponse: SendAccessResponse = null;\n      if (this.loading) {\n        sendResponse = await this.apiService.postSendAccess(this.id, this.accessRequest);\n      } else {\n        this.formPromise = this.apiService.postSendAccess(this.id, this.accessRequest);\n        sendResponse = await this.formPromise;\n      }\n      this.passwordRequired = false;\n      const sendAccess = new SendAccess(sendResponse);\n      this.decKey = await this.cryptoService.makeSendKey(keyArray);\n      this.send = await sendAccess.decrypt(this.decKey);\n      this.showText = this.send.text != null ? !this.send.text.hidden : true;\n    } catch (e) {\n      if (e instanceof ErrorResponse) {\n        if (e.statusCode === 401) {\n          this.passwordRequired = true;\n        } else if (e.statusCode === 404) {\n          this.unavailable = true;\n        } else {\n          this.error = true;\n        }\n      }\n    }\n    this.loading = false;\n    this.hideEmail =\n      this.creatorIdentifier == null &&\n      !this.passwordRequired &&\n      !this.loading &&\n      !this.unavailable;\n  }\n}\n","import { Directive, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\n\n@Directive()\nexport class SendComponent implements OnInit, OnDestroy {\n  disableSend = false;\n  sendType = SendType;\n  loaded = false;\n  loading = true;\n  refreshing = false;\n  expired = false;\n  type: SendType = null;\n  sends: SendView[] = [];\n  filteredSends: SendView[] = [];\n  searchText: string;\n  selectedType: SendType;\n  selectedAll: boolean;\n  searchPlaceholder: string;\n  filter: (cipher: SendView) => boolean;\n  searchPending = false;\n  hasSearched = false; // search() function called - returns true if text qualifies for search\n\n  actionPromise: any;\n  onSuccessfulRemovePassword: () => Promise<any>;\n  onSuccessfulDelete: () => Promise<any>;\n  onSuccessfulLoad: () => Promise<any>;\n\n  private searchTimeout: any;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected sendService: SendService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected ngZone: NgZone,\n    protected searchService: SearchService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.DisableSend)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableSend = policyAppliesToActiveUser;\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load(filter: (send: SendView) => boolean = null) {\n    this.loading = true;\n    const sends = await this.sendService.getAllDecrypted();\n    this.sends = sends;\n    if (this.onSuccessfulLoad != null) {\n      await this.onSuccessfulLoad();\n    } else {\n      // Default action\n      this.selectAll();\n    }\n    this.loading = false;\n    this.loaded = true;\n  }\n\n  async reload(filter: (send: SendView) => boolean = null) {\n    this.loaded = false;\n    this.sends = [];\n    await this.load(filter);\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  async applyFilter(filter: (send: SendView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null || s.password == null) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removePasswordConfirmation\"),\n      this.i18nService.t(\"removePassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n      await this.actionPromise;\n      if (this.onSuccessfulRemovePassword != null) {\n        this.onSuccessfulRemovePassword();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"removedPassword\"));\n        await this.load();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async delete(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.deleteWithServer(s.id);\n      await this.actionPromise;\n\n      if (this.onSuccessfulDelete != null) {\n        this.onSuccessfulDelete();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n        await this.refresh();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n    return true;\n  }\n\n  copy(s: SendView) {\n    const sendLinkBaseUrl = this.environmentService.getSendUrl();\n    const link = sendLinkBaseUrl + s.accessId + \"/\" + s.urlB64Key;\n    this.platformUtilsService.copyToClipboard(link);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendLink\"))\n    );\n  }\n\n  searchTextChanged() {\n    this.search(200);\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.applyFilter(null);\n  }\n\n  selectType(type: SendType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.applyFilter((s) => s.type === type);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedType = null;\n  }\n\n  private applyTextSearch() {\n    if (this.searchText != null) {\n      this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n  // Native datetime-locale.\n  // We are happy.\n  Default = \"default\",\n\n  // Native date and time inputs, but no datetime-locale.\n  // We use individual date and time inputs and create a datetime programatically on submit.\n  Firefox = \"firefox\",\n\n  // No native date, time, or datetime-locale inputs.\n  // We use a polyfill for dates and a dropdown for times.\n  Safari = \"safari\",\n}\n\nenum DateField {\n  DeletionDate = \"deletion\",\n  ExpriationDate = \"expiration\",\n}\n\n// Value = hours\nenum DatePreset {\n  OneHour = 1,\n  OneDay = 24,\n  TwoDays = 48,\n  ThreeDays = 72,\n  SevenDays = 168,\n  ThirtyDays = 720,\n  Custom = 0,\n  Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n  twelveHour: string;\n  twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n  @Input() readonly initialDeletionDate: Date;\n  @Input() readonly initialExpirationDate: Date;\n  @Input() readonly editMode: boolean;\n  @Input() readonly disabled: boolean;\n\n  @Output() datesChanged = new EventEmitter<{ deletionDate: string; expirationDate: string }>();\n\n  get browserPath(): BrowserPath {\n    if (this.platformUtilsService.isFirefox()) {\n      return BrowserPath.Firefox;\n    } else if (this.platformUtilsService.isSafari()) {\n      return BrowserPath.Safari;\n    }\n    return BrowserPath.Default;\n  }\n\n  datesForm = new UntypedFormGroup({\n    selectedDeletionDatePreset: new UntypedFormControl(),\n    selectedExpirationDatePreset: new UntypedFormControl(),\n    defaultDeletionDateTime: new UntypedFormControl(),\n    defaultExpirationDateTime: new UntypedFormControl(),\n    fallbackDeletionDate: new UntypedFormControl(),\n    fallbackDeletionTime: new UntypedFormControl(),\n    fallbackExpirationDate: new UntypedFormControl(),\n    fallbackExpirationTime: new UntypedFormControl(),\n  });\n\n  deletionDatePresets: any[] = [\n    { name: this.i18nService.t(\"oneHour\"), value: DatePreset.OneHour },\n    { name: this.i18nService.t(\"oneDay\"), value: DatePreset.OneDay },\n    { name: this.i18nService.t(\"days\", \"2\"), value: DatePreset.TwoDays },\n    { name: this.i18nService.t(\"days\", \"3\"), value: DatePreset.ThreeDays },\n    { name: this.i18nService.t(\"days\", \"7\"), value: DatePreset.SevenDays },\n    { name: this.i18nService.t(\"days\", \"30\"), value: DatePreset.ThirtyDays },\n    { name: this.i18nService.t(\"custom\"), value: DatePreset.Custom },\n  ];\n\n  expirationDatePresets: any[] = [\n    { name: this.i18nService.t(\"never\"), value: DatePreset.Never },\n  ].concat([...this.deletionDatePresets]);\n\n  get selectedDeletionDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedDeletionDatePreset\") as UntypedFormControl;\n  }\n\n  get selectedExpirationDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedExpirationDatePreset\") as UntypedFormControl;\n  }\n\n  get defaultDeletionDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultDeletionDateTime\") as UntypedFormControl;\n  }\n\n  get defaultExpirationDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultExpirationDateTime\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionDate\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionTime\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationDate\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationTime\") as UntypedFormControl;\n  }\n\n  // Should be able to call these at any time and compute a submitable value\n  get formattedDeletionDate(): string {\n    switch (this.selectedDeletionDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n        return this.formattedDeletionDate;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            return this.fallbackDeletionDate.value + \"T\" + this.fallbackDeletionTime.value;\n          default:\n            return this.defaultDeletionDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedDeletionDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n\n  get formattedExpirationDate(): string {\n    switch (this.selectedExpirationDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        return null;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            if (\n              (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n              this.editMode\n            ) {\n              return null;\n            }\n            return this.fallbackExpirationDate.value + \"T\" + this.fallbackExpirationTime.value;\n          default:\n            if (!this.defaultExpirationDateTime.value) {\n              return null;\n            }\n            return this.defaultExpirationDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedExpirationDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n  //\n\n  get safariDeletionTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.DeletionDate);\n  }\n\n  get safariExpirationTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.ExpriationDate);\n  }\n\n  private get nextWeek(): Date {\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    return nextWeek;\n  }\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.setInitialFormValues();\n    this.emitDates();\n    this.datesForm.valueChanges.subscribe(() => {\n      this.emitDates();\n    });\n  }\n\n  onDeletionDatePresetSelect(value: DatePreset) {\n    this.selectedDeletionDatePreset.setValue(value);\n  }\n\n  clearExpiration() {\n    switch (this.browserPath) {\n      case BrowserPath.Safari:\n      case BrowserPath.Firefox:\n        this.fallbackExpirationDate.setValue(null);\n        this.fallbackExpirationTime.setValue(null);\n        break;\n      case BrowserPath.Default:\n        this.defaultExpirationDateTime.setValue(null);\n        break;\n    }\n  }\n\n  protected emitDates() {\n    this.datesChanged.emit({\n      deletionDate: this.formattedDeletionDate,\n      expirationDate: this.formattedExpirationDate,\n    });\n  }\n\n  protected setInitialFormValues() {\n    if (this.editMode) {\n      this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n        case BrowserPath.Firefox:\n          this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n          if (this.initialExpirationDate != null) {\n            this.fallbackExpirationDate.setValue(\n              this.initialExpirationDate.toISOString().slice(0, 10)\n            );\n            this.fallbackExpirationTime.setValue(\n              this.initialExpirationDate.toTimeString().slice(0, 5)\n            );\n          }\n          break;\n        case BrowserPath.Default:\n          if (this.initialExpirationDate) {\n            this.defaultExpirationDateTime.setValue(\n              this.datePipe.transform(new Date(this.initialExpirationDate), \"yyyy-MM-ddTHH:mm\")\n            );\n          }\n          this.defaultDeletionDateTime.setValue(\n            this.datePipe.transform(new Date(this.initialDeletionDate), \"yyyy-MM-ddTHH:mm\")\n          );\n          break;\n      }\n    } else {\n      this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n          this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(\n            this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected safariTimePresetOptions(field: DateField): TimeOption[] {\n    // init individual arrays for major sort groups\n    const noon: TimeOption[] = [];\n    const midnight: TimeOption[] = [];\n    const ams: TimeOption[] = [];\n    const pms: TimeOption[] = [];\n\n    // determine minute skip (5 min, 10 min, 15 min, etc.)\n    const minuteIncrementer = 15;\n\n    // loop through each hour on a 12 hour system\n    for (let h = 1; h <= 12; h++) {\n      // loop through each minute in the hour using the skip to incriment\n      for (let m = 0; m < 60; m += minuteIncrementer) {\n        // init the final strings that will be added to the lists\n        let hour = h.toString();\n        let minutes = m.toString();\n\n        // add prepending 0s to single digit hours/minutes\n        if (h < 10) {\n          hour = \"0\" + hour;\n        }\n        if (m < 10) {\n          minutes = \"0\" + minutes;\n        }\n\n        // build time strings and push to relevant sort groups\n        if (h === 12) {\n          const midnightOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `00:${minutes}`,\n          };\n          midnight.push(midnightOption);\n\n          const noonOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          noon.push(noonOption);\n        } else {\n          const amOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          ams.push(amOption);\n\n          const pmOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${h + 12}:${minutes}`,\n          };\n          pms.push(pmOption);\n        }\n      }\n    }\n\n    // bring all the arrays together in the right order\n    const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n    // determine if an unsupported value already exists on the send & add that to the top of the option list\n    // example: if the Send was created with a different client\n    if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialExpirationDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialExpirationDate, \"HH:mm\"),\n      };\n      return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n    } else if (\n      field === DateField.DeletionDate &&\n      this.initialDeletionDate != null &&\n      this.editMode\n    ) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialDeletionDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialDeletionDate, \"HH:mm\"),\n      };\n      return [previousValue, ...validTimes];\n    } else {\n      return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/enc-array-buffer\";\nimport { Send } from \"@bitwarden/common/models/domain/send\";\nimport { SendFileView } from \"@bitwarden/common/models/view/send-file.view\";\nimport { SendTextView } from \"@bitwarden/common/models/view/send-text.view\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\n\n@Directive()\nexport class AddEditComponent implements OnInit, OnDestroy {\n  @Input() sendId: string;\n  @Input() type: SendType;\n\n  @Output() onSavedSend = new EventEmitter<SendView>();\n  @Output() onDeletedSend = new EventEmitter<SendView>();\n  @Output() onCancelled = new EventEmitter<SendView>();\n\n  copyLink = false;\n  disableSend = false;\n  disableHideEmail = false;\n  send: SendView;\n  deletionDate: string;\n  expirationDate: string;\n  hasPassword: boolean;\n  password: string;\n  showPassword = false;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  sendType = SendType;\n  typeOptions: any[];\n  canAccessPremium = true;\n  emailVerified = true;\n  alertShown = false;\n  showOptions = false;\n\n  protected componentName = \"\";\n  private sendLinkBaseUrl: string;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected datePipe: DatePipe,\n    protected sendService: SendService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"sendTypeFile\"), value: SendType.File },\n      { name: i18nService.t(\"sendTypeText\"), value: SendType.Text },\n    ];\n    this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n  }\n\n  get link(): string {\n    if (this.send.id != null && this.send.accessId != null) {\n      return this.sendLinkBaseUrl + this.send.accessId + \"/\" + this.send.urlB64Key;\n    }\n    return null;\n  }\n\n  get isSafari() {\n    return this.platformUtilsService.isSafari();\n  }\n\n  get isDateTimeLocalSupported(): boolean {\n    return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n  }\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.DisableSend)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableSend = policyAppliesToActiveUser;\n      });\n\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.SendOptions, (p) => p.data.disableHideEmail)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableHideEmail = policyAppliesToActiveUser;\n      });\n\n    await this.load();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get editMode(): boolean {\n    return this.sendId != null;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.editMode ? \"editSend\" : \"createSend\");\n  }\n\n  setDates(event: { deletionDate: string; expirationDate: string }) {\n    this.deletionDate = event.deletionDate;\n    this.expirationDate = event.expirationDate;\n  }\n\n  async load() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.emailVerified = await this.stateService.getEmailVerified();\n    if (!this.canAccessPremium || !this.emailVerified) {\n      this.type = SendType.Text;\n    }\n\n    if (this.send == null) {\n      if (this.editMode) {\n        const send = await this.loadSend();\n        this.send = await send.decrypt();\n      } else {\n        this.send = new SendView();\n        this.send.type = this.type == null ? SendType.File : this.type;\n        this.send.file = new SendFileView();\n        this.send.text = new SendTextView();\n        this.send.deletionDate = new Date();\n        this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n      }\n    }\n\n    this.hasPassword = this.send.password != null && this.send.password.trim() !== \"\";\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.disableSend) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"sendDisabledWarning\")\n      );\n      return false;\n    }\n\n    if (this.send.name == null || this.send.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    let file: File = null;\n    if (this.send.type === SendType.File && !this.editMode) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      const files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n\n      file = files[0];\n      if (files[0].size > 524288000) {\n        // 500 MB\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"maxFileSize\")\n        );\n        return;\n      }\n    }\n\n    if (this.password != null && this.password.trim() === \"\") {\n      this.password = null;\n    }\n\n    this.formPromise = this.encryptSend(file).then(async (encSend) => {\n      const uploadPromise = this.sendService.saveWithServer(encSend);\n      await uploadPromise;\n      if (this.send.id == null) {\n        this.send.id = encSend[0].id;\n      }\n      if (this.send.accessId == null) {\n        this.send.accessId = encSend[0].accessId;\n      }\n      this.onSavedSend.emit(this.send);\n      if (this.copyLink && this.link != null) {\n        const copySuccess = await this.copyLinkToClipboard(this.link);\n        if (copySuccess ?? true) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n          );\n        } else {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\"),\n            null,\n            this.i18nService.t(\"ok\"),\n            null,\n            \"success\",\n            null\n          );\n          await this.copyLinkToClipboard(this.link);\n        }\n      }\n    });\n    try {\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n  }\n\n  async delete(): Promise<boolean> {\n    if (this.deletePromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      this.componentName != \"\" ? this.componentName + \" .modal-content\" : null\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n      await this.load();\n      this.onDeletedSend.emit(this.send);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  typeChanged() {\n    if (this.send.type === SendType.File && !this.alertShown) {\n      if (!this.canAccessPremium) {\n        this.alertShown = true;\n        this.messagingService.send(\"premiumRequired\");\n      } else if (!this.emailVerified) {\n        this.alertShown = true;\n        this.messagingService.send(\"emailVerificationRequired\");\n      }\n    }\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  protected async loadSend(): Promise<Send> {\n    return this.sendService.get(this.sendId);\n  }\n\n  protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n    const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n    // Parse dates\n    try {\n      sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n    } catch {\n      sendData[0].deletionDate = null;\n    }\n    try {\n      sendData[0].expirationDate =\n        this.expirationDate == null ? null : new Date(this.expirationDate);\n    } catch {\n      sendData[0].expirationDate = null;\n    }\n\n    return sendData;\n  }\n\n  protected togglePasswordVisible() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"password\").focus();\n  }\n}\n","<div class=\"row\" [formGroup]=\"datesForm\">\n  <div class=\"col-6 form-group\">\n    <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n    <ng-template #deletionDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <ng-container *ngSwitchCase=\"'firefox'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <input\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              type=\"time\"\n              name=\"DeletionTimeDate\"\n              formControlName=\"fallbackDeletionTime\"\n              required\n              placeholder=\"HH:MM AM/PM\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'safari'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <select\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              [required]=\"!editMode\"\n              formControlName=\"fallbackDeletionTime\"\n              name=\"SafariDeletionTime\"\n            >\n              <option\n                *ngFor=\"let o of safariDeletionTimePresetOptions\"\n                [ngValue]=\"o.twentyFourHour\"\n              >\n                {{ o.twelveHour }}\n              </option>\n            </select>\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"deletionDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"DeletionDate\"\n            formControlName=\"defaultDeletionDateTime\"\n            required\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"deletionDate\"\n        name=\"SelectedDeletionDatePreset\"\n        formControlName=\"selectedDeletionDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedDeletionDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"deletionDateDesc\" | i18n }}</div>\n  </div>\n  <div class=\"col-6 form-group\">\n    <div class=\"d-flex\">\n      <label for=\"expirationDate\">{{ \"expirationDate\" | i18n }}</label>\n      <a\n        href=\"#\"\n        appStopClick\n        (click)=\"clearExpiration()\"\n        class=\"ml-auto\"\n        *ngIf=\"editMode && !disabled\"\n      >\n        {{ \"clear\" | i18n }}\n      </a>\n    </div>\n    <ng-template #expirationDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <div *ngSwitchCase=\"'firefox'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            type=\"time\"\n            name=\"ExpirationTimeFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            [required]=\"!editMode\"\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n        <!-- non-default cases are not showing up -->\n        <div *ngSwitchCase=\"'safari'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            [required]=\"!editMode\"\n            formControlName=\"fallbackExpirationTime\"\n            name=\"SafariExpirationTime\"\n          >\n            <option\n              *ngFor=\"let o of safariExpirationTimePresetOptions\"\n              [ngValue]=\"o.twentyFourHour\"\n            >\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"expirationDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"ExpirationDate\"\n            formControlName=\"defaultExpirationDateTime\"\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"expirationDate\"\n        name=\"SelectedExpirationDatePreset\"\n        formControlName=\"selectedExpirationDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedExpirationDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"expirationDateDesc\" | i18n }}</div>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ControlContainer, NgForm } from \"@angular/forms\";\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from \"@bitwarden/angular/components/send/efflux-dates.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-send-efflux-dates\",\n  templateUrl: \"efflux-dates.component.html\",\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {\n    super(i18nService, platformUtilsService, datePipe);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"sendAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"sendAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"send\">\n        <app-callout *ngIf=\"disableSend\">\n          <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n        </app-callout>\n        <app-callout *ngIf=\"!disableSend && disableHideEmail\">\n          <span>{{ \"sendOptionsPolicyInEffect\" | i18n }}</span>\n          <ul class=\"mb-0\">\n            <li>{{ \"sendDisableHideEmailInEffect\" | i18n }}</li>\n          </ul>\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"send.name\"\n              required\n              [readOnly]=\"disableSend\"\n            />\n            <small class=\"form-text text-muted\">{{ \"sendNameDesc\" | i18n }}</small>\n          </div>\n        </div>\n        <div class=\"row\" *ngIf=\"!editMode\">\n          <div class=\"col-6 form-group\">\n            <label>{{ \"whatTypeOfSend\" | i18n }}</label>\n            <div class=\"form-check\" *ngFor=\"let o of typeOptions\">\n              <input\n                class=\"form-check-input\"\n                type=\"radio\"\n                [(ngModel)]=\"send.type\"\n                name=\"Type_{{ o.value }}\"\n                id=\"type_{{ o.value }}\"\n                [value]=\"o.value\"\n                (change)=\"typeChanged()\"\n                [checked]=\"send.type === o.value\"\n              />\n              <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n                {{ o.name }}\n              </label>\n            </div>\n          </div>\n        </div>\n        <!-- Text -->\n        <ng-container *ngIf=\"send.type === sendType.Text\">\n          <div class=\"form-group\">\n            <label for=\"text\">{{ \"sendTypeText\" | i18n }}</label>\n            <textarea\n              id=\"text\"\n              name=\"Text.Text\"\n              rows=\"6\"\n              [(ngModel)]=\"send.text.text\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <small class=\"form-text text-muted\">{{ \"sendTextDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.text.hidden\"\n                id=\"text-hidden\"\n                name=\"Text.Hidden\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"text-hidden\">{{\n                \"textHiddenByDefault\" | i18n\n              }}</label>\n            </div>\n          </div>\n        </ng-container>\n        <!-- File -->\n        <ng-container *ngIf=\"send.type === sendType.File\">\n          <div class=\"form-group\">\n            <div *ngIf=\"editMode\">\n              <strong class=\"d-block\">{{ \"file\" | i18n }}</strong>\n              {{ send.file.fileName }} ({{ send.file.sizeName }})\n            </div>\n            <div *ngIf=\"!editMode\">\n              <label for=\"file\">{{ \"file\" | i18n }}</label>\n              <input\n                type=\"file\"\n                id=\"file\"\n                class=\"form-control-file\"\n                name=\"file\"\n                required\n                [disabled]=\"disableSend\"\n              />\n              <small class=\"form-text text-muted\"\n                >{{ \"sendFileDesc\" | i18n }} {{ \"maxFileSize\" | i18n }}</small\n              >\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-5\">{{ \"share\" | i18n }}</h3>\n        <div class=\"form-group\" *ngIf=\"link\">\n          <label for=\"link\">{{ \"sendLinkLabel\" | i18n }}</label>\n          <input type=\"text\" readonly id=\"link\" name=\"Link\" [ngModel]=\"link\" class=\"form-control\" />\n        </div>\n        <div class=\"form-group\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [(ngModel)]=\"copyLink\"\n              id=\"copy-link\"\n              name=\"CopyLink\"\n            />\n            <label class=\"form-check-label\" for=\"copy-link\">{{\n              \"copySendLinkOnSave\" | i18n\n            }}</label>\n          </div>\n        </div>\n        <div\n          id=\"options-header\"\n          class=\"section-header d-flex flex-row align-items-center mt-5\"\n          (click)=\"toggleOptions()\"\n        >\n          <h3 class=\"mb-0 mr-2\">\n            <button appStopClick class=\"header-expandable\">\n              <i\n                class=\"bwi\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-angle-right': !showOptions, 'bwi-angle-down': showOptions }\"\n              ></i>\n              {{ \"options\" | i18n }}\n            </button>\n          </h3>\n        </div>\n        <div id=\"options\" [hidden]=\"!showOptions\">\n          <app-send-efflux-dates\n            [initialDeletionDate]=\"send.deletionDate\"\n            [initialExpirationDate]=\"send.expirationDate\"\n            [editMode]=\"editMode\"\n            [disabled]=\"disableSend\"\n            (datesChanged)=\"setDates($event)\"\n          >\n          </app-send-efflux-dates>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"maxAccessCount\">{{ \"maxAccessCount\" | i18n }}</label>\n              <input\n                id=\"maxAccessCount\"\n                class=\"form-control\"\n                type=\"number\"\n                name=\"MaxAccessCount\"\n                [(ngModel)]=\"send.maxAccessCount\"\n                min=\"1\"\n                [readOnly]=\"disableSend\"\n              />\n              <div class=\"form-text text-muted small\">{{ \"maxAccessCountDesc\" | i18n }}</div>\n            </div>\n            <div class=\"col-6 form-group\" *ngIf=\"editMode\">\n              <label for=\"accessCount\">{{ \"currentAccessCount\" | i18n }}</label>\n              <input\n                id=\"accessCount\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"AccessCount\"\n                readonly\n                [(ngModel)]=\"send.accessCount\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"password\" *ngIf=\"!hasPassword\">{{ \"password\" | i18n }}</label>\n              <label for=\"password\" *ngIf=\"hasPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"password\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Password\"\n                  [(ngModel)]=\"password\"\n                  [readOnly]=\"disableSend\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePasswordVisible()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                </div>\n              </div>\n              <div class=\"form-text text-muted small\">{{ \"sendPasswordDesc\" | i18n }}</div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n            <textarea\n              id=\"notes\"\n              name=\"Notes\"\n              rows=\"6\"\n              [(ngModel)]=\"send.notes\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <div class=\"form-text text-muted small\">{{ \"sendNotesDesc\" | i18n }}</div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.hideEmail\"\n                id=\"hideEmail\"\n                name=\"HideEmail\"\n                [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"hideEmail\">\n                {{ \"hideEmail\" | i18n }}\n              </label>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.disabled\"\n                id=\"disabled\"\n                name=\"Disabled\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"disabled\">{{ \"disableThisSend\" | i18n }}</label>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [ngClass]=\"{ loading: form.loading }\"\n          [disabled]=\"form.loading || disableSend\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"send\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"$any(deleteBtn).loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/send/add-edit.component\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-send-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  override componentName = \"app-send-add-edit\";\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    datePipe: DatePipe,\n    sendService: SendService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      datePipe,\n      sendService,\n      messagingService,\n      policyService,\n      logService,\n      stateService\n    );\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    // Copy function on web depends on the modal being open or not. Since this event occurs during a transition\n    // of the modal closing we need to add a small delay to make sure state of the DOM is consistent.\n    return new Promise((resolve) => {\n      window.setTimeout(() => resolve(super.copyLinkToClipboard(link)), 500);\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-3 groupings\">\n      <div class=\"card vault-filters\">\n        <div class=\"card-header d-flex\">\n          {{ \"filters\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <input\n            type=\"search\"\n            placeholder=\"{{ searchPlaceholder || ('searchSends' | i18n) }}\"\n            id=\"search\"\n            class=\"form-control\"\n            [(ngModel)]=\"searchText\"\n            (input)=\"searchTextChanged()\"\n            autocomplete=\"off\"\n            appAutofocus\n          />\n          <div class=\"filter\">\n            <ul class=\"filter-options\">\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedAll }\">\n                <span class=\"filter-buttons\">\n                  <button class=\"filter-button\" appStopClick (click)=\"selectAll()\">\n                    <i class=\"bwi bwi-fw bwi-filter\"></i>{{ \"allSends\" | i18n }}\n                  </button>\n                </span>\n              </li>\n            </ul>\n          </div>\n          <div class=\"filter\">\n            <div class=\"filter-heading\">\n              <h3>{{ \"types\" | i18n }}</h3>\n            </div>\n            <ul class=\"filter-options\">\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedType === sendType.Text }\">\n                <span class=\"filter-buttons\">\n                  <button class=\"filter-button\" appStopClick (click)=\"selectType(sendType.Text)\">\n                    <i class=\"bwi bwi-fw bwi-file-text\"></i>{{ \"sendTypeText\" | i18n }}\n                  </button>\n                </span>\n              </li>\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedType === sendType.File }\">\n                <span class=\"filter-buttons\">\n                  <button class=\"filter-button\" appStopClick (click)=\"selectType(sendType.File)\">\n                    <i class=\"bwi bwi-fw bwi-file\"></i>{{ \"sendTypeFile\" | i18n }}\n                  </button>\n                </span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"send\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"actionPromise\">\n            <ng-container *ngIf=\"$any(actionSpinner).loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addSend()\"\n            [disabled]=\"disableSend\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <!--Listing Table-->\n      <table class=\"table table-hover table-list\" *ngIf=\"filteredSends && filteredSends.length\">\n        <tbody>\n          <tr *ngFor=\"let s of filteredSends\">\n            <td class=\"table-list-icon\">\n              <div class=\"icon\" aria-hidden=\"true\">\n                <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"s.type == sendType.File\"></i>\n                <i class=\"bwi bwi-fw bwi-lg bwi-file-text\" *ngIf=\"s.type == sendType.Text\"></i>\n              </div>\n            </td>\n            <td class=\"reduced-lh wrap\">\n              <a href=\"#\" appStopClick appStopProp (click)=\"editSend(s)\">{{ s.name }}</a>\n              <ng-container *ngIf=\"s.disabled\">\n                <i\n                  class=\"bwi bwi-exclamation-triangle\"\n                  appStopProp\n                  title=\"{{ 'disabled' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"disabled\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.password\">\n                <i\n                  class=\"bwi bwi-key\"\n                  appStopProp\n                  title=\"{{ 'password' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"password\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.maxAccessCountReached\">\n                <i\n                  class=\"bwi bwi-ban\"\n                  appStopProp\n                  title=\"{{ 'maxAccessCountReached' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"maxAccessCountReached\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.expired\">\n                <i\n                  class=\"bwi bwi-clock\"\n                  appStopProp\n                  title=\"{{ 'expired' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"expired\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.pendingDelete\">\n                <i\n                  class=\"bwi bwi-trash\"\n                  appStopProp\n                  title=\"{{ 'pendingDeletion' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"pendingDeletion\" | i18n }}</span>\n              </ng-container>\n              <br />\n              <small appStopProp>{{ s.deletionDate | date: \"medium\" }}</small>\n            </td>\n            <td class=\"table-list-options\">\n              <button\n                [bitMenuTriggerFor]=\"sendOptions\"\n                class=\"tw-border-none tw-bg-transparent tw-text-main\"\n                type=\"button\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu #sendOptions>\n                <button bitMenuItem (click)=\"copy(s)\">\n                  <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                  {{ \"copySendLink\" | i18n }}\n                </button>\n                <button bitMenuItem (click)=\"removePassword(s)\" *ngIf=\"s.password && !disableSend\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"removePassword\" | i18n }}\n                </button>\n                <button bitMenuItem (click)=\"delete(s)\">\n                  <span class=\"tw-text-danger\">\n                    <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                    {{ \"delete\" | i18n }}\n                  </span>\n                </button>\n              </bit-menu>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div class=\"no-items\" *ngIf=\"filteredSends && !filteredSends.length\">\n        <ng-container *ngIf=\"!loaded\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"loaded\">\n          <bit-icon [icon]=\"noItemIcon\" aria-hidden=\"true\"></bit-icon>\n          <p>{{ \"noSendsInList\" | i18n }}</p>\n          <button (click)=\"addSend()\" class=\"btn btn-outline-primary\" [disabled]=\"disableSend\">\n            <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #sendAddEdit></ng-template>\n","import { Component, NgZone, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SendComponent as BaseSendComponent } from \"@bitwarden/angular/components/send/send.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\nimport { Icons } from \"@bitwarden/components\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\n\nconst BroadcasterSubscriptionId = \"SendComponent\";\n\n@Component({\n  selector: \"app-send\",\n  templateUrl: \"send.component.html\",\n})\nexport class SendComponent extends BaseSendComponent {\n  @ViewChild(\"sendAddEdit\", { read: ViewContainerRef, static: true })\n  sendAddEditModalRef: ViewContainerRef;\n  noItemIcon = Icons.Search;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    searchService: SearchService,\n    policyService: PolicyService,\n    private modalService: ModalService,\n    private broadcasterService: BroadcasterService,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n\n    // Broadcaster subscription - load if sync completes in the background\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await this.load();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n\n    const component = await this.editSend(null);\n    component.type = this.type;\n  }\n\n  async editSend(send: SendView) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.sendAddEditModalRef,\n      (comp) => {\n        comp.sendId = send == null ? null : send.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-deauthorize-sessions\",\n  templateUrl: \"deauthorize-sessions.component.html\",\n})\nexport class DeauthorizeSessionsComponent {\n  masterPassword: Verification;\n  formPromise: Promise<unknown>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postSecurityStamp(request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"sessionsDeauthorized\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deAuthTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"deAuthTitle\">{{ \"deauthorizeSessions\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deauthorizeSessionsDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deauthorizeSessionsWarning\" | i18n }}</app-callout>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deauthorizeSessions\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { AccountApiService } from \"@bitwarden/common/abstractions/account/account-api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-delete-account\",\n  templateUrl: \"delete-account.component.html\",\n})\nexport class DeleteAccountComponent {\n  formPromise: Promise<void>;\n\n  deleteForm = this.formBuilder.group({\n    verification: undefined as Verification | undefined,\n  });\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private formBuilder: FormBuilder,\n    private accountApiService: AccountApiService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const verification = this.deleteForm.get(\"verification\").value;\n      this.formPromise = this.accountApiService.deleteAccount(verification);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteAccountTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      [formGroup]=\"deleteForm\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"deleteAccountTitle\">{{ \"deleteAccount\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deleteAccountDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n        <app-user-verification ngDefaultControl formControlName=\"verification\" name=\"verification\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteAccount\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class EmailTokenRequest extends SecretVerificationRequest {\n  newEmail: string;\n  masterPasswordHash: string;\n}\n","import { EmailTokenRequest } from \"./email-token.request\";\n\nexport class EmailRequest extends EmailTokenRequest {\n  newMasterPasswordHash: string;\n  token: string;\n  key: string;\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <app-callout type=\"warning\" *ngIf=\"showTwoFactorEmailWarning\">\n    {{ \"changeEmailTwoFactorWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          [readonly]=\"tokenSent\"\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"newEmail\">{{ \"newEmail\" | i18n }}</label>\n        <input\n          id=\"newEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"NewEmail\"\n          [(ngModel)]=\"newEmail\"\n          required\n          [readonly]=\"tokenSent\"\n          inputmode=\"email\"\n          appInputVerbatim=\"false\"\n        />\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"tokenSent\">\n    <hr />\n    <p>{{ \"changeEmailDesc\" | i18n: newEmail }}</p>\n    <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"token\">{{ \"code\" | i18n }}</label>\n          <input\n            id=\"token\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Token\"\n            [(ngModel)]=\"token\"\n            required\n            appInputVerbatim\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span *ngIf=\"!tokenSent\">{{ \"continue\" | i18n }}</span>\n    <span *ngIf=\"tokenSent\">{{ \"changeEmail\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" *ngIf=\"tokenSent\" (click)=\"reset()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { EmailTokenRequest } from \"@bitwarden/common/models/request/email-token.request\";\nimport { EmailRequest } from \"@bitwarden/common/models/request/email.request\";\n\n@Component({\n  selector: \"app-change-email\",\n  templateUrl: \"change-email.component.html\",\n})\nexport class ChangeEmailComponent implements OnInit {\n  masterPassword: string;\n  newEmail: string;\n  token: string;\n  tokenSent = false;\n  showTwoFactorEmailWarning = false;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    const twoFactorProviders = await this.apiService.getTwoFactorProviders();\n    this.showTwoFactorEmailWarning = twoFactorProviders.data.some(\n      (p) => p.type === TwoFactorProviderType.Email && p.enabled\n    );\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    this.newEmail = this.newEmail.trim().toLowerCase();\n    if (!this.tokenSent) {\n      const request = new EmailTokenRequest();\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      try {\n        this.formPromise = this.apiService.postEmailToken(request);\n        await this.formPromise;\n        this.tokenSent = true;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const request = new EmailRequest();\n      request.token = this.token;\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      const kdf = await this.stateService.getKdfType();\n      const kdfIterations = await this.stateService.getKdfIterations();\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.newEmail,\n        kdf,\n        kdfIterations\n      );\n      request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        newKey\n      );\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n      request.key = newEncKey[1].encryptedString;\n      try {\n        this.formPromise = this.apiService.postEmail(request);\n        await this.formPromise;\n        this.reset();\n        this.platformUtilsService.showToast(\n          \"success\",\n          this.i18nService.t(\"emailChanged\"),\n          this.i18nService.t(\"logBackIn\")\n        );\n        this.messagingService.send(\"logout\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n\n  reset() {\n    this.token = this.newEmail = this.masterPassword = null;\n    this.tokenSent = false;\n  }\n}\n","export class UpdateProfileRequest {\n  name: string;\n  masterPasswordHint: string;\n  culture = \"en-US\"; // deprecated\n\n  constructor(name: string, masterPasswordHint: string) {\n    this.name = name;\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\n@Component({\n  selector: \"selectable-avatar\",\n  template: `<span\n    [title]=\"title\"\n    (click)=\"onFire()\"\n    (keyup.enter)=\"onFire()\"\n    tabindex=\"0\"\n    [ngClass]=\"classList\"\n  >\n    <bit-avatar\n      appStopClick\n      [text]=\"text\"\n      size=\"xlarge\"\n      [text]=\"text\"\n      [color]=\"color\"\n      [border]=\"false\"\n      [id]=\"id\"\n      [border]=\"border\"\n      [title]=\"title\"\n    >\n    </bit-avatar>\n  </span>`,\n})\nexport class SelectableAvatarComponent {\n  @Input() id: string;\n  @Input() text: string;\n  @Input() title: string;\n  @Input() color: string;\n  @Input() border = false;\n  @Input() selected = false;\n  @Output() select = new EventEmitter<string>();\n\n  onFire() {\n    this.select.emit(this.color);\n  }\n\n  get classList() {\n    return [\"tw-rounded-full tw-inline-block\"]\n      .concat([\"tw-cursor-pointer\", \"tw-outline\", \"tw-outline-solid\", \"tw-outline-offset-1\"])\n      .concat(\n        this.selected\n          ? [\"tw-outline-[3px]\", \"tw-outline-primary-500\"]\n          : [\n              \"tw-outline-0\",\n              \"hover:tw-outline-1\",\n              \"hover:tw-outline-primary-300\",\n              \"focus:tw-outline-2\",\n              \"focus:tw-outline-primary-500\",\n            ]\n      );\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"customizeTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable tw-w-[600px] tw-max-w-none\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"customizeTitle\">{{ \"customizeAvatar\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <p class=\"tw-text-lg\">{{ \"pickAnAvatarColor\" | i18n }}</p>\n        <div class=\"tw-flex tw-flex-wrap tw-justify-center tw-gap-8 tw-gap-y-8\">\n          <ng-container *ngFor=\"let c of defaultColorPalette\">\n            <selectable-avatar\n              appStopClick\n              (select)=\"setSelection(c.color)\"\n              [selected]=\"c.selected\"\n              [title]=\"c.name\"\n              text=\"{{ profile | userName }}\"\n              [color]=\"c.color\"\n              [border]=\"true\"\n            >\n            </selectable-avatar>\n          </ng-container>\n          <span>\n            <span\n              [tabIndex]=\"0\"\n              (keyup.enter)=\"showCustomPicker()\"\n              (click)=\"showCustomPicker()\"\n              title=\"{{ 'customColor' | i18n }}\"\n              [ngClass]=\"{\n                '!tw-outline-[3px] tw-outline-primary-500 hover:tw-outline-[3px] hover:tw-outline-primary-500':\n                  customColorSelected\n              }\"\n              class=\"tw-outline-solid tw-bg-white tw-relative tw-inline-block tw-flex tw-h-24 tw-w-24 tw-cursor-pointer tw-place-content-center tw-content-center tw-justify-center tw-rounded-full tw-border tw-border-solid tw-border-secondary-500 tw-outline tw-outline-0 tw-outline-offset-1 hover:tw-outline-1 hover:tw-outline-primary-300 focus:tw-outline-2 focus:tw-outline-primary-500\"\n              [style.background-color]=\"customColor$ | async\"\n            >\n              <i\n                [style.color]=\"customTextColor$ | async\"\n                class=\"bwi bwi-pencil tw-m-auto tw-text-3xl\"\n              ></i>\n              <input\n                tabindex=\"-1\"\n                class=\"tw-absolute tw-right-0 tw-bottom-0 tw-h-px tw-w-px tw-border-none tw-bg-transparent tw-opacity-0\"\n                #colorPicker\n                type=\"color\"\n                [ngModel]=\"customColor$ | async\"\n                (ngModelChange)=\"customColor$.next($event)\"\n              />\n            </span>\n          </span>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from \"@angular/core\";\nimport { BehaviorSubject, debounceTime, Subject, takeUntil } from \"rxjs\";\n\nimport { AvatarUpdateService } from \"@bitwarden/common/abstractions/account/avatar-update.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { ProfileResponse } from \"@bitwarden/common/models/response/profile.response\";\n\n@Component({\n  selector: \"app-change-avatar\",\n  templateUrl: \"change-avatar.component.html\",\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ChangeAvatarComponent implements OnInit, OnDestroy {\n  @Input() profile: ProfileResponse;\n\n  @Output() changeColor: EventEmitter<string | null> = new EventEmitter();\n  @Output() onSaved = new EventEmitter();\n\n  @ViewChild(\"colorPicker\") colorPickerElement: ElementRef<HTMLElement>;\n\n  loading = false;\n  error: string;\n  defaultColorPalette: NamedAvatarColor[] = [\n    { name: \"brightBlue\", color: \"#16cbfc\" },\n    { name: \"green\", color: \"#94cc4b\" },\n    { name: \"orange\", color: \"#ffb520\" },\n    { name: \"lavender\", color: \"#e5beed\" },\n    { name: \"yellow\", color: \"#fcff41\" },\n    { name: \"indigo\", color: \"#acbdf7\" },\n    { name: \"teal\", color: \"#8ecdc5\" },\n    { name: \"salmon\", color: \"#ffa3a3\" },\n    { name: \"pink\", color: \"#ffa2d4\" },\n  ];\n  customColorSelected = false;\n  currentSelection: string;\n\n  protected customColor$ = new BehaviorSubject<string | null>(null);\n  protected customTextColor$ = new BehaviorSubject<string>(\"#000000\");\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private accountUpdateService: AvatarUpdateService\n  ) {}\n\n  async ngOnInit() {\n    //localize the default colors\n    this.defaultColorPalette.forEach((c) => (c.name = this.i18nService.t(c.name)));\n\n    this.customColor$\n      .pipe(debounceTime(200), takeUntil(this.destroy$))\n      .subscribe((color: string | null) => {\n        if (color == null) {\n          return;\n        }\n        this.customTextColor$.next(Utils.pickTextColorBasedOnBgColor(color));\n        this.customColorSelected = true;\n        this.currentSelection = color;\n      });\n\n    this.setSelection(await this.accountUpdateService.loadColorFromState());\n  }\n\n  async showCustomPicker() {\n    this.customColorSelected = true;\n    this.colorPickerElement.nativeElement.click();\n    this.setSelection(this.customColor$.value);\n  }\n\n  async generateAvatarColor() {\n    Utils.stringToColor(this.profile.name.toString());\n  }\n\n  async submit() {\n    try {\n      if (Utils.validateHexColor(this.currentSelection) || this.currentSelection == null) {\n        await this.accountUpdateService.pushUpdate(this.currentSelection);\n        this.changeColor.emit(this.currentSelection);\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"avatarUpdated\"));\n      } else {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    } catch (e) {\n      this.logService.error(e);\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  async ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async setSelection(color: string | null) {\n    this.defaultColorPalette.filter((x) => x.selected).forEach((c) => (c.selected = false));\n\n    if (color == null) {\n      return;\n    }\n\n    color = color.toLowerCase();\n\n    this.customColorSelected = false;\n    //Allow for toggle\n    if (this.currentSelection === color) {\n      this.currentSelection = null;\n    } else {\n      const selectedColorIndex = this.defaultColorPalette.findIndex((c) => c.color === color);\n      if (selectedColorIndex !== -1) {\n        this.defaultColorPalette[selectedColorIndex].selected = true;\n        this.currentSelection = color;\n      } else {\n        this.customColor$.next(color);\n      }\n    }\n  }\n}\n\nexport class NamedAvatarColor {\n  name: string;\n  color: string;\n  selected? = false;\n}\n","<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"profile && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"profile.name\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">{{ \"email\" | i18n }}</label>\n        <input\n          id=\"email\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Email\"\n          [(ngModel)]=\"profile.email\"\n          readonly\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"mb-3\">\n        <dynamic-avatar text=\"{{ profile | userName }}\" [size]=\"'large'\"> </dynamic-avatar>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary tw-ml-3.5\"\n          appStopClick\n          appStopProp\n          (click)=\"openChangeAvatar()\"\n        >\n          <i class=\"bwi bwi-lg bwi-pencil-square\" aria-hidden=\"true\"></i>\n          Customize\n        </button>\n      </div>\n      <hr />\n      <p *ngIf=\"fingerprint\">\n        {{ \"yourAccountsFingerprint\" | i18n }}:\n        <a\n          href=\"https://bitwarden.com/help/fingerprint-phrase/\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i></a\n        ><br />\n        <code>{{ fingerprint }}</code>\n      </p>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n<ng-template #avatarModalTemplate></ng-template>\n","import { ViewChild, ViewContainerRef, Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UpdateProfileRequest } from \"@bitwarden/common/models/request/update-profile.request\";\nimport { ProfileResponse } from \"@bitwarden/common/models/response/profile.response\";\n\nimport { ChangeAvatarComponent } from \"./change-avatar.component\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"profile.component.html\",\n})\nexport class ProfileComponent implements OnInit, OnDestroy {\n  loading = true;\n  profile: ProfileResponse;\n  fingerprint: string;\n\n  formPromise: Promise<any>;\n  @ViewChild(\"avatarModalTemplate\", { read: ViewContainerRef, static: true })\n  avatarModalRef: ViewContainerRef;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private modalService: ModalService\n  ) {}\n\n  async ngOnInit() {\n    this.profile = await this.apiService.getProfile();\n    this.loading = false;\n    const fingerprint = await this.cryptoService.getFingerprint(\n      await this.stateService.getUserId()\n    );\n    if (fingerprint != null) {\n      this.fingerprint = fingerprint.join(\"-\");\n    }\n  }\n\n  async ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async openChangeAvatar() {\n    const modalOpened = await this.modalService.openViewRef(\n      ChangeAvatarComponent,\n      this.avatarModalRef,\n      (modal) => {\n        modal.profile = this.profile;\n        modal.changeColor.pipe(takeUntil(this.destroy$)).subscribe(() => {\n          modalOpened[0].close();\n        });\n      }\n    );\n  }\n\n  async submit() {\n    try {\n      const request = new UpdateProfileRequest(this.profile.name, this.profile.masterPasswordHint);\n      this.formPromise = this.apiService.putProfile(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"accountUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myAccount\" | i18n }}</h1>\n</div>\n<app-profile></app-profile>\n<ng-container *ngIf=\"showChangeEmail\">\n  <div class=\"secondary-header\">\n    <h1>{{ \"changeEmail\" | i18n }}</h1>\n  </div>\n  <app-change-email></app-change-email>\n</ng-container>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button bitButton buttonType=\"danger\" (click)=\"deauthorizeSessions()\">\n      {{ \"deauthorizeSessions\" | i18n }}\n    </button>\n    <button bitButton buttonType=\"danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n    <button bitButton buttonType=\"danger\" (click)=\"deleteAccount()\">\n      {{ \"deleteAccount\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deauthorizeSessionsTemplate></ng-template>\n<ng-template #purgeVaultTemplate></ng-template>\n<ng-template #deleteAccountTemplate></ng-template>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { DeauthorizeSessionsComponent } from \"./deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"./delete-account.component\";\nimport { PurgeVaultComponent } from \"./purge-vault.component\";\n\n@Component({\n  selector: \"app-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  @ViewChild(\"deauthorizeSessionsTemplate\", { read: ViewContainerRef, static: true })\n  deauthModalRef: ViewContainerRef;\n  @ViewChild(\"purgeVaultTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"deleteAccountTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  showChangeEmail = true;\n\n  constructor(\n    private modalService: ModalService,\n    private apiService: ApiService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeEmail = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async deauthorizeSessions() {\n    await this.modalService.openViewRef(DeauthorizeSessionsComponent, this.deauthModalRef);\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef);\n  }\n\n  async deleteAccount() {\n    await this.modalService.openViewRef(DeleteAccountComponent, this.deleteModalRef);\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\nimport { OrganizationPlansComponent } from \"./organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.plan === \"families\") {\n        this.orgPlansComponent.plan = PlanType.FamiliesAnnually;\n        this.orgPlansComponent.product = ProductType.Families;\n      } else if (qParams.plan === \"teams\") {\n        this.orgPlansComponent.plan = PlanType.TeamsAnnually;\n        this.orgPlansComponent.product = ProductType.Teams;\n      } else if (qParams.plan === \"enterprise\") {\n        this.orgPlansComponent.plan = PlanType.EnterpriseAnnually;\n        this.orgPlansComponent.product = ProductType.Enterprise;\n      }\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"page-header\">\n        <h1>{{ \"newOrganization\" | i18n }}</h1>\n      </div>\n      <p>{{ \"newOrganizationDesc\" | i18n }}</p>\n      <app-organization-plans></app-organization-plans>\n    </div>\n  </div>\n</div>\n","export class UpdateDomainsRequest {\n  equivalentDomains: string[][];\n  excludedGlobalEquivalentDomains: number[];\n}\n","<div class=\"page-header\">\n  <h1>{{ \"domainRules\" | i18n }}</h1>\n</div>\n<p>{{ \"domainRulesDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <h2>{{ \"customEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"!loading\">\n    <div class=\"form-group d-flex\" *ngFor=\"let d of custom; let i = index; trackBy: indexTrackBy\">\n      <div class=\"flex-fill\">\n        <label for=\"customDomain_{{ i }}\" class=\"sr-only\">{{\n          \"customDomainX\" | i18n: i + 1\n        }}</label>\n        <textarea\n          class=\"form-control\"\n          name=\"CustomDomain[{{ i }}]\"\n          id=\"customDomain_{{ i }}\"\n          [(ngModel)]=\"custom[i]\"\n          placeholder=\"{{ 'ex' | i18n }} google.com, gmail.com\"\n          required\n        ></textarea>\n      </div>\n      <button\n        type=\"button\"\n        class=\"btn btn-link text-danger ml-2\"\n        (click)=\"remove(i)\"\n        appA11yTitle=\"{{ 'remove' | i18n }}\"\n      >\n        <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <button type=\"button\" (click)=\"add()\" class=\"btn btn-outline-secondary btn-sm mb-2\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomDomain\" | i18n }}\n    </button>\n    <small class=\"text-muted d-block mb-3\">{{ \"newCustomDomainDesc\" | i18n }}</small>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n  <h2 class=\"spaced-header\">{{ \"globalEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <table class=\"table table-hover table-list\" *ngIf=\"!loading && global.length > 0\">\n    <tbody>\n      <tr *ngFor=\"let d of global\">\n        <td [ngClass]=\"{ 'table-list-strike': d.excluded }\">{{ d.domains }}</td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"!d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                {{ \"exclude\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-plus\" aria-hidden=\"true\"></i>\n                {{ \"include\" | i18n }}\n              </a>\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"customize(d)\">\n                <i class=\"bwi bwi-fw bwi-cut\" aria-hidden=\"true\"></i>\n                {{ \"customize\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UpdateDomainsRequest } from \"@bitwarden/common/models/request/update-domains.request\";\n\n@Component({\n  selector: \"app-domain-rules\",\n  templateUrl: \"domain-rules.component.html\",\n})\nexport class DomainRulesComponent implements OnInit {\n  loading = true;\n  custom: string[] = [];\n  global: any[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const response = await this.apiService.getSettingsDomains();\n    this.loading = false;\n    if (response.equivalentDomains != null) {\n      this.custom = response.equivalentDomains.map((d) => d.join(\", \"));\n    }\n    if (response.globalEquivalentDomains != null) {\n      this.global = response.globalEquivalentDomains.map((d) => {\n        return {\n          domains: d.domains.join(\", \"),\n          excluded: d.excluded,\n          key: d.type,\n        };\n      });\n    }\n  }\n\n  toggleExcluded(globalDomain: any) {\n    globalDomain.excluded = !globalDomain.excluded;\n  }\n\n  customize(globalDomain: any) {\n    globalDomain.excluded = true;\n    this.custom.push(globalDomain.domains);\n  }\n\n  remove(index: number) {\n    this.custom.splice(index, 1);\n  }\n\n  add() {\n    this.custom.push(\"\");\n  }\n\n  async submit() {\n    const request = new UpdateDomainsRequest();\n    request.excludedGlobalEquivalentDomains = this.global\n      .filter((d) => d.excluded)\n      .map((d) => d.key);\n    if (request.excludedGlobalEquivalentDomains.length === 0) {\n      request.excludedGlobalEquivalentDomains = null;\n    }\n    request.equivalentDomains = this.custom\n      .filter((d) => d != null && d.trim() !== \"\")\n      .map((d) => d.split(\",\").map((d2) => d2.trim()));\n    if (request.equivalentDomains.length === 0) {\n      request.equivalentDomains = null;\n    }\n\n    try {\n      this.formPromise = this.apiService.putSettingsDomains(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"domainsUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  indexTrackBy(index: number, obj: any): any {\n    return index;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachment.view\";\n\n@Component({\n  selector: \"emergency-access-attachments\",\n  templateUrl: \"../vault/attachments.component.html\",\n})\nexport class EmergencyAccessAttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = true;\n  canAccessAttachments = true;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  protected async init() {\n    // Do nothing since cipher is already decoded\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return false;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../vault/add-edit.component.html\",\n})\nexport class EmergencyAddEditComponent extends BaseAddEditComponent {\n  originalCipher: Cipher = null;\n  viewOnly = true;\n  protected override componentName = \"app-org-vault-add-edit\";\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    messagingService: MessagingService,\n    eventCollectionService: EventCollectionService,\n    policyService: PolicyService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventCollectionService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  async load() {\n    this.title = this.i18nService.t(\"viewItem\");\n  }\n\n  protected async loadCipher() {\n    return Promise.resolve(this.originalCipher);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"vault\" | i18n }}</h1>\n</div>\n<div class=\"mt-4\">\n  <ng-container *ngIf=\"ciphers.length\">\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown *ngIf=\"c.hasAttachments\">\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"viewAttachments(c)\">\n                  <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n                  {{ \"attachments\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #attachments></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipher.data\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { EmergencyAccessViewResponse } from \"@bitwarden/common/models/response/emergency-access.response\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { EmergencyAccessAttachmentsComponent } from \"./emergency-access-attachments.component\";\nimport { EmergencyAddEditComponent } from \"./emergency-add-edit.component\";\n\n@Component({\n  selector: \"emergency-access-view\",\n  templateUrl: \"emergency-access-view.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EmergencyAccessViewComponent implements OnInit {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n\n  id: string;\n  ciphers: CipherView[] = [];\n  loaded = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private modalService: ModalService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private apiService: ApiService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.route.params.subscribe((qParams) => {\n      if (qParams.id == null) {\n        return this.router.navigate([\"settings/emergency-access\"]);\n      }\n\n      this.id = qParams.id;\n\n      this.load();\n    });\n  }\n\n  async selectCipher(cipher: CipherView) {\n    // eslint-disable-next-line\n    const [_, childComponent] = await this.modalService.openViewRef(\n      EmergencyAddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.cipher = cipher;\n      }\n    );\n\n    return childComponent;\n  }\n\n  async load() {\n    const response = await this.apiService.postEmergencyAccessView(this.id);\n    this.ciphers = await this.getAllCiphers(response);\n    this.loaded = true;\n  }\n\n  async viewAttachments(cipher: CipherView) {\n    await this.modalService.openViewRef(\n      EmergencyAccessAttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipher = cipher;\n        comp.emergencyAccessId = this.id;\n      }\n    );\n  }\n\n  protected async getAllCiphers(response: EmergencyAccessViewResponse): Promise<CipherView[]> {\n    const ciphers = response.ciphers;\n\n    const decCiphers: CipherView[] = [];\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(response.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    const promises: any[] = [];\n    ciphers.forEach((cipherResponse) => {\n      const cipherData = new CipherData(cipherResponse);\n      const cipher = new Cipher(cipherData);\n      promises.push(cipher.decrypt(oldEncKey).then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.cipherService.getLocaleSortingFunction());\n\n    return decCiphers;\n  }\n}\n","export enum EmergencyAccessStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  RecoveryInitiated = 3,\n  RecoveryApproved = 4,\n}\n","export enum EmergencyAccessType {\n  View = 0,\n  Takeover = 1,\n}\n","export class EmergencyAccessConfirmRequest {\n  key: string;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessInviteRequest {\n  email: string;\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessUpdateRequest {\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n  keyEncrypted?: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"userAddEditTitle\">\n          <app-premium-badge *ngIf=\"readOnly\"></app-premium-badge>\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteEmergencyContactDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"email\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n            />\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userAccess\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/emergency-access/#user-access\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeView\"\n            [value]=\"emergencyAccessType.View\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeView\">\n            {{ \"view\" | i18n }}\n            <small>{{ \"viewDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeTakeover\"\n            [value]=\"emergencyAccessType.Takeover\"\n            [(ngModel)]=\"type\"\n            [disabled]=\"readOnly\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeTakeover\">\n            {{ \"takeover\" | i18n }}\n            <small>{{ \"takeoverDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-group col-6 mt-4\">\n          <label for=\"waitTime\">{{ \"waitTime\" | i18n }}</label>\n          <select\n            id=\"waitTime\"\n            name=\"waitTime\"\n            [(ngModel)]=\"waitTime\"\n            class=\"form-control\"\n            [disabled]=\"readOnly\"\n          >\n            <option *ngFor=\"let o of waitTimes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n          <small class=\"text-muted\">{{ \"waitTimeDesc\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          buttonType=\"primary\"\n          bitButton\n          [loading]=\"loading || form.loading\"\n          [disabled]=\"readOnly\"\n        >\n          {{ \"save\" | i18n }}\n        </button>\n        <button bitButton buttonType=\"secondary\" type=\"button\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            bitButton\n            buttonType=\"danger\"\n            type=\"button\"\n            (click)=\"delete()\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"$any(deleteBtn).loading\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EmergencyAccessType } from \"@bitwarden/common/enums/emergencyAccessType\";\nimport { EmergencyAccessInviteRequest } from \"@bitwarden/common/models/request/emergency-access-invite.request\";\nimport { EmergencyAccessUpdateRequest } from \"@bitwarden/common/models/request/emergency-access-update.request\";\n\n@Component({\n  selector: \"emergency-access-add-edit\",\n  templateUrl: \"emergency-access-add-edit.component.html\",\n})\nexport class EmergencyAccessAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() emergencyAccessId: string;\n  @Output() onSaved = new EventEmitter();\n  @Output() onDeleted = new EventEmitter();\n\n  loading = true;\n  readOnly = false;\n  editMode = false;\n  title: string;\n  email: string;\n  type: EmergencyAccessType = EmergencyAccessType.View;\n\n  formPromise: Promise<any>;\n\n  emergencyAccessType = EmergencyAccessType;\n  waitTimes: { name: string; value: number }[];\n  waitTime: number;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.emergencyAccessId != null;\n\n    this.waitTimes = [\n      { name: this.i18nService.t(\"oneDay\"), value: 1 },\n      { name: this.i18nService.t(\"days\", \"2\"), value: 2 },\n      { name: this.i18nService.t(\"days\", \"7\"), value: 7 },\n      { name: this.i18nService.t(\"days\", \"14\"), value: 14 },\n      { name: this.i18nService.t(\"days\", \"30\"), value: 30 },\n      { name: this.i18nService.t(\"days\", \"90\"), value: 90 },\n    ];\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editEmergencyContact\");\n      try {\n        const emergencyAccess = await this.apiService.getEmergencyAccess(this.emergencyAccessId);\n        this.type = emergencyAccess.type;\n        this.waitTime = emergencyAccess.waitTimeDays;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteEmergencyContact\");\n      this.waitTime = this.waitTimes[2].value;\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new EmergencyAccessUpdateRequest();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.putEmergencyAccess(this.emergencyAccessId, request);\n      } else {\n        const request = new EmergencyAccessInviteRequest();\n        request.email = this.email.trim();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.postEmergencyAccessInvite(request);\n      }\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSaved.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    this.onDeleted.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"emergency-access-confirm\",\n  templateUrl: \"emergency-access-confirm.component.html\",\n})\nexport class EmergencyAccessConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() emergencyAccessId: string;\n  @Input() formPromise: Promise<any>;\n  @Output() onConfirmed = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n\n  constructor(\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(this.userId);\n      if (publicKeyResponse != null) {\n        const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n        const fingerprint = await this.cryptoService.getFingerprint(this.userId, publicKey.buffer);\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    try {\n      this.onConfirmed.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export class EmergencyAccessPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ \"takeover\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPassword\"\n                type=\"password\"\n                name=\"NewMasterPasswordHash\"\n                class=\"form-control mb-1\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <app-password-strength\n                [password]=\"masterPassword\"\n                [email]=\"email\"\n                [showText]=\"true\"\n                (passwordStrengthResult)=\"getStrengthResult($event)\"\n              >\n              </app-password-strength>\n            </div>\n          </div>\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"password\"\n                name=\"MasterPasswordRetype\"\n                class=\"form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { takeUntil } from \"rxjs\";\n\nimport { ChangePasswordComponent } from \"@bitwarden/angular/components/change-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policy.data\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { EmergencyAccessPasswordRequest } from \"@bitwarden/common/models/request/emergency-access-password.request\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\n@Component({\n  selector: \"emergency-access-takeover\",\n  templateUrl: \"emergency-access-takeover.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EmergencyAccessTakeoverComponent\n  extends ChangePasswordComponent\n  implements OnInit, OnDestroy\n{\n  @Output() onDone = new EventEmitter();\n  @Input() emergencyAccessId: string;\n  @Input() name: string;\n  @Input() email: string;\n  @Input() kdf: KdfType;\n  @Input() kdfIterations: number;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private apiService: ApiService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    const response = await this.apiService.getEmergencyGrantorPolicies(this.emergencyAccessId);\n    if (response.data != null && response.data.length > 0) {\n      const policies = response.data.map(\n        (policyResponse: PolicyResponse) => new Policy(new PolicyData(policyResponse))\n      );\n\n      this.policyService\n        .masterPasswordPolicyOptions$(policies)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((enforcedPolicyOptions) => (this.enforcedPolicyOptions = enforcedPolicyOptions));\n    }\n  }\n\n  // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    const takeoverResponse = await this.apiService.postEmergencyAccessTakeover(\n      this.emergencyAccessId\n    );\n\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(takeoverResponse.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    if (oldEncKey == null) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"unexpectedError\")\n      );\n      return;\n    }\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      takeoverResponse.kdf,\n      takeoverResponse.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    const encKey = await this.cryptoService.remakeEncKey(key, oldEncKey);\n\n    const request = new EmergencyAccessPasswordRequest();\n    request.newMasterPasswordHash = masterPasswordHash;\n    request.key = encKey[1].encryptedString;\n\n    this.apiService.postEmergencyAccessPassword(this.emergencyAccessId, request);\n\n    try {\n      this.onDone.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"emergencyAccess\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"emergencyAccessDesc\" | i18n }}\n  <a href=\"https://bitwarden.com/help/emergency-access/\" target=\"_blank\" rel=\"noopener\">\n    {{ \"learnMore\" | i18n }}.\n  </a>\n</p>\n\n<p *ngIf=\"isOrganizationOwner\">\n  <b>{{ \"warning\" | i18n }}:</b> {{ \"emergencyAccessOwnerWarning\" | i18n }}\n</p>\n\n<div class=\"page-header d-flex\">\n  <h2>\n    {{ \"trustedEmergencyContacts\" | i18n }}\n    <app-premium-badge></app-premium-badge>\n  </h2>\n  <div class=\"ml-auto d-flex\">\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      type=\"button\"\n      (click)=\"invite()\"\n      [disabled]=\"!canAccessPremium\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-plus bwi-fw\"></i>\n      {{ \"addEmergencyContact\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"trustedContacts && trustedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of trustedContacts; let i = index\">\n      <td width=\"30\">\n        <bit-avatar [text]=\"c | userName\" [id]=\"c.granteeId\" size=\"small\"></bit-avatar>\n      </td>\n      <td>\n        <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.email }}</a>\n        <span\n          bitBadge\n          badgeType=\"secondary\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n          >{{ \"invited\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n          >{{ \"accepted\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span bitBadge *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\">{{\n          \"emergencyAccessRecoveryApproved\" | i18n\n        }}</span>\n\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.View\">{{ \"view\" | i18n }}</span>\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <button\n          [bitMenuTriggerFor]=\"trustedContactOptions\"\n          class=\"tw-border-none tw-bg-transparent tw-text-main\"\n          type=\"button\"\n          appA11yTitle=\"{{ 'options' | i18n }}\"\n        >\n          <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu #trustedContactOptions>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n            (click)=\"reinvite(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n            {{ \"resendInvitation\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n            (click)=\"confirm(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n            {{ \"confirm\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n            (click)=\"approve(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n            {{ \"approve\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryInitiated ||\n              c.status === emergencyAccessStatusType.RecoveryApproved\n            \"\n            (click)=\"reject(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"reject\" | i18n }}\n          </button>\n          <button bitMenuItem (click)=\"remove(c)\">\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"remove\" | i18n }}\n          </button>\n        </bit-menu>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-container *ngIf=\"!trustedContacts || !trustedContacts.length\">\n  <p *ngIf=\"loaded\">{{ \"noTrustedContacts\" | i18n }}</p>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</ng-container>\n\n<div class=\"page-header spaced-header\">\n  <h2>{{ \"designatedEmergencyContacts\" | i18n }}</h2>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"grantedContacts && grantedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of grantedContacts; let i = index\">\n      <td width=\"30\">\n        <bit-avatar [text]=\"c | userName\" [id]=\"c.grantorId\" size=\"small\"></bit-avatar>\n      </td>\n      <td>\n        <span>{{ c.email }}</span>\n        <span bitBadge *ngIf=\"c.status === emergencyAccessStatusType.Invited\">{{\n          \"invited\" | i18n\n        }}</span>\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n          >{{ \"accepted\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"success\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\"\n          >{{ \"emergencyAccessRecoveryApproved\" | i18n }}</span\n        >\n\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.View\">{{ \"view\" | i18n }}</span>\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <button\n          [bitMenuTriggerFor]=\"grantedContactOptions\"\n          class=\"tw-border-none tw-bg-transparent tw-text-main\"\n          type=\"button\"\n          appA11yTitle=\"{{ 'options' | i18n }}\"\n        >\n          <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu #grantedContactOptions>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Confirmed\"\n            (click)=\"requestAccess(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n            {{ \"requestAccess\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryApproved &&\n              c.type === emergencyAccessType.Takeover\n            \"\n            (click)=\"takeover(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n            {{ \"takeover\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryApproved &&\n              c.type === emergencyAccessType.View\n            \"\n            [routerLink]=\"c.id\"\n          >\n            <i class=\"bwi bwi-fw bwi-eye\" aria-hidden=\"true\"></i>\n            {{ \"view\" | i18n }}\n          </button>\n          <button bitMenuItem (click)=\"remove(c)\">\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"remove\" | i18n }}\n          </button>\n        </bit-menu>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-container *ngIf=\"!grantedContacts || !grantedContacts.length\">\n  <p *ngIf=\"loaded\">{{ \"noGrantedAccess\" | i18n }}</p>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</ng-container>\n\n<ng-template #addEdit></ng-template>\n<ng-template #takeoverTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EmergencyAccessStatusType } from \"@bitwarden/common/enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"@bitwarden/common/enums/emergencyAccessType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EmergencyAccessConfirmRequest } from \"@bitwarden/common/models/request/emergency-access-confirm.request\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n} from \"@bitwarden/common/models/response/emergency-access.response\";\n\nimport { EmergencyAccessAddEditComponent } from \"./emergency-access-add-edit.component\";\nimport { EmergencyAccessConfirmComponent } from \"./emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"./emergency-access-takeover.component\";\n\n@Component({\n  selector: \"emergency-access\",\n  templateUrl: \"emergency-access.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EmergencyAccessComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"takeoverTemplate\", { read: ViewContainerRef, static: true })\n  takeoverModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  loaded = false;\n  canAccessPremium: boolean;\n  trustedContacts: EmergencyAccessGranteeDetailsResponse[];\n  grantedContacts: EmergencyAccessGrantorDetailsResponse[];\n  emergencyAccessType = EmergencyAccessType;\n  emergencyAccessStatusType = EmergencyAccessStatusType;\n  actionPromise: Promise<any>;\n  isOrganizationOwner: boolean;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const orgs = await this.organizationService.getAll();\n    this.isOrganizationOwner = orgs.some((o) => o.isOwner);\n    this.load();\n  }\n\n  async load() {\n    this.trustedContacts = (await this.apiService.getEmergencyAccessTrusted()).data;\n    this.grantedContacts = (await this.apiService.getEmergencyAccessGranted()).data;\n    this.loaded = true;\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  async edit(details: EmergencyAccessGranteeDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.emergencyAccessId = details?.id;\n        comp.readOnly = !this.canAccessPremium;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSaved.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeleted.subscribe(() => {\n          modal.close();\n          this.remove(details);\n        });\n      }\n    );\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  async reinvite(contact: EmergencyAccessGranteeDetailsResponse) {\n    if (this.actionPromise != null) {\n      return;\n    }\n    this.actionPromise = this.apiService.postEmergencyAccessReinvite(contact.id);\n    await this.actionPromise;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenReinvited\", contact.email)\n    );\n    this.actionPromise = null;\n  }\n\n  async confirm(contact: EmergencyAccessGranteeDetailsResponse) {\n    function updateUser() {\n      contact.status = EmergencyAccessStatusType.Confirmed;\n    }\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n    if (autoConfirm == null || !autoConfirm) {\n      const [modal] = await this.modalService.openViewRef(\n        EmergencyAccessConfirmComponent,\n        this.confirmModalRef,\n        (comp) => {\n          comp.name = this.userNamePipe.transform(contact);\n          comp.emergencyAccessId = contact.id;\n          comp.userId = contact?.granteeId;\n          // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n          comp.onConfirmed.subscribe(async () => {\n            modal.close();\n\n            comp.formPromise = this.doConfirmation(contact);\n            await comp.formPromise;\n\n            updateUser();\n            this.platformUtilsService.showToast(\n              \"success\",\n              null,\n              this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n            );\n          });\n        }\n      );\n      return;\n    }\n\n    this.actionPromise = this.doConfirmation(contact);\n    await this.actionPromise;\n    updateUser();\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n    );\n    this.actionPromise = null;\n  }\n\n  async remove(\n    details: EmergencyAccessGranteeDetailsResponse | EmergencyAccessGrantorDetailsResponse\n  ) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteEmergencyAccess(details.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(details))\n      );\n\n      if (details instanceof EmergencyAccessGranteeDetailsResponse) {\n        this.removeGrantee(details);\n      } else {\n        this.removeGrantor(details);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async requestAccess(details: EmergencyAccessGrantorDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"requestAccessConfirmation\", details.waitTimeDays.toString()),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"requestAccess\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessInitiate(details.id);\n\n    details.status = EmergencyAccessStatusType.RecoveryInitiated;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"requestSent\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async approve(details: EmergencyAccessGranteeDetailsResponse) {\n    const type = this.i18nService.t(\n      details.type === EmergencyAccessType.View ? \"view\" : \"takeover\"\n    );\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"approveAccessConfirmation\", this.userNamePipe.transform(details), type),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"approve\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessApprove(details.id);\n    details.status = EmergencyAccessStatusType.RecoveryApproved;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyApproved\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async reject(details: EmergencyAccessGranteeDetailsResponse) {\n    await this.apiService.postEmergencyAccessReject(details.id);\n    details.status = EmergencyAccessStatusType.Confirmed;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyRejected\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async takeover(details: EmergencyAccessGrantorDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessTakeoverComponent,\n      this.takeoverModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.email = details.email;\n        comp.emergencyAccessId = details != null ? details.id : null;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDone.subscribe(() => {\n          modal.close();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"passwordResetFor\", this.userNamePipe.transform(details))\n          );\n        });\n      }\n    );\n  }\n\n  private removeGrantee(details: EmergencyAccessGranteeDetailsResponse) {\n    const index = this.trustedContacts.indexOf(details);\n    if (index > -1) {\n      this.trustedContacts.splice(index, 1);\n    }\n  }\n\n  private removeGrantor(details: EmergencyAccessGrantorDetailsResponse) {\n    const index = this.grantedContacts.indexOf(details);\n    if (index > -1) {\n      this.grantedContacts.splice(index, 1);\n    }\n  }\n\n  // Encrypt the master password hash using the grantees public key, and send it to bitwarden for escrow.\n  private async doConfirmation(details: EmergencyAccessGranteeDetailsResponse) {\n    const encKey = await this.cryptoService.getEncKey();\n    const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n    const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n    try {\n      this.logService.debug(\n        \"User's fingerprint: \" +\n          (await this.cryptoService.getFingerprint(details.granteeId, publicKey.buffer)).join(\"-\")\n      );\n    } catch {\n      // Ignore errors since it's just a debug message\n    }\n\n    const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n    const request = new EmergencyAccessConfirmRequest();\n    request.key = encryptedKey.encryptedString;\n    await this.apiService.postEmergencyAccessConfirm(details.id, request);\n  }\n}\n","import { Directive, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormBuilder,\n  ValidationErrors,\n  Validator,\n} from \"@angular/forms\";\nimport { combineLatestWith, Subject, takeUntil } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\n@Directive()\nexport class VaultTimeoutInputComponent\n  implements ControlValueAccessor, Validator, OnInit, OnDestroy\n{\n  get showCustom() {\n    return this.form.get(\"vaultTimeout\").value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n  }\n\n  get exceedsMinimumTimout(): boolean {\n    return (\n      !this.showCustom || this.customTimeInMinutes() > VaultTimeoutInputComponent.MIN_CUSTOM_MINUTES\n    );\n  }\n\n  static CUSTOM_VALUE = -100;\n  static MIN_CUSTOM_MINUTES = 0;\n\n  form = this.formBuilder.group({\n    vaultTimeout: [null],\n    custom: this.formBuilder.group({\n      hours: [null],\n      minutes: [null],\n    }),\n  });\n\n  @Input() vaultTimeouts: { name: string; value: number }[];\n  vaultTimeoutPolicy: Policy;\n  vaultTimeoutPolicyHours: number;\n  vaultTimeoutPolicyMinutes: number;\n\n  private onChange: (vaultTimeout: number) => void;\n  private validatorChange: () => void;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.MaximumVaultTimeout)\n      .pipe(combineLatestWith(this.policyService.policies$), takeUntil(this.destroy$))\n      .subscribe(([policyAppliesToActiveUser, policies]) => {\n        if (policyAppliesToActiveUser) {\n          const vaultTimeoutPolicy = policies.find(\n            (policy) => policy.type === PolicyType.MaximumVaultTimeout && policy.enabled\n          );\n\n          this.vaultTimeoutPolicy = vaultTimeoutPolicy;\n          this.applyVaultTimeoutPolicy();\n        }\n      });\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.form.valueChanges.subscribe(async (value) => {\n      this.onChange(this.getVaultTimeout(value));\n    });\n\n    // Assign the previous value to the custom fields\n    this.form.get(\"vaultTimeout\").valueChanges.subscribe((value) => {\n      if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n        return;\n      }\n\n      const current = Math.max(this.form.value.vaultTimeout, 0);\n      this.form.patchValue({\n        custom: {\n          hours: Math.floor(current / 60),\n          minutes: current % 60,\n        },\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngOnChanges() {\n    this.vaultTimeouts.push({\n      name: this.i18nService.t(\"custom\"),\n      value: VaultTimeoutInputComponent.CUSTOM_VALUE,\n    });\n  }\n\n  getVaultTimeout(value: any) {\n    if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n      return value.vaultTimeout;\n    }\n\n    return value.custom.hours * 60 + value.custom.minutes;\n  }\n\n  writeValue(value: number): void {\n    if (value == null) {\n      return;\n    }\n\n    if (this.vaultTimeouts.every((p) => p.value !== value)) {\n      this.form.setValue({\n        vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n        custom: {\n          hours: Math.floor(value / 60),\n          minutes: value % 60,\n        },\n      });\n      return;\n    }\n\n    this.form.patchValue({\n      vaultTimeout: value,\n    });\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: any): void {\n    // Empty\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Empty\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n      return { policyError: true };\n    }\n\n    if (!this.exceedsMinimumTimout) {\n      return { minTimeoutError: true };\n    }\n\n    return null;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n\n  private customTimeInMinutes() {\n    return this.form.value.custom.hours * 60 + this.form.value.custom.minutes;\n  }\n\n  private applyVaultTimeoutPolicy() {\n    this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n    this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n    this.vaultTimeouts = this.vaultTimeouts.filter(\n      (t) =>\n        t.value <= this.vaultTimeoutPolicy.data.minutes &&\n        (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n        t.value != null\n    );\n    this.validatorChange();\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\">\n  {{ \"vaultTimeoutPolicyInEffect\" | i18n: vaultTimeoutPolicyHours:vaultTimeoutPolicyMinutes }}\n</app-callout>\n\n<div [formGroup]=\"form\">\n  <div class=\"form-group\">\n    <label for=\"vaultTimeout\">{{ \"vaultTimeout\" | i18n }}</label>\n    <select\n      id=\"vaultTimeout\"\n      name=\"VaultTimeout\"\n      formControlName=\"vaultTimeout\"\n      class=\"form-control\"\n    >\n      <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{ o.name }}</option>\n    </select>\n    <small class=\"form-text text-muted\">{{ \"vaultTimeoutDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\" *ngIf=\"showCustom\" formGroupName=\"custom\">\n    <label for=\"customVaultTimeout\">{{ \"customVaultTimeout\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n\n    <small *ngIf=\"!exceedsMinimumTimout\" class=\"tw-text-danger\">\n      <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i> {{ \"vaultCustomTimeoutMinimum\" | i18n }}\n    </small>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VaultTimeoutInputComponent as VaultTimeoutInputComponentBase } from \"@bitwarden/angular/components/settings/vault-timeout-input.component\";\n\n@Component({\n  selector: \"app-vault-timeout-input\",\n  templateUrl: \"vault-timeout-input.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n  ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {}\n","<div class=\"page-header\">\n  <h1>{{ \"preferences\" | i18n }}</h1>\n</div>\n<p>{{ \"preferencesDesc\" | i18n }}</p>\n<form (ngSubmit)=\"submit()\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <app-vault-timeout-input\n        [vaultTimeouts]=\"vaultTimeouts\"\n        [formControl]=\"vaultTimeout\"\n        ngDefaultControl\n      >\n      </app-vault-timeout-input>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label>{{ \"vaultTimeoutAction\" | i18n }}</label>\n    <div class=\"form-check form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLock\"\n        value=\"lock\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLock\">\n        {{ \"lock\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLockDesc\" | i18n }}</small>\n      </label>\n    </div>\n    <div class=\"form-check mt-2 form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLogOut\"\n        value=\"logOut\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n        (ngModelChange)=\"vaultTimeoutActionChanged($event)\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLogOut\">\n        {{ \"logOut\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLogOutDesc\" | i18n }}</small>\n      </label>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <div class=\"d-flex\">\n          <label for=\"locale\">{{ \"language\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/localization/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <select id=\"locale\" name=\"Locale\" [(ngModel)]=\"locale\" class=\"form-control\">\n          <option *ngFor=\"let o of localeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"languageDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFavicons\"\n        name=\"enableFavicons\"\n        [(ngModel)]=\"enableFavicons\"\n      />\n      <label class=\"form-check-label\" for=\"enableFavicons\">\n        {{ \"enableFavicon\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/website-icons/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"faviconDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFullWidth\"\n        name=\"enableFullWidth\"\n        [(ngModel)]=\"enableFullWidth\"\n      />\n      <label class=\"form-check-label\" for=\"enableFullWidth\">\n        {{ \"enableFullWidth\" | i18n }}\n      </label>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"enableFullWidthDesc\" | i18n }}</small>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"theme\">{{ \"theme\" | i18n }}</label>\n        <select id=\"theme\" name=\"theme\" [(ngModel)]=\"theme\" class=\"form-control\">\n          <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"themeDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormControl } from \"@angular/forms\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-preferences\",\n  templateUrl: \"preferences.component.html\",\n})\nexport class PreferencesComponent implements OnInit {\n  vaultTimeoutAction = \"lock\";\n  enableFavicons: boolean;\n  enableFullWidth: boolean;\n  theme: ThemeType;\n  locale: string;\n  vaultTimeouts: { name: string; value: number }[];\n  localeOptions: any[];\n  themeOptions: any[];\n\n  vaultTimeout: UntypedFormControl = new UntypedFormControl(null);\n\n  private startingLocale: string;\n  private startingTheme: ThemeType;\n\n  constructor(\n    private stateService: StateService,\n    private i18nService: I18nService,\n    private vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    private platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private themingService: AbstractThemingService\n  ) {\n    this.vaultTimeouts = [\n      { name: i18nService.t(\"oneMinute\"), value: 1 },\n      { name: i18nService.t(\"fiveMinutes\"), value: 5 },\n      { name: i18nService.t(\"fifteenMinutes\"), value: 15 },\n      { name: i18nService.t(\"thirtyMinutes\"), value: 30 },\n      { name: i18nService.t(\"oneHour\"), value: 60 },\n      { name: i18nService.t(\"fourHours\"), value: 240 },\n      { name: i18nService.t(\"onRefresh\"), value: -1 },\n    ];\n    if (this.platformUtilsService.isDev()) {\n      this.vaultTimeouts.push({ name: i18nService.t(\"never\"), value: null });\n    }\n\n    const localeOptions: any[] = [];\n    i18nService.supportedTranslationLocales.forEach((locale) => {\n      let name = locale;\n      if (i18nService.localeNames.has(locale)) {\n        name += \" - \" + i18nService.localeNames.get(locale);\n      }\n      localeOptions.push({ name: name, value: locale });\n    });\n    localeOptions.sort(Utils.getSortFunction(i18nService, \"name\"));\n    localeOptions.splice(0, 0, { name: i18nService.t(\"default\"), value: null });\n    this.localeOptions = localeOptions;\n    this.themeOptions = [\n      { name: i18nService.t(\"themeLight\"), value: ThemeType.Light },\n      { name: i18nService.t(\"themeDark\"), value: ThemeType.Dark },\n      { name: i18nService.t(\"themeSystem\"), value: ThemeType.System },\n    ];\n  }\n\n  async ngOnInit() {\n    this.vaultTimeout.setValue(await this.vaultTimeoutSettingsService.getVaultTimeout());\n    this.vaultTimeoutAction = await this.stateService.getVaultTimeoutAction();\n    this.enableFavicons = !(await this.stateService.getDisableFavicon());\n    this.enableFullWidth = await this.stateService.getEnableFullWidth();\n\n    this.locale = (await this.stateService.getLocale()) ?? null;\n    this.startingLocale = this.locale;\n\n    this.theme = await this.stateService.getTheme();\n    this.startingTheme = this.theme;\n  }\n\n  async submit() {\n    if (!this.vaultTimeout.valid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"vaultTimeoutRangeError\")\n      );\n      return;\n    }\n\n    await this.vaultTimeoutSettingsService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n    await this.stateService.setDisableFavicon(!this.enableFavicons);\n    await this.stateService.setEnableFullWidth(this.enableFullWidth);\n    this.messagingService.send(\"setFullWidth\");\n    if (this.theme !== this.startingTheme) {\n      await this.themingService.updateConfiguredTheme(this.theme);\n      this.startingTheme = this.theme;\n    }\n    await this.stateService.setLocale(this.locale);\n    if (this.locale !== this.startingLocale) {\n      window.location.reload();\n    } else {\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"preferencesUpdated\")\n      );\n    }\n  }\n\n  async vaultTimeoutActionChanged(newValue: string) {\n    if (newValue === \"logOut\") {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmation\"),\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmationTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeoutAction = \"lock\";\n        return;\n      }\n    }\n    this.vaultTimeoutAction = newValue;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nimport { FolderRequest } from \"./folder.request\";\n\nexport class FolderWithIdRequest extends FolderRequest {\n  id: string;\n\n  constructor(folder: Folder) {\n    super(folder);\n    this.id = folder.id;\n  }\n}\n","import { Send } from \"../domain/send\";\n\nimport { SendRequest } from \"./send.request\";\n\nexport class SendWithIdRequest extends SendRequest {\n  id: string;\n\n  constructor(send: Send) {\n    super(send);\n    this.id = send.id;\n  }\n}\n","import { CipherWithIdRequest } from \"./cipher-with-id.request\";\nimport { FolderWithIdRequest } from \"./folder-with-id.request\";\nimport { SendWithIdRequest } from \"./send-with-id.request\";\n\nexport class UpdateKeyRequest {\n  ciphers: CipherWithIdRequest[] = [];\n  folders: FolderWithIdRequest[] = [];\n  sends: SendWithIdRequest[] = [];\n  masterPasswordHash: string;\n  privateKey: string;\n  key: string;\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"changeMasterPassword\" | i18n }}</h1>\n</div>\n\n<bit-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</bit-callout>\n<app-callout\n  type=\"info\"\n  [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n  *ngIf=\"enforcedPolicyOptions\"\n>\n</app-callout>\n\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n        <input\n          id=\"currentMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"currentMasterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n        <input\n          id=\"newMasterPassword\"\n          type=\"password\"\n          name=\"NewMasterPasswordHash\"\n          class=\"form-control mb-1\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n        <app-password-strength\n          [password]=\"masterPassword\"\n          [email]=\"email\"\n          [showText]=\"true\"\n          (passwordStrengthResult)=\"getStrengthResult($event)\"\n        >\n        </app-password-strength>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n        <input\n          id=\"masterPasswordRetype\"\n          type=\"password\"\n          name=\"MasterPasswordRetype\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPasswordRetype\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"masterPasswordHint\">{{ \"masterPassHintLabel\" | i18n }}</label>\n    <input\n      id=\"masterPasswordHint\"\n      class=\"form-control\"\n      maxlength=\"50\"\n      type=\"text\"\n      name=\"MasterPasswordHint\"\n      [(ngModel)]=\"masterPasswordHint\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"rotateEncKey\"\n        name=\"RotateEncKey\"\n        [(ngModel)]=\"rotateEncKey\"\n        (change)=\"rotateEncKeyClicked()\"\n      />\n      <label class=\"form-check-label\" for=\"rotateEncKey\">\n        {{ \"rotateAccountEncKey\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"changeMasterPassword\" | i18n }}\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"@bitwarden/angular/components/change-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EmergencyAccessStatusType } from \"@bitwarden/common/enums/emergencyAccessStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { CipherWithIdRequest } from \"@bitwarden/common/models/request/cipher-with-id.request\";\nimport { EmergencyAccessUpdateRequest } from \"@bitwarden/common/models/request/emergency-access-update.request\";\nimport { FolderWithIdRequest } from \"@bitwarden/common/models/request/folder-with-id.request\";\nimport { PasswordRequest } from \"@bitwarden/common/models/request/password.request\";\nimport { SendWithIdRequest } from \"@bitwarden/common/models/request/send-with-id.request\";\nimport { UpdateKeyRequest } from \"@bitwarden/common/models/request/update-key.request\";\n\n@Component({\n  selector: \"app-change-password\",\n  templateUrl: \"change-password.component.html\",\n})\nexport class ChangePasswordComponent extends BaseChangePasswordComponent {\n  rotateEncKey = false;\n  currentMasterPassword: string;\n  masterPasswordHint: string;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private syncService: SyncService,\n    private apiService: ApiService,\n    private sendService: SendService,\n    private organizationService: OrganizationService,\n    private keyConnectorService: KeyConnectorService,\n    private router: Router,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      this.router.navigate([\"/settings/security/two-factor\"]);\n    }\n\n    this.masterPasswordHint = (await this.apiService.getProfile()).masterPasswordHint;\n    await super.ngOnInit();\n  }\n\n  async rotateEncKeyClicked() {\n    if (this.rotateEncKey) {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      let hasOldAttachments = false;\n      if (ciphers != null) {\n        for (let i = 0; i < ciphers.length; i++) {\n          if (ciphers[i].organizationId == null && ciphers[i].hasOldAttachments) {\n            hasOldAttachments = true;\n            break;\n          }\n        }\n      }\n\n      if (hasOldAttachments) {\n        const learnMore = await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"oldAttachmentsNeedFixDesc\"),\n          null,\n          this.i18nService.t(\"learnMore\"),\n          this.i18nService.t(\"close\"),\n          \"warning\"\n        );\n        if (learnMore) {\n          this.platformUtilsService.launchUri(\n            \"https://bitwarden.com/help/attachments/#add-storage-space\"\n          );\n        }\n        this.rotateEncKey = false;\n        return;\n      }\n\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateEncryptionKeyWarning\") +\n          \" \" +\n          this.i18nService.t(\"updateEncryptionKeyExportWarning\") +\n          \" \" +\n          this.i18nService.t(\"rotateEncKeyConfirmation\"),\n        this.i18nService.t(\"rotateEncKeyTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        this.rotateEncKey = false;\n      }\n    }\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    await super.submit();\n  }\n\n  async setupSubmitActions() {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n\n    if (this.rotateEncKey) {\n      await this.syncService.fullSync(true);\n    }\n\n    return super.setupSubmitActions();\n  }\n\n  async performSubmitActions(\n    newMasterPasswordHash: string,\n    newKey: SymmetricCryptoKey,\n    newEncKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const request = new PasswordRequest();\n    request.masterPasswordHash = await this.cryptoService.hashPassword(\n      this.currentMasterPassword,\n      null\n    );\n    request.masterPasswordHint = this.masterPasswordHint;\n    request.newMasterPasswordHash = newMasterPasswordHash;\n    request.key = newEncKey[1].encryptedString;\n\n    try {\n      if (this.rotateEncKey) {\n        this.formPromise = this.apiService.postPassword(request).then(() => {\n          return this.updateKey(newKey, request.newMasterPasswordHash);\n        });\n      } else {\n        this.formPromise = this.apiService.postPassword(request);\n      }\n\n      await this.formPromise;\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  private async updateKey(key: SymmetricCryptoKey, masterPasswordHash: string) {\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = masterPasswordHash;\n\n    const folders = await firstValueFrom(this.folderService.folderViews$);\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    const sends = await this.sendService.getAll();\n    await Promise.all(\n      sends.map(async (send) => {\n        const cryptoKey = await this.cryptoService.decryptToBytes(send.key, null);\n        send.key = (await this.cryptoService.encrypt(cryptoKey, encKey[0])) ?? send.key;\n        request.sends.push(new SendWithIdRequest(send));\n      })\n    );\n\n    await this.apiService.postAccountKey(request);\n\n    await this.updateEmergencyAccesses(encKey[0]);\n\n    await this.updateAllResetPasswordKeys(encKey[0], masterPasswordHash);\n  }\n\n  private async updateEmergencyAccesses(encKey: SymmetricCryptoKey) {\n    const emergencyAccess = await this.apiService.getEmergencyAccessTrusted();\n    const allowedStatuses = [\n      EmergencyAccessStatusType.Confirmed,\n      EmergencyAccessStatusType.RecoveryInitiated,\n      EmergencyAccessStatusType.RecoveryApproved,\n    ];\n\n    const filteredAccesses = emergencyAccess.data.filter((d) => allowedStatuses.includes(d.status));\n\n    for (const details of filteredAccesses) {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      const updateRequest = new EmergencyAccessUpdateRequest();\n      updateRequest.type = details.type;\n      updateRequest.waitTimeDays = details.waitTimeDays;\n      updateRequest.keyEncrypted = encryptedKey.encryptedString;\n\n      await this.apiService.putEmergencyAccess(details.id, updateRequest);\n    }\n  }\n\n  private async updateAllResetPasswordKeys(encKey: SymmetricCryptoKey, masterPasswordHash: string) {\n    const orgs = await this.organizationService.getAll();\n\n    for (const org of orgs) {\n      // If not already enrolled, skip\n      if (!org.resetPasswordEnrolled) {\n        continue;\n      }\n\n      // Retrieve public key\n      const response = await this.organizationApiService.getKeys(org.id);\n      const publicKey = Utils.fromB64ToArray(response?.publicKey);\n\n      // Re-enroll - encrpyt user's encKey.key with organization public key\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Create/Execute request\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.masterPasswordHash = masterPasswordHash;\n      request.resetPasswordKey = encryptedKey.encryptedString;\n\n      await this.organizationUserService.putOrganizationUserResetPasswordEnrollment(\n        org.id,\n        org.userId,\n        request\n      );\n    }\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { PasswordRequest } from \"./password.request\";\n\nexport class KdfRequest extends PasswordRequest {\n  kdf: KdfType;\n  kdfIterations: number;\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"encKeySettings\" | i18n }}</h1>\n</div>\n<bit-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</bit-callout>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"kdfMasterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"kdfMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdf\">{{ \"kdfAlgorithm\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://en.wikipedia.org/wiki/Key_derivation_function\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <select id=\"kdf\" name=\"Kdf\" [(ngModel)]=\"kdf\" class=\"form-control\" required>\n          <option *ngFor=\"let o of kdfOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdfIterations\">{{ \"kdfIterations\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://bitwarden.com/help/what-encryption-is-used/#pbkdf2\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <input\n          id=\"kdfIterations\"\n          type=\"number\"\n          min=\"5000\"\n          max=\"2000000\"\n          name=\"KdfIterations\"\n          class=\"form-control\"\n          [(ngModel)]=\"kdfIterations\"\n          required\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <div class=\"small form-text text-muted\">\n          <p>{{ \"kdfIterationsDesc\" | i18n: (recommendedKdfIterations | number) }}</p>\n          <strong>{{ \"warning\" | i18n }}</strong\n          >: {{ \"kdfIterationsWarning\" | i18n: (50000 | number) }}\n        </div>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"changeKdf\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { KdfRequest } from \"@bitwarden/common/models/request/kdf.request\";\n\n@Component({\n  selector: \"app-change-kdf\",\n  templateUrl: \"change-kdf.component.html\",\n})\nexport class ChangeKdfComponent implements OnInit {\n  masterPassword: string;\n  kdfIterations: number;\n  kdf = KdfType.PBKDF2_SHA256;\n  kdfOptions: any[] = [];\n  formPromise: Promise<any>;\n  recommendedKdfIterations = DEFAULT_KDF_ITERATIONS;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.kdfOptions = [{ name: \"PBKDF2 SHA-256\", value: KdfType.PBKDF2_SHA256 }];\n  }\n\n  async ngOnInit() {\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    const request = new KdfRequest();\n    request.kdf = this.kdf;\n    request.kdfIterations = this.kdfIterations;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n    const email = await this.stateService.getEmail();\n    const newKey = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email,\n      this.kdf,\n      this.kdfIterations\n    );\n    request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      newKey\n    );\n    const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n    request.key = newEncKey[1].encryptedString;\n    try {\n      this.formPromise = this.apiService.postAccountKdf(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"encKeySettingsChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<app-change-kdf *ngIf=\"showChangeKdf\"></app-change-kdf>\n<div\n  [ngClass]=\"{ 'tabbed-header': !showChangeKdf, 'secondary-header': showChangeKdf }\"\n  class=\"border-0 mb-0\"\n>\n  <h1>{{ \"apiKey\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"userApiKeyDesc\" | i18n }}\n</p>\n<button bitButton buttonType=\"secondary\" (click)=\"viewUserApiKey()\">\n  {{ \"viewApiKey\" | i18n }}\n</button>\n<button bitButton buttonType=\"secondary\" (click)=\"rotateUserApiKey()\">\n  {{ \"rotateApiKey\" | i18n }}\n</button>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { ApiKeyComponent } from \"./api-key.component\";\n\n@Component({\n  selector: \"app-security-keys\",\n  templateUrl: \"security-keys.component.html\",\n})\nexport class SecurityKeysComponent implements OnInit {\n  @ViewChild(\"viewUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  viewUserApiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateUserApiKeyModalRef: ViewContainerRef;\n\n  showChangeKdf = true;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private modalService: ModalService,\n    private apiService: ApiService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeKdf = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async viewUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.viewUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"userApiKeyDesc\";\n    });\n  }\n\n  async rotateUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.isRotation = true;\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserRotateApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div class=\"tabbed-nav d-flex flex-column\">\n  <ul class=\"nav nav-tabs\">\n    <ng-container *ngIf=\"showChangePassword\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"change-password\" routerLinkActive=\"active\">\n          {{ \"masterPassword\" | i18n }}\n        </a>\n      </li>\n    </ng-container>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"two-factor\" routerLinkActive=\"active\">\n        {{ \"twoStepLogin\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"security-keys\" routerLinkActive=\"active\">\n        {{ \"keys\" | i18n }}\n      </a>\n    </li>\n  </ul>\n</div>\n<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\n\n@Component({\n  selector: \"app-security\",\n  templateUrl: \"security.component.html\",\n})\nexport class SecurityComponent {\n  showChangePassword = true;\n\n  constructor(private keyConnectorService: KeyConnectorService) {}\n\n  async ngOnInit() {\n    this.showChangePassword = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { ChangePasswordComponent } from \"./change-password.component\";\nimport { SecurityKeysComponent } from \"./security-keys.component\";\nimport { SecurityComponent } from \"./security.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SecurityComponent,\n    data: { titleId: \"security\" },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"change-password\" },\n      {\n        path: \"change-password\",\n        component: ChangePasswordComponent,\n        data: { titleId: \"masterPassword\" },\n      },\n      {\n        path: \"two-factor\",\n        component: TwoFactorSetupComponent,\n        data: { titleId: \"twoStepLogin\" },\n      },\n      {\n        path: \"security-keys\",\n        component: SecurityKeysComponent,\n        data: { titleId: \"keys\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SecurityRoutingModule {}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"accountSettings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myAccount\" | i18n }}\n          </a>\n          <a routerLink=\"security\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"security\" | i18n }}\n          </a>\n          <a routerLink=\"preferences\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"preferences\" | i18n }}\n          </a>\n          <a\n            routerLink=\"subscription\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"!hideSubscription\"\n          >\n            {{ \"subscription\" | i18n }}\n          </a>\n          <a routerLink=\"domain-rules\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"domainRules\" | i18n }}\n          </a>\n          <a routerLink=\"emergency-access\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"emergencyAccess\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sponsored-families\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"hasFamilySponsorshipAvailable\"\n          >\n            {{ \"sponsoredFamilies\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\nimport { StateService } from \"../core\";\n\nconst BroadcasterSubscriptionId = \"SettingsComponent\";\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  premium: boolean;\n  selfHosted: boolean;\n  hasFamilySponsorshipAvailable: boolean;\n  hideSubscription: boolean;\n\n  constructor(\n    private tokenService: TokenService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  async ngOnInit() {\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"purchasedPremium\":\n            await this.load();\n            break;\n          default:\n        }\n      });\n    });\n\n    this.selfHosted = await this.platformUtilsService.isSelfHost();\n    await this.load();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    this.premium = await this.stateService.getHasPremiumPersonally();\n    this.hasFamilySponsorshipAvailable = await this.organizationService.canManageSponsorships();\n    const hasPremiumFromOrg = await this.stateService.getHasPremiumFromOrganization();\n    let billing = null;\n    if (!this.selfHosted) {\n      billing = await this.apiService.getUserBillingHistory();\n    }\n    this.hideSubscription =\n      !this.premium && hasPremiumFromOrg && (this.selfHosted || billing?.hasNoHistory);\n  }\n}\n","import { AbstractControl, AsyncValidatorFn, ValidationErrors } from \"@angular/forms\";\n\nexport function notAllowedValueAsync(\n  valueGetter: () => Promise<string>,\n  caseInsensitive = false\n): AsyncValidatorFn {\n  return async (control: AbstractControl): Promise<ValidationErrors | null> => {\n    let notAllowedValue = await valueGetter();\n    let controlValue = control.value;\n    if (caseInsensitive) {\n      notAllowedValue = notAllowedValue.toLowerCase();\n      controlValue = controlValue.toLowerCase();\n    }\n\n    if (controlValue === notAllowedValue) {\n      return {\n        notAllowedValue: true,\n      };\n    }\n  };\n}\n","<td>\n  {{ sponsoringOrg.familySponsorshipFriendlyName }}\n</td>\n<td>{{ sponsoringOrg.name }}</td>\n<td>\n  <span [ngClass]=\"statusClass\">{{ statusMessage }}</span>\n</td>\n<td class=\"table-action-right\">\n  <div class=\"dropdown\" appListDropdown>\n    <button\n      *ngIf=\"!sponsoringOrg.familySponsorshipToDelete\"\n      class=\"btn btn-outline-secondary dropdown-toggle\"\n      type=\"button\"\n      id=\"dropdownMenuButton\"\n      data-toggle=\"dropdown\"\n      aria-haspopup=\"true\"\n      aria-expanded=\"false\"\n      appA11yTitle=\"{{ 'options' | i18n }}\"\n    >\n      <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n    </button>\n    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n      <button\n        #resendEmailBtn\n        *ngIf=\"!isSelfHosted && !sponsoringOrg.familySponsorshipValidUntil\"\n        [appApiAction]=\"resendEmailPromise\"\n        class=\"dropdown-item btn-submit\"\n        [disabled]=\"$any(resendEmailBtn).loading\"\n        (click)=\"resendEmail()\"\n        [attr.aria-label]=\"'resendEmailLabel' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"resendEmail\" | i18n }}</span>\n      </button>\n      <button\n        #revokeSponsorshipBtn\n        [appApiAction]=\"revokeSponsorshipPromise\"\n        class=\"dropdown-item text-danger btn-submit\"\n        [disabled]=\"$any(revokeSponsorshipBtn).loading\"\n        (click)=\"revokeSponsorship()\"\n        [attr.aria-label]=\"'revokeAccount' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"remove\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</td>\n","import { formatDate } from \"@angular/common\";\nimport { Component, EventEmitter, Input, Output, OnInit } from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"[sponsoring-org-row]\",\n  templateUrl: \"sponsoring-org-row.component.html\",\n})\nexport class SponsoringOrgRowComponent implements OnInit {\n  @Input() sponsoringOrg: Organization = null;\n  @Input() isSelfHosted = false;\n\n  @Output() sponsorshipRemoved = new EventEmitter();\n\n  statusMessage = \"loading\";\n  statusClass: \"text-success\" | \"text-danger\" = \"text-success\";\n\n  revokeSponsorshipPromise: Promise<any>;\n  resendEmailPromise: Promise<any>;\n\n  private locale = \"\";\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private logService: LogService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    this.locale = await firstValueFrom(this.i18nService.locale$);\n\n    this.setStatus(\n      this.isSelfHosted,\n      this.sponsoringOrg.familySponsorshipToDelete,\n      this.sponsoringOrg.familySponsorshipValidUntil,\n      this.sponsoringOrg.familySponsorshipLastSyncDate\n    );\n  }\n\n  async revokeSponsorship() {\n    try {\n      this.revokeSponsorshipPromise = this.doRevokeSponsorship();\n      await this.revokeSponsorshipPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.revokeSponsorshipPromise = null;\n  }\n\n  async resendEmail() {\n    this.resendEmailPromise = this.apiService.postResendSponsorshipOffer(this.sponsoringOrg.id);\n    await this.resendEmailPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailSent\"));\n    this.resendEmailPromise = null;\n  }\n\n  get isSentAwaitingSync() {\n    return this.isSelfHosted && !this.sponsoringOrg.familySponsorshipLastSyncDate;\n  }\n\n  private async doRevokeSponsorship() {\n    const isConfirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"revokeSponsorshipConfirmation\"),\n      `${this.i18nService.t(\"remove\")} ${this.sponsoringOrg.familySponsorshipFriendlyName}?`,\n      this.i18nService.t(\"remove\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!isConfirmed) {\n      return;\n    }\n\n    await this.apiService.deleteRevokeSponsorship(this.sponsoringOrg.id);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reclaimedFreePlan\"));\n    this.sponsorshipRemoved.emit();\n  }\n\n  private setStatus(\n    selfHosted: boolean,\n    toDelete?: boolean,\n    validUntil?: Date,\n    lastSyncDate?: Date\n  ) {\n    /*\n     * Possible Statuses:\n     * Requested (self-hosted only)\n     * Sent\n     * Active\n     * RequestRevoke\n     * RevokeWhenExpired\n     */\n\n    if (toDelete && validUntil) {\n      // They want to delete but there is a valid until date which means there is an active sponsorship\n      this.statusMessage = this.i18nService.t(\n        \"revokeWhenExpired\",\n        formatDate(validUntil, \"MM/dd/yyyy\", this.locale)\n      );\n      this.statusClass = \"text-danger\";\n    } else if (toDelete) {\n      // They want to delete and we don't have a valid until date so we can\n      // this should only happen on a self-hosted install\n      this.statusMessage = this.i18nService.t(\"requestRemoved\");\n      this.statusClass = \"text-danger\";\n    } else if (validUntil) {\n      // They don't want to delete and they have a valid until date\n      // that means they are actively sponsoring someone\n      this.statusMessage = this.i18nService.t(\"active\");\n      this.statusClass = \"text-success\";\n    } else if (selfHosted && lastSyncDate) {\n      // We are on a self-hosted install and it has been synced but we have not gotten\n      // a valid until date so we can't know if they are actively sponsoring someone\n      this.statusMessage = this.i18nService.t(\"sent\");\n      this.statusClass = \"text-success\";\n    } else if (!selfHosted) {\n      // We are in cloud and all other status checks have been false therefore we have\n      // sent the request but it hasn't been accepted yet\n      this.statusMessage = this.i18nService.t(\"sent\");\n      this.statusClass = \"text-success\";\n    } else {\n      // We are on a self-hosted install and we have not synced yet\n      this.statusMessage = this.i18nService.t(\"requested\");\n      this.statusClass = \"text-success\";\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"sponsoredFamilies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"!loading\">\n  <p>\n    {{ \"sponsoredFamiliesEligible\" | i18n }}\n  </p>\n  <div>\n    {{ \"sponsoredFamiliesInclude\" | i18n }}:\n    <ul class=\"inset-list\">\n      <li>{{ \"sponsoredFamiliesPremiumAccess\" | i18n }}</li>\n      <li>{{ \"sponsoredFamiliesSharedCollections\" | i18n }}</li>\n    </ul>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    [formGroup]=\"sponsorshipForm\"\n    ngNativeValidate\n    *ngIf=\"anyOrgsAvailable$ | async\"\n  >\n    <div class=\"form-group col-7\">\n      <label for=\"availableSponsorshipOrg\">{{ \"familiesSponsoringOrgSelect\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        formControlName=\"selectedSponsorshipOrgId\"\n        class=\"form-control\"\n        required\n      >\n        <option disabled=\"true\" value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option *ngFor=\"let o of availableSponsorshipOrgs$ | async\" [ngValue]=\"o.id\">\n          {{ o.name }}\n        </option>\n      </select>\n    </div>\n    <div class=\"form-group col-7\">\n      <label for=\"sponsorshipEmail\">{{ \"sponsoredFamiliesEmail\" | i18n }}:</label>\n      <input\n        id=\"sponsorshipEmail\"\n        class=\"form-control\"\n        inputmode=\"email\"\n        formControlName=\"sponsorshipEmail\"\n        name=\"sponsorshipEmail\"\n        required\n        [attr.aria-invalid]=\"sponsorshipEmailControl.invalid\"\n      />\n      <small\n        aria-errormessage=\"sponsorshipEmail\"\n        *ngIf=\"sponsorshipEmailControl.errors?.notAllowedValue\"\n        class=\"error-inline\"\n        role=\"alert\"\n      >\n        <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i>\n        {{ \"cannotSponsorSelf\" | i18n }}\n      </small>\n      <small\n        aria-errormessage=\"sponsorshipEmail\"\n        *ngIf=\"sponsorshipEmailControl.errors?.email\"\n        class=\"error-inline\"\n        role=\"alert\"\n      >\n        <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i>\n        {{ \"invalidEmail\" | i18n }}\n      </small>\n    </div>\n    <div class=\"form-group col-7\">\n      <button class=\"btn btn-primary btn-submit mt-2\" type=\"submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"redeem\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n  <ng-container *ngIf=\"anyActiveSponsorships$ | async\">\n    <div class=\"border-bottom\">\n      <table class=\"table table-hover table-list\">\n        <thead>\n          <tr>\n            <th>{{ \"recipient\" | i18n }}</th>\n            <th>{{ \"sponsoringOrg\" | i18n }}</th>\n            <th>{{ \"status\" | i18n }}</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <ng-container *ngFor=\"let o of activeSponsorshipOrgs$ | async\">\n            <tr\n              sponsoring-org-row\n              [sponsoringOrg]=\"o\"\n              [isSelfHosted]=\"isSelfHosted\"\n              (sponsorshipRemoved)=\"forceReload()\"\n            ></tr>\n          </ng-container>\n        </tbody>\n      </table>\n    </div>\n    <small>{{ \"sponsoredFamiliesLeaveCopy\" | i18n }}</small>\n  </ng-container>\n</ng-container>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { map, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport { notAllowedValueAsync } from \"@bitwarden/angular/validators/notAllowedValueAsync.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PlanSponsorshipType } from \"@bitwarden/common/enums/planSponsorshipType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\ninterface RequestSponsorshipForm {\n  selectedSponsorshipOrgId: FormControl<string>;\n  sponsorshipEmail: FormControl<string>;\n}\n\n@Component({\n  selector: \"app-sponsored-families\",\n  templateUrl: \"sponsored-families.component.html\",\n})\nexport class SponsoredFamiliesComponent implements OnInit, OnDestroy {\n  loading = false;\n\n  availableSponsorshipOrgs$: Observable<Organization[]>;\n  activeSponsorshipOrgs$: Observable<Organization[]>;\n  anyOrgsAvailable$: Observable<boolean>;\n  anyActiveSponsorships$: Observable<boolean>;\n\n  // Conditional display properties\n  formPromise: Promise<void>;\n\n  sponsorshipForm: FormGroup<RequestSponsorshipForm>;\n\n  private _destroy = new Subject<void>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService,\n    private formBuilder: FormBuilder,\n    private stateService: StateService\n  ) {\n    this.sponsorshipForm = this.formBuilder.group<RequestSponsorshipForm>({\n      selectedSponsorshipOrgId: new FormControl(\"\", {\n        validators: [Validators.required],\n      }),\n      sponsorshipEmail: new FormControl(\"\", {\n        validators: [Validators.email],\n        asyncValidators: [\n          notAllowedValueAsync(async () => await this.stateService.getEmail(), true),\n        ],\n        updateOn: \"blur\",\n      }),\n    });\n  }\n\n  async ngOnInit() {\n    this.availableSponsorshipOrgs$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter((o) => o.familySponsorshipAvailable))\n    );\n\n    this.availableSponsorshipOrgs$.pipe(takeUntil(this._destroy)).subscribe((orgs) => {\n      if (orgs.length === 1) {\n        this.sponsorshipForm.patchValue({\n          selectedSponsorshipOrgId: orgs[0].id,\n        });\n      }\n    });\n\n    this.anyOrgsAvailable$ = this.availableSponsorshipOrgs$.pipe(map((orgs) => orgs.length > 0));\n\n    this.activeSponsorshipOrgs$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter((o) => o.familySponsorshipFriendlyName !== null))\n    );\n\n    this.anyActiveSponsorships$ = this.activeSponsorshipOrgs$.pipe(map((orgs) => orgs.length > 0));\n\n    this.loading = false;\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  async submit() {\n    this.formPromise = this.apiService.postCreateSponsorship(\n      this.sponsorshipForm.value.selectedSponsorshipOrgId,\n      {\n        sponsoredEmail: this.sponsorshipForm.value.sponsorshipEmail,\n        planSponsorshipType: PlanSponsorshipType.FamiliesForEnterprise,\n        friendlyName: this.sponsorshipForm.value.sponsorshipEmail,\n      }\n    );\n\n    await this.formPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"sponsorshipCreated\"));\n    this.formPromise = null;\n    this.resetForm();\n    await this.forceReload();\n  }\n\n  async forceReload() {\n    this.loading = true;\n    await this.syncService.fullSync(true);\n    this.loading = false;\n  }\n\n  get sponsorshipEmailControl() {\n    return this.sponsorshipForm.controls.sponsorshipEmail;\n  }\n\n  private async resetForm() {\n    this.sponsorshipForm.reset();\n  }\n\n  get isSelfHosted(): boolean {\n    return this.platformUtilsService.isSelfHost();\n  }\n}\n","<div class=\"d-flex tabbed-header\">\n  <h1>\n    {{ \"billingHistory\" | i18n }}\n  </h1>\n  <button\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    class=\"tw-ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <app-billing-history [billing]=\"billing\"></app-billing-history>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { BillingHistoryResponse } from \"@bitwarden/common/models/response/billing-history.response\";\n\n@Component({\n  selector: \"app-billing-history-view\",\n  templateUrl: \"billing-history-view.component.html\",\n})\nexport class BillingHistoryViewComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  billing: BillingHistoryResponse;\n\n  constructor(\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    if (this.platformUtilsService.isSelfHost()) {\n      this.router.navigate([\"/settings/subscription\"]);\n      return;\n    }\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    this.billing = await this.apiService.getUserBillingHistory();\n    this.loading = false;\n  }\n}\n","<div *ngIf=\"selfHosted\" class=\"page-header\">\n  <h1>{{ \"subscription\" | i18n }}</h1>\n</div>\n<div *ngIf=\"!selfHosted\" class=\"tabbed-header\">\n  <h1>{{ \"goPremium\" | i18n }}</h1>\n</div>\n<bit-callout\n  type=\"info\"\n  *ngIf=\"canAccessPremium\"\n  title=\"{{ 'youHavePremiumAccess' | i18n }}\"\n  icon=\"bwi bwi-star-f\"\n>\n  {{ \"alreadyPremiumFromOrg\" | i18n }}\n</bit-callout>\n<bit-callout type=\"success\">\n  <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n  <ul class=\"bwi-ul\">\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpStorage\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTwoStep\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpEmergency\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpReports\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTotp\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpSupport\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpFuture\" | i18n }}\n    </li>\n  </ul>\n  <p class=\"text-lg\" [ngClass]=\"{ 'mb-0': !selfHosted }\">\n    {{ \"premiumPrice\" | i18n: (premiumPrice | currency: \"$\") }}\n  </p>\n  <a\n    bitButton\n    href=\"https://vault.bitwarden.com/#/settings/premium\"\n    target=\"_blank\"\n    rel=\"noopener\"\n    buttonType=\"secondary\"\n    *ngIf=\"selfHosted\"\n  >\n    {{ \"purchasePremium\" | i18n }}\n  </a>\n</bit-callout>\n<ng-container *ngIf=\"selfHosted\">\n  <p>{{ \"uploadLicenseFilePremium\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_premium_license.json\"\n      }}</small>\n    </div>\n    <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n      {{ \"submit\" | i18n }}\n    </button>\n  </form>\n</ng-container>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!selfHosted\">\n  <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n      <input\n        id=\"additionalStorage\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"AdditionalStorageGb\"\n        [(ngModel)]=\"additionalStorage\"\n        min=\"0\"\n        max=\"99\"\n        step=\"1\"\n        placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n      />\n      <small class=\"text-muted form-text\">{{\n        \"additionalStorageIntervalDesc\"\n          | i18n: \"1 GB\":(storageGbPrice | currency: \"$\"):(\"year\" | i18n)\n      }}</small>\n    </div>\n  </div>\n  <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n  {{ \"premiumMembership\" | i18n }}: {{ premiumPrice | currency: \"$\" }} <br />\n  {{ \"additionalStorageGb\" | i18n }}: {{ additionalStorage || 0 }} GB &times;\n  {{ storageGbPrice | currency: \"$\" }} =\n  {{ additionalStorageTotal | currency: \"$\" }}\n  <hr class=\"my-3\" />\n  <h2 class=\"spaced-header mb-4\">{{ \"paymentInformation\" | i18n }}</h2>\n  <app-payment [hideBank]=\"true\"></app-payment>\n  <app-tax-info></app-tax-info>\n  <div id=\"price\" class=\"my-4\">\n    <div class=\"text-muted text-sm\">\n      {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n      <br />\n      <ng-container>\n        {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n      </ng-container>\n    </div>\n    <hr class=\"my-1 col-3 ml-0\" />\n    <p class=\"text-lg\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{ \"year\" | i18n }}\n    </p>\n  </div>\n  <small class=\"text-muted font-italic\">{{ \"paymentChargedAnnually\" | i18n }}</small>\n  <button type=\"submit\" bitButton [loading]=\"form.loading\">\n    {{ \"submit\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-premium\",\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent implements OnInit {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxInfoComponent: TaxInfoComponent;\n\n  canAccessPremium = false;\n  selfHosted = false;\n  premiumPrice = 10;\n  storageGbPrice = 4;\n  additionalStorage = 0;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const premiumPersonally = await this.stateService.getHasPremiumPersonally();\n    if (premiumPersonally) {\n      this.router.navigate([\"/settings/subscription/user-subscription\"]);\n      return;\n    }\n  }\n\n  async submit() {\n    let files: FileList = null;\n    if (this.selfHosted) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n    }\n\n    try {\n      if (this.selfHosted) {\n        if (!this.tokenService.getEmailVerified()) {\n          this.platformUtilsService.showToast(\n            \"error\",\n            this.i18nService.t(\"errorOccurred\"),\n            this.i18nService.t(\"verifyEmailFirst\")\n          );\n          return;\n        }\n\n        const fd = new FormData();\n        fd.append(\"license\", files[0]);\n        this.formPromise = this.apiService.postAccountLicense(fd).then(() => {\n          return this.finalizePremium();\n        });\n      } else {\n        this.formPromise = this.paymentComponent\n          .createPaymentToken()\n          .then((result) => {\n            const fd = new FormData();\n            fd.append(\"paymentMethodType\", result[1].toString());\n            if (result[0] != null) {\n              fd.append(\"paymentToken\", result[0]);\n            }\n            fd.append(\"additionalStorageGb\", (this.additionalStorage || 0).toString());\n            fd.append(\"country\", this.taxInfoComponent.taxInfo.country);\n            fd.append(\"postalCode\", this.taxInfoComponent.taxInfo.postalCode);\n            return this.apiService.postPremium(fd);\n          })\n          .then((paymentResponse) => {\n            if (!paymentResponse.success && paymentResponse.paymentIntentClientSecret != null) {\n              return this.paymentComponent.handleStripeCardPayment(\n                paymentResponse.paymentIntentClientSecret,\n                () => this.finalizePremium()\n              );\n            } else {\n              return this.finalizePremium();\n            }\n          });\n      }\n      await this.formPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async finalizePremium() {\n    await this.apiService.refreshIdentityToken();\n    await this.syncService.fullSync(true);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"premiumUpdated\"));\n    this.messagingService.send(\"purchasedPremium\");\n    this.router.navigate([\"/settings/subscription/user-subscription\"]);\n  }\n\n  get additionalStorageTotal(): number {\n    return this.storageGbPrice * Math.abs(this.additionalStorage || 0);\n  }\n\n  get subtotal(): number {\n    return this.premiumPrice + this.additionalStorageTotal;\n  }\n\n  get taxCharges(): number {\n    return this.taxInfoComponent != null && this.taxInfoComponent.taxRate != null\n      ? (this.taxInfoComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total(): number {\n    return this.subtotal + this.taxCharges || 0;\n  }\n}\n","<div class=\"tabbed-nav d-flex flex-column\" *ngIf=\"!selfHosted\">\n  <ul class=\"nav nav-tabs\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [routerLink]=\"subscriptionRoute\" routerLinkActive=\"active\">\n        {{ \"subscription\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"payment-method\" routerLinkActive=\"active\">\n        {{ \"paymentMethod\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"billing-history\" routerLinkActive=\"active\">\n        {{ \"billingHistory\" | i18n }}\n      </a>\n    </li>\n  </ul>\n</div>\n<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-subscription\",\n  templateUrl: \"subscription.component.html\",\n})\nexport class SubscriptionComponent {\n  hasPremium: boolean;\n  selfHosted: boolean;\n\n  constructor(\n    private stateService: StateService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    this.hasPremium = await this.stateService.getHasPremiumPersonally();\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  get subscriptionRoute(): string {\n    return this.hasPremium ? \"user-subscription\" : \"premium\";\n  }\n}\n","<div\n  [ngClass]=\"{\n    'page-header': selfHosted,\n    'tabbed-header': !selfHosted\n  }\"\n>\n  <h1>\n    {{ title }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"sub\">\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</bit-callout\n  >\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button\n      bitButton\n      type=\"button\"\n      buttonType=\"secondary\"\n      #reinstateBtn\n      class=\"btn-submit\"\n      (click)=\"reinstate()\"\n      [appApiAction]=\"reinstatePromise\"\n      [disabled]=\"$any(reinstateBtn).loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"reinstateSubscription\" | i18n }}</span>\n    </button>\n  </bit-callout>\n  <dl *ngIf=\"selfHosted\">\n    <dt>{{ \"expiration\" | i18n }}</dt>\n    <dd *ngIf=\"sub.expiration\">{{ sub.expiration | date: \"mediumDate\" }}</dd>\n    <dd *ngIf=\"!sub.expiration\">{{ \"neverExpires\" | i18n }}</dd>\n  </dl>\n  <div class=\"row\" *ngIf=\"!selfHosted\">\n    <div class=\"col-4\">\n      <dl>\n        <dt>{{ \"status\" | i18n }}</dt>\n        <dd>\n          <span class=\"text-capitalize\">{{ (subscription && subscription.status) || \"-\" }}</span>\n          <span bitBadge badgeType=\"warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n            \"pendingCancellation\" | i18n\n          }}</span>\n        </dd>\n        <dt>{{ \"nextCharge\" | i18n }}</dt>\n        <dd>\n          {{\n            nextInvoice\n              ? (nextInvoice.date | date: \"mediumDate\") +\n                \", \" +\n                (nextInvoice.amount | currency: \"$\")\n              : \"-\"\n          }}\n        </dd>\n      </dl>\n    </div>\n    <div class=\"col-8\" *ngIf=\"subscription\">\n      <strong class=\"d-block mb-1\">{{ \"details\" | i18n }}</strong>\n      <table class=\"table\">\n        <tbody>\n          <tr *ngFor=\"let i of subscription.items\">\n            <td>\n              {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} @\n              {{ i.amount | currency: \"$\" }}\n            </td>\n            <td>{{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <ng-container *ngIf=\"selfHosted\">\n    <div>\n      <button type=\"button\" bitButton buttonType=\"secondary\" (click)=\"updateLicense()\">\n        {{ \"updateLicense\" | i18n }}\n      </button>\n      <a\n        bitButton\n        buttonType=\"secondary\"\n        href=\"https://vault.bitwarden.com/#/settings/subscription\"\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        {{ \"manageSubscription\" | i18n }}\n      </a>\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n      <div class=\"card-body\">\n        <button\n          type=\"button\"\n          class=\"close\"\n          appA11yTitle=\"{{ 'cancel' | i18n }}\"\n          (click)=\"closeUpdateLicense(false)\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h3 class=\"card-body-header\">{{ \"updateLicense\" | i18n }}</h3>\n        <app-update-license\n          (onUpdated)=\"closeUpdateLicense(true)\"\n          (onCanceled)=\"closeUpdateLicense(false)\"\n        >\n        </app-update-license>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"!selfHosted\">\n    <div class=\"d-flex\">\n      <button\n        bitButton\n        type=\"button\"\n        buttonType=\"secondary\"\n        (click)=\"downloadLicense()\"\n        *ngIf=\"!subscription || !subscription.cancelled\"\n      >\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        bitButton\n        #cancelBtn\n        type=\"button\"\n        buttonType=\"danger\"\n        class=\"btn-submit tw-ml-auto\"\n        (click)=\"cancel()\"\n        [appApiAction]=\"cancelPromise\"\n        [disabled]=\"$any(cancelBtn).loading\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"cancelSubscription\" | i18n }}</span>\n      </button>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"storage\" | i18n }}</h2>\n    <p>{{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0:sub.storageName || \"0 MB\" }}</p>\n    <div class=\"progress\">\n      <div\n        class=\"progress-bar bg-success\"\n        role=\"progressbar\"\n        [ngStyle]=\"{ width: storageProgressWidth + '%' }\"\n        [attr.aria-valuenow]=\"storagePercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        {{ storagePercentage / 100 | percent }}\n      </div>\n    </div>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"mt-3\">\n        <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n          <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button\n            bitButton\n            type=\"button\"\n            buttonType=\"secondary\"\n            class=\"tw-ml-1\"\n            (click)=\"adjustStorage(false)\"\n          >\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n        <app-adjust-storage\n          [storageGbPrice]=\"4\"\n          [add]=\"adjustStorageAdd\"\n          (onAdjusted)=\"closeStorage(true)\"\n          (onCanceled)=\"closeStorage(false)\"\n          *ngIf=\"showAdjustStorage\"\n        ></app-adjust-storage>\n      </div>\n    </ng-container>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SubscriptionResponse } from \"@bitwarden/common/models/response/subscription.response\";\n\n@Component({\n  selector: \"app-user-subscription\",\n  templateUrl: \"user-subscription.component.html\",\n})\nexport class UserSubscriptionComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  adjustStorageAdd = true;\n  showAdjustStorage = false;\n  showUpdateLicense = false;\n  sub: SubscriptionResponse;\n  selfHosted = false;\n\n  cancelPromise: Promise<any>;\n  reinstatePromise: Promise<any>;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private router: Router,\n    private logService: LogService,\n    private fileDownloadService: FileDownloadService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.stateService.getHasPremiumPersonally()) {\n      this.loading = true;\n      this.sub = await this.apiService.getUserSubscription();\n    } else {\n      this.router.navigate([\"/settings/subscription/premium\"]);\n      return;\n    }\n\n    this.loading = false;\n  }\n\n  async reinstate() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"reinstateConfirmation\"),\n      this.i18nService.t(\"reinstateSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.reinstatePromise = this.apiService.postReinstatePremium();\n      await this.reinstatePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reinstated\"));\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async cancel() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"cancelConfirmation\"),\n      this.i18nService.t(\"cancelSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.cancelPromise = this.apiService.postCancelPremium();\n      await this.cancelPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"canceledSubscription\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  downloadLicense() {\n    if (this.loading) {\n      return;\n    }\n\n    const licenseString = JSON.stringify(this.sub.license, null, 2);\n    this.fileDownloadService.download({\n      fileName: \"bitwarden_premium_license.json\",\n      blobData: licenseString,\n    });\n  }\n\n  updateLicense() {\n    if (this.loading) {\n      return;\n    }\n    this.showUpdateLicense = true;\n  }\n\n  closeUpdateLicense(load: boolean) {\n    this.showUpdateLicense = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  adjustStorage(add: boolean) {\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(add ? \"addStorage\" : \"removeStorage\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.adjustStorageAdd = add;\n    this.showAdjustStorage = true;\n  }\n\n  closeStorage(load: boolean) {\n    this.showAdjustStorage = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get storageProgressWidth() {\n    return this.storagePercentage < 5 ? 5 : 0;\n  }\n\n  get usingInAppPurchase() {\n    return this.sub != null ? this.sub.usingInAppPurchase : false;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.selfHosted ? \"subscription\" : \"premiumMembership\");\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { BillingHistoryViewComponent } from \"./billing-history-view.component\";\nimport { PaymentMethodComponent } from \"./payment-method.component\";\nimport { PremiumComponent } from \"./premium.component\";\nimport { SubscriptionComponent } from \"./subscription.component\";\nimport { UserSubscriptionComponent } from \"./user-subscription.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SubscriptionComponent,\n    data: { titleId: \"subscription\" },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"premium\" },\n      {\n        path: \"user-subscription\",\n        component: UserSubscriptionComponent,\n        data: { titleId: \"premiumMembership\" },\n      },\n      {\n        path: \"premium\",\n        component: PremiumComponent,\n        data: { titleId: \"goPremium\" },\n      },\n      {\n        path: \"payment-method\",\n        component: PaymentMethodComponent,\n        data: { titleId: \"paymentMethod\" },\n      },\n      {\n        path: \"billing-history\",\n        component: BillingHistoryViewComponent,\n        data: { titleId: \"billingHistory\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SubscriptionRoutingModule {}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { PasswordGeneratorPolicyOptions } from \"@bitwarden/common/models/domain/password-generator-policy-options\";\n\n@Directive()\nexport class GeneratorComponent implements OnInit {\n  @Input() comingFromAddEdit = false;\n  @Input() type: string;\n  @Output() onSelected = new EventEmitter<string>();\n\n  usernameGeneratingPromise: Promise<string>;\n  typeOptions: any[];\n  passTypeOptions: any[];\n  usernameTypeOptions: any[];\n  subaddressOptions: any[];\n  catchallOptions: any[];\n  forwardOptions: any[];\n  usernameOptions: any = {};\n  passwordOptions: any = {};\n  username = \"-\";\n  password = \"-\";\n  showOptions = false;\n  avoidAmbiguous = false;\n  enforcedPasswordPolicyOptions: PasswordGeneratorPolicyOptions;\n  usernameWebsite: string = null;\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected usernameGenerationService: UsernameGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected stateService: StateService,\n    protected i18nService: I18nService,\n    protected logService: LogService,\n    protected route: ActivatedRoute,\n    private win: Window\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"username\"), value: \"username\" },\n    ];\n    this.passTypeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n    this.usernameTypeOptions = [\n      {\n        name: i18nService.t(\"plusAddressedEmail\"),\n        value: \"subaddress\",\n        desc: i18nService.t(\"plusAddressedEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"catchallEmail\"),\n        value: \"catchall\",\n        desc: i18nService.t(\"catchallEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"forwardedEmail\"),\n        value: \"forwarded\",\n        desc: i18nService.t(\"forwardedEmailDesc\"),\n      },\n      { name: i18nService.t(\"randomWord\"), value: \"word\" },\n    ];\n    this.subaddressOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.catchallOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.initForwardOptions();\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const passwordOptionsResponse = await this.passwordGenerationService.getOptions();\n      this.passwordOptions = passwordOptionsResponse[0];\n      this.enforcedPasswordPolicyOptions = passwordOptionsResponse[1];\n      this.avoidAmbiguous = !this.passwordOptions.ambiguous;\n      this.passwordOptions.type =\n        this.passwordOptions.type === \"passphrase\" ? \"passphrase\" : \"password\";\n\n      this.usernameOptions = await this.usernameGenerationService.getOptions();\n      if (this.usernameOptions.type == null) {\n        this.usernameOptions.type = \"word\";\n      }\n      if (\n        this.usernameOptions.subaddressEmail == null ||\n        this.usernameOptions.subaddressEmail === \"\"\n      ) {\n        this.usernameOptions.subaddressEmail = await this.stateService.getEmail();\n      }\n      if (this.usernameWebsite == null) {\n        this.usernameOptions.subaddressType = this.usernameOptions.catchallType = \"random\";\n      } else {\n        this.usernameOptions.website = this.usernameWebsite;\n        const websiteOption = { name: this.i18nService.t(\"websiteName\"), value: \"website-name\" };\n        this.subaddressOptions.push(websiteOption);\n        this.catchallOptions.push(websiteOption);\n      }\n\n      if (this.type !== \"username\" && this.type !== \"password\") {\n        if (qParams.type === \"username\" || qParams.type === \"password\") {\n          this.type = qParams.type;\n        } else {\n          const generatorOptions = await this.stateService.getGeneratorOptions();\n          this.type = generatorOptions?.type ?? \"password\";\n        }\n      }\n      if (this.regenerateWithoutButtonPress()) {\n        await this.regenerate();\n      }\n    });\n  }\n\n  async typeChanged() {\n    await this.stateService.setGeneratorOptions({ type: this.type });\n    if (this.regenerateWithoutButtonPress()) {\n      await this.regenerate();\n    }\n  }\n\n  async regenerate() {\n    if (this.type === \"password\") {\n      await this.regeneratePassword();\n    } else if (this.type === \"username\") {\n      await this.regenerateUsername();\n    }\n  }\n\n  async sliderChanged() {\n    this.savePasswordOptions(false);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderInput() {\n    this.normalizePasswordOptions();\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n  }\n\n  async savePasswordOptions(regenerate = true) {\n    this.normalizePasswordOptions();\n    await this.passwordGenerationService.saveOptions(this.passwordOptions);\n\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regeneratePassword();\n    }\n  }\n\n  async saveUsernameOptions(regenerate = true) {\n    await this.usernameGenerationService.saveOptions(this.usernameOptions);\n    if (this.usernameOptions.type === \"forwarded\") {\n      this.username = \"-\";\n    }\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regenerateUsername();\n    }\n  }\n\n  async regeneratePassword() {\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  regenerateUsername() {\n    return this.generateUsername();\n  }\n\n  async generateUsername() {\n    try {\n      this.usernameGeneratingPromise = this.usernameGenerationService.generateUsername(\n        this.usernameOptions\n      );\n      this.username = await this.usernameGeneratingPromise;\n      if (this.username === \"\" || this.username === null) {\n        this.username = \"-\";\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  copy() {\n    const password = this.type === \"password\";\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(\n      password ? this.password : this.username,\n      copyOptions\n    );\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(password ? \"password\" : \"username\"))\n    );\n  }\n\n  select() {\n    this.onSelected.emit(this.type === \"password\" ? this.password : this.username);\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  regenerateWithoutButtonPress() {\n    return this.type !== \"username\" || this.usernameOptions.type !== \"forwarded\";\n  }\n\n  private normalizePasswordOptions() {\n    // Application level normalize options depedent on class variables\n    this.passwordOptions.ambiguous = !this.avoidAmbiguous;\n\n    if (\n      !this.passwordOptions.uppercase &&\n      !this.passwordOptions.lowercase &&\n      !this.passwordOptions.number &&\n      !this.passwordOptions.special\n    ) {\n      this.passwordOptions.lowercase = true;\n      if (this.win != null) {\n        const lowercase = this.win.document.querySelector(\"#lowercase\") as HTMLInputElement;\n        if (lowercase) {\n          lowercase.checked = true;\n        }\n      }\n    }\n\n    this.passwordGenerationService.normalizeOptions(\n      this.passwordOptions,\n      this.enforcedPasswordPolicyOptions\n    );\n  }\n\n  private async initForwardOptions() {\n    this.forwardOptions = [\n      { name: \"AnonAddy\", value: \"anonaddy\" },\n      { name: \"DuckDuckGo\", value: \"duckduckgo\" },\n      { name: \"Fastmail\", value: \"fastmail\" },\n      { name: \"Firefox Relay\", value: \"firefoxrelay\" },\n      { name: \"SimpleLogin\", value: \"simplelogin\" },\n    ];\n\n    this.usernameOptions = await this.usernameGenerationService.getOptions();\n    if (\n      this.usernameOptions.forwardedService == null ||\n      this.usernameOptions.forwardedService === \"\"\n    ) {\n      this.forwardOptions.push({ name: \"\", value: null });\n    }\n\n    this.forwardOptions = this.forwardOptions.sort((a, b) => a.name.localeCompare(b.name));\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { GeneratedPasswordHistory } from \"@bitwarden/common/models/domain/generated-password-history\";\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n  history: GeneratedPasswordHistory[] = [];\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    this.history = await this.passwordGenerationService.getHistory();\n  }\n\n  clear() {\n    this.history = [];\n    this.passwordGenerationService.clear();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appSelectCopy]\",\n})\nexport class SelectCopyDirective {\n  constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) {}\n\n  @HostListener(\"copy\") onCopy() {\n    if (window == null) {\n      return;\n    }\n    let copyText = \"\";\n    const selection = window.getSelection();\n    for (let i = 0; i < selection.rangeCount; i++) {\n      const range = selection.getRangeAt(i);\n      const text = range.toString();\n\n      // The selection should only contain one line of text. In some cases however, the\n      // selection contains newlines and space characters from the indentation of following\n      // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n      // that aren't part of the password, the selection has to be trimmed.\n      let stringEndPos = text.length;\n      const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n      if (newLinePos > -1) {\n        const otherPart = text.substr(newLinePos).trim();\n        if (otherPart === \"\") {\n          stringEndPos = newLinePos;\n        }\n      }\n      copyText += text.substring(0, stringEndPos);\n    }\n    this.platformUtilsService.copyToClipboard(copyText, { window: window });\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"passHistoryTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"passHistoryTitle\">{{ \"passwordHistory\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"history.length\">\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item d-flex\" *ngFor=\"let h of history\">\n            <div class=\"tw-min-w-0\">\n              <bit-color-password\n                [password]=\"h.password\"\n                class=\"tw-block tw-font-mono\"\n                appSelectCopy\n              ></bit-color-password>\n              <small class=\"text-muted\">{{ h.date | date: \"medium\" }}</small>\n            </div>\n            <div class=\"ml-auto\">\n              <button\n                class=\"btn btn-link\"\n                appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                (click)=\"copy(h.password)\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!history.length\">\n        {{ \"noPasswordsInList\" | i18n }}\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            type=\"button\"\n            (click)=\"clear()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'clear' | i18n }}\"\n          >\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent } from \"@bitwarden/angular/components/password-generator-history.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-generator-history\",\n  templateUrl: \"password-generator-history.component.html\",\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"generator\" | i18n }}</h1>\n</div>\n<app-callout type=\"info\" *ngIf=\"enforcedPasswordPolicyOptions?.inEffect() && type === 'password'\">\n  {{ \"passwordGeneratorPolicyInEffect\" | i18n }}\n</app-callout>\n<div class=\"card card-generated bg-light my-4\">\n  <div class=\"card-body\">\n    <bit-color-password\n      [password]=\"type === 'password' ? password : username\"\n      appSelectCopy\n    ></bit-color-password>\n  </div>\n</div>\n<div class=\"form-group\" role=\"radiogroup\" aria-labelledby=\"typeHeading\">\n  <label id=\"typeHeading\" class=\"d-block\">{{ \"whatWouldYouLikeToGenerate\" | i18n }}</label>\n  <div class=\"form-check form-check-inline\" *ngFor=\"let o of typeOptions\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      [(ngModel)]=\"type\"\n      name=\"Type\"\n      id=\"type_{{ o.value }}\"\n      [value]=\"o.value\"\n      (change)=\"typeChanged()\"\n      [checked]=\"type === o.value\"\n    />\n    <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n      {{ o.name }}\n    </label>\n  </div>\n</div>\n<ng-container *ngIf=\"type === 'password'\">\n  <div aria-labelledby=\"passwordTypeHeading\" class=\"form-group\" role=\"radiogroup\">\n    <label id=\"passwordTypeHeading\" class=\"d-block\">{{ \"passwordType\" | i18n }}</label>\n    <div class=\"form-check form-check-inline\" *ngFor=\"let o of passTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"passwordOptions.type\"\n        name=\"PasswordType\"\n        id=\"passwordType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"savePasswordOptions()\"\n        [checked]=\"passwordOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"passwordType_{{ o.value }}\">\n        {{ o.name }}\n      </label>\n    </div>\n  </div>\n  <ng-container *ngIf=\"passwordOptions.type === 'passphrase'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"num-words\">{{ \"numWords\" | i18n }}</label>\n        <input\n          id=\"num-words\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"3\"\n          max=\"20\"\n          [(ngModel)]=\"passwordOptions.numWords\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"word-separator\">{{ \"wordSeparator\" | i18n }}</label>\n        <input\n          id=\"word-separator\"\n          class=\"form-control\"\n          type=\"text\"\n          maxlength=\"1\"\n          [(ngModel)]=\"passwordOptions.wordSeparator\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"capitalize\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.capitalize\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.capitalize\"\n        />\n        <label for=\"capitalize\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"include-number\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.includeNumber\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.includeNumber\"\n        />\n        <label for=\"include-number\" class=\"form-check-label\">{{ \"includeNumber\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"passwordOptions.type === 'password'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"length\">{{ \"length\" | i18n }}</label>\n        <input\n          id=\"length\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"5\"\n          max=\"128\"\n          [(ngModel)]=\"passwordOptions.length\"\n          (blur)=\"savePasswordOptions()\"\n          (change)=\"lengthChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-number\">{{ \"minNumbers\" | i18n }}</label>\n        <input\n          id=\"min-number\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minNumber\"\n          (change)=\"minNumberChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-special\">{{ \"minSpecial\" | i18n }}</label>\n        <input\n          id=\"min-special\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minSpecial\"\n          (change)=\"minSpecialChanged()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"uppercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.uppercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useUppercase\"\n          attr.aria-label=\"{{ 'uppercase' | i18n }}\"\n        />\n        <label for=\"uppercase\" class=\"form-check-label\">A-Z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"lowercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.lowercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useLowercase\"\n          attr.aria-label=\"{{ 'lowercase' | i18n }}\"\n        />\n        <label for=\"lowercase\" class=\"form-check-label\">a-z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"numbers\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.number\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useNumbers\"\n          attr.aria-label=\"{{ 'numbers' | i18n }}\"\n        />\n        <label for=\"numbers\" class=\"form-check-label\">0-9</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"special\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.special\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useSpecial\"\n          attr.aria-label=\"{{ 'specialCharacters' | i18n }}\"\n        />\n        <label for=\"special\" class=\"form-check-label\">!@#$%^&amp;*</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"ambiguous\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"avoidAmbiguous\"\n        />\n        <label for=\"ambiguous\" class=\"form-check-label\">{{ \"ambiguous\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"d-flex\">\n    <div>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"regenerate()\">\n        {{ \"regeneratePassword\" | i18n }}\n      </button>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n        {{ \"copyPassword\" | i18n }}\n      </button>\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"history()\"\n        appA11yTitle=\"{{ 'passwordHistory' | i18n }}\"\n      >\n        <i class=\"bwi bwi-clock bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'username'\">\n  <div aria-labelledby=\"usernameTypeHeading\" class=\"form-group\" role=\"radiogroup\">\n    <div class=\"d-block\">\n      <label id=\"usernameTypeHeading\">{{ \"usernameType\" | i18n }}</label>\n      <a\n        class=\"ml-auto\"\n        href=\"https://bitwarden.com/help/generator/#username-types\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <div class=\"form-check\" *ngFor=\"let o of usernameTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"usernameOptions.type\"\n        name=\"UsernameType\"\n        id=\"usernameType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"saveUsernameOptions()\"\n        [checked]=\"usernameOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"usernameType_{{ o.value }}\">\n        {{ o.name }}\n        <div class=\"small text-muted\">{{ o.desc }}</div>\n      </label>\n    </div>\n  </div>\n  <ng-container *ngIf=\"usernameOptions.type === 'forwarded'\">\n    <div class=\"form-group\" role=\"listbox\">\n      <label class=\"d-block\">{{ \"service\" | i18n }}</label>\n      <select\n        id=\"ForwardTypeDropdown\"\n        name=\"ForwardType\"\n        [(ngModel)]=\"usernameOptions.forwardedService\"\n        (change)=\"saveUsernameOptions()\"\n        class=\"form-control w-auto\"\n      >\n        <option *ngFor=\"let o of forwardOptions\" [ngValue]=\"o.value\" role=\"option\">\n          {{ o.name }}\n        </option>\n      </select>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'simplelogin'\">\n      <div class=\"form-group col-4\">\n        <label for=\"simplelogin-apikey\">{{ \"apiKey\" | i18n }}</label>\n        <input\n          id=\"simplelogin-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedSimpleLoginApiKey\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'duckduckgo'\">\n      <div class=\"form-group col-4\">\n        <label for=\"duckduckgo-apikey\">{{ \"apiKey\" | i18n }}</label>\n        <input\n          id=\"duckduckgo-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          name=\"DuckDuckGoApiKey\"\n          [(ngModel)]=\"usernameOptions.forwardedDuckDuckGoToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'anonaddy'\">\n      <div class=\"form-group col-4\">\n        <label for=\"anonaddy-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"anonaddy-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedAnonAddyApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"anonaddy-domain\">{{ \"domainName\" | i18n }}</label>\n        <input\n          id=\"anonaddy-domain\"\n          class=\"form-control\"\n          type=\"text\"\n          [(ngModel)]=\"usernameOptions.forwardedAnonAddyDomain\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'firefoxrelay'\">\n      <div class=\"form-group col-4\">\n        <label for=\"firefox-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"firefox-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedFirefoxApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'fastmail'\">\n      <div class=\"form-group col-4\">\n        <label for=\"fastmail-apiToken\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"fastmail-apiToken\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedFastmailApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'subaddress'\">\n    <div class=\"form-group col-4\">\n      <label for=\"subaddress-email\">{{ \"emailAddress\" | i18n }}</label>\n      <input\n        id=\"subaddress-email\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.subaddressEmail\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'catchall'\">\n    <div class=\"form-group col-4\">\n      <label for=\"catchall-domain\">{{ \"domainName\" | i18n }}</label>\n      <input\n        id=\"catchall-domain\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.catchallDomain\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <ng-container *ngIf=\"usernameOptions.type === 'word'\">\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"form-group\">\n        <div class=\"form-check\">\n          <input\n            id=\"capitalizeUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordCapitalize\"\n          />\n          <label for=\"capitalizeUsername\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n        </div>\n        <div class=\"form-check\">\n          <input\n            id=\"includeNumberUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordIncludeNumber\"\n          />\n          <label for=\"includeNumberUsername\" class=\"form-check-label\">{{\n            \"includeNumber\" | i18n\n          }}</label>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <div #form [appApiAction]=\"usernameGeneratingPromise\">\n    <button\n      type=\"button\"\n      class=\"btn btn-submit btn-primary\"\n      (click)=\"$any(form).loading ? false : regenerate()\"\n      [attr.aria-disabled]=\"$any(form).loading ? 'true' : null\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"regenerateUsername\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n      {{ \"copyUsername\" | i18n }}\n    </button>\n  </div>\n</ng-container>\n<ng-template #historyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { GeneratorComponent as BaseGeneratorComponent } from \"@bitwarden/angular/components/generator.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\n\nimport { PasswordGeneratorHistoryComponent } from \"./password-generator-history.component\";\n\n@Component({\n  selector: \"app-generator\",\n  templateUrl: \"generator.component.html\",\n})\nexport class GeneratorComponent extends BaseGeneratorComponent {\n  @ViewChild(\"historyTemplate\", { read: ViewContainerRef, static: true })\n  historyModalRef: ViewContainerRef;\n\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    usernameGenerationService: UsernameGenerationService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService,\n    route: ActivatedRoute,\n    private modalService: ModalService\n  ) {\n    super(\n      passwordGenerationService,\n      usernameGenerationService,\n      platformUtilsService,\n      stateService,\n      i18nService,\n      logService,\n      route,\n      window\n    );\n    if (platformUtilsService.isSelfHost()) {\n      // Cannot use Firefox Relay on self hosted web vaults due to CORS issues with Firefox Relay API\n      this.forwardOptions.splice(\n        this.forwardOptions.findIndex((o) => o.value === \"firefoxrelay\"),\n        1\n      );\n      // Also cannot use Duck Duck Go on self hosted web vaults due to CORS issues\n      this.forwardOptions.splice(\n        this.forwardOptions.findIndex((o) => o.value === \"duckduckgo\"),\n        1\n      );\n    }\n  }\n\n  async history() {\n    await this.modalService.openViewRef(PasswordGeneratorHistoryComponent, this.historyModalRef);\n  }\n\n  lengthChanged() {\n    document.getElementById(\"length\").focus();\n  }\n\n  minNumberChanged() {\n    document.getElementById(\"min-number\").focus();\n  }\n\n  minSpecialChanged() {\n    document.getElementById(\"min-special\").focus();\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-tools\",\n  templateUrl: \"tools.component.html\",\n})\nexport class ToolsComponent implements OnInit {\n  canAccessPremium = false;\n\n  constructor(private stateService: StateService, private messagingService: MessagingService) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card mb-4\">\n        <div class=\"card-header\">{{ \"tools\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"generator\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"generator\" | i18n }}\n          </a>\n          <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"importData\" | i18n }}\n          </a>\n          <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"exportVault\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { CipherWithIdRequest } from \"@bitwarden/common/models/request/cipher-with-id.request\";\nimport { FolderWithIdRequest } from \"@bitwarden/common/models/request/folder-with-id.request\";\nimport { UpdateKeyRequest } from \"@bitwarden/common/models/request/update-key.request\";\n\n@Component({\n  selector: \"app-update-key\",\n  templateUrl: \"update-key.component.html\",\n})\nexport class UpdateKeyComponent {\n  masterPassword: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (hasEncKey) {\n      return;\n    }\n\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.makeRequest().then((request) => {\n        return this.apiService.postAccountKey(request);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"keyUpdated\"),\n        this.i18nService.t(\"logBackInOthersToo\"),\n        { timeout: 15000 }\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async makeRequest(): Promise<UpdateKeyRequest> {\n    const key = await this.cryptoService.getKey();\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n\n    await this.syncService.fullSync(true);\n\n    const folders = await firstValueFrom(this.folderService.folderViews$);\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    return request;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"updateEncKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"updateEncKeyTitle\">{{ \"updateEncryptionKey\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"updateEncryptionKeyShortDesc\" | i18n }} {{ \"updateEncryptionKeyDesc\" | i18n }}\n          <a\n            href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            >{{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <app-callout type=\"warning\">{{ \"updateEncryptionKeyWarning\" | i18n }}</app-callout>\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appAutofocus\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"updateEncryptionKey\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n  @Input() folderId: string;\n  @Output() onSavedFolder = new EventEmitter<FolderView>();\n  @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n  editMode = false;\n  folder: FolderView = new FolderView();\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  protected componentName = \"\";\n\n  constructor(\n    protected folderService: FolderService,\n    protected folderApiService: FolderApiServiceAbstraction,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.folder.name == null || this.folder.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    try {\n      const folder = await this.folderService.encrypt(this.folder);\n      this.formPromise = this.folderApiService.save(folder);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedFolder\" : \"addedFolder\")\n      );\n      this.onSavedFolder.emit(this.folder);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteFolderConfirmation\"),\n      this.i18nService.t(\"deleteFolder\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      this.componentName != \"\" ? this.componentName + \" .modal-content\" : null\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.folderApiService.delete(this.folder.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedFolder\"));\n      this.onDeletedFolder.emit(this.folder);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  protected async init() {\n    this.editMode = this.folderId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editFolder\");\n      const folder = await this.folderService.get(this.folderId);\n      this.folder = await folder.decrypt();\n    } else {\n      this.title = this.i18nService.t(\"addFolder\");\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"folderAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"folderAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"folder.name\"\n          required\n          appAutofocus\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"$any(deleteBtn).loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { FolderAddEditComponent as BaseFolderAddEditComponent } from \"@bitwarden/angular/components/folder-add-edit.component\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-folder-add-edit\",\n  templateUrl: \"folder-add-edit.component.html\",\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n  protected override componentName = \"app-folder-add-edit\";\n  constructor(\n    folderService: FolderService,\n    folderApiService: FolderApiServiceAbstraction,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(folderService, folderApiService, i18nService, platformUtilsService, logService);\n  }\n}\n","import { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, map, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport {\n  isNotProviderUser,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { Checkable, isChecked } from \"@bitwarden/common/types/checkable\";\n\n@Directive()\nexport class ShareComponent implements OnInit, OnDestroy {\n  @Input() cipherId: string;\n  @Input() organizationId: string;\n  @Output() onSharedCipher = new EventEmitter();\n\n  formPromise: Promise<void>;\n  cipher: CipherView;\n  collections: Checkable<CollectionView>[] = [];\n  organizations$: Observable<Organization[]>;\n\n  protected writeableCollections: Checkable<CollectionView>[] = [];\n\n  private _destroy = new Subject<void>();\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService,\n    protected organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  async load() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n\n    this.organizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => {\n        return orgs\n          .filter(\n            (o) =>\n              o.enabled && o.status === OrganizationUserStatusType.Confirmed && isNotProviderUser(o)\n          )\n          .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n      })\n    );\n\n    this.organizations$.pipe(takeUntil(this._destroy)).subscribe((orgs) => {\n      if (this.organizationId == null && orgs.length > 0) {\n        this.organizationId = orgs[0].id;\n      }\n    });\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipherDomain.decrypt();\n\n    this.filterCollections();\n  }\n\n  filterCollections() {\n    this.writeableCollections.forEach((c) => (c.checked = false));\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    const selectedCollectionIds = this.collections.filter(isChecked).map((c) => c.id);\n    if (selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    const cipherView = await cipherDomain.decrypt();\n    const orgs = await firstValueFrom(this.organizations$);\n    const orgName =\n      orgs.find((o) => o.id === this.organizationId)?.name ?? this.i18nService.t(\"organization\");\n\n    try {\n      this.formPromise = this.cipherService\n        .shareWithServer(cipherView, this.organizationId, selectedCollectionIds)\n        .then(async () => {\n          this.onSharedCipher.emit();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"movedItemToOrg\", cipherView.name, orgName)\n          );\n        });\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  get canSave() {\n    if (this.collections != null) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if (this.collections[i].checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"shareTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"shareTitle\">\n          {{ \"moveToOrganization\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <ng-container *ngIf=\"organizations$ | async as organizations\">\n        <div class=\"modal-body\" *ngIf=\"!organizations || !organizations.length\">\n          {{ \"noOrganizationsList\" | i18n }}\n        </div>\n        <div class=\"modal-body\" *ngIf=\"organizations && organizations.length\">\n          <p>{{ \"moveToOrgDesc\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n            <select\n              id=\"organization\"\n              name=\"OrganizationId\"\n              [(ngModel)]=\"organizationId\"\n              class=\"form-control\"\n              (change)=\"filterCollections()\"\n            >\n              <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"d-flex\">\n            <h3>{{ \"collections\" | i18n }}</h3>\n            <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n              <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"selectAll\" | i18n }}\n              </button>\n              <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"unselectAll\" | i18n }}\n              </button>\n            </div>\n          </div>\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n                <td class=\"table-list-checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td>\n                  {{ c.name }}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary btn-submit manual\"\n            [disabled]=\"form.loading || !canSave\"\n            [ngClass]=\"{ loading: form.loading }\"\n            *ngIf=\"organizations && organizations.length\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"save\" | i18n }}</span>\n          </button>\n          <a\n            href=\"#\"\n            routerLink=\"/create-organization\"\n            class=\"btn btn-primary\"\n            *ngIf=\"!organizations || !organizations.length\"\n          >\n            {{ \"newOrganization\" | i18n }}\n          </a>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"cancel\" | i18n }}\n          </button>\n        </div>\n      </ng-container>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { ShareComponent as BaseShareComponent } from \"@bitwarden/angular/components/share.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Component({\n  selector: \"app-vault-share\",\n  templateUrl: \"share.component.html\",\n})\nexport class ShareComponent extends BaseShareComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      collectionService,\n      platformUtilsService,\n      i18nService,\n      cipherService,\n      logService,\n      organizationService\n    );\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\n@Component({\n  selector: \"app-verify-email\",\n  templateUrl: \"verify-email.component.html\",\n})\nexport class VerifyEmailComponent {\n  actionPromise: Promise<unknown>;\n\n  @Output() onVerified = new EventEmitter<boolean>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private tokenService: TokenService\n  ) {}\n\n  async verifyEmail(): Promise<void> {\n    await this.apiService.refreshIdentityToken();\n    if (await this.tokenService.getEmailVerified()) {\n      this.onVerified.emit(true);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailVerified\"));\n      return;\n    }\n\n    await this.apiService.postAccountVerifyEmail();\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"checkInboxForVerification\")\n    );\n  }\n\n  async send() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    try {\n      this.actionPromise = this.verifyEmail();\n      await this.actionPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n}\n","<div class=\"card border-warning\">\n  <div class=\"card-header bg-warning text-white\">\n    <i class=\"bwi bwi-envelope bwi-fw\" aria-hidden=\"true\"></i> {{ \"verifyEmail\" | i18n }}\n  </div>\n  <div class=\"card-body\">\n    <p>{{ \"verifyEmailDesc\" | i18n }}</p>\n    <button\n      type=\"button\"\n      class=\"btn btn-block btn-outline-secondary btn-submit\"\n      #sendBtn\n      [appApiAction]=\"actionPromise\"\n      [disabled]=\"$any(sendBtn).loading\"\n      (click)=\"send()\"\n    >\n      <i class=\"bwi bwi-spin bwi-spinner\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>\n        {{ \"sendEmail\" | i18n }}\n      </span>\n    </button>\n  </div>\n</div>\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"groupings\">\n        <div class=\"content\">\n          <div class=\"inner-content\">\n            <app-vault-filter\n              #vaultFilter\n              [activeFilter]=\"activeFilter\"\n              (onFilterChange)=\"applyVaultFilter($event)\"\n              (onAddFolder)=\"addFolder()\"\n              (onEditFolder)=\"editFolder($event.id)\"\n              (onSearchTextChanged)=\"filterSearchText($event)\"\n            ></app-vault-filter>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div [ngClass]=\"{ 'col-6': isShowingCards, 'col-9': !isShowingCards }\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"vaultItems\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"vaultItemsComponent.actionPromise\">\n            <ng-container *ngIf=\"$any(actionSpinner).loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <app-vault-bulk-actions\n            [vaultItemsComponent]=\"vaultItemsComponent\"\n            [deleted]=\"activeFilter.status === 'trash'\"\n          >\n          </app-vault-bulk-actions>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addCipher()\"\n            *ngIf=\"activeFilter.status !== 'trash'\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"addItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout\n        type=\"warning\"\n        *ngIf=\"activeFilter.status === 'trash'\"\n        icon=\"bwi-exclamation-triangle\"\n      >\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-vault-items\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onShareClicked)=\"shareCipher($event)\"\n        (onCollectionsClicked)=\"editCipherCollections($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n        (onOrganzationBadgeClicked)=\"applyOrganizationFilter($event)\"\n      >\n      </app-vault-items>\n    </div>\n    <div class=\"col-3\">\n      <div class=\"card border-warning mb-4\" *ngIf=\"showUpdateKey\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateKeyTitle\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateEncryptionKeyShortDesc\" | i18n }}</p>\n          <button class=\"btn btn-block btn-outline-secondary\" type=\"button\" (click)=\"updateKey()\">\n            {{ \"updateEncryptionKey\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-verify-email\n        *ngIf=\"showVerifyEmail\"\n        class=\"d-block mb-4\"\n        (onVerified)=\"emailVerified($event)\"\n      ></app-verify-email>\n\n      <div class=\"card border-warning mb-4\" *ngIf=\"showBrowserOutdated\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateBrowser\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateBrowserDesc\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            target=\"_blank\"\n            href=\"https://browser-update.org/update-browser.html\"\n            rel=\"noopener\"\n          >\n            {{ \"updateBrowser\" | i18n }}\n          </a>\n        </div>\n      </div>\n      <div class=\"card border-success mb-4\" *ngIf=\"showPremiumCallout\">\n        <div class=\"card-header bg-success text-white\">\n          <i class=\"bwi bwi-star-f bwi-fw\" aria-hidden=\"true\"></i> {{ \"goPremium\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            routerLink=\"/settings/subscription/premium\"\n          >\n            {{ \"goPremium\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #folderAddEdit></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #share></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #updateKeyTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { UpdateKeyComponent } from \"../settings/update-key.component\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { FolderAddEditComponent } from \"./folder-add-edit.component\";\nimport { ShareComponent } from \"./share.component\";\nimport { VaultService } from \"./shared/vault.service\";\nimport { VaultFilterService } from \"./vault-filter/shared/vault-filter.service\";\nimport { VaultFilterComponent } from \"./vault-filter/vault-filter.component\";\nimport { VaultItemsComponent } from \"./vault-items.component\";\n\nconst BroadcasterSubscriptionId = \"VaultComponent\";\n\n@Component({\n  selector: \"app-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(\"vaultFilter\", { static: true }) filterComponent: VaultFilterComponent;\n  @ViewChild(VaultItemsComponent, { static: true }) vaultItemsComponent: VaultItemsComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"folderAddEdit\", { read: ViewContainerRef, static: true })\n  folderAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"share\", { read: ViewContainerRef, static: true }) shareModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"updateKeyTemplate\", { read: ViewContainerRef, static: true })\n  updateKeyModalRef: ViewContainerRef;\n\n  folderId: string = null;\n  myVaultOnly = false;\n  showVerifyEmail = false;\n  showBrowserOutdated = false;\n  showUpdateKey = false;\n  showPremiumCallout = false;\n  trashCleanupWarning: string = null;\n  activeFilter: VaultFilter = new VaultFilter();\n\n  constructor(\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private tokenService: TokenService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private vaultService: VaultService,\n    private cipherService: CipherService,\n    private passwordRepromptService: PasswordRepromptService,\n    private vaultFilterService: VaultFilterService\n  ) {}\n\n  async ngOnInit() {\n    this.showVerifyEmail = !(await this.tokenService.getEmailVerified());\n    this.showBrowserOutdated = window.navigator.userAgent.indexOf(\"MSIE\") !== -1;\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      await this.syncService.fullSync(false);\n      const canAccessPremium = await this.stateService.getCanAccessPremium();\n      this.showPremiumCallout =\n        !this.showVerifyEmail && !canAccessPremium && !this.platformUtilsService.isSelfHost();\n\n      this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n      this.filterComponent.reloadOrganizations();\n      this.showUpdateKey = !(await this.cryptoService.hasEncKey());\n\n      const cipherId = getCipherIdFromParams(params);\n\n      if (cipherId) {\n        const cipherView = new CipherView();\n        cipherView.id = cipherId;\n        if (params.action === \"clone\") {\n          await this.cloneCipher(cipherView);\n        } else if (params.action === \"edit\") {\n          await this.editCipher(cipherView);\n        }\n      }\n      await this.vaultItemsComponent.reload();\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.subscribe(async (params) => {\n        const cipherId = getCipherIdFromParams(params);\n        if (cipherId) {\n          if ((await this.cipherService.get(cipherId)) != null) {\n            this.editCipherId(cipherId);\n          } else {\n            this.platformUtilsService.showToast(\n              \"error\",\n              this.i18nService.t(\"errorOccurred\"),\n              this.i18nService.t(\"unknownCipher\")\n            );\n            this.router.navigate([], {\n              queryParams: { itemId: null, cipherId: null },\n              queryParamsHandling: \"merge\",\n            });\n          }\n        }\n      });\n\n      this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n        this.ngZone.run(async () => {\n          switch (message.command) {\n            case \"syncCompleted\":\n              if (message.successfully) {\n                await Promise.all([\n                  this.filterComponent.reloadCollectionsAndFolders(this.activeFilter),\n                  this.filterComponent.reloadOrganizations(),\n                  this.vaultItemsComponent.load(this.vaultItemsComponent.filter),\n                ]);\n                this.changeDetectorRef.detectChanges();\n              }\n              break;\n          }\n        });\n      });\n    });\n  }\n\n  get isShowingCards() {\n    return (\n      this.showBrowserOutdated ||\n      this.showPremiumCallout ||\n      this.showUpdateKey ||\n      this.showVerifyEmail\n    );\n  }\n\n  emailVerified(verified: boolean) {\n    this.showVerifyEmail = !verified;\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async applyVaultFilter(vaultFilter: VaultFilter) {\n    this.vaultItemsComponent.showAddNew = vaultFilter.status !== \"trash\";\n    this.activeFilter = vaultFilter;\n    await this.vaultItemsComponent.reload(\n      this.activeFilter.buildFilter(),\n      vaultFilter.status === \"trash\"\n    );\n    this.filterComponent.searchPlaceholder = this.vaultService.calculateSearchBarLocalizationString(\n      this.activeFilter\n    );\n    this.go();\n  }\n\n  async applyOrganizationFilter(orgId: string) {\n    if (orgId == null) {\n      this.activeFilter.resetOrganization();\n      this.activeFilter.myVaultOnly = true;\n    } else {\n      this.activeFilter.selectedOrganizationId = orgId;\n    }\n    await this.vaultFilterService.ensureVaultFiltersAreExpanded();\n    await this.applyVaultFilter(this.activeFilter);\n  }\n\n  filterSearchText(searchText: string) {\n    this.vaultItemsComponent.searchText = searchText;\n    this.vaultItemsComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (cipher.organizationId == null && !canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    } else if (cipher.organizationId != null) {\n      const org = await this.organizationService.get(cipher.organizationId);\n      if (org != null && (org.maxStorageGb == null || org.maxStorageGb === 0)) {\n        this.messagingService.send(\"upgradeOrganization\", {\n          organizationId: cipher.organizationId,\n        });\n        return;\n      }\n    }\n\n    let madeAttachmentChanges = false;\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onReuploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.vaultItemsComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async shareCipher(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      ShareComponent,\n      this.shareModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSharedCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addFolder() {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = null;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n      }\n    );\n  }\n\n  async editFolder(folderId: string) {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = folderId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.type = this.activeFilter.cipherType;\n    component.folderId = this.folderId === \"none\" ? null : this.folderId;\n    if (this.activeFilter.selectedCollectionId != null) {\n      const collection = this.filterComponent.collections.fullList.filter(\n        (c) => c.id === this.activeFilter.selectedCollectionId\n      );\n      if (collection.length > 0) {\n        component.organizationId = collection[0].organizationId;\n        component.collectionIds = [this.activeFilter.selectedCollectionId];\n      }\n    }\n    if (this.activeFilter.selectedFolderId && this.activeFilter.selectedFolder) {\n      component.folderId = this.activeFilter.selectedFolderId;\n    }\n    if (this.activeFilter.selectedOrganizationId) {\n      component.organizationId = this.activeFilter.selectedOrganizationId;\n    }\n  }\n\n  async editCipher(cipher: CipherView) {\n    return this.editCipherId(cipher?.id);\n  }\n\n  async editCipherId(id: string) {\n    const cipher = await this.cipherService.get(id);\n    if (cipher != null && cipher.reprompt != 0) {\n      if (!(await this.passwordRepromptService.showPasswordPrompt())) {\n        this.go({ cipherId: null, itemId: null });\n        return;\n      }\n    }\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n\n    modal.onClosedPromise().then(() => {\n      this.go({ cipherId: null, itemId: null });\n    });\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n  }\n\n  async updateKey() {\n    await this.modalService.openViewRef(UpdateKeyComponent, this.updateKeyModalRef);\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        favorites: this.activeFilter.status === \"favorites\" ? true : null,\n        type: this.activeFilter.cipherType,\n        folderId: this.activeFilter.selectedFolderId,\n        collectionId: this.activeFilter.selectedCollectionId,\n        deleted: this.activeFilter.status === \"trash\" ? true : null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      queryParamsHandling: \"merge\",\n      replaceUrl: true,\n    });\n  }\n}\n\n/**\n * Allows backwards compatibility with\n * old links that used the original `cipherId` param\n */\nconst getCipherIdFromParams = (params: Params): string => {\n  return params[\"itemId\"] || params[\"cipherId\"];\n};\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { VaultComponent } from \"./vault.component\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: VaultComponent,\n    data: { titleId: \"vaults\" },\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VaultRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { OrganizationBadgeModule } from \"./organization-badge/organization-badge.module\";\nimport { VaultSharedModule } from \"./shared/vault-shared.module\";\nimport { VaultItemsComponent } from \"./vault-items.component\";\nimport { VaultRoutingModule } from \"./vault-routing.module\";\nimport { VaultComponent } from \"./vault.component\";\n\n@NgModule({\n  imports: [VaultSharedModule, VaultRoutingModule, OrganizationBadgeModule],\n  declarations: [VaultComponent, VaultItemsComponent],\n  exports: [VaultComponent],\n})\nexport class VaultModule {}\n","import { NgModule } from \"@angular/core\";\nimport { Route, RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { LockGuard } from \"@bitwarden/angular/guards/lock.guard\";\nimport { UnauthGuard } from \"@bitwarden/angular/guards/unauth.guard\";\n\nimport { flagEnabled, Flags } from \"../utils/flags\";\n\nimport { AcceptEmergencyComponent } from \"./accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"./accounts/accept-organization.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginWithDeviceComponent } from \"./accounts/login/login-with-device.component\";\nimport { LoginComponent } from \"./accounts/login/login.component\";\nimport { RecoverDeleteComponent } from \"./accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"./accounts/recover-two-factor.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TrialInitiationComponent } from \"./accounts/trial-initiation/trial-initiation.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"./accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"./accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"./accounts/verify-recover-delete.component\";\nimport { HomeGuard } from \"./guards/home.guard\";\nimport { FrontendLayoutComponent } from \"./layouts/frontend-layout.component\";\nimport { UserLayoutComponent } from \"./layouts/user-layout.component\";\nimport { OrganizationModule } from \"./organizations/organization.module\";\nimport { AcceptFamilySponsorshipComponent } from \"./organizations/sponsorships/accept-family-sponsorship.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"./organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ReportsModule } from \"./reports\";\nimport { AccessComponent } from \"./send/access.component\";\nimport { SendComponent } from \"./send/send.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { CreateOrganizationComponent } from \"./settings/create-organization.component\";\nimport { DomainRulesComponent } from \"./settings/domain-rules.component\";\nimport { EmergencyAccessViewComponent } from \"./settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"./settings/emergency-access.component\";\nimport { PreferencesComponent } from \"./settings/preferences.component\";\nimport { SecurityRoutingModule } from \"./settings/security-routing.module\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"./settings/sponsored-families.component\";\nimport { SubscriptionRoutingModule } from \"./settings/subscription-routing.module\";\nimport { GeneratorComponent } from \"./tools/generator.component\";\nimport { ToolsComponent } from \"./tools/tools.component\";\nimport { VaultModule } from \"./vault/vault.module\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    data: { doNotSaveUrl: true },\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        children: [], // Children lets us have an empty component.\n        canActivate: [HomeGuard], // Redirects either to vault, login or lock page.\n      },\n      { path: \"login\", component: LoginComponent, canActivate: [UnauthGuard] },\n      {\n        path: \"login-with-device\",\n        component: LoginWithDeviceComponent,\n        data: { titleId: \"loginWithDevice\" },\n      },\n      { path: \"2fa\", component: TwoFactorComponent, canActivate: [UnauthGuard] },\n      {\n        path: \"register\",\n        component: TrialInitiationComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"createAccount\" },\n      },\n      {\n        path: \"trial\",\n        redirectTo: \"register\",\n        pathMatch: \"full\",\n      },\n      {\n        path: \"sso\",\n        component: SsoComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"enterpriseSingleSignOn\" },\n      },\n      {\n        path: \"set-password\",\n        component: SetPasswordComponent,\n        data: { titleId: \"setMasterPassword\" },\n      },\n      {\n        path: \"hint\",\n        component: HintComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"passwordHint\" },\n      },\n      {\n        path: \"lock\",\n        component: LockComponent,\n        canActivate: [LockGuard],\n      },\n      { path: \"verify-email\", component: VerifyEmailTokenComponent },\n      {\n        path: \"accept-organization\",\n        component: AcceptOrganizationComponent,\n        data: { titleId: \"joinOrganization\", doNotSaveUrl: false },\n      },\n      {\n        path: \"accept-emergency\",\n        component: AcceptEmergencyComponent,\n        data: { titleId: \"acceptEmergency\", doNotSaveUrl: false },\n      },\n      {\n        path: \"accept-families-for-enterprise\",\n        component: AcceptFamilySponsorshipComponent,\n        data: { titleId: \"acceptFamilySponsorship\", doNotSaveUrl: false },\n      },\n      { path: \"recover\", pathMatch: \"full\", redirectTo: \"recover-2fa\" },\n      {\n        path: \"recover-2fa\",\n        component: RecoverTwoFactorComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"recoverAccountTwoStep\" },\n      },\n      {\n        path: \"recover-delete\",\n        component: RecoverDeleteComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"verify-recover-delete\",\n        component: VerifyRecoverDeleteComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"send/:sendId/:key\",\n        component: AccessComponent,\n        data: { title: \"Bitwarden Send\" },\n      },\n      {\n        path: \"update-temp-password\",\n        component: UpdateTempPasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"updateTempPassword\" },\n      },\n      {\n        path: \"update-password\",\n        component: UpdatePasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"updatePassword\" },\n      },\n      {\n        path: \"remove-password\",\n        component: RemovePasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"removeMasterPassword\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    component: UserLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: \"vault\",\n        loadChildren: () => VaultModule,\n      },\n      { path: \"sends\", component: SendComponent, data: { title: \"Send\" } },\n      {\n        path: \"create-organization\",\n        component: CreateOrganizationComponent,\n        data: { titleId: \"newOrganization\" },\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"account\" },\n          { path: \"account\", component: AccountComponent, data: { titleId: \"myAccount\" } },\n          {\n            path: \"preferences\",\n            component: PreferencesComponent,\n            data: { titleId: \"preferences\" },\n          },\n          {\n            path: \"security\",\n            loadChildren: () => SecurityRoutingModule,\n          },\n          {\n            path: \"domain-rules\",\n            component: DomainRulesComponent,\n            data: { titleId: \"domainRules\" },\n          },\n          {\n            path: \"subscription\",\n            loadChildren: () => SubscriptionRoutingModule,\n          },\n          {\n            path: \"emergency-access\",\n            children: [\n              {\n                path: \"\",\n                component: EmergencyAccessComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n              {\n                path: \":id\",\n                component: EmergencyAccessViewComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n            ],\n          },\n          {\n            path: \"sponsored-families\",\n            component: SponsoredFamiliesComponent,\n            data: { titleId: \"sponsoredFamilies\" },\n          },\n        ],\n      },\n      {\n        path: \"tools\",\n        component: ToolsComponent,\n        canActivate: [AuthGuard],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"generator\" },\n          {\n            path: \"\",\n            loadChildren: () =>\n              import(\"./tools/import-export/import-export.module\").then(\n                (m) => m.ImportExportModule\n              ),\n          },\n          {\n            path: \"generator\",\n            component: GeneratorComponent,\n            data: { titleId: \"generator\" },\n          },\n        ],\n      },\n      {\n        path: \"reports\",\n        loadChildren: () => ReportsModule,\n      },\n      { path: \"setup/families-for-enterprise\", component: FamiliesForEnterpriseSetupComponent },\n    ],\n  },\n  {\n    path: \"organizations\",\n    loadChildren: () => OrganizationModule,\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      paramsInheritanceStrategy: \"always\",\n      // enableTracing: true,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class OssRoutingModule {}\n\nexport function buildFlaggedRoute(flagName: keyof Flags, route: Route): Route {\n  return flagEnabled(flagName)\n    ? route\n    : {\n        path: route.path,\n        redirectTo: \"/\",\n      };\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from \"@angular/router\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HasPremiumGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private messagingService: MessagingService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const userHasPremium = await this.stateService.getCanAccessPremium();\n\n    if (!userHasPremium) {\n      this.messagingService.send(\"premiumRequired\");\n    }\n\n    // Prevent trapping the user on the login page, since that's an awful UX flow\n    if (!userHasPremium && this.router.url === \"/login\") {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    return userHasPremium;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"dataBreachReport\" | i18n }}</h1>\n</div>\n<p>{{ \"breachDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"username\">{{ \"username\" | i18n }}</label>\n      <input\n        id=\"username\"\n        type=\"text\"\n        name=\"Username\"\n        class=\"form-control\"\n        [(ngModel)]=\"username\"\n        required\n      />\n      <small class=\"form-text text-muted\">{{ \"breachCheckUsernameEmail\" | i18n }}</small>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"checkBreaches\" | i18n }}\n  </button>\n</form>\n<div class=\"mt-4\" *ngIf=\"!form.loading && checkedUsername\">\n  <p *ngIf=\"error\">{{ \"reportError\" | i18n }}...</p>\n  <ng-container *ngIf=\"!error\">\n    <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!breachedAccounts.length\">\n      {{ \"breachUsernameNotFound\" | i18n: checkedUsername }}\n    </app-callout>\n    <app-callout type=\"danger\" title=\"{{ 'breachFound' | i18n }}\" *ngIf=\"breachedAccounts.length\">\n      {{ \"breachUsernameFound\" | i18n: checkedUsername:breachedAccounts.length }}\n    </app-callout>\n    <ul class=\"list-group list-group-breach\" *ngIf=\"breachedAccounts.length\">\n      <li *ngFor=\"let a of breachedAccounts\" class=\"list-group-item min-height-fix\">\n        <div class=\"row\">\n          <div class=\"col-2 text-center\">\n            <img [src]=\"a.logoPath\" alt=\"\" class=\"img-fluid\" />\n          </div>\n          <div class=\"col-7\">\n            <h3 class=\"text-lg\">{{ a.title }}</h3>\n            <p [innerHTML]=\"a.description\"></p>\n            <p class=\"mb-1\">{{ \"compromisedData\" | i18n }}:</p>\n            <ul>\n              <li *ngFor=\"let d of a.dataClasses\">{{ d }}</li>\n            </ul>\n          </div>\n          <div class=\"col-3\">\n            <dl>\n              <dt>{{ \"website\" | i18n }}</dt>\n              <dd>{{ a.domain }}</dd>\n              <dt>{{ \"affectedUsers\" | i18n }}</dt>\n              <dd>{{ a.pwnCount | number }}</dd>\n              <dt>{{ \"breachOccurred\" | i18n }}</dt>\n              <dd>{{ a.breachDate | date: \"mediumDate\" }}</dd>\n              <dt>{{ \"breachReported\" | i18n }}</dt>\n              <dd>{{ a.addedDate | date: \"mediumDate\" }}</dd>\n            </dl>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </ng-container>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { BreachAccountResponse } from \"@bitwarden/common/models/response/breach-account.response\";\n\n@Component({\n  selector: \"app-breach-report\",\n  templateUrl: \"breach-report.component.html\",\n})\nexport class BreachReportComponent implements OnInit {\n  error = false;\n  username: string;\n  checkedUsername: string;\n  breachedAccounts: BreachAccountResponse[] = [];\n  formPromise: Promise<BreachAccountResponse[]>;\n\n  constructor(private auditService: AuditService, private stateService: StateService) {}\n\n  async ngOnInit() {\n    this.username = await this.stateService.getEmail();\n  }\n\n  async submit() {\n    this.error = false;\n    this.username = this.username.toLowerCase();\n    try {\n      this.formPromise = this.auditService.breachedAccounts(this.username);\n      this.breachedAccounts = await this.formPromise;\n    } catch {\n      this.error = true;\n    }\n    this.checkedUsername = this.username;\n  }\n}\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportBreach = svgIcon`\n  <svg width=\"58\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.569 74H13.007a7 7 0 0 1-7-7V31.077a7 7 0 0 1 7-7h19.101a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.912V67a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M44.576 69.055H18.015a7 7 0 0 1-7-7V26.132a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.911v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M50 63.698H23.439a7 7 0 0 1-7-7V20.775a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.575A7 7 0 0 1 57 28.35v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M44.648 13.599v3.95a8 8 0 0 0 8 8h4.518\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M23.533 37.736H49.49M23.533 46.802H49.49M23.533 42.269H49.49M23.533 55.456H49.49M23.533 50.923H49.49\" />\n    <path d=\"M1 16.483C1 7.944 8.013 1 16.69 1c8.678 0 15.691 6.944 15.691 15.483 0 8.54-7.013 15.484-15.69 15.484C8.012 31.967 1 25.023 1 16.484Z\" fill=\"#518FFF\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"m16.562 7.979.1 11.538\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n    <ellipse rx=\"1.252\" ry=\"1.236\" transform=\"rotate(-.479 2802.219 -1964.476) skewX(.012)\" fill=\"#fff\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportExposedPasswords = svgIcon`\n  <svg width=\"101\" height=\"77\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.374 50.192a26.42 26.42 0 0 0 9.111 1.608c14.34 0 25.965-11.372 25.965-25.4 0-.337-.007-.673-.02-1.008h25.299v34.85H32.374v-10.05Z\" fill=\"currentColor\" />\n    <path d=\"M15.805 26.4c0 14.028 11.625 25.4 25.965 25.4s25.964-11.372 25.964-25.4C67.734 12.372 56.11 1 41.77 1 27.43 1 15.805 12.372 15.805 26.4Z\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M27.914 47.849a1 1 0 0 0-2 0h2Zm68.288-26.792a2.12 2.12 0 0 1 2.14 2.11h2c0-2.253-1.83-4.11-4.14-4.11v2Zm2.14 2.11v40.552h2V23.167h-2Zm0 40.552c0 1.172-.958 2.11-2.14 2.11v2c2.25 0 4.14-1.798 4.14-4.11h-2Zm-2.14 2.11H30.054v2h66.148v-2Zm-66.148 0a2.12 2.12 0 0 1-2.14-2.11h-2a4.12 4.12 0 0 0 4.14 4.11v-2Zm-2.14-2.11V47.85h-2v15.87h2Zm39.254-42.662h29.034v-2H67.168v2Z\" fill=\"#fff\" />\n    <path d=\"M67.203 25.56h25.64v34.85H32.487V50.011\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"M47.343 76h31.571\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M57.557 66.83V76M67.771 66.83V76\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"m20.995 42.873-3.972 3.972-14.61 14.61a3.413 3.413 0 0 0 0 4.826v0a3.413 3.413 0 0 0 4.827 0l14.61-14.61 3.972-3.972\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M86.037 32.488H71.845M86.037 37.81H76.28M71.845 37.81h-6.652M86.037 43.132h-6.209M74.95 43.132H61.2M86.037 48.454H71.845M66.967 48.454h-7.54M86.037 53.776H66.08M61.201 53.776h-11.53M44.793 53.776h-7.096\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n    <rect width=\"40.801\" height=\"9.757\" rx=\"4\" transform=\"matrix(-1 0 0 1 61.201 14.748)\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M16.852 33.375h28.375a4 4 0 0 1 4 4v1.757a4 4 0 0 1-4 4H22.174M66.523 33.375h-3.539a4 4 0 0 0-4 4v3.761c0 1.102.894 1.996 1.996 1.996v0\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportInactiveTwoFactor = svgIcon`\n  <svg width=\"42\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" d=\"M1 13.121h39.595v48.758H1z\" />\n    <rect x=\"1\" y=\"1\" width=\"39.595\" height=\"73\" rx=\"8\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M12.344 8.091h16.907M18.907 67.424h3.025M31.503 32.515c-2.047-4.337-6.717-7.061-11.73-6.414a11.356 11.356 0 0 0-9.125 7.126M10.816 42.016c2.047 4.337 6.718 7.062 11.73 6.414 4.346-.562 7.8-3.51 9.213-7.358\" />\n    <path d=\"m33.584 29.293-1.295 4.625-4.625-1.295M8.523 44.725l1.441-4.581 4.582 1.441\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportReusedPasswords = svgIcon`\n  <svg width=\"102\" height=\"102\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M57.983 15.06a35.664 35.664 0 0 1 14.531 6.27c16.164 11.78 19.585 34.613 7.643 51a37.227 37.227 0 0 1-6.81 7.138m-32.842 6.697a35.708 35.708 0 0 1-11.239-5.495c-16.163-11.78-19.585-34.613-7.642-51a37.55 37.55 0 0 1 3.295-3.929\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M93.909 64.598H7.72c-.708 0-1.275-.662-1.275-1.49V40.273c0-.828.567-1.49 1.275-1.49H93.91c.708 0 1.275.663 1.275 1.49v22.837c.047.827-.567 1.49-1.275 1.49Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M21.532 52.186v-5.965M21.532 52.187l5.748-1.844M21.532 52.186l3.524 4.881M21.531 52.186l-3.47 4.881M21.532 52.187l-5.694-1.844M40.944 52.186v-5.965M40.944 52.187l5.694-1.844M40.944 52.187l3.525 4.88M40.944 52.187l-3.525 4.88M40.944 52.187l-5.694-1.844M54.849 57.337h11.294M74.21 57.337h11.295M41.75 83l.71 4.75-4.75.71M58.664 18.66 56 14.665 59.996 12\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportUnsecuredWebsites = svgIcon`\n  <svg width=\"113\" height=\"76\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1.71 12.983h110.362v55.11a6 6 0 0 1-6 6H7.711a6 6 0 0 1-6-6v-55.11Z\" fill=\"currentColor\" />\n    <rect x=\"1\" y=\"1.073\" width=\"110.5\" height=\"73.454\" rx=\"9\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M89.48 8.048V7.47M96.363 8.048V7.47M103.246 8.048V7.47\" stroke=\"#fff\" stroke-width=\"4\" stroke-linecap=\"round\" />\n    <path d=\"M0 12.983h111.217\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"m93.236 44.384-18.42-11.026 2.93 21.266 5.582-5.237 4.27 6.46 2.98-1.971-4.26-6.446 6.918-3.046Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <rect width=\"96.673\" height=\"6.886\" rx=\"3.443\" transform=\"matrix(-1 0 0 1 104.373 18.721)\" stroke=\"#fff\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportWeakPasswords = svgIcon`\n  <svg width=\"78\" height=\"78\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M66.493 64.415V77H9.979V64.324M9.979 44.065V32.106h56.514v12.148\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"M75.44 64.852H2.085c-.603 0-1.085-.555-1.085-1.25V44.448c0-.694.482-1.25 1.085-1.25H75.44c.603 0 1.085.556 1.085 1.25v19.156c.04.694-.482 1.25-1.085 1.25Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M13.84 54.56v-5.077M13.84 54.56l4.893-1.57M13.84 54.56l3 4.153M13.84 54.56l-2.954 4.153M13.84 54.56l-4.846-1.57M30.363 54.56v-5.077M30.363 54.56l4.846-1.57M30.363 54.56l3 4.153M30.363 54.56l-3 4.153M30.363 54.56l-4.846-1.57M42.197 59.042h9.506M58.57 59.042h9.507\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M20.863 31.364c-.274-5.285 0-15.817 1.093-18.863 1.276-3.554 6.233-10.826 15.856-11.482 4.83-.273 15.2 2.296 18.043 14.763\" stroke=\"#fff\" stroke-width=\"2\" />\n  </svg>\n`;\n","import { ReportBreach } from \"./icons/report-breach.icon\";\nimport { ReportExposedPasswords } from \"./icons/report-exposed-passwords.icon\";\nimport { ReportInactiveTwoFactor } from \"./icons/report-inactive-two-factor.icon\";\nimport { ReportReusedPasswords } from \"./icons/report-reused-passwords.icon\";\nimport { ReportUnsecuredWebsites } from \"./icons/report-unsecured-websites.icon\";\nimport { ReportWeakPasswords } from \"./icons/report-weak-passwords.icon\";\nimport { ReportEntry } from \"./shared\";\n\nexport enum ReportType {\n  ExposedPasswords = \"exposedPasswords\",\n  ReusedPasswords = \"reusedPasswords\",\n  WeakPasswords = \"weakPasswords\",\n  UnsecuredWebsites = \"unsecuredWebsites\",\n  Inactive2fa = \"inactive2fa\",\n  DataBreach = \"dataBreach\",\n}\n\ntype ReportWithoutVariant = Omit<ReportEntry, \"variant\">;\n\nexport const reports: Record<ReportType, ReportWithoutVariant> = {\n  [ReportType.ExposedPasswords]: {\n    title: \"exposedPasswordsReport\",\n    description: \"exposedPasswordsReportDesc\",\n    route: \"exposed-passwords-report\",\n    icon: ReportExposedPasswords,\n  },\n  [ReportType.ReusedPasswords]: {\n    title: \"reusedPasswordsReport\",\n    description: \"reusedPasswordsReportDesc\",\n    route: \"reused-passwords-report\",\n    icon: ReportReusedPasswords,\n  },\n  [ReportType.WeakPasswords]: {\n    title: \"weakPasswordsReport\",\n    description: \"weakPasswordsReportDesc\",\n    route: \"weak-passwords-report\",\n    icon: ReportWeakPasswords,\n  },\n  [ReportType.UnsecuredWebsites]: {\n    title: \"unsecuredWebsitesReport\",\n    description: \"unsecuredWebsitesReportDesc\",\n    route: \"unsecured-websites-report\",\n    icon: ReportUnsecuredWebsites,\n  },\n  [ReportType.Inactive2fa]: {\n    title: \"inactive2faReport\",\n    description: \"inactive2faReportDesc\",\n    route: \"inactive-two-factor-report\",\n    icon: ReportInactiveTwoFactor,\n  },\n  [ReportType.DataBreach]: {\n    title: \"dataBreachReport\",\n    description: \"breachDesc\",\n    route: \"breach-report\",\n    icon: ReportBreach,\n  },\n};\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared/shared.module\";\n\nimport { ReportCardComponent } from \"./report-card/report-card.component\";\nimport { ReportListComponent } from \"./report-list/report-list.component\";\n\n@NgModule({\n  imports: [CommonModule, SharedModule],\n  declarations: [ReportCardComponent, ReportListComponent],\n  exports: [ReportCardComponent, ReportListComponent],\n})\nexport class ReportsSharedModule {}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { reports, ReportType } from \"../reports\";\nimport { ReportEntry, ReportVariant } from \"../shared\";\n\n@Component({\n  selector: \"app-reports-home\",\n  templateUrl: \"reports-home.component.html\",\n})\nexport class ReportsHomeComponent implements OnInit {\n  reports: ReportEntry[];\n\n  constructor(private stateService: StateService) {}\n\n  async ngOnInit(): Promise<void> {\n    const userHasPremium = await this.stateService.getCanAccessPremium();\n\n    const reportRequiresPremium = userHasPremium\n      ? ReportVariant.Enabled\n      : ReportVariant.RequiresPremium;\n\n    this.reports = [\n      {\n        ...reports[ReportType.ExposedPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.ReusedPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.WeakPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.UnsecuredWebsites],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.Inactive2fa],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.DataBreach],\n        variant: ReportVariant.Enabled,\n      },\n    ];\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"reports\" | i18n }}</h1>\n</div>\n\n<p>{{ \"reportsDesc\" | i18n }}</p>\n\n<app-report-list [reports]=\"reports\"></app-report-list>\n","<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n\n  <div class=\"row mt-4\">\n    <div class=\"col\">\n      <a bitButton routerLink=\"./\" *ngIf=\"!homepage\">\n        <i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i>\n        {{ \"backToReports\" | i18n }}\n      </a>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { filter } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-reports-layout\",\n  templateUrl: \"reports-layout.component.html\",\n})\nexport class ReportsLayoutComponent implements OnDestroy {\n  homepage = true;\n  subscription: Subscription;\n\n  constructor(router: Router) {\n    this.subscription = router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n      .subscribe((event) => {\n        this.homepage = (event as NavigationEnd).url == \"/reports\";\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\n\nimport { HasPremiumGuard } from \"../shared/guards/has-premium.guard\";\n\nimport { BreachReportComponent } from \"./pages/breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"./pages/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./pages/inactive-two-factor-report.component\";\nimport { ReportsHomeComponent } from \"./pages/reports-home.component\";\nimport { ReusedPasswordsReportComponent } from \"./pages/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./pages/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./pages/weak-passwords-report.component\";\nimport { ReportsLayoutComponent } from \"./reports-layout.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ReportsLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: \"\", pathMatch: \"full\", component: ReportsHomeComponent, data: { homepage: true } },\n      {\n        path: \"breach-report\",\n        component: BreachReportComponent,\n        data: { titleId: \"dataBreachReport\" },\n      },\n      {\n        path: \"reused-passwords-report\",\n        component: ReusedPasswordsReportComponent,\n        data: { titleId: \"reusedPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"unsecured-websites-report\",\n        component: UnsecuredWebsitesReportComponent,\n        data: { titleId: \"unsecuredWebsitesReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"weak-passwords-report\",\n        component: WeakPasswordsReportComponent,\n        data: { titleId: \"weakPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"exposed-passwords-report\",\n        component: ExposedPasswordsReportComponent,\n        data: { titleId: \"exposedPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"inactive-two-factor-report\",\n        component: InactiveTwoFactorReportComponent,\n        data: { titleId: \"inactive2faReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReportsRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared\";\n\nimport { BreachReportComponent } from \"./pages/breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"./pages/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./pages/inactive-two-factor-report.component\";\nimport { ReportsHomeComponent } from \"./pages/reports-home.component\";\nimport { ReusedPasswordsReportComponent } from \"./pages/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./pages/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./pages/weak-passwords-report.component\";\nimport { ReportsLayoutComponent } from \"./reports-layout.component\";\nimport { ReportsRoutingModule } from \"./reports-routing.module\";\nimport { ReportsSharedModule } from \"./shared\";\n\n@NgModule({\n  imports: [CommonModule, SharedModule, ReportsSharedModule, ReportsRoutingModule],\n  declarations: [\n    BreachReportComponent,\n    ExposedPasswordsReportComponent,\n    InactiveTwoFactorReportComponent,\n    ReportsLayoutComponent,\n    ReportsHomeComponent,\n    ReusedPasswordsReportComponent,\n    UnsecuredWebsitesReportComponent,\n    WeakPasswordsReportComponent,\n    WeakPasswordsReportComponent,\n  ],\n})\nexport class ReportsModule {}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { AddEditComponent as OrgAddEditComponent } from \"../../organizations/vault/add-edit.component\";\nimport { AddEditComponent } from \"../../vault/add-edit.component\";\n\n@Directive()\nexport class CipherReportComponent {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n\n  loading = false;\n  hasLoaded = false;\n  ciphers: CipherView[] = [];\n  organization: Organization;\n\n  constructor(\n    private modalService: ModalService,\n    protected messagingService: MessagingService,\n    public requiresPaid: boolean,\n    private stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async load() {\n    this.loading = true;\n    await this.setCiphers();\n    this.loading = false;\n    this.hasLoaded = true;\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (!(await this.repromptCipher(cipher))) {\n      return;\n    }\n\n    const type = this.organization != null ? OrgAddEditComponent : AddEditComponent;\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      type,\n      this.cipherAddEditModalRef,\n      (comp: OrgAddEditComponent | AddEditComponent) => {\n        if (this.organization != null) {\n          (comp as OrgAddEditComponent).organization = this.organization;\n          comp.organizationId = this.organization.id;\n        }\n\n        comp.cipherId = cipher == null ? null : cipher.id;\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n\n  protected async checkAccess(): Promise<boolean> {\n    if (this.organization != null) {\n      // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n      // since all paid plans include useTotp\n      if (this.requiresPaid && !this.organization.useTotp) {\n        this.messagingService.send(\"upgradeOrganization\", { organizationId: this.organization.id });\n        return false;\n      }\n    }\n    return true;\n  }\n\n  protected async setCiphers() {\n    this.ciphers = [];\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"exposedPasswordsReport\" | i18n }}</h1>\n</div>\n<p>{{ \"exposedPasswordsReportDesc\" | i18n }}</p>\n<button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"loading\" (click)=\"load()\">\n  {{ \"checkExposedPasswords\" | i18n }}\n</button>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noExposedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'exposedPasswordsFound' | i18n }}\" [useAlertRole]=\"true\">\n      {{ \"exposedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"exposedXTimes\" | i18n: (exposedPasswordMap.get(c.id) | number) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-exposed-passwords-report\",\n  templateUrl: \"exposed-passwords-report.component.html\",\n})\nexport class ExposedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  exposedPasswordMap = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected auditService: AuditService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  ngOnInit() {\n    this.checkAccess();\n  }\n\n  async load() {\n    if (await this.checkAccess()) {\n      super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const exposedPasswordCiphers: CipherView[] = [];\n    const promises: Promise<void>[] = [];\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const promise = this.auditService.passwordLeaked(c.login.password).then((exposedCount) => {\n        if (exposedCount > 0) {\n          exposedPasswordCiphers.push(c);\n          this.exposedPasswordMap.set(c.id, exposedCount);\n        }\n      });\n      promises.push(promise);\n    });\n    await Promise.all(promises);\n    this.ciphers = exposedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"inactive2faReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"inactive2faReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noInactive2fa\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'inactive2faFound' | i18n }}\">\n      {{ \"inactive2faFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <a\n              bitBadge\n              href=\"{{ cipherDocs.get(c.id) }}\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              *ngIf=\"cipherDocs.has(c.id)\"\n            >\n              {{ \"instructions\" | i18n }}</a\n            >\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"inactive-two-factor-report.component.html\",\n})\nexport class InactiveTwoFactorReportComponent extends CipherReportComponent implements OnInit {\n  services = new Map<string, string>();\n  cipherDocs = new Map<string, string>();\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    try {\n      await this.load2fa();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (this.services.size > 0) {\n      const allCiphers = await this.getAllCiphers();\n      const inactive2faCiphers: CipherView[] = [];\n      const promises: Promise<void>[] = [];\n      const docs = new Map<string, string>();\n      allCiphers.forEach((c) => {\n        if (\n          c.type !== CipherType.Login ||\n          (c.login.totp != null && c.login.totp !== \"\") ||\n          !c.login.hasUris ||\n          c.isDeleted\n        ) {\n          return;\n        }\n        for (let i = 0; i < c.login.uris.length; i++) {\n          const u = c.login.uris[i];\n          if (u.uri != null && u.uri !== \"\") {\n            const uri = u.uri.replace(\"www.\", \"\");\n            const domain = Utils.getDomain(uri);\n            if (domain != null && this.services.has(domain)) {\n              if (this.services.get(domain) != null) {\n                docs.set(c.id, this.services.get(domain));\n              }\n              inactive2faCiphers.push(c);\n            }\n          }\n        }\n      });\n      await Promise.all(promises);\n      this.ciphers = inactive2faCiphers;\n      this.cipherDocs = docs;\n    }\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  private async load2fa() {\n    if (this.services.size > 0) {\n      return;\n    }\n    const response = await fetch(new Request(\"https://api.2fa.directory/v3/totp.json\"));\n    if (response.status !== 200) {\n      throw new Error();\n    }\n    const responseJson = await response.json();\n    for (const service of responseJson) {\n      const serviceData = service[1];\n      if (serviceData.domain == null) {\n        continue;\n      }\n      if (serviceData.documentation == null) {\n        continue;\n      }\n      if (serviceData[\"additional-domains\"] != null) {\n        for (const additionalDomain of serviceData[\"additional-domains\"]) {\n          this.services.set(additionalDomain, serviceData.documentation);\n        }\n      }\n      this.services.set(serviceData.domain, serviceData.documentation);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"reusedPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"reusedPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noReusedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'reusedPasswordsFound' | i18n }}\">\n      {{ \"reusedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"reusedXTimes\" | i18n: passwordUseMap.get(c.login.password) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"reused-passwords-report.component.html\",\n})\nexport class ReusedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordUseMap: Map<string, number>;\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const ciphersWithPasswords: CipherView[] = [];\n    this.passwordUseMap = new Map<string, number>();\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      ciphersWithPasswords.push(c);\n      if (this.passwordUseMap.has(c.login.password)) {\n        this.passwordUseMap.set(c.login.password, this.passwordUseMap.get(c.login.password) + 1);\n      } else {\n        this.passwordUseMap.set(c.login.password, 1);\n      }\n    });\n    const reusedPasswordCiphers = ciphersWithPasswords.filter(\n      (c) =>\n        this.passwordUseMap.has(c.login.password) && this.passwordUseMap.get(c.login.password) > 1\n    );\n    this.ciphers = reusedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from an organization view\n    return true;\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"unsecuredWebsitesReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"unsecuredWebsitesReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noUnsecuredWebsites\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'unsecuredWebsitesFound' | i18n }}\">\n      {{ \"unsecuredWebsitesFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"unsecured-websites-report.component.html\",\n})\nexport class UnsecuredWebsitesReportComponent extends CipherReportComponent implements OnInit {\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const unsecuredCiphers = allCiphers.filter((c) => {\n      if (c.type !== CipherType.Login || !c.login.hasUris || c.isDeleted) {\n        return false;\n      }\n      return c.login.uris.some((u) => u.uri != null && u.uri.indexOf(\"http://\") === 0);\n    });\n    this.ciphers = unsecuredCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"weakPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"weakPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noWeakPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'weakPasswordsFound' | i18n }}\">\n      {{ \"weakPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge [badgeType]=\"passwordStrengthMap.get(c.id)[1]\">\n              {{ passwordStrengthMap.get(c.id)[0] | i18n }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { BadgeTypes } from \"@bitwarden/components\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"weak-passwords-report.component.html\",\n})\nexport class WeakPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordStrengthMap = new Map<string, [string, BadgeTypes]>();\n\n  private passwordStrengthCache = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected passwordGenerationService: PasswordGenerationService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const weakPasswordCiphers: CipherView[] = [];\n    const isUserNameNotEmpty = (c: CipherView): boolean => {\n      return c.login.username != null && c.login.username.trim() !== \"\";\n    };\n    const getCacheKey = (c: CipherView): string => {\n      return c.login.password + \"_____\" + (isUserNameNotEmpty(c) ? c.login.username : \"\");\n    };\n\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const hasUserName = isUserNameNotEmpty(c);\n      const cacheKey = getCacheKey(c);\n      if (!this.passwordStrengthCache.has(cacheKey)) {\n        let userInput: string[] = [];\n        if (hasUserName) {\n          const atPosition = c.login.username.indexOf(\"@\");\n          if (atPosition > -1) {\n            userInput = userInput\n              .concat(\n                c.login.username\n                  .substr(0, atPosition)\n                  .trim()\n                  .toLowerCase()\n                  .split(/[^A-Za-z0-9]/)\n              )\n              .filter((i) => i.length >= 3);\n          } else {\n            userInput = c.login.username\n              .trim()\n              .toLowerCase()\n              .split(/[^A-Za-z0-9]/)\n              .filter((i) => i.length >= 3);\n          }\n        }\n        const result = this.passwordGenerationService.passwordStrength(\n          c.login.password,\n          userInput.length > 0 ? userInput : null\n        );\n        this.passwordStrengthCache.set(cacheKey, result.score);\n      }\n      const score = this.passwordStrengthCache.get(cacheKey);\n      if (score != null && score <= 2) {\n        this.passwordStrengthMap.set(c.id, this.scoreKey(score));\n        weakPasswordCiphers.push(c);\n      }\n    });\n    weakPasswordCiphers.sort((a, b) => {\n      return (\n        this.passwordStrengthCache.get(getCacheKey(a)) -\n        this.passwordStrengthCache.get(getCacheKey(b))\n      );\n    });\n    this.ciphers = weakPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n\n  private scoreKey(score: number): [string, BadgeTypes] {\n    switch (score) {\n      case 4:\n        return [\"strong\", \"success\"];\n      case 3:\n        return [\"good\", \"primary\"];\n      case 2:\n        return [\"weak\", \"warning\"];\n      default:\n        return [\"veryWeak\", \"danger\"];\n    }\n  }\n}\n","export enum ReportVariant {\n  Enabled = \"Enabled\",\n  RequiresPremium = \"RequiresPremium\",\n  RequiresUpgrade = \"RequiresUpgrade\",\n}\n","<a\n  class=\"tw-block tw-h-full tw-max-w-72 tw-overflow-hidden tw-rounded tw-border tw-border-solid tw-border-secondary-300 !tw-text-main tw-transition-all hover:tw-scale-105 hover:tw-no-underline focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2\"\n  [routerLink]=\"route\"\n>\n  <div class=\"tw-relative\">\n    <div\n      class=\"tw-flex tw-h-28 tw-bg-background-alt2 tw-text-center tw-text-primary-300\"\n      [ngClass]=\"{ 'tw-grayscale': disabled }\"\n    >\n      <div class=\"tw-m-auto\"><bit-icon [icon]=\"icon\" aria-hidden=\"true\"></bit-icon></div>\n    </div>\n    <div class=\"tw-p-5\" [ngClass]=\"{ 'tw-grayscale': disabled }\">\n      <h3 class=\"tw-mb-4 tw-text-xl tw-font-bold\">{{ title }}</h3>\n      <p class=\"tw-mb-0\">{{ description }}</p>\n    </div>\n    <span\n      bitBadge\n      badgeType=\"success\"\n      class=\"tw-absolute tw-left-2 tw-top-2 tw-leading-none\"\n      *ngIf=\"disabled\"\n    >\n      <ng-container *ngIf=\"requiresPremium\">{{ \"premium\" | i18n }}</ng-container>\n      <ng-container *ngIf=\"!requiresPremium\">{{ \"upgrade\" | i18n }}</ng-container>\n    </span>\n  </div>\n</a>\n","import { Component, Input } from \"@angular/core\";\n\nimport { Icon } from \"@bitwarden/components\";\n\nimport { ReportVariant } from \"../models/report-variant\";\n\n@Component({\n  selector: \"app-report-card\",\n  templateUrl: \"report-card.component.html\",\n})\nexport class ReportCardComponent {\n  @Input() title: string;\n  @Input() description: string;\n  @Input() route: string;\n  @Input() icon: Icon;\n  @Input() variant: ReportVariant;\n\n  protected get disabled() {\n    return this.variant != ReportVariant.Enabled;\n  }\n\n  protected get requiresPremium() {\n    return this.variant == ReportVariant.RequiresPremium;\n  }\n}\n","<div class=\"tw-inline-grid tw-grid-cols-3 tw-gap-4\">\n  <div *ngFor=\"let report of reports\">\n    <app-report-card\n      [title]=\"report.title | i18n\"\n      [description]=\"report.description | i18n\"\n      [route]=\"report.route\"\n      [variant]=\"report.variant\"\n      [icon]=\"report.icon\"\n    ></app-report-card>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ReportEntry } from \"../models/report-entry\";\n\n@Component({\n  selector: \"app-report-list\",\n  templateUrl: \"report-list.component.html\",\n})\nexport class ReportListComponent {\n  @Input() reports: ReportEntry[];\n}\n","export class StorageRequest {\n  storageGbAdjustment: number;\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ (add ? \"addStorage\" : \"removeStorage\") | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"storageAdjustment\">{{\n          (add ? \"gbStorageAdd\" : \"gbStorageRemove\") | i18n\n        }}</label>\n        <input\n          id=\"storageAdjustment\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"StroageGbAdjustment\"\n          [(ngModel)]=\"storageAdjustment\"\n          min=\"0\"\n          max=\"99\"\n          step=\"1\"\n          required\n        />\n      </div>\n    </div>\n    <div *ngIf=\"add\" class=\"mb-3\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ storageAdjustment || 0 }} GB &times;\n      {{ storageGbPrice | currency: \"$\" }} = {{ adjustedStorageTotal | currency: \"$\" }} /{{\n        interval | i18n\n      }}\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n    <small class=\"d-block text-muted mt-3\">\n      {{ (add ? \"storageAddNote\" : \"storageRemoveNote\") | i18n }}\n    </small>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StorageRequest } from \"@bitwarden/common/models/request/storage.request\";\nimport { PaymentResponse } from \"@bitwarden/common/models/response/payment.response\";\n\nimport { PaymentComponent } from \"./payment.component\";\n\n@Component({\n  selector: \"app-adjust-storage\",\n  templateUrl: \"adjust-storage.component.html\",\n})\nexport class AdjustStorageComponent {\n  @Input() storageGbPrice = 0;\n  @Input() add = true;\n  @Input() organizationId: string;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter<number>();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n\n  storageAdjustment = 0;\n  formPromise: Promise<PaymentResponse | void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    try {\n      const request = new StorageRequest();\n      request.storageGbAdjustment = this.storageAdjustment;\n      if (!this.add) {\n        request.storageGbAdjustment *= -1;\n      }\n\n      let paymentFailed = false;\n      const action = async () => {\n        let response: Promise<PaymentResponse>;\n        if (this.organizationId == null) {\n          response = this.formPromise = this.apiService.postAccountStorage(request);\n        } else {\n          response = this.formPromise = this.organizationApiService.updateStorage(\n            this.organizationId,\n            request\n          );\n        }\n        const result = await response;\n        if (result != null && result.paymentIntentClientSecret != null) {\n          try {\n            await this.paymentComponent.handleStripeCardPayment(\n              result.paymentIntentClientSecret,\n              null\n            );\n          } catch {\n            paymentFailed = true;\n          }\n        }\n      };\n      this.formPromise = action();\n      await this.formPromise;\n      this.onAdjusted.emit(this.storageAdjustment);\n      if (paymentFailed) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          null,\n          this.i18nService.t(\"couldNotChargeCardPayInvoice\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"../billing\"], { relativeTo: this.activatedRoute });\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"adjustedStorage\", request.storageGbAdjustment.toString())\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  get adjustedStorageTotal(): number {\n    return this.storageGbPrice * this.storageAdjustment;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"apiKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"apiKeyTitle\">{{ apiKeyTitle | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ apiKeyDescription | i18n }}</p>\n        <app-user-verification\n          [(ngModel)]=\"masterPassword\"\n          ngDefaultControl\n          name=\"secret\"\n          *ngIf=\"!clientSecret\"\n        >\n        </app-user-verification>\n\n        <app-callout type=\"warning\" *ngIf=\"clientSecret\">{{ apiKeyWarning | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          title=\"{{ 'oauth2ClientCredentials' | i18n }}\"\n          icon=\"bwi bwi-key\"\n          *ngIf=\"clientSecret\"\n        >\n          <p class=\"mb-1\">\n            <strong>client_id:</strong><br />\n            <code>{{ clientId }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>client_secret:</strong><br />\n            <code>{{ clientSecret }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>scope:</strong><br />\n            <code>{{ scope }}</code>\n          </p>\n          <p class=\"mb-0\">\n            <strong>grant_type:</strong><br />\n            <code>{{ grantType }}</code>\n          </p>\n        </app-callout>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!clientSecret\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (isRotation ? \"rotateApiKey\" : \"viewApiKey\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/api-key.response\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-api-key\",\n  templateUrl: \"api-key.component.html\",\n})\nexport class ApiKeyComponent {\n  keyType: string;\n  isRotation: boolean;\n  postKey: (entityId: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  entityId: string;\n  scope: string;\n  grantType: string;\n  apiKeyTitle: string;\n  apiKeyWarning: string;\n  apiKeyDescription: string;\n\n  masterPassword: Verification;\n  formPromise: Promise<ApiKeyResponse>;\n  clientId: string;\n  clientSecret: string;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.postKey(this.entityId, request));\n      const response = await this.formPromise;\n      this.clientSecret = response.apiKey;\n      this.clientId = `${this.keyType}.${this.entityId}`;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export enum TransactionType {\n  Charge = 0,\n  Credit = 1,\n  PromotionalCredit = 2,\n  ReferralCredit = 3,\n  Refund = 4,\n}\n","<h2 class=\"mt-3\">{{ \"invoices\" | i18n }}</h2>\n<p *ngIf=\"!invoices || !invoices.length\">{{ \"noInvoices\" | i18n }}</p>\n<table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\">\n  <tbody>\n    <tr *ngFor=\"let i of invoices\">\n      <td>{{ i.date | date: \"mediumDate\" }}</td>\n      <td>\n        <a\n          href=\"{{ i.pdfUrl }}\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          class=\"mr-2\"\n          appA11yTitle=\"{{ 'downloadInvoice' | i18n }}\"\n        >\n          <i class=\"bwi bwi-file-pdf\" aria-hidden=\"true\"></i\n        ></a>\n        <a href=\"{{ i.url }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ 'viewInvoice' | i18n }}\">\n          {{ \"invoiceNumber\" | i18n: i.number }}</a\n        >\n      </td>\n      <td>{{ i.amount | currency: \"$\" }}</td>\n      <td>\n        <span *ngIf=\"i.paid\">\n          <i class=\"bwi bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"paid\" | i18n }}\n        </span>\n        <span *ngIf=\"!i.paid\">\n          <i class=\"bwi bwi-exclamation-circle text-muted\" aria-hidden=\"true\"></i>\n          {{ \"unpaid\" | i18n }}\n        </span>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<h2 class=\"spaced-header\">{{ \"transactions\" | i18n }}</h2>\n<p *ngIf=\"!transactions || !transactions.length\">{{ \"noTransactions\" | i18n }}</p>\n<table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\">\n  <tbody>\n    <tr *ngFor=\"let t of transactions\">\n      <td>{{ t.createdDate | date: \"mediumDate\" }}</td>\n      <td>\n        <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n          {{ \"chargeNoun\" | i18n }}\n        </span>\n        <span *ngIf=\"t.type === transactionType.Refund\">{{ \"refundNoun\" | i18n }}</span>\n      </td>\n      <td>\n        <i\n          class=\"bwi bwi-fw\"\n          *ngIf=\"t.paymentMethodType\"\n          aria-hidden=\"true\"\n          [ngClass]=\"paymentMethodClasses(t.paymentMethodType)\"\n        ></i>\n        {{ t.details }}\n      </td>\n      <td\n        [ngClass]=\"{ 'text-strike': t.refunded }\"\n        title=\"{{ (t.refunded ? 'refunded' : '') | i18n }}\"\n      >\n        {{ t.amount | currency: \"$\" }}\n      </td>\n    </tr>\n  </tbody>\n</table>\n<small class=\"text-muted\">* {{ \"chargesStatement\" | i18n: \"BITWARDEN\" }}</small>\n","import { Component, Input } from \"@angular/core\";\n\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { TransactionType } from \"@bitwarden/common/enums/transactionType\";\nimport { BillingHistoryResponse } from \"@bitwarden/common/models/response/billing-history.response\";\n\n@Component({\n  selector: \"app-billing-history\",\n  templateUrl: \"billing-history.component.html\",\n})\nexport class BillingHistoryComponent {\n  @Input()\n  billing: BillingHistoryResponse;\n\n  paymentMethodType = PaymentMethodType;\n  transactionType = TransactionType;\n\n  get invoices() {\n    return this.billing != null ? this.billing.invoices : null;\n  }\n\n  get transactions() {\n    return this.billing != null ? this.billing.transactions : null;\n  }\n\n  paymentMethodClasses(type: PaymentMethodType) {\n    switch (type) {\n      case PaymentMethodType.Card:\n        return [\"bwi-credit-card\"];\n      case PaymentMethodType.BankAccount:\n      case PaymentMethodType.WireTransfer:\n        return [\"bwi-bank\"];\n      case PaymentMethodType.BitPay:\n        return [\"bwi-bitcoin text-warning\"];\n      case PaymentMethodType.PayPal:\n        return [\"bwi-paypal text-primary\"];\n      default:\n        return [];\n    }\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organization-keys.request\";\n\nexport class OrganizationCreateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  planType: PlanType;\n  key: string;\n  keys: OrganizationKeysRequest;\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n  additionalSeats: number;\n  maxAutoscaleSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  collectionName: string;\n  taxIdNumber: string;\n  billingAddressLine1: string;\n  billingAddressLine2: string;\n  billingAddressCity: string;\n  billingAddressState: string;\n  billingAddressPostalCode: string;\n  billingAddressCountry: string;\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organization-keys.request\";\n\nexport class OrganizationUpgradeRequest {\n  businessName: string;\n  planType: PlanType;\n  additionalSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  billingAddressCountry: string;\n  billingAddressPostalCode: string;\n  keys: OrganizationKeysRequest;\n}\n","import { OrganizationCreateRequest } from \"../organization-create.request\";\n\nexport class ProviderOrganizationCreateRequest {\n  constructor(\n    public clientOwnerEmail: string,\n    public organizationCreateRequest: OrganizationCreateRequest\n  ) {}\n}\n","<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"createOrganization && selfHosted\">\n  <p>{{ \"uploadLicenseFileOrg\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_organization_license.json\"\n      }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n  </form>\n</ng-container>\n<form\n  #form\n  [formGroup]=\"formGroup\"\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n  *ngIf=\"!loading && !selfHosted && this.plans\"\n  class=\"tw-pt-6\"\n>\n  <app-org-info\n    (changedBusinessOwned)=\"changedOwnedBusiness()\"\n    [formGroup]=\"formGroup\"\n    [createOrganization]=\"createOrganization\"\n    [isProvider]=\"!!providerId\"\n    [acceptingSponsorship]=\"acceptingSponsorship\"\n  ></app-org-info>\n  <h2 class=\"mt-5\">{{ \"chooseYourPlan\" | i18n }}</h2>\n  <div *ngFor=\"let selectableProduct of selectableProducts\" class=\"form-check form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"product\"\n      id=\"product{{ selectableProduct.product }}\"\n      [value]=\"selectableProduct.product\"\n      formControlName=\"product\"\n      (change)=\"changedProduct()\"\n    />\n    <label class=\"form-check-label\" for=\"product{{ selectableProduct.product }}\">\n      {{ selectableProduct.nameLocalizationKey | i18n }}\n      <small class=\"mb-1\">{{ selectableProduct.descriptionLocalizationKey | i18n: \"1\" }}</small>\n      <ng-container\n        *ngIf=\"selectableProduct.product === productTypes.Enterprise; else fullFeatureList\"\n      >\n        <small>• {{ \"includeAllTeamsFeatures\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSso\">• {{ \"includeSsoAuthentication\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasPolicies\"\n          >• {{ \"includeEnterprisePolicies\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-container>\n      <ng-template #fullFeatureList>\n        <small *ngIf=\"selectableProduct.product == productTypes.Free\"\n          >• {{ \"limitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"selectableProduct.product != productTypes.Free && selectableProduct.maxUsers\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxUsers\">• {{ \"addShareUnlimitedUsers\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.maxCollections\"\n          >• {{ \"limitedCollections\" | i18n: selectableProduct.maxCollections }}</small\n        >\n        <small *ngIf=\"selectableProduct.maxAdditionalSeats\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxAdditionalSeats }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxCollections\"\n          >• {{ \"createUnlimitedCollections\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.baseStorageGb\"\n          >• {{ \"gbEncryptedFileStorage\" | i18n: selectableProduct.baseStorageGb + \"GB\" }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasGroups\">• {{ \"controlAccessWithGroups\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasApi\">• {{ \"trackAuditLogs\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasDirectory\"\n          >• {{ \"syncUsersFromDirectory\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.usersGetPremium\">• {{ \"usersGetPremium\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.product != productTypes.Free\"\n          >• {{ \"priorityCustomerSupport\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-template>\n      <span *ngIf=\"selectableProduct.product != productTypes.Free\">\n        <ng-container *ngIf=\"selectableProduct.basePrice && !acceptingSponsorship\">\n          {{ selectableProduct.basePrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }},\n          {{ \"includesXUsers\" | i18n: selectableProduct.baseSeats }}\n          <ng-container *ngIf=\"selectableProduct.hasAdditionalSeatsOption\">\n            {{ (\"additionalUsers\" | i18n).toLowerCase() }}\n            {{ selectableProduct.seatPrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </ng-container>\n        </ng-container>\n      </span>\n      <span *ngIf=\"!selectableProduct.basePrice && selectableProduct.hasAdditionalSeatsOption\">\n        {{ \"costPerUser\" | i18n: (selectableProduct.seatPrice / 12 | currency: \"$\") }} /{{\n          \"month\" | i18n\n        }}\n      </span>\n      <span *ngIf=\"selectableProduct.product == productTypes.Free\">{{ \"freeForever\" | i18n }}</span>\n    </label>\n  </div>\n  <div *ngIf=\"formGroup.controls['product'].value !== productTypes.Free\">\n    <ng-container *ngIf=\"selectedPlan.hasAdditionalSeatsOption && !selectedPlan.baseSeats\">\n      <h2 class=\"mt-5\">{{ \"users\" | i18n }}</h2>\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <label for=\"additionalSeats\">{{ \"userSeats\" | i18n }}</label>\n          <input\n            id=\"additionalSeats\"\n            class=\"form-control\"\n            type=\"number\"\n            name=\"additionalSeats\"\n            formControlName=\"additionalSeats\"\n            placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n            required\n          />\n          <small class=\"text-muted form-text\">{{ \"userSeatsHowManyDesc\" | i18n }}</small>\n        </div>\n      </div>\n    </ng-container>\n    <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n    <div class=\"row\" *ngIf=\"selectedPlan.hasAdditionalSeatsOption && selectedPlan.baseSeats\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalSeats\">{{ \"additionalUserSeats\" | i18n }}</label>\n        <input\n          id=\"additionalSeats\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"additionalSeats\"\n          formControlName=\"additionalSeats\"\n          placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"userSeatsAdditionalDesc\"\n            | i18n: selectedPlan.baseSeats:(seatPriceMonthly(selectedPlan) | currency: \"$\")\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n        <input\n          id=\"additionalStorage\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"additionalStorageGb\"\n          formControlName=\"additionalStorage\"\n          step=\"1\"\n          placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"additionalStorageIntervalDesc\"\n            | i18n\n              : \"1 GB\"\n              : (additionalStoragePriceMonthly(selectedPlan) | currency: \"$\")\n              : (\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\" *ngIf=\"selectedPlan.hasPremiumAccessOption\">\n        <div class=\"form-check\">\n          <input\n            id=\"premiumAccess\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"premiumAccessAddon\"\n            formControlName=\"premiumAccessAddon\"\n          />\n          <label for=\"premiumAccess\" class=\"form-check-label bold\">{{\n            \"premiumAccess\" | i18n\n          }}</label>\n        </div>\n        <small class=\"text-muted form-text\">{{\n          \"premiumAccessDesc\" | i18n: (3.33 | currency: \"$\"):(\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n    <div class=\"form-check form-check-block\" *ngFor=\"let selectablePlan of selectablePlans\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"plan\"\n        id=\"interval{{ selectablePlan.type }}\"\n        [value]=\"selectablePlan.type\"\n        formControlName=\"plan\"\n      />\n      <label class=\"form-check-label\" for=\"interval{{ selectablePlan.type }}\">\n        <ng-container *ngIf=\"selectablePlan.isAnnual\">\n          {{ \"annually\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }}\n            =\n            <ng-container *ngIf=\"acceptingSponsorship; else notAcceptingSponsorship\">\n              <span style=\"text-decoration: line-through\">{{\n                selectablePlan.basePrice | currency: \"$\"\n              }}</span>\n              {{ \"freeWithSponsorship\" | i18n }}\n            </ng-container>\n            <ng-template #notAcceptingSponsorship>\n              {{ selectablePlan.basePrice | currency: \"$\" }}\n              /{{ \"year\" | i18n }}\n            </ng-template>\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ formGroup.controls[\"additionalSeats\"].value || 0 }} &times;\n            {{ selectablePlan.seatPrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} = {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{\n              \"year\" | i18n\n            }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}:\n            {{ formGroup.controls[\"additionalStorage\"].value || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"year\" | i18n }}\n          </small>\n        </ng-container>\n        <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n          {{ \"monthly\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }}\n            =\n            {{ selectablePlan.basePrice | currency: \"$\" }}\n            /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ formGroup.controls[\"additionalSeats\"].value || 0 }} &times;\n            {{ selectablePlan.seatPrice | currency: \"$\" }} {{ \"monthAbbr\" | i18n }} =\n            {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}:\n            {{ formGroup.controls[\"additionalStorage\"].value || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n        </ng-container>\n      </label>\n    </div>\n    <hr class=\"my-3\" />\n    <h2 class=\"spaced-header mb-4\">\n      {{ (createOrganization ? \"paymentInformation\" : \"billingInformation\") | i18n }}\n    </h2>\n    <small class=\"text-muted font-italic mb-3 d-block\">\n      {{ paymentDesc }}\n    </small>\n    <app-payment *ngIf=\"createOrganization\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    <div id=\"price\" class=\"my-4\">\n      <div class=\"text-muted text-sm\">\n        {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n        <br />\n        <ng-container>\n          {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n        </ng-container>\n      </div>\n      <hr class=\"my-1 col-3 ml-0\" />\n      <p class=\"text-lg\">\n        <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{\n          selectedPlanInterval | i18n\n        }}\n      </p>\n    </div>\n    <ng-container *ngIf=\"!createOrganization\">\n      <app-payment [showMethods]=\"false\"></app-payment>\n    </ng-container>\n  </div>\n  <div *ngIf=\"singleOrgPolicyBlock\" class=\"mt-4\">\n    <app-callout [type]=\"'error'\">{{ \"singleOrgBlockCreateMessage\" | i18n }}</app-callout>\n  </div>\n  <div class=\"mt-4\">\n    <button\n      type=\"submit\"\n      buttonType=\"primary\"\n      bitButton\n      [loading]=\"form.loading\"\n      [disabled]=\"!formGroup.valid\"\n    >\n      {{ \"submit\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\nimport { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { OrganizationCreateRequest } from \"@bitwarden/common/models/request/organization-create.request\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organization-keys.request\";\nimport { OrganizationUpgradeRequest } from \"@bitwarden/common/models/request/organization-upgrade.request\";\nimport { ProviderOrganizationCreateRequest } from \"@bitwarden/common/models/request/provider/provider-organization-create.request\";\nimport { PlanResponse } from \"@bitwarden/common/models/response/plan.response\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\ninterface OnSuccessArgs {\n  organizationId: string;\n}\n\n@Component({\n  selector: \"app-organization-plans\",\n  templateUrl: \"organization-plans.component.html\",\n})\nexport class OrganizationPlansComponent implements OnInit, OnDestroy {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxComponent: TaxInfoComponent;\n\n  @Input() organizationId: string;\n  @Input() showFree = true;\n  @Input() showCancel = false;\n  @Input() acceptingSponsorship = false;\n  @Input() product: ProductType = ProductType.Free;\n  @Input() plan: PlanType = PlanType.Free;\n  @Input() providerId: string;\n  @Output() onSuccess = new EventEmitter<OnSuccessArgs>();\n  @Output() onCanceled = new EventEmitter<void>();\n  @Output() onTrialBillingSuccess = new EventEmitter();\n\n  loading = true;\n  selfHosted = false;\n  productTypes = ProductType;\n  formPromise: Promise<string>;\n  singleOrgPolicyBlock = false;\n  isInTrialFlow = false;\n  discount = 0;\n\n  formGroup = this.formBuilder.group({\n    name: [\"\"],\n    billingEmail: [\"\", [Validators.email]],\n    businessOwned: [false],\n    premiumAccessAddon: [false],\n    additionalStorage: [0, [Validators.min(0), Validators.max(99)]],\n    additionalSeats: [0, [Validators.min(0), Validators.max(100000)]],\n    clientOwnerEmail: [\"\", [Validators.email]],\n    businessName: [\"\"],\n    plan: [this.plan],\n    product: [this.product],\n  });\n\n  plans: PlanResponse[];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private router: Router,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private organizationService: OrganizationService,\n    private logService: LogService,\n    private messagingService: MessagingService,\n    private formBuilder: UntypedFormBuilder,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    if (!this.selfHosted) {\n      const plans = await this.apiService.getPlans();\n      this.plans = plans.data;\n      if (this.product === ProductType.Enterprise || this.product === ProductType.Teams) {\n        this.formGroup.controls.businessOwned.setValue(true);\n      }\n    }\n\n    if (this.providerId) {\n      this.formGroup.controls.businessOwned.setValue(true);\n      this.changedOwnedBusiness();\n    }\n\n    if (!this.createOrganization || this.acceptingSponsorship) {\n      this.formGroup.controls.product.setValue(ProductType.Families);\n      this.changedProduct();\n    }\n\n    if (this.createOrganization) {\n      this.formGroup.controls.name.addValidators([Validators.required, Validators.maxLength(50)]);\n      this.formGroup.controls.billingEmail.addValidators(Validators.required);\n    }\n\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.SingleOrg)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.singleOrgPolicyBlock = policyAppliesToActiveUser;\n      });\n\n    this.loading = false;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get createOrganization() {\n    return this.organizationId == null;\n  }\n\n  get selectedPlan() {\n    return this.plans.find((plan) => plan.type === this.formGroup.controls.plan.value);\n  }\n\n  get selectedPlanInterval() {\n    return this.selectedPlan.isAnnual ? \"year\" : \"month\";\n  }\n\n  get selectableProducts() {\n    let validPlans = this.plans.filter((plan) => plan.type !== PlanType.Custom);\n\n    if (this.formGroup.controls.businessOwned.value) {\n      validPlans = validPlans.filter((plan) => plan.canBeUsedByBusiness);\n    }\n\n    if (!this.showFree) {\n      validPlans = validPlans.filter((plan) => plan.product !== ProductType.Free);\n    }\n\n    validPlans = validPlans.filter(\n      (plan) =>\n        !plan.legacyYear &&\n        !plan.disabled &&\n        (plan.isAnnual || plan.product === this.productTypes.Free)\n    );\n\n    if (this.acceptingSponsorship) {\n      const familyPlan = this.plans.find((plan) => plan.type === PlanType.FamiliesAnnually);\n      this.discount = familyPlan.basePrice;\n      validPlans = [familyPlan];\n    }\n\n    return validPlans;\n  }\n\n  get selectablePlans() {\n    return this.plans?.filter(\n      (plan) =>\n        !plan.legacyYear && !plan.disabled && plan.product === this.formGroup.controls.product.value\n    );\n  }\n\n  additionalStoragePriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.additionalStoragePricePerGb;\n    }\n    return selectedPlan.additionalStoragePricePerGb / 12;\n  }\n\n  seatPriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.seatPrice;\n    }\n    return selectedPlan.seatPrice / 12;\n  }\n\n  additionalStorageTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalStorageOption) {\n      return 0;\n    }\n\n    return (\n      plan.additionalStoragePricePerGb *\n      Math.abs(this.formGroup.controls.additionalStorage.value || 0)\n    );\n  }\n\n  seatTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalSeatsOption) {\n      return 0;\n    }\n\n    return plan.seatPrice * Math.abs(this.formGroup.controls.additionalSeats.value || 0);\n  }\n\n  get subtotal() {\n    let subTotal = this.selectedPlan.basePrice;\n    if (\n      this.selectedPlan.hasAdditionalSeatsOption &&\n      this.formGroup.controls.additionalSeats.value\n    ) {\n      subTotal += this.seatTotal(this.selectedPlan);\n    }\n    if (\n      this.selectedPlan.hasAdditionalStorageOption &&\n      this.formGroup.controls.additionalStorage.value\n    ) {\n      subTotal += this.additionalStorageTotal(this.selectedPlan);\n    }\n    if (\n      this.selectedPlan.hasPremiumAccessOption &&\n      this.formGroup.controls.premiumAccessAddon.value\n    ) {\n      subTotal += this.selectedPlan.premiumAccessOptionPrice;\n    }\n    return subTotal - this.discount;\n  }\n\n  get freeTrial() {\n    return this.selectedPlan.trialPeriodDays != null;\n  }\n\n  get taxCharges() {\n    return this.taxComponent != null && this.taxComponent.taxRate != null\n      ? (this.taxComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total() {\n    return this.subtotal + this.taxCharges || 0;\n  }\n\n  get paymentDesc() {\n    if (this.acceptingSponsorship) {\n      return this.i18nService.t(\"paymentSponsored\");\n    } else if (this.freeTrial && this.createOrganization) {\n      return this.i18nService.t(\"paymentChargedWithTrial\");\n    } else {\n      return this.i18nService.t(\"paymentCharged\", this.i18nService.t(this.selectedPlanInterval));\n    }\n  }\n\n  changedProduct() {\n    this.formGroup.controls.plan.setValue(this.selectablePlans[0].type);\n    if (!this.selectedPlan.hasPremiumAccessOption) {\n      this.formGroup.controls.premiumAccessAddon.setValue(false);\n    }\n    if (!this.selectedPlan.hasAdditionalStorageOption) {\n      this.formGroup.controls.additionalStorage.setValue(0);\n    }\n    if (!this.selectedPlan.hasAdditionalSeatsOption) {\n      this.formGroup.controls.additionalSeats.setValue(0);\n    } else if (\n      !this.formGroup.controls.additionalSeats.value &&\n      !this.selectedPlan.baseSeats &&\n      this.selectedPlan.hasAdditionalSeatsOption\n    ) {\n      this.formGroup.controls.additionalSeats.setValue(1);\n    }\n  }\n\n  changedOwnedBusiness() {\n    if (!this.formGroup.controls.businessOwned.value || this.selectedPlan.canBeUsedByBusiness) {\n      return;\n    }\n    this.formGroup.controls.product.setValue(ProductType.Teams);\n    this.formGroup.controls.plan.setValue(PlanType.TeamsAnnually);\n    this.changedProduct();\n  }\n\n  changedCountry() {\n    this.paymentComponent.hideBank = this.taxComponent.taxInfo.country !== \"US\";\n    // Bank Account payments are only available for US customers\n    if (\n      this.paymentComponent.hideBank &&\n      this.paymentComponent.method === PaymentMethodType.BankAccount\n    ) {\n      this.paymentComponent.method = PaymentMethodType.Card;\n      this.paymentComponent.changeMethod();\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  async submit() {\n    if (this.singleOrgPolicyBlock) {\n      return;\n    }\n\n    try {\n      const doSubmit = async (): Promise<string> => {\n        let orgId: string = null;\n        if (this.createOrganization) {\n          const shareKey = await this.cryptoService.makeShareKey();\n          const key = shareKey[0].encryptedString;\n          const collection = await this.cryptoService.encrypt(\n            this.i18nService.t(\"defaultCollection\"),\n            shareKey[1]\n          );\n          const collectionCt = collection.encryptedString;\n          const orgKeys = await this.cryptoService.makeKeyPair(shareKey[1]);\n\n          if (this.selfHosted) {\n            orgId = await this.createSelfHosted(key, collectionCt, orgKeys);\n          } else {\n            orgId = await this.createCloudHosted(key, collectionCt, orgKeys, shareKey[1]);\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            this.i18nService.t(\"organizationCreated\"),\n            this.i18nService.t(\"organizationReadyToGo\")\n          );\n        } else {\n          orgId = await this.updateOrganization(orgId);\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"organizationUpgraded\")\n          );\n        }\n\n        await this.apiService.refreshIdentityToken();\n        await this.syncService.fullSync(true);\n\n        if (!this.acceptingSponsorship && !this.isInTrialFlow) {\n          this.router.navigate([\"/organizations/\" + orgId]);\n        }\n\n        if (this.isInTrialFlow) {\n          this.onTrialBillingSuccess.emit({\n            orgId: orgId,\n            subLabelText: this.billingSubLabelText(),\n          });\n        }\n\n        return orgId;\n      };\n\n      this.formPromise = doSubmit();\n      const organizationId = await this.formPromise;\n      this.onSuccess.emit({ organizationId: organizationId });\n      this.messagingService.send(\"organizationCreated\", organizationId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async updateOrganization(orgId: string) {\n    const request = new OrganizationUpgradeRequest();\n    request.businessName = this.formGroup.controls.businessOwned.value\n      ? this.formGroup.controls.businessName.value\n      : null;\n    request.additionalSeats = this.formGroup.controls.additionalSeats.value;\n    request.additionalStorageGb = this.formGroup.controls.additionalStorage.value;\n    request.premiumAccessAddon =\n      this.selectedPlan.hasPremiumAccessOption && this.formGroup.controls.premiumAccessAddon.value;\n    request.planType = this.selectedPlan.type;\n    request.billingAddressCountry = this.taxComponent.taxInfo.country;\n    request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n\n    // Retrieve org info to backfill pub/priv key if necessary\n    const org = await this.organizationService.get(this.organizationId);\n    if (!org.hasPublicAndPrivateKeys) {\n      const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n      const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n      request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    }\n\n    const result = await this.organizationApiService.upgrade(this.organizationId, request);\n    if (!result.success && result.paymentIntentClientSecret != null) {\n      await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n    }\n    return this.organizationId;\n  }\n\n  private async createCloudHosted(\n    key: string,\n    collectionCt: string,\n    orgKeys: [string, EncString],\n    orgKey: SymmetricCryptoKey\n  ) {\n    const request = new OrganizationCreateRequest();\n    request.key = key;\n    request.collectionName = collectionCt;\n    request.name = this.formGroup.controls.name.value;\n    request.billingEmail = this.formGroup.controls.billingEmail.value;\n    request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n\n    if (this.selectedPlan.type === PlanType.Free) {\n      request.planType = PlanType.Free;\n    } else {\n      const tokenResult = await this.paymentComponent.createPaymentToken();\n\n      request.paymentToken = tokenResult[0];\n      request.paymentMethodType = tokenResult[1];\n      request.businessName = this.formGroup.controls.businessOwned.value\n        ? this.formGroup.controls.businessName.value\n        : null;\n      request.additionalSeats = this.formGroup.controls.additionalSeats.value;\n      request.additionalStorageGb = this.formGroup.controls.additionalStorage.value;\n      request.premiumAccessAddon =\n        this.selectedPlan.hasPremiumAccessOption &&\n        this.formGroup.controls.premiumAccessAddon.value;\n      request.planType = this.selectedPlan.type;\n      request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n      request.billingAddressCountry = this.taxComponent.taxInfo.country;\n      if (this.taxComponent.taxInfo.includeTaxId) {\n        request.taxIdNumber = this.taxComponent.taxInfo.taxId;\n        request.billingAddressLine1 = this.taxComponent.taxInfo.line1;\n        request.billingAddressLine2 = this.taxComponent.taxInfo.line2;\n        request.billingAddressCity = this.taxComponent.taxInfo.city;\n        request.billingAddressState = this.taxComponent.taxInfo.state;\n      }\n    }\n\n    if (this.providerId) {\n      const providerRequest = new ProviderOrganizationCreateRequest(\n        this.formGroup.controls.clientOwnerEmail.value,\n        request\n      );\n      const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n      providerRequest.organizationCreateRequest.key = (\n        await this.cryptoService.encrypt(orgKey.key, providerKey)\n      ).encryptedString;\n      const orgId = (\n        await this.apiService.postProviderCreateOrganization(this.providerId, providerRequest)\n      ).organizationId;\n\n      return orgId;\n    } else {\n      return (await this.organizationApiService.create(request)).id;\n    }\n  }\n\n  private async createSelfHosted(key: string, collectionCt: string, orgKeys: [string, EncString]) {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      throw new Error(this.i18nService.t(\"selectFile\"));\n    }\n\n    const fd = new FormData();\n    fd.append(\"license\", files[0]);\n    fd.append(\"key\", key);\n    fd.append(\"collectionName\", collectionCt);\n    const response = await this.organizationApiService.createLicense(fd);\n    const orgId = response.id;\n\n    await this.apiService.refreshIdentityToken();\n\n    // Org Keys live outside of the OrganizationLicense - add the keys to the org here\n    const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    await this.organizationApiService.updateKeys(orgId, request);\n\n    return orgId;\n  }\n\n  private billingSubLabelText(): string {\n    const selectedPlan = this.selectedPlan;\n    const price = selectedPlan.basePrice === 0 ? selectedPlan.seatPrice : selectedPlan.basePrice;\n    let text = \"\";\n\n    if (selectedPlan.isAnnual) {\n      text += `${this.i18nService.t(\"annual\")} ($${price}/${this.i18nService.t(\"yr\")})`;\n    } else {\n      text += `${this.i18nService.t(\"monthly\")} ($${price}/${this.i18nService.t(\"monthAbbr\")})`;\n    }\n\n    return text;\n  }\n}\n","export class VerifyBankRequest {\n  amount1: number;\n  amount2: number;\n}\n","export class BitPayInvoiceRequest {\n  userId: string;\n  organizationId: string;\n  credit: boolean;\n  amount: number;\n  returnUrl: string;\n  name: string;\n  email: string;\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ \"addCredit\" | i18n }}</h3>\n    <div class=\"mb-4 text-lg\" *ngIf=\"showOptions\">\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-paypal\"\n          [value]=\"paymentMethodType.PayPal\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-paypal\">\n          <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n        >\n      </div>\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-bitcoin\"\n          [value]=\"paymentMethodType.BitPay\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-bitcoin\">\n          <i class=\"bwi bwi-fw bwi-bitcoin\" aria-hidden=\"true\"></i> Bitcoin</label\n        >\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"row\">\n        <div class=\"col-4\">\n          <label for=\"creditAmount\">{{ \"amount\" | i18n }}</label>\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\"><span class=\"input-group-text\">$USD</span></div>\n            <input\n              id=\"creditAmount\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"CreditAmount\"\n              [(ngModel)]=\"creditAmount\"\n              (blur)=\"formatAmount()\"\n              required\n            />\n          </div>\n        </div>\n      </div>\n      <small class=\"form-text text-muted\">{{ \"creditDelayed\" | i18n }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading || ppLoading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n<form #ppButtonForm action=\"{{ ppButtonFormAction }}\" method=\"post\" target=\"_top\">\n  <input type=\"hidden\" name=\"cmd\" value=\"_xclick\" />\n  <input type=\"hidden\" name=\"business\" value=\"{{ ppButtonBusinessId }}\" />\n  <input type=\"hidden\" name=\"button_subtype\" value=\"services\" />\n  <input type=\"hidden\" name=\"no_note\" value=\"1\" />\n  <input type=\"hidden\" name=\"no_shipping\" value=\"1\" />\n  <input type=\"hidden\" name=\"rm\" value=\"1\" />\n  <input type=\"hidden\" name=\"return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"cancel_return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\n  <input type=\"hidden\" name=\"image_url\" value=\"https://bitwarden.com/images/paypal-banner.png\" />\n  <input type=\"hidden\" name=\"bn\" value=\"PP-BuyNowBF:btn_buynow_LG.gif:NonHosted\" />\n  <input type=\"hidden\" name=\"amount\" value=\"{{ creditAmount }}\" />\n  <input type=\"hidden\" name=\"custom\" value=\"{{ ppButtonCustomField }}\" />\n  <input type=\"hidden\" name=\"item_name\" value=\"Bitwarden Account Credit\" />\n  <input type=\"hidden\" name=\"item_number\" value=\"{{ subject }}\" />\n</form>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { PayPalConfig } from \"@bitwarden/common/abstractions/environment.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { BitPayInvoiceRequest } from \"@bitwarden/common/models/request/bit-pay-invoice.request\";\n\n@Component({\n  selector: \"app-add-credit\",\n  templateUrl: \"add-credit.component.html\",\n})\nexport class AddCreditComponent implements OnInit {\n  @Input() creditAmount: string;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.PayPal;\n  @Input() organizationId: string;\n  @Output() onAdded = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(\"ppButtonForm\", { read: ElementRef, static: true }) ppButtonFormRef: ElementRef;\n\n  paymentMethodType = PaymentMethodType;\n  ppButtonFormAction: string;\n  ppButtonBusinessId: string;\n  ppButtonCustomField: string;\n  ppLoading = false;\n  subject: string;\n  returnUrl: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private name: string;\n  private email: string;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {\n    const payPalConfig = process.env.PAYPAL_CONFIG as PayPalConfig;\n    this.ppButtonFormAction = payPalConfig.buttonAction;\n    this.ppButtonBusinessId = payPalConfig.businessId;\n  }\n\n  async ngOnInit() {\n    if (this.organizationId != null) {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"20.00\";\n      }\n      this.ppButtonCustomField = \"organization_id:\" + this.organizationId;\n      const org = await this.organizationService.get(this.organizationId);\n      if (org != null) {\n        this.subject = org.name;\n        this.name = org.name;\n      }\n    } else {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"10.00\";\n      }\n      this.userId = await this.stateService.getUserId();\n      this.subject = await this.stateService.getEmail();\n      this.email = this.subject;\n      this.ppButtonCustomField = \"user_id:\" + this.userId;\n    }\n    this.ppButtonCustomField += \",account_credit:1\";\n    this.returnUrl = window.location.href;\n  }\n\n  async submit() {\n    if (this.creditAmount == null || this.creditAmount === \"\") {\n      return;\n    }\n\n    if (this.method === PaymentMethodType.PayPal) {\n      this.ppButtonFormRef.nativeElement.submit();\n      this.ppLoading = true;\n      return;\n    }\n    if (this.method === PaymentMethodType.BitPay) {\n      try {\n        const req = new BitPayInvoiceRequest();\n        req.email = this.email;\n        req.name = this.name;\n        req.credit = true;\n        req.amount = this.creditAmountNumber;\n        req.organizationId = this.organizationId;\n        req.userId = this.userId;\n        req.returnUrl = this.returnUrl;\n        this.formPromise = this.apiService.postBitPayInvoice(req);\n        const bitPayUrl: string = await this.formPromise;\n        this.platformUtilsService.launchUri(bitPayUrl);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      return;\n    }\n    try {\n      this.onAdded.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  formatAmount() {\n    try {\n      if (this.creditAmount != null && this.creditAmount !== \"\") {\n        const floatAmount = Math.abs(parseFloat(this.creditAmount));\n        if (floatAmount > 0) {\n          this.creditAmount = parseFloat((Math.round(floatAmount * 100) / 100).toString())\n            .toFixed(2)\n            .toString();\n          return;\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.creditAmount = \"\";\n  }\n\n  get creditAmountNumber(): number {\n    if (this.creditAmount != null && this.creditAmount !== \"\") {\n      try {\n        return parseFloat(this.creditAmount);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return null;\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\n\nimport { OrganizationTaxInfoUpdateRequest } from \"./organization-tax-info-update.request\";\n\nexport class PaymentRequest extends OrganizationTaxInfoUpdateRequest {\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n}\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { PaymentRequest } from \"@bitwarden/common/models/request/payment.request\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-adjust-payment\",\n  templateUrl: \"adjust-payment.component.html\",\n})\nexport class AdjustPaymentComponent {\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent, { static: true }) taxInfoComponent: TaxInfoComponent;\n\n  @Input() currentType?: PaymentMethodType;\n  @Input() organizationId: string;\n  @Output() onAdjusted = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  paymentMethodType = PaymentMethodType;\n  formPromise: Promise<void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    try {\n      const request = new PaymentRequest();\n      this.formPromise = this.paymentComponent.createPaymentToken().then((result) => {\n        request.paymentToken = result[0];\n        request.paymentMethodType = result[1];\n        request.postalCode = this.taxInfoComponent.taxInfo.postalCode;\n        request.country = this.taxInfoComponent.taxInfo.country;\n        if (this.organizationId == null) {\n          return this.apiService.postAccountPayment(request);\n        } else {\n          request.taxId = this.taxInfoComponent.taxInfo.taxId;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          request.line1 = this.taxInfoComponent.taxInfo.line1;\n          request.line2 = this.taxInfoComponent.taxInfo.line2;\n          request.city = this.taxInfoComponent.taxInfo.city;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          return this.organizationApiService.updatePayment(this.organizationId, request);\n        }\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedPaymentMethod\")\n      );\n      this.onAdjusted.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  changeCountry() {\n    if (this.taxInfoComponent.taxInfo.country === \"US\") {\n      this.paymentComponent.hideBank = !this.organizationId;\n    } else {\n      this.paymentComponent.hideBank = true;\n      if (this.paymentComponent.method === PaymentMethodType.BankAccount) {\n        this.paymentComponent.method = PaymentMethodType.Card;\n        this.paymentComponent.changeMethod();\n      }\n    }\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">\n      {{ (currentType != null ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n    </h3>\n    <app-payment [hideBank]=\"!organizationId\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changeCountry()\"></app-tax-info>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","<div class=\"d-flex\" [ngClass]=\"headerClass\">\n  <h1>\n    {{ \"paymentMethod\" | i18n }}\n  </h1>\n  <button\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    class=\"tw-ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ (isCreditBalance ? \"accountCredit\" : \"accountBalance\") | i18n }}</h2>\n  <p class=\"text-lg\">\n    <strong>{{ creditOrBalance | currency: \"$\" }}</strong>\n  </p>\n  <p>{{ \"creditAppliedDesc\" | i18n }}</p>\n  <button bitButton buttonType=\"secondary\" (click)=\"addCredit()\" *ngIf=\"!showAddCredit\">\n    {{ \"addCredit\" | i18n }}\n  </button>\n  <app-add-credit\n    [organizationId]=\"organizationId\"\n    (onAdded)=\"closeAddCredit(true)\"\n    (onCanceled)=\"closeAddCredit(false)\"\n    *ngIf=\"showAddCredit\"\n  >\n  </app-add-credit>\n  <h2 class=\"spaced-header\">{{ \"paymentMethod\" | i18n }}</h2>\n  <p *ngIf=\"!paymentSource\">{{ \"noPaymentMethod\" | i18n }}</p>\n  <ng-container *ngIf=\"paymentSource\">\n    <app-callout\n      type=\"warning\"\n      title=\"{{ 'verifyBankAccount' | i18n }}\"\n      *ngIf=\"\n        forOrganization &&\n        paymentSource.type === paymentMethodType.BankAccount &&\n        paymentSource.needsVerification\n      \"\n    >\n      <p>{{ \"verifyBankAccountDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}</p>\n      <form\n        #verifyForm\n        class=\"form-inline\"\n        (ngSubmit)=\"verifyBank()\"\n        [formGroup]=\"verifyBankForm\"\n        [appApiAction]=\"verifyBankPromise\"\n        ngNativeValidate\n      >\n        <bit-form-field class=\"tw-mr-2 tw-w-40\">\n          <bit-label>{{ \"amountX\" | i18n: \"1\" }}</bit-label>\n          <input bitInput type=\"number\" step=\"1\" placeholder=\"xx\" formControlName=\"amount1\" />\n          <span bitPrefix>$0.</span>\n        </bit-form-field>\n        <bit-form-field class=\"tw-mr-2 tw-w-40\">\n          <bit-label>{{ \"amountX\" | i18n: \"2\" }}</bit-label>\n          <input bitInput type=\"number\" step=\"1\" placeholder=\"xx\" formControlName=\"amount2\" />\n          <span bitPrefix>$0.</span>\n        </bit-form-field>\n        <button\n          bitButton\n          buttonType=\"primary\"\n          type=\"submit\"\n          class=\"btn-submit\"\n          [disabled]=\"verifyForm.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"verifyBankAccount\" | i18n }}</span>\n        </button>\n      </form>\n    </app-callout>\n    <p>\n      <i class=\"bwi bwi-fw\" [ngClass]=\"paymentSourceClasses\"></i>\n      <span *ngIf=\"paymentSourceInApp\">{{ \"inAppPurchase\" | i18n }}</span>\n      {{ paymentSource.description }}\n    </p>\n  </ng-container>\n  <button bitButton buttonType=\"secondary\" (click)=\"changePayment()\" *ngIf=\"!showAdjustPayment\">\n    {{ (paymentSource ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n  </button>\n  <app-adjust-payment\n    [organizationId]=\"organizationId\"\n    [currentType]=\"paymentSource != null ? paymentSource.type : null\"\n    (onAdjusted)=\"closePayment(true)\"\n    (onCanceled)=\"closePayment(false)\"\n    *ngIf=\"showAdjustPayment\"\n  >\n  </app-adjust-payment>\n  <ng-container *ngIf=\"forOrganization\">\n    <h2 class=\"spaced-header\">{{ \"taxInformation\" | i18n }}</h2>\n    <p>{{ \"taxInformationDesc\" | i18n }}</p>\n    <div *ngIf=\"!org || loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </div>\n    <form\n      *ngIf=\"org && !loading\"\n      #formTax\n      (ngSubmit)=\"submitTaxInfo()\"\n      [appApiAction]=\"taxFormPromise\"\n      ngNativeValidate\n    >\n      <app-tax-info></app-tax-info>\n      <button\n        bitButton\n        buttonType=\"primary\"\n        type=\"submit\"\n        class=\"btn-submit\"\n        [disabled]=\"formTax.loading\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"save\" | i18n }}</span>\n      </button>\n    </form>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { VerifyBankRequest } from \"@bitwarden/common/models/request/verify-bank.request\";\nimport { BillingPaymentResponse } from \"@bitwarden/common/models/response/billing-payment.response\";\nimport { OrganizationResponse } from \"@bitwarden/common/models/response/organization.response\";\n\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-payment-method\",\n  templateUrl: \"payment-method.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PaymentMethodComponent implements OnInit {\n  @ViewChild(TaxInfoComponent) taxInfo: TaxInfoComponent;\n\n  loading = false;\n  firstLoaded = false;\n  showAdjustPayment = false;\n  showAddCredit = false;\n  billing: BillingPaymentResponse;\n  org: OrganizationResponse;\n  paymentMethodType = PaymentMethodType;\n  organizationId: string;\n\n  verifyBankPromise: Promise<any>;\n  taxFormPromise: Promise<any>;\n\n  verifyBankForm = this.formBuilder.group({\n    amount1: new FormControl<number>(null, [\n      Validators.required,\n      Validators.max(99),\n      Validators.min(0),\n    ]),\n    amount2: new FormControl<number>(null, [\n      Validators.required,\n      Validators.max(99),\n      Validators.min(0),\n    ]),\n  });\n\n  constructor(\n    protected apiService: ApiService,\n    protected organizationApiService: OrganizationApiServiceAbstraction,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private logService: LogService,\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.params.subscribe(async (params) => {\n      if (params.organizationId) {\n        this.organizationId = params.organizationId;\n      } else if (this.platformUtilsService.isSelfHost()) {\n        this.router.navigate([\"/settings/subscription\"]);\n        return;\n      }\n\n      await this.load();\n      this.firstLoaded = true;\n    });\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n\n    if (this.forOrganization) {\n      const billingPromise = this.organizationApiService.getBilling(this.organizationId);\n      const orgPromise = this.organizationApiService.get(this.organizationId);\n\n      [this.billing, this.org] = await Promise.all([billingPromise, orgPromise]);\n    } else {\n      this.billing = await this.apiService.getUserBillingPayment();\n    }\n\n    this.loading = false;\n  }\n\n  addCredit() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"addCredit\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAddCredit = true;\n  }\n\n  closeAddCredit(load: boolean) {\n    this.showAddCredit = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  changePayment() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"changePaymentMethod\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAdjustPayment = true;\n  }\n\n  closePayment(load: boolean) {\n    this.showAdjustPayment = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  async verifyBank() {\n    if (this.loading || !this.forOrganization) {\n      return;\n    }\n\n    try {\n      const request = new VerifyBankRequest();\n      request.amount1 = this.verifyBankForm.value.amount1;\n      request.amount2 = this.verifyBankForm.value.amount2;\n      this.verifyBankPromise = this.organizationApiService.verifyBank(this.organizationId, request);\n      await this.verifyBankPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"verifiedBankAccount\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async submitTaxInfo() {\n    this.taxFormPromise = this.taxInfo.submitTaxInfo();\n    await this.taxFormPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"taxInfoUpdated\"));\n  }\n\n  get isCreditBalance() {\n    return this.billing == null || this.billing.balance <= 0;\n  }\n\n  get creditOrBalance() {\n    return Math.abs(this.billing != null ? this.billing.balance : 0);\n  }\n\n  get paymentSource() {\n    return this.billing != null ? this.billing.paymentSource : null;\n  }\n\n  get forOrganization() {\n    return this.organizationId != null;\n  }\n\n  get headerClass() {\n    return this.forOrganization ? [\"page-header\"] : [\"tabbed-header\"];\n  }\n\n  get paymentSourceClasses() {\n    if (this.paymentSource == null) {\n      return [];\n    }\n    switch (this.paymentSource.type) {\n      case PaymentMethodType.Card:\n        return [\"bwi-credit-card\"];\n      case PaymentMethodType.BankAccount:\n        return [\"bwi-bank\"];\n      case PaymentMethodType.Check:\n        return [\"bwi-money\"];\n      case PaymentMethodType.AppleInApp:\n        return [\"bwi-apple text-muted\"];\n      case PaymentMethodType.GoogleInApp:\n        return [\"bwi-google text-muted\"];\n      case PaymentMethodType.PayPal:\n        return [\"bwi-paypal text-primary\"];\n      default:\n        return [];\n    }\n  }\n\n  get paymentSourceInApp() {\n    return (\n      this.paymentSource != null &&\n      (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n        this.paymentSource.type === PaymentMethodType.GoogleInApp)\n    );\n  }\n}\n","<div class=\"mb-4 text-lg\" *ngIf=\"showOptions && showMethods\">\n  <div class=\"form-check form-check-inline mr-4\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-card\"\n      [value]=\"paymentMethodType.Card\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-card\">\n      <i class=\"bwi bwi-fw bwi-credit-card\" aria-hidden=\"true\"></i> {{ \"creditCard\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline mr-4\" *ngIf=\"!hideBank\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-bank\"\n      [value]=\"paymentMethodType.BankAccount\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-bank\">\n      <i class=\"bwi bwi-fw bwi-bank\" aria-hidden=\"true\"></i> {{ \"bankAccount\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hidePaypal\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-paypal\"\n      [value]=\"paymentMethodType.PayPal\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-paypal\">\n      <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hideCredit\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-credit\"\n      [value]=\"paymentMethodType.Credit\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-credit\">\n      <i class=\"bwi bwi-fw bwi-dollar\" aria-hidden=\"true\"></i> {{ \"accountCredit\" | i18n }}</label\n    >\n  </div>\n</div>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Card\">\n  <div class=\"row\">\n    <div [ngClass]=\"trialFlow ? 'col-5' : 'col-4'\" class=\"form-group\">\n      <label for=\"stripe-card-number-element\">{{ \"number\" | i18n }}</label>\n      <div id=\"stripe-card-number-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div *ngIf=\"!trialFlow\" class=\"form-group col-8 d-flex align-items-end\">\n      <img\n        src=\"../../images/cards.png\"\n        alt=\"Visa, MasterCard, Discover, AmEx, JCB, Diners Club, UnionPay\"\n        width=\"323\"\n        height=\"32\"\n      />\n    </div>\n    <div [ngClass]=\"trialFlow ? 'col-3' : 'col-4'\" class=\"form-group\">\n      <label for=\"stripe-card-expiry-element\">{{ \"expiration\" | i18n }}</label>\n      <div id=\"stripe-card-expiry-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div class=\"form-group col-4\">\n      <div class=\"d-flex\">\n        <label for=\"stripe-card-cvc-element\">\n          {{ \"securityCode\" | i18n }}\n        </label>\n        <a\n          href=\"https://www.cvvnumber.com/cvv.html\"\n          tabindex=\"-1\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          class=\"ml-auto\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n      </div>\n      <div id=\"stripe-card-cvc-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.BankAccount\">\n  <app-callout type=\"warning\" title=\"{{ 'verifyBankAccount' | i18n }}\">\n    {{ \"verifyBankAccountInitialDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"routing_number\">{{ \"routingNumber\" | i18n }}</label>\n      <input\n        id=\"routing_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"routing_number\"\n        [(ngModel)]=\"bank.routing_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_number\">{{ \"accountNumber\" | i18n }}</label>\n      <input\n        id=\"account_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_number\"\n        [(ngModel)]=\"bank.account_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_name\">{{ \"accountHolderName\" | i18n }}</label>\n      <input\n        id=\"account_holder_name\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_holder_name\"\n        [(ngModel)]=\"bank.account_holder_name\"\n        required\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_type\">{{ \"bankAccountType\" | i18n }}</label>\n      <select\n        id=\"account_holder_type\"\n        class=\"form-control\"\n        name=\"account_holder_type\"\n        [(ngModel)]=\"bank.account_holder_type\"\n        required\n      >\n        <option value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option value=\"company\">{{ \"bankAccountTypeCompany\" | i18n }}</option>\n        <option value=\"individual\">{{ \"bankAccountTypeIndividual\" | i18n }}</option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.PayPal\">\n  <div class=\"mb-3\">\n    <div id=\"bt-dropin-container\" class=\"mb-1\"></div>\n    <small class=\"text-muted\">{{ \"paypalClickSubmit\" | i18n }}</small>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Credit\">\n  <app-callout type=\"note\">\n    {{ \"makeSureEnoughCredit\" | i18n }}\n  </app-callout>\n</ng-container>\n","import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\n\n@Component({\n  selector: \"app-payment\",\n  templateUrl: \"payment.component.html\",\n})\nexport class PaymentComponent implements OnInit, OnDestroy {\n  @Input() showMethods = true;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.Card;\n  @Input() hideBank = false;\n  @Input() hidePaypal = false;\n  @Input() hideCredit = false;\n  @Input() trialFlow = false;\n\n  private destroy$ = new Subject<void>();\n\n  bank: any = {\n    routing_number: null,\n    account_number: null,\n    account_holder_name: null,\n    account_holder_type: \"\",\n    currency: \"USD\",\n    country: \"US\",\n  };\n\n  paymentMethodType = PaymentMethodType;\n\n  private btScript: HTMLScriptElement;\n  private btInstance: any = null;\n  private stripeScript: HTMLScriptElement;\n  private stripe: any = null;\n  private stripeElements: any = null;\n  private stripeCardNumberElement: any = null;\n  private stripeCardExpiryElement: any = null;\n  private stripeCardCvcElement: any = null;\n  private StripeElementStyle: any;\n  private StripeElementClasses: any;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private themingService: AbstractThemingService\n  ) {\n    this.stripeScript = window.document.createElement(\"script\");\n    this.stripeScript.src = \"https://js.stripe.com/v3/\";\n    this.stripeScript.async = true;\n    this.stripeScript.onload = () => {\n      this.stripe = (window as any).Stripe(process.env.STRIPE_KEY);\n      this.stripeElements = this.stripe.elements();\n      this.setStripeElement();\n    };\n    this.btScript = window.document.createElement(\"script\");\n    this.btScript.src = `scripts/dropin.js?cache=${process.env.CACHE_TAG}`;\n    this.btScript.async = true;\n    this.StripeElementStyle = {\n      base: {\n        color: null,\n        fontFamily:\n          '\"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, ' +\n          '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n        fontSize: \"14px\",\n        fontSmoothing: \"antialiased\",\n        \"::placeholder\": {\n          color: null,\n        },\n      },\n      invalid: {\n        color: null,\n      },\n    };\n    this.StripeElementClasses = {\n      focus: \"is-focused\",\n      empty: \"is-empty\",\n      invalid: \"is-invalid\",\n    };\n  }\n\n  async ngOnInit() {\n    if (!this.showOptions) {\n      this.hidePaypal = this.method !== PaymentMethodType.PayPal;\n      this.hideBank = this.method !== PaymentMethodType.BankAccount;\n      this.hideCredit = this.method !== PaymentMethodType.Credit;\n    }\n    this.subscribeToTheme();\n    window.document.head.appendChild(this.stripeScript);\n    if (!this.hidePaypal) {\n      window.document.head.appendChild(this.btScript);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    window.document.head.removeChild(this.stripeScript);\n    window.setTimeout(() => {\n      Array.from(window.document.querySelectorAll(\"iframe\")).forEach((el) => {\n        if (el.src != null && el.src.indexOf(\"stripe\") > -1) {\n          try {\n            window.document.body.removeChild(el);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      });\n    }, 500);\n    if (!this.hidePaypal) {\n      window.document.head.removeChild(this.btScript);\n      window.setTimeout(() => {\n        Array.from(window.document.head.querySelectorAll(\"script\")).forEach((el) => {\n          if (el.src != null && el.src.indexOf(\"paypal\") > -1) {\n            try {\n              window.document.head.removeChild(el);\n            } catch (e) {\n              this.logService.error(e);\n            }\n          }\n        });\n        const btStylesheet = window.document.head.querySelector(\"#braintree-dropin-stylesheet\");\n        if (btStylesheet != null) {\n          try {\n            window.document.head.removeChild(btStylesheet);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      }, 500);\n    }\n  }\n\n  changeMethod() {\n    this.btInstance = null;\n\n    if (this.method === PaymentMethodType.PayPal) {\n      window.setTimeout(() => {\n        (window as any).braintree.dropin.create(\n          {\n            authorization: process.env.BRAINTREE_KEY,\n            container: \"#bt-dropin-container\",\n            paymentOptionPriority: [\"paypal\"],\n            paypal: {\n              flow: \"vault\",\n              buttonStyle: {\n                label: \"pay\",\n                size: \"medium\",\n                shape: \"pill\",\n                color: \"blue\",\n                tagline: \"false\",\n              },\n            },\n          },\n          (createErr: any, instance: any) => {\n            if (createErr != null) {\n              // eslint-disable-next-line\n              console.error(createErr);\n              return;\n            }\n            this.btInstance = instance;\n          }\n        );\n      }, 250);\n    } else {\n      this.setStripeElement();\n    }\n  }\n\n  createPaymentToken(): Promise<[string, PaymentMethodType]> {\n    return new Promise((resolve, reject) => {\n      if (this.method === PaymentMethodType.Credit) {\n        resolve([null, this.method]);\n      } else if (this.method === PaymentMethodType.PayPal) {\n        this.btInstance\n          .requestPaymentMethod()\n          .then((payload: any) => {\n            resolve([payload.nonce, this.method]);\n          })\n          .catch((err: any) => {\n            reject(err.message);\n          });\n      } else if (\n        this.method === PaymentMethodType.Card ||\n        this.method === PaymentMethodType.BankAccount\n      ) {\n        if (this.method === PaymentMethodType.Card) {\n          this.apiService\n            .postSetupPayment()\n            .then((clientSecret) =>\n              this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n            )\n            .then((result: any) => {\n              if (result.error) {\n                reject(result.error.message);\n              } else if (result.setupIntent && result.setupIntent.status === \"succeeded\") {\n                resolve([result.setupIntent.payment_method, this.method]);\n              } else {\n                reject();\n              }\n            });\n        } else {\n          this.stripe.createToken(\"bank_account\", this.bank).then((result: any) => {\n            if (result.error) {\n              reject(result.error.message);\n            } else if (result.token && result.token.id != null) {\n              resolve([result.token.id, this.method]);\n            } else {\n              reject();\n            }\n          });\n        }\n      }\n    });\n  }\n\n  handleStripeCardPayment(clientSecret: string, successCallback: () => Promise<any>): Promise<any> {\n    return new Promise<void>((resolve, reject) => {\n      if (this.showMethods && this.stripeCardNumberElement == null) {\n        reject();\n        return;\n      }\n      const handleCardPayment = () =>\n        this.showMethods\n          ? this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n          : this.stripe.handleCardSetup(clientSecret);\n      return handleCardPayment().then(async (result: any) => {\n        if (result.error) {\n          reject(result.error.message);\n        } else if (result.paymentIntent && result.paymentIntent.status === \"succeeded\") {\n          if (successCallback != null) {\n            await successCallback();\n          }\n          resolve();\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n\n  private setStripeElement() {\n    window.setTimeout(() => {\n      if (this.showMethods && this.method === PaymentMethodType.Card) {\n        if (this.stripeCardNumberElement == null) {\n          this.stripeCardNumberElement = this.stripeElements.create(\"cardNumber\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        if (this.stripeCardExpiryElement == null) {\n          this.stripeCardExpiryElement = this.stripeElements.create(\"cardExpiry\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n          });\n        }\n        if (this.stripeCardCvcElement == null) {\n          this.stripeCardCvcElement = this.stripeElements.create(\"cardCvc\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        this.stripeCardNumberElement.mount(\"#stripe-card-number-element\");\n        this.stripeCardExpiryElement.mount(\"#stripe-card-expiry-element\");\n        this.stripeCardCvcElement.mount(\"#stripe-card-cvc-element\");\n      }\n    }, 50);\n  }\n\n  private subscribeToTheme() {\n    this.themingService.theme$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      const style = getComputedStyle(document.documentElement);\n      this.StripeElementStyle.base.color = `rgb(${style.getPropertyValue(\"--color-text-main\")})`;\n      this.StripeElementStyle.base[\"::placeholder\"].color = `rgb(${style.getPropertyValue(\n        \"--color-text-muted\"\n      )})`;\n      this.StripeElementStyle.invalid.color = `rgb(${style.getPropertyValue(\"--color-text-main\")})`;\n      this.StripeElementStyle.invalid.borderColor = `rgb(${style.getPropertyValue(\n        \"--color-danger-500\"\n      )})`;\n    });\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-purge-vault\",\n  templateUrl: \"purge-vault.component.html\",\n})\nexport class PurgeVaultComponent {\n  @Input() organizationId?: string = null;\n\n  masterPassword: Verification;\n  formPromise: Promise<unknown>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private router: Router,\n    private logService: LogService,\n    private syncService: SyncService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postPurgeCiphers(request, this.organizationId));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"vaultPurged\"));\n      this.syncService.fullSync(true);\n      if (this.organizationId != null) {\n        this.router.navigate([\"organizations\", this.organizationId, \"vault\"]);\n      } else {\n        this.router.navigate([\"vault\"]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"purgeVaultTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"purgeVaultTitle\">{{ \"purgeVault\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ (organizationId ? \"purgeOrgVaultDesc\" : \"purgeVaultDesc\") | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"purgeVaultWarning\" | i18n }}</app-callout>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"purgeVault\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"row\">\n  <div [ngClass]=\"trialFlow ? 'col-7' : 'col-6'\">\n    <div class=\"form-group\">\n      <label for=\"addressCountry\">{{ \"country\" | i18n }}</label>\n      <select\n        id=\"addressCountry\"\n        class=\"form-control\"\n        [(ngModel)]=\"taxInfo.country\"\n        required\n        name=\"addressCountry\"\n        autocomplete=\"country\"\n        (change)=\"changeCountry()\"\n      >\n        <option value=\"\">-- Select --</option>\n        <option value=\"US\">United States</option>\n        <option value=\"CN\">China</option>\n        <option value=\"FR\">France</option>\n        <option value=\"DE\">Germany</option>\n        <option value=\"CA\">Canada</option>\n        <option value=\"GB\">United Kingdom</option>\n        <option value=\"AU\">Australia</option>\n        <option value=\"IN\">India</option>\n        <option value=\"-\" disabled></option>\n        <option value=\"AF\">Afghanistan</option>\n        <option value=\"AX\">Åland Islands</option>\n        <option value=\"AL\">Albania</option>\n        <option value=\"DZ\">Algeria</option>\n        <option value=\"AS\">American Samoa</option>\n        <option value=\"AD\">Andorra</option>\n        <option value=\"AO\">Angola</option>\n        <option value=\"AI\">Anguilla</option>\n        <option value=\"AQ\">Antarctica</option>\n        <option value=\"AG\">Antigua and Barbuda</option>\n        <option value=\"AR\">Argentina</option>\n        <option value=\"AM\">Armenia</option>\n        <option value=\"AW\">Aruba</option>\n        <option value=\"AT\">Austria</option>\n        <option value=\"AZ\">Azerbaijan</option>\n        <option value=\"BS\">Bahamas</option>\n        <option value=\"BH\">Bahrain</option>\n        <option value=\"BD\">Bangladesh</option>\n        <option value=\"BB\">Barbados</option>\n        <option value=\"BY\">Belarus</option>\n        <option value=\"BE\">Belgium</option>\n        <option value=\"BZ\">Belize</option>\n        <option value=\"BJ\">Benin</option>\n        <option value=\"BM\">Bermuda</option>\n        <option value=\"BT\">Bhutan</option>\n        <option value=\"BO\">Bolivia, Plurinational State of</option>\n        <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\n        <option value=\"BA\">Bosnia and Herzegovina</option>\n        <option value=\"BW\">Botswana</option>\n        <option value=\"BV\">Bouvet Island</option>\n        <option value=\"BR\">Brazil</option>\n        <option value=\"IO\">British Indian Ocean Territory</option>\n        <option value=\"BN\">Brunei Darussalam</option>\n        <option value=\"BG\">Bulgaria</option>\n        <option value=\"BF\">Burkina Faso</option>\n        <option value=\"BI\">Burundi</option>\n        <option value=\"KH\">Cambodia</option>\n        <option value=\"CM\">Cameroon</option>\n        <option value=\"CV\">Cape Verde</option>\n        <option value=\"KY\">Cayman Islands</option>\n        <option value=\"CF\">Central African Republic</option>\n        <option value=\"TD\">Chad</option>\n        <option value=\"CL\">Chile</option>\n        <option value=\"CX\">Christmas Island</option>\n        <option value=\"CC\">Cocos (Keeling) Islands</option>\n        <option value=\"CO\">Colombia</option>\n        <option value=\"KM\">Comoros</option>\n        <option value=\"CG\">Congo</option>\n        <option value=\"CD\">Congo, the Democratic Republic of the</option>\n        <option value=\"CK\">Cook Islands</option>\n        <option value=\"CR\">Costa Rica</option>\n        <option value=\"CI\">Côte d'Ivoire</option>\n        <option value=\"HR\">Croatia</option>\n        <option value=\"CU\">Cuba</option>\n        <option value=\"CW\">Curaçao</option>\n        <option value=\"CY\">Cyprus</option>\n        <option value=\"CZ\">Czech Republic</option>\n        <option value=\"DK\">Denmark</option>\n        <option value=\"DJ\">Djibouti</option>\n        <option value=\"DM\">Dominica</option>\n        <option value=\"DO\">Dominican Republic</option>\n        <option value=\"EC\">Ecuador</option>\n        <option value=\"EG\">Egypt</option>\n        <option value=\"SV\">El Salvador</option>\n        <option value=\"GQ\">Equatorial Guinea</option>\n        <option value=\"ER\">Eritrea</option>\n        <option value=\"EE\">Estonia</option>\n        <option value=\"ET\">Ethiopia</option>\n        <option value=\"FK\">Falkland Islands (Malvinas)</option>\n        <option value=\"FO\">Faroe Islands</option>\n        <option value=\"FJ\">Fiji</option>\n        <option value=\"FI\">Finland</option>\n        <option value=\"GF\">French Guiana</option>\n        <option value=\"PF\">French Polynesia</option>\n        <option value=\"TF\">French Southern Territories</option>\n        <option value=\"GA\">Gabon</option>\n        <option value=\"GM\">Gambia</option>\n        <option value=\"GE\">Georgia</option>\n        <option value=\"GH\">Ghana</option>\n        <option value=\"GI\">Gibraltar</option>\n        <option value=\"GR\">Greece</option>\n        <option value=\"GL\">Greenland</option>\n        <option value=\"GD\">Grenada</option>\n        <option value=\"GP\">Guadeloupe</option>\n        <option value=\"GU\">Guam</option>\n        <option value=\"GT\">Guatemala</option>\n        <option value=\"GG\">Guernsey</option>\n        <option value=\"GN\">Guinea</option>\n        <option value=\"GW\">Guinea-Bissau</option>\n        <option value=\"GY\">Guyana</option>\n        <option value=\"HT\">Haiti</option>\n        <option value=\"HM\">Heard Island and McDonald Islands</option>\n        <option value=\"VA\">Holy See (Vatican City State)</option>\n        <option value=\"HN\">Honduras</option>\n        <option value=\"HK\">Hong Kong</option>\n        <option value=\"HU\">Hungary</option>\n        <option value=\"IS\">Iceland</option>\n        <option value=\"ID\">Indonesia</option>\n        <option value=\"IR\">Iran, Islamic Republic of</option>\n        <option value=\"IQ\">Iraq</option>\n        <option value=\"IE\">Ireland</option>\n        <option value=\"IM\">Isle of Man</option>\n        <option value=\"IL\">Israel</option>\n        <option value=\"IT\">Italy</option>\n        <option value=\"JM\">Jamaica</option>\n        <option value=\"JP\">Japan</option>\n        <option value=\"JE\">Jersey</option>\n        <option value=\"JO\">Jordan</option>\n        <option value=\"KZ\">Kazakhstan</option>\n        <option value=\"KE\">Kenya</option>\n        <option value=\"KI\">Kiribati</option>\n        <option value=\"KP\">Korea, Democratic People's Republic of</option>\n        <option value=\"KR\">Korea, Republic of</option>\n        <option value=\"KW\">Kuwait</option>\n        <option value=\"KG\">Kyrgyzstan</option>\n        <option value=\"LA\">Lao People's Democratic Republic</option>\n        <option value=\"LV\">Latvia</option>\n        <option value=\"LB\">Lebanon</option>\n        <option value=\"LS\">Lesotho</option>\n        <option value=\"LR\">Liberia</option>\n        <option value=\"LY\">Libya</option>\n        <option value=\"LI\">Liechtenstein</option>\n        <option value=\"LT\">Lithuania</option>\n        <option value=\"LU\">Luxembourg</option>\n        <option value=\"MO\">Macao</option>\n        <option value=\"MK\">Macedonia, the former Yugoslav Republic of</option>\n        <option value=\"MG\">Madagascar</option>\n        <option value=\"MW\">Malawi</option>\n        <option value=\"MY\">Malaysia</option>\n        <option value=\"MV\">Maldives</option>\n        <option value=\"ML\">Mali</option>\n        <option value=\"MT\">Malta</option>\n        <option value=\"MH\">Marshall Islands</option>\n        <option value=\"MQ\">Martinique</option>\n        <option value=\"MR\">Mauritania</option>\n        <option value=\"MU\">Mauritius</option>\n        <option value=\"YT\">Mayotte</option>\n        <option value=\"MX\">Mexico</option>\n        <option value=\"FM\">Micronesia, Federated States of</option>\n        <option value=\"MD\">Moldova, Republic of</option>\n        <option value=\"MC\">Monaco</option>\n        <option value=\"MN\">Mongolia</option>\n        <option value=\"ME\">Montenegro</option>\n        <option value=\"MS\">Montserrat</option>\n        <option value=\"MA\">Morocco</option>\n        <option value=\"MZ\">Mozambique</option>\n        <option value=\"MM\">Myanmar</option>\n        <option value=\"NA\">Namibia</option>\n        <option value=\"NR\">Nauru</option>\n        <option value=\"NP\">Nepal</option>\n        <option value=\"NL\">Netherlands</option>\n        <option value=\"NC\">New Caledonia</option>\n        <option value=\"NZ\">New Zealand</option>\n        <option value=\"NI\">Nicaragua</option>\n        <option value=\"NE\">Niger</option>\n        <option value=\"NG\">Nigeria</option>\n        <option value=\"NU\">Niue</option>\n        <option value=\"NF\">Norfolk Island</option>\n        <option value=\"MP\">Northern Mariana Islands</option>\n        <option value=\"NO\">Norway</option>\n        <option value=\"OM\">Oman</option>\n        <option value=\"PK\">Pakistan</option>\n        <option value=\"PW\">Palau</option>\n        <option value=\"PS\">Palestinian Territory, Occupied</option>\n        <option value=\"PA\">Panama</option>\n        <option value=\"PG\">Papua New Guinea</option>\n        <option value=\"PY\">Paraguay</option>\n        <option value=\"PE\">Peru</option>\n        <option value=\"PH\">Philippines</option>\n        <option value=\"PN\">Pitcairn</option>\n        <option value=\"PL\">Poland</option>\n        <option value=\"PT\">Portugal</option>\n        <option value=\"PR\">Puerto Rico</option>\n        <option value=\"QA\">Qatar</option>\n        <option value=\"RE\">Réunion</option>\n        <option value=\"RO\">Romania</option>\n        <option value=\"RU\">Russian Federation</option>\n        <option value=\"RW\">Rwanda</option>\n        <option value=\"BL\">Saint Barthélemy</option>\n        <option value=\"SH\">Saint Helena, Ascension and Tristan da Cunha</option>\n        <option value=\"KN\">Saint Kitts and Nevis</option>\n        <option value=\"LC\">Saint Lucia</option>\n        <option value=\"MF\">Saint Martin (French part)</option>\n        <option value=\"PM\">Saint Pierre and Miquelon</option>\n        <option value=\"VC\">Saint Vincent and the Grenadines</option>\n        <option value=\"WS\">Samoa</option>\n        <option value=\"SM\">San Marino</option>\n        <option value=\"ST\">Sao Tome and Principe</option>\n        <option value=\"SA\">Saudi Arabia</option>\n        <option value=\"SN\">Senegal</option>\n        <option value=\"RS\">Serbia</option>\n        <option value=\"SC\">Seychelles</option>\n        <option value=\"SL\">Sierra Leone</option>\n        <option value=\"SG\">Singapore</option>\n        <option value=\"SX\">Sint Maarten (Dutch part)</option>\n        <option value=\"SK\">Slovakia</option>\n        <option value=\"SI\">Slovenia</option>\n        <option value=\"SB\">Solomon Islands</option>\n        <option value=\"SO\">Somalia</option>\n        <option value=\"ZA\">South Africa</option>\n        <option value=\"GS\">South Georgia and the South Sandwich Islands</option>\n        <option value=\"SS\">South Sudan</option>\n        <option value=\"ES\">Spain</option>\n        <option value=\"LK\">Sri Lanka</option>\n        <option value=\"SD\">Sudan</option>\n        <option value=\"SR\">Suriname</option>\n        <option value=\"SJ\">Svalbard and Jan Mayen</option>\n        <option value=\"SZ\">Swaziland</option>\n        <option value=\"SE\">Sweden</option>\n        <option value=\"CH\">Switzerland</option>\n        <option value=\"SY\">Syrian Arab Republic</option>\n        <option value=\"TW\">Taiwan</option>\n        <option value=\"TJ\">Tajikistan</option>\n        <option value=\"TZ\">Tanzania, United Republic of</option>\n        <option value=\"TH\">Thailand</option>\n        <option value=\"TL\">Timor-Leste</option>\n        <option value=\"TG\">Togo</option>\n        <option value=\"TK\">Tokelau</option>\n        <option value=\"TO\">Tonga</option>\n        <option value=\"TT\">Trinidad and Tobago</option>\n        <option value=\"TN\">Tunisia</option>\n        <option value=\"TR\">Turkey</option>\n        <option value=\"TM\">Turkmenistan</option>\n        <option value=\"TC\">Turks and Caicos Islands</option>\n        <option value=\"TV\">Tuvalu</option>\n        <option value=\"UG\">Uganda</option>\n        <option value=\"UA\">Ukraine</option>\n        <option value=\"AE\">United Arab Emirates</option>\n        <option value=\"UM\">United States Minor Outlying Islands</option>\n        <option value=\"UY\">Uruguay</option>\n        <option value=\"UZ\">Uzbekistan</option>\n        <option value=\"VU\">Vanuatu</option>\n        <option value=\"VE\">Venezuela, Bolivarian Republic of</option>\n        <option value=\"VN\">Viet Nam</option>\n        <option value=\"VG\">Virgin Islands, British</option>\n        <option value=\"VI\">Virgin Islands, U.S.</option>\n        <option value=\"WF\">Wallis and Futuna</option>\n        <option value=\"EH\">Western Sahara</option>\n        <option value=\"YE\">Yemen</option>\n        <option value=\"ZM\">Zambia</option>\n        <option value=\"ZW\">Zimbabwe</option>\n      </select>\n    </div>\n  </div>\n  <div [ngClass]=\"trialFlow ? 'col-5' : 'col-3'\">\n    <div class=\"form-group\">\n      <label for=\"addressPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n      <input\n        id=\"addressPostalCode\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressPostalCode\"\n        [(ngModel)]=\"taxInfo.postalCode\"\n        [required]=\"taxInfo.country === 'US'\"\n        autocomplete=\"postal-code\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\" *ngIf=\"organizationId && taxInfo.country !== 'US'\">\n    <div class=\"form-group form-check\">\n      <input\n        class=\"form-check-input\"\n        id=\"addressIncludeTaxId\"\n        name=\"addressIncludeTaxId\"\n        type=\"checkbox\"\n        [(ngModel)]=\"taxInfo.includeTaxId\"\n      />\n      <label class=\"form-check-label\" for=\"addressIncludeTaxId\">{{ \"includeVAT\" | i18n }}</label>\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"taxId\">{{ \"taxIdNumber\" | i18n }}</label>\n      <input id=\"taxId\" class=\"form-control\" type=\"text\" name=\"taxId\" [(ngModel)]=\"taxInfo.taxId\" />\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine1\">{{ \"address1\" | i18n }}</label>\n      <input\n        id=\"addressLine1\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine1\"\n        [(ngModel)]=\"taxInfo.line1\"\n        autocomplete=\"address-line1\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine2\">{{ \"address2\" | i18n }}</label>\n      <input\n        id=\"addressLine2\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine2\"\n        [(ngModel)]=\"taxInfo.line2\"\n        autocomplete=\"address-line2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressCity\">{{ \"cityTown\" | i18n }}</label>\n      <input\n        id=\"addressCity\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressCity\"\n        [(ngModel)]=\"taxInfo.city\"\n        autocomplete=\"address-level2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressState\">{{ \"stateProvince\" | i18n }}</label>\n      <input\n        id=\"addressState\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressState\"\n        [(ngModel)]=\"taxInfo.state\"\n        autocomplete=\"address-level1\"\n      />\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationTaxInfoUpdateRequest } from \"@bitwarden/common/models/request/organization-tax-info-update.request\";\nimport { TaxInfoUpdateRequest } from \"@bitwarden/common/models/request/tax-info-update.request\";\nimport { TaxInfoResponse } from \"@bitwarden/common/models/response/tax-info.response\";\nimport { TaxRateResponse } from \"@bitwarden/common/models/response/tax-rate.response\";\n\ntype TaxInfoView = Omit<TaxInfoResponse, \"taxIdType\"> & {\n  includeTaxId: boolean;\n  [key: string]: unknown;\n};\n\n@Component({\n  selector: \"app-tax-info\",\n  templateUrl: \"tax-info.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TaxInfoComponent {\n  @Input() trialFlow = false;\n  @Output() onCountryChanged = new EventEmitter();\n\n  loading = true;\n  organizationId: string;\n  taxInfo: TaxInfoView = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  taxRates: TaxRateResponse[];\n\n  private pristine: TaxInfoView = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      if (this.organizationId) {\n        try {\n          const taxInfo = await this.organizationApiService.getTaxInfo(this.organizationId);\n          if (taxInfo) {\n            this.taxInfo.taxId = taxInfo.taxId;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.line1 = taxInfo.line1;\n            this.taxInfo.line2 = taxInfo.line2;\n            this.taxInfo.city = taxInfo.city;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n            this.taxInfo.includeTaxId =\n              this.taxInfo.country !== \"US\" &&\n              (!!taxInfo.taxId ||\n                !!taxInfo.line1 ||\n                !!taxInfo.line2 ||\n                !!taxInfo.city ||\n                !!taxInfo.state);\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      } else {\n        try {\n          const taxInfo = await this.apiService.getTaxInfo();\n          if (taxInfo) {\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.pristine = Object.assign({}, this.taxInfo);\n      // If not the default (US) then trigger onCountryChanged\n      if (this.taxInfo.country !== \"US\") {\n        this.onCountryChanged.emit();\n      }\n    });\n\n    try {\n      const taxRates = await this.apiService.getTaxRates();\n      if (taxRates) {\n        this.taxRates = taxRates.data;\n      }\n    } catch (e) {\n      this.logService.error(e);\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  get taxRate() {\n    if (this.taxRates != null) {\n      const localTaxRate = this.taxRates.find(\n        (x) => x.country === this.taxInfo.country && x.postalCode === this.taxInfo.postalCode\n      );\n      return localTaxRate?.rate ?? null;\n    }\n  }\n\n  getTaxInfoRequest(): TaxInfoUpdateRequest {\n    if (this.organizationId) {\n      const request = new OrganizationTaxInfoUpdateRequest();\n      request.taxId = this.taxInfo.taxId;\n      request.state = this.taxInfo.state;\n      request.line1 = this.taxInfo.line1;\n      request.line2 = this.taxInfo.line2;\n      request.city = this.taxInfo.city;\n      request.state = this.taxInfo.state;\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    } else {\n      const request = new TaxInfoUpdateRequest();\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    }\n  }\n\n  submitTaxInfo(): Promise<any> {\n    if (!this.hasChanged()) {\n      return new Promise<void>((resolve) => {\n        resolve();\n      });\n    }\n    const request = this.getTaxInfoRequest();\n    return this.organizationId\n      ? this.organizationApiService.updateTaxInfo(\n          this.organizationId,\n          request as OrganizationTaxInfoUpdateRequest\n        )\n      : this.apiService.putTaxInfo(request);\n  }\n\n  changeCountry() {\n    if (this.taxInfo.country === \"US\") {\n      this.taxInfo.includeTaxId = false;\n      this.taxInfo.taxId = null;\n      this.taxInfo.line1 = null;\n      this.taxInfo.line2 = null;\n      this.taxInfo.city = null;\n      this.taxInfo.state = null;\n    }\n    this.onCountryChanged.emit();\n  }\n\n  private hasChanged(): boolean {\n    for (const key in this.taxInfo) {\n      // eslint-disable-next-line\n      if (this.pristine.hasOwnProperty(key) && this.pristine[key] !== this.taxInfo[key]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class TwoFactorProviderRequest extends SecretVerificationRequest {\n  type: TwoFactorProviderType;\n}\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\nimport { TwoFactorProviderRequest } from \"@bitwarden/common/models/request/two-factor-provider.request\";\nimport { AuthResponseBase } from \"@bitwarden/common/types/authResponse\";\n\n@Directive()\nexport abstract class TwoFactorBaseComponent {\n  @Output() onUpdated = new EventEmitter<boolean>();\n\n  type: TwoFactorProviderType;\n  organizationId: string;\n  twoFactorProviderType = TwoFactorProviderType;\n  enabled = false;\n  authed = false;\n\n  protected hashedSecret: string;\n  protected verificationType: VerificationType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected userVerificationService: UserVerificationService\n  ) {}\n\n  protected auth(authResponse: AuthResponseBase) {\n    this.hashedSecret = authResponse.secret;\n    this.verificationType = authResponse.verificationType;\n    this.authed = true;\n  }\n\n  protected async enable(enableFunction: () => Promise<void>) {\n    try {\n      await enableFunction();\n      this.onUpdated.emit(true);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async disable(promise: Promise<unknown>) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"twoStepDisableDesc\"),\n      this.i18nService.t(\"disable\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      const request = await this.buildRequestModel(TwoFactorProviderRequest);\n      request.type = this.type;\n      if (this.organizationId != null) {\n        promise = this.apiService.putTwoFactorOrganizationDisable(this.organizationId, request);\n      } else {\n        promise = this.apiService.putTwoFactorDisable(request);\n      }\n      await promise;\n      this.enabled = false;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"twoStepDisabled\"));\n      this.onUpdated.emit(false);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async buildRequestModel<T extends SecretVerificationRequest>(\n    requestClass: new () => T\n  ) {\n    return this.userVerificationService.buildRequest(\n      {\n        secret: this.hashedSecret,\n        type: this.verificationType,\n      },\n      requestClass,\n      true\n    );\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorDuoRequest extends SecretVerificationRequest {\n  integrationKey: string;\n  secretKey: string;\n  host: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faDuoTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faDuoTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>Duo</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($any($event))\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <strong>{{ \"twoFactorDuoIntegrationKey\" | i18n }}:</strong> {{ ikey }}\n            <br />\n            <strong>{{ \"twoFactorDuoSecretKey\" | i18n }}:</strong> {{ skey }}\n            <br />\n            <strong>{{ \"twoFactorDuoApiHostname\" | i18n }}:</strong> {{ host }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <p>{{ \"twoFactorDuoDesc\" | i18n }}</p>\n            <div class=\"form-group\">\n              <label for=\"ikey\">{{ \"twoFactorDuoIntegrationKey\" | i18n }}</label>\n              <input\n                id=\"ikey\"\n                type=\"text\"\n                name=\"IntegrationKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"ikey\"\n                required\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"skey\">{{ \"twoFactorDuoSecretKey\" | i18n }}</label>\n              <input\n                id=\"skey\"\n                type=\"password\"\n                name=\"SecretKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"skey\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"host\">{{ \"twoFactorDuoApiHostname\" | i18n }}</label>\n              <input\n                id=\"host\"\n                type=\"text\"\n                name=\"Host\"\n                class=\"form-control\"\n                [(ngModel)]=\"host\"\n                placeholder=\"{{ 'ex' | i18n }} api-xxxxxxxx.duosecurity.com\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorDuoRequest } from \"@bitwarden/common/models/request/update-two-factor-duo.request\";\nimport { TwoFactorDuoResponse } from \"@bitwarden/common/models/response/two-factor-duo.response\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-duo\",\n  templateUrl: \"two-factor-duo.component.html\",\n})\nexport class TwoFactorDuoComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Duo;\n  ikey: string;\n  skey: string;\n  host: string;\n  formPromise: Promise<TwoFactorDuoResponse>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorDuoResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorDuoRequest);\n    request.integrationKey = this.ikey;\n    request.secretKey = this.skey;\n    request.host = this.host;\n\n    return super.enable(async () => {\n      if (this.organizationId != null) {\n        this.formPromise = this.apiService.putTwoFactorOrganizationDuo(\n          this.organizationId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.putTwoFactorDuo(request);\n      }\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private processResponse(response: TwoFactorDuoResponse) {\n    this.ikey = response.integrationKey;\n    this.skey = response.secretKey;\n    this.host = response.host;\n    this.enabled = response.enabled;\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorAuthenticatorRequest extends SecretVerificationRequest {\n  token: string;\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faAuthenticatorTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faAuthenticatorTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"authenticatorAppTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($any($event))\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorDesc\" | i18n }}</p>\n            <p>\n              <strong>1. {{ \"twoStepAuthenticatorDownloadApp\" | i18n }}</strong>\n            </p>\n          </ng-container>\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              <p>{{ \"twoStepLoginProviderEnabled\" | i18n }}</p>\n              {{ \"twoStepAuthenticatorReaddDesc\" | i18n }}\n            </app-callout>\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorNeedApp\" | i18n }}</p>\n          </ng-container>\n          <ul class=\"bwi-ul\">\n            <li>\n              <i class=\"bwi bwi-li bwi-apple\"></i>{{ \"iosDevices\" | i18n }}:\n              <a\n                href=\"https://itunes.apple.com/us/app/authy/id494168017?mt=8\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-android\"></i>{{ \"androidDevices\" | i18n }}:\n              <a\n                href=\"https://play.google.com/store/apps/details?id=com.authy.authy\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-windows\"></i>{{ \"windowsDevices\" | i18n }}:\n              <a\n                href=\"https://www.microsoft.com/p/authenticator/9wzdncrfj3rj\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Microsoft Authenticator</a\n              >\n            </li>\n          </ul>\n          <p>{{ \"twoStepAuthenticatorAppsRecommended\" | i18n }}</p>\n          <p *ngIf=\"!enabled\">\n            <strong>2. {{ \"twoStepAuthenticatorScanCode\" | i18n }}</strong>\n          </p>\n          <hr *ngIf=\"enabled\" />\n          <p class=\"text-center\" [ngClass]=\"{ 'mb-0': enabled }\">\n            <canvas id=\"qr\"></canvas><br />\n            <code appA11yTitle=\"{{ 'key' | i18n }}\">{{ key }}</code>\n          </p>\n          <ng-container *ngIf=\"!enabled\">\n            <label for=\"token\">3. {{ \"twoStepAuthenticatorEnterCode\" | i18n }}</label>\n            <input\n              id=\"token\"\n              type=\"text\"\n              name=\"Token\"\n              class=\"form-control\"\n              [(ngModel)]=\"token\"\n              required\n              appInputVerbatim\n            />\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"@bitwarden/common/models/request/update-two-factor-authenticator.request\";\nimport { TwoFactorAuthenticatorResponse } from \"@bitwarden/common/models/response/two-factor-authenticator.response\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n// NOTE: There are additional options available but these are just the ones we are current using.\n// See: https://github.com/neocotic/qrious#examples\ninterface QRiousOptions {\n  element: HTMLElement;\n  value: string;\n  size: number;\n}\n\ndeclare global {\n  interface Window {\n    QRious: new (options: QRiousOptions) => unknown;\n  }\n}\n\n@Component({\n  selector: \"app-two-factor-authenticator\",\n  templateUrl: \"two-factor-authenticator.component.html\",\n})\nexport class TwoFactorAuthenticatorComponent\n  extends TwoFactorBaseComponent\n  implements OnInit, OnDestroy\n{\n  type = TwoFactorProviderType.Authenticator;\n  key: string;\n  token: string;\n  formPromise: Promise<TwoFactorAuthenticatorResponse>;\n\n  private qrScript: HTMLScriptElement;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    userVerificationService: UserVerificationService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n    this.qrScript = window.document.createElement(\"script\");\n    this.qrScript.src = \"scripts/qrious.min.js\";\n    this.qrScript.async = true;\n  }\n\n  ngOnInit() {\n    window.document.body.appendChild(this.qrScript);\n  }\n\n  ngOnDestroy() {\n    window.document.body.removeChild(this.qrScript);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorAuthenticatorResponse>) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorAuthenticatorRequest);\n    request.token = this.token;\n    request.key = this.key;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorAuthenticator(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorAuthenticatorResponse) {\n    this.token = null;\n    this.enabled = response.enabled;\n    this.key = response.key;\n    const email = await this.stateService.getEmail();\n    window.setTimeout(() => {\n      new window.QRious({\n        element: document.getElementById(\"qr\"),\n        value:\n          \"otpauth://totp/Bitwarden:\" +\n          encodeURIComponent(email) +\n          \"?secret=\" +\n          encodeURIComponent(this.key) +\n          \"&issuer=Bitwarden\",\n        size: 160,\n      });\n    }, 100);\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorEmailRequest extends SecretVerificationRequest {\n  token: string;\n  email: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faEmailTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faEmailTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"emailTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($any($event))\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <strong>{{ \"email\" | i18n }}:</strong> {{ email }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <p class=\"d-flex\">\n              <span class=\"mr-3\">{{ \"twoFactorEmailDesc\" | i18n }}</span>\n              <img class=\"float-right ml-auto mfaType1\" alt=\"Email logo\" />\n            </p>\n            <div class=\"form-group\">\n              <label for=\"email\">1. {{ \"twoFactorEmailEnterEmail\" | i18n }}</label>\n              <input\n                id=\"email\"\n                type=\"text\"\n                name=\"Email\"\n                class=\"form-control\"\n                [(ngModel)]=\"email\"\n                required\n                inputmode=\"email\"\n                appInputVerbatim=\"false\"\n              />\n            </div>\n            <div class=\"mb-3 d-flex\">\n              <button\n                #sendBtn\n                type=\"button\"\n                class=\"btn btn-outline-primary btn-sm btn-submit align-self-start\"\n                (click)=\"sendEmail()\"\n                [appApiAction]=\"emailPromise\"\n                [disabled]=\"$any(sendBtn).loading\"\n              >\n                <i\n                  class=\"bwi bwi-spinner bwi-spin\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span>{{ \"sendEmail\" | i18n }}</span>\n              </button>\n              <span class=\"text-success ml-3\" *ngIf=\"sentEmail\">\n                {{ \"verificationCodeEmailSent\" | i18n: sentEmail }}\n              </span>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"token\">2. {{ \"twoFactorEmailEnterCode\" | i18n }}</label>\n              <input\n                id=\"token\"\n                type=\"text\"\n                name=\"Token\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/two-factor-email.request\";\nimport { UpdateTwoFactorEmailRequest } from \"@bitwarden/common/models/request/update-two-factor-email.request\";\nimport { TwoFactorEmailResponse } from \"@bitwarden/common/models/response/two-factor-email.response\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-email\",\n  templateUrl: \"two-factor-email.component.html\",\n})\nexport class TwoFactorEmailComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Email;\n  email: string;\n  token: string;\n  sentEmail: string;\n  formPromise: Promise<TwoFactorEmailResponse>;\n  emailPromise: Promise<unknown>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorEmailResponse>) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  async sendEmail() {\n    try {\n      const request = await this.buildRequestModel(TwoFactorEmailRequest);\n      request.email = this.email;\n      this.emailPromise = this.apiService.postTwoFactorEmailSetup(request);\n      await this.emailPromise;\n      this.sentEmail = this.email;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorEmailRequest);\n    request.email = this.email;\n    request.token = this.token;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorEmail(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorEmailResponse) {\n    this.token = null;\n    this.email = response.email;\n    this.enabled = response.enabled;\n    if (!this.enabled && (this.email == null || this.email === \"\")) {\n      this.email = await this.stateService.getEmail();\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faRecoveryTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faRecoveryTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"recoveryCodeTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\">\n      </app-two-factor-verify>\n      <ng-container *ngIf=\"authed\">\n        <div class=\"modal-body text-center\">\n          <ng-container *ngIf=\"code\">\n            <p>{{ \"twoFactorRecoveryYourCode\" | i18n }}:</p>\n            <code class=\"text-lg\">{{ code }}</code>\n          </ng-container>\n          <ng-container *ngIf=\"!code\">\n            {{ \"twoFactorRecoveryNoCode\" | i18n }}\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"print()\" *ngIf=\"code\">\n            {{ \"printCode\" | i18n }}\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorRecoverResponse } from \"@bitwarden/common/models/response/two-factor-recover.response\";\n\n@Component({\n  selector: \"app-two-factor-recovery\",\n  templateUrl: \"two-factor-recovery.component.html\",\n})\nexport class TwoFactorRecoveryComponent {\n  type = -1;\n  code: string;\n  authed: boolean;\n  twoFactorProviderType = TwoFactorProviderType;\n\n  constructor(private i18nService: I18nService) {}\n\n  auth(authResponse: any) {\n    this.authed = true;\n    this.processResponse(authResponse.response);\n  }\n\n  print() {\n    const w = window.open();\n    w.document.write(\n      '<div style=\"font-size: 18px; text-align: center;\">' +\n        \"<p>\" +\n        this.i18nService.t(\"twoFactorRecoveryYourCode\") +\n        \":</p>\" +\n        \"<code style=\\\"font-family: Menlo, Monaco, Consolas, 'Courier New', monospace;\\\">\" +\n        this.code +\n        \"</code></div>\" +\n        '<p style=\"text-align: center;\">' +\n        new Date() +\n        \"</p>\"\n    );\n    w.onafterprint = () => w.close();\n    w.print();\n  }\n\n  private formatString(s: string) {\n    if (s == null) {\n      return null;\n    }\n    return s\n      .replace(/(.{4})/g, \"$1 \")\n      .trim()\n      .toUpperCase();\n  }\n\n  private processResponse(response: TwoFactorRecoverResponse) {\n    this.code = this.formatString(response.code);\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorWebAuthnDeleteRequest extends SecretVerificationRequest {\n  id: number;\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorWebAuthnRequest extends SecretVerificationRequest {\n  deviceResponse: PublicKeyCredential;\n  name: string;\n  id: number;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faU2fTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faU2fTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"webAuthnTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($any($event))\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorWebAuthnWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorWebAuthnSupportWeb\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right ml-5 mfaType7\" alt=\"FIDO2 WebAuthn logo'\" />\n          <ul class=\"bwi-ul\">\n            <li\n              *ngFor=\"let k of keys; let i = index\"\n              #removeKeyBtn\n              [appApiAction]=\"k.removePromise\"\n            >\n              <i class=\"bwi bwi-li bwi-key\"></i>\n              <strong *ngIf=\"!k.configured || !k.name\">{{ \"webAuthnkeyX\" | i18n: i + 1 }}</strong>\n              <strong *ngIf=\"k.configured && k.name\">{{ k.name }}</strong>\n              <ng-container *ngIf=\"k.configured && !$any(removeKeyBtn).loading\">\n                <ng-container *ngIf=\"k.migrated\">\n                  <span>{{ \"webAuthnMigrated\" | i18n }}</span>\n                </ng-container>\n              </ng-container>\n              <ng-container *ngIf=\"keysConfiguredCount > 1 && k.configured\">\n                <i\n                  class=\"bwi bwi-spin bwi-spinner text-muted bwi-fw\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  *ngIf=\"$any(removeKeyBtn).loading\"\n                  aria-hidden=\"true\"\n                ></i>\n                -\n                <a href=\"#\" appStopClick (click)=\"remove(k)\">{{ \"remove\" | i18n }}</a>\n              </ng-container>\n            </li>\n          </ul>\n          <hr />\n          <p>{{ \"twoFactorWebAuthnAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorU2fGiveName\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fPlugInReadKey\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fSaveForm\" | i18n }}</li>\n          </ol>\n          <div class=\"row\">\n            <div class=\"form-group col-6\">\n              <label for=\"name\">{{ \"name\" | i18n }}</label>\n              <input\n                id=\"name\"\n                type=\"text\"\n                name=\"Name\"\n                class=\"form-control\"\n                [(ngModel)]=\"name\"\n                [disabled]=\"!keyIdAvailable\"\n              />\n            </div>\n          </div>\n          <button\n            type=\"button\"\n            (click)=\"readKey()\"\n            class=\"btn btn-outline-secondary mr-2\"\n            [disabled]=\"$any(readKeyBtn).loading || webAuthnListening || !keyIdAvailable\"\n            #readKeyBtn\n            [appApiAction]=\"challengePromise\"\n          >\n            {{ \"readKey\" | i18n }}\n          </button>\n          <ng-container *ngIf=\"$any(readKeyBtn).loading\">\n            <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n          </ng-container>\n          <ng-container *ngIf=\"!$any(readKeyBtn).loading\">\n            <ng-container *ngIf=\"webAuthnListening\">\n              <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fWaiting\" | i18n }}...\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnResponse\">\n              <i class=\"bwi bwi-check-circle text-success\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fClickSave\" | i18n }}\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnError\">\n              <i class=\"bwi bwi-exclamation-triangle text-danger\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fProblemReadingTryAgain\" | i18n }}\n            </ng-container>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            [disabled]=\"form.loading || !webAuthnResponse\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              *ngIf=\"form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!form.loading\">{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [disabled]=\"$any(disableBtn).loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, NgZone } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"@bitwarden/common/models/request/update-two-factor-web-authn-delete.request\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"@bitwarden/common/models/request/update-two-factor-web-authn.request\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"@bitwarden/common/models/response/two-factor-web-authn.response\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\ninterface Key {\n  id: number;\n  name: string;\n  configured: boolean;\n  migrated?: boolean;\n  removePromise: Promise<TwoFactorWebAuthnResponse> | null;\n}\n\n@Component({\n  selector: \"app-two-factor-webauthn\",\n  templateUrl: \"two-factor-webauthn.component.html\",\n})\nexport class TwoFactorWebAuthnComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.WebAuthn;\n  name: string;\n  keys: Key[];\n  keyIdAvailable: number = null;\n  keysConfiguredCount = 0;\n  webAuthnError: boolean;\n  webAuthnListening: boolean;\n  webAuthnResponse: PublicKeyCredential;\n  challengePromise: Promise<ChallengeResponse>;\n  formPromise: Promise<TwoFactorWebAuthnResponse>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorWebAuthnResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    if (this.webAuthnResponse == null || this.keyIdAvailable == null) {\n      // Should never happen.\n      return Promise.reject();\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnRequest);\n    request.deviceResponse = this.webAuthnResponse;\n    request.id = this.keyIdAvailable;\n    request.name = this.name;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorWebAuthn(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  disable() {\n    return super.disable(this.formPromise);\n  }\n\n  async remove(key: Key) {\n    if (this.keysConfiguredCount <= 1 || key.removePromise != null) {\n      return;\n    }\n    const name = key.name != null ? key.name : this.i18nService.t(\"webAuthnkeyX\", key.id as any);\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeU2fConfirmation\"),\n      name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnDeleteRequest);\n    request.id = key.id;\n    try {\n      key.removePromise = this.apiService.deleteTwoFactorWebAuthn(request);\n      const response = await key.removePromise;\n      key.removePromise = null;\n      await this.processResponse(response);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async readKey() {\n    if (this.keyIdAvailable == null) {\n      return;\n    }\n    const request = await this.buildRequestModel(SecretVerificationRequest);\n    try {\n      this.challengePromise = this.apiService.getTwoFactorWebAuthnChallenge(request);\n      const challenge = await this.challengePromise;\n      this.readDevice(challenge);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private readDevice(webAuthnChallenge: ChallengeResponse) {\n    // eslint-disable-next-line\n    console.log(\"listening for key...\");\n    this.resetWebAuthn(true);\n\n    navigator.credentials\n      .create({\n        publicKey: webAuthnChallenge,\n      })\n      .then((data: PublicKeyCredential) => {\n        this.ngZone.run(() => {\n          this.webAuthnListening = false;\n          this.webAuthnResponse = data;\n        });\n      })\n      .catch((err) => {\n        // eslint-disable-next-line\n        console.error(err);\n        this.resetWebAuthn(false);\n        // TODO: Should we display the actual error?\n        this.webAuthnError = true;\n      });\n  }\n\n  private resetWebAuthn(listening = false) {\n    this.webAuthnResponse = null;\n    this.webAuthnError = false;\n    this.webAuthnListening = listening;\n  }\n\n  private processResponse(response: TwoFactorWebAuthnResponse) {\n    this.resetWebAuthn();\n    this.keys = [];\n    this.keyIdAvailable = null;\n    this.name = null;\n    this.keysConfiguredCount = 0;\n    for (let i = 1; i <= 5; i++) {\n      if (response.keys != null) {\n        const key = response.keys.filter((k) => k.id === i);\n        if (key.length > 0) {\n          this.keysConfiguredCount++;\n          this.keys.push({\n            id: i,\n            name: key[0].name,\n            configured: true,\n            migrated: key[0].migrated,\n            removePromise: null,\n          });\n          continue;\n        }\n      }\n      this.keys.push({ id: i, name: null, configured: false, removePromise: null });\n      if (this.keyIdAvailable == null) {\n        this.keyIdAvailable = i;\n      }\n    }\n    this.enabled = response.enabled;\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorYubioOtpRequest extends SecretVerificationRequest {\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faYubiKeyTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faYubiKeyTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>YubiKey</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($any($event))\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorYubikeyWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorYubikeySupportUsb\" | i18n }}</li>\n              <li>{{ \"twoFactorYubikeySupportMobile\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right mfaType3\" alt=\"YubiKey OTP security key logo\" />\n          <p>{{ \"twoFactorYubikeyAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorYubikeyPlugIn\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySelectKey\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeyTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySaveForm\" | i18n }}</li>\n          </ol>\n          <hr />\n          <div class=\"row\">\n            <div class=\"form-group col-6\" *ngFor=\"let k of keys; let i = index\">\n              <label for=\"key{{ i + 1 }}\">{{ \"yubikeyX\" | i18n: i + 1 }}</label>\n              <input\n                id=\"key{{ i + 1 }}\"\n                type=\"password\"\n                name=\"Key{{ i + 1 }}\"\n                class=\"form-control\"\n                [(ngModel)]=\"k.key\"\n                *ngIf=\"!k.existingKey\"\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <div class=\"d-flex\" *ngIf=\"k.existingKey\">\n                <span class=\"mr-2\">{{ k.existingKey }}</span>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-link text-danger ml-auto\"\n                  (click)=\"remove(k)\"\n                  appA11yTitle=\"{{ 'remove' | i18n }}\"\n                >\n                  <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <strong class=\"d-block mb-2\">{{ \"nfcSupport\" | i18n }}</strong>\n          <div class=\"form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"nfc\" name=\"Nfc\" [(ngModel)]=\"nfc\" />\n            <label class=\"form-check-label\" for=\"nfc\">{{\n              \"twoFactorYubikeySupportsNfc\" | i18n\n            }}</label>\n          </div>\n          <small class=\"form-text text-muted\">{{ \"twoFactorYubikeySupportsNfcDesc\" | i18n }}</small>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [appApiAction]=\"disablePromise\"\n            [disabled]=\"$any(disableBtn).loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"@bitwarden/common/models/request/update-two-factor-yubio-otp.request\";\nimport { TwoFactorYubiKeyResponse } from \"@bitwarden/common/models/response/two-factor-yubi-key.response\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\ninterface Key {\n  key: string;\n  existingKey: string;\n}\n\n@Component({\n  selector: \"app-two-factor-yubikey\",\n  templateUrl: \"two-factor-yubikey.component.html\",\n})\nexport class TwoFactorYubiKeyComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Yubikey;\n  keys: Key[];\n  nfc = false;\n\n  formPromise: Promise<TwoFactorYubiKeyResponse>;\n  disablePromise: Promise<unknown>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorYubiKeyResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    const request = await this.buildRequestModel(UpdateTwoFactorYubioOtpRequest);\n    request.key1 = this.keys != null && this.keys.length > 0 ? this.keys[0].key : null;\n    request.key2 = this.keys != null && this.keys.length > 1 ? this.keys[1].key : null;\n    request.key3 = this.keys != null && this.keys.length > 2 ? this.keys[2].key : null;\n    request.key4 = this.keys != null && this.keys.length > 3 ? this.keys[3].key : null;\n    request.key5 = this.keys != null && this.keys.length > 4 ? this.keys[4].key : null;\n    request.nfc = this.nfc;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorYubiKey(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"yubikeysUpdated\"));\n    });\n  }\n\n  disable() {\n    return super.disable(this.disablePromise);\n  }\n\n  remove(key: Key) {\n    key.existingKey = null;\n    key.key = null;\n  }\n\n  private processResponse(response: TwoFactorYubiKeyResponse) {\n    this.enabled = response.enabled;\n    this.keys = [\n      { key: response.key1, existingKey: this.padRight(response.key1) },\n      { key: response.key2, existingKey: this.padRight(response.key2) },\n      { key: response.key3, existingKey: this.padRight(response.key3) },\n      { key: response.key4, existingKey: this.padRight(response.key4) },\n      { key: response.key5, existingKey: this.padRight(response.key5) },\n    ];\n    this.nfc = response.nfc || !response.enabled;\n  }\n\n  private padRight(str: string, character = \"•\", size = 44) {\n    if (str == null || character == null || str.length >= size) {\n      return str;\n    }\n    const max = (size - str.length) / character.length;\n    for (let i = 0; i < max; i++) {\n      str += character;\n    }\n    return str;\n  }\n}\n","import { Component, OnDestroy, OnInit, Type, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { TwoFactorAuthenticatorComponent } from \"./two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"./two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"./two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"./two-factor-recovery.component\";\nimport { TwoFactorWebAuthnComponent } from \"./two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"./two-factor-yubikey.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"two-factor-setup.component.html\",\n})\nexport class TwoFactorSetupComponent implements OnInit, OnDestroy {\n  @ViewChild(\"recoveryTemplate\", { read: ViewContainerRef, static: true })\n  recoveryModalRef: ViewContainerRef;\n  @ViewChild(\"authenticatorTemplate\", { read: ViewContainerRef, static: true })\n  authenticatorModalRef: ViewContainerRef;\n  @ViewChild(\"yubikeyTemplate\", { read: ViewContainerRef, static: true })\n  yubikeyModalRef: ViewContainerRef;\n  @ViewChild(\"duoTemplate\", { read: ViewContainerRef, static: true }) duoModalRef: ViewContainerRef;\n  @ViewChild(\"emailTemplate\", { read: ViewContainerRef, static: true })\n  emailModalRef: ViewContainerRef;\n  @ViewChild(\"webAuthnTemplate\", { read: ViewContainerRef, static: true })\n  webAuthnModalRef: ViewContainerRef;\n\n  organizationId: string;\n  providers: any[] = [];\n  canAccessPremium: boolean;\n  showPolicyWarning = false;\n  loading = true;\n  modal: ModalRef;\n  formPromise: Promise<any>;\n\n  private destroy$ = new Subject<void>();\n  private twoFactorAuthPolicyAppliesToActiveUser: boolean;\n\n  constructor(\n    protected apiService: ApiService,\n    protected modalService: ModalService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n\n    for (const key in TwoFactorProviders) {\n      // eslint-disable-next-line\n      if (!TwoFactorProviders.hasOwnProperty(key)) {\n        continue;\n      }\n\n      const p = (TwoFactorProviders as any)[key];\n      if (this.filterProvider(p.type)) {\n        continue;\n      }\n\n      this.providers.push({\n        type: p.type,\n        name: p.name,\n        description: p.description,\n        enabled: false,\n        premium: p.premium,\n        sort: p.sort,\n      });\n    }\n\n    this.providers.sort((a: any, b: any) => a.sort - b.sort);\n\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.TwoFactorAuthentication)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.twoFactorAuthPolicyAppliesToActiveUser = policyAppliesToActiveUser;\n      });\n\n    await this.load();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load() {\n    this.loading = true;\n    const providerList = await this.getTwoFactorProviders();\n    providerList.data.forEach((p) => {\n      this.providers.forEach((p2) => {\n        if (p.type === p2.type) {\n          p2.enabled = p.enabled;\n        }\n      });\n    });\n    this.evaluatePolicies();\n    this.loading = false;\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.Authenticator: {\n        const authComp = await this.openModal(\n          this.authenticatorModalRef,\n          TwoFactorAuthenticatorComponent\n        );\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        authComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Authenticator);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Yubikey: {\n        const yubiComp = await this.openModal(this.yubikeyModalRef, TwoFactorYubiKeyComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        yubiComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Yubikey);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Duo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Duo);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Email: {\n        const emailComp = await this.openModal(this.emailModalRef, TwoFactorEmailComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        emailComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Email);\n        });\n        break;\n      }\n      case TwoFactorProviderType.WebAuthn: {\n        const webAuthnComp = await this.openModal(\n          this.webAuthnModalRef,\n          TwoFactorWebAuthnComponent\n        );\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        webAuthnComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.WebAuthn);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  recoveryCode() {\n    this.openModal(this.recoveryModalRef, TwoFactorRecoveryComponent);\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorProviders();\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type === TwoFactorProviderType.OrganizationDuo;\n  }\n\n  protected async openModal<T>(ref: ViewContainerRef, type: Type<T>): Promise<T> {\n    const [modal, childComponent] = await this.modalService.openViewRef(type, ref);\n    this.modal = modal;\n\n    return childComponent;\n  }\n\n  protected updateStatus(enabled: boolean, type: TwoFactorProviderType) {\n    if (!enabled && this.modal != null) {\n      this.modal.close();\n    }\n    this.providers.forEach((p) => {\n      if (p.type === type) {\n        p.enabled = enabled;\n      }\n    });\n    this.evaluatePolicies();\n  }\n\n  private async evaluatePolicies() {\n    if (this.organizationId == null && this.providers.filter((p) => p.enabled).length === 1) {\n      this.showPolicyWarning = this.twoFactorAuthPolicyAppliesToActiveUser;\n    } else {\n      this.showPolicyWarning = false;\n    }\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\nimport { TwoFactorResponse } from \"@bitwarden/common/types/twoFactorResponse\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-two-factor-verify\",\n  templateUrl: \"two-factor-verify.component.html\",\n})\nexport class TwoFactorVerifyComponent {\n  @Input() type: TwoFactorProviderType;\n  @Input() organizationId: string;\n  @Output() onAuthed = new EventEmitter<AuthResponse<TwoFactorResponse>>();\n\n  secret: Verification;\n  formPromise: Promise<TwoFactorResponse>;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async submit() {\n    let hashedSecret: string;\n\n    try {\n      this.formPromise = this.userVerificationService.buildRequest(this.secret).then((request) => {\n        hashedSecret =\n          this.secret.type === VerificationType.MasterPassword\n            ? request.masterPasswordHash\n            : request.otp;\n        return this.apiCall(request);\n      });\n\n      const response = await this.formPromise;\n      this.onAuthed.emit({\n        response: response,\n        secret: hashedSecret,\n        verificationType: this.secret.type,\n      });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private apiCall(request: SecretVerificationRequest): Promise<TwoFactorResponse> {\n    switch (this.type) {\n      case -1 as TwoFactorProviderType:\n        return this.apiService.getTwoFactorRecover(request);\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        if (this.organizationId != null) {\n          return this.apiService.getTwoFactorOrganizationDuo(this.organizationId, request);\n        } else {\n          return this.apiService.getTwoFactorDuo(request);\n        }\n      case TwoFactorProviderType.Email:\n        return this.apiService.getTwoFactorEmail(request);\n      case TwoFactorProviderType.WebAuthn:\n        return this.apiService.getTwoFactorWebAuthn(request);\n      case TwoFactorProviderType.Authenticator:\n        return this.apiService.getTwoFactorAuthenticator(request);\n      case TwoFactorProviderType.Yubikey:\n        return this.apiService.getTwoFactorYubiKey(request);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"modal-body\">\n    <p>{{ \"twoStepLoginAuthDesc\" | i18n }}</p>\n    <app-user-verification [(ngModel)]=\"secret\" ngDefaultControl name=\"secret\">\n    </app-user-verification>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"continue\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n      {{ \"close\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-update-license\",\n  templateUrl: \"update-license.component.html\",\n})\nexport class UpdateLicenseComponent {\n  @Input() organizationId: string;\n  @Output() onUpdated = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    try {\n      const fd = new FormData();\n      fd.append(\"license\", files[0]);\n\n      let updatePromise: Promise<void | unknown> = null;\n      if (this.organizationId == null) {\n        updatePromise = this.apiService.postAccountLicense(fd);\n      } else {\n        updatePromise = this.organizationApiService.updateLicense(this.organizationId, fd);\n      }\n\n      this.formPromise = updatePromise.then(() => {\n        return this.apiService.refreshIdentityToken();\n      });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedLicense\"));\n      this.onUpdated.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"form-group\">\n    <label for=\"file\" class=\"sr-only\">{{ \"licenseFile\" | i18n }}</label>\n    <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n    <small class=\"form-text text-muted\">{{\n      \"licenseFileDesc\"\n        | i18n\n          : (!organizationId\n              ? \"bitwarden_premium_license.json\"\n              : \"bitwarden_organization_license.json\")\n    }}</small>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"submit\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","import { NgModule } from \"@angular/core\";\n\nimport { AcceptEmergencyComponent } from \"../accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"../accounts/accept-organization.component\";\nimport { HintComponent } from \"../accounts/hint.component\";\nimport { LockComponent } from \"../accounts/lock.component\";\nimport { RecoverDeleteComponent } from \"../accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"../accounts/recover-two-factor.component\";\nimport { RegisterFormModule } from \"../accounts/register-form/register-form.module\";\nimport { RemovePasswordComponent } from \"../accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"../accounts/set-password.component\";\nimport { SsoComponent } from \"../accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"../accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"../accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"../accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"../accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"../accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"../accounts/verify-recover-delete.component\";\nimport { DynamicAvatarComponent } from \"../components/dynamic-avatar.component\";\nimport { NestedCheckboxComponent } from \"../components/nested-checkbox.component\";\nimport { OrganizationSwitcherComponent } from \"../components/organization-switcher.component\";\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\nimport { PremiumBadgeComponent } from \"../components/premium-badge.component\";\nimport { SelectableAvatarComponent } from \"../components/selectable-avatar.component\";\nimport { UserVerificationPromptComponent } from \"../components/user-verification-prompt.component\";\nimport { UserVerificationComponent } from \"../components/user-verification.component\";\nimport { FooterComponent } from \"../layouts/footer.component\";\nimport { FrontendLayoutComponent } from \"../layouts/frontend-layout.component\";\nimport { NavbarComponent } from \"../layouts/navbar.component\";\nimport { ProductSwitcherModule } from \"../layouts/product-switcher/product-switcher.module\";\nimport { UserLayoutComponent } from \"../layouts/user-layout.component\";\nimport { OrganizationCreateModule } from \"../organizations/create/organization-create.module\";\nimport { OrganizationLayoutComponent } from \"../organizations/layouts/organization-layout.component\";\nimport { BulkConfirmComponent as OrgBulkConfirmComponent } from \"../organizations/manage/bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent as OrgBulkRemoveComponent } from \"../organizations/manage/bulk/bulk-remove.component\";\nimport { BulkRestoreRevokeComponent as OrgBulkRestoreRevokeComponent } from \"../organizations/manage/bulk/bulk-restore-revoke.component\";\nimport { BulkStatusComponent as OrgBulkStatusComponent } from \"../organizations/manage/bulk/bulk-status.component\";\nimport { CollectionAddEditComponent as OrgCollectionAddEditComponent } from \"../organizations/manage/collection-add-edit.component\";\nimport { CollectionsComponent as OrgManageCollectionsComponent } from \"../organizations/manage/collections.component\";\nimport { EntityEventsComponent as OrgEntityEventsComponent } from \"../organizations/manage/entity-events.component\";\nimport { EventsComponent as OrgEventsComponent } from \"../organizations/manage/events.component\";\nimport { GroupAddEditComponent as OrgGroupAddEditComponent } from \"../organizations/manage/group-add-edit.component\";\nimport { GroupsComponent as OrgGroupsComponent } from \"../organizations/manage/groups.component\";\nimport { ManageComponent as OrgManageComponent } from \"../organizations/manage/manage.component\";\nimport { PeopleComponent as OrgPeopleComponent } from \"../organizations/manage/people.component\";\nimport { ResetPasswordComponent as OrgResetPasswordComponent } from \"../organizations/manage/reset-password.component\";\nimport { UserAddEditComponent as OrgUserAddEditComponent } from \"../organizations/manage/user-add-edit.component\";\nimport { UserConfirmComponent as OrgUserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\nimport { UserGroupsComponent as OrgUserGroupsComponent } from \"../organizations/manage/user-groups.component\";\nimport { AcceptFamilySponsorshipComponent } from \"../organizations/sponsorships/accept-family-sponsorship.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"../organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent } from \"../organizations/tools/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent } from \"../organizations/tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent } from \"../organizations/tools/reused-passwords-report.component\";\nimport { ToolsComponent as OrgToolsComponent } from \"../organizations/tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent } from \"../organizations/tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent } from \"../organizations/tools/weak-passwords-report.component\";\nimport { AddEditComponent as OrgAddEditComponent } from \"../organizations/vault/add-edit.component\";\nimport { AttachmentsComponent as OrgAttachmentsComponent } from \"../organizations/vault/attachments.component\";\nimport { CollectionsComponent as OrgCollectionsComponent } from \"../organizations/vault/collections.component\";\nimport { ProvidersComponent } from \"../providers/providers.component\";\nimport { AccessComponent } from \"../send/access.component\";\nimport { AddEditComponent as SendAddEditComponent } from \"../send/add-edit.component\";\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from \"../send/efflux-dates.component\";\nimport { SendComponent } from \"../send/send.component\";\nimport { AccountComponent } from \"../settings/account.component\";\nimport { AddCreditComponent } from \"../settings/add-credit.component\";\nimport { AdjustPaymentComponent } from \"../settings/adjust-payment.component\";\nimport { AdjustStorageComponent } from \"../settings/adjust-storage.component\";\nimport { ApiKeyComponent } from \"../settings/api-key.component\";\nimport { BillingHistoryViewComponent } from \"../settings/billing-history-view.component\";\nimport { BillingHistoryComponent } from \"../settings/billing-history.component\";\nimport { BillingSyncKeyComponent } from \"../settings/billing-sync-key.component\";\nimport { ChangeAvatarComponent } from \"../settings/change-avatar.component\";\nimport { ChangeEmailComponent } from \"../settings/change-email.component\";\nimport { ChangeKdfComponent } from \"../settings/change-kdf.component\";\nimport { ChangePasswordComponent } from \"../settings/change-password.component\";\nimport { CreateOrganizationComponent } from \"../settings/create-organization.component\";\nimport { DeauthorizeSessionsComponent } from \"../settings/deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"../settings/delete-account.component\";\nimport { DomainRulesComponent } from \"../settings/domain-rules.component\";\nimport { EmergencyAccessAddEditComponent } from \"../settings/emergency-access-add-edit.component\";\nimport { EmergencyAccessAttachmentsComponent } from \"../settings/emergency-access-attachments.component\";\nimport { EmergencyAccessConfirmComponent } from \"../settings/emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"../settings/emergency-access-takeover.component\";\nimport { EmergencyAccessViewComponent } from \"../settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"../settings/emergency-access.component\";\nimport { EmergencyAddEditComponent } from \"../settings/emergency-add-edit.component\";\nimport { OrganizationPlansComponent } from \"../settings/organization-plans.component\";\nimport { PaymentMethodComponent } from \"../settings/payment-method.component\";\nimport { PaymentComponent } from \"../settings/payment.component\";\nimport { PreferencesComponent } from \"../settings/preferences.component\";\nimport { PremiumComponent } from \"../settings/premium.component\";\nimport { ProfileComponent } from \"../settings/profile.component\";\nimport { PurgeVaultComponent } from \"../settings/purge-vault.component\";\nimport { SecurityKeysComponent } from \"../settings/security-keys.component\";\nimport { SecurityComponent } from \"../settings/security.component\";\nimport { SettingsComponent } from \"../settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"../settings/sponsored-families.component\";\nimport { SponsoringOrgRowComponent } from \"../settings/sponsoring-org-row.component\";\nimport { SubscriptionComponent } from \"../settings/subscription.component\";\nimport { TaxInfoComponent } from \"../settings/tax-info.component\";\nimport { TwoFactorAuthenticatorComponent } from \"../settings/two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"../settings/two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"../settings/two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"../settings/two-factor-recovery.component\";\nimport { TwoFactorSetupComponent } from \"../settings/two-factor-setup.component\";\nimport { TwoFactorVerifyComponent } from \"../settings/two-factor-verify.component\";\nimport { TwoFactorWebAuthnComponent } from \"../settings/two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"../settings/two-factor-yubikey.component\";\nimport { UpdateKeyComponent } from \"../settings/update-key.component\";\nimport { UpdateLicenseComponent } from \"../settings/update-license.component\";\nimport { UserSubscriptionComponent } from \"../settings/user-subscription.component\";\nimport { VaultTimeoutInputComponent } from \"../settings/vault-timeout-input.component\";\nimport { VerifyEmailComponent } from \"../settings/verify-email.component\";\nimport { GeneratorComponent } from \"../tools/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"../tools/password-generator-history.component\";\nimport { ToolsComponent } from \"../tools/tools.component\";\nimport { AddEditCustomFieldsComponent } from \"../vault/add-edit-custom-fields.component\";\nimport { AddEditComponent } from \"../vault/add-edit.component\";\nimport { AttachmentsComponent } from \"../vault/attachments.component\";\nimport { BulkActionsComponent } from \"../vault/bulk-actions.component\";\nimport { BulkDeleteComponent } from \"../vault/bulk-delete.component\";\nimport { BulkMoveComponent } from \"../vault/bulk-move.component\";\nimport { BulkRestoreComponent } from \"../vault/bulk-restore.component\";\nimport { BulkShareComponent } from \"../vault/bulk-share.component\";\nimport { CollectionsComponent } from \"../vault/collections.component\";\nimport { FolderAddEditComponent } from \"../vault/folder-add-edit.component\";\nimport { ShareComponent } from \"../vault/share.component\";\nimport { VaultFilterModule } from \"../vault/vault-filter/vault-filter.module\";\n\nimport { SharedModule } from \".\";\n\n// Please do not add to this list of declarations - we should refactor these into modules when doing so makes sense until there are none left.\n// If you are building new functionality, please create or extend a feature module instead.\n@NgModule({\n  imports: [\n    SharedModule,\n    VaultFilterModule,\n    OrganizationCreateModule,\n    RegisterFormModule,\n    ProductSwitcherModule,\n  ],\n  declarations: [\n    PremiumBadgeComponent,\n    AcceptEmergencyComponent,\n    AcceptFamilySponsorshipComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    BillingSyncKeyComponent,\n    BulkActionsComponent,\n    BulkDeleteComponent,\n    BulkMoveComponent,\n    BulkRestoreComponent,\n    BulkShareComponent,\n    ChangeEmailComponent,\n    ChangeKdfComponent,\n    ChangePasswordComponent,\n    CollectionsComponent,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DomainRulesComponent,\n    DynamicAvatarComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    HintComponent,\n    LockComponent,\n    NavbarComponent,\n    NestedCheckboxComponent,\n    OrganizationSwitcherComponent,\n    OrgAddEditComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrgAttachmentsComponent,\n    OrgBulkConfirmComponent,\n    OrgBulkRestoreRevokeComponent,\n    OrgBulkRemoveComponent,\n    OrgBulkStatusComponent,\n    OrgCollectionAddEditComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEventsComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgGroupAddEditComponent,\n    OrgGroupsComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgPeopleComponent,\n    OrgResetPasswordComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgToolsComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserAddEditComponent,\n    OrgUserConfirmComponent,\n    OrgUserGroupsComponent,\n    OrgWeakPasswordsReportComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordRepromptComponent,\n    UserVerificationPromptComponent,\n    PaymentComponent,\n    PaymentMethodComponent,\n    PreferencesComponent,\n    PremiumBadgeComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ChangeAvatarComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RemovePasswordComponent,\n    SecurityComponent,\n    SecurityKeysComponent,\n    SelectableAvatarComponent,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    SubscriptionComponent,\n    TaxInfoComponent,\n    ToolsComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdatePasswordComponent,\n    UpdateTempPasswordComponent,\n    BillingHistoryComponent,\n    BillingHistoryViewComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyRecoverDeleteComponent,\n  ],\n  exports: [\n    PremiumBadgeComponent,\n    AcceptEmergencyComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    BulkActionsComponent,\n    BulkDeleteComponent,\n    BulkMoveComponent,\n    BulkRestoreComponent,\n    BulkShareComponent,\n    ChangeEmailComponent,\n    ChangeKdfComponent,\n    ChangePasswordComponent,\n    CollectionsComponent,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DomainRulesComponent,\n    DynamicAvatarComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    HintComponent,\n    LockComponent,\n    NavbarComponent,\n    NestedCheckboxComponent,\n    OrganizationSwitcherComponent,\n    OrgAddEditComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrgAttachmentsComponent,\n    OrgBulkConfirmComponent,\n    OrgBulkRestoreRevokeComponent,\n    OrgBulkRemoveComponent,\n    OrgBulkStatusComponent,\n    OrgCollectionAddEditComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEventsComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgGroupAddEditComponent,\n    OrgGroupsComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgPeopleComponent,\n    OrgResetPasswordComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgToolsComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserAddEditComponent,\n    OrgUserConfirmComponent,\n    OrgUserGroupsComponent,\n    OrgWeakPasswordsReportComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordRepromptComponent,\n    PaymentComponent,\n    PaymentMethodComponent,\n    PreferencesComponent,\n    PremiumBadgeComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ChangeAvatarComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RemovePasswordComponent,\n    SecurityComponent,\n    SecurityKeysComponent,\n    SelectableAvatarComponent,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    SubscriptionComponent,\n    TaxInfoComponent,\n    ToolsComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdatePasswordComponent,\n    UpdateTempPasswordComponent,\n    BillingHistoryComponent,\n    BillingHistoryViewComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyRecoverDeleteComponent,\n  ],\n})\nexport class LooseComponentsModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared\";\n\nimport { BitActionDirective } from \"./bit-action.directive\";\nimport { BitSubmitDirective } from \"./bit-submit.directive\";\nimport { BitFormButtonDirective } from \"./form-button.directive\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [BitActionDirective, BitFormButtonDirective, BitSubmitDirective],\n  exports: [BitActionDirective, BitFormButtonDirective, BitSubmitDirective],\n})\nexport class AsyncActionsModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AvatarComponent } from \"./avatar.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [AvatarComponent],\n  declarations: [AvatarComponent],\n})\nexport class AvatarModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ButtonComponent } from \"./button.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [ButtonComponent],\n  declarations: [ButtonComponent],\n})\nexport class ButtonModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { CalloutComponent } from \"./callout.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [CalloutComponent],\n  declarations: [CalloutComponent],\n})\nexport class CalloutModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitIconButtonComponent } from \"./icon-button.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitIconButtonComponent],\n  exports: [BitIconButtonComponent],\n})\nexport class IconButtonModule {}\n","import { DialogModule as CdkDialogModule } from \"@angular/cdk/dialog\";\nimport { NgModule } from \"@angular/core\";\n\nimport { IconButtonModule } from \"../icon-button\";\nimport { SharedModule } from \"../shared\";\n\nimport { DialogService } from \"./dialog.service\";\nimport { DialogComponent } from \"./dialog/dialog.component\";\nimport { DialogCloseDirective } from \"./directives/dialog-close.directive\";\nimport { DialogTitleContainerDirective } from \"./directives/dialog-title-container.directive\";\nimport { IconDirective, SimpleDialogComponent } from \"./simple-dialog/simple-dialog.component\";\n\n@NgModule({\n  imports: [SharedModule, IconButtonModule, CdkDialogModule],\n  declarations: [\n    DialogCloseDirective,\n    DialogTitleContainerDirective,\n    DialogComponent,\n    SimpleDialogComponent,\n    IconDirective,\n  ],\n  exports: [\n    CdkDialogModule,\n    DialogComponent,\n    SimpleDialogComponent,\n    DialogCloseDirective,\n    IconDirective,\n  ],\n  providers: [DialogService],\n})\nexport class DialogModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitIconComponent } from \"./icon.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitIconComponent],\n  exports: [BitIconComponent],\n})\nexport class IconModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AnchorLinkDirective, ButtonLinkDirective } from \"./link.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [AnchorLinkDirective, ButtonLinkDirective],\n  declarations: [AnchorLinkDirective, ButtonLinkDirective],\n})\nexport class LinkModule {}\n","import { A11yModule } from \"@angular/cdk/a11y\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { MenuDividerComponent } from \"./menu-divider.component\";\nimport { MenuItemDirective } from \"./menu-item.directive\";\nimport { MenuTriggerForDirective } from \"./menu-trigger-for.directive\";\nimport { MenuComponent } from \"./menu.component\";\n\n@NgModule({\n  imports: [A11yModule, CommonModule, OverlayModule],\n  declarations: [MenuComponent, MenuTriggerForDirective, MenuItemDirective, MenuDividerComponent],\n  exports: [MenuComponent, MenuTriggerForDirective, MenuItemDirective, MenuDividerComponent],\n})\nexport class MenuModule {}\n","import { OverlayModule } from \"@angular/cdk/overlay\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { IconButtonModule } from \"../icon-button/icon-button.module\";\nimport { SharedModule } from \"../shared/shared.module\";\n\nimport { NavDividerComponent } from \"./nav-divider.component\";\nimport { NavGroupComponent } from \"./nav-group.component\";\nimport { NavItemComponent } from \"./nav-item.component\";\n\n@NgModule({\n  imports: [CommonModule, SharedModule, IconButtonModule, OverlayModule, RouterModule],\n  declarations: [NavDividerComponent, NavGroupComponent, NavItemComponent],\n  exports: [NavDividerComponent, NavGroupComponent, NavItemComponent],\n})\nexport class NavigationModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { CellDirective } from \"./cell.directive\";\nimport { RowDirective } from \"./row.directive\";\nimport { TableComponent } from \"./table.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TableComponent, CellDirective, RowDirective],\n  exports: [TableComponent, CellDirective, RowDirective],\n})\nexport class TableModule {}\n","import { PortalModule } from \"@angular/cdk/portal\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { TabHeaderComponent } from \"./shared/tab-header.component\";\nimport { TabListContainerDirective } from \"./shared/tab-list-container.directive\";\nimport { TabListItemDirective } from \"./shared/tab-list-item.directive\";\nimport { TabBodyComponent } from \"./tab-group/tab-body.component\";\nimport { TabGroupComponent } from \"./tab-group/tab-group.component\";\nimport { TabLabelDirective } from \"./tab-group/tab-label.directive\";\nimport { TabComponent } from \"./tab-group/tab.component\";\nimport { TabLinkComponent } from \"./tab-nav-bar/tab-link.component\";\nimport { TabNavBarComponent } from \"./tab-nav-bar/tab-nav-bar.component\";\n\n@NgModule({\n  imports: [CommonModule, RouterModule, PortalModule],\n  exports: [\n    TabGroupComponent,\n    TabComponent,\n    TabLabelDirective,\n    TabNavBarComponent,\n    TabLinkComponent,\n  ],\n  declarations: [\n    TabGroupComponent,\n    TabComponent,\n    TabLabelDirective,\n    TabListContainerDirective,\n    TabListItemDirective,\n    TabHeaderComponent,\n    TabNavBarComponent,\n    TabLinkComponent,\n    TabBodyComponent,\n  ],\n})\nexport class TabsModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ColorPasswordComponent } from \"./color-password.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [ColorPasswordComponent],\n  declarations: [ColorPasswordComponent],\n})\nexport class ColorPasswordModule {}\n","import { registerLocaleData } from \"@angular/common\";\nimport localeAf from \"@angular/common/locales/af\";\nimport localeAr from \"@angular/common/locales/ar\";\nimport localeAz from \"@angular/common/locales/az\";\nimport localeBe from \"@angular/common/locales/be\";\nimport localeBg from \"@angular/common/locales/bg\";\nimport localeBn from \"@angular/common/locales/bn\";\nimport localeBs from \"@angular/common/locales/bs\";\nimport localeCa from \"@angular/common/locales/ca\";\nimport localeCs from \"@angular/common/locales/cs\";\nimport localeDa from \"@angular/common/locales/da\";\nimport localeDe from \"@angular/common/locales/de\";\nimport localeEl from \"@angular/common/locales/el\";\nimport localeEnGb from \"@angular/common/locales/en-GB\";\nimport localeEnIn from \"@angular/common/locales/en-IN\";\nimport localeEo from \"@angular/common/locales/eo\";\nimport localeEs from \"@angular/common/locales/es\";\nimport localeEt from \"@angular/common/locales/et\";\nimport localeEu from \"@angular/common/locales/eu\";\nimport localeFi from \"@angular/common/locales/fi\";\nimport localeFil from \"@angular/common/locales/fil\";\nimport localeFr from \"@angular/common/locales/fr\";\nimport localeHe from \"@angular/common/locales/he\";\nimport localeHi from \"@angular/common/locales/hi\";\nimport localeHr from \"@angular/common/locales/hr\";\nimport localeHu from \"@angular/common/locales/hu\";\nimport localeId from \"@angular/common/locales/id\";\nimport localeIt from \"@angular/common/locales/it\";\nimport localeJa from \"@angular/common/locales/ja\";\nimport localeKa from \"@angular/common/locales/ka\";\nimport localeKm from \"@angular/common/locales/km\";\nimport localeKn from \"@angular/common/locales/kn\";\nimport localeKo from \"@angular/common/locales/ko\";\nimport localeLv from \"@angular/common/locales/lv\";\nimport localeMl from \"@angular/common/locales/ml\";\nimport localeNb from \"@angular/common/locales/nb\";\nimport localeNl from \"@angular/common/locales/nl\";\nimport localeNn from \"@angular/common/locales/nn\";\nimport localePl from \"@angular/common/locales/pl\";\nimport localePtBr from \"@angular/common/locales/pt\";\nimport localePtPt from \"@angular/common/locales/pt-PT\";\nimport localeRo from \"@angular/common/locales/ro\";\nimport localeRu from \"@angular/common/locales/ru\";\nimport localeSi from \"@angular/common/locales/si\";\nimport localeSk from \"@angular/common/locales/sk\";\nimport localeSl from \"@angular/common/locales/sl\";\nimport localeSr from \"@angular/common/locales/sr\";\nimport localeSv from \"@angular/common/locales/sv\";\nimport localeTr from \"@angular/common/locales/tr\";\nimport localeUk from \"@angular/common/locales/uk\";\nimport localeVi from \"@angular/common/locales/vi\";\nimport localeZhCn from \"@angular/common/locales/zh-Hans\";\nimport localeZhTw from \"@angular/common/locales/zh-Hant\";\n\nregisterLocaleData(localeAf, \"af\");\nregisterLocaleData(localeAr, \"ar\");\nregisterLocaleData(localeAz, \"az\");\nregisterLocaleData(localeBe, \"be\");\nregisterLocaleData(localeBg, \"bg\");\nregisterLocaleData(localeBn, \"bn\");\nregisterLocaleData(localeBs, \"bs\");\nregisterLocaleData(localeCa, \"ca\");\nregisterLocaleData(localeCs, \"cs\");\nregisterLocaleData(localeDa, \"da\");\nregisterLocaleData(localeDe, \"de\");\nregisterLocaleData(localeEl, \"el\");\nregisterLocaleData(localeEnGb, \"en-GB\");\nregisterLocaleData(localeEnIn, \"en-IN\");\nregisterLocaleData(localeEo, \"eo\");\nregisterLocaleData(localeEs, \"es\");\nregisterLocaleData(localeEt, \"et\");\nregisterLocaleData(localeEu, \"eu\");\nregisterLocaleData(localeFi, \"fi\");\nregisterLocaleData(localeFil, \"fil\");\nregisterLocaleData(localeFr, \"fr\");\nregisterLocaleData(localeHe, \"he\");\nregisterLocaleData(localeHi, \"hi\");\nregisterLocaleData(localeHr, \"hr\");\nregisterLocaleData(localeHu, \"hu\");\nregisterLocaleData(localeId, \"id\");\nregisterLocaleData(localeIt, \"it\");\nregisterLocaleData(localeJa, \"ja\");\nregisterLocaleData(localeKa, \"ka\");\nregisterLocaleData(localeKm, \"km\");\nregisterLocaleData(localeKn, \"kn\");\nregisterLocaleData(localeKo, \"ko\");\nregisterLocaleData(localeLv, \"lv\");\nregisterLocaleData(localeMl, \"ml\");\nregisterLocaleData(localeNb, \"nb\");\nregisterLocaleData(localeNl, \"nl\");\nregisterLocaleData(localeNn, \"nn\");\nregisterLocaleData(localePl, \"pl\");\nregisterLocaleData(localePtBr, \"pt-BR\");\nregisterLocaleData(localePtPt, \"pt-PT\");\nregisterLocaleData(localeRo, \"ro\");\nregisterLocaleData(localeRu, \"ru\");\nregisterLocaleData(localeSi, \"si\");\nregisterLocaleData(localeSk, \"sk\");\nregisterLocaleData(localeSl, \"sl\");\nregisterLocaleData(localeSr, \"sr\");\nregisterLocaleData(localeSv, \"sv\");\nregisterLocaleData(localeTr, \"tr\");\nregisterLocaleData(localeUk, \"uk\");\nregisterLocaleData(localeVi, \"vi\");\nregisterLocaleData(localeZhCn, \"zh-CN\");\nregisterLocaleData(localeZhTw, \"zh-TW\");\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\nimport { ToastrModule } from \"ngx-toastr\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport {\n  AsyncActionsModule,\n  AvatarModule,\n  BadgeModule,\n  ButtonModule,\n  CalloutModule,\n  DialogModule,\n  FormFieldModule,\n  IconButtonModule,\n  IconModule,\n  LinkModule,\n  MenuModule,\n  NavigationModule,\n  TableModule,\n  TabsModule,\n  ColorPasswordModule,\n} from \"@bitwarden/components\";\n\n// Register the locales for the application\nimport \"./locales\";\n\n/**\n * This NgModule should contain the most basic shared directives, pipes, and components. They\n * should be widely used by other modules to be considered for adding to this module. If in doubt\n * do not add to this module.\n *\n * See: https://angular.io/guide/module-types#shared-ngmodules\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    DragDropModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InfiniteScrollModule,\n    RouterModule,\n    ToastrModule,\n    JslibModule,\n\n    // Component library\n    AsyncActionsModule,\n    AvatarModule,\n    BadgeModule,\n    ButtonModule,\n    CalloutModule,\n    DialogModule,\n    FormFieldModule,\n    IconButtonModule,\n    IconModule,\n    LinkModule,\n    MenuModule,\n    NavigationModule,\n    TableModule,\n    TabsModule,\n    LinkModule,\n    ColorPasswordModule,\n\n    // Web specific\n  ],\n  exports: [\n    CommonModule,\n    DragDropModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InfiniteScrollModule,\n    RouterModule,\n    ToastrModule,\n    JslibModule,\n\n    // Component library\n    AsyncActionsModule,\n    AvatarModule,\n    BadgeModule,\n    ButtonModule,\n    CalloutModule,\n    DialogModule,\n    FormFieldModule,\n    IconButtonModule,\n    IconModule,\n    LinkModule,\n    MenuModule,\n    NavigationModule,\n    TableModule,\n    TabsModule,\n    LinkModule,\n    ColorPasswordModule,\n\n    // Web specific\n  ],\n  providers: [DatePipe],\n  bootstrap: [],\n})\nexport class SharedModule {}\n","import { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { FieldView } from \"@bitwarden/common/models/view/field.view\";\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  @Input() thisCipherType: CipherType;\n  @Input() editMode: boolean;\n\n  addFieldType: FieldType = FieldType.Text;\n  addFieldTypeOptions: any[];\n  addFieldLinkedTypeOption: any;\n  linkedFieldOptions: any[] = [];\n\n  cipherType = CipherType;\n  fieldType = FieldType;\n  eventType = EventType;\n\n  constructor(\n    private i18nService: I18nService,\n    private eventCollectionService: EventCollectionService\n  ) {\n    this.addFieldTypeOptions = [\n      { name: i18nService.t(\"cfTypeText\"), value: FieldType.Text },\n      { name: i18nService.t(\"cfTypeHidden\"), value: FieldType.Hidden },\n      { name: i18nService.t(\"cfTypeBoolean\"), value: FieldType.Boolean },\n    ];\n    this.addFieldLinkedTypeOption = {\n      name: this.i18nService.t(\"cfTypeLinked\"),\n      value: FieldType.Linked,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.thisCipherType != null) {\n      this.setLinkedFieldOptions();\n\n      if (!changes.thisCipherType.firstChange) {\n        this.resetCipherLinkedFields();\n      }\n    }\n  }\n\n  addField() {\n    if (this.cipher.fields == null) {\n      this.cipher.fields = [];\n    }\n\n    const f = new FieldView();\n    f.type = this.addFieldType;\n    f.newField = true;\n\n    if (f.type === FieldType.Linked) {\n      f.linkedId = this.linkedFieldOptions[0].value;\n    }\n\n    this.cipher.fields.push(f);\n  }\n\n  removeField(field: FieldView) {\n    const i = this.cipher.fields.indexOf(field);\n    if (i > -1) {\n      this.cipher.fields.splice(i, 1);\n    }\n  }\n\n  toggleFieldValue(field: FieldView) {\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (this.editMode && f.showValue) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledHiddenFieldVisible,\n        this.cipher.id\n      );\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n  }\n\n  private setLinkedFieldOptions() {\n    if (this.cipher.linkedFieldOptions == null) {\n      return;\n    }\n\n    const options: any = [];\n    this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n      options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id })\n    );\n    this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  private resetCipherLinkedFields() {\n    if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n      return;\n    }\n\n    // Delete any Linked custom fields if the item type does not support them\n    if (this.cipher.linkedFieldOptions == null) {\n      this.cipher.fields = this.cipher.fields.filter((f) => f.type !== FieldType.Linked);\n      return;\n    }\n\n    this.cipher.fields\n      .filter((f) => f.type === FieldType.Linked)\n      .forEach((f) => (f.linkedId = this.linkedFieldOptions[0].value));\n  }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n  selector: \"input[type=checkbox][appTrueFalseValue]\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TrueFalseValueDirective),\n      multi: true,\n    },\n  ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n  @Input() trueValue = true;\n  @Input() falseValue = false;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener(\"change\", [\"$event\"])\n  onHostChange(ev: any) {\n    this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  writeValue(obj: any): void {\n    if (obj === this.trueValue) {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", true);\n    } else {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", false);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    /* nothing */\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    /* nothing */\n  }\n\n  private propagateChange = (_: any) => {\n    /* nothing */\n  };\n}\n","<ng-container>\n  <h3 class=\"mt-4\">{{ \"customFields\" | i18n }}</h3>\n  <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n    <div\n      role=\"group\"\n      class=\"row\"\n      cdkDrag\n      *ngFor=\"let f of cipher.fields; let i = index; trackBy: trackByFunction\"\n      attr.aria-label=\"{{ f.name }}\"\n    >\n      <div class=\"col-5 form-group\">\n        <div class=\"d-flex\">\n          <label for=\"fieldName{{ i }}\">{{ \"name\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/custom-fields/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <input\n          id=\"fieldName{{ i }}\"\n          type=\"text\"\n          name=\"Field.Name{{ i }}\"\n          [(ngModel)]=\"f.name\"\n          class=\"form-control\"\n          appInputVerbatim\n          [disabled]=\"cipher.isDeleted || viewOnly\"\n          [readonly]=\"!cipher.edit && editMode\"\n        />\n      </div>\n      <div class=\"col-7 form-group\">\n        <label for=\"fieldValue{{ i }}\">{{ \"value\" | i18n }}</label>\n        <div class=\"d-flex align-items-center\">\n          <!-- Text -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Text\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              appInputVerbatim\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              [readonly]=\"!cipher.edit && editMode\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', 'Field')\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Hidden -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Hidden\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              type=\"{{ f.showValue ? 'text' : 'password' }}\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              class=\"form-control text-monospace\"\n              appInputVerbatim\n              autocomplete=\"new-password\"\n              [disabled]=\"cipher.isDeleted || viewOnly || (!cipher.viewPassword && !f.newField)\"\n              [readonly]=\"!cipher.edit && editMode\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleFieldValue(f)\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !f.showValue, 'bwi-eye-slash': f.showValue }\"\n                >\n                </i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', f.type === fieldType.Hidden ? 'H_Field' : 'Field')\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Linked -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Linked\">\n            <select\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              class=\"form-control\"\n              [(ngModel)]=\"f.linkedId\"\n              *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            >\n              <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"flex-fill\">\n            <!-- Boolean -->\n            <input\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              type=\"checkbox\"\n              [(ngModel)]=\"f.value\"\n              *ngIf=\"f.type === fieldType.Boolean\"\n              appTrueFalseValue\n              [trueValue]=\"true\"\n              [falseValue]=\"false\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n          </div>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-danger ml-2\"\n            (click)=\"removeField(f)\"\n            appA11yTitle=\"{{ 'remove' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\"\n          >\n            <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-muted cursor-move\"\n            appA11yTitle=\"{{ 'dragToSort' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\"\n          >\n            <i class=\"bwi bwi-hamburger bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Add new custom field -->\n  <a\n    href=\"#\"\n    appStopClick\n    (click)=\"addField()\"\n    class=\"d-inline-block mb-2\"\n    *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\"\n  >\n    <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomField\" | i18n }}\n  </a>\n  <div class=\"row\" *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\">\n    <div class=\"col-5\">\n      <label for=\"addFieldType\" class=\"sr-only\">{{ \"type\" | i18n }}</label>\n      <select id=\"addFieldType\" class=\"form-control\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\">\n        <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        <option\n          *ngIf=\"cipher.linkedFieldOptions != null\"\n          [ngValue]=\"addFieldLinkedTypeOption.value\"\n        >\n          {{ addFieldLinkedTypeOption.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n","import { Component, Input } from \"@angular/core\";\n\nimport { AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent } from \"@bitwarden/angular/components/add-edit-custom-fields.component\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-vault-add-edit-custom-fields\",\n  templateUrl: \"add-edit-custom-fields.component.html\",\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n  @Input() viewOnly: boolean;\n  @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n  constructor(i18nService: I18nService, eventCollectionService: EventCollectionService) {\n    super(i18nService, eventCollectionService);\n  }\n}\n","import { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { Observable, Subject, takeUntil, concatMap } from \"rxjs\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SecureNoteType } from \"@bitwarden/common/enums/secureNoteType\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CardView } from \"@bitwarden/common/models/view/card.view\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\nimport { IdentityView } from \"@bitwarden/common/models/view/identity.view\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/login-uri.view\";\nimport { LoginView } from \"@bitwarden/common/models/view/login.view\";\nimport { SecureNoteView } from \"@bitwarden/common/models/view/secure-note.view\";\n\n@Directive()\nexport class AddEditComponent implements OnInit, OnDestroy {\n  @Input() cloneMode = false;\n  @Input() folderId: string = null;\n  @Input() cipherId: string;\n  @Input() type: CipherType;\n  @Input() collectionIds: string[];\n  @Input() organizationId: string = null;\n  @Output() onSavedCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n  @Output() onCancelled = new EventEmitter<CipherView>();\n  @Output() onEditAttachments = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onEditCollections = new EventEmitter<CipherView>();\n  @Output() onGeneratePassword = new EventEmitter();\n  @Output() onGenerateUsername = new EventEmitter();\n\n  editMode = false;\n  cipher: CipherView;\n  folders$: Observable<FolderView[]>;\n  collections: CollectionView[] = [];\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  restorePromise: Promise<any>;\n  checkPasswordPromise: Promise<number>;\n  showPassword = false;\n  showCardNumber = false;\n  showCardCode = false;\n  cipherType = CipherType;\n  typeOptions: any[];\n  cardBrandOptions: any[];\n  cardExpMonthOptions: any[];\n  identityTitleOptions: any[];\n  uriMatchOptions: any[];\n  ownershipOptions: any[] = [];\n  autofillOnPageLoadOptions: any[];\n  currentDate = new Date();\n  allowPersonal = true;\n  reprompt = false;\n  canUseReprompt = true;\n  organization: Organization;\n\n  protected componentName = \"\";\n  protected destroy$ = new Subject<void>();\n  protected writeableCollections: CollectionView[];\n  private personalOwnershipPolicyAppliesToActiveUser: boolean;\n  private previousCipherId: string;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected stateService: StateService,\n    protected collectionService: CollectionService,\n    protected messagingService: MessagingService,\n    protected eventCollectionService: EventCollectionService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"typeLogin\"), value: CipherType.Login },\n      { name: i18nService.t(\"typeCard\"), value: CipherType.Card },\n      { name: i18nService.t(\"typeIdentity\"), value: CipherType.Identity },\n      { name: i18nService.t(\"typeSecureNote\"), value: CipherType.SecureNote },\n    ];\n    this.cardBrandOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"Visa\", value: \"Visa\" },\n      { name: \"Mastercard\", value: \"Mastercard\" },\n      { name: \"American Express\", value: \"Amex\" },\n      { name: \"Discover\", value: \"Discover\" },\n      { name: \"Diners Club\", value: \"Diners Club\" },\n      { name: \"JCB\", value: \"JCB\" },\n      { name: \"Maestro\", value: \"Maestro\" },\n      { name: \"UnionPay\", value: \"UnionPay\" },\n      { name: \"RuPay\", value: \"RuPay\" },\n      { name: i18nService.t(\"cardBrandMir\"), value: \"Mir\" },\n      { name: i18nService.t(\"other\"), value: \"Other\" },\n    ];\n    this.cardExpMonthOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"01 - \" + i18nService.t(\"january\"), value: \"1\" },\n      { name: \"02 - \" + i18nService.t(\"february\"), value: \"2\" },\n      { name: \"03 - \" + i18nService.t(\"march\"), value: \"3\" },\n      { name: \"04 - \" + i18nService.t(\"april\"), value: \"4\" },\n      { name: \"05 - \" + i18nService.t(\"may\"), value: \"5\" },\n      { name: \"06 - \" + i18nService.t(\"june\"), value: \"6\" },\n      { name: \"07 - \" + i18nService.t(\"july\"), value: \"7\" },\n      { name: \"08 - \" + i18nService.t(\"august\"), value: \"8\" },\n      { name: \"09 - \" + i18nService.t(\"september\"), value: \"9\" },\n      { name: \"10 - \" + i18nService.t(\"october\"), value: \"10\" },\n      { name: \"11 - \" + i18nService.t(\"november\"), value: \"11\" },\n      { name: \"12 - \" + i18nService.t(\"december\"), value: \"12\" },\n    ];\n    this.identityTitleOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"mr\"), value: i18nService.t(\"mr\") },\n      { name: i18nService.t(\"mrs\"), value: i18nService.t(\"mrs\") },\n      { name: i18nService.t(\"ms\"), value: i18nService.t(\"ms\") },\n      { name: i18nService.t(\"dr\"), value: i18nService.t(\"dr\") },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"defaultMatchDetection\"), value: null },\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.autofillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadUseDefault\"), value: null },\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.PersonalOwnership)\n      .pipe(\n        concatMap(async (policyAppliesToActiveUser) => {\n          this.personalOwnershipPolicyAppliesToActiveUser = policyAppliesToActiveUser;\n          await this.init();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async init() {\n    if (this.ownershipOptions.length) {\n      this.ownershipOptions = [];\n    }\n    if (this.personalOwnershipPolicyAppliesToActiveUser) {\n      this.allowPersonal = false;\n    } else {\n      const myEmail = await this.stateService.getEmail();\n      this.ownershipOptions.push({ name: myEmail, value: null });\n    }\n\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")).forEach((o) => {\n      if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n        this.ownershipOptions.push({ name: o.name, value: o.id });\n      }\n    });\n    if (!this.allowPersonal) {\n      this.organizationId = this.ownershipOptions[0].value;\n    }\n\n    this.writeableCollections = await this.loadCollections();\n\n    this.canUseReprompt = await this.passwordRepromptService.enabled();\n  }\n\n  async load() {\n    this.editMode = this.cipherId != null;\n    if (this.editMode) {\n      this.editMode = true;\n      if (this.cloneMode) {\n        this.cloneMode = true;\n        this.title = this.i18nService.t(\"addItem\");\n      } else {\n        this.title = this.i18nService.t(\"editItem\");\n      }\n    } else {\n      this.title = this.i18nService.t(\"addItem\");\n    }\n\n    const addEditCipherInfo: any = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipher = addEditCipherInfo.cipher;\n      this.collectionIds = addEditCipherInfo.collectionIds;\n    }\n    await this.stateService.setAddEditCipherInfo(null);\n\n    if (this.cipher == null) {\n      if (this.editMode) {\n        const cipher = await this.loadCipher();\n        this.cipher = await cipher.decrypt();\n\n        // Adjust Cipher Name if Cloning\n        if (this.cloneMode) {\n          this.cipher.name += \" - \" + this.i18nService.t(\"clone\");\n          // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n          if (this.cipher.organizationId == null && !this.allowPersonal) {\n            this.cipher.organizationId = this.organizationId;\n          }\n        }\n      } else {\n        this.cipher = new CipherView();\n        this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n        this.cipher.folderId = this.folderId;\n        this.cipher.type = this.type == null ? CipherType.Login : this.type;\n        this.cipher.login = new LoginView();\n        this.cipher.login.uris = [new LoginUriView()];\n        this.cipher.card = new CardView();\n        this.cipher.identity = new IdentityView();\n        this.cipher.secureNote = new SecureNoteView();\n        this.cipher.secureNote.type = SecureNoteType.Generic;\n        this.cipher.reprompt = CipherRepromptType.None;\n      }\n    }\n\n    if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n      await this.organizationChanged();\n      if (\n        this.collectionIds != null &&\n        this.collectionIds.length > 0 &&\n        this.collections.length > 0\n      ) {\n        this.collections.forEach((c) => {\n          if (this.collectionIds.indexOf(c.id) > -1) {\n            (c as any).checked = true;\n          }\n        });\n      }\n    }\n\n    this.folders$ = this.folderService.folderViews$;\n\n    if (this.editMode && this.previousCipherId !== this.cipherId) {\n      this.eventCollectionService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n    this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.cipher.isDeleted) {\n      return this.restore();\n    }\n\n    if (this.cipher.name == null || this.cipher.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      !this.allowPersonal &&\n      this.cipher.organizationId == null\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"personalOwnershipSubmitError\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.uris != null &&\n      this.cipher.login.uris.length === 1 &&\n      (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n    ) {\n      this.cipher.login.uris = null;\n    }\n\n    // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n    if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n      this.cipher.collectionIds =\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n    }\n\n    // Clear current Cipher Id to trigger \"Add\" cipher flow\n    if (this.cloneMode) {\n      this.cipher.id = null;\n    }\n\n    const cipher = await this.encryptCipher();\n    try {\n      this.formPromise = this.saveCipher(cipher);\n      await this.formPromise;\n      this.cipher.id = cipher.id;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode && !this.cloneMode ? \"editedItem\" : \"addedItem\")\n      );\n      this.onSavedCipher.emit(this.cipher);\n      this.messagingService.send(this.editMode && !this.cloneMode ? \"editedCipher\" : \"addedCipher\");\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  addUri() {\n    if (this.cipher.type !== CipherType.Login) {\n      return;\n    }\n\n    if (this.cipher.login.uris == null) {\n      this.cipher.login.uris = [];\n    }\n\n    this.cipher.login.uris.push(new LoginUriView());\n  }\n\n  removeUri(uri: LoginUriView) {\n    if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n      return;\n    }\n\n    const i = this.cipher.login.uris.indexOf(uri);\n    if (i > -1) {\n      this.cipher.login.uris.splice(i, 1);\n    }\n  }\n\n  getCardExpMonthDisplay() {\n    return this.cardExpMonthOptions.find((x) => x.value == this.cipher.card.expMonth)?.name;\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  cancel() {\n    this.onCancelled.emit(this.cipher);\n  }\n\n  attachments() {\n    this.onEditAttachments.emit(this.cipher);\n  }\n\n  share() {\n    this.onShareCipher.emit(this.cipher);\n  }\n\n  editCollections() {\n    this.onEditCollections.emit(this.cipher);\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      this.componentName != \"\" ? this.componentName + \" .modal-content\" : null\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.deleteCipher();\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n      this.messagingService.send(\n        this.cipher.isDeleted ? \"permanentlyDeletedCipher\" : \"deletedCipher\"\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.restorePromise = this.restoreCipher();\n      await this.restorePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n      this.messagingService.send(\"restoredCipher\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async generateUsername(): Promise<boolean> {\n    if (this.cipher.login?.username?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwriteUsernameConfirmation\"),\n        this.i18nService.t(\"overwriteUsername\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGenerateUsername.emit();\n    return true;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    if (this.cipher.login?.password?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwritePasswordConfirmation\"),\n        this.i18nService.t(\"overwritePassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGeneratePassword.emit();\n    return true;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"loginPassword\").focus();\n    if (this.editMode && this.showPassword) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledPasswordVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  async toggleCardNumber() {\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledCardNumberVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  toggleCardCode() {\n    this.showCardCode = !this.showCardCode;\n    document.getElementById(\"cardCode\").focus();\n    if (this.editMode && this.showCardCode) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledCardCodeVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  toggleUriOptions(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n  }\n\n  loginUriMatchChanged(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null ? true : u.showOptions;\n  }\n\n  async organizationChanged() {\n    if (this.writeableCollections != null) {\n      this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    }\n    if (this.cipher.organizationId != null) {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.cipher.organizationId\n      );\n      const org = await this.organizationService.get(this.cipher.organizationId);\n      if (org != null) {\n        this.cipher.organizationUseTotp = org.useTotp;\n      }\n    } else {\n      this.collections = [];\n    }\n  }\n\n  async checkPassword() {\n    if (this.checkPasswordPromise != null) {\n      return;\n    }\n\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n    this.checkPasswordPromise = null;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  repromptChanged() {\n    this.reprompt = !this.reprompt;\n    if (this.reprompt) {\n      this.cipher.reprompt = CipherRepromptType.Password;\n    } else {\n      this.cipher.reprompt = CipherRepromptType.None;\n    }\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter((c) => !c.readOnly);\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected encryptCipher() {\n    return this.cipherService.encrypt(this.cipher);\n  }\n\n  protected saveCipher(cipher: Cipher) {\n    return this.cipher.id == null\n      ? this.cipherService.createWithServer(cipher)\n      : this.cipherService.updateWithServer(cipher);\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n}\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/add-edit.component\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/login-uri.view\";\n\n@Component({\n  selector: \"app-vault-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent implements OnInit, OnDestroy {\n  canAccessPremium: boolean;\n  totpCode: string;\n  totpCodeFormatted: string;\n  totpDash: number;\n  totpSec: number;\n  totpLow: boolean;\n  showRevisionDate = false;\n  hasPasswordHistory = false;\n  viewingPasswordHistory = false;\n  viewOnly = false;\n  showPasswordCount = false;\n\n  protected totpInterval: number;\n  protected override componentName = \"app-vault-add-edit\";\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    protected totpService: TotpService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected messagingService: MessagingService,\n    eventCollectionService: EventCollectionService,\n    protected policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      messagingService,\n      eventCollectionService,\n      policyService,\n      logService,\n      passwordRepromptService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n    this.showRevisionDate = this.cipher.passwordRevisionDisplayDate != null;\n    this.hasPasswordHistory = this.cipher.hasPasswordHistory;\n    this.cleanUp();\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.totp &&\n      (this.cipher.organizationUseTotp || this.canAccessPremium)\n    ) {\n      await this.totpUpdateCode();\n      const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n      await this.totpTick(interval);\n\n      this.totpInterval = window.setInterval(async () => {\n        await this.totpTick(interval);\n      }, 1000);\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n\n  toggleFavorite() {\n    this.cipher.favorite = !this.cipher.favorite;\n  }\n\n  togglePassword() {\n    super.togglePassword();\n\n    // Hide password count when password is hidden to be safe\n    if (!this.showPassword && this.showPasswordCount) {\n      this.togglePasswordCount();\n    }\n  }\n\n  togglePasswordCount() {\n    this.showPasswordCount = !this.showPasswordCount;\n\n    if (this.editMode && this.showPasswordCount) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledPasswordVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  launch(uri: LoginUriView) {\n    if (!uri.canLaunch) {\n      return;\n    }\n\n    this.platformUtilsService.launchUri(uri.launchUri);\n  }\n\n  copy(value: string, typeI18nKey: string, aType: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (this.editMode) {\n      if (typeI18nKey === \"password\") {\n        this.eventCollectionService.collect(\n          EventType.Cipher_ClientToggledHiddenFieldVisible,\n          this.cipherId\n        );\n      } else if (typeI18nKey === \"securityCode\") {\n        this.eventCollectionService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n      } else if (aType === \"H_Field\") {\n        this.eventCollectionService.collect(\n          EventType.Cipher_ClientCopiedHiddenField,\n          this.cipherId\n        );\n      }\n    }\n  }\n\n  async generatePassword(): Promise<boolean> {\n    const confirmed = await super.generatePassword();\n    if (confirmed) {\n      const options = (await this.passwordGenerationService.getOptions())?.[0] ?? {};\n      this.cipher.login.password = await this.passwordGenerationService.generatePassword(options);\n    }\n    return confirmed;\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  upgradeOrganization() {\n    this.messagingService.send(\"upgradeOrganization\", {\n      organizationId: this.cipher.organizationId,\n    });\n  }\n\n  showGetPremium() {\n    if (this.canAccessPremium) {\n      return;\n    }\n    if (this.cipher.organizationUseTotp) {\n      this.upgradeOrganization();\n    } else {\n      this.premiumRequired();\n    }\n  }\n\n  viewHistory() {\n    this.viewingPasswordHistory = !this.viewingPasswordHistory;\n  }\n\n  protected cleanUp() {\n    if (this.totpInterval) {\n      window.clearInterval(this.totpInterval);\n    }\n  }\n\n  protected async totpUpdateCode() {\n    if (\n      this.cipher == null ||\n      this.cipher.type !== CipherType.Login ||\n      this.cipher.login.totp == null\n    ) {\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n      return;\n    }\n\n    this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n    if (this.totpCode != null) {\n      if (this.totpCode.length > 4) {\n        const half = Math.floor(this.totpCode.length / 2);\n        this.totpCodeFormatted =\n          this.totpCode.substring(0, half) + \" \" + this.totpCode.substring(half);\n      } else {\n        this.totpCodeFormatted = this.totpCode;\n      }\n    } else {\n      this.totpCodeFormatted = null;\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n    }\n  }\n\n  protected allowOwnershipAssignment() {\n    return (\n      (!this.editMode || this.cloneMode) &&\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    );\n  }\n\n  private async totpTick(intervalSeconds: number) {\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const mod = epoch % intervalSeconds;\n\n    this.totpSec = intervalSeconds - mod;\n    this.totpDash = +(Math.round(((78.6 / intervalSeconds) * mod + \"e+2\") as any) + \"e-2\");\n    this.totpLow = this.totpSec <= 7;\n    if (mod === 0) {\n      await this.totpUpdateCode();\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { OrganizationNameBadgeComponent } from \"./organization-name-badge.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [OrganizationNameBadgeComponent],\n  exports: [OrganizationNameBadgeComponent],\n})\nexport class OrganizationBadgeModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\nimport { LinkSsoComponent } from \"../organization-filter/link-sso.component\";\nimport { OrganizationFilterComponent } from \"../organization-filter/organization-filter.component\";\nimport { OrganizationOptionsComponent } from \"../organization-filter/organization-options.component\";\n\nimport { CollectionFilterComponent } from \"./collection-filter/collection-filter.component\";\nimport { FolderFilterComponent } from \"./folder-filter/folder-filter.component\";\nimport { StatusFilterComponent } from \"./status-filter/status-filter.component\";\nimport { TypeFilterComponent } from \"./type-filter/type-filter.component\";\nimport { VaultFilterService } from \"./vault-filter.service\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [\n    CollectionFilterComponent,\n    FolderFilterComponent,\n    StatusFilterComponent,\n    TypeFilterComponent,\n    OrganizationFilterComponent,\n    OrganizationOptionsComponent,\n    LinkSsoComponent,\n  ],\n  exports: [\n    SharedModule,\n    CollectionFilterComponent,\n    FolderFilterComponent,\n    StatusFilterComponent,\n    TypeFilterComponent,\n    OrganizationFilterComponent,\n    OrganizationOptionsComponent,\n    LinkSsoComponent,\n  ],\n  providers: [VaultFilterService],\n})\nexport class VaultFilterSharedModule {}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\nimport { DynamicTreeNode } from \"@bitwarden/angular/vault/vault-filter/models/dynamic-tree-node.model\";\nimport { VaultFilterService as BaseVaultFilterService } from \"@bitwarden/angular/vault/vault-filter/services/vault-filter.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collection.response\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Injectable()\nexport class VaultFilterService extends BaseVaultFilterService {\n  private _collapsedFilterNodes = new BehaviorSubject<Set<string>>(new Set());\n  collapsedFilterNodes$: Observable<Set<string>> = this._collapsedFilterNodes.asObservable();\n\n  constructor(\n    stateService: StateService,\n    organizationService: OrganizationService,\n    folderService: FolderService,\n    cipherService: CipherService,\n    collectionService: CollectionService,\n    policyService: PolicyService,\n    private i18nService: I18nService,\n    protected apiService: ApiService\n  ) {\n    super(\n      stateService,\n      organizationService,\n      folderService,\n      cipherService,\n      collectionService,\n      policyService\n    );\n  }\n\n  async buildCollapsedFilterNodes(): Promise<Set<string>> {\n    const nodes = await super.buildCollapsedFilterNodes();\n    this._collapsedFilterNodes.next(nodes);\n    return nodes;\n  }\n\n  async storeCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await super.storeCollapsedFilterNodes(collapsedFilterNodes);\n    this._collapsedFilterNodes.next(collapsedFilterNodes);\n  }\n\n  async ensureVaultFiltersAreExpanded() {\n    const collapsedFilterNodes = await super.buildCollapsedFilterNodes();\n    if (!collapsedFilterNodes.has(\"vaults\")) {\n      return;\n    }\n    collapsedFilterNodes.delete(\"vaults\");\n    await this.storeCollapsedFilterNodes(collapsedFilterNodes);\n  }\n\n  async buildAdminCollections(organizationId: string) {\n    let result: CollectionView[] = [];\n    const collectionResponse = await this.apiService.getCollections(organizationId);\n    if (collectionResponse?.data != null && collectionResponse.data.length) {\n      const collectionDomains = collectionResponse.data.map(\n        (r: CollectionDetailsResponse) => new Collection(new CollectionData(r))\n      );\n      result = await this.collectionService.decryptMany(collectionDomains);\n    }\n\n    const noneCollection = new CollectionView();\n    noneCollection.name = this.i18nService.t(\"unassigned\");\n    noneCollection.organizationId = organizationId;\n    result.push(noneCollection);\n\n    const nestedCollections = await this.collectionService.getAllNested(result);\n    return new DynamicTreeNode<CollectionView>({\n      fullList: result,\n      nestedList: nestedCollections,\n    });\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { VaultFilterSharedModule } from \"./shared/vault-filter-shared.module\";\nimport { VaultFilterComponent } from \"./vault-filter.component\";\n\n@NgModule({\n  imports: [VaultFilterSharedModule],\n  declarations: [VaultFilterComponent],\n  exports: [VaultFilterComponent],\n})\nexport class VaultFilterModule {}\n","import {\n  flagEnabled as baseFlagEnabled,\n  devFlagEnabled as baseDevFlagEnabled,\n  devFlagValue as baseDevFlagValue,\n  SharedFlags,\n  SharedDevFlags,\n} from \"@bitwarden/common/misc/flags\";\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable-next-line @typescript-eslint/ban-types */\nexport type Flags = {\n  secretsManager?: boolean;\n  showPasswordless?: boolean;\n} & SharedFlags;\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable-next-line @typescript-eslint/ban-types */\nexport type DevFlags = {} & SharedDevFlags;\n\nexport function flagEnabled(flag: keyof Flags): boolean {\n  return baseFlagEnabled<Flags>(flag);\n}\n\nexport function devFlagEnabled(flag: keyof DevFlags) {\n  return baseDevFlagEnabled<DevFlags>(flag);\n}\n\nexport function devFlagValue(flag: keyof DevFlags) {\n  return baseDevFlagValue(flag);\n}\n","export abstract class AccountService {}\n\nexport abstract class InternalAccountService extends AccountService {\n  abstract delete(): void;\n}\n","import { ServerConfigResponse } from \"../../models/response/server-config.response\";\n\nexport abstract class ConfigApiServiceAbstraction {\n  get: () => Promise<ServerConfigResponse>;\n}\n","export abstract class EventUploadService {\n  uploadEvents: (userId?: string) => Promise<void>;\n}\n","import { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\n\nexport abstract class FileUploadService {\n  uploadSendFile: (\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n  uploadCipherAttachment: (\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n}\n","export abstract class NotificationsService {\n  init: () => Promise<void>;\n  updateConnection: (sync?: boolean) => Promise<void>;\n  reconnectFromActivity: () => Promise<void>;\n  disconnectFromInactivity: () => Promise<void>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { AccountSettingsSettings } from \"../models/domain/account\";\n\nexport abstract class SettingsService {\n  settings$: Observable<AccountSettingsSettings>;\n\n  setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n  clear: (userId?: string) => Promise<void>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { SyncEventArgs } from \"../../types/syncEventArgs\";\n\nexport abstract class SyncNotifierService {\n  sync$: Observable<SyncEventArgs>;\n  next: (event: SyncEventArgs) => void;\n}\n","import { VerifyOTPRequest } from \"../../models/request/account/verify-otp.request\";\n\nexport abstract class UserVerificationApiServiceAbstraction {\n  postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n  postAccountRequestOTP: () => Promise<void>;\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/global-state\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/global-state\";\n\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Five = 5, // Migrate to new storage of encrypted organization keys\n  Six = 6, // Delete account.keys.legacyEtmKey property\n  Latest = Six,\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environment-urls\";\nimport { WindowState } from \"./window-state\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string;\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n  enableDuckDuckGoBrowserIntegration?: boolean;\n}\n","export class UpdateAvatarRequest {\n  avatarColor: string;\n\n  constructor(avatarColor: string) {\n    this.avatarColor = avatarColor;\n  }\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n\n  AuthRequest = 15,\n  AuthRequestResponse = 16,\n}\n","import { NotificationType } from \"../../enums/notificationType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n        break;\n      case NotificationType.AuthRequest:\n      case NotificationType.AuthRequestResponse:\n        this.payload = new AuthRequestPushNotification(payload);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class AuthRequestPushNotification extends BaseResponse {\n  id: string;\n  userId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  HttpTransportType,\n  HubConnection,\n  HubConnectionBuilder,\n  IHubProtocol,\n} from \"@microsoft/signalr\";\nimport { MessagePackHubProtocol } from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { AnonymousHubService as AnonymousHubServiceAbstraction } from \"../abstractions/anonymousHub.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\n\nimport {\n  AuthRequestPushNotification,\n  NotificationResponse,\n} from \"./../models/response/notification.response\";\n\n@Injectable()\nexport class AnonymousHubService implements AnonymousHubServiceAbstraction {\n  private anonHubConnection: HubConnection;\n  private url: string;\n\n  constructor(\n    private environmentService: EnvironmentService,\n    private authService: AuthService,\n    private logService: LogService\n  ) {}\n\n  async createHubConnection(token: string) {\n    this.url = this.environmentService.getNotificationsUrl();\n\n    this.anonHubConnection = new HubConnectionBuilder()\n      .withUrl(this.url + \"/anonymous-hub?Token=\" + token, {\n        skipNegotiation: true,\n        transport: HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new MessagePackHubProtocol() as IHubProtocol)\n      .build();\n\n    this.anonHubConnection.start().catch((error) => this.logService.error(error));\n\n    this.anonHubConnection.on(\"AuthRequestResponseRecieved\", (data: any) => {\n      this.ProcessNotification(new NotificationResponse(data));\n    });\n  }\n\n  stopHubConnection() {\n    if (this.anonHubConnection) {\n      this.anonHubConnection.stop();\n    }\n  }\n\n  private async ProcessNotification(notification: NotificationResponse) {\n    await this.authService.authResponsePushNotifiction(\n      notification.payload as AuthRequestPushNotification\n    );\n  }\n}\n","import { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { DeviceType } from \"../../enums/deviceType\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","import { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\n\nexport abstract class TokenRequest {\n  protected device?: DeviceRequest;\n  protected passwordlessAuthRequest: string;\n\n  constructor(protected twoFactor: TokenTwoFactorRequest, device?: DeviceRequest) {\n    this.device = device != null ? device : null;\n  }\n\n  // eslint-disable-next-line\n  alterIdentityTokenHeaders(headers: Headers) {\n    // Implemented in subclass if required\n  }\n\n  setTwoFactor(twoFactor: TokenTwoFactorRequest) {\n    this.twoFactor = twoFactor;\n  }\n\n  setPasswordlessAccessCode(accessCode: string) {\n    this.passwordlessAuthRequest = accessCode;\n  }\n\n  protected toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    //passswordless login\n    if (this.passwordlessAuthRequest) {\n      obj.authRequest = this.passwordlessAuthRequest;\n    }\n\n    if (this.twoFactor) {\n      if (this.twoFactor.token && this.twoFactor.provider != null) {\n        obj.twoFactorToken = this.twoFactor.token;\n        obj.twoFactorProvider = this.twoFactor.provider;\n        obj.twoFactorRemember = this.twoFactor.remember ? \"1\" : \"0\";\n      }\n    }\n\n    return obj;\n  }\n}\n","import { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\nimport { TokenRequest } from \"./token.request\";\n\nexport class UserApiTokenRequest extends TokenRequest {\n  constructor(\n    public clientId: string,\n    public clientSecret: string,\n    protected twoFactor: TokenTwoFactorRequest,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken() {\n    const obj = super.toIdentityToken(this.clientId);\n\n    obj.scope = this.clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n    obj.grant_type = \"client_credentials\";\n    obj.client_secret = this.clientSecret;\n\n    return obj;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class AuthRequestResponse extends BaseResponse {\n  id: string;\n  publicKey: string;\n  requestDeviceType: DeviceType;\n  requestIpAddress: string;\n  key: string;\n  masterPasswordHash: string;\n  creationDate: string;\n  requestApproved: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n    this.requestDeviceType = this.getResponseProperty(\"RequestDeviceType\");\n    this.requestIpAddress = this.getResponseProperty(\"RequestIpAddress\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.masterPasswordHash = this.getResponseProperty(\"MasterPasswordHash\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.requestApproved = this.getResponseProperty(\"RequestApproved\");\n  }\n}\n","import { BaseResponse } from \"../base.response\";\n\nimport { ICaptchaProtectedResponse } from \"./captcha-protected.response\";\n\nexport class RegisterResponse extends BaseResponse implements ICaptchaProtectedResponse {\n  captchaBypassToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaBypassToken = this.getResponseProperty(\"CaptchaBypassToken\");\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { BillingInvoiceResponse, BillingTransactionResponse } from \"./billing.response\";\n\nexport class BillingHistoryResponse extends BaseResponse {\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { BillingSourceResponse } from \"./billing.response\";\n\nexport class BillingPaymentResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { SelectionReadOnlyResponse } from \"./selection-read-only.response\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class DeviceVerificationResponse extends BaseResponse {\n  isDeviceVerificationSectionEnabled: boolean;\n  unknownDeviceVerificationEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.isDeviceVerificationSectionEnabled = this.getResponseProperty(\n      \"IsDeviceVerificationSectionEnabled\"\n    );\n    this.unknownDeviceVerificationEnabled = this.getResponseProperty(\n      \"UnknownDeviceVerificationEnabled\"\n    );\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { GlobalDomainResponse } from \"./global-domain.response\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\nimport { EventSystemUser } from \"../../enums/event-system-user\";\nimport { EventType } from \"../../enums/eventType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n  installationId: string;\n  systemUser: EventSystemUser;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n    this.installationId = this.getResponseProperty(\"InstallationId\");\n    this.systemUser = this.getResponseProperty(\"SystemUser\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { SelectionReadOnlyResponse } from \"./selection-read-only.response\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        // eslint-disable-next-line\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\nimport { BillingSyncConfigApi } from \"../api/billing-sync-config.api\";\nimport { ScimConfigApi } from \"../api/scim-config.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\n/**API response config types for OrganizationConnectionResponse */\nexport type OrganizationConnectionConfigApis = BillingSyncConfigApi | ScimConfigApi;\n\nexport class OrganizationConnectionResponse<\n  TConfig extends OrganizationConnectionConfigApis\n> extends BaseResponse {\n  id: string;\n  type: OrganizationConnectionType;\n  organizationId: string;\n  enabled: boolean;\n  config: TConfig;\n\n  constructor(response: any, configType: { new (response: any): TConfig }) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const rawConfig = this.getResponseProperty(\"Config\");\n    this.config = rawConfig == null ? null : new configType(rawConfig);\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\nimport { CollectionResponse } from \"./collection.response\";\n\nexport class OrganizationExportResponse extends BaseResponse {\n  collections: CollectionResponse[];\n  ciphers: CipherResponse[];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionResponse(c));\n    }\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class OrganizationSponsorshipSyncStatusResponse extends BaseResponse {\n  lastSyncDate?: Date;\n\n  constructor(response: any) {\n    super(response);\n    const lastSyncDate = this.getResponseProperty(\"LastSyncDate\");\n    if (lastSyncDate) {\n      this.lastSyncDate = new Date(lastSyncDate);\n    }\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useCustomPermissions: boolean;\n  useResetPassword: boolean;\n  useSecretsManager: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useScim = this.getResponseProperty(\"UseScim\") ?? false;\n    this.useCustomPermissions = this.getResponseProperty(\"UseCustomPermissions\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.useSecretsManager = this.getResponseProperty(\"UseSecretsManager\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n    const familySponsorshipLastSyncDateString = this.getResponseProperty(\n      \"FamilySponsorshipLastSyncDate\"\n    );\n    if (familySponsorshipLastSyncDateString) {\n      this.familySponsorshipLastSyncDate = new Date(familySponsorshipLastSyncDateString);\n    }\n    const familySponsorshipValidUntilString = this.getResponseProperty(\n      \"FamilySponsorshipValidUntil\"\n    );\n    if (familySponsorshipValidUntilString) {\n      this.familySponsorshipValidUntil = new Date(familySponsorshipValidUntilString);\n    }\n    this.familySponsorshipToDelete = this.getResponseProperty(\"FamilySponsorshipToDelete\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profile-organization.response\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { ProfileOrganizationResponse } from \"./profile-organization.response\";\nimport { ProfileProviderOrganizationResponse } from \"./profile-provider-organization.response\";\nimport { ProfileProviderResponse } from \"./profile-provider.response\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premiumPersonally: boolean;\n  premiumFromOrganization: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  avatarColor: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premiumPersonally = this.getResponseProperty(\"Premium\");\n    this.premiumFromOrganization = this.getResponseProperty(\"PremiumFromOrganization\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.avatarColor = this.getResponseProperty(\"AvatarColor\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { ProfileResponse } from \"./profile.response\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { BaseResponse } from \"../base.response\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n  userCount: number;\n  seats?: number;\n  plan?: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.userCount = this.getResponseProperty(\"UserCount\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.plan = this.getResponseProperty(\"Plan\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../../../abstractions/organization-user/responses\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../base.response\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\nimport { PermissionsApi } from \"../../api/permissions.api\";\nimport { BaseResponse } from \"../base.response\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"../base.response\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/send-file.api\";\nimport { SendTextApi } from \"../api/send-text.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/send-file.api\";\nimport { SendTextApi } from \"../api/send-text.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { SendResponse } from \"./send.response\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SsoPreValidateResponse extends BaseResponse {\n  token: string;\n\n  constructor(response: any) {\n    super(response);\n    this.token = this.getResponseProperty(\"Token\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\nimport { CollectionDetailsResponse } from \"./collection.response\";\nimport { DomainsResponse } from \"./domains.response\";\nimport { FolderResponse } from \"./folder.response\";\nimport { PolicyResponse } from \"./policy.response\";\nimport { ProfileResponse } from \"./profile.response\";\nimport { SendResponse } from \"./send.response\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\nimport { BreachAccountResponse } from \"../models/response/breach-account.response\";\nimport { ErrorResponse } from \"../models/response/error.response\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","import { ClientType } from \"../../../enums/clientType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { CaptchaProtectedRequest } from \"../captcha-protected.request\";\nimport { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\nimport { TokenRequest } from \"./token.request\";\n\nexport class PasswordTokenRequest extends TokenRequest implements CaptchaProtectedRequest {\n  constructor(\n    public email: string,\n    public masterPasswordHash: string,\n    public captchaResponse: string,\n    protected twoFactor: TokenTwoFactorRequest,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: ClientType) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"password\";\n    obj.username = this.email;\n    obj.password = this.masterPasswordHash;\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class AuthResult {\n  captchaSiteKey = \"\";\n  resetMasterPassword = false;\n  forcePasswordReset = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n\n  get requiresCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  get requiresTwoFactor() {\n    return this.twoFactorProviders != null;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Account, AccountProfile, AccountTokens } from \"../../models/domain/account\";\nimport { AuthResult } from \"../../models/domain/auth-result\";\nimport {\n  UserApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../../models/domain/log-in-credentials\";\nimport { DeviceRequest } from \"../../models/request/device.request\";\nimport { PasswordTokenRequest } from \"../../models/request/identity-token/password-token.request\";\nimport { SsoTokenRequest } from \"../../models/request/identity-token/sso-token.request\";\nimport { TokenTwoFactorRequest } from \"../../models/request/identity-token/token-two-factor.request\";\nimport { UserApiTokenRequest } from \"../../models/request/identity-token/user-api-token.request\";\nimport { KeysRequest } from \"../../models/request/keys.request\";\nimport { IdentityCaptchaResponse } from \"../../models/response/identity-captcha.response\";\nimport { IdentityTokenResponse } from \"../../models/response/identity-token.response\";\nimport { IdentityTwoFactorResponse } from \"../../models/response/identity-two-factor.response\";\n\nexport abstract class LogInStrategy {\n  protected abstract tokenRequest: UserApiTokenRequest | PasswordTokenRequest | SsoTokenRequest;\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService\n  ) {}\n\n  abstract logIn(\n    credentials:\n      | UserApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ): Promise<AuthResult>;\n\n  // The user key comes from different sources depending on the login strategy\n  protected abstract setUserKey(response: IdentityTokenResponse): Promise<void>;\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string = null\n  ): Promise<AuthResult> {\n    this.tokenRequest.setTwoFactor(twoFactor);\n    return this.startLogIn();\n  }\n\n  protected async startLogIn(): Promise<AuthResult> {\n    this.twoFactorService.clearSelectedProvider();\n\n    const response = await this.apiService.postIdentityToken(this.tokenRequest);\n\n    if (response instanceof IdentityTwoFactorResponse) {\n      return this.processTwoFactorResponse(response);\n    } else if (response instanceof IdentityCaptchaResponse) {\n      return this.processCaptchaResponse(response);\n    } else if (response instanceof IdentityTokenResponse) {\n      return this.processTokenResponse(response);\n    }\n\n    throw new Error(\"Invalid response object.\");\n  }\n\n  protected async buildDeviceRequest() {\n    const appId = await this.appIdService.getAppId();\n    return new DeviceRequest(appId, this.platformUtilsService);\n  }\n\n  protected async buildTwoFactor(userProvidedTwoFactor?: TokenTwoFactorRequest) {\n    if (userProvidedTwoFactor != null) {\n      return userProvidedTwoFactor;\n    }\n\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken();\n    if (storedTwoFactorToken != null) {\n      return new TokenTwoFactorRequest(TwoFactorProviderType.Remember, storedTwoFactorToken, false);\n    }\n\n    return new TokenTwoFactorRequest();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            name: accountInformation.name,\n            email: accountInformation.email,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n  }\n\n  protected async processTokenResponse(response: IdentityTokenResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.resetMasterPassword = response.resetMasterPassword;\n    result.forcePasswordReset = response.forcePasswordReset;\n\n    await this.saveAccountInformation(response);\n\n    if (response.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(response);\n    }\n\n    await this.setUserKey(response);\n\n    // Must come after the user Key is set, otherwise createKeyPairForOldAccount will fail\n    const newSsoUser = response.key == null;\n    if (!newSsoUser) {\n      await this.cryptoService.setEncKey(response.key);\n      await this.cryptoService.setEncPrivateKey(\n        response.privateKey ?? (await this.createKeyPairForOldAccount())\n      );\n    }\n\n    this.messagingService.send(\"loggedIn\");\n\n    return result;\n  }\n\n  private async processTwoFactorResponse(response: IdentityTwoFactorResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.twoFactorProviders = response.twoFactorProviders2;\n    this.twoFactorService.setProviders(response);\n    this.captchaBypassToken = response.captchaToken ?? null;\n    return result;\n  }\n\n  private async processCaptchaResponse(response: IdentityCaptchaResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.captchaSiteKey = response.siteKey;\n    return result;\n  }\n\n  private async createKeyPairForOldAccount() {\n    try {\n      const [publicKey, privateKey] = await this.cryptoService.makeKeyPair();\n      await this.apiService.postAccountKeys(new KeysRequest(publicKey, privateKey.encryptedString));\n      return privateKey.encryptedString;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { HashPurpose } from \"../../enums/hashPurpose\";\nimport { AuthResult } from \"../../models/domain/auth-result\";\nimport { PasswordLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { PasswordTokenRequest } from \"../../models/request/identity-token/password-token.request\";\nimport { TokenTwoFactorRequest } from \"../../models/request/identity-token/token-two-factor.request\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async setUserKey() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordLogInCredentials) {\n    const { email, masterPassword, captchaToken, twoFactor } = credentials;\n\n    this.key = await this.authService.makePreloginKey(masterPassword, email);\n\n    // Hash the password early (before authentication) so we don't persist it in memory in plaintext\n    this.localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      this.key,\n      HashPurpose.LocalAuthorization\n    );\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, this.key);\n\n    this.tokenRequest = new PasswordTokenRequest(\n      email,\n      hashedPassword,\n      captchaToken,\n      await this.buildTwoFactor(twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { AuthResult } from \"../../models/domain/auth-result\";\nimport { PasswordlessLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { PasswordTokenRequest } from \"../../models/request/identity-token/password-token.request\";\nimport { TokenTwoFactorRequest } from \"../../models/request/identity-token/token-two-factor.request\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordlessLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get accessCode() {\n    return this.passwordlessCredentials.accessCode;\n  }\n\n  get authRequestId() {\n    return this.passwordlessCredentials.authRequestId;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n  private passwordlessCredentials: PasswordlessLogInCredentials;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async setUserKey() {\n    await this.cryptoService.setKey(this.passwordlessCredentials.decKey);\n    await this.cryptoService.setKeyHash(this.passwordlessCredentials.localPasswordHash);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordlessLogInCredentials) {\n    this.passwordlessCredentials = credentials;\n\n    this.tokenRequest = new PasswordTokenRequest(\n      credentials.email,\n      credentials.accessCode,\n      null,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    this.tokenRequest.setPasswordlessAccessCode(credentials.authRequestId);\n    return this.startLogIn();\n  }\n}\n","import { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\nimport { TokenRequest } from \"./token.request\";\n\nexport class SsoTokenRequest extends TokenRequest {\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUri: string,\n    protected twoFactor: TokenTwoFactorRequest,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"authorization_code\";\n    obj.code = this.code;\n    obj.code_verifier = this.codeVerifier;\n    obj.redirect_uri = this.redirectUri;\n\n    return obj;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { SsoLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { SsoTokenRequest } from \"../../models/request/identity-token/sso-token.request\";\nimport { IdentityTokenResponse } from \"../../models/response/identity-token.response\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class SsoLogInStrategy extends LogInStrategy {\n  tokenRequest: SsoTokenRequest;\n  orgId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async setUserKey(tokenResponse: IdentityTokenResponse) {\n    const newSsoUser = tokenResponse.key == null;\n\n    if (tokenResponse.keyConnectorUrl != null) {\n      if (!newSsoUser) {\n        await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n      } else {\n        await this.keyConnectorService.convertNewSsoUserToKeyConnector(tokenResponse, this.orgId);\n      }\n    }\n  }\n\n  async logIn(credentials: SsoLogInCredentials) {\n    this.orgId = credentials.orgId;\n    this.tokenRequest = new SsoTokenRequest(\n      credentials.code,\n      credentials.codeVerifier,\n      credentials.redirectUrl,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { UserApiLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { UserApiTokenRequest } from \"../../models/request/identity-token/user-api-token.request\";\nimport { IdentityTokenResponse } from \"../../models/response/identity-token.response\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class UserApiLogInStrategy extends LogInStrategy {\n  tokenRequest: UserApiTokenRequest;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private environmentService: EnvironmentService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async setUserKey(tokenResponse: IdentityTokenResponse) {\n    if (tokenResponse.apiUseKeyConnector) {\n      const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n      await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n    }\n  }\n\n  async logIn(credentials: UserApiLogInCredentials) {\n    this.tokenRequest = new UserApiTokenRequest(\n      credentials.clientId,\n      credentials.clientSecret,\n      await this.buildTwoFactor(),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    await super.saveAccountInformation(tokenResponse);\n    await this.stateService.setApiKeyClientId(this.tokenRequest.clientId);\n    await this.stateService.setApiKeyClientSecret(this.tokenRequest.clientSecret);\n  }\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { CipherView } from \"../view/cipher.view\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherWithIdRequest } from \"./cipher-with-id.request\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nexport class CipherPartialRequest {\n  folderId: string;\n  favorite: boolean;\n\n  constructor(cipher: Cipher) {\n    this.folderId = cipher.folderId;\n    this.favorite = cipher.favorite;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipher.request\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { AccountSettingsSettings } from \"../models/domain/account\";\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domain-base\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/login-uri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secure-note\";\nimport { SortedCiphersCache } from \"../models/domain/sorted-ciphers-cache\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { AttachmentRequest } from \"../models/request/attachment.request\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipher-bulk-delete.request\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipher-bulk-move.request\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipher-bulk-restore.request\";\nimport { CipherBulkShareRequest } from \"../models/request/cipher-bulk-share.request\";\nimport { CipherCollectionsRequest } from \"../models/request/cipher-collections.request\";\nimport { CipherCreateRequest } from \"../models/request/cipher-create.request\";\nimport { CipherPartialRequest } from \"../models/request/cipher-partial.request\";\nimport { CipherShareRequest } from \"../models/request/cipher-share.request\";\nimport { CipherRequest } from \"../models/request/cipher.request\";\nimport { CipherResponse } from \"../models/response/cipher.response\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { AttachmentView } from \"../models/view/attachment.view\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { FieldView } from \"../models/view/field.view\";\nimport { PasswordHistoryView } from \"../models/view/password-history.view\";\nimport { View } from \"../models/view/view\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService,\n    private encryptService: EncryptService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n    cipher.edit = model.edit;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    if ((await this.getDecryptedCipherCache()) != null) {\n      await this.reindexCiphers();\n      return await this.getDecryptedCipherCache();\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const ciphers = await this.getAll();\n    const orgKeys = await this.cryptoService.getOrgKeys();\n    const userKey = await this.cryptoService.getKeyForUserEncryption();\n\n    // Group ciphers by orgId or under 'null' for the user's ciphers\n    const grouped = ciphers.reduce((agg, c) => {\n      agg[c.organizationId] ??= [];\n      agg[c.organizationId].push(c);\n      return agg;\n    }, {} as Record<string, Cipher[]>);\n\n    const decCiphers = (\n      await Promise.all(\n        Object.entries(grouped).map(([orgId, groupedCiphers]) =>\n          this.encryptService.decryptItems(groupedCiphers, orgKeys.get(orgId) ?? userKey)\n        )\n      )\n    )\n      .flat()\n      .sort(this.getLocaleSortingFunction());\n\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  private async reindexCiphers() {\n    const userId = await this.stateService.getUserId();\n    const reindexRequired =\n      this.searchService != null && (this.searchService().indexedEntityId ?? userId) !== userId;\n    if (reindexRequired) {\n      await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n    }\n  }\n\n  async getAllDecryptedForGrouping(groupingId: string, folder = true): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : firstValueFrom(this.settingsService.settings$).then(\n            (settings: AccountSettingsSettings) => {\n              let matches: any[] = [];\n              settings?.equivalentDomains?.forEach((eqDomain: any) => {\n                if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                  matches = matches.concat(eqDomain);\n                }\n              });\n\n              if (!matches.length) {\n                matches.push(domain);\n              }\n\n              return matches;\n            }\n          );\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host: {\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            }\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const response = await this.apiService.getCiphersOrganization(organizationId);\n    if (response?.data == null || response.data.length < 1) {\n      return [];\n    }\n\n    const ciphers = response.data.map((cr) => new Cipher(new CipherData(cr)));\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const decCiphers = await this.encryptService.decryptItems(ciphers, key);\n\n    decCiphers.sort(this.getLocaleSortingFunction());\n    return decCiphers;\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async createWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.collectionIds != null) {\n      const request = new CipherCreateRequest(cipher);\n      response = await this.apiService.postCipherCreate(request);\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.postCipher(request);\n    }\n    cipher.id = response.id;\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async updateWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.edit) {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    } else {\n      const request = new CipherPartialRequest(cipher);\n      response = await this.apiService.putPartialCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    try {\n      await this.apiService.putShareCiphers(request);\n    } catch (e) {\n      for (const cipher of ciphers) {\n        cipher.organizationId = null;\n        cipher.collectionIds = null;\n      }\n      throw e;\n    }\n    await this.upsert(encCiphers.map((c) => c.toCipherData()));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(response, cipher.collectionIds);\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData();\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === Array.name) {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const encBuf = await EncArrayBuffer.fromResponse(attachmentResponse);\n    const decBuf = await this.cryptoService.decryptFromBytes(encBuf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class ServerConfigResponse extends BaseResponse {\n  version: string;\n  gitHash: string;\n  server: ThirdPartyServerConfigResponse;\n  environment: EnvironmentServerConfigResponse;\n\n  constructor(response: any) {\n    super(response);\n\n    if (response == null) {\n      return;\n    }\n\n    this.version = this.getResponseProperty(\"Version\");\n    this.gitHash = this.getResponseProperty(\"GitHash\");\n    this.server = new ThirdPartyServerConfigResponse(this.getResponseProperty(\"Server\"));\n    this.environment = new EnvironmentServerConfigResponse(this.getResponseProperty(\"Environment\"));\n  }\n}\n\nexport class EnvironmentServerConfigResponse extends BaseResponse {\n  vault: string;\n  api: string;\n  identity: string;\n  notifications: string;\n  sso: string;\n\n  constructor(data: any = null) {\n    super(data);\n\n    if (data == null) {\n      return;\n    }\n\n    this.vault = this.getResponseProperty(\"Vault\");\n    this.api = this.getResponseProperty(\"Api\");\n    this.identity = this.getResponseProperty(\"Identity\");\n    this.notifications = this.getResponseProperty(\"Notifications\");\n    this.sso = this.getResponseProperty(\"Sso\");\n  }\n}\n\nexport class ThirdPartyServerConfigResponse extends BaseResponse {\n  name: string;\n  url: string;\n\n  constructor(data: any = null) {\n    super(data);\n\n    if (data == null) {\n      return;\n    }\n\n    this.name = this.getResponseProperty(\"Name\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import {\n  ServerConfigData,\n  ThirdPartyServerConfigData,\n  EnvironmentServerConfigData,\n} from \"../../models/data/server-config.data\";\n\nconst dayInMilliseconds = 24 * 3600 * 1000;\nconst eighteenHoursInMilliseconds = 18 * 3600 * 1000;\n\nexport class ServerConfig {\n  version: string;\n  gitHash: string;\n  server?: ThirdPartyServerConfigData;\n  environment?: EnvironmentServerConfigData;\n  utcDate: Date;\n\n  constructor(serverConfigData: ServerConfigData) {\n    this.version = serverConfigData.version;\n    this.gitHash = serverConfigData.gitHash;\n    this.server = serverConfigData.server;\n    this.utcDate = new Date(serverConfigData.utcDate);\n    this.environment = serverConfigData.environment;\n\n    if (this.server?.name == null && this.server?.url == null) {\n      this.server = null;\n    }\n  }\n\n  private getAgeInMilliseconds(): number {\n    return new Date().getTime() - this.utcDate?.getTime();\n  }\n\n  isValid(): boolean {\n    return this.getAgeInMilliseconds() <= dayInMilliseconds;\n  }\n\n  expiresSoon(): boolean {\n    return this.getAgeInMilliseconds() >= eighteenHoursInMilliseconds;\n  }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EFFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptedOrganizationKeyData } from \"../data/encrypted-organization-key.data\";\n\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport abstract class BaseEncryptedOrganizationKey {\n  decrypt: (cryptoService: CryptoService) => Promise<SymmetricCryptoKey>;\n\n  static fromData(data: EncryptedOrganizationKeyData) {\n    switch (data.type) {\n      case \"organization\":\n        return new EncryptedOrganizationKey(data.key);\n\n      case \"provider\":\n        return new ProviderEncryptedOrganizationKey(data.key, data.providerId);\n\n      default:\n        return null;\n    }\n  }\n}\n\nexport class EncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const decValue = await cryptoService.rsaDecrypt(this.key);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"organization\",\n      key: this.key,\n    };\n  }\n}\n\nexport class ProviderEncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string, private providerId: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const providerKey = await cryptoService.getProviderKey(this.providerId);\n    const decValue = await cryptoService.decryptToBytes(new EncString(this.key), providerKey);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"provider\",\n      key: this.key,\n      providerId: this.providerId,\n    };\n  }\n}\n","import * as bigInt from \"big-integer\";\n\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EFFLongWordList } from \"../misc/wordlist\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encrypted-organization-key.data\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { BaseEncryptedOrganizationKey } from \"../models/domain/encrypted-organization-key\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { ProfileOrganizationResponse } from \"../models/response/profile-organization.response\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profile-provider-organization.response\";\nimport { ProfileProviderResponse } from \"../models/response/profile-provider.response\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private encryptService: EncryptService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[] = [],\n    providerOrgs: ProfileProviderOrganizationResponse[] = []\n  ): Promise<void> {\n    const encOrgKeyData: { [orgId: string]: EncryptedOrganizationKeyData } = {};\n\n    orgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"organization\",\n        key: org.key,\n      };\n    });\n\n    providerOrgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"provider\",\n        providerId: org.providerId,\n        key: org.key,\n      };\n    });\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(encOrgKeyData);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    return this.getEncKeyHelper(key);\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const result: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeyData = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeyData == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId of Object.keys(encOrgKeyData)) {\n      if (result.has(orgId)) {\n        continue;\n      }\n\n      const encOrgKey = BaseEncryptedOrganizationKey.fromData(encOrgKeyData[orgId]);\n      const decOrgKey = await encOrgKey.decrypt(this);\n      result.set(orgId, decOrgKey);\n\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(result);\n    }\n\n    return result;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      // eslint-disable-next-line\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForUserEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encrypt\n   */\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.encrypt(plainValue, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encryptToBytes\n   */\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    key = await this.getKeyForUserEncryption(key);\n    return this.encryptService.encryptToBytes(plainValue, key);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64: // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForUserEncryption(key);\n    return this.encryptService.decryptToBytes(encString, keyForEnc);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToUtf8\n   */\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.decryptToUtf8(encString, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptFromBytes(encBuffer: EncArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuffer == null) {\n      throw new Error(\"No buffer provided for decryption.\");\n    }\n\n    key = await this.getKeyForUserEncryption(key);\n\n    return this.encryptService.decryptToBytes(encBuffer, key);\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKeyHelper(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // ---HELPERS---\n\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  async getKeyForUserEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    // Legacy support: encryption used to be done with the user key (derived from master password).\n    // Users who have not migrated will have a null encKey and must use the user key instead.\n    return await this.getKey();\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy = 64) {\n    const entropyPerWord = Math.log(EFFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EFFLongWordList.length);\n      hashNumber = hashNumber.divide(EFFLongWordList.length);\n      phrase.push(EFFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n\n  private async getEncKeyHelper(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n}\n","import { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","import { CryptoFunctionService } from \"../../abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"../../abstractions/encrypt.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Utils } from \"../../misc/utils\";\nimport { EncArrayBuffer } from \"../../models/domain/enc-array-buffer\";\nimport { EncString } from \"../../models/domain/enc-string\";\nimport { EncryptedObject } from \"../../models/domain/encrypted-object\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\n\nexport class EncryptServiceImplementation implements EncryptService {\n  constructor(\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected logMacFailures: boolean\n  ) {}\n\n  async encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async decryptToUtf8(encString: EncString, key: SymmetricCryptoKey): Promise<string> {\n    if (key == null) {\n      throw new Error(\"No key provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encString);\n\n    if (key.macKey != null && encString?.mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (key.encType !== encString.encryptionType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  async decryptToBytes(encThing: IEncrypted, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (encThing == null) {\n      throw new Error(\"Nothing provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encThing);\n\n    if (key.macKey != null && encThing.macBytes == null) {\n      return null;\n    }\n\n    if (key.encType !== encThing.encryptionType) {\n      return null;\n    }\n\n    if (key.macKey != null && encThing.macBytes != null) {\n      const macData = new Uint8Array(encThing.ivBytes.byteLength + encThing.dataBytes.byteLength);\n      macData.set(new Uint8Array(encThing.ivBytes), 0);\n      macData.set(new Uint8Array(encThing.dataBytes), encThing.ivBytes.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        key.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(encThing.macBytes, computedMac);\n      if (!macsMatch) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    const result = await this.cryptoFunctionService.aesDecrypt(\n      encThing.dataBytes,\n      encThing.ivBytes,\n      key.encKey\n    );\n\n    return result ?? null;\n  }\n\n  async decryptItems<T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ): Promise<T[]> {\n    if (items == null || items.length < 1) {\n      return [];\n    }\n\n    return await Promise.all(items.map((item) => item.decrypt(key)));\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = key;\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private logMacFailed(msg: string) {\n    if (this.logMacFailures) {\n      this.logService.error(msg);\n    }\n  }\n\n  /**\n   * Transform into new key for the old encrypt-then-mac scheme if required, otherwise return the current key unchanged\n   * @param encThing The encrypted object (e.g. encString or encArrayBuffer) that you want to decrypt\n   */\n  resolveLegacyKey(key: SymmetricCryptoKey, encThing: IEncrypted): SymmetricCryptoKey {\n    if (\n      encThing.encryptionType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      return new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n    }\n\n    return key;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Cipher } from \"../../models/domain/cipher\";\nimport { CipherView } from \"../../models/view/cipher.view\";\n\nimport { InitializerKey } from \"./initializer-key\";\n\n/**\n * Internal reference of classes so we can reconstruct objects properly.\n * Each entry should be keyed using the Decryptable.initializerKey property\n */\nconst classInitializers: Record<InitializerKey, (obj: any) => any> = {\n  [InitializerKey.Cipher]: Cipher.fromJSON,\n  [InitializerKey.CipherView]: CipherView.fromJSON,\n};\n\nexport function getClassInitializer<T extends InitializerMetadata>(\n  className: InitializerKey\n): (obj: Jsonify<T>) => T {\n  return classInitializers[className];\n}\n","import { defaultIfEmpty, filter, firstValueFrom, fromEvent, map, Subject, takeUntil } from \"rxjs\";\nimport { Jsonify } from \"type-fest\";\n\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Utils } from \"../../misc/utils\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\n\nimport { EncryptServiceImplementation } from \"./encrypt.service.implementation\";\nimport { getClassInitializer } from \"./get-class-initializer\";\n\n// TTL (time to live) is not strictly required but avoids tying up memory resources if inactive\nconst workerTTL = 3 * 60000; // 3 minutes\n\nexport class MultithreadEncryptServiceImplementation extends EncryptServiceImplementation {\n  private worker: Worker;\n  private timeout: any;\n\n  private clear$ = new Subject<void>();\n\n  /**\n   * Sends items to a web worker to decrypt them.\n   * This utilises multithreading to decrypt items faster without interrupting other operations (e.g. updating UI).\n   */\n  async decryptItems<T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ): Promise<T[]> {\n    if (items == null || items.length < 1) {\n      return [];\n    }\n\n    this.logService.info(\"Starting decryption using multithreading\");\n\n    this.worker ??= new Worker(\n      new URL(\n        /* webpackChunkName: 'encrypt-worker' */\n        \"@bitwarden/common/services/cryptography/encrypt.worker.ts\",\n        import.meta.url\n      )\n    );\n\n    this.restartTimeout();\n\n    const request = {\n      id: Utils.newGuid(),\n      items: items,\n      key: key,\n    };\n\n    this.worker.postMessage(JSON.stringify(request));\n\n    return await firstValueFrom(\n      fromEvent(this.worker, \"message\").pipe(\n        filter((response: MessageEvent) => response.data?.id === request.id),\n        map((response) => JSON.parse(response.data.items)),\n        map((items) =>\n          items.map((jsonItem: Jsonify<T>) => {\n            const initializer = getClassInitializer<T>(jsonItem.initializerKey);\n            return initializer(jsonItem);\n          })\n        ),\n        takeUntil(this.clear$),\n        defaultIfEmpty([])\n      )\n    );\n  }\n\n  private clear() {\n    this.clear$.next();\n    this.worker?.terminate();\n    this.worker = null;\n    this.clearTimeout();\n  }\n\n  private restartTimeout() {\n    this.clearTimeout();\n    this.timeout = setTimeout(() => this.clear(), workerTTL);\n  }\n\n  private clearTimeout() {\n    if (this.timeout != null) {\n      clearTimeout(this.timeout);\n    }\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/event.view\";\n\nexport class EventExport {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n  installationId: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n    this.installationId = event.installationId;\n  }\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","import { LogService } from \"../abstractions/log.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    // eslint-disable-next-line\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\n\nexport class BitwardenFileUploadService {\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../keys.request\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","import { LoginService as LoginServiceAbstraction } from \"../abstractions/login.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nexport class LoginService implements LoginServiceAbstraction {\n  private _email: string;\n  private _rememberEmail: boolean;\n\n  constructor(private stateService: StateService) {}\n\n  getEmail() {\n    return this._email;\n  }\n\n  getRememberEmail() {\n    return this._rememberEmail;\n  }\n\n  setEmail(value: string) {\n    this._email = value;\n  }\n\n  setRememberEmail(value: boolean) {\n    this._rememberEmail = value;\n  }\n\n  clearValues() {\n    this._email = null;\n    this._rememberEmail = null;\n  }\n\n  async saveEmailSettings() {\n    await this.stateService.setRememberedEmail(this._rememberEmail ? this._email : null);\n    this.clearValues();\n  }\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../../../models/api/permissions.api\";\nimport { BaseResponse } from \"../../../models/response/base.response\";\nimport { SelectionReadOnlyResponse } from \"../../../models/response/selection-read-only.response\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","export class OrganizationUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export enum SsoType {\n  None = 0,\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nexport enum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nexport enum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n}\n\nexport enum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nexport enum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class OrganizationApiKeyInformationResponse extends BaseResponse {\n  keyType: OrganizationApiKeyType;\n\n  constructor(response: any) {\n    super(response);\n    this.keyType = this.getResponseProperty(\"KeyType\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { KeysResponse } from \"./keys.response\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { PlanResponse } from \"./plan.response\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { OrganizationResponse } from \"./organization.response\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscription.response\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { BaseResponse } from \"../response/base.response\";\nimport { SsoConfigView } from \"../view/sso-config.view\";\n\nexport class SsoConfigApi extends BaseResponse {\n  static fromView(view: SsoConfigView, api = new SsoConfigApi()) {\n    api.configType = view.configType;\n\n    api.keyConnectorEnabled = view.keyConnectorEnabled;\n    api.keyConnectorUrl = view.keyConnectorUrl;\n\n    if (api.configType === SsoType.OpenIdConnect) {\n      api.authority = view.openId.authority;\n      api.clientId = view.openId.clientId;\n      api.clientSecret = view.openId.clientSecret;\n      api.metadataAddress = view.openId.metadataAddress;\n      api.redirectBehavior = view.openId.redirectBehavior;\n      api.getClaimsFromUserInfoEndpoint = view.openId.getClaimsFromUserInfoEndpoint;\n      api.additionalScopes = view.openId.additionalScopes;\n      api.additionalUserIdClaimTypes = view.openId.additionalUserIdClaimTypes;\n      api.additionalEmailClaimTypes = view.openId.additionalEmailClaimTypes;\n      api.additionalNameClaimTypes = view.openId.additionalNameClaimTypes;\n      api.acrValues = view.openId.acrValues;\n      api.expectedReturnAcrValue = view.openId.expectedReturnAcrValue;\n    } else if (api.configType === SsoType.Saml2) {\n      api.spNameIdFormat = view.saml.spNameIdFormat;\n      api.spOutboundSigningAlgorithm = view.saml.spOutboundSigningAlgorithm;\n      api.spSigningBehavior = view.saml.spSigningBehavior;\n      api.spMinIncomingSigningAlgorithm = view.saml.spMinIncomingSigningAlgorithm;\n      api.spWantAssertionsSigned = view.saml.spWantAssertionsSigned;\n      api.spValidateCertificates = view.saml.spValidateCertificates;\n\n      api.idpEntityId = view.saml.idpEntityId;\n      api.idpBindingType = view.saml.idpBindingType;\n      api.idpSingleSignOnServiceUrl = view.saml.idpSingleSignOnServiceUrl;\n      api.idpSingleLogoutServiceUrl = view.saml.idpSingleLogoutServiceUrl;\n      api.idpX509PublicCert = view.saml.idpX509PublicCert;\n      api.idpOutboundSigningAlgorithm = view.saml.idpOutboundSigningAlgorithm;\n      api.idpAllowUnsolicitedAuthnResponse = view.saml.idpAllowUnsolicitedAuthnResponse;\n      api.idpWantAuthnRequestsSigned = view.saml.idpWantAuthnRequestsSigned;\n\n      // Value is inverted in the api model (disable instead of allow)\n      api.idpDisableOutboundLogoutRequests = !view.saml.idpAllowOutboundLogoutRequests;\n    }\n\n    return api;\n  }\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: string;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { SsoConfigApi } from \"../../api/sso-config.api\";\nimport { BaseResponse } from \"../base.response\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  identifier: string;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.data =\n      this.getResponseProperty(\"Data\") != null\n        ? new SsoConfigApi(this.getResponseProperty(\"Data\"))\n        : null;\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import Domain from \"./domain-base\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType = \"\";\n  minLength = 0;\n  useUppercase = false;\n  useLowercase = false;\n  useNumbers = false;\n  numberCount = 0;\n  useSpecial = false;\n  specialCount = 0;\n  minNumberWords = 0;\n  capitalize = false;\n  includeNumber = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { EFFLongWordList } from \"../misc/wordlist\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { PasswordGeneratorOptions } from \"../models/domain/password-generator-options\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/password-generator-policy-options\";\n\nconst DefaultOptions: PasswordGeneratorOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: PasswordGeneratorOptions): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: PasswordGeneratorOptions): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EFFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EFFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EFFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: PasswordGeneratorOptions\n  ): Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies = await this.policyService?.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: PasswordGeneratorOptions) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<void> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    await this.stateService.setDecryptedPasswordGenerationHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(\n    options: PasswordGeneratorOptions,\n    enforcedPolicyOptions: PasswordGeneratorPolicyOptions\n  ) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import Domain from \"./domain-base\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled = false;\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1, // Not used, compile-time support only\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/provider.data\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  private static registeredPipeline = false;\n\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private readonly immediateSearchLocales: string[] = [\"zh-CN\", \"zh-TW\", \"ja\", \"ko\", \"vi\"];\n  private readonly defaultSearchableMinLength: number = 2;\n  private searchableMinLength: number = this.defaultSearchableMinLength;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    this.i18nService.locale$.subscribe((locale) => {\n      if (this.immediateSearchLocales.indexOf(locale) !== -1) {\n        this.searchableMinLength = 1;\n      } else {\n        this.searchableMinLength = this.defaultSearchableMinLength;\n      }\n    });\n\n    // Currently have to ensure this is only done a single time. Lunr allows you to register a function\n    // multiple times but they will add a warning message to the console. The way they do that breaks when ran on a service worker.\n    if (!SearchService.registeredPipeline) {\n      SearchService.registeredPipeline = true;\n      //register lunr pipeline function\n      lunr.Pipeline.registerFunction(this.normalizeAccentsPipelineFunction, \"normalizeAccents\");\n    }\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    query = SearchService.normalizeSearchQuery(query);\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.pipeline.add(this.normalizeAccentsPipelineFunction);\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", {\n      boost: 10,\n    });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.info(\"Finished search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted = false) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        c.login &&\n        c.login.hasUris &&\n        c.login.uris.some((loginUri) => loginUri?.uri?.toLowerCase().indexOf(query) > -1)\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLocaleLowerCase());\n    if (query === null) {\n      return sends;\n    }\n    const sendsMatched: SendView[] = [];\n    const lowPriorityMatched: SendView[] = [];\n    sends.forEach((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        sendsMatched.push(s);\n      } else if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        lowPriorityMatched.push(s);\n      } else if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      }\n    });\n    return sendsMatched.concat(lowPriorityMatched);\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n\n  private normalizeAccentsPipelineFunction(token: lunr.Token): any {\n    const searchableFields = [\"name\", \"login.username\", \"subtitle\", \"notes\"];\n    const fields = (token as any).metadata[\"fields\"];\n    const checkFields = fields.every((i: any) => searchableFields.includes(i));\n\n    if (checkFields) {\n      return SearchService.normalizeSearchQuery(token.toString());\n    }\n\n    return token;\n  }\n\n  // Remove accents/diacritics characters from text. This regex is equivalent to the Diacritic unicode property escape, i.e. it will match all diacritic characters.\n  static normalizeSearchQuery(query: string): string {\n    return query?.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SendData } from \"../data/send.data\";\nimport { SendView } from \"../view/send.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SendFile } from \"./send-file\";\nimport { SendText } from \"./send-text\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      [\"id\", \"accessId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    const cryptoService = Utils.getContainerService().getCryptoService();\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\nimport { Utils } from \"../misc/utils\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async setTwoFactorToken(tokenResponse: IdentityTokenResponse): Promise<any> {\n    return await this.stateService.setTwoFactorToken(tokenResponse.twoFactorToken);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { EventData } from \"../models/data/event.data\";\nimport { FolderData } from \"../models/data/folder.data\";\nimport { OrganizationData } from \"../models/data/organization.data\";\nimport { PolicyData } from \"../models/data/policy.data\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { SendData } from \"../models/data/send.data\";\nimport {\n  Account,\n  AccountSettings,\n  AccountSettingsSettings,\n  EncryptionPair,\n} from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { GlobalState } from \"../models/domain/global-state\";\nimport { StorageOptions } from \"../models/domain/storage-options\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n        case StateVersion.Four: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom4To5(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Five);\n          break;\n        }\n        case StateVersion.Five: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom5To6(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Six);\n          break;\n        }\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: Object.assign(new EncryptionPair<string, EncString>(), {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      }),\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings:\n        userId == null\n          ? null\n          : await this.get<AccountSettingsSettings>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateAccountFrom4To5(account: TAccount): Promise<TAccount> {\n    const encryptedOrgKeys = account.keys?.organizationKeys?.encrypted;\n    if (encryptedOrgKeys != null) {\n      for (const [orgId, encKey] of Object.entries(encryptedOrgKeys)) {\n        encryptedOrgKeys[orgId] = {\n          type: \"organization\",\n          key: encKey as unknown as string, // Account v4 does not reflect the current account model so we have to cast\n        };\n      }\n    }\n\n    return account;\n  }\n\n  protected async migrateAccountFrom5To6(account: TAccount): Promise<TAccount> {\n    delete (account as any).keys?.legacyEtmKey;\n    return account;\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n\n  protected async setCurrentStateVersion(newVersion: StateVersion): Promise<void> {\n    const globals = await this.getGlobals();\n    globals.stateVersion = newVersion;\n    await this.set(keys.global, globals);\n  }\n\n  protected async getAuthenticatedAccounts(): Promise<TAccount[]> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    return Promise.all(authenticatedUserIds.map((id) => this.get<TAccount>(id)));\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\nimport { ProfileOrganizationResponse } from \"../response/profile-organization.response\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useCustomPermissions: boolean;\n  useResetPassword: boolean;\n  useSecretsManager: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useScim = response.useScim;\n    this.useCustomPermissions = response.useCustomPermissions;\n    this.useResetPassword = response.useResetPassword;\n    this.useSecretsManager = response.useSecretsManager;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = response.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = response.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = response.familySponsorshipToDelete;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CollectionService } from \"../../abstractions/collection.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { FolderApiServiceAbstraction } from \"../../abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { InternalOrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { InternalPolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { ProviderService } from \"../../abstractions/provider.service\";\nimport { SendService } from \"../../abstractions/send.service\";\nimport { SettingsService } from \"../../abstractions/settings.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../../abstractions/sync/sync.service.abstraction\";\nimport { sequentialize } from \"../../misc/sequentialize\";\nimport { CipherData } from \"../../models/data/cipher.data\";\nimport { CollectionData } from \"../../models/data/collection.data\";\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { OrganizationData } from \"../../models/data/organization.data\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { ProviderData } from \"../../models/data/provider.data\";\nimport { SendData } from \"../../models/data/send.data\";\nimport { CipherResponse } from \"../../models/response/cipher.response\";\nimport { CollectionDetailsResponse } from \"../../models/response/collection.response\";\nimport { DomainsResponse } from \"../../models/response/domains.response\";\nimport { FolderResponse } from \"../../models/response/folder.response\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../../models/response/notification.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\nimport { ProfileResponse } from \"../../models/response/profile.response\";\nimport { SendResponse } from \"../../models/response/send.response\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress = false;\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: InternalFolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: InternalPolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private providerService: ProviderService,\n    private folderApiService: FolderApiServiceAbstraction,\n    private organizationService: InternalOrganizationService,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  @sequentialize(() => \"fullSync\")\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(response.ciphers);\n      await this.syncSends(response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.folderApiService.get(notification.id);\n          if (remoteFolder != null) {\n            await this.folderService.upsert(new FolderData(remoteFolder));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getFullCipherDetails(notification.id);\n          if (remoteCipher != null) {\n            await this.cipherService.upsert(new CipherData(remoteCipher));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            await this.sendService.upsert(new SendData(remoteSend));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setAvatarColor(response.avatarColor);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setHasPremiumPersonally(response.premiumPersonally);\n    await this.stateService.setHasPremiumFromOrganization(response.premiumFromOrganization);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await this.organizationService.replace(organizations);\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class AnonAddyForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    if (options.anonaddy?.domain == null || options.anonaddy.domain === \"\") {\n      throw \"Invalid AnonAddy domain.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://app.anonaddy.com/api/v1/aliases\";\n    requestInit.body = JSON.stringify({\n      domain: options.anonaddy.domain,\n      description:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.data?.email;\n    }\n    if (response.status === 401) {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    throw \"Unknown AnonAddy error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class DuckDuckGoForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://quack.duckduckgo.com/api/email/addresses\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      if (json.address) {\n        return `${json.address}@duck.com`;\n      }\n    } else if (response.status === 401) {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    throw \"Unknown DuckDuckGo error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class FastmailForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Fastmail API token.\";\n    }\n\n    const accountId = await this.getAccountId(apiService, options);\n    if (accountId == null || accountId === \"\") {\n      throw \"Unable to obtain Fastmail masked email account ID.\";\n    }\n\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://api.fastmail.com/jmap/api/\";\n    requestInit.body = JSON.stringify({\n      using: [\"https://www.fastmail.com/dev/maskedemail\", \"urn:ietf:params:jmap:core\"],\n      methodCalls: [\n        [\n          \"MaskedEmail/set\",\n          {\n            accountId: accountId,\n            create: {\n              \"new-masked-email\": {\n                state: \"enabled\",\n                description: \"\",\n                url: options.website,\n                emailPrefix: options.fastmail.prefix,\n              },\n            },\n          },\n          \"0\",\n        ],\n      ],\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (\n        json.methodResponses != null &&\n        json.methodResponses.length > 0 &&\n        json.methodResponses[0].length > 0\n      ) {\n        if (json.methodResponses[0][0] === \"MaskedEmail/set\") {\n          if (json.methodResponses[0][1]?.created?.[\"new-masked-email\"] != null) {\n            return json.methodResponses[0][1]?.created?.[\"new-masked-email\"]?.email;\n          }\n          if (json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"] != null) {\n            throw (\n              \"Fastmail error: \" +\n              json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"]?.description\n            );\n          }\n        } else if (json.methodResponses[0][0] === \"error\") {\n          throw \"Fastmail error: \" + json.methodResponses[0][1]?.description;\n        }\n      }\n    }\n    if (response.status === 401 || response.status === 403) {\n      throw \"Invalid Fastmail API token.\";\n    }\n    throw \"Unknown Fastmail error occurred.\";\n  }\n\n  private async getAccountId(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      method: \"GET\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n      }),\n    };\n    const url = \"https://api.fastmail.com/.well-known/jmap\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (json.primaryAccounts != null) {\n        return json.primaryAccounts[\"https://www.fastmail.com/dev/maskedemail\"];\n      }\n    }\n    return null;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class FirefoxRelayForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Token \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://relay.firefox.com/api/v1/relayaddresses/\";\n    requestInit.body = JSON.stringify({\n      enabled: true,\n      generated_for: options.website,\n      description:\n        (options.website != null ? options.website + \" - \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.full_address;\n    }\n    if (response.status === 401) {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    throw \"Unknown Firefox Relay error occurred.\";\n  }\n}\n","export class ForwarderOptions {\n  apiKey: string;\n  website: string;\n  fastmail = new FastmailForwarderOptions();\n  anonaddy = new AnonAddyForwarderOptions();\n}\n\nexport class FastmailForwarderOptions {\n  prefix: string;\n}\n\nexport class AnonAddyForwarderOptions {\n  domain: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class SimpleLoginForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authentication: options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    let url = \"https://app.simplelogin.io/api/alias/random/new\";\n    if (options.website != null) {\n      url += \"?hostname=\" + options.website;\n    }\n    requestInit.body = JSON.stringify({\n      note:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json.alias;\n    }\n    if (response.status === 401) {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    try {\n      const json = await response.json();\n      if (json?.error != null) {\n        throw \"SimpleLogin error:\" + json.error;\n      }\n    } catch {\n      // Do nothing...\n    }\n    throw \"Unknown SimpleLogin error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { UsernameGenerationService as BaseUsernameGenerationService } from \"../abstractions/usernameGeneration.service\";\nimport { AnonAddyForwarder } from \"../email-forwarders/anon-addy-forwarder\";\nimport { DuckDuckGoForwarder } from \"../email-forwarders/duck-duck-go-forwarder\";\nimport { FastmailForwarder } from \"../email-forwarders/fastmail-forwarder\";\nimport { FirefoxRelayForwarder } from \"../email-forwarders/firefox-relay-forwarder\";\nimport { Forwarder } from \"../email-forwarders/forwarder\";\nimport { ForwarderOptions } from \"../email-forwarders/forwarder-options\";\nimport { SimpleLoginForwarder } from \"../email-forwarders/simple-login-forwarder\";\nimport { EFFLongWordList } from \"../misc/wordlist\";\n\nconst DefaultOptions = {\n  type: \"word\",\n  wordCapitalize: true,\n  wordIncludeNumber: true,\n  subaddressType: \"random\",\n  catchallType: \"random\",\n  forwardedService: \"\",\n  forwardedAnonAddyDomain: \"anonaddy.me\",\n};\n\nexport class UsernameGenerationService implements BaseUsernameGenerationService {\n  constructor(\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  generateUsername(options: any): Promise<string> {\n    if (options.type === \"catchall\") {\n      return this.generateCatchall(options);\n    } else if (options.type === \"subaddress\") {\n      return this.generateSubaddress(options);\n    } else if (options.type === \"forwarded\") {\n      return this.generateForwarded(options);\n    } else {\n      return this.generateWord(options);\n    }\n  }\n\n  async generateWord(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.wordCapitalize == null) {\n      o.wordCapitalize = true;\n    }\n    if (o.wordIncludeNumber == null) {\n      o.wordIncludeNumber = true;\n    }\n\n    const wordIndex = await this.cryptoService.randomNumber(0, EFFLongWordList.length - 1);\n    let word = EFFLongWordList[wordIndex];\n    if (o.wordCapitalize) {\n      word = word.charAt(0).toUpperCase() + word.slice(1);\n    }\n    if (o.wordIncludeNumber) {\n      const num = await this.cryptoService.randomNumber(1, 9999);\n      word = word + this.zeroPad(num.toString(), 4);\n    }\n    return word;\n  }\n\n  async generateSubaddress(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    const subaddressEmail = o.subaddressEmail;\n    if (subaddressEmail == null || subaddressEmail.length < 3) {\n      return o.subaddressEmail;\n    }\n    const atIndex = subaddressEmail.indexOf(\"@\");\n    if (atIndex < 1 || atIndex >= subaddressEmail.length - 1) {\n      return subaddressEmail;\n    }\n    if (o.subaddressType == null) {\n      o.subaddressType = \"random\";\n    }\n\n    const emailBeginning = subaddressEmail.substr(0, atIndex);\n    const emailEnding = subaddressEmail.substr(atIndex + 1, subaddressEmail.length);\n\n    let subaddressString = \"\";\n    if (o.subaddressType === \"random\") {\n      subaddressString = await this.randomString(8);\n    } else if (o.subaddressType === \"website-name\") {\n      subaddressString = o.website;\n    }\n    return emailBeginning + \"+\" + subaddressString + \"@\" + emailEnding;\n  }\n\n  async generateCatchall(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.catchallDomain == null || o.catchallDomain === \"\") {\n      return null;\n    }\n    if (o.catchallType == null) {\n      o.catchallType = \"random\";\n    }\n\n    let startString = \"\";\n    if (o.catchallType === \"random\") {\n      startString = await this.randomString(8);\n    } else if (o.catchallType === \"website-name\") {\n      startString = o.website;\n    }\n    return startString + \"@\" + o.catchallDomain;\n  }\n\n  async generateForwarded(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.forwardedService == null) {\n      return null;\n    }\n\n    let forwarder: Forwarder = null;\n    const forwarderOptions = new ForwarderOptions();\n    forwarderOptions.website = o.website;\n    if (o.forwardedService === \"simplelogin\") {\n      forwarder = new SimpleLoginForwarder();\n      forwarderOptions.apiKey = o.forwardedSimpleLoginApiKey;\n    } else if (o.forwardedService === \"anonaddy\") {\n      forwarder = new AnonAddyForwarder();\n      forwarderOptions.apiKey = o.forwardedAnonAddyApiToken;\n      forwarderOptions.anonaddy.domain = o.forwardedAnonAddyDomain;\n    } else if (o.forwardedService === \"firefoxrelay\") {\n      forwarder = new FirefoxRelayForwarder();\n      forwarderOptions.apiKey = o.forwardedFirefoxApiToken;\n    } else if (o.forwardedService === \"fastmail\") {\n      forwarder = new FastmailForwarder();\n      forwarderOptions.apiKey = o.forwardedFastmailApiToken;\n    } else if (o.forwardedService === \"duckduckgo\") {\n      forwarder = new DuckDuckGoForwarder();\n      forwarderOptions.apiKey = o.forwardedDuckDuckGoToken;\n    }\n\n    if (forwarder == null) {\n      return null;\n    }\n\n    return forwarder.generate(this.apiService, forwarderOptions);\n  }\n\n  async getOptions(): Promise<any> {\n    let options = await this.stateService.getUsernameGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setUsernameGenerationOptions(options);\n    return options;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setUsernameGenerationOptions(options);\n  }\n\n  private async randomString(length: number) {\n    let str = \"\";\n    const charSet = \"abcdefghijklmnopqrstuvwxyz1234567890\";\n    for (let i = 0; i < length; i++) {\n      const randomCharIndex = await this.cryptoService.randomNumber(0, charSet.length - 1);\n      str += charSet.charAt(randomCharIndex);\n    }\n    return str;\n  }\n\n  // ref: https://stackoverflow.com/a/10073788\n  private zeroPad(number: string, width: number) {\n    return number.length >= width\n      ? number\n      : new Array(width - number.length + 1).join(\"0\") + number;\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService as BaseBroadcasterService } from \"@bitwarden/common/services/broadcaster.service\";\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {}\n","import {\n  BroadcasterService as BroadcasterServiceAbstraction,\n  MessageBase,\n} from \"../abstractions/broadcaster.service\";\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n  subscribers: Map<string, (message: MessageBase) => void> = new Map<\n    string,\n    (message: MessageBase) => void\n  >();\n\n  send(message: MessageBase, id?: string) {\n    if (id != null) {\n      if (this.subscribers.has(id)) {\n        this.subscribers.get(id)(message);\n      }\n      return;\n    }\n\n    this.subscribers.forEach((value) => {\n      value(message);\n    });\n  }\n\n  subscribe(id: string, messageCallback: (message: MessageBase) => void) {\n    this.subscribers.set(id, messageCallback);\n  }\n\n  unsubscribe(id: string) {\n    if (this.subscribers.has(id)) {\n      this.subscribers.delete(id);\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationComponent for any other situation where you need to verify the user's identity.\n */\n@Directive()\nexport class PasswordRepromptComponent {\n  showPassword = false;\n  masterPassword = \"\";\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async submit() {\n    if (!(await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\nimport { ModalService } from \"./modal.service\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationService for any other situation where you need to verify the user's identity.\n */\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n  protected component = PasswordRepromptComponent;\n\n  constructor(\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  protectedFields() {\n    return [\"TOTP\", \"Password\", \"H_Field\", \"Card Number\", \"Security Code\"];\n  }\n\n  async showPasswordPrompt() {\n    if (!(await this.enabled())) {\n      return true;\n    }\n\n    const ref = this.modalService.open(this.component, { allowMultipleModals: true });\n\n    if (ref == null) {\n      return false;\n    }\n\n    const result = await ref.onClosedPromise();\n    return result === true;\n  }\n\n  async enabled() {\n    return !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport class ThemeBuilder implements Theme {\n  get effectiveTheme(): ThemeType {\n    return this.configuredTheme != ThemeType.System ? this.configuredTheme : this.systemTheme;\n  }\n\n  constructor(readonly configuredTheme: ThemeType, readonly systemTheme: ThemeType) {}\n\n  updateSystemTheme(systemTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(this.configuredTheme, systemTheme);\n  }\n\n  updateConfiguredTheme(configuredTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(configuredTheme, this.systemTheme);\n  }\n}\n","import { DOCUMENT } from \"@angular/common\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, filter, fromEvent, Observable } from \"rxjs\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { WINDOW } from \"../injection-tokens\";\n\nimport { Theme } from \"./theme\";\nimport { ThemeBuilder } from \"./themeBuilder\";\nimport { AbstractThemingService } from \"./theming.service.abstraction\";\n\n@Injectable()\nexport class ThemingService implements AbstractThemingService {\n  private _theme = new BehaviorSubject<ThemeBuilder | null>(null);\n  theme$: Observable<Theme> = this._theme.pipe(filter((x) => x !== null));\n\n  constructor(\n    private stateService: StateService,\n    @Inject(WINDOW) private window: Window,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.monitorThemeChanges();\n  }\n\n  async monitorThemeChanges(): Promise<void> {\n    this._theme.next(\n      new ThemeBuilder(await this.stateService.getTheme(), await this.getSystemTheme())\n    );\n    this.monitorConfiguredThemeChanges();\n    this.monitorSystemThemeChanges();\n  }\n\n  updateSystemTheme(systemTheme: ThemeType): void {\n    this._theme.next(this._theme.getValue().updateSystemTheme(systemTheme));\n  }\n\n  async updateConfiguredTheme(theme: ThemeType): Promise<void> {\n    await this.stateService.setTheme(theme);\n    this._theme.next(this._theme.getValue().updateConfiguredTheme(theme));\n  }\n\n  protected monitorConfiguredThemeChanges(): void {\n    this.theme$.subscribe((theme: Theme) => {\n      this.document.documentElement.classList.remove(\n        \"theme_\" + ThemeType.Light,\n        \"theme_\" + ThemeType.Dark,\n        \"theme_\" + ThemeType.Nord,\n        \"theme_\" + ThemeType.SolarizedDark\n      );\n      this.document.documentElement.classList.add(\"theme_\" + theme.effectiveTheme);\n    });\n  }\n\n  // We use a media match query for monitoring the system theme on web and browser, but this doesn't work for electron apps on Linux.\n  // In desktop we override these methods to track systemTheme with the electron renderer instead, which works for all OSs.\n  protected async getSystemTheme(): Promise<ThemeType> {\n    return this.window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      ? ThemeType.Dark\n      : ThemeType.Light;\n  }\n\n  protected monitorSystemThemeChanges(): void {\n    fromEvent<MediaQueryListEvent>(\n      this.window.matchMedia(\"(prefers-color-scheme: dark)\"),\n      \"change\"\n    ).subscribe((event) => {\n      this.updateSystemTheme(event.matches ? ThemeType.Dark : ThemeType.Light);\n    });\n  }\n}\n","import { Injector, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { AccountApiService as AccountApiServiceAbstraction } from \"@bitwarden/common/abstractions/account/account-api.service\";\nimport {\n  AccountService as AccountServiceAbstraction,\n  InternalAccountService,\n} from \"@bitwarden/common/abstractions/account/account.service\";\nimport { AvatarUpdateService as AccountUpdateServiceAbstraction } from \"@bitwarden/common/abstractions/account/avatar-update.service\";\nimport { AnonymousHubService as AnonymousHubServiceAbstraction } from \"@bitwarden/common/abstractions/anonymousHub.service\";\nimport { ApiService as ApiServiceAbstraction } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService as BroadcasterServiceAbstraction } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService as CipherServiceAbstraction } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"@bitwarden/common/abstractions/collection.service\";\nimport { ConfigApiServiceAbstraction } from \"@bitwarden/common/abstractions/config/config-api.service.abstraction\";\nimport { ConfigServiceAbstraction } from \"@bitwarden/common/abstractions/config/config.service.abstraction\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"@bitwarden/common/abstractions/encrypt.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventCollectionService as EventCollectionServiceAbstraction } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { EventUploadService as EventUploadServiceAbstraction } from \"@bitwarden/common/abstractions/event/event-upload.service\";\nimport { ExportService as ExportServiceAbstraction } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport {\n  FolderService as FolderServiceAbstraction,\n  InternalFolderService,\n} from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FormValidationErrorsService as FormValidationErrorsServiceAbstraction } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService as LoginServiceAbstraction } from \"@bitwarden/common/abstractions/login.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport {\n  InternalOrganizationService,\n  OrganizationService as OrganizationServiceAbstraction,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport {\n  InternalPolicyService,\n  PolicyService as PolicyServiceAbstraction,\n} from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { ProviderService as ProviderServiceAbstraction } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { SyncNotifierService as SyncNotifierServiceAbstraction } from \"@bitwarden/common/abstractions/sync/syncNotifier.service.abstraction\";\nimport { TokenService as TokenServiceAbstraction } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationApiServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { ValidationService as ValidationServiceAbstraction } from \"@bitwarden/common/abstractions/validation.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { flagEnabled } from \"@bitwarden/common/misc/flags\";\nimport { Account } from \"@bitwarden/common/models/domain/account\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/global-state\";\nimport { AccountApiServiceImplementation } from \"@bitwarden/common/services/account/account-api.service\";\nimport { AccountServiceImplementation } from \"@bitwarden/common/services/account/account.service\";\nimport { AvatarUpdateService } from \"@bitwarden/common/services/account/avatar-update.service\";\nimport { AnonymousHubService } from \"@bitwarden/common/services/anonymousHub.service\";\nimport { ApiService } from \"@bitwarden/common/services/api.service\";\nimport { AppIdService } from \"@bitwarden/common/services/appId.service\";\nimport { AuditService } from \"@bitwarden/common/services/audit.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { CipherService } from \"@bitwarden/common/services/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/services/collection.service\";\nimport { ConfigApiService } from \"@bitwarden/common/services/config/config-api.service\";\nimport { ConfigService } from \"@bitwarden/common/services/config/config.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { CryptoService } from \"@bitwarden/common/services/crypto.service\";\nimport { EncryptServiceImplementation } from \"@bitwarden/common/services/cryptography/encrypt.service.implementation\";\nimport { MultithreadEncryptServiceImplementation } from \"@bitwarden/common/services/cryptography/multithread-encrypt.service.implementation\";\nimport { EnvironmentService } from \"@bitwarden/common/services/environment.service\";\nimport { EventCollectionService } from \"@bitwarden/common/services/event/event-collection.service\";\nimport { EventUploadService } from \"@bitwarden/common/services/event/event-upload.service\";\nimport { ExportService } from \"@bitwarden/common/services/export.service\";\nimport { FileUploadService } from \"@bitwarden/common/services/fileUpload.service\";\nimport { FolderApiService } from \"@bitwarden/common/services/folder/folder-api.service\";\nimport { FolderService } from \"@bitwarden/common/services/folder/folder.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/services/formValidationErrors.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/services/keyConnector.service\";\nimport { LoginService } from \"@bitwarden/common/services/login.service\";\nimport { NotificationsService } from \"@bitwarden/common/services/notifications.service\";\nimport { OrganizationUserServiceImplementation } from \"@bitwarden/common/services/organization-user/organization-user.service.implementation\";\nimport { OrganizationApiService } from \"@bitwarden/common/services/organization/organization-api.service\";\nimport { OrganizationService } from \"@bitwarden/common/services/organization/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/services/passwordGeneration.service\";\nimport { PolicyApiService } from \"@bitwarden/common/services/policy/policy-api.service\";\nimport { PolicyService } from \"@bitwarden/common/services/policy/policy.service\";\nimport { ProviderService } from \"@bitwarden/common/services/provider.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\nimport { SendService } from \"@bitwarden/common/services/send.service\";\nimport { SettingsService } from \"@bitwarden/common/services/settings.service\";\nimport { StateService } from \"@bitwarden/common/services/state.service\";\nimport { StateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\nimport { SyncService } from \"@bitwarden/common/services/sync/sync.service\";\nimport { SyncNotifierService } from \"@bitwarden/common/services/sync/syncNotifier.service\";\nimport { TokenService } from \"@bitwarden/common/services/token.service\";\nimport { TotpService } from \"@bitwarden/common/services/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/services/twoFactor.service\";\nimport { UserVerificationApiService } from \"@bitwarden/common/services/userVerification/userVerification-api.service\";\nimport { UserVerificationService } from \"@bitwarden/common/services/userVerification/userVerification.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/services/usernameGeneration.service\";\nimport { ValidationService } from \"@bitwarden/common/services/validation.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeoutSettings.service\";\nimport { WebCryptoFunctionService } from \"@bitwarden/common/services/webCryptoFunction.service\";\n\nimport { AuthGuard } from \"../guards/auth.guard\";\nimport { LockGuard } from \"../guards/lock.guard\";\nimport { UnauthGuard } from \"../guards/unauth.guard\";\n\nimport { BroadcasterService } from \"./broadcaster.service\";\nimport {\n  LOCALES_DIRECTORY,\n  LOCKED_CALLBACK,\n  LOG_MAC_FAILURES,\n  LOGOUT_CALLBACK,\n  MEMORY_STORAGE,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n  SYSTEM_LANGUAGE,\n  WINDOW,\n} from \"./injection-tokens\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./passwordReprompt.service\";\nimport { ThemingService } from \"./theming/theming.service\";\nimport { AbstractThemingService } from \"./theming/theming.service.abstraction\";\n\n@NgModule({\n  declarations: [],\n  providers: [\n    AuthGuard,\n    UnauthGuard,\n    LockGuard,\n    ModalService,\n    { provide: WINDOW, useValue: window },\n    {\n      provide: LOCALE_ID,\n      useFactory: (i18nService: I18nServiceAbstraction) => i18nService.translationLocale,\n      deps: [I18nServiceAbstraction],\n    },\n    {\n      provide: LOCALES_DIRECTORY,\n      useValue: \"./locales\",\n    },\n    {\n      provide: SYSTEM_LANGUAGE,\n      useFactory: (window: Window) => window.navigator.language,\n      deps: [WINDOW],\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: true,\n    },\n    {\n      provide: LOGOUT_CALLBACK,\n      useFactory:\n        (messagingService: MessagingServiceAbstraction) => (expired: boolean, userId?: string) =>\n          messagingService.send(\"logout\", { expired: expired, userId: userId }),\n      deps: [MessagingServiceAbstraction],\n    },\n    {\n      provide: LOCKED_CALLBACK,\n      useValue: null,\n    },\n    {\n      provide: LOG_MAC_FAILURES,\n      useValue: true,\n    },\n    {\n      provide: AppIdServiceAbstraction,\n      useClass: AppIdService,\n      deps: [AbstractStorageService],\n    },\n    {\n      provide: AuditServiceAbstraction,\n      useClass: AuditService,\n      deps: [CryptoFunctionServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useClass: AuthService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        AppIdServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        StateServiceAbstraction,\n        TwoFactorServiceAbstraction,\n        I18nServiceAbstraction,\n      ],\n    },\n    {\n      provide: CipherServiceAbstraction,\n      useFactory: (\n        cryptoService: CryptoServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        fileUploadService: FileUploadServiceAbstraction,\n        i18nService: I18nServiceAbstraction,\n        injector: Injector,\n        logService: LogService,\n        stateService: StateServiceAbstraction,\n        encryptService: EncryptService\n      ) =>\n        new CipherService(\n          cryptoService,\n          settingsService,\n          apiService,\n          fileUploadService,\n          i18nService,\n          () => injector.get(SearchServiceAbstraction),\n          logService,\n          stateService,\n          encryptService\n        ),\n      deps: [\n        CryptoServiceAbstraction,\n        SettingsServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        Injector, // TODO: Get rid of this circular dependency!\n        LogService,\n        StateServiceAbstraction,\n        EncryptService,\n      ],\n    },\n    {\n      provide: FolderServiceAbstraction,\n      useClass: FolderService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: InternalFolderService,\n      useExisting: FolderServiceAbstraction,\n    },\n    {\n      provide: FolderApiServiceAbstraction,\n      useClass: FolderApiService,\n      deps: [FolderServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AccountApiServiceAbstraction,\n      useClass: AccountApiServiceImplementation,\n      deps: [\n        ApiServiceAbstraction,\n        UserVerificationServiceAbstraction,\n        LogService,\n        InternalAccountService,\n      ],\n    },\n    {\n      provide: AccountServiceAbstraction,\n      useClass: AccountServiceImplementation,\n      deps: [MessagingServiceAbstraction, LogService],\n    },\n    {\n      provide: InternalAccountService,\n      useExisting: AccountServiceAbstraction,\n    },\n    {\n      provide: AccountUpdateServiceAbstraction,\n      useClass: AvatarUpdateService,\n      deps: [ApiServiceAbstraction, StateServiceAbstraction],\n    },\n    { provide: LogService, useFactory: () => new ConsoleLogService(false) },\n    {\n      provide: CollectionServiceAbstraction,\n      useClass: CollectionService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: EnvironmentServiceAbstraction,\n      useClass: EnvironmentService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TotpServiceAbstraction,\n      useClass: TotpService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, StateServiceAbstraction],\n    },\n    { provide: TokenServiceAbstraction, useClass: TokenService, deps: [StateServiceAbstraction] },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        EncryptService,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: PasswordGenerationServiceAbstraction,\n      useClass: PasswordGenerationService,\n      deps: [CryptoServiceAbstraction, PolicyServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: UsernameGenerationServiceAbstraction,\n      useClass: UsernameGenerationService,\n      deps: [CryptoServiceAbstraction, StateServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: ApiServiceAbstraction,\n      useClass: ApiService,\n      deps: [\n        TokenServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        AppIdServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: FileUploadServiceAbstraction,\n      useClass: FileUploadService,\n      deps: [LogService, ApiServiceAbstraction],\n    },\n    {\n      provide: SyncServiceAbstraction,\n      useClass: SyncService,\n      deps: [\n        ApiServiceAbstraction,\n        SettingsServiceAbstraction,\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        CryptoServiceAbstraction,\n        CollectionServiceAbstraction,\n        MessagingServiceAbstraction,\n        PolicyServiceAbstraction,\n        SendServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        ProviderServiceAbstraction,\n        FolderApiServiceAbstraction,\n        OrganizationServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    { provide: BroadcasterServiceAbstraction, useClass: BroadcasterService },\n    {\n      provide: SettingsServiceAbstraction,\n      useClass: SettingsService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultTimeoutSettingsServiceAbstraction,\n      useClass: VaultTimeoutSettingsService,\n      deps: [\n        CryptoServiceAbstraction,\n        TokenServiceAbstraction,\n        PolicyServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: VaultTimeoutServiceAbstraction,\n      useClass: VaultTimeoutService,\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        CollectionServiceAbstraction,\n        CryptoServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        SearchServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n        VaultTimeoutSettingsServiceAbstraction,\n        LOCKED_CALLBACK,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useClass: StateService,\n      deps: [\n        AbstractStorageService,\n        SECURE_STORAGE,\n        MEMORY_STORAGE,\n        LogService,\n        StateMigrationServiceAbstraction,\n        STATE_FACTORY,\n        STATE_SERVICE_USE_CACHE,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    {\n      provide: ExportServiceAbstraction,\n      useClass: ExportService,\n      deps: [\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        ApiServiceAbstraction,\n        CryptoServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n      ],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useClass: SearchService,\n      deps: [CipherServiceAbstraction, LogService, I18nServiceAbstraction],\n    },\n    {\n      provide: NotificationsServiceAbstraction,\n      useClass: NotificationsService,\n      deps: [\n        SyncServiceAbstraction,\n        AppIdServiceAbstraction,\n        ApiServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        LOGOUT_CALLBACK,\n        LogService,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoFunctionServiceAbstraction,\n      useClass: WebCryptoFunctionService,\n      deps: [WINDOW],\n    },\n    {\n      provide: EncryptService,\n      useFactory: encryptServiceFactory,\n      deps: [CryptoFunctionServiceAbstraction, LogService, LOG_MAC_FAILURES],\n    },\n    {\n      provide: EventUploadServiceAbstraction,\n      useClass: EventUploadService,\n      deps: [ApiServiceAbstraction, StateServiceAbstraction, LogService],\n    },\n    {\n      provide: EventCollectionServiceAbstraction,\n      useClass: EventCollectionService,\n      deps: [\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n        EventUploadServiceAbstraction,\n      ],\n    },\n    {\n      provide: PolicyServiceAbstraction,\n      useClass: PolicyService,\n      deps: [StateServiceAbstraction, OrganizationServiceAbstraction],\n    },\n    {\n      provide: InternalPolicyService,\n      useExisting: PolicyServiceAbstraction,\n    },\n    {\n      provide: PolicyApiServiceAbstraction,\n      useClass: PolicyApiService,\n      deps: [\n        PolicyServiceAbstraction,\n        ApiServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: SendServiceAbstraction,\n      useClass: SendService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: KeyConnectorServiceAbstraction,\n      useClass: KeyConnectorService,\n      deps: [\n        StateServiceAbstraction,\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        SyncNotifierServiceAbstraction,\n        MessagingServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: UserVerificationServiceAbstraction,\n      useClass: UserVerificationService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        UserVerificationApiServiceAbstraction,\n      ],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationServiceAbstraction,\n      useClass: OrganizationService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: InternalOrganizationService,\n      useExisting: OrganizationServiceAbstraction,\n    },\n    {\n      provide: OrganizationUserService,\n      useClass: OrganizationUserServiceImplementation,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: ProviderServiceAbstraction,\n      useClass: ProviderService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TwoFactorServiceAbstraction,\n      useClass: TwoFactorService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: AbstractThemingService,\n      useClass: ThemingService,\n    },\n    {\n      provide: FormValidationErrorsServiceAbstraction,\n      useClass: FormValidationErrorsService,\n    },\n    {\n      provide: UserVerificationApiServiceAbstraction,\n      useClass: UserVerificationApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: OrganizationApiServiceAbstraction,\n      useClass: OrganizationApiService,\n      // This is a slightly odd dependency tree for a specialized api service\n      // it depends on SyncService so that new data can be retrieved through the sync\n      // rather than updating the OrganizationService directly. Instead OrganizationService\n      // subscribes to sync notifications and will update itself based on that.\n      deps: [ApiServiceAbstraction, SyncServiceAbstraction],\n    },\n    {\n      provide: SyncNotifierServiceAbstraction,\n      useClass: SyncNotifierService,\n    },\n    {\n      provide: ConfigServiceAbstraction,\n      useClass: ConfigService,\n      deps: [StateServiceAbstraction, ConfigApiServiceAbstraction],\n    },\n    {\n      provide: ConfigApiServiceAbstraction,\n      useClass: ConfigApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: AnonymousHubServiceAbstraction,\n      useClass: AnonymousHubService,\n      deps: [EnvironmentServiceAbstraction, AuthServiceAbstraction, LogService],\n    },\n    {\n      provide: ValidationServiceAbstraction,\n      useClass: ValidationService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: LoginServiceAbstraction,\n      useClass: LoginService,\n      deps: [StateServiceAbstraction],\n    },\n  ],\n})\nexport class JslibServicesModule {}\n\nfunction encryptServiceFactory(\n  cryptoFunctionservice: CryptoFunctionServiceAbstraction,\n  logService: LogService,\n  logMacFailures: boolean\n): EncryptService {\n  return flagEnabled(\"multithreadDecryption\")\n    ? new MultithreadEncryptServiceImplementation(cryptoFunctionservice, logService, logMacFailures)\n    : new EncryptServiceImplementation(cryptoFunctionservice, logService, logMacFailures);\n}\n","import { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { Utils } from \"../misc/utils\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: AbstractStorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/twoFactor.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthenticationType } from \"../enums/authenticationType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { PasswordLogInStrategy } from \"../misc/logInStrategies/passwordLogin.strategy\";\nimport { PasswordlessLogInStrategy } from \"../misc/logInStrategies/passwordlessLogin.strategy\";\nimport { SsoLogInStrategy } from \"../misc/logInStrategies/ssoLogin.strategy\";\nimport { UserApiLogInStrategy } from \"../misc/logInStrategies/user-api-login.strategy\";\nimport { AuthResult } from \"../models/domain/auth-result\";\nimport {\n  UserApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\nimport { PreloginRequest } from \"../models/request/prelogin.request\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { AuthRequestPushNotification } from \"../models/response/notification.response\";\n\nconst sessionTimeoutLength = 2 * 60 * 1000; // 2 minutes\n\nexport class AuthService implements AuthServiceAbstraction {\n  get email(): string {\n    if (\n      this.logInStrategy instanceof PasswordLogInStrategy ||\n      this.logInStrategy instanceof PasswordlessLogInStrategy\n    ) {\n      return this.logInStrategy.email;\n    }\n\n    return null;\n  }\n\n  get masterPasswordHash(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy\n      ? this.logInStrategy.masterPasswordHash\n      : null;\n  }\n\n  get accessCode(): string {\n    return this.logInStrategy instanceof PasswordlessLogInStrategy\n      ? this.logInStrategy.accessCode\n      : null;\n  }\n\n  get authRequestId(): string {\n    return this.logInStrategy instanceof PasswordlessLogInStrategy\n      ? this.logInStrategy.authRequestId\n      : null;\n  }\n\n  private logInStrategy:\n    | UserApiLogInStrategy\n    | PasswordLogInStrategy\n    | SsoLogInStrategy\n    | PasswordlessLogInStrategy;\n  private sessionTimeout: any;\n\n  private pushNotificationSubject = new Subject<string>();\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService,\n    protected i18nService: I18nService\n  ) {}\n\n  async logIn(\n    credentials:\n      | UserApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ): Promise<AuthResult> {\n    this.clearState();\n\n    let strategy:\n      | UserApiLogInStrategy\n      | PasswordLogInStrategy\n      | SsoLogInStrategy\n      | PasswordlessLogInStrategy;\n\n    switch (credentials.type) {\n      case AuthenticationType.Password:\n        strategy = new PasswordLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this\n        );\n        break;\n      case AuthenticationType.Sso:\n        strategy = new SsoLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this.keyConnectorService\n        );\n        break;\n      case AuthenticationType.UserApi:\n        strategy = new UserApiLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this.environmentService,\n          this.keyConnectorService\n        );\n        break;\n      case AuthenticationType.Passwordless:\n        strategy = new PasswordlessLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this\n        );\n        break;\n    }\n\n    const result = await strategy.logIn(credentials as any);\n\n    if (result?.requiresTwoFactor) {\n      this.saveState(strategy);\n    }\n    return result;\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    if (this.logInStrategy == null) {\n      throw new Error(this.i18nService.t(\"sessionTimeout\"));\n    }\n\n    try {\n      const result = await this.logInStrategy.logInTwoFactor(twoFactor, captchaResponse);\n\n      // Only clear state if 2FA token has been accepted, otherwise we need to be able to try again\n      if (!result.requiresTwoFactor && !result.requiresCaptcha) {\n        this.clearState();\n      }\n      return result;\n    } catch (e) {\n      // API exceptions are okay, but if there are any unhandled client-side errors then clear state to be safe\n      if (!(e instanceof ErrorResponse)) {\n        this.clearState();\n      }\n      throw e;\n    }\n  }\n\n  logOut(callback: () => void) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  authingWithUserApiKey(): boolean {\n    return this.logInStrategy instanceof UserApiLogInStrategy;\n  }\n\n  authingWithSso(): boolean {\n    return this.logInStrategy instanceof SsoLogInStrategy;\n  }\n\n  authingWithPassword(): boolean {\n    return this.logInStrategy instanceof PasswordLogInStrategy;\n  }\n\n  authingWithPasswordless(): boolean {\n    return this.logInStrategy instanceof PasswordlessLogInStrategy;\n  }\n\n  async getAuthStatus(userId?: string): Promise<AuthenticationStatus> {\n    const isAuthenticated = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!isAuthenticated) {\n      return AuthenticationStatus.LoggedOut;\n    }\n\n    // Keys aren't stored for a device that is locked or logged out\n    // Make sure we're logged in before checking this, otherwise we could mix up those states\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    const hasKeyInMemory = await this.cryptoService.hasKeyInMemory(userId);\n    if (!hasKeyInMemory) {\n      return AuthenticationStatus.Locked;\n    }\n\n    return AuthenticationStatus.Unlocked;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  async authResponsePushNotifiction(notification: AuthRequestPushNotification): Promise<any> {\n    this.pushNotificationSubject.next(notification.id);\n  }\n\n  getPushNotifcationObs$(): Observable<any> {\n    return this.pushNotificationSubject.asObservable();\n  }\n\n  private saveState(\n    strategy:\n      | UserApiLogInStrategy\n      | PasswordLogInStrategy\n      | SsoLogInStrategy\n      | PasswordlessLogInStrategy\n  ) {\n    this.logInStrategy = strategy;\n    this.startSessionTimeout();\n  }\n\n  private clearState() {\n    this.logInStrategy = null;\n    this.clearSessionTimeout();\n  }\n\n  private startSessionTimeout() {\n    this.clearSessionTimeout();\n    this.sessionTimeout = setTimeout(() => this.clearState(), sessionTimeoutLength);\n  }\n\n  private clearSessionTimeout() {\n    if (this.sessionTimeout != null) {\n      clearTimeout(this.sessionTimeout);\n    }\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { InternalFolderService as InternalFolderServiceAbstraction } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { CipherData } from \"../../models/data/cipher.data\";\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { FolderView } from \"../../models/view/folder.view\";\n\nexport class FolderService implements InternalFolderServiceAbstraction {\n  protected _folders: BehaviorSubject<Folder[]> = new BehaviorSubject([]);\n  protected _folderViews: BehaviorSubject<FolderView[]> = new BehaviorSubject([]);\n\n  folders$ = this._folders.asObservable();\n  folderViews$ = this._folderViews.asObservable();\n\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._folders.next([]);\n            this._folderViews.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getEncryptedFolders();\n\n          await this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async clearCache(): Promise<void> {\n    this._folderViews.next([]);\n  }\n\n  // TODO: This should be moved to EncryptService or something\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = this._folders.getValue();\n\n    return folders.find((folder) => folder.id === id);\n  }\n\n  async getAllFromState(): Promise<Folder[]> {\n    const folders = await this.stateService.getEncryptedFolders();\n    const response: Folder[] = [];\n    for (const id in folders) {\n      // eslint-disable-next-line\n      if (folders.hasOwnProperty(id)) {\n        response.push(new Folder(folders[id]));\n      }\n    }\n    return response;\n  }\n\n  /**\n   * @deprecated For the CLI only\n   * @param id id of the folder\n   */\n  async getFromState(id: string): Promise<Folder> {\n    const foldersMap = await this.stateService.getEncryptedFolders();\n    const folder = foldersMap[id];\n    if (folder == null) {\n      return null;\n    }\n\n    return new Folder(folder);\n  }\n\n  /**\n   * @deprecated Only use in CLI!\n   */\n  async getAllDecryptedFromState(): Promise<FolderView[]> {\n    const data = await this.stateService.getEncryptedFolders();\n    const folders = Object.values(data || {}).map((f) => new Folder(f));\n\n    return this.decryptFolders(folders);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<void> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<void> {\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._folders.next([]);\n      this._folderViews.next([]);\n    }\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  private async updateObservables(foldersMap: { [id: string]: FolderData }) {\n    const folders = Object.values(foldersMap || {}).map((f) => new Folder(f));\n\n    this._folders.next(folders);\n\n    if (await this.cryptoService.hasKey()) {\n      this._folderViews.next(await this.decryptFolders(folders));\n    }\n  }\n\n  private async decryptFolders(folders: Folder[]) {\n    const decryptFolderPromises = folders.map((f) => f.decrypt());\n    const decryptedFolders = await Promise.all(decryptFolderPromises);\n\n    decryptedFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decryptedFolders.push(noneFolder);\n\n    return decryptedFolders;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { FolderApiServiceAbstraction } from \"../../abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { FolderRequest } from \"../../models/request/folder.request\";\nimport { FolderResponse } from \"../../models/response/folder.response\";\n\nexport class FolderApiService implements FolderApiServiceAbstraction {\n  constructor(private folderService: InternalFolderService, private apiService: ApiService) {}\n\n  async save(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.putFolder(folder.id, request);\n    }\n\n    const data = new FolderData(response);\n    await this.folderService.upsert(data);\n  }\n\n  async delete(id: string): Promise<any> {\n    await this.deleteFolder(id);\n    await this.folderService.delete(id);\n  }\n\n  async get(id: string): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  private async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  private deleteFolder(id: string): Promise<any> {\n    return this.apiService.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n}\n","import { AccountApiService } from \"../../abstractions/account/account-api.service\";\nimport { InternalAccountService } from \"../../abstractions/account/account.service\";\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { UserVerificationService } from \"../../abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"../../types/verification\";\n\nexport class AccountApiServiceImplementation implements AccountApiService {\n  constructor(\n    private apiService: ApiService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService,\n    private accountService: InternalAccountService\n  ) {}\n\n  async deleteAccount(verification: Verification): Promise<void> {\n    try {\n      const verificationRequest = await this.userVerificationService.buildRequest(verification);\n      await this.apiService.send(\"DELETE\", \"/accounts\", verificationRequest, true, false);\n      this.accountService.delete();\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  }\n}\n","import { InternalAccountService } from \"../../abstractions/account/account.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\n\nexport class AccountServiceImplementation implements InternalAccountService {\n  constructor(private messagingService: MessagingService, private logService: LogService) {}\n\n  async delete(): Promise<void> {\n    try {\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  }\n}\n","import { BehaviorSubject, Observable } from \"rxjs\";\n\nimport { AvatarUpdateService as AvatarUpdateServiceAbstraction } from \"../../abstractions/account/avatar-update.service\";\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { UpdateAvatarRequest } from \"../../models/request/update-avatar.request\";\nimport { ProfileResponse } from \"../../models/response/profile.response\";\n\nexport class AvatarUpdateService implements AvatarUpdateServiceAbstraction {\n  private _avatarUpdate$ = new BehaviorSubject<string | null>(null);\n  avatarUpdate$: Observable<string | null> = this._avatarUpdate$.asObservable();\n\n  constructor(private apiService: ApiService, private stateService: StateService) {\n    this.loadColorFromState();\n  }\n\n  loadColorFromState(): Promise<string | null> {\n    return this.stateService.getAvatarColor().then((color) => {\n      this._avatarUpdate$.next(color);\n      return color;\n    });\n  }\n\n  pushUpdate(color: string | null): Promise<ProfileResponse | void> {\n    return this.apiService.putAvatar(new UpdateAvatarRequest(color)).then((response) => {\n      this.stateService.setAvatarColor(response.avatarColor);\n      this._avatarUpdate$.next(response.avatarColor);\n    });\n  }\n}\n","import { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/tree-node\";\nimport { CollectionView } from \"../models/view/collection.view\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    // eslint-disable-next-line\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      // eslint-disable-next-line\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","import { concatMap, Observable, Subject } from \"rxjs\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject;\n\n  protected baseUrl: string;\n  protected webVaultUrl: string;\n  protected apiUrl: string;\n  protected identityUrl: string;\n  protected iconsUrl: string;\n  protected notificationsUrl: string;\n  protected eventsUrl: string;\n  private keyConnectorUrl: string;\n  private scimUrl: string = null;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount$\n      .pipe(\n        concatMap(async () => {\n          await this.setUrlsFromStorage();\n        })\n      )\n      .subscribe();\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  getScimUrl() {\n    if (this.scimUrl != null) {\n      return this.scimUrl + \"/v2\";\n    }\n\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://scim.bitwarden.com/v2\"\n      : this.getWebVaultUrl() + \"/scim/v2\";\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    // scimUrl is not saved to storage\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    // scimUrl cannot be cleared\n    urls.scim = this.formatUrl(urls.scim) ?? this.scimUrl;\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n      // scimUrl is not saved to storage\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    this.scimUrl = urls.scim;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n      scim: this.scimUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n\n  isCloud(): boolean {\n    return [\"https://api.bitwarden.com\", \"https://vault.bitwarden.com/api\"].includes(\n      this.getApiUrl()\n    );\n  }\n}\n","import { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { Utils } from \"../misc/utils\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/set-key-connector-key.request\";\nimport { AttachmentRequest } from \"../models/request/attachment.request\";\nimport { BitPayInvoiceRequest } from \"../models/request/bit-pay-invoice.request\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipher-bulk-delete.request\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipher-bulk-move.request\";\nimport { CipherBulkShareRequest } from \"../models/request/cipher-bulk-share.request\";\nimport { CipherCollectionsRequest } from \"../models/request/cipher-collections.request\";\nimport { CipherCreateRequest } from \"../models/request/cipher-create.request\";\nimport { CipherPartialRequest } from \"../models/request/cipher-partial.request\";\nimport { CipherShareRequest } from \"../models/request/cipher-share.request\";\nimport { CipherRequest } from \"../models/request/cipher.request\";\nimport { CollectionRequest } from \"../models/request/collection.request\";\nimport { DeleteRecoverRequest } from \"../models/request/delete-recover.request\";\nimport { DeviceVerificationRequest } from \"../models/request/device-verification.request\";\nimport { DeviceRequest } from \"../models/request/device.request\";\nimport { EmailTokenRequest } from \"../models/request/email-token.request\";\nimport { EmailRequest } from \"../models/request/email.request\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergency-access-accept.request\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergency-access-confirm.request\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergency-access-invite.request\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergency-access-password.request\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergency-access-update.request\";\nimport { EventRequest } from \"../models/request/event.request\";\nimport { GroupRequest } from \"../models/request/group.request\";\nimport { IapCheckRequest } from \"../models/request/iap-check.request\";\nimport { PasswordTokenRequest } from \"../models/request/identity-token/password-token.request\";\nimport { SsoTokenRequest } from \"../models/request/identity-token/sso-token.request\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\nimport { UserApiTokenRequest } from \"../models/request/identity-token/user-api-token.request\";\nimport { ImportCiphersRequest } from \"../models/request/import-ciphers.request\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/import-organization-ciphers.request\";\nimport { KdfRequest } from \"../models/request/kdf.request\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/key-connector-user-key.request\";\nimport { KeysRequest } from \"../models/request/keys.request\";\nimport { OrganizationConnectionRequest } from \"../models/request/organization-connection.request\";\nimport { OrganizationImportRequest } from \"../models/request/organization-import.request\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organization-sponsorship-create.request\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organization-sponsorship-redeem.request\";\nimport { PasswordHintRequest } from \"../models/request/password-hint.request\";\nimport { PasswordRequest } from \"../models/request/password.request\";\nimport { PasswordlessCreateAuthRequest } from \"../models/request/passwordless-create-auth.request\";\nimport { PaymentRequest } from \"../models/request/payment.request\";\nimport { PreloginRequest } from \"../models/request/prelogin.request\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/provider-add-organization.request\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/provider-organization-create.request\";\nimport { ProviderSetupRequest } from \"../models/request/provider/provider-setup.request\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/provider-update.request\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/provider-user-accept.request\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/provider-user-bulk-confirm.request\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/provider-user-bulk.request\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/provider-user-confirm.request\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/provider-user-invite.request\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/provider-user-update.request\";\nimport { RegisterRequest } from \"../models/request/register.request\";\nimport { SecretVerificationRequest } from \"../models/request/secret-verification.request\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selection-read-only.request\";\nimport { SendAccessRequest } from \"../models/request/send-access.request\";\nimport { SendRequest } from \"../models/request/send.request\";\nimport { SetPasswordRequest } from \"../models/request/set-password.request\";\nimport { StorageRequest } from \"../models/request/storage.request\";\nimport { TaxInfoUpdateRequest } from \"../models/request/tax-info-update.request\";\nimport { TwoFactorEmailRequest } from \"../models/request/two-factor-email.request\";\nimport { TwoFactorProviderRequest } from \"../models/request/two-factor-provider.request\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/two-factor-recovery.request\";\nimport { UpdateAvatarRequest } from \"../models/request/update-avatar.request\";\nimport { UpdateDomainsRequest } from \"../models/request/update-domains.request\";\nimport { UpdateKeyRequest } from \"../models/request/update-key.request\";\nimport { UpdateProfileRequest } from \"../models/request/update-profile.request\";\nimport { UpdateTempPasswordRequest } from \"../models/request/update-temp-password.request\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/update-two-factor-authenticator.request\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/update-two-factor-duo.request\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/update-two-factor-email.request\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/update-two-factor-web-authn-delete.request\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/update-two-factor-web-authn.request\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/update-two-factor-yubio-otp.request\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verify-delete-recover.request\";\nimport { VerifyEmailRequest } from \"../models/request/verify-email.request\";\nimport { ApiKeyResponse } from \"../models/response/api-key.response\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { AttachmentResponse } from \"../models/response/attachment.response\";\nimport { AuthRequestResponse } from \"../models/response/auth-request.response\";\nimport { RegisterResponse } from \"../models/response/authentication/register.response\";\nimport { BillingHistoryResponse } from \"../models/response/billing-history.response\";\nimport { BillingPaymentResponse } from \"../models/response/billing-payment.response\";\nimport { BreachAccountResponse } from \"../models/response/breach-account.response\";\nimport { CipherResponse } from \"../models/response/cipher.response\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collection.response\";\nimport { DeviceVerificationResponse } from \"../models/response/device-verification.response\";\nimport { DomainsResponse } from \"../models/response/domains.response\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergency-access.response\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { EventResponse } from \"../models/response/event.response\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/group.response\";\nimport { IdentityCaptchaResponse } from \"../models/response/identity-captcha.response\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/key-connector-user-key.response\";\nimport { ListResponse } from \"../models/response/list.response\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organization-connection.response\";\nimport { OrganizationExportResponse } from \"../models/response/organization-export.response\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organization-sponsorship-sync-status.response\";\nimport { PaymentResponse } from \"../models/response/payment.response\";\nimport { PlanResponse } from \"../models/response/plan.response\";\nimport { PolicyResponse } from \"../models/response/policy.response\";\nimport { PreloginResponse } from \"../models/response/prelogin.response\";\nimport { ProfileResponse } from \"../models/response/profile.response\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/provider-organization.response\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/provider-user-bulk-public-key.response\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/provider-user-bulk.response\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/provider-user.response\";\nimport { ProviderResponse } from \"../models/response/provider/provider.response\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selection-read-only.response\";\nimport { SendAccessResponse } from \"../models/response/send-access.response\";\nimport { SendFileDownloadDataResponse } from \"../models/response/send-file-download-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\nimport { SendResponse } from \"../models/response/send.response\";\nimport { SsoPreValidateResponse } from \"../models/response/sso-pre-validate.response\";\nimport { SubscriptionResponse } from \"../models/response/subscription.response\";\nimport { SyncResponse } from \"../models/response/sync.response\";\nimport { TaxInfoResponse } from \"../models/response/tax-info.response\";\nimport { TaxRateResponse } from \"../models/response/tax-rate.response\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/two-factor-authenticator.response\";\nimport { TwoFactorDuoResponse } from \"../models/response/two-factor-duo.response\";\nimport { TwoFactorEmailResponse } from \"../models/response/two-factor-email.response\";\nimport { TwoFactorProviderResponse } from \"../models/response/two-factor-provider.response\";\nimport { TwoFactorRecoverResponse } from \"../models/response/two-factor-recover.response\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/two-factor-web-authn.response\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/two-factor-yubi-key.response\";\nimport { UserKeyResponse } from \"../models/response/user-key.response\";\nimport { SendAccessView } from \"../models/view/send-access.view\";\n\n/**\n * @deprecated The `ApiService` class is deprecated and calls should be extracted into individual\n * api services. The `send` method is still allowed to be used within api services. For background\n * of this decision please read https://contributing.bitwarden.com/architecture/adr/refactor-api-service.\n */\nexport class ApiService implements ApiServiceAbstraction {\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private appIdService: AppIdService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: UserApiTokenRequest | PasswordTokenRequest | SsoTokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n\n    const identityToken =\n      request instanceof UserApiTokenRequest\n        ? request.toIdentityToken()\n        : request.toIdentityToken(this.platformUtilsService.getClientType());\n\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(identityToken),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken();\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  async postAuthRequest(request: PasswordlessCreateAuthRequest): Promise<AuthRequestResponse> {\n    const r = await this.send(\"POST\", \"/auth-requests/\", request, false, true);\n    return new AuthRequestResponse(r);\n  }\n\n  async getAuthResponse(id: string, accessCode: string): Promise<AuthRequestResponse> {\n    const path = `/auth-requests/${id}/response?code=${accessCode}`;\n    const r = await this.send(\"GET\", path, null, false, true);\n    return new AuthRequestResponse(r);\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async putAvatar(request: UpdateAvatarRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/avatar\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/prelogin\",\n      request,\n      false,\n      true,\n      this.environmentService.getIdentityUrl()\n    );\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  async postRegister(request: RegisterRequest): Promise<RegisterResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/register\",\n      request,\n      false,\n      true,\n      this.environmentService.getIdentityUrl()\n    );\n    return new RegisterResponse(r);\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<void> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Account Billing APIs\n\n  async getUserBillingHistory(): Promise<BillingHistoryResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/history\", null, true, true);\n    return new BillingHistoryResponse(r);\n  }\n\n  async getUserBillingPayment(): Promise<BillingPaymentResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/payment-method\", null, true, true);\n    return new BillingPaymentResponse(r);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getFullCipherDetails(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/details\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putPartialCipher(id: string, request: CipherPartialRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/partial\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionGroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionGroupDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new GroupDetailsResponse(r);\n  }\n\n  async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, GroupResponse);\n  }\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroup(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, false, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  async getDeviceVerificationSettings(): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/two-factor/get-device-verification-settings\",\n      null,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  async putDeviceVerificationSettings(\n    request: DeviceVerificationRequest\n  ): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/two-factor/device-verification-settings\",\n      request,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  async getKnownDevice(email: string, deviceIdentifier: string): Promise<boolean> {\n    const path = `/devices/knowndevice/${email}/${deviceIdentifier}`;\n    const r = await this.send(\"GET\", path, null, false, true);\n    return r as boolean;\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getCloudCommunicationsEnabled(): Promise<boolean> {\n    const r = await this.send(\"GET\", \"/organizations/connections/enabled\", null, true, true);\n    return r as boolean;\n  }\n\n  async getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"GET\", `/organizations/connections/${id}/${type}`, null, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"POST\", \"/organizations/connections/\", request, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId?: string\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/connections/\" + organizationConnectionId,\n      request,\n      true,\n      true\n    );\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async deleteOrganizationConnection(id: string): Promise<void> {\n    return this.send(\"DELETE\", \"/organizations/connections/\" + id, null, true, false);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getOrganizationExport(organizationId: string): Promise<OrganizationExportResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/export\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationExportResponse(r);\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    request.headers.set(\"Bitwarden-Client-Name\", this.platformUtilsService.getClientType());\n    request.headers.set(\n      \"Bitwarden-Client-Version\",\n      await this.platformUtilsService.getApplicationVersionNumber()\n    );\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<SsoPreValidateResponse> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      const body = await response.json();\n      return new SsoPreValidateResponse(body);\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoredOrgId +\n        \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getSponsorshipSyncStatus(\n    sponsoredOrgId: string\n  ): Promise<OrganizationSponsorshipSyncStatusResponse> {\n    const response = await this.send(\n      \"GET\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/sync-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSponsorshipSyncStatusResponse(response);\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const appId = await this.appIdService.getAppId();\n    const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n    const tokenRequest = new UserApiTokenRequest(\n      clientId,\n      clientSecret,\n      new TokenTwoFactorRequest(),\n      deviceRequest\n    );\n\n    const response = await this.postIdentityToken(tokenRequest);\n    if (!(response instanceof IdentityTokenResponse)) {\n      throw new Error(\"Invalid response received when refreshing api token\");\n    }\n\n    await this.tokenService.setToken(response.accessToken);\n  }\n\n  async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    const responseType = response.headers.get(\"content-type\");\n    const responseIsJson = responseType != null && responseType.indexOf(\"application/json\") !== -1;\n    if (hasResponse && response.status === 200 && responseIsJson) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    if (authed) {\n      if (\n        response.status === 401 ||\n        response.status === 403 ||\n        (tokenError &&\n          response.status === 400 &&\n          responseJson != null &&\n          responseJson.error === \"invalid_grant\")\n      ) {\n        await this.logoutCallback(true);\n        return null;\n      }\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { FileUploadType } from \"../enums/fileUploadType\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService();\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { Utils } from \"../misc/utils\";\nimport { AccountSettingsSettings } from \"../models/domain/account\";\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  protected _settings: BehaviorSubject<AccountSettingsSettings> = new BehaviorSubject({});\n\n  settings$ = this._settings.asObservable();\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._settings.next({});\n            return;\n          }\n\n          const data = await this.stateService.getSettings();\n\n          this._settings.next(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    const settings = this._settings.getValue() ?? {};\n\n    settings.equivalentDomains = equivalentDomains;\n\n    this._settings.next(settings);\n    await this.stateService.setSettings(settings);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._settings.next({});\n    }\n\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { PolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"../../abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { PolicyType } from \"../../enums/policyType\";\n\nexport class VaultTimeoutSettingsService implements VaultTimeoutSettingsServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CollectionService } from \"../../abstractions/collection.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { FolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { SearchService } from \"../../abstractions/search.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../../abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"../../abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { AuthenticationStatus } from \"../../enums/authenticationStatus\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private authService: AuthService,\n    private vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (expired: boolean, userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    const accounts = await firstValueFrom(this.stateService.accounts$);\n    for (const userId in accounts) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.vaultTimeoutSettingsService.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      await this.folderService.clearCache();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(false, userId);\n    }\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    const authStatus = await this.authService.getAuthStatus(userId);\n    if (\n      authStatus === AuthenticationStatus.Locked ||\n      authStatus === AuthenticationStatus.LoggedOut\n    ) {\n      return false;\n    }\n\n    const vaultTimeout = await this.vaultTimeoutSettingsService.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(userId);\n  }\n}\n","import * as papa from \"papaparse\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport {\n  ExportFormat,\n  ExportService as ExportServiceAbstraction,\n} from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"../enums/kdfType\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\nimport { CipherWithIdExport as CipherExport } from \"../models/export/cipher-with-ids.export\";\nimport { CollectionWithIdExport as CollectionExport } from \"../models/export/collection-with-id.export\";\nimport { EventExport } from \"../models/export/event.export\";\nimport { FolderWithIdExport as FolderExport } from \"../models/export/folder-with-id.export\";\nimport { CollectionDetailsResponse } from \"../models/response/collection.response\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { CollectionView } from \"../models/view/collection.view\";\nimport { EventView } from \"../models/view/event.view\";\nimport { FolderView } from \"../models/view/folder.view\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  async getExport(format: ExportFormat = \"csv\", organizationId?: string): Promise<string> {\n    if (organizationId) {\n      return await this.getOrganizationExport(organizationId, format);\n    }\n\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getPasswordProtectedExport(password: string, organizationId?: string): Promise<string> {\n    const clearText = organizationId\n      ? await this.getOrganizationExport(organizationId, \"json\")\n      : await this.getExport(\"json\");\n\n    const salt = Utils.fromBufferToB64(await this.cryptoFunctionService.randomBytes(16));\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makePinKey(\n      password,\n      salt,\n      KdfType.PBKDF2_SHA256,\n      kdfIterations\n    );\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), key);\n    const encText = await this.cryptoService.encrypt(clearText, key);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      passwordProtected: true,\n      salt: salt,\n      kdfIterations: kdfIterations,\n      kdfType: KdfType.PBKDF2_SHA256,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      data: encText.encryptedString,\n    };\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: ExportFormat = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new EventExport(e)));\n  }\n\n  getFileName(prefix: string = null, extension = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAllDecryptedFromState().then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAllFromState().then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getOrganizationExport(organizationId).then((exportData) => {\n        const exportPromises: any = [];\n        if (exportData != null) {\n          if (exportData.collections != null && exportData.collections.length > 0) {\n            exportData.collections.forEach((c) => {\n              const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n              exportPromises.push(\n                collection.decrypt().then((decCol) => {\n                  decCollections.push(decCol);\n                })\n              );\n            });\n          }\n          if (exportData.ciphers != null && exportData.ciphers.length > 0) {\n            exportData.ciphers\n              .filter((c) => c.deletedDate === null)\n              .forEach((c) => {\n                const cipher = new Cipher(new CipherData(c));\n                exportPromises.push(\n                  cipher.decrypt().then((decCipher) => {\n                    decCiphers.push(decCipher);\n                  })\n                );\n              });\n          }\n        }\n        return Promise.all(exportPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync/sync.service.abstraction\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { NotificationType } from \"../enums/notificationType\";\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notification.response\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService,\n    private authService: AuthService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    // eslint-disable-next-line\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback(true);\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    const authStatus = await this.authService.getAuthStatus();\n    return authStatus >= AuthenticationStatus.Unlocked;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { Utils } from \"../misc/utils\";\nimport { DecryptParameters } from \"../models/domain/decrypt-parameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n\n  constructor(win: Window | typeof global) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if (algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = forge.hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = forge.hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = forge.util.createBuffer(parameters.data);\n    const decipher = forge.cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString();\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { EventUploadService as EventUploadServiceAbstraction } from \"../../abstractions/event/event-upload.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { EventRequest } from \"../../models/request/event.request\";\n\nexport class EventUploadService implements EventUploadServiceAbstraction {\n  private inited = false;\n  constructor(\n    private apiService: ApiService,\n    private stateService: StateService,\n    private logService: LogService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      req.organizationId = e.organizationId;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","import { CipherService } from \"../../abstractions/cipher.service\";\nimport { EventCollectionService as EventCollectionServiceAbstraction } from \"../../abstractions/event/event-collection.service\";\nimport { EventUploadService } from \"../../abstractions/event/event-upload.service\";\nimport { OrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { EventType } from \"../../enums/eventType\";\nimport { EventData } from \"../../models/data/event.data\";\n\nexport class EventCollectionService implements EventCollectionServiceAbstraction {\n  constructor(\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private eventUploadService: EventUploadService\n  ) {}\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false,\n    organizationId: string = null\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    if (organizationId != null) {\n      if (!orgIds.has(organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    event.organizationId = organizationId;\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.eventUploadService.uploadEvents();\n    }\n  }\n}\n","import { of, concatMap, BehaviorSubject, Observable, map } from \"rxjs\";\n\nimport { OrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { InternalPolicyService as InternalPolicyServiceAbstraction } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PolicyType } from \"../../enums/policyType\";\nimport { Utils } from \"../../misc/utils\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/reset-password-policy-options\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport class PolicyService implements InternalPolicyServiceAbstraction {\n  protected _policies: BehaviorSubject<Policy[]> = new BehaviorSubject([]);\n\n  policies$ = this._policies.asObservable();\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._policies.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getEncryptedPolicies();\n\n          await this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  /**\n   * @deprecated Do not call this, use the policies$ observable collection\n   */\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        if (Object.prototype.hasOwnProperty.call(diskPolicies, id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  masterPasswordPolicyOptions$(policies?: Policy[]): Observable<MasterPasswordPolicyOptions> {\n    const observable = policies ? of(policies) : this.policies$;\n    return observable.pipe(\n      map((obsPolicies) => {\n        let enforcedOptions: MasterPasswordPolicyOptions = null;\n        const filteredPolicies = obsPolicies.filter((p) => p.type === PolicyType.MasterPassword);\n\n        if (filteredPolicies == null || filteredPolicies.length === 0) {\n          return enforcedOptions;\n        }\n\n        filteredPolicies.forEach((currentPolicy) => {\n          if (!currentPolicy.enabled || currentPolicy.data == null) {\n            return;\n          }\n\n          if (enforcedOptions == null) {\n            enforcedOptions = new MasterPasswordPolicyOptions();\n          }\n\n          if (\n            currentPolicy.data.minComplexity != null &&\n            currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n          ) {\n            enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n          }\n\n          if (\n            currentPolicy.data.minLength != null &&\n            currentPolicy.data.minLength > enforcedOptions.minLength\n          ) {\n            enforcedOptions.minLength = currentPolicy.data.minLength;\n          }\n\n          if (currentPolicy.data.requireUpper) {\n            enforcedOptions.requireUpper = true;\n          }\n\n          if (currentPolicy.data.requireLower) {\n            enforcedOptions.requireLower = true;\n          }\n\n          if (currentPolicy.data.requireNumbers) {\n            enforcedOptions.requireNumbers = true;\n          }\n\n          if (currentPolicy.data.requireSpecial) {\n            enforcedOptions.requireSpecial = true;\n          }\n        });\n\n        return enforcedOptions;\n      })\n    );\n  }\n\n  policyAppliesToActiveUser$(policyType: PolicyType, policyFilter?: (policy: Policy) => boolean) {\n    return this.policies$.pipe(\n      concatMap(async (policies) => {\n        const userId = await this.stateService.getUserId();\n        return await this.checkPoliciesThatApplyToUser(policies, policyType, policyFilter, userId);\n      })\n    );\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    // eslint-disable-next-line\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n\n    return this.checkPoliciesThatApplyToUser(policies, policyType, policyFilter, userId);\n  }\n\n  async upsert(policy: PolicyData): Promise<any> {\n    let policies = await this.stateService.getEncryptedPolicies();\n    if (policies == null) {\n      policies = {};\n    }\n\n    policies[policy.id] = policy;\n\n    await this.updateObservables(policies);\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<void> {\n    await this.updateObservables(policies);\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._policies.next([]);\n    }\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n\n  private async updateObservables(policiesMap: { [id: string]: PolicyData }) {\n    const policies = Object.values(policiesMap || {}).map((f) => new Policy(f));\n\n    this._policies.next(policies);\n  }\n\n  private async checkPoliciesThatApplyToUser(\n    policies: Policy[],\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const organizations = await this.organizationService.getAll(userId);\n    const filteredPolicies = policies.filter(\n      (p) => p.type === policyType && p.enabled && (policyFilter == null || policyFilter(p))\n    );\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        policySet.has(o.id) &&\n        !this.isExcemptFromPolicies(o, policyType)\n    );\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { OrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { PolicyApiServiceAbstraction } from \"../../abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { PolicyRequest } from \"../../models/request/policy.request\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport class PolicyApiService implements PolicyApiServiceAbstraction {\n  constructor(\n    private policyService: InternalPolicyService,\n    private apiService: ApiService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.policyService.mapPoliciesFromToken(response);\n    return await firstValueFrom(this.policyService.masterPasswordPolicyOptions$(policies));\n  }\n\n  async putPolicy(organizationId: string, type: PolicyType, request: PolicyRequest): Promise<any> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    const response = new PolicyResponse(r);\n    const data = new PolicyData(response);\n    await this.policyService.upsert(data);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SEND_KDF_ITERATIONS } from \"../enums/kdfType\";\nimport { SendType } from \"../enums/sendType\";\nimport { Utils } from \"../misc/utils\";\nimport { SendData } from \"../models/data/send.data\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/send-file\";\nimport { SendText } from \"../models/domain/send-text\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { SendRequest } from \"../models/request/send.request\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { SendResponse } from \"../models/response/send.response\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    // eslint-disable-next-line\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      // eslint-disable-next-line\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { Utils } from \"../misc/utils\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/set-key-connector-key.request\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/key-connector-user-key.request\";\nimport { KeysRequest } from \"../models/request/keys.request\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private logoutCallback: (expired: boolean, userId?: string) => void\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async convertNewSsoUserToKeyConnector(tokenResponse: IdentityTokenResponse, orgId: string) {\n    const { kdf, kdfIterations, keyConnectorUrl } = tokenResponse;\n    const password = await this.cryptoFunctionService.randomBytes(64);\n\n    const k = await this.cryptoService.makeKey(\n      Utils.fromBufferToB64(password),\n      await this.tokenService.getEmail(),\n      kdf,\n      kdfIterations\n    );\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n    await this.cryptoService.setKey(k);\n\n    const encKey = await this.cryptoService.makeEncKey(k);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n    const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(keyConnectorUrl, keyConnectorRequest);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    const keys = new KeysRequest(pubKey, privKey.encryptedString);\n    const setPasswordRequest = new SetKeyConnectorKeyRequest(\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      orgId,\n      keys\n    );\n    await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n\n  private handleKeyConnectorError(e: any) {\n    this.logService.error(e);\n    if (this.logoutCallback != null) {\n      this.logoutCallback(false);\n    }\n    throw new Error(\"Key Connector error\");\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"../../abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"../../enums/verificationType\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verify-otp.request\";\nimport { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { Verification } from \"../../types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Use it to verify the input collected by UserVerificationComponent.\n */\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private userVerificationApiService: UserVerificationApiServiceAbstraction\n  ) {}\n\n  /**\n   * Create a new request model to be used for server-side verification\n   * @param verification User-supplied verification data (Master Password or OTP)\n   * @param requestClass The request model to create\n   * @param alreadyHashed Whether the master password is already hashed\n   */\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  /**\n   * Used to verify the Master Password client-side, or send the OTP to the server for verification (with no other data)\n   * Generally used for client-side verification only.\n   * @param verification User-supplied verification data (Master Password or OTP)\n   */\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.userVerificationApiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.userVerificationApiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPasswordRequired\"));\n      }\n    }\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { InternalOrganizationService as InternalOrganizationServiceAbstraction } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { OrganizationData } from \"../../models/data/organization.data\";\nimport { Organization } from \"../../models/domain/organization\";\n\nexport class OrganizationService implements InternalOrganizationServiceAbstraction {\n  protected _organizations = new BehaviorSubject<Organization[]>([]);\n\n  organizations$ = this._organizations.asObservable();\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (!unlocked) {\n            this._organizations.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getOrganizations();\n          this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizationsMap = await this.stateService.getOrganizations({ userId: userId });\n    return Object.values(organizationsMap || {}).map((o) => new Organization(o));\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const organizations = this._organizations.getValue();\n    return organizations.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n\n  hasOrganizations(): boolean {\n    const organizations = this._organizations.getValue();\n    return organizations.length > 0;\n  }\n\n  async upsert(organization: OrganizationData): Promise<void> {\n    let organizations = await this.stateService.getOrganizations();\n    if (organizations == null) {\n      organizations = {};\n    }\n\n    organizations[organization.id] = organization;\n\n    await this.replace(organizations);\n  }\n\n  async delete(id: string): Promise<void> {\n    const organizations = await this.stateService.getOrganizations();\n    if (organizations == null) {\n      return;\n    }\n\n    if (organizations[id] == null) {\n      return;\n    }\n\n    delete organizations[id];\n    await this.replace(organizations);\n  }\n\n  get(id: string): Organization {\n    const organizations = this._organizations.getValue();\n\n    return organizations.find((organization) => organization.id === id);\n  }\n\n  /**\n   * @deprecated For the CLI only\n   * @param id id of the organization\n   */\n  async getFromState(id: string): Promise<Organization> {\n    const organizationsMap = await this.stateService.getOrganizations();\n    const organization = organizationsMap[id];\n    if (organization == null) {\n      return null;\n    }\n\n    return new Organization(organization);\n  }\n\n  getByIdentifier(identifier: string): Organization {\n    const organizations = this._organizations.getValue();\n\n    return organizations.find((organization) => organization.identifier === identifier);\n  }\n\n  async replace(organizations: { [id: string]: OrganizationData }) {\n    await this.stateService.setOrganizations(organizations);\n    this.updateObservables(organizations);\n  }\n\n  private updateObservables(organizationsMap: { [id: string]: OrganizationData }) {\n    const organizations = Object.values(organizationsMap || {}).map((o) => new Organization(o));\n    this._organizations.next(organizations);\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { OrganizationUserService } from \"../../abstractions/organization-user/organization-user.service\";\nimport {\n  OrganizationUserAcceptRequest,\n  OrganizationUserBulkConfirmRequest,\n  OrganizationUserConfirmRequest,\n  OrganizationUserInviteRequest,\n  OrganizationUserResetPasswordEnrollmentRequest,\n  OrganizationUserResetPasswordRequest,\n  OrganizationUserUpdateGroupsRequest,\n  OrganizationUserUpdateRequest,\n} from \"../../abstractions/organization-user/requests\";\nimport {\n  OrganizationUserBulkPublicKeyResponse,\n  OrganizationUserBulkResponse,\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../../abstractions/organization-user/responses\";\nimport { ListResponse } from \"../../models/response/list.response\";\n\nimport { OrganizationUserBulkRequest } from \"./requests\";\n\nexport class OrganizationUserServiceImplementation implements OrganizationUserService {\n  constructor(private apiService: ApiService) {}\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getAllUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.apiService.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  revokeOrganizationUser(organizationId: string, id: string): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/revoke\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async revokeManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/revoke\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  restoreOrganizationUser(organizationId: string, id: string): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/restore\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async restoreManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/restore\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    // eslint-disable-next-line\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      // eslint-disable-next-line\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","import { UntypedFormGroup, ValidationErrors } from \"@angular/forms\";\n\nimport {\n  FormGroupControls,\n  FormValidationErrorsService as FormValidationErrorsAbstraction,\n  AllValidationErrors,\n} from \"../abstractions/formValidationErrors.service\";\n\nexport class FormValidationErrorsService implements FormValidationErrorsAbstraction {\n  getFormValidationErrors(controls: FormGroupControls): AllValidationErrors[] {\n    let errors: AllValidationErrors[] = [];\n    Object.keys(controls).forEach((key) => {\n      const control = controls[key];\n      if (control instanceof UntypedFormGroup) {\n        errors = errors.concat(this.getFormValidationErrors(control.controls));\n      }\n\n      const controlErrors: ValidationErrors = controls[key].errors;\n      if (controlErrors !== null) {\n        Object.keys(controlErrors).forEach((keyError) => {\n          errors.push({\n            controlName: key,\n            errorName: keyError,\n          });\n        });\n      }\n    });\n\n    return errors;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verify-otp.request\";\n\nexport class UserVerificationApiService implements UserVerificationApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n  async postAccountRequestOTP(): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { OrganizationApiServiceAbstraction } from \"../../abstractions/organization/organization-api.service.abstraction\";\nimport { SyncService } from \"../../abstractions/sync/sync.service.abstraction\";\nimport { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\nimport { ImportDirectoryRequest } from \"../../models/request/import-directory.request\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organization-api-key.request\";\nimport { OrganizationCreateRequest } from \"../../models/request/organization-create.request\";\nimport { OrganizationKeysRequest } from \"../../models/request/organization-keys.request\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organization-subscription-update.request\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organization-tax-info-update.request\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organization-update.request\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organization-upgrade.request\";\nimport { OrganizationSsoRequest } from \"../../models/request/organization/organization-sso.request\";\nimport { PaymentRequest } from \"../../models/request/payment.request\";\nimport { SeatRequest } from \"../../models/request/seat.request\";\nimport { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { StorageRequest } from \"../../models/request/storage.request\";\nimport { VerifyBankRequest } from \"../../models/request/verify-bank.request\";\nimport { ApiKeyResponse } from \"../../models/response/api-key.response\";\nimport { BillingResponse } from \"../../models/response/billing.response\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organization-api-key-information.response\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organization-auto-enroll-status.response\";\nimport { OrganizationKeysResponse } from \"../../models/response/organization-keys.response\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organization-subscription.response\";\nimport { OrganizationResponse } from \"../../models/response/organization.response\";\nimport { OrganizationSsoResponse } from \"../../models/response/organization/organization-sso.response\";\nimport { PaymentResponse } from \"../../models/response/payment.response\";\nimport { TaxInfoResponse } from \"../../models/response/tax-info.response\";\n\nexport class OrganizationApiService implements OrganizationApiServiceAbstraction {\n  constructor(private apiService: ApiService, private syncService: SyncService) {}\n\n  async get(id: string): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getBilling(id: string): Promise<BillingResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/billing\",\n      null,\n      true,\n      true\n    );\n    return new BillingResponse(r);\n  }\n\n  async getSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/subscription\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getLicense(id: string, installationId: string): Promise<unknown> {\n    return this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getAutoEnrollStatus(identifier: string): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  async create(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"POST\", \"/organizations\", request, true, true);\n    // Forcing a sync will notify organization service that they need to repull\n    await this.syncService.fullSync(true);\n    return new OrganizationResponse(r);\n  }\n\n  async createLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async save(id: string, request: OrganizationUpdateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    const data = new OrganizationResponse(r);\n    await this.syncService.fullSync(true);\n    return data;\n  }\n\n  async updatePayment(id: string, request: PaymentRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  async upgrade(id: string, request: OrganizationUpgradeRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/upgrade\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/subscription\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async updateSeats(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/seat\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/storage\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async verifyBank(id: string, request: VerifyBankRequest): Promise<void> {\n    await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/verify-bank\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async cancel(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  async reinstate(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  async leave(id: string): Promise<void> {\n    await this.apiService.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n    await this.syncService.fullSync(true);\n  }\n\n  async delete(id: string, request: SecretVerificationRequest): Promise<void> {\n    await this.apiService.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n    await this.syncService.fullSync(true);\n  }\n\n  async updateLicense(id: string, data: FormData): Promise<void> {\n    await this.apiService.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async importDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/import\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getOrCreateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getApiKeyInformation(\n    id: string,\n    organizationApiKeyType: OrganizationApiKeyType = null\n  ): Promise<ListResponse<OrganizationApiKeyInformationResponse>> {\n    const uri =\n      organizationApiKeyType === null\n        ? \"/organizations/\" + id + \"/api-key-information\"\n        : \"/organizations/\" + id + \"/api-key-information/\" + organizationApiKeyType;\n    const r = await this.apiService.send(\"GET\", uri, null, true, true);\n    return new ListResponse(r, OrganizationApiKeyInformationResponse);\n  }\n\n  async rotateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async updateTaxInfo(id: string, request: OrganizationTaxInfoUpdateRequest): Promise<void> {\n    // Can't broadcast anything because the response doesn't have content\n    return this.apiService.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  async getKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async updateKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/keys\",\n      request,\n      true,\n      true\n    );\n    // Not broadcasting anything because data on this response doesn't correspond to `Organization`\n    return new OrganizationKeysResponse(r);\n  }\n\n  async getSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async updateSso(id: string, request: OrganizationSsoRequest): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/sso\",\n      request,\n      true,\n      true\n    );\n    // Not broadcasting anything because data on this response doesn't correspond to `Organization`\n    return new OrganizationSsoResponse(r);\n  }\n}\n","import { Subject } from \"rxjs\";\n\nimport { SyncNotifierService as SyncNotifierServiceAbstraction } from \"../../abstractions/sync/syncNotifier.service.abstraction\";\nimport { SyncEventArgs } from \"../../types/syncEventArgs\";\n\n/**\n * This class should most likely have 0 dependencies because it will hopefully\n * be rolled into SyncService once upon a time.\n */\nexport class SyncNotifierService implements SyncNotifierServiceAbstraction {\n  private _sync = new Subject<SyncEventArgs>();\n\n  sync$ = this._sync.asObservable();\n\n  next(event: SyncEventArgs): void {\n    this._sync.next(event);\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { ServerConfig } from \"./server-config\";\n\nexport abstract class ConfigServiceAbstraction {\n  serverConfig$: Observable<ServerConfig | null>;\n}\n","import { BehaviorSubject, concatMap, map, switchMap, timer, EMPTY } from \"rxjs\";\n\nimport { ConfigApiServiceAbstraction } from \"../../abstractions/config/config-api.service.abstraction\";\nimport { ConfigServiceAbstraction } from \"../../abstractions/config/config.service.abstraction\";\nimport { ServerConfig } from \"../../abstractions/config/server-config\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { ServerConfigData } from \"../../models/data/server-config.data\";\n\nexport class ConfigService implements ConfigServiceAbstraction {\n  private _serverConfig = new BehaviorSubject<ServerConfig | null>(null);\n  serverConfig$ = this._serverConfig.asObservable();\n\n  constructor(\n    private stateService: StateService,\n    private configApiService: ConfigApiServiceAbstraction\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        switchMap((unlocked) => {\n          if (!unlocked) {\n            this._serverConfig.next(null);\n            return EMPTY;\n          }\n\n          // Re-fetch the server config every hour\n          return timer(0, 3600 * 1000).pipe(map(() => unlocked));\n        }),\n        concatMap(async (unlocked) => {\n          return unlocked ? await this.buildServerConfig() : null;\n        })\n      )\n      .subscribe((serverConfig) => {\n        this._serverConfig.next(serverConfig);\n      });\n  }\n\n  private async buildServerConfig(): Promise<ServerConfig> {\n    const data = await this.stateService.getServerConfig();\n    const domain = data ? new ServerConfig(data) : null;\n\n    if (domain == null || !domain.isValid() || domain.expiresSoon()) {\n      const value = await this.fetchServerConfig();\n      return value ?? domain;\n    }\n\n    return domain;\n  }\n\n  private async fetchServerConfig(): Promise<ServerConfig> {\n    try {\n      const response = await this.configApiService.get();\n\n      if (response != null) {\n        const data = new ServerConfigData(response);\n        await this.stateService.setServerConfig(data);\n        return new ServerConfig(data);\n      }\n    } catch {\n      return null;\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { ConfigApiServiceAbstraction as ConfigApiServiceAbstraction } from \"../../abstractions/config/config-api.service.abstraction\";\nimport { ServerConfigResponse } from \"../../models/response/server-config.response\";\n\nexport class ConfigApiService implements ConfigApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  async get(): Promise<ServerConfigResponse> {\n    const r = await this.apiService.send(\"GET\", \"/config\", null, true, true);\n    return new ServerConfigResponse(r);\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { ValidationService as ValidationServiceAbstraction } from \"../abstractions/validation.service\";\nimport { ErrorResponse } from \"../models/response/error.response\";\n\nexport class ValidationService implements ValidationServiceAbstraction {\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  showError(data: any): string[] {\n    const defaultErrorMessage = this.i18nService.t(\"unexpectedError\");\n    let errors: string[] = [];\n\n    if (data != null && typeof data === \"string\") {\n      errors.push(data);\n    } else if (data == null || typeof data !== \"object\") {\n      errors.push(defaultErrorMessage);\n    } else if (data.validationErrors != null) {\n      errors = errors.concat((data as ErrorResponse).getAllMessages());\n    } else {\n      errors.push(data.message ? data.message : defaultErrorMessage);\n    }\n\n    if (errors.length === 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors[0]);\n    } else if (errors.length > 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors, {\n        timeout: 5000 * errors.length,\n      });\n    }\n\n    return errors;\n  }\n}\n","import {\n  AbstractStorageService,\n  MemoryStorageServiceInterface,\n} from \"../abstractions/storage.service\";\n\nexport class MemoryStorageService\n  extends AbstractStorageService\n  implements MemoryStorageServiceInterface\n{\n  private store = new Map<string, any>();\n\n  get<T>(key: string): Promise<T> {\n    if (this.store.has(key)) {\n      const obj = this.store.get(key);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string): Promise<boolean> {\n    return (await this.get(key)) != null;\n  }\n\n  save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      return this.remove(key);\n    }\n    this.store.set(key, obj);\n    return Promise.resolve();\n  }\n\n  remove(key: string): Promise<any> {\n    this.store.delete(key);\n    return Promise.resolve();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\n@Injectable()\nexport class BroadcasterMessagingService implements MessagingService {\n  constructor(private broadcasterService: BroadcasterService) {}\n\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    this.broadcasterService.send(message);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"@bitwarden/common/enums/htmlStorageLocation\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storage-options\";\n\n@Injectable()\nexport class HtmlStorageService implements AbstractStorageService {\n  get defaultOptions(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Session };\n  }\n\n  get<T>(key: string, options: StorageOptions = this.defaultOptions): Promise<T> {\n    let json: string = null;\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        json = window.localStorage.getItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        json = window.sessionStorage.getItem(key);\n        break;\n    }\n\n    if (json != null) {\n      const obj = JSON.parse(json);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string, options: StorageOptions = this.defaultOptions): Promise<boolean> {\n    return (await this.get(key, options)) != null;\n  }\n\n  save(key: string, obj: any, options: StorageOptions = this.defaultOptions): Promise<any> {\n    if (obj == null) {\n      return this.remove(key, options);\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const json = JSON.stringify(obj);\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.setItem(key, json);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.setItem(key, json);\n        break;\n    }\n    return Promise.resolve();\n  }\n\n  remove(key: string, options: StorageOptions = this.defaultOptions): Promise<any> {\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.removeItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.removeItem(key);\n        break;\n    }\n    return Promise.resolve();\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\n\nexport class ContainerService {\n  constructor(private cryptoService: CryptoService, private encryptService: EncryptService) {}\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  /**\n   * @throws Will throw if CryptoService was not instantiated and provided to the ContainerService constructor\n   */\n  getCryptoService(): CryptoService {\n    if (this.cryptoService == null) {\n      throw new Error(\"ContainerService.cryptoService not initialized.\");\n    }\n    return this.cryptoService;\n  }\n\n  /**\n   * @throws Will throw if EncryptService was not instantiated and provided to the ContainerService constructor\n   */\n  getEncryptService(): EncryptService {\n    if (this.encryptService == null) {\n      throw new Error(\"ContainerService.encryptService not initialized.\");\n    }\n    return this.encryptService;\n  }\n}\n","import { Inject, Injectable } from \"@angular/core\";\n\nimport { WINDOW } from \"@bitwarden/angular/services/injection-tokens\";\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EncryptService } from \"@bitwarden/common/abstractions/encrypt.service\";\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventUploadService as EventUploadServiceAbstraction } from \"@bitwarden/common/abstractions/event/event-upload.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { ContainerService } from \"@bitwarden/common/services/container.service\";\nimport { EventUploadService } from \"@bitwarden/common/services/event/event-upload.service\";\nimport { VaultTimeoutService as VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeout.service\";\n\nimport { I18nService } from \"./i18n.service\";\n\n@Injectable()\nexport class InitService {\n  constructor(\n    @Inject(WINDOW) private win: Window,\n    private environmentService: EnvironmentServiceAbstraction,\n    private notificationsService: NotificationsServiceAbstraction,\n    private vaultTimeoutService: VaultTimeoutServiceAbstraction,\n    private i18nService: I18nServiceAbstraction,\n    private eventUploadService: EventUploadServiceAbstraction,\n    private twoFactorService: TwoFactorServiceAbstraction,\n    private stateService: StateServiceAbstraction,\n    private cryptoService: CryptoServiceAbstraction,\n    private themingService: AbstractThemingService,\n    private encryptService: EncryptService\n  ) {}\n\n  init() {\n    return async () => {\n      await this.stateService.init();\n\n      const urls = process.env.URLS as Urls;\n      urls.base ??= this.win.location.origin;\n      this.environmentService.setUrls(urls);\n\n      setTimeout(() => this.notificationsService.init(), 3000);\n      (this.vaultTimeoutService as VaultTimeoutService).init(true);\n      const locale = await this.stateService.getLocale();\n      await (this.i18nService as I18nService).init(locale);\n      (this.eventUploadService as EventUploadService).init(true);\n      this.twoFactorService.init();\n      const htmlEl = this.win.document.documentElement;\n      htmlEl.classList.add(\"locale_\" + this.i18nService.translationLocale);\n      await this.themingService.monitorThemeChanges();\n      const containerService = new ContainerService(this.cryptoService, this.encryptService);\n      containerService.attachToGlobal(this.win);\n    };\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, Injectable, Injector } from \"@angular/core\";\nimport * as jq from \"jquery\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService as BaseModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Injectable()\nexport class ModalService extends BaseModalService {\n  el: any = null;\n  modalOpen = false;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    applicationRef: ApplicationRef,\n    injector: Injector,\n    private messagingService: MessagingService\n  ) {\n    super(componentFactoryResolver, applicationRef, injector);\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    modalRef.onCreated.pipe(first()).subscribe(() => {\n      const modals = Array.from(document.querySelectorAll(\".modal\"));\n      if (modals.length > 0) {\n        this.el = jq(modals[0]);\n        this.el.modal(\"show\");\n\n        this.el.on(\"show.bs.modal\", () => {\n          modalRef.show();\n          this.messagingService.send(\"modalShow\");\n        });\n        this.el.on(\"shown.bs.modal\", () => {\n          modalRef.shown();\n          this.messagingService.send(\"modalShown\");\n          if (!Utils.isMobileBrowser) {\n            this.el.find(\"*[appAutoFocus]\").focus();\n          }\n        });\n        this.el.on(\"hide.bs.modal\", () => {\n          this.messagingService.send(\"modalClose\");\n        });\n        this.el.on(\"hidden.bs.modal\", () => {\n          modalRef.closed();\n          this.messagingService.send(\"modalClosed\");\n        });\n      }\n    });\n\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      if (this.el != null) {\n        this.el.modal(\"hide\");\n      }\n    });\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from \"@bitwarden/angular/components/password-reprompt.component\";\n\n@Component({\n  templateUrl: \"password-reprompt.component.html\",\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"passwordConfirmation\" | i18n }}\n        </h1>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"passwordConfirmationDesc\" | i18n }}\n\n        <div class=\"form-group\">\n          <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n          <div class=\"d-flex\">\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appAutofocus\n              appInputVerbatim\n            />\n            <button\n              type=\"button\"\n              class=\"ml-1 btn btn-link\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\">\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from \"@bitwarden/angular/services/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n  component = PasswordRepromptComponent;\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport class FileDownloadBuilder {\n  get blobOptions(): any {\n    const options = this._request.blobOptions ?? {};\n    if (options.type == null) {\n      options.type = this.fileType;\n    }\n    return options;\n  }\n\n  get blob(): Blob {\n    if (this.blobOptions != null) {\n      return new Blob([this._request.blobData], this.blobOptions);\n    } else {\n      return new Blob([this._request.blobData]);\n    }\n  }\n\n  get downloadMethod(): \"save\" | \"open\" {\n    if (this._request.downloadMethod != null) {\n      return this._request.downloadMethod;\n    }\n    return this.fileType != \"application/pdf\" ? \"save\" : \"open\";\n  }\n\n  private get fileType() {\n    const fileNameLower = this._request.fileName.toLowerCase();\n    if (fileNameLower.endsWith(\".pdf\")) {\n      return \"application/pdf\";\n    } else if (fileNameLower.endsWith(\".xlsx\")) {\n      return \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    } else if (fileNameLower.endsWith(\".docx\")) {\n      return \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n    } else if (fileNameLower.endsWith(\".pptx\")) {\n      return \"application/vnd.openxmlformats-officedocument.presentationml.presentation\";\n    } else if (fileNameLower.endsWith(\".csv\")) {\n      return \"text/csv\";\n    } else if (fileNameLower.endsWith(\".png\")) {\n      return \"image/png\";\n    } else if (fileNameLower.endsWith(\".jpg\") || fileNameLower.endsWith(\".jpeg\")) {\n      return \"image/jpeg\";\n    } else if (fileNameLower.endsWith(\".gif\")) {\n      return \"image/gif\";\n    }\n    return null;\n  }\n\n  constructor(private readonly _request: FileDownloadRequest) {}\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FileDownloadBuilder } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadBuilder\";\nimport { FileDownloadRequest } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadRequest\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Injectable()\nexport class WebFileDownloadService implements FileDownloadService {\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  download(request: FileDownloadRequest): void {\n    const builder = new FileDownloadBuilder(request);\n    const a = window.document.createElement(\"a\");\n    if (builder.downloadMethod === \"save\") {\n      a.download = request.fileName;\n    } else if (!this.platformUtilsService.isSafari()) {\n      a.target = \"_blank\";\n    }\n    a.href = URL.createObjectURL(builder.blob);\n    a.style.position = \"fixed\";\n    window.document.body.appendChild(a);\n    a.click();\n    window.document.body.removeChild(a);\n  }\n}\n","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  Mobile = \"mobile\",\n  Cli = \"cli\",\n  DirectoryConnector = \"connector\",\n}\n","import { Injectable } from \"@angular/core\";\nimport Swal, { SweetAlertIcon } from \"sweetalert2\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ClientType } from \"@bitwarden/common/enums/clientType\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\n\n@Injectable()\nexport class WebPlatformUtilsService implements PlatformUtilsService {\n  private browserCache: DeviceType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.browserCache != null) {\n      return this.browserCache;\n    }\n\n    if (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    ) {\n      this.browserCache = DeviceType.FirefoxBrowser;\n    } else if (navigator.userAgent.indexOf(\" OPR/\") >= 0) {\n      this.browserCache = DeviceType.OperaBrowser;\n    } else if (navigator.userAgent.indexOf(\" Edg/\") !== -1) {\n      this.browserCache = DeviceType.EdgeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Vivaldi/\") !== -1) {\n      this.browserCache = DeviceType.VivaldiBrowser;\n    } else if (\n      navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n      navigator.userAgent.indexOf(\"Chrome\") === -1\n    ) {\n      this.browserCache = DeviceType.SafariBrowser;\n    } else if ((window as any).chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1) {\n      this.browserCache = DeviceType.ChromeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Trident/\") !== -1) {\n      this.browserCache = DeviceType.IEBrowser;\n    } else {\n      this.browserCache = DeviceType.UnknownBrowser;\n    }\n\n    return this.browserCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"browser\", \"\");\n  }\n\n  getClientType() {\n    return ClientType.Web;\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxBrowser;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeBrowser;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeBrowser;\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaBrowser;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiBrowser;\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariBrowser;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  isViewOpen(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  launchUri(uri: string, options?: any): void {\n    const a = document.createElement(\"a\");\n    a.href = uri;\n    if (options == null || !options.sameWindow) {\n      a.target = \"_blank\";\n      a.rel = \"noreferrer noopener\";\n    }\n    a.classList.add(\"d-none\");\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(process.env.APPLICATION_VERSION || \"-\");\n  }\n\n  async getApplicationVersionNumber(): Promise<string> {\n    return (await this.getApplicationVersion()).split(RegExp(\"[+|-]\"))[0].trim();\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  async showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml = false,\n    target?: string\n  ) {\n    let iconClasses: string = null;\n    if (type != null) {\n      // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n      switch (type) {\n        case \"success\":\n          iconClasses = \"bwi-check text-success\";\n          break;\n        case \"warning\":\n          iconClasses = \"bwi-exclamation-triangle text-warning\";\n          break;\n        case \"error\":\n          iconClasses = \"bwi-error text-danger\";\n          break;\n        case \"info\":\n          iconClasses = \"bwi-info-circle text-info\";\n          break;\n        default:\n          break;\n      }\n    }\n\n    const bootstrapModal = document.querySelector(\"div.modal\");\n    if (bootstrapModal != null) {\n      bootstrapModal.removeAttribute(\"tabindex\");\n    }\n\n    const iconHtmlStr =\n      iconClasses != null ? `<i class=\"swal-custom-icon bwi ${iconClasses}\"></i>` : undefined;\n    const confirmed = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n      iconHtml: iconHtmlStr,\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      titleText: title,\n      showCancelButton: cancelText != null,\n      cancelButtonText: cancelText,\n      showConfirmButton: true,\n      confirmButtonText: confirmText == null ? this.i18nService.t(\"ok\") : confirmText,\n      target: target != null ? target : \"body\",\n    });\n\n    if (bootstrapModal != null) {\n      bootstrapModal.setAttribute(\"tabindex\", \"-1\");\n    }\n\n    return confirmed.value;\n  }\n\n  isDev(): boolean {\n    return process.env.NODE_ENV === \"development\";\n  }\n\n  isSelfHost(): boolean {\n    return process.env.ENV.toString() === \"selfhosted\";\n  }\n\n  copyToClipboard(text: string, options?: any): void | boolean {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      let copyEl = doc.body;\n      // For some reason copy command won't work when modal is open if appending to body\n      if (doc.body.classList.contains(\"modal-open\")) {\n        copyEl = doc.body.querySelector<HTMLElement>(\".modal\");\n      }\n      copyEl.appendChild(textarea);\n      textarea.select();\n      let success = false;\n      try {\n        // Security exception may be thrown by some browsers.\n        success = doc.execCommand(\"copy\");\n        if (!success) {\n          this.logService.debug(\"Copy command unsupported or disabled.\");\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        copyEl.removeChild(textarea);\n      }\n      return success;\n    }\n  }\n\n  readFromClipboard(options?: any): Promise<string> {\n    throw new Error(\"Cannot read from clipboard on web.\");\n  }\n\n  supportsBiometric() {\n    return Promise.resolve(false);\n  }\n\n  authenticateBiometric() {\n    return Promise.resolve(false);\n  }\n\n  supportsSecureStorage() {\n    return false;\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { APP_INITIALIZER, NgModule, Optional, SkipSelf } from \"@angular/core\";\n\nimport {\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n  LOCALES_DIRECTORY,\n  SYSTEM_LANGUAGE,\n  MEMORY_STORAGE,\n} from \"@bitwarden/angular/services/injection-tokens\";\nimport { JslibServicesModule } from \"@bitwarden/angular/services/jslib-services.module\";\nimport { ModalService as ModalServiceAbstraction } from \"@bitwarden/angular/services/modal.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LoginService as LoginServiceAbstraction } from \"@bitwarden/common/abstractions/login.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService as BaseStateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { LoginService } from \"@bitwarden/common/services/login.service\";\nimport { MemoryStorageService } from \"@bitwarden/common/services/memoryStorage.service\";\n\nimport { BroadcasterMessagingService } from \"./broadcaster-messaging.service\";\nimport { EventService } from \"./event.service\";\nimport { HtmlStorageService } from \"./html-storage.service\";\nimport { I18nService } from \"./i18n.service\";\nimport { InitService } from \"./init.service\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./password-reprompt.service\";\nimport { PolicyListService } from \"./policy-list.service\";\nimport { RouterService } from \"./router.service\";\nimport { Account, GlobalState, StateService } from \"./state\";\nimport { StateMigrationService } from \"./state-migration.service\";\nimport { WebFileDownloadService } from \"./web-file-download.service\";\nimport { WebPlatformUtilsService } from \"./web-platform-utils.service\";\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, JslibServicesModule],\n  providers: [\n    InitService,\n    RouterService,\n    EventService,\n    PolicyListService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (initService: InitService) => initService.init(),\n      deps: [InitService],\n      multi: true,\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: false,\n    },\n    {\n      provide: I18nServiceAbstraction,\n      useClass: I18nService,\n      deps: [SYSTEM_LANGUAGE, LOCALES_DIRECTORY],\n    },\n    { provide: AbstractStorageService, useClass: HtmlStorageService },\n    {\n      provide: SECURE_STORAGE,\n      // TODO: platformUtilsService.isDev has a helper for this, but using that service here results in a circular dependency.\n      // We have a tech debt item in the backlog to break up platformUtilsService, but in the meantime simply checking the environement here is less cumbersome.\n      useClass: process.env.NODE_ENV === \"development\" ? HtmlStorageService : MemoryStorageService,\n    },\n    {\n      provide: MEMORY_STORAGE,\n      useClass: MemoryStorageService,\n    },\n    {\n      provide: PlatformUtilsServiceAbstraction,\n      useClass: WebPlatformUtilsService,\n    },\n    { provide: MessagingServiceAbstraction, useClass: BroadcasterMessagingService },\n    { provide: ModalServiceAbstraction, useClass: ModalService },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    StateService,\n    {\n      provide: BaseStateServiceAbstraction,\n      useExisting: StateService,\n    },\n    {\n      provide: PasswordRepromptServiceAbstraction,\n      useClass: PasswordRepromptService,\n    },\n    {\n      provide: FileDownloadService,\n      useClass: WebFileDownloadService,\n    },\n    {\n      provide: LoginServiceAbstraction,\n      useClass: LoginService,\n      deps: [StateService],\n    },\n  ],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule?: CoreModule) {\n    if (parentModule) {\n      throw new Error(\"CoreModule is already loaded. Import it in the AppModule only\");\n    }\n  }\n}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { GlobalState as BaseGlobalState } from \"@bitwarden/common/models/domain/global-state\";\n\nexport class GlobalState extends BaseGlobalState {\n  theme?: ThemeType = ThemeType.Light;\n  rememberEmail = true;\n}\n","import { I18nService as BaseI18nService } from \"@bitwarden/common/services/i18n.service\";\n\nexport class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string, localesDirectory: string) {\n    super(systemLanguage || \"en-US\", localesDirectory, async (formattedLocale: string) => {\n      const filePath =\n        this.localesDirectory +\n        \"/\" +\n        formattedLocale +\n        \"/messages.json?cache=\" +\n        process.env.CACHE_TAG;\n      const localesResult = await fetch(filePath);\n      const locales = await localesResult.json();\n      return locales;\n    });\n\n    // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n    this.supportedTranslationLocales = [\n      \"en\",\n      \"af\",\n      \"ar\",\n      \"az\",\n      \"be\",\n      \"bg\",\n      \"bn\",\n      \"bs\",\n      \"ca\",\n      \"cs\",\n      \"da\",\n      \"de\",\n      \"el\",\n      \"en-GB\",\n      \"en-IN\",\n      \"eo\",\n      \"es\",\n      \"et\",\n      \"eu\",\n      \"fi\",\n      \"fil\",\n      \"fr\",\n      \"he\",\n      \"hi\",\n      \"hr\",\n      \"hu\",\n      \"id\",\n      \"it\",\n      \"ja\",\n      \"ka\",\n      \"km\",\n      \"kn\",\n      \"ko\",\n      \"lv\",\n      \"ml\",\n      \"nb\",\n      \"nl\",\n      \"nn\",\n      \"pl\",\n      \"pt-PT\",\n      \"pt-BR\",\n      \"ro\",\n      \"ru\",\n      \"si\",\n      \"sk\",\n      \"sl\",\n      \"sr\",\n      \"sv\",\n      \"tr\",\n      \"uk\",\n      \"vi\",\n      \"zh-CN\",\n      \"zh-TW\",\n    ];\n  }\n}\n","import { Observable, ReplaySubject } from \"rxjs\";\n\nimport { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  private _locale = new ReplaySubject<string>(1);\n  locale$: Observable<string> = this._locale.asObservable();\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"ar\", \"العربية الفصحى\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"eu\", \"euskara\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.translationLocale = locale != null ? locale : this.systemLanguage;\n    this._locale.next(this.translationLocale);\n\n    try {\n      this.collator = new Intl.Collator(this.translationLocale, {\n        numeric: true,\n        sensitivity: \"base\",\n      });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.supportedTranslationLocales[0];\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n        await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string | number, p2?: string | number, p3?: string | number): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1.toString());\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2.toString());\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3.toString());\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import { StateMigrationService as BaseStateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\n\nimport { Account } from \"./state/account\";\nimport { GlobalState } from \"./state/global-state\";\n\nexport class StateMigrationService extends BaseStateMigrationService<GlobalState, Account> {\n  protected async migrationStateFrom1To2(): Promise<void> {\n    await super.migrateStateFrom1To2();\n    const globals = (await this.get<GlobalState>(\"global\")) ?? this.stateFactory.createGlobal(null);\n    globals.rememberEmail = (await this.get<boolean>(\"rememberEmail\")) ?? globals.rememberEmail;\n    await this.set(\"global\", globals);\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { LoginWithDeviceComponent } from \"./login-with-device.component\";\nimport { LoginComponent } from \"./login.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [LoginComponent, LoginWithDeviceComponent],\n  exports: [LoginComponent, LoginWithDeviceComponent],\n})\nexport class LoginModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\n\nimport { VerticalStepContentComponent } from \"./vertical-step-content.component\";\nimport { VerticalStep } from \"./vertical-step.component\";\nimport { VerticalStepperComponent } from \"./vertical-stepper.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [VerticalStepperComponent, VerticalStep, VerticalStepContentComponent],\n  exports: [VerticalStepperComponent, VerticalStep],\n})\nexport class VerticalStepperModule {}\n","import { CdkStepperModule } from \"@angular/cdk/stepper\";\nimport { TitleCasePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { FormFieldModule } from \"@bitwarden/components\";\n\nimport { OrganizationCreateModule } from \"../../organizations/create/organization-create.module\";\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\nimport { RegisterFormModule } from \"../register-form/register-form.module\";\n\nimport { BillingComponent } from \"./billing.component\";\nimport { ConfirmationDetailsComponent } from \"./confirmation-details.component\";\nimport { AbmEnterpriseContentComponent } from \"./content/abm-enterprise-content.component\";\nimport { AbmTeamsContentComponent } from \"./content/abm-teams-content.component\";\nimport { CnetEnterpriseContentComponent } from \"./content/cnet-enterprise-content.component\";\nimport { CnetIndividualContentComponent } from \"./content/cnet-individual-content.component\";\nimport { CnetTeamsContentComponent } from \"./content/cnet-teams-content.component\";\nimport { DefaultContentComponent } from \"./content/default-content.component\";\nimport { EnterpriseContentComponent } from \"./content/enterprise-content.component\";\nimport { Enterprise1ContentComponent } from \"./content/enterprise1-content.component\";\nimport { Enterprise2ContentComponent } from \"./content/enterprise2-content.component\";\nimport { LogoCnetComponent } from \"./content/logo-cnet.component\";\nimport { LogoForbesComponent } from \"./content/logo-forbes.component\";\nimport { LogoUSNewsComponent } from \"./content/logo-us-news.component\";\nimport { TeamsContentComponent } from \"./content/teams-content.component\";\nimport { Teams1ContentComponent } from \"./content/teams1-content.component\";\nimport { Teams2ContentComponent } from \"./content/teams2-content.component\";\nimport { TrialInitiationComponent } from \"./trial-initiation.component\";\nimport { VerticalStepperModule } from \"./vertical-stepper/vertical-stepper.module\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    CdkStepperModule,\n    VerticalStepperModule,\n    FormFieldModule,\n    RegisterFormModule,\n    OrganizationCreateModule,\n    LooseComponentsModule,\n  ],\n  declarations: [\n    TrialInitiationComponent,\n    EnterpriseContentComponent,\n    TeamsContentComponent,\n    ConfirmationDetailsComponent,\n    BillingComponent,\n    DefaultContentComponent,\n    EnterpriseContentComponent,\n    Enterprise1ContentComponent,\n    Enterprise2ContentComponent,\n    TeamsContentComponent,\n    Teams1ContentComponent,\n    Teams2ContentComponent,\n    CnetEnterpriseContentComponent,\n    CnetIndividualContentComponent,\n    CnetTeamsContentComponent,\n    AbmEnterpriseContentComponent,\n    AbmTeamsContentComponent,\n    LogoCnetComponent,\n    LogoForbesComponent,\n    LogoUSNewsComponent,\n  ],\n  exports: [TrialInitiationComponent],\n  providers: [TitleCasePipe],\n})\nexport class TrialInitiationModule {}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\n\n@NgModule({\n  imports: [SharedModule, ScrollingModule],\n  declarations: [EntityUsersComponent],\n  exports: [EntityUsersComponent],\n})\nexport class OrganizationManageModule {}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\n\nimport { EnrollMasterPasswordReset } from \"./enroll-master-password-reset.component\";\n\n@NgModule({\n  imports: [SharedModule, ScrollingModule, LooseComponentsModule],\n  declarations: [EnrollMasterPasswordReset],\n  exports: [EnrollMasterPasswordReset],\n})\nexport class OrganizationUserModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { LoginModule } from \"./accounts/login/login.module\";\nimport { TrialInitiationModule } from \"./accounts/trial-initiation/trial-initiation.module\";\nimport { OrganizationCreateModule } from \"./organizations/create/organization-create.module\";\nimport { OrganizationManageModule } from \"./organizations/manage/organization-manage.module\";\nimport { OrganizationUserModule } from \"./organizations/users/organization-user.module\";\nimport { LooseComponentsModule, SharedModule } from \"./shared\";\nimport { OrganizationBadgeModule } from \"./vault/organization-badge/organization-badge.module\";\nimport { VaultFilterModule } from \"./vault/vault-filter/vault-filter.module\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    LooseComponentsModule,\n    TrialInitiationModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    OrganizationManageModule,\n    OrganizationUserModule,\n    OrganizationCreateModule,\n    LoginModule,\n  ],\n  exports: [\n    SharedModule,\n    LooseComponentsModule,\n    TrialInitiationModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    LoginModule,\n  ],\n  bootstrap: [],\n})\nexport class OssModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nconst routes: Routes = [{ path: \"**\", redirectTo: \"\" }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WildcardRoutingModule {}\n","export class ProviderAddOrganizationRequest {\n  organizationId: string;\n  key: string;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProviderAddOrganizationRequest } from \"@bitwarden/common/models/request/provider/provider-add-organization.request\";\n\n@Injectable()\nexport class WebProviderService {\n  constructor(\n    private cryptoService: CryptoService,\n    private syncService: SyncService,\n    private apiService: ApiService\n  ) {}\n\n  async addOrganizationToProvider(providerId: string, organizationId: string) {\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const providerKey = await this.cryptoService.getProviderKey(providerId);\n\n    const encryptedOrgKey = await this.cryptoService.encrypt(orgKey.key, providerKey);\n\n    const request = new ProviderAddOrganizationRequest();\n    request.organizationId = organizationId;\n    request.key = encryptedOrgKey.encryptedString;\n\n    const response = await this.apiService.postProviderAddOrganization(providerId, request);\n    await this.syncService.fullSync(true);\n    return response;\n  }\n\n  async detachOrganizastion(providerId: string, organizationId: string): Promise<any> {\n    await this.apiService.deleteProviderOrganization(providerId, organizationId);\n    await this.syncService.fullSync(true);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"addTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"addTitle\">\n          {{ \"addExistingOrganization\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <ng-container *ngIf=\"!loading\">\n          <table class=\"table table-hover table-list\">\n            <tr *ngFor=\"let o of organizations\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"o.name\" [id]=\"o.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ o.name }}\n              </td>\n              <td>\n                <button\n                  class=\"btn btn-outline-secondary pull-right\"\n                  (click)=\"add(o)\"\n                  [disabled]=\"formPromise\"\n                >\n                  Add\n                </button>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\n@Component({\n  selector: \"provider-add-organization\",\n  templateUrl: \"add-organization.component.html\",\n})\nexport class AddOrganizationComponent implements OnInit {\n  @Input() providerId: string;\n  @Input() organizations: Organization[];\n  @Output() onAddedOrganization = new EventEmitter();\n\n  provider: Provider;\n  formPromise: Promise<any>;\n  loading = true;\n\n  constructor(\n    private providerService: ProviderService,\n    private webProviderService: WebProviderService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private validationService: ValidationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    if (this.providerId == null) {\n      return;\n    }\n\n    this.provider = await this.providerService.get(this.providerId);\n\n    this.loading = false;\n  }\n\n  async add(organization: Organization) {\n    if (this.formPromise) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"addOrganizationConfirmation\", organization.name, this.provider.name),\n      organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.formPromise = this.webProviderService.addOrganizationToProvider(\n        this.providerId,\n        organization.id\n      );\n      await this.formPromise;\n    } catch (e) {\n      this.validationService.showError(e);\n      return;\n    } finally {\n      this.formPromise = null;\n    }\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"organizationJoinedProvider\")\n    );\n    this.onAddedOrganization.emit();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Injectable()\nexport class ProviderPermissionsGuard implements CanActivate {\n  constructor(\n    private providerService: ProviderService,\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const provider = await this.providerService.get(route.params.providerId);\n    if (provider == null) {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    if (!provider.isProviderAdmin && !provider.enabled) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"providerIsDisabled\"));\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    const permissionsCallback: (provider: Provider) => boolean = route.data?.providerPermissions;\n    const hasSpecifiedPermissions = permissionsCallback == null || permissionsCallback(provider);\n\n    if (!hasSpecifiedPermissions) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"accessDenied\"));\n      return this.router.createUrlTree([\"/providers\", provider.id]);\n    }\n\n    return true;\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"container page-content\">\n  <div class=\"page-header d-flex\">\n    <h1>{{ \"providers\" | i18n }}</h1>\n  </div>\n  <p *ngIf=\"!loaded\" class=\"text-muted\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"loaded\">\n    <table class=\"table table-hover table-list\" *ngIf=\"providers && providers.length\">\n      <tbody>\n        <tr *ngFor=\"let p of providers\">\n          <td width=\"30\">\n            <bit-avatar [text]=\"p.name\" [id]=\"p.id\" size=\"small\"></bit-avatar>\n          </td>\n          <td>\n            <a href=\"#\" [routerLink]=\"['/providers', p.id]\">{{ p.name }}</a>\n            <ng-container *ngIf=\"!p.enabled\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-danger\"\n                title=\"{{ 'providerIsDisabled' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"providerIsDisabled\" | i18n }}</span>\n            </ng-container>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"app-providers\",\n  templateUrl: \"providers.component.html\",\n})\nexport class ProvidersComponent implements OnInit {\n  providers: Provider[];\n  loaded = false;\n  actionPromise: Promise<any>;\n\n  constructor(private providerService: ProviderService, private i18nService: I18nService) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    await this.load();\n  }\n\n  async load() {\n    const providers = await this.providerService.getAll();\n    providers.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.providers = providers;\n    this.loaded = true;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"clients\" | i18n }}</h1>\n\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <a class=\"btn btn-sm btn-outline-primary ml-3\" routerLink=\"create\" *ngIf=\"manageOrganizations\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newClientOrganization\" | i18n }}\n    </a>\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"addExistingOrganization()\"\n      *ngIf=\"manageOrganizations && showAddExisting\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"addExistingOrganization\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<ng-container\n  *ngIf=\"!loading && (clients | search: searchText:'organizationName':'id') as searchedClients\"\n>\n  <p *ngIf=\"!searchedClients.length\">{{ \"noClientsInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedClients.length\">\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <thead>\n        <tr>\n          <th colspan=\"2\">{{ \"name\" | i18n }}</th>\n          <th>{{ \"numberOfUsers\" | i18n }}</th>\n          <th>{{ \"billingPlan\" | i18n }}</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let o of searchedClients\">\n          <td width=\"30\">\n            <bit-avatar [text]=\"o.organizationName\" [id]=\"o.id\" size=\"small\"></bit-avatar>\n          </td>\n          <td>\n            <a [routerLink]=\"['/organizations', o.organizationId]\">{{ o.organizationName }}</a>\n          </td>\n          <td>\n            <span>{{ o.userCount }}</span>\n            <span *ngIf=\"o.seats != null\"> / {{ o.seats }}</span>\n          </td>\n          <td>\n            <span>{{ o.plan }}</span>\n          </td>\n          <td class=\"table-list-options\" *ngIf=\"manageOrganizations\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(o)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n\n<ng-template #add></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ProviderOrganizationOrganizationDetailsResponse } from \"@bitwarden/common/models/response/provider/provider-organization.response\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\nimport { AddOrganizationComponent } from \"./add-organization.component\";\n\nconst DisallowedPlanTypes = [\n  PlanType.Free,\n  PlanType.FamiliesAnnually2019,\n  PlanType.FamiliesAnnually,\n];\n\n@Component({\n  templateUrl: \"clients.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ClientsComponent implements OnInit {\n  @ViewChild(\"add\", { read: ViewContainerRef, static: true }) addModalRef: ViewContainerRef;\n\n  providerId: string;\n  searchText: string;\n  addableOrganizations: Organization[];\n  loading = true;\n  manageOrganizations = false;\n  showAddExisting = false;\n\n  clients: ProviderOrganizationOrganizationDetailsResponse[];\n  pagedClients: ProviderOrganizationOrganizationDetailsResponse[];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n  protected actionPromise: Promise<unknown>;\n  private pagedClientsCount = 0;\n\n  constructor(\n    private route: ActivatedRoute,\n    private providerService: ProviderService,\n    private apiService: ApiService,\n    private searchService: SearchService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private validationService: ValidationService,\n    private webProviderService: WebProviderService,\n    private logService: LogService,\n    private modalService: ModalService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n\n      await this.load();\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderClients(this.providerId);\n    this.clients = response.data != null && response.data.length > 0 ? response.data : [];\n    this.manageOrganizations =\n      (await this.providerService.get(this.providerId)).type === ProviderUserType.ProviderAdmin;\n    const candidateOrgs = (await this.organizationService.getAll()).filter(\n      (o) => o.isOwner && o.providerId == null\n    );\n    const allowedOrgsIds = await Promise.all(\n      candidateOrgs.map((o) => this.organizationApiService.get(o.id))\n    ).then((orgs) =>\n      orgs.filter((o) => !DisallowedPlanTypes.includes(o.planType)).map((o) => o.id)\n    );\n    this.addableOrganizations = candidateOrgs.filter((o) => allowedOrgsIds.includes(o.id));\n\n    this.showAddExisting = this.addableOrganizations.length !== 0;\n    this.loading = false;\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.clients && this.clients.length > this.pageSize;\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  async resetPaging() {\n    this.pagedClients = [];\n    this.loadMore();\n  }\n\n  loadMore() {\n    if (!this.clients || this.clients.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedClients.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedClientsCount > this.pageSize) {\n      pagedSize = this.pagedClientsCount;\n    }\n    if (this.clients.length > pagedLength) {\n      this.pagedClients = this.pagedClients.concat(\n        this.clients.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedClientsCount = this.pagedClients.length;\n    this.didScroll = this.pagedClients.length > this.pageSize;\n  }\n\n  async addExistingOrganization() {\n    const [modal] = await this.modalService.openViewRef(\n      AddOrganizationComponent,\n      this.addModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.organizations = this.addableOrganizations;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onAddedOrganization.subscribe(async () => {\n          try {\n            await this.load();\n            modal.close();\n          } catch (e) {\n            this.logService.error(`Handled exception: ${e}`);\n          }\n        });\n      }\n    );\n  }\n\n  async remove(organization: ProviderOrganizationOrganizationDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"detachOrganizationConfirmation\"),\n      organization.organizationName,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.webProviderService.detachOrganizastion(\n      this.providerId,\n      organization.id\n    );\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"detachedOrganization\", organization.organizationName)\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationPlansComponent } from \"@bitwarden/web-vault/app/settings/organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  providerId: string;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n    });\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"newClientOrganization\" | i18n }}</h1>\n</div>\n<p>{{ \"newClientOrganizationDesc\" | i18n }}</p>\n<app-organization-plans [providerId]=\"providerId\"></app-organization-plans>\n","export class ProviderUserAcceptRequest {\n  token: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ providerName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinProviderDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ProviderUserAcceptRequest } from \"@bitwarden/common/models/request/provider/provider-user-accept.request\";\nimport { BaseAcceptComponent } from \"@bitwarden/web-vault/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-provider\",\n  templateUrl: \"accept-provider.component.html\",\n})\nexport class AcceptProviderComponent extends BaseAcceptComponent {\n  providerName: string;\n\n  failedMessage = \"providerInviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"providerUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    private apiService: ApiService,\n    platformUtilService: PlatformUtilsService\n  ) {\n    super(router, platformUtilService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params) {\n    const request = new ProviderUserAcceptRequest();\n    request.token = qParams.token;\n\n    await this.apiService.postProviderUserAccept(\n      qParams.providerId,\n      qParams.providerUserId,\n      request\n    );\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"providerInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params) {\n    this.providerName = qParams.providerName;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"eventLogs\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"form-inline\">\n      <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"start\"\n        placeholder=\"{{ 'startDate' | i18n }}\"\n        [(ngModel)]=\"start\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n      <span class=\"mx-2\">-</span>\n      <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"end\"\n        placeholder=\"{{ 'endDate' | i18n }}\"\n        [(ngModel)]=\"end\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n    </div>\n    <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary ml-3\"\n        (click)=\"loadEvents(true)\"\n        [disabled]=\"loaded && refreshForm.loading\"\n      >\n        <i\n          class=\"bwi bwi-refresh bwi-fw\"\n          aria-hidden=\"true\"\n          [ngClass]=\"{ 'bwi-spin': loaded && refreshForm.loading }\"\n        ></i>\n        {{ \"refresh\" | i18n }}\n      </button>\n    </form>\n    <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\"\n        [ngClass]=\"{ loading: exportForm.loading }\"\n        (click)=\"exportEvents()\"\n        [disabled]=\"(loaded && exportForm.loading) || dirtyDates\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i>\n        <span>{{ \"export\" | i18n }}</span>\n      </button>\n    </form>\n  </div>\n</div>\n<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"loaded\">\n  <p *ngIf=\"!events || !events.length\">{{ \"noEventsInList\" | i18n }}</p>\n  <table class=\"table table-hover\" *ngIf=\"events && events.length\">\n    <thead>\n      <tr>\n        <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n        <th class=\"border-top-0\" width=\"40\">\n          <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n        </th>\n        <th class=\"border-top-0\" width=\"150\">{{ \"user\" | i18n }}</th>\n        <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let e of events\">\n        <td>{{ e.date | date: \"medium\" }}</td>\n        <td>\n          <i\n            class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n            title=\"{{ e.appName }}, {{ e.ip }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n        </td>\n        <td>\n          <span title=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n        </td>\n        <td [innerHTML]=\"e.message\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <button\n    #moreBtn\n    [appApiAction]=\"morePromise\"\n    type=\"button\"\n    class=\"btn btn-block btn-link btn-submit\"\n    (click)=\"loadEvents(false)\"\n    [disabled]=\"loaded && $any(moreBtn).loading\"\n    *ngIf=\"continuationToken\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"loadMore\" | i18n }}</span>\n  </button>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/event.response\";\nimport { BaseEventsComponent } from \"@bitwarden/web-vault/app/common/base.events.component\";\nimport { EventService } from \"@bitwarden/web-vault/app/core\";\n\n@Component({\n  selector: \"provider-events\",\n  templateUrl: \"events.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n  exportFileName = \"provider-events\";\n  providerId: string;\n\n  private providerUsersUserIdMap = new Map<string, any>();\n  private providerUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    eventService: EventService,\n    i18nService: I18nService,\n    private providerService: ProviderService,\n    exportService: ExportService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    logService: LogService,\n    private userNamePipe: UserNamePipe,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      eventService,\n      i18nService,\n      exportService,\n      platformUtilsService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n      if (provider == null || !provider.useEvents) {\n        this.router.navigate([\"/providers\", this.providerId]);\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderUsers(this.providerId);\n    response.data.forEach((u) => {\n      const name = this.userNamePipe.transform(u);\n      this.providerUsersIdMap.set(u.id, { name: name, email: u.email });\n      this.providerUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n    });\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n    return this.apiService.getEventsProvider(\n      this.providerId,\n      startDate,\n      endDate,\n      continuationToken\n    );\n  }\n\n  protected getUserName(r: EventResponse, userId: string) {\n    if (r.installationId != null) {\n      return `Installation: ${r.installationId}`;\n    }\n\n    if (userId != null && this.providerUsersUserIdMap.has(userId)) {\n      return this.providerUsersUserIdMap.get(userId);\n    }\n\n    return null;\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"provider\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"people\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canManageUsers\"\n          >\n            {{ \"people\" | i18n }}\n          </a>\n          <a\n            routerLink=\"events\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canAccessEventLogs && accessEvents\"\n          >\n            {{ \"eventLogs\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"provider-manage\",\n  templateUrl: \"manage.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ManageComponent implements OnInit {\n  provider: Provider;\n  accessEvents = false;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.provider = await this.providerService.get(params.providerId);\n      this.accessEvents = this.provider.useEvents;\n    });\n  }\n}\n","export class ProviderUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class ProviderUserConfirmRequest {\n  key: string;\n}\n","type ProviderUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class ProviderUserBulkConfirmRequest {\n  keys: ProviderUserBulkRequestEntry[];\n\n  constructor(keys: ProviderUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserBulkConfirmRequest } from \"@bitwarden/common/models/request/provider/provider-user-bulk-confirm.request\";\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/provider-user-bulk.request\";\nimport { BulkConfirmComponent as OrganizationBulkConfirmComponent } from \"@bitwarden/web-vault/app/organizations/manage/bulk/bulk-confirm.component\";\nimport { BulkUserDetails } from \"@bitwarden/web-vault/app/organizations/manage/bulk/bulk-status.component\";\n\n@Component({\n  templateUrl:\n    \"../../../../../../../apps/web/src/app/organizations/manage/bulk/bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent extends OrganizationBulkConfirmComponent {\n  @Input() providerId: string;\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === ProviderUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    const request = new ProviderUserBulkRequest(this.filteredUsers.map((user) => user.id));\n    return await this.apiService.postProviderUsersPublicKey(this.providerId, request);\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getProviderKey(this.providerId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new ProviderUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.apiService.postProviderUserBulkConfirm(this.providerId, request);\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/provider-user-bulk.request\";\nimport { BulkRemoveComponent as OrganizationBulkRemoveComponent } from \"@bitwarden/web-vault/app/organizations/manage/bulk/bulk-remove.component\";\n\n@Component({\n  templateUrl:\n    \"../../../../../../../apps/web/src/app/organizations/manage/bulk/bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent extends OrganizationBulkRemoveComponent {\n  @Input() providerId: string;\n\n  async deleteUsers() {\n    const request = new ProviderUserBulkRequest(this.users.map((user) => user.id));\n    return await this.apiService.deleteManyProviderUsers(this.providerId, request);\n  }\n\n  protected get removeUsersWarning() {\n    return this.i18nService.t(\"removeUsersWarning\");\n  }\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserInviteRequest {\n  emails: string[] = [];\n  type: ProviderUserType;\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserUpdateRequest {\n  type: ProviderUserType;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"providerInviteUserDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"emails\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"emails\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Emails\"\n              [(ngModel)]=\"emails\"\n              required\n              appAutoFocus\n            />\n            <small class=\"text-muted\">{{ \"inviteMultipleEmailDesc\" | i18n: \"20\" }}</small>\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userType\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/provider-users/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeServiceUser\"\n            [value]=\"userType.ServiceUser\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeServiceUser\">\n            {{ \"serviceUser\" | i18n }}\n            <small>{{ \"serviceUserDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeProviderAdmin\"\n            [value]=\"userType.ProviderAdmin\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeProviderAdmin\">\n            {{ \"providerAdmin\" | i18n }}\n            <small>{{ \"providerAdminDesc\" | i18n }}</small>\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"$any(deleteBtn).loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { PermissionsApi } from \"@bitwarden/common/models/api/permissions.api\";\nimport { ProviderUserInviteRequest } from \"@bitwarden/common/models/request/provider/provider-user-invite.request\";\nimport { ProviderUserUpdateRequest } from \"@bitwarden/common/models/request/provider/provider-user-update.request\";\n\n@Component({\n  selector: \"provider-user-add-edit\",\n  templateUrl: \"user-add-edit.component.html\",\n})\nexport class UserAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() providerUserId: string;\n  @Input() providerId: string;\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  title: string;\n  emails: string;\n  type: ProviderUserType = ProviderUserType.ServiceUser;\n  permissions = new PermissionsApi();\n  showCustom = false;\n  access: \"all\" | \"selected\" = \"selected\";\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  userType = ProviderUserType;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.providerUserId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editUser\");\n      try {\n        const user = await this.apiService.getProviderUser(this.providerId, this.providerUserId);\n        this.type = user.type;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteUser\");\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new ProviderUserUpdateRequest();\n        request.type = this.type;\n        this.formPromise = this.apiService.putProviderUser(\n          this.providerId,\n          this.providerUserId,\n          request\n        );\n      } else {\n        const request = new ProviderUserInviteRequest();\n        request.emails = this.emails.trim().split(/\\s*,\\s*/);\n        request.type = this.type;\n        this.formPromise = this.apiService.postProviderUserInvite(this.providerId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteProviderUser(this.providerId, this.providerUserId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.name)\n      );\n      this.onDeletedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"people\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == null }\"\n        (click)=\"filter(null)\"\n      >\n        {{ \"all\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"allCount\">{{ allCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Invited }\"\n        (click)=\"filter(userStatusType.Invited)\"\n      >\n        {{ \"invited\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"invitedCount\">{{ invitedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Accepted }\"\n        (click)=\"filter(userStatusType.Accepted)\"\n      >\n        {{ \"accepted\" | i18n }}\n        <span bitBadge badgeType=\"warning\" *ngIf=\"acceptedCount\">{{ acceptedCount }}</span>\n      </button>\n    </div>\n    <div class=\"ml-3\">\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <div class=\"dropdown ml-3\" appListDropdown>\n      <button\n        class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"bulkActionsButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        appA11yTitle=\"{{ 'options' | i18n }}\"\n      >\n        <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\">\n          <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n          {{ \"reinviteSelected\" | i18n }}\n        </button>\n        <button\n          class=\"dropdown-item text-success\"\n          appStopClick\n          (click)=\"bulkConfirm()\"\n          *ngIf=\"showBulkConfirmUsers\"\n        >\n          <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n          {{ \"confirmSelected\" | i18n }}\n        </button>\n        <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\">\n          <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n          {{ \"remove\" | i18n }}\n        </button>\n        <div class=\"dropdown-divider\"></div>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n          <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n          <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"inviteUser\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedUsers : (users | search: searchText:'name':'email':'id')) as searchedUsers\n  \"\n>\n  <p *ngIf=\"!searchedUsers.length\">{{ \"noUsersInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedUsers.length\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'confirmUsers' | i18n }}\"\n      icon=\"bwi bwi-check-circle\"\n      *ngIf=\"showConfirmUsers\"\n    >\n      {{ \"providerUsersNeedConfirmed\" | i18n }}\n    </app-callout>\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let u of searchedUsers\">\n          <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\">\n            <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp />\n          </td>\n          <td width=\"30\">\n            <bit-avatar [text]=\"u | userName\" [id]=\"u.userId\" size=\"small\"></bit-avatar>\n          </td>\n          <td>\n            <a href=\"#\" appStopClick (click)=\"edit(u)\">{{ u.email }}</a>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{\n              \"invited\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{\n              \"accepted\" | i18n\n            }}</span>\n            <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n          </td>\n          <td>\n            <ng-container *ngIf=\"u.twoFactorEnabled\">\n              <i\n                class=\"bwi bwi-lock\"\n                title=\"{{ 'userUsingTwoStep' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"userUsingTwoStep\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td>\n            <span *ngIf=\"u.type === userType.ProviderAdmin\">{{ \"providerAdmin\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.ServiceUser\">{{ \"serviceUser\" | i18n }}</span>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"reinvite(u)\"\n                  *ngIf=\"u.status === userStatusType.Invited\"\n                >\n                  <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n                  {{ \"resendInvitation\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item text-success\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"confirm(u)\"\n                  *ngIf=\"u.status === userStatusType.Accepted\"\n                >\n                  <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n                  {{ \"confirm\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"events(u)\"\n                  *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"\n                >\n                  <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                  {{ \"eventLogs\" | i18n }}\n                </a>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n<ng-template #bulkStatusTemplate></ng-template>\n<ng-template #bulkConfirmTemplate></ng-template>\n<ng-template #bulkRemoveTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/provider-user-bulk.request\";\nimport { ProviderUserConfirmRequest } from \"@bitwarden/common/models/request/provider/provider-user-confirm.request\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { ProviderUserBulkResponse } from \"@bitwarden/common/models/response/provider/provider-user-bulk.response\";\nimport { ProviderUserUserDetailsResponse } from \"@bitwarden/common/models/response/provider/provider-user.response\";\nimport { BasePeopleComponent } from \"@bitwarden/web-vault/app/common/base.people.component\";\nimport { BulkStatusComponent } from \"@bitwarden/web-vault/app/organizations/manage/bulk/bulk-status.component\";\nimport { EntityEventsComponent } from \"@bitwarden/web-vault/app/organizations/manage/entity-events.component\";\n\nimport { BulkConfirmComponent } from \"./bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./bulk/bulk-remove.component\";\nimport { UserAddEditComponent } from \"./user-add-edit.component\";\n\n@Component({\n  selector: \"provider-people\",\n  templateUrl: \"people.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PeopleComponent\n  extends BasePeopleComponent<ProviderUserUserDetailsResponse>\n  implements OnInit\n{\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"groupsTemplate\", { read: ViewContainerRef, static: true })\n  groupsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n  @ViewChild(\"bulkStatusTemplate\", { read: ViewContainerRef, static: true })\n  bulkStatusModalRef: ViewContainerRef;\n  @ViewChild(\"bulkConfirmTemplate\", { read: ViewContainerRef, static: true })\n  bulkConfirmModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRemoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkRemoveModalRef: ViewContainerRef;\n\n  userType = ProviderUserType;\n  userStatusType = ProviderUserStatusType;\n  providerId: string;\n  accessEvents = false;\n\n  constructor(\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    i18nService: I18nService,\n    modalService: ModalService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    private router: Router,\n    searchService: SearchService,\n    validationService: ValidationService,\n    logService: LogService,\n    searchPipe: SearchPipe,\n    userNamePipe: UserNamePipe,\n    stateService: StateService,\n    private providerService: ProviderService\n  ) {\n    super(\n      apiService,\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      validationService,\n      modalService,\n      logService,\n      searchPipe,\n      userNamePipe,\n      stateService\n    );\n  }\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n\n      if (!provider.canManageUsers) {\n        this.router.navigate([\"../\"], { relativeTo: this.route });\n        return;\n      }\n\n      this.accessEvents = provider.useEvents;\n\n      await this.load();\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n        if (qParams.viewEvents != null) {\n          const user = this.users.filter((u) => u.id === qParams.viewEvents);\n          if (user.length > 0 && user[0].status === ProviderUserStatusType.Confirmed) {\n            this.events(user[0]);\n          }\n        }\n      });\n    });\n  }\n\n  getUsers(): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    return this.apiService.getProviderUsers(this.providerId);\n  }\n\n  deleteUser(id: string): Promise<any> {\n    return this.apiService.deleteProviderUser(this.providerId, id);\n  }\n\n  revokeUser(id: string): Promise<any> {\n    // Not implemented.\n    return null;\n  }\n\n  restoreUser(id: string): Promise<any> {\n    // Not implemented.\n    return null;\n  }\n\n  reinviteUser(id: string): Promise<any> {\n    return this.apiService.postProviderUserReinvite(this.providerId, id);\n  }\n\n  async confirmUser(user: ProviderUserUserDetailsResponse, publicKey: Uint8Array): Promise<any> {\n    const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n    const key = await this.cryptoService.rsaEncrypt(providerKey.key, publicKey.buffer);\n    const request = new ProviderUserConfirmRequest();\n    request.key = key.encryptedString;\n    await this.apiService.postProviderUserConfirm(this.providerId, user.id, request);\n  }\n\n  async edit(user: ProviderUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.providerId = this.providerId;\n        comp.providerUserId = user != null ? user.id : null;\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedUser.subscribe(() => {\n          modal.close();\n          this.removeUser(user);\n        });\n      }\n    );\n  }\n\n  async events(user: ProviderUserUserDetailsResponse) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = this.userNamePipe.transform(user);\n      comp.providerId = this.providerId;\n      comp.entityId = user.id;\n      comp.showUser = false;\n      comp.entity = \"user\";\n    });\n  }\n\n  async bulkRemove() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRemoveComponent,\n      this.bulkRemoveModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkReinvite() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const users = this.getCheckedUsers();\n    const filteredUsers = users.filter((u) => u.status === ProviderUserStatusType.Invited);\n\n    if (filteredUsers.length <= 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"noSelectedUsersApplicable\")\n      );\n      return;\n    }\n\n    try {\n      const request = new ProviderUserBulkRequest(filteredUsers.map((user) => user.id));\n      const response = this.apiService.postManyProviderUserReinvite(this.providerId, request);\n      this.showBulkStatus(\n        users,\n        filteredUsers,\n        response,\n        this.i18nService.t(\"bulkReinviteMessage\")\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkConfirm() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkConfirmComponent,\n      this.bulkConfirmModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  private async showBulkStatus(\n    users: ProviderUserUserDetailsResponse[],\n    filteredUsers: ProviderUserUserDetailsResponse[],\n    request: Promise<ListResponse<ProviderUserBulkResponse>>,\n    successfullMessage: string\n  ) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      BulkStatusComponent,\n      this.bulkStatusModalRef,\n      (comp) => {\n        comp.loading = true;\n      }\n    );\n\n    // Workaround to handle closing the modal shortly after it has been opened\n    let close = false;\n    modal.onShown.subscribe(() => {\n      if (close) {\n        modal.close();\n      }\n    });\n\n    try {\n      const response = await request;\n\n      if (modal) {\n        const keyedErrors: any = response.data\n          .filter((r) => r.error !== \"\")\n          .reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n        const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n        childComponent.users = users.map((user) => {\n          let message = keyedErrors[user.id] ?? successfullMessage;\n          // eslint-disable-next-line\n          if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n            message = this.i18nService.t(\"bulkFilteredMessage\");\n          }\n\n          return {\n            user: user,\n            error: keyedErrors.hasOwnProperty(user.id), // eslint-disable-line\n            message: message,\n          };\n        });\n        childComponent.loading = false;\n      }\n    } catch {\n      close = true;\n      modal.close();\n    }\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav\" *ngIf=\"provider\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <div class=\"my-auto d-flex align-items-center pl-1\">\n        <bit-avatar [text]=\"provider.name\" [id]=\"provider.id\"></bit-avatar>\n        <div class=\"org-name ml-3\">\n          <span>{{ provider.name }}</span>\n          <small class=\"text-muted\">{{ \"provider\" | i18n }}</small>\n        </div>\n        <div class=\"ml-3 card border-danger text-danger bg-transparent\" *ngIf=\"!provider.enabled\">\n          <div class=\"card-body py-2\">\n            <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n            {{ \"providerIsDisabled\" | i18n }}\n          </div>\n        </div>\n      </div>\n      <ul class=\"nav nav-tabs\" *ngIf=\"showMenuBar\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"clients\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i>\n            {{ \"clients\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showManageTab\">\n          <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-sliders\" aria-hidden=\"true\"></i>\n            {{ \"manage\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showSettingsTab\">\n          <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-cogs\" aria-hidden=\"true\"></i>\n            {{ \"settings\" | i18n }}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n</div>\n<app-footer></app-footer>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"providers-layout\",\n  templateUrl: \"providers-layout.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ProvidersLayoutComponent {\n  provider: Provider;\n  private providerId: string;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    this.provider = await this.providerService.get(this.providerId);\n  }\n\n  get showMenuBar() {\n    return this.showManageTab || this.showSettingsTab;\n  }\n\n  get showManageTab() {\n    return this.provider.canManageUsers || this.provider.canAccessEventLogs;\n  }\n\n  get showSettingsTab() {\n    return this.provider.isProviderAdmin;\n  }\n\n  get manageRoute(): string {\n    switch (true) {\n      case this.provider.canManageUsers:\n        return \"manage/people\";\n      case this.provider.canAccessEventLogs:\n        return \"manage/events\";\n    }\n  }\n}\n","export class ProviderUpdateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myProvider\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"provider && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"provider.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"provider.billingEmail\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <bit-avatar [text]=\"provider.name\" [id]=\"provider.id\" size=\"large\"></bit-avatar>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProviderUpdateRequest } from \"@bitwarden/common/models/request/provider/provider-update.request\";\nimport { ProviderResponse } from \"@bitwarden/common/models/response/provider/provider.response\";\n\n@Component({\n  selector: \"provider-account\",\n  templateUrl: \"account.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccountComponent {\n  selfHosted = false;\n  loading = true;\n  provider: ProviderResponse;\n  formPromise: Promise<any>;\n  taxFormPromise: Promise<any>;\n\n  private providerId: string;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      try {\n        this.provider = await this.apiService.getProvider(this.providerId);\n      } catch (e) {\n        this.logService.error(`Handled exception: ${e}`);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new ProviderUpdateRequest();\n      request.name = this.provider.name;\n      request.businessName = this.provider.businessName;\n      request.billingEmail = this.provider.billingEmail;\n\n      this.formPromise = this.apiService.putProvider(this.providerId, request).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerUpdated\"));\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\n\n@Component({\n  selector: \"provider-settings\",\n  templateUrl: \"settings.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SettingsComponent {\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      await this.providerService.get(params.providerId);\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myProvider\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setupProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"setupProviderLoginDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Params } from \"@angular/router\";\n\nimport { BaseAcceptComponent } from \"@bitwarden/web-vault/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-setup-provider\",\n  templateUrl: \"setup-provider.component.html\",\n})\nexport class SetupProviderComponent extends BaseAcceptComponent {\n  failedShortMessage = \"inviteAcceptFailedShort\";\n  failedMessage = \"inviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"email\", \"token\"];\n\n  async authedHandler(qParams: Params) {\n    this.router.navigate([\"/providers/setup\"], { queryParams: qParams });\n  }\n\n  async unauthedHandler(qParams: Params) {\n    // Empty\n  }\n}\n","export class ProviderSetupRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  token: string;\n  key: string;\n}\n","<app-navbar></app-navbar>\n<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"setupProvider\" | i18n }}</h1>\n  </div>\n  <p>{{ \"setupProviderDesc\" | i18n }}</p>\n\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"loading\">\n    <h2 class=\"mt-5\">{{ \"generalInformation\" | i18n }}</h2>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required />\n      </div>\n      <div class=\"form-group col-6\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"billingEmail\"\n          required\n        />\n      </div>\n    </div>\n\n    <div class=\"mt-4\">\n      <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"submit\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { ProviderSetupRequest } from \"@bitwarden/common/models/request/provider/provider-setup.request\";\n\n@Component({\n  selector: \"provider-setup\",\n  templateUrl: \"setup.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SetupComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  formPromise: Promise<any>;\n\n  providerId: string;\n  token: string;\n  name: string;\n  billingEmail: string;\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService\n  ) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.providerId == null || qParams.email == null || qParams.token == null;\n\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"emergencyInviteAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.providerId = qParams.providerId;\n      this.token = qParams.token;\n\n      // Check if provider exists, redirect if it does\n      try {\n        const provider = await this.apiService.getProvider(this.providerId);\n        if (provider.name != null) {\n          this.router.navigate([\"/providers\", provider.id], { replaceUrl: true });\n        }\n      } catch (e) {\n        this.validationService.showError(e);\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit();\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  async doSubmit() {\n    try {\n      const shareKey = await this.cryptoService.makeShareKey();\n      const key = shareKey[0].encryptedString;\n\n      const request = new ProviderSetupRequest();\n      request.name = this.name;\n      request.billingEmail = this.billingEmail;\n      request.token = this.token;\n      request.key = key;\n\n      const provider = await this.apiService.postProviderSetup(this.providerId, request);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerSetup\"));\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/providers\", provider.id]);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\nimport { FrontendLayoutComponent } from \"@bitwarden/web-vault/app/layouts/frontend-layout.component\";\nimport { ProvidersComponent } from \"@bitwarden/web-vault/app/providers/providers.component\";\n\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\nimport { ProviderPermissionsGuard } from \"./guards/provider-permissions.guard\";\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    component: ProvidersComponent,\n  },\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    children: [\n      {\n        path: \"setup-provider\",\n        component: SetupProviderComponent,\n        data: { titleId: \"setupProvider\" },\n      },\n      {\n        path: \"accept-provider\",\n        component: AcceptProviderComponent,\n        data: { titleId: \"acceptProvider\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: \"setup\",\n        component: SetupComponent,\n      },\n      {\n        path: \":providerId\",\n        component: ProvidersLayoutComponent,\n        canActivate: [ProviderPermissionsGuard],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"clients\" },\n          { path: \"clients/create\", component: CreateOrganizationComponent },\n          { path: \"clients\", component: ClientsComponent, data: { titleId: \"clients\" } },\n          {\n            path: \"manage\",\n            component: ManageComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"people\",\n              },\n              {\n                path: \"people\",\n                component: PeopleComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"people\",\n                  providerPermissions: (provider: Provider) => provider.canManageUsers,\n                },\n              },\n              {\n                path: \"events\",\n                component: EventsComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"eventLogs\",\n                  providerPermissions: (provider: Provider) => provider.canAccessEventLogs,\n                },\n              },\n            ],\n          },\n          {\n            path: \"settings\",\n            component: SettingsComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"account\",\n              },\n              {\n                path: \"account\",\n                component: AccountComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"myProvider\",\n                  providerPermissions: (provider: Provider) => provider.isProviderAdmin,\n                },\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProvidersRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { ComponentFactoryResolver, NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { OssModule } from \"@bitwarden/web-vault/app/oss.module\";\n\nimport { AddOrganizationComponent } from \"./clients/add-organization.component\";\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\nimport { ProviderPermissionsGuard } from \"./guards/provider-permissions.guard\";\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { BulkConfirmComponent } from \"./manage/bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./manage/bulk/bulk-remove.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { UserAddEditComponent } from \"./manage/user-add-edit.component\";\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { ProvidersRoutingModule } from \"./providers-routing.module\";\nimport { WebProviderService } from \"./services/webProvider.service\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, OssModule, JslibModule, ProvidersRoutingModule],\n  declarations: [\n    AcceptProviderComponent,\n    AccountComponent,\n    AddOrganizationComponent,\n    BulkConfirmComponent,\n    BulkRemoveComponent,\n    ClientsComponent,\n    CreateOrganizationComponent,\n    EventsComponent,\n    ManageComponent,\n    PeopleComponent,\n    ProvidersLayoutComponent,\n    SettingsComponent,\n    SetupComponent,\n    SetupProviderComponent,\n    UserAddEditComponent,\n  ],\n  providers: [WebProviderService, ProviderPermissionsGuard],\n})\nexport class ProvidersModule {\n  constructor(modalService: ModalService, componentFactoryResolver: ComponentFactoryResolver) {\n    modalService.registerComponentFactoryResolver(\n      AddOrganizationComponent,\n      componentFactoryResolver\n    );\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { ProvidersModule } from \"./providers/providers.module\";\n\nconst routes: Routes = [\n  {\n    path: \"providers\",\n    loadChildren: () => ProvidersModule,\n  },\n  {\n    path: \"sm\",\n    loadChildren: async () =>\n      (await import(\"./secrets-manager/secrets-manager.module\")).SecretsManagerModule,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { DOCUMENT } from \"@angular/common\";\nimport { Component, Inject, NgZone, OnDestroy, OnInit, SecurityContext } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport * as jq from \"jquery\";\nimport { IndividualConfig, ToastrService } from \"ngx-toastr\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport Swal from \"sweetalert2\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventUploadService } from \"@bitwarden/common/abstractions/event/event-upload.service\";\nimport { InternalFolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SettingsService } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\n\nimport { PolicyListService, RouterService } from \"./core\";\nimport {\n  DisableSendPolicy,\n  MasterPasswordPolicy,\n  PasswordGeneratorPolicy,\n  PersonalOwnershipPolicy,\n  RequireSsoPolicy,\n  ResetPasswordPolicy,\n  SendOptionsPolicy,\n  SingleOrgPolicy,\n  TwoFactorAuthenticationPolicy,\n} from \"./organizations/policies\";\n\nconst BroadcasterSubscriptionId = \"AppComponent\";\nconst IdleTimeout = 60000 * 10; // 10 minutes\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"app.component.html\",\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  private lastActivity: number = null;\n  private idleTimer: number = null;\n  private isIdle = false;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private broadcasterService: BroadcasterService,\n    private folderService: InternalFolderService,\n    private settingsService: SettingsService,\n    private syncService: SyncService,\n    private passwordGenerationService: PasswordGenerationService,\n    private cipherService: CipherService,\n    private authService: AuthService,\n    private router: Router,\n    private toastrService: ToastrService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    private vaultTimeoutService: VaultTimeoutService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private sanitizer: DomSanitizer,\n    private searchService: SearchService,\n    private notificationsService: NotificationsService,\n    private routerService: RouterService,\n    private stateService: StateService,\n    private eventUploadService: EventUploadService,\n    private policyService: InternalPolicyService,\n    protected policyListService: PolicyListService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  ngOnInit() {\n    this.i18nService.locale$.pipe(takeUntil(this.destroy$)).subscribe((locale) => {\n      this.document.documentElement.lang = locale;\n    });\n\n    this.ngZone.runOutsideAngular(() => {\n      window.onmousemove = () => this.recordActivity();\n      window.onmousedown = () => this.recordActivity();\n      window.ontouchstart = () => this.recordActivity();\n      window.onclick = () => this.recordActivity();\n      window.onscroll = () => this.recordActivity();\n      window.onkeypress = () => this.recordActivity();\n    });\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"loggedIn\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"loggedOut\":\n            this.routerService.setPreviousUrl(null);\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"unlocked\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"authBlocked\":\n            this.routerService.setPreviousUrl(message.url);\n            this.router.navigate([\"/\"]);\n            break;\n          case \"logout\":\n            this.logOut(!!message.expired, message.redirect);\n            break;\n          case \"lockVault\":\n            await this.vaultTimeoutService.lock();\n            break;\n          case \"locked\":\n            this.notificationsService.updateConnection(false);\n            this.router.navigate([\"lock\"]);\n            break;\n          case \"lockedUrl\":\n            this.routerService.setPreviousUrl(message.url);\n            break;\n          case \"syncStarted\":\n            break;\n          case \"syncCompleted\":\n            break;\n          case \"upgradeOrganization\": {\n            const upgradeConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"upgradeOrganizationDesc\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (upgradeConfirmed) {\n              this.router.navigate([\n                \"organizations\",\n                message.organizationId,\n                \"settings\",\n                \"billing\",\n              ]);\n            }\n            break;\n          }\n          case \"premiumRequired\": {\n            const premiumConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"premiumRequiredDesc\"),\n              this.i18nService.t(\"premiumRequired\"),\n              this.i18nService.t(\"upgrade\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (premiumConfirmed) {\n              this.router.navigate([\"settings/subscription/premium\"]);\n            }\n            break;\n          }\n          case \"emailVerificationRequired\": {\n            const emailVerificationConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"emailVerificationRequiredDesc\"),\n              this.i18nService.t(\"emailVerificationRequired\"),\n              this.i18nService.t(\"learnMore\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (emailVerificationConfirmed) {\n              this.platformUtilsService.launchUri(\n                \"https://bitwarden.com/help/create-bitwarden-account/\"\n              );\n            }\n            break;\n          }\n          case \"showToast\":\n            this.showToast(message);\n            break;\n          case \"setFullWidth\":\n            this.setFullWidth();\n            break;\n          case \"convertAccountToKeyConnector\":\n            this.router.navigate([\"/remove-password\"]);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n\n    this.router.events.pipe(takeUntil(this.destroy$)).subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        const modals = Array.from(document.querySelectorAll(\".modal\"));\n        for (const modal of modals) {\n          (jq(modal) as any).modal(\"hide\");\n        }\n\n        if (document.querySelector(\".swal-modal\") != null) {\n          Swal.close(undefined);\n        }\n      }\n    });\n\n    this.policyListService.addPolicies([\n      new TwoFactorAuthenticationPolicy(),\n      new MasterPasswordPolicy(),\n      new ResetPasswordPolicy(),\n      new PasswordGeneratorPolicy(),\n      new SingleOrgPolicy(),\n      new RequireSsoPolicy(),\n      new PersonalOwnershipPolicy(),\n      new DisableSendPolicy(),\n      new SendOptionsPolicy(),\n    ]);\n\n    this.setFullWidth();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private async logOut(expired: boolean, redirect = true) {\n    await this.eventUploadService.uploadEvents();\n    const userId = await this.stateService.getUserId();\n    await Promise.all([\n      this.syncService.setLastSync(new Date(0)),\n      this.cryptoService.clearKeys(),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(),\n      this.keyConnectorService.clear(),\n    ]);\n\n    this.searchService.clearIndex();\n    this.authService.logOut(async () => {\n      if (expired) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          this.i18nService.t(\"loggedOut\"),\n          this.i18nService.t(\"loginExpired\")\n        );\n      }\n\n      await this.stateService.clean({ userId: userId });\n      Swal.close();\n      if (redirect) {\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  private async recordActivity() {\n    const now = new Date().getTime();\n    if (this.lastActivity != null && now - this.lastActivity < 250) {\n      return;\n    }\n\n    this.lastActivity = now;\n    this.stateService.setLastActive(now);\n    // Idle states\n    if (this.isIdle) {\n      this.isIdle = false;\n      this.idleStateChanged();\n    }\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idleTimer = window.setTimeout(() => {\n      if (!this.isIdle) {\n        this.isIdle = true;\n        this.idleStateChanged();\n      }\n    }, IdleTimeout);\n  }\n\n  private showToast(msg: any) {\n    let message = \"\";\n\n    const options: Partial<IndividualConfig> = {};\n\n    if (typeof msg.text === \"string\") {\n      message = msg.text;\n    } else if (msg.text.length === 1) {\n      message = msg.text[0];\n    } else {\n      msg.text.forEach(\n        (t: string) =>\n          (message += \"<p>\" + this.sanitizer.sanitize(SecurityContext.HTML, t) + \"</p>\")\n      );\n      options.enableHtml = true;\n    }\n    if (msg.options != null) {\n      if (msg.options.trustedHtml === true) {\n        options.enableHtml = true;\n      }\n      if (msg.options.timeout != null && msg.options.timeout > 0) {\n        options.timeOut = msg.options.timeout;\n      }\n    }\n\n    this.toastrService.show(message, msg.title, options, \"toast-\" + msg.type);\n  }\n\n  private idleStateChanged() {\n    if (this.isIdle) {\n      this.notificationsService.disconnectFromInactivity();\n    } else {\n      this.notificationsService.reconnectFromActivity();\n    }\n  }\n\n  private async setFullWidth() {\n    const enableFullWidth = await this.stateService.getEnableFullWidth();\n    if (enableFullWidth) {\n      document.body.classList.add(\"full-width\");\n    } else {\n      document.body.classList.remove(\"full-width\");\n    }\n  }\n}\n","<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport {\n  BasePolicy,\n  BasePolicyComponent,\n} from \"@bitwarden/web-vault/app/organizations/policies/base-policy.component\";\n\nexport class DisablePersonalVaultExportPolicy extends BasePolicy {\n  name = \"disablePersonalVaultExport\";\n  description = \"disablePersonalVaultExportDesc\";\n  type = PolicyType.DisablePersonalVaultExport;\n  component = DisablePersonalVaultExportPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-personal-vault-export\",\n  templateUrl: \"disable-personal-vault-export.component.html\",\n})\nexport class DisablePersonalVaultExportPolicyComponent extends BasePolicyComponent {}\n","<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\nimport {\n  BasePolicy,\n  BasePolicyComponent,\n} from \"@bitwarden/web-vault/app/organizations/policies/base-policy.component\";\n\nexport class MaximumVaultTimeoutPolicy extends BasePolicy {\n  name = \"maximumVaultTimeout\";\n  description = \"maximumVaultTimeoutDesc\";\n  type = PolicyType.MaximumVaultTimeout;\n  component = MaximumVaultTimeoutPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-maximum-timeout\",\n  templateUrl: \"maximum-vault-timeout.component.html\",\n})\nexport class MaximumVaultTimeoutPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    hours: [null],\n    minutes: [null],\n  });\n\n  constructor(private formBuilder: UntypedFormBuilder, private i18nService: I18nService) {\n    super();\n  }\n\n  loadData() {\n    const minutes = this.policyResponse.data?.minutes;\n\n    if (minutes == null) {\n      return;\n    }\n\n    this.data.patchValue({\n      hours: Math.floor(minutes / 60),\n      minutes: minutes % 60,\n    });\n  }\n\n  buildRequestData() {\n    if (this.data.value.hours == null && this.data.value.minutes == null) {\n      return null;\n    }\n\n    return {\n      minutes: this.data.value.hours * 60 + this.data.value.minutes,\n    };\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    const data = this.buildRequestData();\n    if (data?.minutes == null || data?.minutes <= 0) {\n      throw new Error(this.i18nService.t(\"invalidMaximumVaultTimeout\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <label for=\"hours\">{{ \"maximumVaultTimeoutLabel\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AppComponent as BaseAppComponent } from \"@bitwarden/web-vault/app/app.component\";\n\nimport { DisablePersonalVaultExportPolicy } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicy } from \"./policies/maximum-vault-timeout.component\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"../../../../apps/web/src/app/app.component.html\",\n})\nexport class AppComponent extends BaseAppComponent {\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.policyListService.addPolicies([\n      new MaximumVaultTimeoutPolicy(),\n      new DisablePersonalVaultExportPolicy(),\n    ]);\n  }\n}\n","import { ScimProviderType } from \"../../enums/scimProviderType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class ScimConfigApi extends BaseResponse {\n  enabled: boolean;\n  scimProvider: ScimProviderType;\n\n  constructor(data: any) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.scimProvider = this.getResponseProperty(\"ScimProvider\");\n  }\n}\n","import { ScimProviderType } from \"../../enums/scimProviderType\";\n\nexport class ScimConfigRequest {\n  constructor(private enabled: boolean, private scimProvider: ScimProviderType = null) {}\n}\n","<div class=\"page-header\">\n  <h1>{{ \"scim\" | i18n }}</h1>\n</div>\n\n<p>{{ \"scimDescription\" | i18n }}</p>\n\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  [formGroup]=\"formData\"\n  *ngIf=\"!loading\"\n>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n        aria-describedby=\"scimEnabledCheckboxDescHelpText\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"scimEnabledCheckboxDesc\" | i18n }}</label>\n      <div id=\"scimEnabledCheckboxDescHelpText\">\n        <small class=\"form-text text-muted\">{{ \"scimEnabledCheckboxDescHelpText\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n\n  <bit-form-field *ngIf=\"showScimSettings\">\n    <bit-label>{{ \"scimUrl\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"endpointUrl\" />\n    <button\n      type=\"button\"\n      bitSuffix\n      bitIconButton=\"bwi-clone\"\n      (click)=\"copyScimUrl()\"\n      [appA11yTitle]=\"'copyScimUrl' | i18n\"\n    ></button>\n  </bit-form-field>\n\n  <bit-form-field *ngIf=\"showScimSettings\">\n    <bit-label>{{ \"scimApiKey\" | i18n }}</bit-label>\n    <input\n      bitInput\n      [type]=\"showScimKey ? 'text' : 'password'\"\n      formControlName=\"clientSecret\"\n      id=\"clientSecret\"\n    />\n    <ng-container>\n      <button\n        type=\"button\"\n        bitSuffix\n        [disabled]=\"$any(rotateButton).loading\"\n        [bitIconButton]=\"showScimKey ? 'bwi-eye-slash' : 'bwi-eye'\"\n        (click)=\"toggleScimKey()\"\n        [appA11yTitle]=\"'toggleVisibility' | i18n\"\n      ></button>\n    </ng-container>\n    <ng-container #rotateButton [appApiAction]=\"rotatePromise\">\n      <!-- TODO: Convert to async actions -->\n      <button\n        [loading]=\"$any(rotateButton).loading\"\n        type=\"button\"\n        bitSuffix\n        bitIconButton=\"bwi-generate\"\n        (click)=\"rotateScimKey()\"\n        [appA11yTitle]=\"'rotateScimKey' | i18n\"\n      ></button>\n    </ng-container>\n    <button\n      type=\"button\"\n      bitSuffix\n      bitIconButton=\"bwi-clone\"\n      (click)=\"copyScimKey()\"\n      [appA11yTitle]=\"'copyScimKey' | i18n\"\n    ></button>\n    <bit-hint>{{ \"scimApiKeyHelperText\" | i18n }}</bit-hint>\n  </bit-form-field>\n\n  <button\n    type=\"submit\"\n    buttonType=\"primary\"\n    bitButton\n    [loading]=\"form.loading\"\n    [disabled]=\"form.loading\"\n  >\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormBuilder, FormControl } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/enums/organizationApiKeyType\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/enums/organizationConnectionType\";\nimport { ScimConfigApi } from \"@bitwarden/common/models/api/scim-config.api\";\nimport { OrganizationApiKeyRequest } from \"@bitwarden/common/models/request/organization-api-key.request\";\nimport { OrganizationConnectionRequest } from \"@bitwarden/common/models/request/organization-connection.request\";\nimport { ScimConfigRequest } from \"@bitwarden/common/models/request/scim-config.request\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/api-key.response\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/models/response/organization-connection.response\";\n\n@Component({\n  selector: \"app-org-manage-scim\",\n  templateUrl: \"scim.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ScimComponent implements OnInit {\n  loading = true;\n  organizationId: string;\n  existingConnectionId: string;\n  formPromise: Promise<OrganizationConnectionResponse<ScimConfigApi>>;\n  rotatePromise: Promise<ApiKeyResponse>;\n  enabled = new FormControl(false);\n  showScimSettings = false;\n  showScimKey = false;\n\n  formData = this.formBuilder.group({\n    endpointUrl: new FormControl({ value: \"\", disabled: true }),\n    clientSecret: new FormControl({ value: \"\", disabled: true }),\n  });\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private environmentService: EnvironmentService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    const connection = await this.apiService.getOrganizationConnection(\n      this.organizationId,\n      OrganizationConnectionType.Scim,\n      ScimConfigApi\n    );\n    await this.setConnectionFormValues(connection);\n  }\n\n  async loadApiKey() {\n    const apiKeyRequest = new OrganizationApiKeyRequest();\n    apiKeyRequest.type = OrganizationApiKeyType.Scim;\n    apiKeyRequest.masterPasswordHash = \"N/A\";\n    const apiKeyResponse = await this.organizationApiService.getOrCreateApiKey(\n      this.organizationId,\n      apiKeyRequest\n    );\n    this.formData.setValue({\n      endpointUrl: this.getScimEndpointUrl(),\n      clientSecret: apiKeyResponse.apiKey,\n    });\n  }\n\n  async copyScimUrl() {\n    this.platformUtilsService.copyToClipboard(this.getScimEndpointUrl());\n  }\n\n  async rotateScimKey() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"rotateScimKeyWarning\"),\n      this.i18nService.t(\"rotateScimKey\"),\n      this.i18nService.t(\"rotateKey\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    const request = new OrganizationApiKeyRequest();\n    request.type = OrganizationApiKeyType.Scim;\n    request.masterPasswordHash = \"N/A\";\n\n    this.rotatePromise = this.organizationApiService.rotateApiKey(this.organizationId, request);\n\n    try {\n      const response = await this.rotatePromise;\n      this.formData.setValue({\n        endpointUrl: this.getScimEndpointUrl(),\n        clientSecret: response.apiKey,\n      });\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"scimApiKeyRotated\"));\n    } catch {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.rotatePromise = null;\n  }\n\n  async copyScimKey() {\n    this.platformUtilsService.copyToClipboard(this.formData.get(\"clientSecret\").value);\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationConnectionRequest(\n        this.organizationId,\n        OrganizationConnectionType.Scim,\n        true,\n        new ScimConfigRequest(this.enabled.value)\n      );\n      if (this.existingConnectionId == null) {\n        this.formPromise = this.apiService.createOrganizationConnection(request, ScimConfigApi);\n      } else {\n        this.formPromise = this.apiService.updateOrganizationConnection(\n          request,\n          ScimConfigApi,\n          this.existingConnectionId\n        );\n      }\n      const response = (await this.formPromise) as OrganizationConnectionResponse<ScimConfigApi>;\n      await this.setConnectionFormValues(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"scimSettingsSaved\"));\n    } catch (e) {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.formPromise = null;\n  }\n\n  getScimEndpointUrl() {\n    return this.environmentService.getScimUrl() + \"/\" + this.organizationId;\n  }\n\n  toggleScimKey() {\n    this.showScimKey = !this.showScimKey;\n    document.getElementById(\"clientSecret\").focus();\n  }\n\n  private async setConnectionFormValues(connection: OrganizationConnectionResponse<ScimConfigApi>) {\n    this.existingConnectionId = connection?.id;\n    if (connection !== null && connection.config?.enabled) {\n      this.showScimSettings = true;\n      this.enabled.setValue(true);\n      this.formData.setValue({\n        endpointUrl: this.getScimEndpointUrl(),\n        clientSecret: \"\",\n      });\n      await this.loadApiKey();\n    } else {\n      this.showScimSettings = false;\n      this.enabled.setValue(false);\n    }\n    this.loading = false;\n  }\n}\n","import { SsoConfigApi } from \"../../api/sso-config.api\";\n\nexport class OrganizationSsoRequest {\n  enabled = false;\n  identifier: string;\n  data: SsoConfigApi;\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { SsoConfigApi } from \"../api/sso-config.api\";\n\nimport { View } from \"./view\";\n\nexport class SsoConfigView extends View {\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  openId: {\n    authority: string;\n    clientId: string;\n    clientSecret: string;\n    metadataAddress: string;\n    redirectBehavior: OpenIdConnectRedirectBehavior;\n    getClaimsFromUserInfoEndpoint: boolean;\n    additionalScopes: string;\n    additionalUserIdClaimTypes: string;\n    additionalEmailClaimTypes: string;\n    additionalNameClaimTypes: string;\n    acrValues: string;\n    expectedReturnAcrValue: string;\n  };\n\n  saml: {\n    spNameIdFormat: Saml2NameIdFormat;\n    spOutboundSigningAlgorithm: string;\n    spSigningBehavior: Saml2SigningBehavior;\n    spMinIncomingSigningAlgorithm: string;\n    spWantAssertionsSigned: boolean;\n    spValidateCertificates: boolean;\n\n    idpEntityId: string;\n    idpBindingType: Saml2BindingType;\n    idpSingleSignOnServiceUrl: string;\n    idpSingleLogoutServiceUrl: string;\n    idpX509PublicCert: string;\n    idpOutboundSigningAlgorithm: string;\n    idpAllowUnsolicitedAuthnResponse: boolean;\n    idpAllowOutboundLogoutRequests: boolean;\n    idpWantAuthnRequestsSigned: boolean;\n  };\n\n  constructor(api: SsoConfigApi) {\n    super();\n    if (api == null) {\n      return;\n    }\n\n    this.configType = api.configType;\n\n    this.keyConnectorEnabled = api.keyConnectorEnabled;\n    this.keyConnectorUrl = api.keyConnectorUrl;\n\n    if (this.configType === SsoType.OpenIdConnect) {\n      this.openId = {\n        authority: api.authority,\n        clientId: api.clientId,\n        clientSecret: api.clientSecret,\n        metadataAddress: api.metadataAddress,\n        redirectBehavior: api.redirectBehavior,\n        getClaimsFromUserInfoEndpoint: api.getClaimsFromUserInfoEndpoint,\n        additionalScopes: api.additionalScopes,\n        additionalUserIdClaimTypes: api.additionalUserIdClaimTypes,\n        additionalEmailClaimTypes: api.additionalEmailClaimTypes,\n        additionalNameClaimTypes: api.additionalNameClaimTypes,\n        acrValues: api.acrValues,\n        expectedReturnAcrValue: api.expectedReturnAcrValue,\n      };\n    } else if (this.configType === SsoType.Saml2) {\n      this.saml = {\n        spNameIdFormat: api.spNameIdFormat,\n        spOutboundSigningAlgorithm: api.spOutboundSigningAlgorithm,\n        spSigningBehavior: api.spSigningBehavior,\n        spMinIncomingSigningAlgorithm: api.spMinIncomingSigningAlgorithm,\n        spWantAssertionsSigned: api.spWantAssertionsSigned,\n        spValidateCertificates: api.spValidateCertificates,\n\n        idpEntityId: api.idpEntityId,\n        idpBindingType: api.idpBindingType,\n        idpSingleSignOnServiceUrl: api.idpSingleSignOnServiceUrl,\n        idpSingleLogoutServiceUrl: api.idpSingleLogoutServiceUrl,\n        idpX509PublicCert: api.idpX509PublicCert,\n        idpOutboundSigningAlgorithm: api.idpOutboundSigningAlgorithm,\n        idpAllowUnsolicitedAuthnResponse: api.idpAllowUnsolicitedAuthnResponse,\n        idpWantAuthnRequestsSigned: api.idpWantAuthnRequestsSigned,\n\n        // Value is inverted in the view model (allow instead of disable)\n        idpAllowOutboundLogoutRequests:\n          api.idpDisableOutboundLogoutRequests == null\n            ? null\n            : !api.idpDisableOutboundLogoutRequests,\n      };\n    }\n  }\n}\n","export class View {}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"input[appInputStripSpaces]\",\n})\nexport class InputStripSpacesDirective {\n  constructor(private el: ElementRef<HTMLInputElement>) {}\n\n  @HostListener(\"input\") onInput() {\n    this.el.nativeElement.value = this.el.nativeElement.value.replace(/ /g, \"\");\n  }\n}\n","import { Directive, HostListener, Input } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appCopyClick]\",\n})\nexport class CopyClickDirective {\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  @Input(\"appCopyClick\") valueToCopy = \"\";\n\n  @HostListener(\"click\") onClick() {\n    this.platformUtilsService.copyToClipboard(this.valueToCopy);\n  }\n}\n","import { Directive, HostListener, Input } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive({\n  selector: \"[appLaunchClick]\",\n})\nexport class LaunchClickDirective {\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  @Input(\"appLaunchClick\") uriToLaunch = \"\";\n\n  @HostListener(\"click\") onClick() {\n    if (!Utils.isNullOrWhitespace(this.uriToLaunch)) {\n      this.platformUtilsService.launchUri(this.uriToLaunch);\n    }\n  }\n}\n","import { Directive, Input, OnInit, Self } from \"@angular/core\";\nimport { ControlValueAccessor, UntypedFormControl, NgControl, Validators } from \"@angular/forms\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Directive()\nexport abstract class BaseCvaComponent implements ControlValueAccessor, OnInit {\n  get describedById() {\n    return this.showDescribedBy ? this.controlId + \"Desc\" : null;\n  }\n\n  get showDescribedBy() {\n    return this.helperText != null || this.controlDir.control.hasError(\"required\");\n  }\n\n  get isRequired() {\n    return this.controlDir.control.hasValidator(Validators.required);\n  }\n\n  @Input() label: string;\n  @Input() controlId: string;\n  @Input() helperText: string;\n\n  internalControl = new UntypedFormControl(\"\");\n\n  protected onChange: any;\n  protected onTouched: any;\n\n  constructor(@Self() public controlDir: NgControl) {\n    this.controlDir.valueAccessor = this;\n  }\n\n  ngOnInit() {\n    this.internalControl.valueChanges.subscribe(this.onValueChangesInternal);\n  }\n\n  onBlurInternal() {\n    this.onTouched();\n  }\n\n  // CVA interfaces\n  writeValue(value: string) {\n    this.internalControl.setValue(value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    if (isDisabled) {\n      this.internalControl.disable();\n    } else {\n      this.internalControl.enable();\n    }\n  }\n\n  protected onValueChangesInternal: any = (value: string) => this.onChange(value);\n  // End CVA interfaces\n}\n","<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      [attr.id]=\"controlId\"\n      [attr.aria-describedby]=\"describedById\"\n      [formControl]=\"internalControl\"\n      (blur)=\"onBlurInternal()\"\n    />\n    <label class=\"form-check-label\" [attr.for]=\"controlId\">{{ label }}</label>\n  </div>\n  <small *ngIf=\"showDescribedBy\" [attr.id]=\"describedById\" class=\"form-text text-muted\">{{\n    helperText\n  }}</small>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-checkbox\",\n  templateUrl: \"input-checkbox.component.html\",\n})\nexport class InputCheckboxComponent extends BaseCvaComponent {}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"singleSignOn\" | i18n }}</h1>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [formGroup]=\"ssoConfigForm\"\n  [appApiAction]=\"formPromise\"\n  *ngIf=\"!loading\"\n>\n  <p>\n    {{ \"ssoPolicyHelpStart\" | i18n }}\n    <a routerLink=\"../policies\">{{ \"ssoPolicyHelpLink\" | i18n }}</a>\n    {{ \"ssoPolicyHelpEnd\" | i18n }}\n    <br />\n    {{ \"ssoPolicyHelpKeyConnector\" | i18n }}\n  </p>\n\n  <!-- Root form -->\n  <ng-container>\n    <app-input-checkbox\n      controlId=\"enabled\"\n      [formControl]=\"enabled\"\n      [label]=\"'allowSso' | i18n\"\n      [helperText]=\"'allowSsoDesc' | i18n\"\n    ></app-input-checkbox>\n\n    <bit-form-field>\n      <bit-label>{{ \"ssoIdentifier\" | i18n }}</bit-label>\n      <input bitInput type=\"text\" [formControl]=\"ssoIdentifier\" />\n      <bit-hint>{{ \"ssoIdentifierHint\" | i18n }}</bit-hint>\n    </bit-form-field>\n\n    <hr />\n\n    <div class=\"form-group\">\n      <label>{{ \"memberDecryptionOption\" | i18n }}</label>\n      <div class=\"form-check form-check-block\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"memberDecryptionPass\"\n          [value]=\"false\"\n          formControlName=\"keyConnectorEnabled\"\n        />\n        <label class=\"form-check-label\" for=\"memberDecryptionPass\">\n          {{ \"masterPass\" | i18n }}\n          <small>{{ \"memberDecryptionPassDesc\" | i18n }}</small>\n        </label>\n      </div>\n      <div class=\"form-check mt-2 form-check-block\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"memberDecryptionKey\"\n          [value]=\"true\"\n          formControlName=\"keyConnectorEnabled\"\n          [attr.disabled]=\"!organization.useKeyConnector || null\"\n        />\n        <label class=\"form-check-label\" for=\"memberDecryptionKey\">\n          {{ \"keyConnector\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/about-key-connector/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n          <small>{{ \"memberDecryptionKeyConnectorDesc\" | i18n }}</small>\n        </label>\n      </div>\n    </div>\n\n    <!-- Key Connector -->\n    <ng-container *ngIf=\"ssoConfigForm.get('keyConnectorEnabled').value\">\n      <app-callout type=\"warning\" [useAlertRole]=\"true\">\n        {{ \"keyConnectorWarning\" | i18n }}\n      </app-callout>\n\n      <bit-form-field>\n        <bit-label>{{ \"keyConnectorUrl\" | i18n }}</bit-label>\n        <input\n          bitInput\n          type=\"text\"\n          required\n          formControlName=\"keyConnectorUrl\"\n          appInputStripSpaces\n          (input)=\"haveTestedKeyConnector = false\"\n        />\n        <button\n          bitSuffix\n          bitButton\n          [disabled]=\"!enableTestKeyConnector\"\n          type=\"button\"\n          (click)=\"validateKeyConnectorUrl()\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"keyConnectorUrl.pending\"\n          ></i>\n          <span *ngIf=\"!keyConnectorUrl.pending\">\n            {{ \"keyConnectorTest\" | i18n }}\n          </span>\n        </button>\n        <bit-hint\n          aria-live=\"polite\"\n          *ngIf=\"haveTestedKeyConnector && !keyConnectorUrl.hasError('invalidUrl')\"\n        >\n          <small class=\"text-success\">\n            <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n            {{ \"keyConnectorTestSuccess\" | i18n }}\n          </small>\n        </bit-hint>\n      </bit-form-field>\n    </ng-container>\n\n    <hr />\n\n    <bit-form-field>\n      <bit-label>{{ \"type\" | i18n }}</bit-label>\n      <select bitInput formControlName=\"configType\">\n        <option *ngFor=\"let o of ssoTypeOptions\" [ngValue]=\"o.value\" disabled=\"{{ o.disabled }}\">\n          {{ o.name }}\n        </option>\n      </select>\n    </bit-form-field>\n  </ng-container>\n\n  <!-- OIDC -->\n  <div\n    *ngIf=\"ssoConfigForm.get('configType').value === ssoType.OpenIdConnect\"\n    [formGroup]=\"openIdForm\"\n  >\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"openIdConnectConfig\" | i18n }}</h2>\n\n      <bit-form-field>\n        <bit-label>{{ \"callbackPath\" | i18n }}</bit-label>\n        <input bitInput disabled [value]=\"callbackPath\" />\n        <button\n          bitIconButton=\"bwi-clone\"\n          bitSuffix\n          type=\"button\"\n          [appCopyClick]=\"callbackPath\"\n          [appA11yTitle]=\"'copyValue' | i18n\"\n        ></button>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"signedOutCallbackPath\" | i18n }}</bit-label>\n        <input bitInput disabled [value]=\"signedOutCallbackPath\" />\n        <button\n          bitIconButton=\"bwi-clone\"\n          bitSuffix\n          type=\"button\"\n          [appCopyClick]=\"signedOutCallbackPath\"\n          [appA11yTitle]=\"'copyValue' | i18n\"\n        ></button>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"authority\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"authority\" appInputStripSpaces />\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"clientId\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"clientId\" appInputStripSpaces />\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"clientSecret\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"clientSecret\" appInputStripSpaces />\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"metadataAddress\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"metadataAddress\" appInputStripSpaces />\n        <bit-hint>{{ \"openIdAuthorityRequired\" | i18n }}</bit-hint>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"oidcRedirectBehavior\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"redirectBehavior\">\n          <option\n            *ngFor=\"let o of connectRedirectOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <app-input-checkbox\n        controlId=\"getClaimsFromUserInfoEndpoint\"\n        formControlName=\"getClaimsFromUserInfoEndpoint\"\n        [label]=\"'getClaimsFromUserInfoEndpoint' | i18n\"\n      ></app-input-checkbox>\n\n      <!-- Optional customizations -->\n      <div\n        class=\"section-header d-flex flex-row align-items-center mt-3 mb-3\"\n        (click)=\"toggleOpenIdCustomizations()\"\n      >\n        <h3 class=\"mb-0 mr-2\" id=\"customizations-header\">\n          {{ \"openIdOptionalCustomizations\" | i18n }}\n        </h3>\n        <button\n          class=\"mb-1 btn btn-link\"\n          type=\"button\"\n          appStopClick\n          role=\"button\"\n          aria-controls=\"customizations\"\n          [attr.aria-expanded]=\"showOpenIdCustomizations\"\n          aria-labelledby=\"customizations-header\"\n        >\n          <i\n            class=\"bwi\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-right': !showOpenIdCustomizations,\n              'bwi-angle-down': showOpenIdCustomizations\n            }\"\n          ></i>\n        </button>\n      </div>\n      <div id=\"customizations\" [hidden]=\"!showOpenIdCustomizations\">\n        <bit-form-field>\n          <bit-label>{{ \"additionalScopes\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"additionalScopes\" />\n          <bit-hint>{{ \"separateMultipleWithComma\" | i18n }}</bit-hint>\n        </bit-form-field>\n\n        <bit-form-field>\n          <bit-label>{{ \"additionalUserIdClaimTypes\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"additionalUserIdClaimTypes\" />\n          <bit-hint>{{ \"separateMultipleWithComma\" | i18n }}</bit-hint>\n        </bit-form-field>\n\n        <bit-form-field>\n          <bit-label>{{ \"additionalEmailClaimTypes\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"additionalEmailClaimTypes\" />\n          <bit-hint>{{ \"separateMultipleWithComma\" | i18n }}</bit-hint>\n        </bit-form-field>\n\n        <bit-form-field>\n          <bit-label>{{ \"additionalNameClaimTypes\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"additionalNameClaimTypes\" />\n          <bit-hint>{{ \"separateMultipleWithComma\" | i18n }}</bit-hint>\n        </bit-form-field>\n\n        <bit-form-field>\n          <bit-label>{{ \"acrValues\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"acrValues\" />\n          <bit-hint>acr_values</bit-hint>\n        </bit-form-field>\n\n        <bit-form-field>\n          <bit-label>{{ \"expectedReturnAcrValue\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"expectedReturnAcrValue\" />\n          <bit-hint>acr_validaton</bit-hint>\n        </bit-form-field>\n      </div>\n    </div>\n  </div>\n\n  <!-- SAML2 SP -->\n  <div *ngIf=\"ssoConfigForm.get('configType').value === ssoType.Saml2\" [formGroup]=\"samlForm\">\n    <!-- SAML2 SP -->\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"samlSpConfig\" | i18n }}</h2>\n\n      <bit-form-field>\n        <bit-label>{{ \"spEntityId\" | i18n }}</bit-label>\n        <input bitInput disabled [value]=\"spEntityId\" />\n        <button\n          bitIconButton=\"bwi-clone\"\n          bitSuffix\n          type=\"button\"\n          [appCopyClick]=\"spEntityId\"\n          [appA11yTitle]=\"'copyValue' | i18n\"\n        ></button>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spMetadataUrl\" | i18n }}</bit-label>\n        <input bitInput disabled [value]=\"spMetadataUrl\" />\n        <button\n          bitButton\n          bitSuffix\n          type=\"button\"\n          [appLaunchClick]=\"spMetadataUrl\"\n          [appA11yTitle]=\"'launch' | i18n\"\n        >\n          <i class=\"bwi bwi-lg bwi-external-link\" aria-hidden=\"true\"></i>\n        </button>\n        <button\n          bitIconButton=\"bwi-clone\"\n          bitSuffix\n          type=\"button\"\n          [appCopyClick]=\"spMetadataUrl\"\n          [appA11yTitle]=\"'copyValue' | i18n\"\n        ></button>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spAcsUrl\" | i18n }}</bit-label>\n        <input bitInput disabled [value]=\"spAcsUrl\" />\n        <button\n          bitIconButton=\"bwi-clone\"\n          bitSuffix\n          type=\"button\"\n          [appCopyClick]=\"spAcsUrl\"\n          [appA11yTitle]=\"'copyValue' | i18n\"\n        ></button>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spNameIdFormat\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"spNameIdFormat\">\n          <option\n            *ngFor=\"let o of saml2NameIdFormatOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spOutboundSigningAlgorithm\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"spOutboundSigningAlgorithm\">\n          <option\n            *ngFor=\"let o of samlSigningAlgorithmOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spSigningBehavior\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"spSigningBehavior\">\n          <option\n            *ngFor=\"let o of saml2SigningBehaviourOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spMinIncomingSigningAlgorithm\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"spMinIncomingSigningAlgorithm\">\n          <option\n            *ngFor=\"let o of samlSigningAlgorithmOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <app-input-checkbox\n        controlId=\"spWantAssertionsSigned\"\n        formControlName=\"spWantAssertionsSigned\"\n        [label]=\"'spWantAssertionsSigned' | i18n\"\n      ></app-input-checkbox>\n\n      <app-input-checkbox\n        controlId=\"spValidateCertificates\"\n        formControlName=\"spValidateCertificates\"\n        [label]=\"'spValidateCertificates' | i18n\"\n      ></app-input-checkbox>\n    </div>\n\n    <!-- SAML2 IDP -->\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"samlIdpConfig\" | i18n }}</h2>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpEntityId\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"idpEntityId\" />\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpBindingType\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"idpBindingType\">\n          <option\n            *ngFor=\"let o of saml2BindingTypeOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpSingleSignOnServiceUrl\" | i18n }}</bit-label>\n        <input\n          bitInput\n          type=\"text\"\n          formControlName=\"idpSingleSignOnServiceUrl\"\n          appInputStripSpaces\n        />\n        <bit-hint>{{ \"idpSingleSignOnServiceUrlRequired\" | i18n }}</bit-hint>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpSingleLogoutServiceUrl\" | i18n }}</bit-label>\n        <input\n          bitInput\n          type=\"text\"\n          formControlName=\"idpSingleLogoutServiceUrl\"\n          appInputStripSpaces\n        />\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpX509PublicCert\" | i18n }}</bit-label>\n        <textarea bitInput rows=\"6\" formControlName=\"idpX509PublicCert\"></textarea>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpOutboundSigningAlgorithm\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"idpOutboundSigningAlgorithm\">\n          <option\n            *ngFor=\"let o of samlSigningAlgorithmOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <!--TODO: Uncomment once Unsolicited IdP Response is supported-->\n      <!-- <app-input-checkbox\n        controlId=\"idpAllowUnsolicitedAuthnResponse\"\n        formControlName=\"idpAllowUnsolicitedAuthnResponse\"\n        [label]=\"'idpAllowUnsolicitedAuthnResponse' | i18n\"\n      ></app-input-checkbox> -->\n\n      <app-input-checkbox\n        controlId=\"idpAllowOutboundLogoutRequests\"\n        formControlName=\"idpAllowOutboundLogoutRequests\"\n        [label]=\"'idpAllowOutboundLogoutRequests' | i18n\"\n      ></app-input-checkbox>\n\n      <app-input-checkbox\n        controlId=\"idpWantAuthnRequestsSigned\"\n        formControlName=\"idpWantAuthnRequestsSigned\"\n        [label]=\"'idpSignAuthenticationRequests' | i18n\"\n      ></app-input-checkbox>\n    </div>\n  </div>\n\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"save\" | i18n }}\n  </button>\n  <bit-error-summary [formGroup]=\"ssoConfigForm\"></bit-error-summary>\n</form>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  UntypedFormGroup,\n  Validators,\n} from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { concatMap, Subject, takeUntil } from \"rxjs\";\n\nimport { SelectOptions } from \"@bitwarden/angular/interfaces/selectOptions\";\nimport { ControlsOf } from \"@bitwarden/angular/types/controls-of\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"@bitwarden/common/enums/ssoEnums\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SsoConfigApi } from \"@bitwarden/common/models/api/sso-config.api\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationSsoRequest } from \"@bitwarden/common/models/request/organization/organization-sso.request\";\nimport { OrganizationSsoResponse } from \"@bitwarden/common/models/response/organization/organization-sso.response\";\nimport { SsoConfigView } from \"@bitwarden/common/models/view/sso-config.view\";\n\nconst defaultSigningAlgorithm = \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\";\n\n@Component({\n  selector: \"app-org-manage-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent implements OnInit, OnDestroy {\n  readonly ssoType = SsoType;\n\n  readonly ssoTypeOptions: SelectOptions[] = [\n    { name: this.i18nService.t(\"selectType\"), value: SsoType.None, disabled: true },\n    { name: \"OpenID Connect\", value: SsoType.OpenIdConnect },\n    { name: \"SAML 2.0\", value: SsoType.Saml2 },\n  ];\n\n  readonly samlSigningAlgorithms = [\n    \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha384\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha512\",\n  ];\n\n  readonly saml2SigningBehaviourOptions: SelectOptions[] = [\n    {\n      name: \"If IdP Wants Authn Requests Signed\",\n      value: Saml2SigningBehavior.IfIdpWantAuthnRequestsSigned,\n    },\n    { name: \"Always\", value: Saml2SigningBehavior.Always },\n    { name: \"Never\", value: Saml2SigningBehavior.Never },\n  ];\n  readonly saml2BindingTypeOptions: SelectOptions[] = [\n    { name: \"Redirect\", value: Saml2BindingType.HttpRedirect },\n    { name: \"HTTP POST\", value: Saml2BindingType.HttpPost },\n  ];\n  readonly saml2NameIdFormatOptions: SelectOptions[] = [\n    { name: \"Not Configured\", value: Saml2NameIdFormat.NotConfigured },\n    { name: \"Unspecified\", value: Saml2NameIdFormat.Unspecified },\n    { name: \"Email Address\", value: Saml2NameIdFormat.EmailAddress },\n    { name: \"X.509 Subject Name\", value: Saml2NameIdFormat.X509SubjectName },\n    { name: \"Windows Domain Qualified Name\", value: Saml2NameIdFormat.WindowsDomainQualifiedName },\n    { name: \"Kerberos Principal Name\", value: Saml2NameIdFormat.KerberosPrincipalName },\n    { name: \"Entity Identifier\", value: Saml2NameIdFormat.EntityIdentifier },\n    { name: \"Persistent\", value: Saml2NameIdFormat.Persistent },\n    { name: \"Transient\", value: Saml2NameIdFormat.Transient },\n  ];\n\n  readonly connectRedirectOptions: SelectOptions[] = [\n    { name: \"Redirect GET\", value: OpenIdConnectRedirectBehavior.RedirectGet },\n    { name: \"Form POST\", value: OpenIdConnectRedirectBehavior.FormPost },\n  ];\n\n  private destory$ = new Subject<void>();\n\n  showOpenIdCustomizations = false;\n\n  loading = true;\n  haveTestedKeyConnector = false;\n  organizationId: string;\n  organization: Organization;\n  formPromise: Promise<OrganizationSsoResponse>;\n\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  protected enabled = this.formBuilder.control(false);\n\n  protected ssoIdentifier = this.formBuilder.control(\"\", {\n    validators: [Validators.maxLength(50), Validators.required],\n  });\n\n  protected openIdForm = this.formBuilder.group<ControlsOf<SsoConfigView[\"openId\"]>>(\n    {\n      authority: new FormControl(\"\", Validators.required),\n      clientId: new FormControl(\"\", Validators.required),\n      clientSecret: new FormControl(\"\", Validators.required),\n      metadataAddress: new FormControl(),\n      redirectBehavior: new FormControl(\n        OpenIdConnectRedirectBehavior.RedirectGet,\n        Validators.required\n      ),\n      getClaimsFromUserInfoEndpoint: new FormControl(),\n      additionalScopes: new FormControl(),\n      additionalUserIdClaimTypes: new FormControl(),\n      additionalEmailClaimTypes: new FormControl(),\n      additionalNameClaimTypes: new FormControl(),\n      acrValues: new FormControl(),\n      expectedReturnAcrValue: new FormControl(),\n    },\n    {\n      updateOn: \"blur\",\n    }\n  );\n\n  protected samlForm = this.formBuilder.group<ControlsOf<SsoConfigView[\"saml\"]>>(\n    {\n      spNameIdFormat: new FormControl(Saml2NameIdFormat.NotConfigured),\n      spOutboundSigningAlgorithm: new FormControl(defaultSigningAlgorithm),\n      spSigningBehavior: new FormControl(Saml2SigningBehavior.IfIdpWantAuthnRequestsSigned),\n      spMinIncomingSigningAlgorithm: new FormControl(defaultSigningAlgorithm),\n      spWantAssertionsSigned: new FormControl(),\n      spValidateCertificates: new FormControl(),\n\n      idpEntityId: new FormControl(\"\", Validators.required),\n      idpBindingType: new FormControl(Saml2BindingType.HttpRedirect),\n      idpSingleSignOnServiceUrl: new FormControl(),\n      idpSingleLogoutServiceUrl: new FormControl(),\n      idpX509PublicCert: new FormControl(\"\", Validators.required),\n      idpOutboundSigningAlgorithm: new FormControl(defaultSigningAlgorithm),\n      idpAllowUnsolicitedAuthnResponse: new FormControl(),\n      idpAllowOutboundLogoutRequests: new FormControl(true),\n      idpWantAuthnRequestsSigned: new FormControl(),\n    },\n    {\n      updateOn: \"blur\",\n    }\n  );\n\n  protected ssoConfigForm = this.formBuilder.group<ControlsOf<SsoConfigView>>({\n    configType: new FormControl(SsoType.None),\n    keyConnectorEnabled: new FormControl(false),\n    keyConnectorUrl: new FormControl(\"\"),\n    openId: this.openIdForm,\n    saml: this.samlForm,\n  });\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.ssoConfigForm\n      .get(\"configType\")\n      .valueChanges.pipe(takeUntil(this.destory$))\n      .subscribe((newType: SsoType) => {\n        if (newType === SsoType.OpenIdConnect) {\n          this.openIdForm.enable();\n          this.samlForm.disable();\n        } else if (newType === SsoType.Saml2) {\n          this.openIdForm.disable();\n          this.samlForm.enable();\n        } else {\n          this.openIdForm.disable();\n          this.samlForm.disable();\n        }\n      });\n\n    this.samlForm\n      .get(\"spSigningBehavior\")\n      .valueChanges.pipe(takeUntil(this.destory$))\n      .subscribe(() => this.samlForm.get(\"idpX509PublicCert\").updateValueAndValidity());\n\n    this.route.params\n      .pipe(\n        concatMap(async (params) => {\n          this.organizationId = params.organizationId;\n          await this.load();\n        }),\n        takeUntil(this.destory$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.destory$.next();\n    this.destory$.complete();\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    const ssoSettings = await this.organizationApiService.getSso(this.organizationId);\n    this.populateForm(ssoSettings);\n\n    this.callbackPath = ssoSettings.urls.callbackPath;\n    this.signedOutCallbackPath = ssoSettings.urls.signedOutCallbackPath;\n    this.spEntityId = ssoSettings.urls.spEntityId;\n    this.spMetadataUrl = ssoSettings.urls.spMetadataUrl;\n    this.spAcsUrl = ssoSettings.urls.spAcsUrl;\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.validateForm(this.ssoConfigForm);\n\n    if (this.ssoConfigForm.value.keyConnectorEnabled) {\n      this.haveTestedKeyConnector = false;\n      await this.validateKeyConnectorUrl();\n    }\n\n    if (!this.ssoConfigForm.valid) {\n      this.readOutErrors();\n      return;\n    }\n\n    const request = new OrganizationSsoRequest();\n    request.enabled = this.enabled.value;\n    request.identifier = this.ssoIdentifier.value;\n    request.data = SsoConfigApi.fromView(this.ssoConfigForm.getRawValue());\n\n    this.formPromise = this.organizationApiService.updateSso(this.organizationId, request);\n\n    try {\n      const response = await this.formPromise;\n      this.populateForm(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"ssoSettingsSaved\"));\n    } catch {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.formPromise = null;\n  }\n\n  async validateKeyConnectorUrl() {\n    if (this.haveTestedKeyConnector) {\n      return;\n    }\n\n    this.keyConnectorUrl.markAsPending();\n\n    try {\n      await this.apiService.getKeyConnectorAlive(this.keyConnectorUrl.value);\n      this.keyConnectorUrl.updateValueAndValidity();\n    } catch {\n      this.keyConnectorUrl.setErrors({\n        invalidUrl: { message: this.i18nService.t(\"keyConnectorTestFail\") },\n      });\n    }\n\n    this.haveTestedKeyConnector = true;\n  }\n\n  toggleOpenIdCustomizations() {\n    this.showOpenIdCustomizations = !this.showOpenIdCustomizations;\n  }\n\n  getErrorCount(form: UntypedFormGroup): number {\n    return Object.values(form.controls).reduce((acc: number, control: AbstractControl) => {\n      if (control instanceof UntypedFormGroup) {\n        return acc + this.getErrorCount(control);\n      }\n\n      if (control.errors == null) {\n        return acc;\n      }\n      return acc + Object.keys(control.errors).length;\n    }, 0);\n  }\n\n  get enableTestKeyConnector() {\n    return (\n      this.ssoConfigForm.get(\"keyConnectorEnabled\").value &&\n      !Utils.isNullOrWhitespace(this.keyConnectorUrl?.value)\n    );\n  }\n\n  get keyConnectorUrl() {\n    return this.ssoConfigForm.get(\"keyConnectorUrl\");\n  }\n\n  get samlSigningAlgorithmOptions(): SelectOptions[] {\n    return this.samlSigningAlgorithms.map((algorithm) => ({ name: algorithm, value: algorithm }));\n  }\n\n  private validateForm(form: UntypedFormGroup) {\n    Object.values(form.controls).forEach((control: AbstractControl) => {\n      if (control.disabled) {\n        return;\n      }\n\n      if (control instanceof UntypedFormGroup) {\n        this.validateForm(control);\n      } else {\n        control.markAsDirty();\n        control.markAsTouched();\n        control.updateValueAndValidity();\n      }\n    });\n  }\n\n  private populateForm(ssoSettings: OrganizationSsoResponse) {\n    this.enabled.setValue(ssoSettings.enabled);\n    this.ssoIdentifier.setValue(ssoSettings.identifier);\n    if (ssoSettings.data != null) {\n      const ssoConfigView = new SsoConfigView(ssoSettings.data);\n      this.ssoConfigForm.patchValue(ssoConfigView);\n    }\n  }\n\n  private readOutErrors() {\n    const errorText = this.i18nService.t(\"error\");\n    const errorCount = this.getErrorCount(this.ssoConfigForm);\n    const errorCountText = this.i18nService.t(\n      errorCount === 1 ? \"formErrorSummarySingle\" : \"formErrorSummaryPlural\",\n      errorCount.toString()\n    );\n\n    const div = document.createElement(\"div\");\n    div.className = \"sr-only\";\n    div.id = \"srErrorCount\";\n    div.setAttribute(\"aria-live\", \"polite\");\n    div.innerText = errorText + \": \" + errorCountText;\n\n    const existing = document.getElementById(\"srErrorCount\");\n    if (existing != null) {\n      existing.remove();\n    }\n\n    document.body.append(div);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { canAccessSettingsTab } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationPermissionsGuard } from \"@bitwarden/web-vault/app/organizations/guards/org-permissions.guard\";\nimport { OrganizationLayoutComponent } from \"@bitwarden/web-vault/app/organizations/layouts/organization-layout.component\";\nimport { SettingsComponent } from \"@bitwarden/web-vault/app/organizations/settings/settings.component\";\n\nimport { ScimComponent } from \"./manage/scim.component\";\nimport { SsoComponent } from \"./manage/sso.component\";\n\nconst routes: Routes = [\n  {\n    path: \"organizations/:organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuard, OrganizationPermissionsGuard],\n    children: [\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: canAccessSettingsTab,\n        },\n        children: [\n          {\n            path: \"sso\",\n            component: SsoComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              organizationPermissions: (org: Organization) => org.canManageSso,\n            },\n          },\n          {\n            path: \"scim\",\n            component: ScimComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              organizationPermissions: (org: Organization) => org.canManageScim,\n            },\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"@bitwarden/web-vault/app/shared/shared.module\";\n\nimport { InputCheckboxComponent } from \"./components/input-checkbox.component\";\nimport { ScimComponent } from \"./manage/scim.component\";\nimport { SsoComponent } from \"./manage/sso.component\";\nimport { OrganizationsRoutingModule } from \"./organizations-routing.module\";\n\n@NgModule({\n  imports: [SharedModule, OrganizationsRoutingModule],\n  declarations: [InputCheckboxComponent, SsoComponent, ScimComponent],\n})\nexport class OrganizationsModule {}\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport { CoreModule } from \"@bitwarden/web-vault/app/core/core.module\";\nimport { OssRoutingModule } from \"@bitwarden/web-vault/app/oss-routing.module\";\nimport { OssModule } from \"@bitwarden/web-vault/app/oss.module\";\nimport { WildcardRoutingModule } from \"@bitwarden/web-vault/app/wildcard-routing.module\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { OrganizationsModule } from \"./organizations/organizations.module\";\nimport { DisablePersonalVaultExportPolicyComponent } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicyComponent } from \"./policies/maximum-vault-timeout.component\";\n\n@NgModule({\n  imports: [\n    OverlayModule,\n    OssModule,\n    JslibModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CoreModule,\n    InfiniteScrollModule,\n    DragDropModule,\n    AppRoutingModule,\n    OssRoutingModule,\n    OrganizationsModule, // Must be after OssRoutingModule for competing routes to resolve properly\n    RouterModule,\n    WildcardRoutingModule, // Needs to be last to catch all non-existing routes\n  ],\n  declarations: [\n    AppComponent,\n    DisablePersonalVaultExportPolicyComponent,\n    MaximumVaultTimeoutPolicyComponent,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport \"bootstrap\";\nimport \"jquery\";\nimport \"popper.js\";\n\nrequire(\"@bitwarden/web-vault/scss/styles.scss\");\nrequire(\"@bitwarden/web-vault/scss/tailwind.css\");\n\nimport { AppModule } from \"./app/app.module\";\n\nif (process.env.NODE_ENV === \"production\") {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n","<div\n  #callout\n  class=\"callout callout-{{ calloutStyle }}\"\n  [ngClass]=\"{ clickable: clickable }\"\n  [attr.role]=\"useAlertRole ? 'alert' : null\"\n>\n  <h3 class=\"callout-heading\" *ngIf=\"title\">\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\">\n    {{ enforcedPolicyMessage }}\n    <ul>\n      <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n        {{ \"policyInEffectMinComplexity\" | i18n: getPasswordScoreAlertDisplay() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n        {{ \"policyInEffectMinLength\" | i18n: enforcedPolicyOptions?.minLength.toString() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n        {{ \"policyInEffectUppercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n        {{ \"policyInEffectLowercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n        {{ \"policyInEffectNumbers\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n        {{ \"policyInEffectSpecial\" | i18n: \"!@#$%^&*\" }}\n      </li>\n    </ul>\n  </div>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\n\n@Component({\n  selector: \"app-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() clickable: boolean;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() enforcedPolicyMessage: string;\n  @Input() useAlertRole = false;\n\n  calloutStyle: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.calloutStyle = this.type;\n\n    if (this.enforcedPolicyMessage === undefined) {\n      this.enforcedPolicyMessage = this.i18nService.t(\"masterPasswordPolicyInEffect\");\n    }\n\n    if (this.type === \"warning\" || this.type === \"danger\") {\n      if (this.type === \"danger\") {\n        this.calloutStyle = \"danger\";\n      }\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"warning\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-exclamation-triangle\";\n      }\n    } else if (this.type === \"error\") {\n      this.calloutStyle = \"danger\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"error\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-error\";\n      }\n    } else if (this.type === \"tip\") {\n      this.calloutStyle = \"success\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"tip\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-lightbulb\";\n      }\n    }\n  }\n\n  getPasswordScoreAlertDisplay() {\n    if (this.enforcedPolicyOptions == null) {\n      return \"\";\n    }\n\n    let str: string;\n    switch (this.enforcedPolicyOptions.minComplexity) {\n      case 4:\n        str = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        str = this.i18nService.t(\"good\");\n        break;\n      default:\n        str = this.i18nService.t(\"weak\");\n        break;\n    }\n    return str + \" (\" + this.enforcedPolicyOptions.minComplexity + \")\";\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appFallbackSrc]\",\n})\nexport class FallbackSrcDirective {\n  @Input(\"appFallbackSrc\") appFallbackSrc: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"error\") onError() {\n    this.el.nativeElement.src = this.appFallbackSrc;\n  }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n  <img\n    [src]=\"image\"\n    appFallbackSrc=\"{{ fallbackImage }}\"\n    *ngIf=\"imageEnabled && image\"\n    alt=\"\"\n    decoding=\"async\"\n    loading=\"lazy\"\n  />\n  <i class=\"bwi bwi-fw bwi-lg {{ icon }}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n/**\n * Provides a mapping from supported card brands to\n * the filenames of icon that should be present in images/cards folder of clients.\n */\nconst cardIcons: Record<string, string> = {\n  Visa: \"card-visa\",\n  Mastercard: \"card-mastercard\",\n  Amex: \"card-amex\",\n  Discover: \"card-discover\",\n  \"Diners Club\": \"card-diners-club\",\n  JCB: \"card-jcb\",\n  Maestro: \"card-maestro\",\n  UnionPay: \"card-union-pay\",\n  RuPay: \"card-ru-pay\",\n  Mir: \"card-mir\",\n};\n\n@Component({\n  selector: \"app-vault-icon\",\n  templateUrl: \"icon.component.html\",\n})\nexport class IconComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  icon: string;\n  image: string;\n  fallbackImage: string;\n  imageEnabled: boolean;\n\n  private iconsUrl: string;\n\n  constructor(environmentService: EnvironmentService, private stateService: StateService) {\n    this.iconsUrl = environmentService.getIconsUrl();\n  }\n\n  async ngOnChanges() {\n    // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n    // to avoid this we reset all state variables.\n    this.image = null;\n    this.fallbackImage = null;\n    this.imageEnabled = !(await this.stateService.getDisableFavicon());\n    this.load();\n  }\n\n  protected load() {\n    switch (this.cipher.type) {\n      case CipherType.Login:\n        this.icon = \"bwi-globe\";\n        this.setLoginIcon();\n        break;\n      case CipherType.SecureNote:\n        this.icon = \"bwi-sticky-note\";\n        break;\n      case CipherType.Card:\n        this.icon = \"bwi-credit-card\";\n        this.setCardIcon();\n        break;\n      case CipherType.Identity:\n        this.icon = \"bwi-id-card\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  private setLoginIcon() {\n    if (this.cipher.login.uri) {\n      let hostnameUri = this.cipher.login.uri;\n      let isWebsite = false;\n\n      if (hostnameUri.indexOf(\"androidapp://\") === 0) {\n        this.icon = \"bwi-android\";\n        this.image = null;\n      } else if (hostnameUri.indexOf(\"iosapp://\") === 0) {\n        this.icon = \"bwi-apple\";\n        this.image = null;\n      } else if (\n        this.imageEnabled &&\n        hostnameUri.indexOf(\"://\") === -1 &&\n        hostnameUri.indexOf(\".\") > -1\n      ) {\n        hostnameUri = \"http://\" + hostnameUri;\n        isWebsite = true;\n      } else if (this.imageEnabled) {\n        isWebsite = hostnameUri.indexOf(\"http\") === 0 && hostnameUri.indexOf(\".\") > -1;\n      }\n\n      if (this.imageEnabled && isWebsite) {\n        try {\n          this.image = this.iconsUrl + \"/\" + Utils.getHostname(hostnameUri) + \"/icon.png\";\n          this.fallbackImage = \"images/bwi-globe.png\";\n        } catch (e) {\n          // Ignore error since the fallback icon will be shown if image is null.\n        }\n      }\n    } else {\n      this.image = null;\n    }\n  }\n\n  private setCardIcon() {\n    const brand = this.cipher.card.brand;\n    if (this.imageEnabled && brand in cardIcons) {\n      this.icon = \"credit-card-icon \" + cardIcons[brand];\n    }\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nexport class ModalRef {\n  onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n  onClose: Observable<any>; // Initiated close.\n  onClosed: Observable<any>; // Modal was closed (Remove element from DOM)\n  onShow: Observable<void>; // Start showing modal\n  onShown: Observable<void>; // Modal is fully visible\n\n  private readonly _onCreated = new Subject<HTMLElement>();\n  private readonly _onClose = new Subject<any>();\n  private readonly _onClosed = new Subject<any>();\n  private readonly _onShow = new Subject<void>();\n  private readonly _onShown = new Subject<void>();\n  private lastResult: any;\n\n  constructor() {\n    this.onCreated = this._onCreated.asObservable();\n    this.onClose = this._onClose.asObservable();\n    this.onClosed = this._onClosed.asObservable();\n    this.onShow = this._onShow.asObservable();\n    this.onShown = this._onShow.asObservable();\n  }\n\n  show() {\n    this._onShow.next();\n  }\n\n  shown() {\n    this._onShown.next();\n  }\n\n  close(result?: any) {\n    this.lastResult = result;\n    this._onClose.next(result);\n  }\n\n  closed() {\n    this._onClosed.next(this.lastResult);\n  }\n\n  created(el: HTMLElement) {\n    this._onCreated.next(el);\n  }\n\n  onClosedPromise(): Promise<any> {\n    return this.onClosed.pipe(first()).toPromise();\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appA11yTitle]\",\n})\nexport class A11yTitleDirective {\n  @Input() set appA11yTitle(title: string) {\n    this.title = title;\n  }\n\n  private title: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (!this.el.nativeElement.hasAttribute(\"title\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"title\", this.title);\n    }\n    if (!this.el.nativeElement.hasAttribute(\"aria-label\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"aria-label\", this.title);\n    }\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\n\n/**\n * Provides error handling, in particular for any error returned by the server in an api call.\n * Attach it to a <form> element and provide the name of the class property that will hold the api call promise.\n * e.g. <form [appApiAction]=\"this.formPromise\">\n * Any errors/rejections that occur will be intercepted and displayed as error toasts.\n */\n@Directive({\n  selector: \"[appApiAction]\",\n})\nexport class ApiActionDirective implements OnChanges {\n  @Input() appApiAction: Promise<any>;\n\n  constructor(\n    private el: ElementRef,\n    private validationService: ValidationService,\n    private logService: LogService\n  ) {}\n\n  ngOnChanges(changes: any) {\n    if (this.appApiAction == null || this.appApiAction.then == null) {\n      return;\n    }\n\n    this.el.nativeElement.loading = true;\n\n    this.appApiAction.then(\n      (response: any) => {\n        this.el.nativeElement.loading = false;\n      },\n      (e: any) => {\n        this.el.nativeElement.loading = false;\n\n        if ((e as ErrorResponse).captchaRequired) {\n          this.logService.error(\"Captcha required error response: \" + e.getSingleMessage());\n          return;\n        }\n        this.logService?.error(`Received API exception: ${e}`);\n        this.validationService.showError(e);\n      }\n    );\n  }\n}\n","import { Directive, ElementRef, Input, NgZone } from \"@angular/core\";\nimport { take } from \"rxjs/operators\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective {\n  @Input() set appAutofocus(condition: boolean | string) {\n    this.autofocus = condition === \"\" || condition === true;\n  }\n\n  private autofocus: boolean;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!Utils.isMobileBrowser && this.autofocus) {\n      if (this.ngZone.isStable) {\n        this.el.nativeElement.focus();\n      } else {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n      }\n    }\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInputVerbatim]\",\n})\nexport class InputVerbatimDirective {\n  @Input() set appInputVerbatim(condition: boolean | string) {\n    this.disableComplete = condition === \"\" || condition === true;\n  }\n\n  private disableComplete: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.disableComplete && !this.el.nativeElement.hasAttribute(\"autocomplete\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocomplete\", \"off\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocapitalize\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocapitalize\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocorrect\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocorrect\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"spellcheck\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"spellcheck\", \"false\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"inputmode\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"inputmode\", \"verbatim\");\n    }\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopClick]\",\n})\nexport class StopClickDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopProp]\",\n})\nexport class StopPropDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      this.messagingService.send(\"authBlocked\", { url: routerState.url });\n      return false;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (routerState != null) {\n        this.messagingService.send(\"lockedUrl\", { url: routerState.url });\n      }\n      return this.router.createUrlTree([\"lock\"], { queryParams: { promptBiometric: true } });\n    }\n\n    if (\n      !routerState.url.includes(\"remove-password\") &&\n      (await this.keyConnectorService.getConvertAccountRequired())\n    ) {\n      return this.router.createUrlTree([\"/remove-password\"]);\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class LockGuard implements CanActivate {\n  protected homepage = \"vault\";\n  protected loginpage = \"login\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return true;\n    }\n\n    const redirectUrl =\n      authStatus === AuthenticationStatus.LoggedOut ? this.loginpage : this.homepage;\n\n    return this.router.createUrlTree([redirectUrl]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class UnauthGuard implements CanActivate {\n  protected homepage = \"vault\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return true;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"lock\"]);\n    }\n\n    return this.router.createUrlTree([this.homepage]);\n  }\n}\n","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, ModuleWithProviders, NgModule } from \"@angular/core\";\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  Toast as BaseToast,\n  ToastPackage,\n  ToastrService,\n  TOAST_CONFIG,\n} from \"ngx-toastr\";\n\n@Component({\n  selector: \"[toast-component2]\",\n  template: `\n    <button\n      *ngIf=\"options.closeButton\"\n      (click)=\"remove()\"\n      type=\"button\"\n      class=\"toast-close-button\"\n      aria-label=\"Close\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"icon\">\n      <i></i>\n    </div>\n    <div>\n      <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n        {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n      </div>\n      <div\n        *ngIf=\"message && options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [innerHTML]=\"message\"\n      ></div>\n      <div\n        *ngIf=\"message && !options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    </div>\n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n  `,\n  animations: [\n    trigger(\"flyInOut\", [\n      state(\"inactive\", style({ opacity: 0 })),\n      state(\"active\", style({ opacity: 1 })),\n      state(\"removed\", style({ opacity: 0 })),\n      transition(\"inactive => active\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n      transition(\"active => removed\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class BitwardenToast extends BaseToast {\n  constructor(protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n    super(toastrService, toastPackage);\n  }\n}\n\nexport const BitwardenToastGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: BitwardenToast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitwardenToast],\n  exports: [BitwardenToast],\n})\nexport class BitwardenToastModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<BitwardenToastModule> {\n    return {\n      ngModule: BitwardenToastModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: BitwardenToastGlobalConfig,\n            config: config,\n          },\n        },\n      ],\n    };\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface CardRuleEntry {\n  cardLength: number;\n  blocks: number[];\n}\n\n// See https://baymard.com/checkout-usability/credit-card-patterns for\n// all possible credit card spacing patterns. For now, we just handle\n// the below.\nconst numberFormats: Record<string, CardRuleEntry[]> = {\n  Visa: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Mastercard: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Maestro: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 13, blocks: [4, 4, 5] },\n    { cardLength: 15, blocks: [4, 6, 5] },\n    { cardLength: 19, blocks: [4, 4, 4, 4, 3] },\n  ],\n  Discover: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  \"Diners Club\": [{ cardLength: 14, blocks: [4, 6, 4] }],\n  JCB: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  UnionPay: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 19, blocks: [6, 13] },\n  ],\n  Amex: [{ cardLength: 15, blocks: [4, 6, 5] }],\n  Mir: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 17, blocks: [5, 4, 4, 4] },\n    { cardLength: 18, blocks: [6, 4, 4, 4] },\n    { cardLength: 19, blocks: [7, 4, 4, 4] },\n  ],\n  Other: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n};\n\n@Pipe({ name: \"creditCardNumber\" })\nexport class CreditCardNumberPipe implements PipeTransform {\n  transform(creditCardNumber: string, brand: string): string {\n    let rules = numberFormats[brand];\n\n    if (rules == null) {\n      rules = numberFormats[\"Other\"];\n    }\n\n    const cardLength = creditCardNumber.length;\n\n    let matchingRule = rules.find((r) => r.cardLength == cardLength);\n    if (matchingRule == null) {\n      matchingRule = rules[0];\n    }\n\n    const blocks = matchingRule.blocks;\n\n    const chunks: string[] = [];\n    let total = 0;\n\n    blocks.forEach((c) => {\n      chunks.push(creditCardNumber.slice(total, total + c));\n      total += c;\n    });\n\n    // Append the remaining part\n    if (cardLength > total) {\n      chunks.push(creditCardNumber.slice(total));\n    }\n\n    return chunks.join(\" \");\n  }\n}\n","import { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { CalloutComponent } from \"./components/callout.component\";\nimport { ExportScopeCalloutComponent } from \"./components/export-scope-callout.component\";\nimport { IconComponent } from \"./components/icon.component\";\nimport { BitwardenToastModule } from \"./components/toastr.component\";\nimport { A11yInvalidDirective } from \"./directives/a11y-invalid.directive\";\nimport { A11yTitleDirective } from \"./directives/a11y-title.directive\";\nimport { ApiActionDirective } from \"./directives/api-action.directive\";\nimport { AutofocusDirective } from \"./directives/autofocus.directive\";\nimport { BoxRowDirective } from \"./directives/box-row.directive\";\nimport { CopyClickDirective } from \"./directives/copy-click.directive\";\nimport { FallbackSrcDirective } from \"./directives/fallback-src.directive\";\nimport { InputStripSpacesDirective } from \"./directives/input-strip-spaces.directive\";\nimport { InputVerbatimDirective } from \"./directives/input-verbatim.directive\";\nimport { LaunchClickDirective } from \"./directives/launch-click.directive\";\nimport { NotPremiumDirective } from \"./directives/not-premium.directive\";\nimport { SelectCopyDirective } from \"./directives/select-copy.directive\";\nimport { StopClickDirective } from \"./directives/stop-click.directive\";\nimport { StopPropDirective } from \"./directives/stop-prop.directive\";\nimport { TrueFalseValueDirective } from \"./directives/true-false-value.directive\";\nimport { CreditCardNumberPipe } from \"./pipes/credit-card-number.pipe\";\nimport { EllipsisPipe } from \"./pipes/ellipsis.pipe\";\nimport { I18nPipe } from \"./pipes/i18n.pipe\";\nimport { SearchCiphersPipe } from \"./pipes/search-ciphers.pipe\";\nimport { SearchPipe } from \"./pipes/search.pipe\";\nimport { UserNamePipe } from \"./pipes/user-name.pipe\";\nimport { PasswordStrengthComponent } from \"./shared/components/password-strength/password-strength.component\";\n\n@NgModule({\n  imports: [\n    BitwardenToastModule.forRoot({\n      maxOpened: 5,\n      autoDismiss: true,\n      closeButton: true,\n    }),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    BoxRowDirective,\n    CalloutComponent,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    CopyClickDirective,\n    LaunchClickDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n  ],\n  exports: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    BitwardenToastModule,\n    BoxRowDirective,\n    CalloutComponent,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    CopyClickDirective,\n    LaunchClickDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n  ],\n  providers: [CreditCardNumberPipe, DatePipe, I18nPipe, SearchPipe, UserNamePipe],\n})\nexport class JslibModule {}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string | number, p2?: string | number, p3?: string | number): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"search\",\n})\nexport class SearchPipe implements PipeTransform {\n  transform(\n    items: any[],\n    searchText: string,\n    prop1?: string,\n    prop2?: string,\n    prop3?: string\n  ): any[] {\n    if (items == null || items.length === 0) {\n      return [];\n    }\n\n    if (searchText == null || searchText.length < 2) {\n      return items;\n    }\n\n    searchText = searchText.trim().toLowerCase();\n    return items.filter((i) => {\n      if (\n        prop1 != null &&\n        i[prop1] != null &&\n        i[prop1].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop2 != null &&\n        i[prop2] != null &&\n        i[prop2].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop3 != null &&\n        i[prop3] != null &&\n        i[prop3].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface User {\n  name?: string;\n  email: string;\n}\n\n@Pipe({\n  name: \"userName\",\n})\nexport class UserNamePipe implements PipeTransform {\n  transform(user?: User): string {\n    if (user == null) {\n      return null;\n    }\n\n    return user.name == null || user.name.trim() === \"\" ? user.email : user.name;\n  }\n}\n","import { InjectionToken } from \"@angular/core\";\n\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\n\nexport const WINDOW = new InjectionToken<Window>(\"WINDOW\");\nexport const MEMORY_STORAGE = new InjectionToken<AbstractStorageService>(\"MEMORY_STORAGE\");\nexport const SECURE_STORAGE = new InjectionToken<AbstractStorageService>(\"SECURE_STORAGE\");\nexport const STATE_FACTORY = new InjectionToken<StateFactory>(\"STATE_FACTORY\");\nexport const STATE_SERVICE_USE_CACHE = new InjectionToken<boolean>(\"STATE_SERVICE_USE_CACHE\");\nexport const LOGOUT_CALLBACK = new InjectionToken<(expired: boolean, userId?: string) => void>(\n  \"LOGOUT_CALLBACK\"\n);\nexport const LOCKED_CALLBACK = new InjectionToken<() => void>(\"LOCKED_CALLBACK\");\nexport const CLIENT_TYPE = new InjectionToken<boolean>(\"CLIENT_TYPE\");\nexport const LOCALES_DIRECTORY = new InjectionToken<string>(\"LOCALES_DIRECTORY\");\nexport const SYSTEM_LANGUAGE = new InjectionToken<string>(\"SYSTEM_LANGUAGE\");\nexport const LOG_MAC_FAILURES = new InjectionToken<string>(\"LOG_MAC_FAILURES\");\n","import { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from \"@angular/cdk/a11y\";\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ModalService } from \"../../services/modal.service\";\n\nimport { ModalRef } from \"./modal.ref\";\n\n@Component({\n  selector: \"app-modal\",\n  template: \"<ng-template #modalContent></ng-template>\",\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n  componentRef: ComponentRef<any>;\n\n  @ViewChild(\"modalContent\", { read: ViewContainerRef, static: true })\n  modalContentRef: ViewContainerRef;\n\n  childComponentType: Type<any>;\n  setComponentParameters: (component: any) => void;\n\n  private focusTrap: ConfigurableFocusTrap;\n\n  constructor(\n    private modalService: ModalService,\n    private cd: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    public modalRef: ModalRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    if (this.setComponentParameters != null) {\n      this.setComponentParameters(this.componentRef.instance);\n    }\n    this.cd.detectChanges();\n\n    this.modalRef.created(this.el.nativeElement);\n    this.focusTrap = this.focusTrapFactory.create(\n      this.el.nativeElement.querySelector(\".modal-dialog\")\n    );\n    if (this.el.nativeElement.querySelector(\"[appAutoFocus]\") == null) {\n      this.focusTrap.focusFirstTabbableElementWhenReady();\n    }\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n    this.modalContentRef.clear();\n    this.componentRef = this.modalContentRef.createComponent(componentFactory);\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n    this.focusTrap.destroy();\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  getFocus() {\n    const autoFocusEl = this.el.nativeElement.querySelector(\"[appAutoFocus]\") as HTMLElement;\n    autoFocusEl?.focus();\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class ModalInjector implements Injector {\n  constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any, flags?: any) {\n    return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\nimport { DynamicModalComponent } from \"../components/modal/dynamic-modal.component\";\nimport { ModalInjector } from \"../components/modal/modal-injector\";\nimport { ModalRef } from \"../components/modal/modal.ref\";\n\nexport class ModalConfig<D = any> {\n  data?: D;\n  allowMultipleModals?: boolean;\n  replaceTopModal?: boolean;\n}\n\n@Injectable()\nexport class ModalService {\n  protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n  // Lazy loaded modules are not available in componentFactoryResolver,\n  // therefore modules needs to manually initialize their resolvers.\n  private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === \"Escape\" && this.modalCount > 0) {\n        this.topModal.instance.close();\n      }\n    });\n  }\n\n  get modalCount() {\n    return this.modalList.length;\n  }\n\n  private get topModal() {\n    return this.modalList[this.modalCount - 1];\n  }\n\n  /**\n   * @deprecated Use `dialogService.open` (in web) or `modalService.open` (in desktop/browser) instead.\n   * If replacing an existing call to this method, also remove any `@ViewChild` and `<ng-template>` associated with the\n   * existing usage.\n   */\n  async openViewRef<T>(\n    componentType: Type<T>,\n    viewContainerRef: ViewContainerRef,\n    setComponentParameters: (component: T) => void = null\n  ): Promise<[ModalRef, T]> {\n    const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n    modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n    viewContainerRef.insert(modalComponentRef.hostView);\n\n    await modalRef.onCreated.pipe(first()).toPromise();\n\n    return [modalRef, modalComponentRef.instance.componentRef.instance];\n  }\n\n  open(componentType: Type<any>, config: ModalConfig = {}) {\n    const { replaceTopModal = false, allowMultipleModals = false } = config;\n\n    if (this.modalCount > 0 && replaceTopModal) {\n      this.topModal.instance.close();\n    }\n\n    if (this.modalCount > 0 && !allowMultipleModals) {\n      return;\n    }\n\n    const [modalRef] = this.openInternal(componentType, config, true);\n\n    return modalRef;\n  }\n\n  registerComponentFactoryResolver<T>(\n    componentType: Type<T>,\n    componentFactoryResolver: ComponentFactoryResolver\n  ): void {\n    this.factoryResolvers.set(componentType, componentFactoryResolver);\n  }\n\n  resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n    if (this.factoryResolvers.has(componentType)) {\n      return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n    }\n\n    return this.componentFactoryResolver.resolveComponentFactory(componentType);\n  }\n\n  closeAll(): void {\n    this.modalList.forEach((modal) => modal.instance.close());\n  }\n\n  protected openInternal(\n    componentType: Type<any>,\n    config?: ModalConfig,\n    attachToDom?: boolean\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const [modalRef, componentRef] = this.createModalComponent(config);\n    componentRef.instance.childComponentType = componentType;\n\n    if (attachToDom) {\n      this.applicationRef.attachView(componentRef.hostView);\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      document.body.appendChild(domElem);\n    }\n\n    modalRef.onClosed.pipe(first()).subscribe(() => {\n      if (attachToDom) {\n        this.applicationRef.detachView(componentRef.hostView);\n      }\n      componentRef.destroy();\n\n      this.modalList.pop();\n      if (this.modalCount > 0) {\n        this.topModal.instance.getFocus();\n      }\n    });\n\n    this.setupHandlers(modalRef);\n\n    this.modalList.push(componentRef);\n\n    return [modalRef, componentRef];\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    let backdrop: HTMLElement = null;\n\n    // Add backdrop, setup [data-dismiss] handler.\n    modalRef.onCreated.pipe(first()).subscribe((el) => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalEl: HTMLElement = el.querySelector(\".modal\");\n      const dialogEl = modalEl.querySelector(\".modal-dialog\") as HTMLElement;\n\n      backdrop = document.createElement(\"div\");\n      backdrop.className = \"modal-backdrop fade\";\n      backdrop.style.zIndex = `${this.modalCount}040`;\n      modalEl.prepend(backdrop);\n\n      dialogEl.addEventListener(\"click\", (e: Event) => {\n        e.stopPropagation();\n      });\n      dialogEl.style.zIndex = `${this.modalCount}050`;\n\n      const modals = Array.from(\n        el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]')\n      );\n      for (const closeElement of modals) {\n        closeElement.addEventListener(\"click\", () => {\n          modalRef.close();\n        });\n      }\n    });\n\n    // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      modalRef.closed();\n\n      if (this.modalCount === 0) {\n        document.body.classList.remove(\"modal-open\");\n      }\n    });\n  }\n\n  protected createModalComponent(\n    config: ModalConfig\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const modalRef = new ModalRef();\n\n    const map = new WeakMap();\n    map.set(ModalConfig, config);\n    map.set(ModalRef, modalRef);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n    const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n    return [modalRef, componentRef];\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport abstract class AbstractThemingService {\n  theme$: Observable<Theme>;\n  monitorThemeChanges: () => Promise<void>;\n  updateSystemTheme: (systemTheme: ThemeType) => void;\n  updateConfiguredTheme: (theme: ThemeType) => Promise<void>;\n}\n","import { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\nexport class DynamicTreeNode<T extends CollectionView | FolderView> {\n  fullList: T[];\n  nestedList: TreeNode<T>[];\n\n  hasId(id: string): boolean {\n    return this.fullList != null && this.fullList.filter((i: T) => i.id === id).length > 0;\n  }\n\n  constructor(init?: Partial<DynamicTreeNode<T>>) {\n    Object.assign(this, init);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { firstValueFrom, from, mergeMap, Observable } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport {\n  isNotProviderUser,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ServiceUtils } from \"@bitwarden/common/misc/serviceUtils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\n\nconst NestingDelimiter = \"/\";\n\n@Injectable()\nexport class VaultFilterService {\n  constructor(\n    protected stateService: StateService,\n    protected organizationService: OrganizationService,\n    protected folderService: FolderService,\n    protected cipherService: CipherService,\n    protected collectionService: CollectionService,\n    protected policyService: PolicyService\n  ) {}\n\n  async storeCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await this.stateService.setCollapsedGroupings(Array.from(collapsedFilterNodes));\n  }\n\n  async buildCollapsedFilterNodes(): Promise<Set<string>> {\n    return new Set(await this.stateService.getCollapsedGroupings());\n  }\n\n  async buildOrganizations(): Promise<Organization[]> {\n    let organizations = await this.organizationService.getAll();\n    if (organizations != null) {\n      organizations = organizations\n        .filter(isNotProviderUser)\n        .sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    return organizations;\n  }\n\n  buildNestedFolders(organizationId?: string): Observable<DynamicTreeNode<FolderView>> {\n    const transformation = async (storedFolders: FolderView[]) => {\n      let folders: FolderView[];\n      if (organizationId != null) {\n        const ciphers = await this.cipherService.getAllDecrypted();\n        const orgCiphers = ciphers.filter((c) => c.organizationId == organizationId);\n        folders = storedFolders.filter(\n          (f) =>\n            orgCiphers.filter((oc) => oc.folderId == f.id).length > 0 ||\n            ciphers.filter((c) => c.folderId == f.id).length < 1\n        );\n      } else {\n        folders = storedFolders;\n      }\n      const nestedFolders = await this.getAllFoldersNested(folders);\n      return new DynamicTreeNode<FolderView>({\n        fullList: folders,\n        nestedList: nestedFolders,\n      });\n    };\n\n    return this.folderService.folderViews$.pipe(\n      mergeMap((folders) => from(transformation(folders)))\n    );\n  }\n\n  async buildCollections(organizationId?: string): Promise<DynamicTreeNode<CollectionView>> {\n    const storedCollections = await this.collectionService.getAllDecrypted();\n    let collections: CollectionView[];\n    if (organizationId != null) {\n      collections = storedCollections.filter((c) => c.organizationId === organizationId);\n    } else {\n      collections = storedCollections;\n    }\n    const nestedCollections = await this.collectionService.getAllNested(collections);\n    return new DynamicTreeNode<CollectionView>({\n      fullList: collections,\n      nestedList: nestedCollections,\n    });\n  }\n\n  async checkForSingleOrganizationPolicy(): Promise<boolean> {\n    return await firstValueFrom(\n      this.policyService.policyAppliesToActiveUser$(PolicyType.SingleOrg)\n    );\n  }\n\n  async checkForPersonalOwnershipPolicy(): Promise<boolean> {\n    return await firstValueFrom(\n      this.policyService.policyAppliesToActiveUser$(PolicyType.PersonalOwnership)\n    );\n  }\n\n  protected async getAllFoldersNested(folders: FolderView[]): Promise<TreeNode<FolderView>[]> {\n    const nodes: TreeNode<FolderView>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView();\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getFolderNested(id: string): Promise<TreeNode<FolderView>> {\n    const folders = await this.getAllFoldersNested(\n      await firstValueFrom(this.folderService.folderViews$)\n    );\n    return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n  }\n}\n","import { Verification } from \"../../types/verification\";\n\nexport abstract class AccountApiService {\n  abstract deleteAccount(verification: Verification): Promise<void>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { ProfileResponse } from \"../../models/response/profile.response\";\nexport abstract class AvatarUpdateService {\n  avatarUpdate$ = new Observable<string | null>();\n  abstract pushUpdate(color: string): Promise<ProfileResponse | void>;\n  abstract loadColorFromState(): Promise<string | null>;\n}\n","export abstract class AnonymousHubService {\n  createHubConnection: (token: string) => void;\n  stopHubConnection: () => void;\n}\n","import { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/set-key-connector-key.request\";\nimport { AttachmentRequest } from \"../models/request/attachment.request\";\nimport { BitPayInvoiceRequest } from \"../models/request/bit-pay-invoice.request\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipher-bulk-delete.request\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipher-bulk-move.request\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipher-bulk-restore.request\";\nimport { CipherBulkShareRequest } from \"../models/request/cipher-bulk-share.request\";\nimport { CipherCollectionsRequest } from \"../models/request/cipher-collections.request\";\nimport { CipherCreateRequest } from \"../models/request/cipher-create.request\";\nimport { CipherPartialRequest } from \"../models/request/cipher-partial.request\";\nimport { CipherShareRequest } from \"../models/request/cipher-share.request\";\nimport { CipherRequest } from \"../models/request/cipher.request\";\nimport { CollectionRequest } from \"../models/request/collection.request\";\nimport { DeleteRecoverRequest } from \"../models/request/delete-recover.request\";\nimport { DeviceVerificationRequest } from \"../models/request/device-verification.request\";\nimport { EmailTokenRequest } from \"../models/request/email-token.request\";\nimport { EmailRequest } from \"../models/request/email.request\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergency-access-accept.request\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergency-access-confirm.request\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergency-access-invite.request\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergency-access-password.request\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergency-access-update.request\";\nimport { EventRequest } from \"../models/request/event.request\";\nimport { GroupRequest } from \"../models/request/group.request\";\nimport { IapCheckRequest } from \"../models/request/iap-check.request\";\nimport { PasswordTokenRequest } from \"../models/request/identity-token/password-token.request\";\nimport { SsoTokenRequest } from \"../models/request/identity-token/sso-token.request\";\nimport { UserApiTokenRequest } from \"../models/request/identity-token/user-api-token.request\";\nimport { ImportCiphersRequest } from \"../models/request/import-ciphers.request\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/import-organization-ciphers.request\";\nimport { KdfRequest } from \"../models/request/kdf.request\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/key-connector-user-key.request\";\nimport { KeysRequest } from \"../models/request/keys.request\";\nimport { OrganizationConnectionRequest } from \"../models/request/organization-connection.request\";\nimport { OrganizationImportRequest } from \"../models/request/organization-import.request\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organization-sponsorship-create.request\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organization-sponsorship-redeem.request\";\nimport { PasswordHintRequest } from \"../models/request/password-hint.request\";\nimport { PasswordRequest } from \"../models/request/password.request\";\nimport { PasswordlessCreateAuthRequest } from \"../models/request/passwordless-create-auth.request\";\nimport { PaymentRequest } from \"../models/request/payment.request\";\nimport { PreloginRequest } from \"../models/request/prelogin.request\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/provider-add-organization.request\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/provider-organization-create.request\";\nimport { ProviderSetupRequest } from \"../models/request/provider/provider-setup.request\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/provider-update.request\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/provider-user-accept.request\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/provider-user-bulk-confirm.request\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/provider-user-bulk.request\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/provider-user-confirm.request\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/provider-user-invite.request\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/provider-user-update.request\";\nimport { RegisterRequest } from \"../models/request/register.request\";\nimport { SecretVerificationRequest } from \"../models/request/secret-verification.request\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selection-read-only.request\";\nimport { SendAccessRequest } from \"../models/request/send-access.request\";\nimport { SendRequest } from \"../models/request/send.request\";\nimport { SetPasswordRequest } from \"../models/request/set-password.request\";\nimport { StorageRequest } from \"../models/request/storage.request\";\nimport { TaxInfoUpdateRequest } from \"../models/request/tax-info-update.request\";\nimport { TwoFactorEmailRequest } from \"../models/request/two-factor-email.request\";\nimport { TwoFactorProviderRequest } from \"../models/request/two-factor-provider.request\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/two-factor-recovery.request\";\nimport { UpdateAvatarRequest } from \"../models/request/update-avatar.request\";\nimport { UpdateDomainsRequest } from \"../models/request/update-domains.request\";\nimport { UpdateKeyRequest } from \"../models/request/update-key.request\";\nimport { UpdateProfileRequest } from \"../models/request/update-profile.request\";\nimport { UpdateTempPasswordRequest } from \"../models/request/update-temp-password.request\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/update-two-factor-authenticator.request\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/update-two-factor-duo.request\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/update-two-factor-email.request\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/update-two-factor-web-authn-delete.request\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/update-two-factor-web-authn.request\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/update-two-factor-yubio-otp.request\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verify-delete-recover.request\";\nimport { VerifyEmailRequest } from \"../models/request/verify-email.request\";\nimport { ApiKeyResponse } from \"../models/response/api-key.response\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { AttachmentResponse } from \"../models/response/attachment.response\";\nimport { AuthRequestResponse } from \"../models/response/auth-request.response\";\nimport { RegisterResponse } from \"../models/response/authentication/register.response\";\nimport { BillingHistoryResponse } from \"../models/response/billing-history.response\";\nimport { BillingPaymentResponse } from \"../models/response/billing-payment.response\";\nimport { BreachAccountResponse } from \"../models/response/breach-account.response\";\nimport { CipherResponse } from \"../models/response/cipher.response\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collection.response\";\nimport { DeviceVerificationResponse } from \"../models/response/device-verification.response\";\nimport { DomainsResponse } from \"../models/response/domains.response\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergency-access.response\";\nimport { EventResponse } from \"../models/response/event.response\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/group.response\";\nimport { IdentityCaptchaResponse } from \"../models/response/identity-captcha.response\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/key-connector-user-key.response\";\nimport { ListResponse } from \"../models/response/list.response\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organization-connection.response\";\nimport { OrganizationExportResponse } from \"../models/response/organization-export.response\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organization-sponsorship-sync-status.response\";\nimport { PaymentResponse } from \"../models/response/payment.response\";\nimport { PlanResponse } from \"../models/response/plan.response\";\nimport { PolicyResponse } from \"../models/response/policy.response\";\nimport { PreloginResponse } from \"../models/response/prelogin.response\";\nimport { ProfileResponse } from \"../models/response/profile.response\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/provider-organization.response\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/provider-user-bulk-public-key.response\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/provider-user-bulk.response\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/provider-user.response\";\nimport { ProviderResponse } from \"../models/response/provider/provider.response\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selection-read-only.response\";\nimport { SendAccessResponse } from \"../models/response/send-access.response\";\nimport { SendFileDownloadDataResponse } from \"../models/response/send-file-download-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\nimport { SendResponse } from \"../models/response/send.response\";\nimport { SsoPreValidateResponse } from \"../models/response/sso-pre-validate.response\";\nimport { SubscriptionResponse } from \"../models/response/subscription.response\";\nimport { SyncResponse } from \"../models/response/sync.response\";\nimport { TaxInfoResponse } from \"../models/response/tax-info.response\";\nimport { TaxRateResponse } from \"../models/response/tax-rate.response\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/two-factor-authenticator.response\";\nimport { TwoFactorDuoResponse } from \"../models/response/two-factor-duo.response\";\nimport { TwoFactorEmailResponse } from \"../models/response/two-factor-email.response\";\nimport { TwoFactorProviderResponse } from \"../models/response/two-factor-provider.response\";\nimport { TwoFactorRecoverResponse } from \"../models/response/two-factor-recover.response\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/two-factor-web-authn.response\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/two-factor-yubi-key.response\";\nimport { UserKeyResponse } from \"../models/response/user-key.response\";\nimport { SendAccessView } from \"../models/view/send-access.view\";\n\n/**\n * @deprecated The `ApiService` class is deprecated and calls should be extracted into individual\n * api services. The `send` method is still allowed to be used within api services. For background\n * of this decision please read https://contributing.bitwarden.com/architecture/adr/refactor-api-service.\n */\nexport abstract class ApiService {\n  send: (\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ) => Promise<any>;\n\n  postIdentityToken: (\n    request: PasswordTokenRequest | SsoTokenRequest | UserApiTokenRequest\n  ) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n  refreshIdentityToken: () => Promise<any>;\n\n  getProfile: () => Promise<ProfileResponse>;\n  getUserSubscription: () => Promise<SubscriptionResponse>;\n  getTaxInfo: () => Promise<TaxInfoResponse>;\n  putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n  putAvatar: (request: UpdateAvatarRequest) => Promise<ProfileResponse>;\n  putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n  postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n  postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n  postEmail: (request: EmailRequest) => Promise<any>;\n  postPassword: (request: PasswordRequest) => Promise<any>;\n  setPassword: (request: SetPasswordRequest) => Promise<any>;\n  postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n  postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n  getAccountRevisionDate: () => Promise<number>;\n  postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n  postRegister: (request: RegisterRequest) => Promise<RegisterResponse>;\n  postPremium: (data: FormData) => Promise<PaymentResponse>;\n  postIapCheck: (request: IapCheckRequest) => Promise<any>;\n  postReinstatePremium: () => Promise<any>;\n  postCancelPremium: () => Promise<any>;\n  postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n  postAccountPayment: (request: PaymentRequest) => Promise<void>;\n  postAccountLicense: (data: FormData) => Promise<any>;\n  postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n  postAccountKeys: (request: KeysRequest) => Promise<any>;\n  postAccountVerifyEmail: () => Promise<any>;\n  postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n  postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n  postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n  postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n  postAccountKdf: (request: KdfRequest) => Promise<any>;\n  postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n  postConvertToKeyConnector: () => Promise<void>;\n  //passwordless\n  postAuthRequest: (request: PasswordlessCreateAuthRequest) => Promise<AuthRequestResponse>;\n  getAuthResponse: (id: string, accessCode: string) => Promise<AuthRequestResponse>;\n\n  getUserBillingHistory: () => Promise<BillingHistoryResponse>;\n  getUserBillingPayment: () => Promise<BillingPaymentResponse>;\n\n  getSend: (id: string) => Promise<SendResponse>;\n  postSendAccess: (\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendAccessResponse>;\n  getSends: () => Promise<ListResponse<SendResponse>>;\n  postSend: (request: SendRequest) => Promise<SendResponse>;\n  postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n  postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n  putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n  putSendRemovePassword: (id: string) => Promise<SendResponse>;\n  deleteSend: (id: string) => Promise<any>;\n  getSendFileDownloadData: (\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendFileDownloadDataResponse>;\n  renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n  getCipher: (id: string) => Promise<CipherResponse>;\n  getFullCipherDetails: (id: string) => Promise<CipherResponse>;\n  getCipherAdmin: (id: string) => Promise<CipherResponse>;\n  getAttachmentData: (\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ) => Promise<AttachmentResponse>;\n  getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n  postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n  postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  putPartialCipher: (id: string, request: CipherPartialRequest) => Promise<CipherResponse>;\n  putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  deleteCipher: (id: string) => Promise<any>;\n  deleteCipherAdmin: (id: string) => Promise<any>;\n  deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n  putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n  putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n  putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n  postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n  postImportOrganizationCiphers: (\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ) => Promise<any>;\n  putDeleteCipher: (id: string) => Promise<any>;\n  putDeleteCipherAdmin: (id: string) => Promise<any>;\n  putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putRestoreCipher: (id: string) => Promise<CipherResponse>;\n  putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n  putRestoreManyCiphers: (\n    request: CipherBulkRestoreRequest\n  ) => Promise<ListResponse<CipherResponse>>;\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  postCipherAttachment: (\n    id: string,\n    request: AttachmentRequest\n  ) => Promise<AttachmentUploadDataResponse>;\n  deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n  deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n  postShareCipherAttachment: (\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ) => Promise<any>;\n  renewAttachmentUploadUrl: (\n    id: string,\n    attachmentId: string\n  ) => Promise<AttachmentUploadDataResponse>;\n  postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n  getCollectionDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<CollectionGroupDetailsResponse>;\n  getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n  getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n  getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n  postCollection: (\n    organizationId: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  putCollectionUsers: (\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ) => Promise<any>;\n  putCollection: (\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  deleteCollection: (organizationId: string, id: string) => Promise<any>;\n  deleteCollectionUser: (\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ) => Promise<any>;\n\n  getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n  getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n  getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n  postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n  deleteGroup: (organizationId: string, id: string) => Promise<any>;\n  deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n  getSync: () => Promise<SyncResponse>;\n  postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n  getSettingsDomains: () => Promise<DomainsResponse>;\n  putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n  getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorOrganizationProviders: (\n    organizationId: string\n  ) => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorAuthenticator: (\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n  getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n  getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n  getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n  getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n  putTwoFactorAuthenticator: (\n    request: UpdateTwoFactorAuthenticatorRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n  putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorYubiKey: (\n    request: UpdateTwoFactorYubioOtpRequest\n  ) => Promise<TwoFactorYubiKeyResponse>;\n  putTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  deleteTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n  putTwoFactorOrganizationDisable: (\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ) => Promise<TwoFactorProviderResponse>;\n  postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n  postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n  postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n  getDeviceVerificationSettings: () => Promise<DeviceVerificationResponse>;\n  putDeviceVerificationSettings: (\n    request: DeviceVerificationRequest\n  ) => Promise<DeviceVerificationResponse>;\n  getKnownDevice: (email: string, deviceIdentifier: string) => Promise<boolean>;\n\n  getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n  getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n  getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n  getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n  putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n  deleteEmergencyAccess: (id: string) => Promise<any>;\n  postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n  postEmergencyAccessReinvite: (id: string) => Promise<any>;\n  postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n  postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n  postEmergencyAccessInitiate: (id: string) => Promise<any>;\n  postEmergencyAccessApprove: (id: string) => Promise<any>;\n  postEmergencyAccessReject: (id: string) => Promise<any>;\n  postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n  postEmergencyAccessPassword: (\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ) => Promise<any>;\n  postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n  getCloudCommunicationsEnabled: () => Promise<boolean>;\n  abstract getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId: string\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  deleteOrganizationConnection: (id: string) => Promise<void>;\n  getPlans: () => Promise<ListResponse<PlanResponse>>;\n  getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n\n  postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n  getProvider: (id: string) => Promise<ProviderResponse>;\n  putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n  getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n  getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n  postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n  postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n  postManyProviderUserReinvite: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  postProviderUserAccept: (\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ) => Promise<any>;\n  postProviderUserConfirm: (\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ) => Promise<any>;\n  postProviderUsersPublicKey: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n  postProviderUserBulkConfirm: (\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  putProviderUser: (\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ) => Promise<any>;\n  deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyProviderUsers: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  getProviderClients: (\n    providerId: string\n  ) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n  postProviderAddOrganization: (\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ) => Promise<any>;\n  postProviderCreateOrganization: (\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ) => Promise<ProviderOrganizationResponse>;\n  deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n  getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n  getEventsCipher: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganization: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganizationUser: (\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProvider: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProviderUser: (\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n  deleteSsoUser: (organizationId: string) => Promise<void>;\n  getSsoUserIdentifier: () => Promise<string>;\n\n  getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n  getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n  postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n  postSetupPayment: () => Promise<string>;\n\n  getActiveBearerToken: () => Promise<string>;\n  fetch: (request: Request) => Promise<Response>;\n  nativeFetch: (request: Request) => Promise<Response>;\n\n  preValidateSso: (identifier: string) => Promise<SsoPreValidateResponse>;\n\n  postCreateSponsorship: (\n    sponsorshipOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ) => Promise<void>;\n  getSponsorshipSyncStatus: (\n    sponsoredOrgId: string\n  ) => Promise<OrganizationSponsorshipSyncStatusResponse>;\n  deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n  deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n  postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n  postRedeemSponsorship: (\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ) => Promise<void>;\n  postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n  getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n  postUserKeyToKeyConnector: (\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ) => Promise<void>;\n  getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n  getOrganizationExport: (organizationId: string) => Promise<OrganizationExportResponse>;\n}\n","export abstract class AppIdService {\n  getAppId: () => Promise<string>;\n  getAnonymousAppId: () => Promise<string>;\n}\n","import { BreachAccountResponse } from \"../models/response/breach-account.response\";\n\nexport abstract class AuditService {\n  passwordLeaked: (password: string) => Promise<number>;\n  breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthResult } from \"../models/domain/auth-result\";\nimport {\n  UserApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\nimport { AuthRequestPushNotification } from \"../models/response/notification.response\";\n\nexport abstract class AuthService {\n  masterPasswordHash: string;\n  email: string;\n  accessCode: string;\n  authRequestId: string;\n\n  logIn: (\n    credentials:\n      | UserApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ) => Promise<AuthResult>;\n  logInTwoFactor: (\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ) => Promise<AuthResult>;\n  logOut: (callback: () => void) => void;\n  makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n  authingWithUserApiKey: () => boolean;\n  authingWithSso: () => boolean;\n  authingWithPassword: () => boolean;\n  authingWithPasswordless: () => boolean;\n  getAuthStatus: (userId?: string) => Promise<AuthenticationStatus>;\n  authResponsePushNotifiction: (notification: AuthRequestPushNotification) => Promise<any>;\n\n  getPushNotifcationObs$: () => Observable<any>;\n}\n","export interface MessageBase {\n  command: string;\n}\n\nexport abstract class BroadcasterService {\n  send: (message: MessageBase, id?: string) => void;\n  subscribe: (id: string, messageCallback: (message: MessageBase) => void) => void;\n  unsubscribe: (id: string) => void;\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { FieldView } from \"../models/view/field.view\";\n\nexport abstract class CipherService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher?: Cipher\n  ) => Promise<Cipher>;\n  encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n  encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n  get: (id: string) => Promise<Cipher>;\n  getAll: () => Promise<Cipher[]>;\n  getAllDecrypted: () => Promise<CipherView[]>;\n  getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n  getAllDecryptedForUrl: (\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch?: UriMatchType\n  ) => Promise<CipherView[]>;\n  getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n  getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getNextCipherForUrl: (url: string) => Promise<CipherView>;\n  updateLastUsedIndexForUrl: (url: string) => void;\n  updateLastUsedDate: (id: string) => Promise<void>;\n  updateLastLaunchedDate: (id: string) => Promise<void>;\n  saveNeverDomain: (domain: string) => Promise<void>;\n  createWithServer: (cipher: Cipher) => Promise<any>;\n  updateWithServer: (cipher: Cipher) => Promise<any>;\n  shareWithServer: (\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  shareManyWithServer: (\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  saveAttachmentWithServer: (\n    cipher: Cipher,\n    unencryptedFile: any,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveAttachmentRawWithServer: (\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n  upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n  replace: (ciphers: { [id: string]: CipherData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  deleteManyWithServer: (ids: string[]) => Promise<any>;\n  deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n  deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n  sortCiphersByLastUsed: (a: any, b: any) => number;\n  sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n  getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n  softDelete: (id: string | string[]) => Promise<any>;\n  softDeleteWithServer: (id: string) => Promise<any>;\n  softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n  restore: (\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) => Promise<any>;\n  restoreWithServer: (id: string) => Promise<any>;\n  restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { CollectionData } from \"../models/data/collection.data\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/tree-node\";\nimport { CollectionView } from \"../models/view/collection.view\";\n\nexport abstract class CollectionService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: CollectionView) => Promise<Collection>;\n  decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n  get: (id: string) => Promise<Collection>;\n  getAll: () => Promise<Collection[]>;\n  getAllDecrypted: () => Promise<CollectionView[]>;\n  getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n  getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n  upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n  replace: (collections: { [id: string]: CollectionData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { ProfileOrganizationResponse } from \"../models/response/profile-organization.response\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profile-provider-organization.response\";\nimport { ProfileProviderResponse } from \"../models/response/profile-provider.response\";\n\nexport abstract class CryptoService {\n  setKey: (key: SymmetricCryptoKey) => Promise<any>;\n  setKeyHash: (keyHash: string) => Promise<void>;\n  setEncKey: (encKey: string) => Promise<void>;\n  setEncPrivateKey: (encPrivateKey: string) => Promise<void>;\n  setOrgKeys: (\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ) => Promise<void>;\n  setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<void>;\n  getKey: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyFromStorage: (keySuffix: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyHash: () => Promise<string>;\n  compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n  getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  getPublicKey: () => Promise<ArrayBuffer>;\n  getPrivateKey: () => Promise<ArrayBuffer>;\n  getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n  getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n  getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n  getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n  getKeyForUserEncryption: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  hasKey: () => Promise<boolean>;\n  hasKeyInMemory: (userId?: string) => Promise<boolean>;\n  hasKeyStored: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<boolean>;\n  hasEncKey: () => Promise<boolean>;\n  clearKey: (clearSecretStorage?: boolean, userId?: string) => Promise<any>;\n  clearKeyHash: () => Promise<any>;\n  clearEncKey: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearKeyPair: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearOrgKeys: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n  clearPinProtectedKey: () => Promise<any>;\n  clearKeys: (userId?: string) => Promise<any>;\n  toggleKey: () => Promise<any>;\n  makeKey: (\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeKeyFromPin: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs?: EncString\n  ) => Promise<SymmetricCryptoKey>;\n  makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n  makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n  makePinKey: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n  hashPassword: (\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ) => Promise<string>;\n  makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n  remakeEncKey: (\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ) => Promise<[SymmetricCryptoKey, EncString]>;\n  encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n  encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n  rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n  rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n  decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n  decryptFromBytes: (encBuffer: EncArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  randomNumber: (min: number, max: number) => Promise<number>;\n  validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","import { DecryptParameters } from \"../models/domain/decrypt-parameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport abstract class CryptoFunctionService {\n  pbkdf2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ) => Promise<ArrayBuffer>;\n  hkdf: (\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hkdfExpand: (\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hash: (\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ) => Promise<ArrayBuffer>;\n  hmac: (\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n  hmacFast: (\n    value: ArrayBuffer | string,\n    key: ArrayBuffer | string,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer | string>;\n  compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n  aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  aesDecryptFastParameters: (\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ) => DecryptParameters<ArrayBuffer | string>;\n  aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n  aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaEncrypt: (\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaDecrypt: (\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n  randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { IEncrypted } from \"../interfaces/IEncrypted\";\nimport { Decryptable } from \"../interfaces/decryptable.interface\";\nimport { InitializerMetadata } from \"../interfaces/initializer-metadata.interface\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport abstract class EncryptService {\n  abstract encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString>;\n  abstract encryptToBytes: (\n    plainValue: ArrayBuffer,\n    key?: SymmetricCryptoKey\n  ) => Promise<EncArrayBuffer>;\n  abstract decryptToUtf8: (encString: EncString, key: SymmetricCryptoKey) => Promise<string>;\n  abstract decryptToBytes: (encThing: IEncrypted, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  abstract resolveLegacyKey: (key: SymmetricCryptoKey, encThing: IEncrypted) => SymmetricCryptoKey;\n  abstract decryptItems: <T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ) => Promise<T[]>;\n}\n","import { Observable } from \"rxjs\";\n\nexport type Urls = {\n  base?: string;\n  webVault?: string;\n  api?: string;\n  identity?: string;\n  icons?: string;\n  notifications?: string;\n  events?: string;\n  keyConnector?: string;\n  scim?: string;\n};\n\nexport type PayPalConfig = {\n  businessId?: string;\n  buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n  urls: Observable<Urls>;\n\n  hasBaseUrl: () => boolean;\n  getNotificationsUrl: () => string;\n  getWebVaultUrl: () => string;\n  getSendUrl: () => string;\n  getIconsUrl: () => string;\n  getApiUrl: () => string;\n  getIdentityUrl: () => string;\n  getEventsUrl: () => string;\n  getKeyConnectorUrl: () => string;\n  getScimUrl: () => string;\n  setUrlsFromStorage: () => Promise<void>;\n  setUrls: (urls: Urls) => Promise<Urls>;\n  getUrls: () => Urls;\n  isCloud: () => boolean;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport abstract class EventCollectionService {\n  collect: (\n    eventType: EventType,\n    cipherId?: string,\n    uploadImmediately?: boolean,\n    organizationId?: string\n  ) => Promise<any>;\n}\n","import { EventView } from \"../models/view/event.view\";\n\nexport type ExportFormat = \"csv\" | \"json\" | \"encrypted_json\";\n\nexport abstract class ExportService {\n  getExport: (format?: ExportFormat, organizationId?: string) => Promise<string>;\n  getPasswordProtectedExport: (password: string, organizationId?: string) => Promise<string>;\n  getOrganizationExport: (organizationId: string, format?: ExportFormat) => Promise<string>;\n  getEventExport: (events: EventView[]) => Promise<string>;\n  getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport abstract class FileDownloadService {\n  download: (request: FileDownloadRequest) => void;\n}\n","import { Folder } from \"../../models/domain/folder\";\nimport { FolderResponse } from \"../../models/response/folder.response\";\n\nexport class FolderApiServiceAbstraction {\n  save: (folder: Folder) => Promise<any>;\n  delete: (id: string) => Promise<any>;\n  get: (id: string) => Promise<FolderResponse>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { FolderView } from \"../../models/view/folder.view\";\n\nexport abstract class FolderService {\n  folders$: Observable<Folder[]>;\n  folderViews$: Observable<FolderView[]>;\n\n  clearCache: () => Promise<void>;\n  encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n  get: (id: string) => Promise<Folder>;\n  getAllFromState: () => Promise<Folder[]>;\n  /**\n   * @deprecated Only use in CLI!\n   */\n  getFromState: (id: string) => Promise<Folder>;\n  /**\n   * @deprecated Only use in CLI!\n   */\n  getAllDecryptedFromState: () => Promise<FolderView[]>;\n}\n\nexport abstract class InternalFolderService extends FolderService {\n  upsert: (folder: FolderData | FolderData[]) => Promise<void>;\n  replace: (folders: { [id: string]: FolderData }) => Promise<void>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { AbstractControl } from \"@angular/forms\";\nexport interface AllValidationErrors {\n  controlName: string;\n  errorName: string;\n}\n\nexport interface FormGroupControls {\n  [key: string]: AbstractControl;\n}\n\nexport abstract class FormValidationErrorsService {\n  getFormValidationErrors: (controls: FormGroupControls) => AllValidationErrors[];\n}\n","import { Observable } from \"rxjs\";\n\nexport abstract class I18nService {\n  locale$: Observable<string>;\n  supportedTranslationLocales: string[];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames: Map<string, string>;\n  t: (id: string, p1?: string | number, p2?: string | number, p3?: string | number) => string;\n  translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { Organization } from \"../models/domain/organization\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport abstract class KeyConnectorService {\n  getAndSetKey: (url?: string) => Promise<void>;\n  getManagingOrganization: () => Promise<Organization>;\n  getUsesKeyConnector: () => Promise<boolean>;\n  migrateUser: () => Promise<void>;\n  userNeedsMigration: () => Promise<boolean>;\n  convertNewSsoUserToKeyConnector: (\n    tokenResponse: IdentityTokenResponse,\n    orgId: string\n  ) => Promise<void>;\n  setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n  setConvertAccountRequired: (status: boolean) => Promise<void>;\n  getConvertAccountRequired: () => Promise<boolean>;\n  removeConvertAccountRequired: () => Promise<void>;\n  clear: () => Promise<void>;\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nexport abstract class LogService {\n  debug: (message: string) => void;\n  info: (message: string) => void;\n  warning: (message: string) => void;\n  error: (message: string) => void;\n  write: (level: LogLevelType, message: string) => void;\n}\n","export abstract class LoginService {\n  getEmail: () => string;\n  getRememberEmail: () => boolean;\n  setEmail: (value: string) => void;\n  setRememberEmail: (value: boolean) => void;\n  clearValues: () => void;\n  saveEmailSettings: () => Promise<void>;\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","import { ListResponse } from \"../../models/response/list.response\";\n\nimport {\n  OrganizationUserAcceptRequest,\n  OrganizationUserBulkConfirmRequest,\n  OrganizationUserConfirmRequest,\n  OrganizationUserInviteRequest,\n  OrganizationUserResetPasswordEnrollmentRequest,\n  OrganizationUserResetPasswordRequest,\n  OrganizationUserUpdateGroupsRequest,\n  OrganizationUserUpdateRequest,\n} from \"./requests\";\nimport {\n  OrganizationUserBulkPublicKeyResponse,\n  OrganizationUserBulkResponse,\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"./responses\";\n\n/**\n * Service for interacting with Organization Users via the API\n */\nexport abstract class OrganizationUserService {\n  /**\n   * Retrieve a single organization user by Id\n   * @param organizationId - Identifier for the user's organization\n   * @param id - Organization user identifier\n   */\n  abstract getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse>;\n\n  /**\n   * Retrieve a list of groups Ids the specified organization user belongs to\n   * @param organizationId - Identifier for the user's organization\n   * @param id - Organization user identifier\n   */\n  abstract getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]>;\n\n  /**\n   * Retrieve a list of all users that belong to the specified organization\n   * @param organizationId - Identifier for the organization\n   */\n  abstract getAllUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n\n  /**\n   * Retrieve reset password details for the specified organization user\n   * @param organizationId - Identifier for the user's organization\n   * @param id - Organization user identifier\n   */\n  abstract getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse>;\n\n  /**\n   * Create new organization user invite(s) for the specified organization\n   * @param organizationId - Identifier for the organization\n   * @param request - New user invitation request details\n   */\n  abstract postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<void>;\n\n  /**\n   * Re-invite the specified organization user\n   * @param organizationId - Identifier for the user's organization\n   * @param id - Organization user identifier\n   */\n  abstract postOrganizationUserReinvite(organizationId: string, id: string): Promise<any>;\n\n  /**\n   * Re-invite many organization users for the specified organization\n   * @param organizationId - Identifier for the organization\n   * @param ids - A list of organization user identifiers\n   * @return List of user ids, including both those that were successfully re-invited and those that had an error\n   */\n  abstract postManyOrganizationUserReinvite(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  /**\n   * Accept an organization user invitation\n   * @param organizationId - Identifier for the organization to accept\n   * @param id - Organization user identifier\n   * @param request - Request details for accepting the invitation\n   */\n  abstract postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<void>;\n\n  /**\n   * Confirm an organization user that has accepted their invitation\n   * @param organizationId - Identifier for the organization to confirm\n   * @param id - Organization user identifier\n   * @param request - Request details for confirming the user\n   */\n  abstract postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<void>;\n\n  /**\n   * Retrieve a list of the specified users' public keys\n   * @param organizationId - Identifier for the organization to accept\n   * @param ids - A list of organization user identifiers to retrieve public keys for\n   */\n  abstract postOrganizationUsersPublicKey(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n\n  /**\n   * Confirm many organization users that have accepted their invitations\n   * @param organizationId - Identifier for the organization to confirm users\n   * @param request - Bulk request details for confirming the user\n   */\n  abstract postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  /**\n   * Update an organization users\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   * @param request - Request details for updating the user\n   */\n  abstract putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<void>;\n\n  /**\n   * Update an organization user's groups\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   * @param groupIds - List of group ids to associate the user with\n   */\n  abstract putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    groupIds: OrganizationUserUpdateGroupsRequest\n  ): Promise<void>;\n\n  /**\n   * Update an organization user's reset password enrollment\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param userId - Organization user identifier\n   * @param request - Reset password enrollment details\n   */\n  abstract putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<void>;\n\n  /**\n   * Reset an organization user's password\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   * @param request - Reset password details\n   */\n  abstract putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<void>;\n\n  /**\n   * Delete an organization user\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   */\n  abstract deleteOrganizationUser(organizationId: string, id: string): Promise<void>;\n\n  /**\n   * Delete many organization users\n   * @param organizationId - Identifier for the organization the users belongs to\n   * @param ids - List of organization user identifiers to delete\n   * @return List of user ids, including both those that were successfully deleted and those that had an error\n   */\n  abstract deleteManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  /**\n   * Revoke an organization user's access to the organization\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   */\n  abstract revokeOrganizationUser(organizationId: string, id: string): Promise<void>;\n\n  /**\n   * Revoke many organization users' access to the organization\n   * @param organizationId - Identifier for the organization the users belongs to\n   * @param ids - List of organization user identifiers to revoke\n   * @return List of user ids, including both those that were successfully revoked and those that had an error\n   */\n  abstract revokeManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  /**\n   * Restore an organization user's access to the organization\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   */\n  abstract restoreOrganizationUser(organizationId: string, id: string): Promise<void>;\n\n  /**\n   * Restore many organization users' access to the organization\n   * @param organizationId - Identifier for the organization the users belongs to\n   * @param ids - List of organization user identifiers to restore\n   * @return List of user ids, including both those that were successfully restored and those that had an error\n   */\n  abstract restoreManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\nimport { ImportDirectoryRequest } from \"../../models/request/import-directory.request\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organization-api-key.request\";\nimport { OrganizationCreateRequest } from \"../../models/request/organization-create.request\";\nimport { OrganizationKeysRequest } from \"../../models/request/organization-keys.request\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organization-subscription-update.request\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organization-tax-info-update.request\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organization-update.request\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organization-upgrade.request\";\nimport { OrganizationSsoRequest } from \"../../models/request/organization/organization-sso.request\";\nimport { PaymentRequest } from \"../../models/request/payment.request\";\nimport { SeatRequest } from \"../../models/request/seat.request\";\nimport { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { StorageRequest } from \"../../models/request/storage.request\";\nimport { VerifyBankRequest } from \"../../models/request/verify-bank.request\";\nimport { ApiKeyResponse } from \"../../models/response/api-key.response\";\nimport { BillingResponse } from \"../../models/response/billing.response\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organization-api-key-information.response\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organization-auto-enroll-status.response\";\nimport { OrganizationKeysResponse } from \"../../models/response/organization-keys.response\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organization-subscription.response\";\nimport { OrganizationResponse } from \"../../models/response/organization.response\";\nimport { OrganizationSsoResponse } from \"../../models/response/organization/organization-sso.response\";\nimport { PaymentResponse } from \"../../models/response/payment.response\";\nimport { TaxInfoResponse } from \"../../models/response/tax-info.response\";\n\nexport class OrganizationApiServiceAbstraction {\n  get: (id: string) => Promise<OrganizationResponse>;\n  getBilling: (id: string) => Promise<BillingResponse>;\n  getSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n  getLicense: (id: string, installationId: string) => Promise<unknown>;\n  getAutoEnrollStatus: (identifier: string) => Promise<OrganizationAutoEnrollStatusResponse>;\n  create: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n  createLicense: (data: FormData) => Promise<OrganizationResponse>;\n  save: (id: string, request: OrganizationUpdateRequest) => Promise<OrganizationResponse>;\n  updatePayment: (id: string, request: PaymentRequest) => Promise<void>;\n  upgrade: (id: string, request: OrganizationUpgradeRequest) => Promise<PaymentResponse>;\n  updateSubscription: (id: string, request: OrganizationSubscriptionUpdateRequest) => Promise<void>;\n  updateSeats: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n  updateStorage: (id: string, request: StorageRequest) => Promise<PaymentResponse>;\n  verifyBank: (id: string, request: VerifyBankRequest) => Promise<void>;\n  cancel: (id: string) => Promise<void>;\n  reinstate: (id: string) => Promise<void>;\n  leave: (id: string) => Promise<void>;\n  delete: (id: string, request: SecretVerificationRequest) => Promise<void>;\n  updateLicense: (id: string, data: FormData) => Promise<void>;\n  importDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<void>;\n  getOrCreateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getApiKeyInformation: (\n    id: string,\n    organizationApiKeyType?: OrganizationApiKeyType\n  ) => Promise<ListResponse<OrganizationApiKeyInformationResponse>>;\n  rotateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n  updateTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<void>;\n  getKeys: (id: string) => Promise<OrganizationKeysResponse>;\n  updateKeys: (id: string, request: OrganizationKeysRequest) => Promise<OrganizationKeysResponse>;\n  getSso: (id: string) => Promise<OrganizationSsoResponse>;\n  updateSso: (id: string, request: OrganizationSsoRequest) => Promise<OrganizationSsoResponse>;\n}\n","import { map, Observable } from \"rxjs\";\n\nimport { Utils } from \"../../misc/utils\";\nimport { OrganizationData } from \"../../models/data/organization.data\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { I18nService } from \"../i18n.service\";\n\nexport function canAccessVaultTab(org: Organization): boolean {\n  return org.isManager;\n}\n\nexport function canAccessSettingsTab(org: Organization): boolean {\n  return (\n    org.isOwner ||\n    org.canManagePolicies ||\n    org.canManageSso ||\n    org.canManageScim ||\n    org.canAccessImportExport\n  );\n}\n\nexport function canAccessMembersTab(org: Organization): boolean {\n  return org.canManageUsers || org.canManageUsersPassword;\n}\n\nexport function canAccessGroupsTab(org: Organization): boolean {\n  return org.canManageGroups;\n}\n\nexport function canAccessReportingTab(org: Organization): boolean {\n  return org.canAccessReports || org.canAccessEventLogs;\n}\n\nexport function canAccessBillingTab(org: Organization): boolean {\n  return org.canManageBilling;\n}\n\nexport function canManageCollections(org: Organization): boolean {\n  return (\n    org.canCreateNewCollections ||\n    org.canEditAnyCollection ||\n    org.canDeleteAnyCollection ||\n    org.canViewAssignedCollections\n  );\n}\n\nexport function canAccessManageTab(org: Organization): boolean {\n  return canAccessMembersTab(org) || canAccessGroupsTab(org) || canManageCollections(org);\n}\n\nexport function canAccessOrgAdmin(org: Organization): boolean {\n  return (\n    canAccessMembersTab(org) ||\n    canAccessGroupsTab(org) ||\n    canAccessReportingTab(org) ||\n    canAccessBillingTab(org) ||\n    canAccessSettingsTab(org) ||\n    canAccessVaultTab(org) ||\n    canAccessManageTab(org)\n  );\n}\n\nexport function getOrganizationById(id: string) {\n  return map<Organization[], Organization | undefined>((orgs) => orgs.find((o) => o.id === id));\n}\n\nexport function canAccessAdmin(i18nService: I18nService) {\n  return map<Organization[], Organization[]>((orgs) =>\n    orgs.filter(canAccessOrgAdmin).sort(Utils.getSortFunction(i18nService, \"name\"))\n  );\n}\n\nexport function isNotProviderUser(org: Organization): boolean {\n  return !org.isProviderUser;\n}\n\nexport abstract class OrganizationService {\n  organizations$: Observable<Organization[]>;\n\n  get: (id: string) => Organization;\n  getByIdentifier: (identifier: string) => Organization;\n  getAll: (userId?: string) => Promise<Organization[]>;\n  /**\n   * @deprecated For the CLI only\n   * @param id id of the organization\n   */\n  getFromState: (id: string) => Promise<Organization>;\n  canManageSponsorships: () => Promise<boolean>;\n  hasOrganizations: () => boolean;\n}\n\nexport abstract class InternalOrganizationService extends OrganizationService {\n  replace: (organizations: { [id: string]: OrganizationData }) => Promise<void>;\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { PasswordGeneratorOptions } from \"../models/domain/password-generator-options\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/password-generator-policy-options\";\n\nexport abstract class PasswordGenerationService {\n  generatePassword: (options: PasswordGeneratorOptions) => Promise<string>;\n  generatePassphrase: (options: PasswordGeneratorOptions) => Promise<string>;\n  getOptions: () => Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]>;\n  enforcePasswordGeneratorPoliciesOnOptions: (\n    options: PasswordGeneratorOptions\n  ) => Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]>;\n  getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n  saveOptions: (options: PasswordGeneratorOptions) => Promise<void>;\n  getHistory: () => Promise<GeneratedPasswordHistory[]>;\n  addHistory: (password: string) => Promise<void>;\n  clear: (userId?: string) => Promise<void>;\n  passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n  normalizeOptions: (\n    options: PasswordGeneratorOptions,\n    enforcedPolicyOptions: PasswordGeneratorPolicyOptions\n  ) => void;\n}\n","export abstract class PasswordRepromptService {\n  protectedFields: () => string[];\n  showPasswordPrompt: () => Promise<boolean>;\n  enabled: () => Promise<boolean>;\n}\n","import { ClientType } from \"../enums/clientType\";\nimport { DeviceType } from \"../enums/deviceType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  getClientType: () => ClientType;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  getApplicationVersion: () => Promise<string>;\n  getApplicationVersionNumber: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean,\n    target?: string\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  supportsSecureStorage: () => boolean;\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { PolicyRequest } from \"../../models/request/policy.request\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport class PolicyApiServiceAbstraction {\n  getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n  getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByToken: (\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByInvitedUser: (\n    organizationId: string,\n    userId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n  putPolicy: (organizationId: string, type: PolicyType, request: PolicyRequest) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/reset-password-policy-options\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport abstract class PolicyService {\n  policies$: Observable<Policy[]>;\n  masterPasswordPolicyOptions$: (policies?: Policy[]) => Observable<MasterPasswordPolicyOptions>;\n  policyAppliesToActiveUser$: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean\n  ) => Observable<boolean>;\n\n  /**\n   * @deprecated Do not call this, use the policies$ observable collection\n   */\n  getAll: (type?: PolicyType, userId?: string) => Promise<Policy[]>;\n  evaluateMasterPassword: (\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions?: MasterPasswordPolicyOptions\n  ) => boolean;\n  getResetPasswordPolicyOptions: (\n    policies: Policy[],\n    orgId: string\n  ) => [ResetPasswordPolicyOptions, boolean];\n  mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n  policyAppliesToUser: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) => Promise<boolean>;\n}\n\nexport abstract class InternalPolicyService extends PolicyService {\n  upsert: (policy: PolicyData) => Promise<any>;\n  replace: (policies: { [id: string]: PolicyData }) => Promise<void>;\n  clear: (userId?: string) => Promise<any>;\n}\n","import { ProviderData } from \"../models/data/provider.data\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport abstract class ProviderService {\n  get: (id: string) => Promise<Provider>;\n  getAll: () => Promise<Provider[]>;\n  save: (providers: { [id: string]: ProviderData }) => Promise<any>;\n}\n","import { CipherView } from \"../models/view/cipher.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport abstract class SearchService {\n  indexedEntityId?: string = null;\n  clearIndex: () => void;\n  isSearchable: (query: string) => boolean;\n  indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n  searchCiphers: (\n    query: string,\n    filter?: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[],\n    ciphers?: CipherView[]\n  ) => Promise<CipherView[]>;\n  searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n  searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { SendData } from \"../models/data/send.data\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { Send } from \"../models/domain/send\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport abstract class SendService {\n  clearCache: () => Promise<void>;\n  encrypt: (\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ) => Promise<[Send, EncArrayBuffer]>;\n  get: (id: string) => Promise<Send>;\n  getAll: () => Promise<Send[]>;\n  getAllDecrypted: () => Promise<SendView[]>;\n  saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n  upsert: (send: SendData | SendData[]) => Promise<any>;\n  replace: (sends: { [id: string]: SendData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  removePasswordWithServer: (id: string) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { KdfType } from \"../enums/kdfType\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encrypted-organization-key.data\";\nimport { EventData } from \"../models/data/event.data\";\nimport { FolderData } from \"../models/data/folder.data\";\nimport { LocalData } from \"../models/data/local.data\";\nimport { OrganizationData } from \"../models/data/organization.data\";\nimport { PolicyData } from \"../models/data/policy.data\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { SendData } from \"../models/data/send.data\";\nimport { ServerConfigData } from \"../models/data/server-config.data\";\nimport { Account, AccountSettingsSettings } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { Policy } from \"../models/domain/policy\";\nimport { StorageOptions } from \"../models/domain/storage-options\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { WindowState } from \"../models/domain/window-state\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { CollectionView } from \"../models/view/collection.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport abstract class StateService<T extends Account = Account> {\n  accounts$: Observable<{ [userId: string]: T }>;\n  activeAccount$: Observable<string>;\n  activeAccountUnlocked$: Observable<boolean>;\n\n  addAccount: (account: T) => Promise<void>;\n  setActiveUser: (userId: string) => Promise<void>;\n  clean: (options?: StorageOptions) => Promise<void>;\n  init: () => Promise<void>;\n\n  getAccessToken: (options?: StorageOptions) => Promise<string>;\n  setAccessToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getAddEditCipherInfo: (options?: StorageOptions) => Promise<any>;\n  setAddEditCipherInfo: (value: any, options?: StorageOptions) => Promise<void>;\n  getAlwaysShowDock: (options?: StorageOptions) => Promise<boolean>;\n  setAlwaysShowDock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientId: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientId: (value: string, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientSecret: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientSecret: (value: string, options?: StorageOptions) => Promise<void>;\n  getAutoConfirmFingerPrints: (options?: StorageOptions) => Promise<boolean>;\n  setAutoConfirmFingerprints: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getAutoFillOnPageLoadDefault: (options?: StorageOptions) => Promise<boolean>;\n  setAutoFillOnPageLoadDefault: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricAwaitingAcceptance: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricAwaitingAcceptance: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricFingerprintValidated: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricFingerprintValidated: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricText: (options?: StorageOptions) => Promise<string>;\n  setBiometricText: (value: string, options?: StorageOptions) => Promise<void>;\n  getBiometricUnlock: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricUnlock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCanAccessPremium: (options?: StorageOptions) => Promise<boolean>;\n  getHasPremiumPersonally: (options?: StorageOptions) => Promise<boolean>;\n  setHasPremiumPersonally: (value: boolean, options?: StorageOptions) => Promise<void>;\n  setHasPremiumFromOrganization: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getHasPremiumFromOrganization: (options?: StorageOptions) => Promise<boolean>;\n  getClearClipboard: (options?: StorageOptions) => Promise<number>;\n  setClearClipboard: (value: number, options?: StorageOptions) => Promise<void>;\n  getCollapsedGroupings: (options?: StorageOptions) => Promise<string[]>;\n  setCollapsedGroupings: (value: string[], options?: StorageOptions) => Promise<void>;\n  getConvertAccountToKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setConvertAccountToKeyConnector: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setCryptoMasterKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyAuto: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyAuto: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyB64: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyB64: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<string>;\n  hasCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setCryptoMasterKeyBiometric: (value: string, options?: StorageOptions) => Promise<void>;\n  getDecryptedCiphers: (options?: StorageOptions) => Promise<CipherView[]>;\n  setDecryptedCiphers: (value: CipherView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCollections: (options?: StorageOptions) => Promise<CollectionView[]>;\n  setDecryptedCollections: (value: CollectionView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setDecryptedCryptoSymmetricKey: (\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setDecryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPinProtected: (options?: StorageOptions) => Promise<EncString>;\n  setDecryptedPinProtected: (value: EncString, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this, use PolicyService\n   */\n  getDecryptedPolicies: (options?: StorageOptions) => Promise<Policy[]>;\n  /**\n   * @deprecated Do not call this, use PolicyService\n   */\n  setDecryptedPolicies: (value: Policy[], options?: StorageOptions) => Promise<void>;\n  getDecryptedPrivateKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setDecryptedPrivateKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getDecryptedProviderKeys: (options?: StorageOptions) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedProviderKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedSends: (options?: StorageOptions) => Promise<SendView[]>;\n  setDecryptedSends: (value: SendView[], options?: StorageOptions) => Promise<void>;\n  getDefaultUriMatch: (options?: StorageOptions) => Promise<UriMatchType>;\n  setDefaultUriMatch: (value: UriMatchType, options?: StorageOptions) => Promise<void>;\n  getDisableAddLoginNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAddLoginNotification: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoBiometricsPrompt: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoBiometricsPrompt: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoTotpCopy: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoTotpCopy: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableBadgeCounter: (options?: StorageOptions) => Promise<boolean>;\n  setDisableBadgeCounter: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableChangedPasswordNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableChangedPasswordNotification: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDisableContextMenuItem: (options?: StorageOptions) => Promise<boolean>;\n  setDisableContextMenuItem: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableFavicon: (options?: StorageOptions) => Promise<boolean>;\n  setDisableFavicon: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableGa: (options?: StorageOptions) => Promise<boolean>;\n  setDisableGa: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowCardsCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowCardsCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowIdentitiesCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowIdentitiesCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDuckDuckGoSharedKey: (options?: StorageOptions) => Promise<string>;\n  setDuckDuckGoSharedKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmail: (options?: StorageOptions) => Promise<string>;\n  setEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmailVerified: (options?: StorageOptions) => Promise<boolean>;\n  setEmailVerified: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAlwaysOnTop: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAlwaysOnTop: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAutoFillOnPageLoad: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAutoFillOnPageLoad: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBiometric: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegration: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegrationFingerprint: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegrationFingerprint: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableCloseToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableCloseToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableDuckDuckGoBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableDuckDuckGoBrowserIntegration: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableFullWidth: (options?: StorageOptions) => Promise<boolean>;\n  setEnableFullWidth: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableMinimizeToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableMinimizeToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableStartToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableStartToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEncryptedCiphers: (options?: StorageOptions) => Promise<{ [id: string]: CipherData }>;\n  setEncryptedCiphers: (\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCollections: (options?: StorageOptions) => Promise<{ [id: string]: CollectionData }>;\n  setEncryptedCollections: (\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedCryptoSymmetricKey: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  getEncryptedFolders: (options?: StorageOptions) => Promise<{ [id: string]: FolderData }>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  setEncryptedFolders: (\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<{ [orgId: string]: EncryptedOrganizationKeyData }>;\n  setEncryptedOrganizationKeys: (\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setEncryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPinProtected: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPinProtected: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use PolicyService\n   */\n  getEncryptedPolicies: (options?: StorageOptions) => Promise<{ [id: string]: PolicyData }>;\n  /**\n   * @deprecated Do not call this directly, use PolicyService\n   */\n  setEncryptedPolicies: (\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPrivateKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPrivateKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedProviderKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedProviderKeys: (value: any, options?: StorageOptions) => Promise<void>;\n  getEncryptedSends: (options?: StorageOptions) => Promise<{ [id: string]: SendData }>;\n  setEncryptedSends: (value: { [id: string]: SendData }, options?: StorageOptions) => Promise<void>;\n  getEntityId: (options?: StorageOptions) => Promise<string>;\n  setEntityId: (value: string, options?: StorageOptions) => Promise<void>;\n  getEntityType: (options?: StorageOptions) => Promise<any>;\n  setEntityType: (value: string, options?: StorageOptions) => Promise<void>;\n  getEnvironmentUrls: (options?: StorageOptions) => Promise<EnvironmentUrls>;\n  setEnvironmentUrls: (value: EnvironmentUrls, options?: StorageOptions) => Promise<void>;\n  getEquivalentDomains: (options?: StorageOptions) => Promise<any>;\n  setEquivalentDomains: (value: string, options?: StorageOptions) => Promise<void>;\n  getEventCollection: (options?: StorageOptions) => Promise<EventData[]>;\n  setEventCollection: (value: EventData[], options?: StorageOptions) => Promise<void>;\n  getEverBeenUnlocked: (options?: StorageOptions) => Promise<boolean>;\n  setEverBeenUnlocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getForcePasswordReset: (options?: StorageOptions) => Promise<boolean>;\n  setForcePasswordReset: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getInstalledVersion: (options?: StorageOptions) => Promise<string>;\n  setInstalledVersion: (value: string, options?: StorageOptions) => Promise<void>;\n  getIsAuthenticated: (options?: StorageOptions) => Promise<boolean>;\n  getKdfIterations: (options?: StorageOptions) => Promise<number>;\n  setKdfIterations: (value: number, options?: StorageOptions) => Promise<void>;\n  getKdfType: (options?: StorageOptions) => Promise<KdfType>;\n  setKdfType: (value: KdfType, options?: StorageOptions) => Promise<void>;\n  getKeyHash: (options?: StorageOptions) => Promise<string>;\n  setKeyHash: (value: string, options?: StorageOptions) => Promise<void>;\n  getLastActive: (options?: StorageOptions) => Promise<number>;\n  setLastActive: (value: number, options?: StorageOptions) => Promise<void>;\n  getLastSync: (options?: StorageOptions) => Promise<string>;\n  setLastSync: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocalData: (options?: StorageOptions) => Promise<{ [cipherId: string]: LocalData }>;\n  setLocalData: (\n    value: { [cipherId: string]: LocalData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getLocale: (options?: StorageOptions) => Promise<string>;\n  setLocale: (value: string, options?: StorageOptions) => Promise<void>;\n  getMainWindowSize: (options?: StorageOptions) => Promise<number>;\n  setMainWindowSize: (value: number, options?: StorageOptions) => Promise<void>;\n  getMinimizeOnCopyToClipboard: (options?: StorageOptions) => Promise<boolean>;\n  setMinimizeOnCopyToClipboard: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNeverDomains: (options?: StorageOptions) => Promise<{ [id: string]: any }>;\n  setNeverDomains: (value: { [id: string]: any }, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometrics: (options?: StorageOptions) => Promise<boolean>;\n  setNoAutoPromptBiometrics: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometricsText: (options?: StorageOptions) => Promise<string>;\n  setNoAutoPromptBiometricsText: (value: string, options?: StorageOptions) => Promise<void>;\n  getOpenAtLogin: (options?: StorageOptions) => Promise<boolean>;\n  setOpenAtLogin: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getOrganizationInvitation: (options?: StorageOptions) => Promise<any>;\n  setOrganizationInvitation: (value: any, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  getOrganizations: (options?: StorageOptions) => Promise<{ [id: string]: OrganizationData }>;\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  setOrganizations: (\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getPasswordGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setPasswordGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getUsernameGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setUsernameGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getGeneratorOptions: (options?: StorageOptions) => Promise<any>;\n  setGeneratorOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getProtectedPin: (options?: StorageOptions) => Promise<string>;\n  setProtectedPin: (value: string, options?: StorageOptions) => Promise<void>;\n  getProviders: (options?: StorageOptions) => Promise<{ [id: string]: ProviderData }>;\n  setProviders: (value: { [id: string]: ProviderData }, options?: StorageOptions) => Promise<void>;\n  getPublicKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setPublicKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getRefreshToken: (options?: StorageOptions) => Promise<string>;\n  setRefreshToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getRememberedEmail: (options?: StorageOptions) => Promise<string>;\n  setRememberedEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getSecurityStamp: (options?: StorageOptions) => Promise<string>;\n  setSecurityStamp: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use SettingsService\n   */\n  getSettings: (options?: StorageOptions) => Promise<AccountSettingsSettings>;\n  /**\n   * @deprecated Do not call this directly, use SettingsService\n   */\n  setSettings: (value: AccountSettingsSettings, options?: StorageOptions) => Promise<void>;\n  getSsoCodeVerifier: (options?: StorageOptions) => Promise<string>;\n  setSsoCodeVerifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoOrgIdentifier: (options?: StorageOptions) => Promise<string>;\n  setSsoOrganizationIdentifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoState: (options?: StorageOptions) => Promise<string>;\n  setSsoState: (value: string, options?: StorageOptions) => Promise<void>;\n  getTheme: (options?: StorageOptions) => Promise<ThemeType>;\n  setTheme: (value: ThemeType, options?: StorageOptions) => Promise<void>;\n  getTwoFactorToken: (options?: StorageOptions) => Promise<string>;\n  setTwoFactorToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getUserId: (options?: StorageOptions) => Promise<string>;\n  getUsesKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setUsesKeyConnector: (vaule: boolean, options?: StorageOptions) => Promise<void>;\n  getVaultTimeout: (options?: StorageOptions) => Promise<number>;\n  setVaultTimeout: (value: number, options?: StorageOptions) => Promise<void>;\n  getVaultTimeoutAction: (options?: StorageOptions) => Promise<string>;\n  setVaultTimeoutAction: (value: string, options?: StorageOptions) => Promise<void>;\n  getStateVersion: () => Promise<number>;\n  setStateVersion: (value: number) => Promise<void>;\n  getWindow: () => Promise<WindowState>;\n  setWindow: (value: WindowState) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use ConfigService\n   */\n  getServerConfig: (options?: StorageOptions) => Promise<ServerConfigData>;\n  /**\n   * @deprecated Do not call this directly, use ConfigService\n   */\n  setServerConfig: (value: ServerConfigData, options?: StorageOptions) => Promise<void>;\n\n  getAvatarColor: (options?: StorageOptions) => Promise<string | null | undefined>;\n  setAvatarColor: (value: string, options?: StorageOptions) => Promise<void>;\n}\n","export abstract class StateMigrationService {\n  needsMigration: () => Promise<boolean>;\n  migrate: () => Promise<void>;\n}\n","import { MemoryStorageOptions, StorageOptions } from \"../models/domain/storage-options\";\n\nexport abstract class AbstractStorageService {\n  abstract get<T>(key: string, options?: StorageOptions): Promise<T>;\n  abstract has(key: string, options?: StorageOptions): Promise<boolean>;\n  abstract save<T>(key: string, obj: T, options?: StorageOptions): Promise<void>;\n  abstract remove(key: string, options?: StorageOptions): Promise<void>;\n}\n\nexport abstract class AbstractCachedStorageService extends AbstractStorageService {\n  abstract getBypassCache<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T>;\n}\n\nexport interface MemoryStorageServiceInterface {\n  get<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T>;\n}\n","import {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../../models/response/notification.response\";\n\nexport abstract class SyncService {\n  syncInProgress: boolean;\n\n  getLastSync: () => Promise<Date>;\n  setLastSync: (date: Date, userId?: string) => Promise<any>;\n  fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n  syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","import { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport abstract class TokenService {\n  setTokens: (\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ) => Promise<any>;\n  setToken: (token: string) => Promise<any>;\n  getToken: () => Promise<string>;\n  setRefreshToken: (refreshToken: string) => Promise<any>;\n  getRefreshToken: () => Promise<string>;\n  setClientId: (clientId: string) => Promise<any>;\n  getClientId: () => Promise<string>;\n  setClientSecret: (clientSecret: string) => Promise<any>;\n  getClientSecret: () => Promise<string>;\n  setTwoFactorToken: (tokenResponse: IdentityTokenResponse) => Promise<any>;\n  getTwoFactorToken: () => Promise<string>;\n  clearTwoFactorToken: () => Promise<any>;\n  clearToken: (userId?: string) => Promise<any>;\n  decodeToken: (token?: string) => any;\n  getTokenExpirationDate: () => Promise<Date>;\n  tokenSecondsRemaining: (offsetSeconds?: number) => Promise<number>;\n  tokenNeedsRefresh: (minutes?: number) => Promise<boolean>;\n  getUserId: () => Promise<string>;\n  getEmail: () => Promise<string>;\n  getEmailVerified: () => Promise<boolean>;\n  getName: () => Promise<string>;\n  getIssuer: () => Promise<string>;\n  getIsExternal: () => Promise<boolean>;\n}\n","export abstract class TotpService {\n  getCode: (key: string) => Promise<string>;\n  getTimeInterval: (key: string) => number;\n}\n","import { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\n\nexport interface TwoFactorProviderDetails {\n  type: TwoFactorProviderType;\n  name: string;\n  description: string;\n  priority: number;\n  sort: number;\n  premium: boolean;\n}\n\nexport abstract class TwoFactorService {\n  init: () => void;\n  getSupportedProviders: (win: Window) => TwoFactorProviderDetails[];\n  getDefaultProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n  setSelectedProvider: (type: TwoFactorProviderType) => void;\n  clearSelectedProvider: () => void;\n\n  setProviders: (response: IdentityTwoFactorResponse) => void;\n  clearProviders: () => void;\n  getProviders: () => Map<TwoFactorProviderType, { [key: string]: string }>;\n}\n","import { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { Verification } from \"../../types/verification\";\n\nexport abstract class UserVerificationService {\n  buildRequest: <T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) => Promise<T>;\n  verifyUser: (verification: Verification) => Promise<boolean>;\n  requestOTP: () => Promise<void>;\n}\n","export abstract class UsernameGenerationService {\n  generateUsername: (options: any) => Promise<string>;\n  generateWord: (options: any) => Promise<string>;\n  generateSubaddress: (options: any) => Promise<string>;\n  generateCatchall: (options: any) => Promise<string>;\n  generateForwarded: (options: any) => Promise<string>;\n  getOptions: () => Promise<any>;\n  saveOptions: (options: any) => Promise<void>;\n}\n","export abstract class ValidationService {\n  showError: (data: any) => string[];\n}\n","export abstract class VaultTimeoutService {\n  checkVaultTimeout: () => Promise<void>;\n  lock: (userId?: string) => Promise<void>;\n  logOut: (userId?: string) => Promise<void>;\n}\n","export abstract class VaultTimeoutSettingsService {\n  setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n  getVaultTimeout: (userId?: string) => Promise<number>;\n  isPinLockSet: () => Promise<[boolean, boolean]>;\n  isBiometricLockSet: () => Promise<boolean>;\n  clear: (userId?: string) => Promise<void>;\n}\n","export enum AuthenticationStatus {\n  LoggedOut = 0,\n  Locked = 1,\n  Unlocked = 2,\n}\n","export enum AuthenticationType {\n  Password = 0,\n  Sso = 1,\n  UserApi = 2,\n  Passwordless = 3,\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n  OrganizationUser_Revoked = 1511,\n  OrganizationUser_Restored = 1512,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n  Organization_SponsorshipsSynced = 1608,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n\nexport const DEFAULT_KDF_TYPE = KdfType.PBKDF2_SHA256;\nexport const DEFAULT_KDF_ITERATIONS = 100000;\nexport const SEND_KDF_ITERATIONS = 100000;\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","export enum OrganizationApiKeyType {\n  Default = 0,\n  BillingSync = 1,\n  Scim = 2,\n}\n","export enum OrganizationConnectionType {\n  CloudBillingSync = 1,\n  Scim = 2,\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1,\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","export enum PaymentMethodType {\n  Card = 0,\n  BankAccount = 1,\n  PayPal = 2,\n  BitPay = 3,\n  Credit = 4,\n  WireTransfer = 5,\n  AppleInApp = 6,\n  GoogleInApp = 7,\n  Check = 8,\n}\n","export enum PlanType {\n  Free = 0,\n  FamiliesAnnually2019 = 1,\n  TeamsMonthly2019 = 2,\n  TeamsAnnually2019 = 3,\n  EnterpriseMonthly2019 = 4,\n  EnterpriseAnnually2019 = 5,\n  Custom = 6,\n  FamiliesAnnually = 7,\n  TeamsMonthly = 8,\n  TeamsAnnually = 9,\n  EnterpriseMonthly = 10,\n  EnterpriseAnnually = 11,\n}\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","export enum ProductType {\n  Free = 0,\n  Families = 1,\n  Teams = 2,\n  Enterprise = 3,\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","// required to avoid linting errors when there are no flags\n/* eslint-disable @typescript-eslint/ban-types */\nexport type SharedFlags = {\n  multithreadDecryption: boolean;\n};\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable @typescript-eslint/ban-types */\nexport type SharedDevFlags = {};\n\nfunction getFlags<T>(envFlags: string | T): T {\n  if (typeof envFlags === \"string\") {\n    return JSON.parse(envFlags) as T;\n  } else {\n    return envFlags as T;\n  }\n}\n\n/**\n * Gets the value of a feature flag from environment.\n * All flags default to \"on\" (true).\n * Only use for shared code in `libs`, otherwise use the client-specific function.\n * @param flag The name of the feature flag to check\n * @returns The value of the flag\n */\nexport function flagEnabled<Flags extends SharedFlags>(flag: keyof Flags): boolean {\n  const flags = getFlags<Flags>(process.env.FLAGS);\n  return flags[flag] == null || !!flags[flag];\n}\n\n/**\n * Gets the value of a dev flag from environment.\n * Will always return false unless in development.\n * Only use for shared code in `libs`, otherwise use the client-specific function.\n * @param flag The name of the dev flag to check\n * @returns The value of the flag\n */\nexport function devFlagEnabled<DevFlags extends SharedDevFlags>(flag: keyof DevFlags): boolean {\n  if (process.env.ENV !== \"development\") {\n    return false;\n  }\n\n  const devFlags = getFlags<DevFlags>(process.env.DEV_FLAGS);\n  return devFlags[flag] == null || !!devFlags[flag];\n}\n\n/**\n * Gets the value of a dev flag from environment.\n * Will always return false unless in development.\n * @param flag The name of the dev flag to check\n * @returns The value of the flag\n * @throws Error if the flag is not enabled\n */\nexport function devFlagValue<DevFlags extends SharedDevFlags>(\n  flag: keyof DevFlags\n): DevFlags[keyof DevFlags] {\n  if (!devFlagEnabled(flag)) {\n    throw new Error(`This method should not be called, it is protected by a disabled dev flag.`);\n  }\n\n  const devFlags = getFlags<DevFlags>(process.env.DEV_FLAGS);\n  return devFlags[flag];\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../models/view/item.view\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  parent: T;\n  node: T;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, name: string, parent: T) {\n    this.parent = parent;\n    this.node = node;\n    this.node.name = name;\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/tree-node\";\n\nexport class ServiceUtils {\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: ITreeNodeObject,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end = partIndex === parts.length - 1;\n    const partName = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== parts[partIndex]) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node with the same name.\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i].node,\n        delimiter\n      );\n      return;\n    }\n\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      if (end) {\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","/* eslint-disable no-useless-escape */\nimport { getHostname, parse } from \"tldts\";\nimport { Merge } from \"type-fest\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\ndeclare global {\n  /* eslint-disable-next-line no-var */\n  var bitwardenContainerService: BitwardenContainerService;\n}\n\ninterface BitwardenContainerService {\n  getCryptoService: () => CryptoService;\n  getEncryptService: () => EncryptService;\n}\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: typeof global = null;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n  static readonly validHosts: string[] = [\"localhost\"];\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n\n    if (Utils.isNode) {\n      Utils.global = global;\n    } else if (Utils.isBrowser) {\n      Utils.global = window;\n    } else {\n      // If it's not browser or node then it must be a service worker\n      Utils.global = self;\n    }\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (str == null) {\n      return null;\n    }\n\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = Utils.global.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    if (str == null) {\n      return null;\n    }\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (buffer == null) {\n      return null;\n    }\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return Utils.global.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    if (Utils.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"about:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"file:\")) {\n      return null;\n    }\n\n    // Does uriString contain invalid characters\n    // TODO Needs to possibly be extended, although '!' is a reserved character\n    if (uriString.indexOf(\"!\") > 0) {\n      return null;\n    }\n\n    try {\n      const hostname = getHostname(uriString, { validHosts: this.validHosts });\n      if (hostname != null) {\n        return hostname;\n      }\n    } catch {\n      return null;\n    }\n    return null;\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (Utils.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"about:\")) {\n      return null;\n    }\n\n    try {\n      const parseResult = parse(uriString, { validHosts: this.validHosts });\n      if (parseResult != null && parseResult.hostname != null) {\n        if (parseResult.hostname === \"localhost\" || parseResult.isIp) {\n          return parseResult.hostname;\n        }\n\n        if (parseResult.domain != null) {\n          return parseResult.domain;\n        }\n        return null;\n      }\n    } catch {\n      return null;\n    }\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction<T>(\n    i18nService: I18nService,\n    prop: { [K in keyof T]: T[K] extends string ? K : never }[keyof T]\n  ): (a: T, b: T) => number {\n    return (a, b) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      // The `as unknown as string` here is unfortunate because typescript doesn't property understand that the return of T[prop] will be a string\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop] as unknown as string, b[prop] as unknown as string)\n        : (a[prop] as unknown as string).localeCompare(b[prop] as unknown as string);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static isPromise(obj: any): obj is Promise<unknown> {\n    return (\n      obj != undefined && typeof obj[\"then\"] === \"function\" && typeof obj[\"catch\"] === \"function\"\n    );\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (this.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  /**\n   * There are a few ways to calculate text color for contrast, this one seems to fit accessibility guidelines best.\n   * https://stackoverflow.com/a/3943023/6869691\n   *\n   * @param {string} bgColor\n   * @param {number} [threshold] see stackoverflow link above\n   * @param {boolean} [svgTextFill]\n   * Indicates if this method is performed on an SVG <text> 'fill' attribute (e.g. <text fill=\"black\"></text>).\n   * This check is necessary because the '!important' tag cannot be used in a 'fill' attribute.\n   */\n  static pickTextColorBasedOnBgColor(bgColor: string, threshold = 186, svgTextFill = false) {\n    const bgColorHexNums = bgColor.charAt(0) === \"#\" ? bgColor.substring(1, 7) : bgColor;\n    const r = parseInt(bgColorHexNums.substring(0, 2), 16); // hexToR\n    const g = parseInt(bgColorHexNums.substring(2, 4), 16); // hexToG\n    const b = parseInt(bgColorHexNums.substring(4, 6), 16); // hexToB\n    const blackColor = svgTextFill ? \"black\" : \"black !important\";\n    const whiteColor = svgTextFill ? \"white\" : \"white !important\";\n    return r * 0.299 + g * 0.587 + b * 0.114 > threshold ? blackColor : whiteColor;\n  }\n\n  static stringToColor(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = \"#\";\n    for (let i = 0; i < 3; i++) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return color;\n  }\n\n  /**\n   * @throws Will throw an error if the ContainerService has not been attached to the window object\n   */\n  static getContainerService(): BitwardenContainerService {\n    if (this.global.bitwardenContainerService == null) {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n    return this.global.bitwardenContainerService;\n  }\n\n  static validateHexColor(color: string) {\n    return /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(color);\n  }\n\n  /**\n   * Converts map to a Record<string, V> with the same data. Inverse of recordToMap\n   * Useful in toJSON methods, since Maps are not serializable\n   * @param map\n   * @returns\n   */\n  static mapToRecord<K extends string | number, V>(map: Map<K, V>): Record<string, V> {\n    if (map == null) {\n      return null;\n    }\n    if (!(map instanceof Map)) {\n      return map;\n    }\n    return Object.fromEntries(map);\n  }\n\n  /**\n   * Converts record to a Map<string, V> with the same data. Inverse of mapToRecord\n   * Useful in fromJSON methods, since Maps are not serializable\n   *\n   * Warning: If the record has string keys that are numbers, they will be converted to numbers in the map\n   * @param record\n   * @returns\n   */\n  static recordToMap<K extends string | number, V>(record: Record<K, V>): Map<K, V> {\n    if (record == null) {\n      return null;\n    } else if (record instanceof Map) {\n      return record;\n    }\n\n    const entries = Object.entries(record);\n    if (entries.length === 0) {\n      return new Map();\n    }\n\n    if (isNaN(Number(entries[0][0]))) {\n      return new Map(entries) as Map<K, V>;\n    } else {\n      return new Map(entries.map((e) => [Number(e[0]), e[1]])) as Map<K, V>;\n    }\n  }\n\n  /** Applies Object.assign, but converts the type nicely using Type-Fest Merge<Destination, Source> */\n  static merge<Destination, Source>(\n    destination: Destination,\n    source: Source\n  ): Merge<Destination, Source> {\n    return Object.assign(destination, source) as unknown as Merge<Destination, Source>;\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (typeof window !== \"undefined\") {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nimport { LoginUriApi } from \"./login-uri.api\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n  manageScim: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n    this.manageScim = this.getResponseProperty(\"ManageScim\");\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import { AttachmentResponse } from \"../response/attachment.response\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/card.api\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherResponse } from \"../response/cipher.response\";\n\nimport { AttachmentData } from \"./attachment.data\";\nimport { CardData } from \"./card.data\";\nimport { FieldData } from \"./field.data\";\nimport { IdentityData } from \"./identity.data\";\nimport { LoginData } from \"./login.data\";\nimport { PasswordHistoryData } from \"./password-history.data\";\nimport { SecureNoteData } from \"./secure-note.data\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  creationDate: string;\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.creationDate = response.creationDate;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collection.response\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldApi } from \"../api/field.api\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { FolderResponse } from \"../response/folder.response\";\n\nexport class FolderData {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse) {\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","import { IdentityApi } from \"../api/identity.api\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../api/login-uri.api\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { LoginApi } from \"../api/login.api\";\n\nimport { LoginUriData } from \"./login-uri.data\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/password-history.response\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyResponse } from \"../response/policy.response\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProfileProviderResponse } from \"../response/profile-provider.response\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../api/secure-note.api\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { SendFileApi } from \"../api/send-file.api\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/send-text.api\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendResponse } from \"../response/send.response\";\n\nimport { SendFileData } from \"./send-file.data\";\nimport { SendTextData } from \"./send-text.data\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport {\n  ServerConfigResponse,\n  ThirdPartyServerConfigResponse,\n  EnvironmentServerConfigResponse,\n} from \"../response/server-config.response\";\n\nexport class ServerConfigData {\n  version: string;\n  gitHash: string;\n  server?: ThirdPartyServerConfigData;\n  environment?: EnvironmentServerConfigData;\n  utcDate: string;\n\n  constructor(serverConfigResponse: Partial<ServerConfigResponse>) {\n    this.version = serverConfigResponse?.version;\n    this.gitHash = serverConfigResponse?.gitHash;\n    this.server = serverConfigResponse?.server\n      ? new ThirdPartyServerConfigData(serverConfigResponse.server)\n      : null;\n    this.utcDate = new Date().toISOString();\n    this.environment = serverConfigResponse?.environment\n      ? new EnvironmentServerConfigData(serverConfigResponse.environment)\n      : null;\n  }\n\n  static fromJSON(obj: Jsonify<ServerConfigData>): ServerConfigData {\n    return Object.assign(new ServerConfigData({}), obj, {\n      server: obj?.server ? ThirdPartyServerConfigData.fromJSON(obj.server) : null,\n      environment: obj?.environment ? EnvironmentServerConfigData.fromJSON(obj.environment) : null,\n    });\n  }\n}\n\nexport class ThirdPartyServerConfigData {\n  name: string;\n  url: string;\n\n  constructor(response: Partial<ThirdPartyServerConfigResponse>) {\n    this.name = response.name;\n    this.url = response.url;\n  }\n\n  static fromJSON(obj: Jsonify<ThirdPartyServerConfigData>): ThirdPartyServerConfigData {\n    return Object.assign(new ThirdPartyServerConfigData({}), obj);\n  }\n}\n\nexport class EnvironmentServerConfigData {\n  vault: string;\n  api: string;\n  identity: string;\n  notifications: string;\n  sso: string;\n\n  constructor(response: Partial<EnvironmentServerConfigResponse>) {\n    this.vault = response.vault;\n    this.api = response.api;\n    this.identity = response.identity;\n    this.notifications = response.notifications;\n    this.sso = response.sso;\n  }\n\n  static fromJSON(obj: Jsonify<EnvironmentServerConfigData>): EnvironmentServerConfigData {\n    return Object.assign(new EnvironmentServerConfigData({}), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { CipherData } from \"../data/cipher.data\";\nimport { CollectionData } from \"../data/collection.data\";\nimport { EncryptedOrganizationKeyData } from \"../data/encrypted-organization-key.data\";\nimport { EventData } from \"../data/event.data\";\nimport { FolderData } from \"../data/folder.data\";\nimport { OrganizationData } from \"../data/organization.data\";\nimport { PolicyData } from \"../data/policy.data\";\nimport { ProviderData } from \"../data/provider.data\";\nimport { SendData } from \"../data/send.data\";\nimport { ServerConfigData } from \"../data/server-config.data\";\nimport { CipherView } from \"../view/cipher.view\";\nimport { CollectionView } from \"../view/collection.view\";\nimport { SendView } from \"../view/send.view\";\n\nimport { EncString } from \"./enc-string\";\nimport { EnvironmentUrls } from \"./environment-urls\";\nimport { GeneratedPasswordHistory } from \"./generated-password-history\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n\n  toJSON() {\n    return {\n      encrypted: this.encrypted,\n      decrypted:\n        this.decrypted instanceof ArrayBuffer\n          ? Utils.fromBufferToByteString(this.decrypted)\n          : this.decrypted,\n    };\n  }\n\n  static fromJSON<TEncrypted, TDecrypted>(\n    obj: { encrypted?: Jsonify<TEncrypted>; decrypted?: string | Jsonify<TDecrypted> },\n    decryptedFromJson?: (decObj: Jsonify<TDecrypted> | string) => TDecrypted,\n    encryptedFromJson?: (encObj: Jsonify<TEncrypted>) => TEncrypted\n  ) {\n    if (obj == null) {\n      return null;\n    }\n\n    const pair = new EncryptionPair<TEncrypted, TDecrypted>();\n    if (obj?.encrypted != null) {\n      pair.encrypted = encryptedFromJson\n        ? encryptedFromJson(obj.encrypted)\n        : (obj.encrypted as TEncrypted);\n    }\n    if (obj?.decrypted != null) {\n      pair.decrypted = decryptedFromJson\n        ? decryptedFromJson(obj.decrypted)\n        : (obj.decrypted as TDecrypted);\n    }\n    return pair;\n  }\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\n// This is a temporary structure to handle migrated `DataEncryptionPair` to\n//  avoid needing a data migration at this stage. It should be replaced with\n//  proper data migrations when `DataEncryptionPair` is deprecated.\nexport class TemporaryDataEncryption<TEncrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders? = new TemporaryDataEncryption<FolderData>();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Record<string, SymmetricCryptoKey>\n  > = new EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Record<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Record<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Record<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  publicKey?: ArrayBuffer;\n  apiKeyClientSecret?: string;\n\n  toJSON() {\n    return Utils.merge(this, {\n      publicKey: Utils.fromBufferToByteString(this.publicKey),\n    });\n  }\n\n  static fromJSON(obj: DeepJsonify<AccountKeys>): AccountKeys {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(\n      new AccountKeys(),\n      { cryptoMasterKey: SymmetricCryptoKey.fromJSON(obj?.cryptoMasterKey) },\n      {\n        cryptoSymmetricKey: EncryptionPair.fromJSON(\n          obj?.cryptoSymmetricKey,\n          SymmetricCryptoKey.fromJSON\n        ),\n      },\n      { organizationKeys: AccountKeys.initRecordEncryptionPairsFromJSON(obj?.organizationKeys) },\n      { providerKeys: AccountKeys.initRecordEncryptionPairsFromJSON(obj?.providerKeys) },\n      {\n        privateKey: EncryptionPair.fromJSON<string, ArrayBuffer>(\n          obj?.privateKey,\n          (decObj: string) => Utils.fromByteStringToArray(decObj).buffer\n        ),\n      },\n      {\n        publicKey: Utils.fromByteStringToArray(obj?.publicKey)?.buffer,\n      }\n    );\n  }\n\n  static initRecordEncryptionPairsFromJSON(obj: any) {\n    return EncryptionPair.fromJSON(obj, (decObj: any) => {\n      if (obj == null) {\n        return null;\n      }\n\n      const record: Record<string, SymmetricCryptoKey> = {};\n      for (const id in decObj) {\n        record[id] = SymmetricCryptoKey.fromJSON(decObj[id]);\n      }\n      return record;\n    });\n  }\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  name?: string;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  hasPremiumFromOrganization?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n\n  static fromJSON(obj: Jsonify<AccountProfile>): AccountProfile {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountProfile(), obj);\n  }\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  collapsedGroupings?: string[];\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  usernameGenerationOptions?: any;\n  generatorOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: AccountSettingsSettings; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n  serverConfig?: ServerConfigData;\n  avatarColor?: string;\n\n  static fromJSON(obj: Jsonify<AccountSettings>): AccountSettings {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountSettings(), obj, {\n      environmentUrls: EnvironmentUrls.fromJSON(obj?.environmentUrls),\n      pinProtected: EncryptionPair.fromJSON<string, EncString>(\n        obj?.pinProtected,\n        EncString.fromJSON\n      ),\n      serverConfig: ServerConfigData.fromJSON(obj?.serverConfig),\n    });\n  }\n}\n\nexport type AccountSettingsSettings = {\n  equivalentDomains?: string[][];\n};\n\nexport class AccountTokens {\n  accessToken?: string;\n  refreshToken?: string;\n  securityStamp?: string;\n\n  static fromJSON(obj: Jsonify<AccountTokens>): AccountTokens {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountTokens(), obj);\n  }\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n\n  static fromJSON(json: Jsonify<Account>): Account {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new Account({}), json, {\n      keys: AccountKeys.fromJSON(json?.keys),\n      profile: AccountProfile.fromJSON(json?.profile),\n      settings: AccountSettings.fromJSON(json?.settings),\n      tokens: AccountTokens.fromJSON(json?.tokens),\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Utils } from \"../../misc/utils\";\nimport { AttachmentData } from \"../data/attachment.data\";\nimport { AttachmentView } from \"../view/attachment.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string; // Readable size, ex: \"4.2 KB\" or \"1.43 GB\"\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      view.key = await this.decryptAttachmentKey(orgId, encKey);\n    }\n\n    return view;\n  }\n\n  private async decryptAttachmentKey(orgId: string, encKey?: SymmetricCryptoKey) {\n    try {\n      if (encKey == null) {\n        encKey = await this.getKeyForDecryption(orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      const decValue = await encryptService.decryptToBytes(this.key, encKey);\n      return new SymmetricCryptoKey(decValue);\n    } catch (e) {\n      // TODO: error?\n    }\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Attachment>>): Attachment {\n    if (obj == null) {\n      return null;\n    }\n\n    const key = EncString.fromJSON(obj.key);\n    const fileName = EncString.fromJSON(obj.fileName);\n\n    return Object.assign(new Attachment(), obj, {\n      key,\n      fileName,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardData } from \"../data/card.data\";\nimport { CardView } from \"../view/card.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Card>>): Card {\n    if (obj == null) {\n      return null;\n    }\n\n    const cardholderName = EncString.fromJSON(obj.cardholderName);\n    const brand = EncString.fromJSON(obj.brand);\n    const number = EncString.fromJSON(obj.number);\n    const expMonth = EncString.fromJSON(obj.expMonth);\n    const expYear = EncString.fromJSON(obj.expYear);\n    const code = EncString.fromJSON(obj.code);\n    return Object.assign(new Card(), obj, {\n      cardholderName,\n      brand,\n      number,\n      expMonth,\n      expYear,\n      code,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { InitializerKey } from \"../../services/cryptography/initializer-key\";\nimport { CipherData } from \"../data/cipher.data\";\nimport { LocalData } from \"../data/local.data\";\nimport { CipherView } from \"../view/cipher.view\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secure-note\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Cipher extends Domain implements Decryptable<CipherView> {\n  readonly initializerKey = InitializerKey.Cipher;\n\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: LocalData;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  creationDate: Date;\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, localData: LocalData = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      [\"id\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.creationDate = obj.creationDate != null ? new Date(obj.creationDate) : null;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.creationDate = this.creationDate != null ? this.creationDate.toISOString() : null;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n\n  static fromJSON(obj: Jsonify<Cipher>) {\n    if (obj == null) {\n      return null;\n    }\n\n    const domain = new Cipher();\n    const name = EncString.fromJSON(obj.name);\n    const notes = EncString.fromJSON(obj.notes);\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => Attachment.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => Field.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => Password.fromJSON(ph));\n\n    Object.assign(domain, obj, {\n      name,\n      notes,\n      revisionDate,\n      deletedDate,\n      attachments,\n      fields,\n      passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        domain.card = Card.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = Identity.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        domain.login = Login.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNote.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return domain;\n  }\n}\n","import { CollectionData } from \"../data/collection.data\";\nimport { CollectionView } from \"../view/collection.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Utils } from \"../../misc/utils\";\n\nconst ENC_TYPE_LENGTH = 1;\nconst IV_LENGTH = 16;\nconst MAC_LENGTH = 32;\nconst MIN_DATA_LENGTH = 1;\n\nexport class EncArrayBuffer implements IEncrypted {\n  readonly encryptionType: EncryptionType = null;\n  readonly dataBytes: ArrayBuffer = null;\n  readonly ivBytes: ArrayBuffer = null;\n  readonly macBytes: ArrayBuffer = null;\n\n  constructor(readonly buffer: ArrayBuffer) {\n    const encBytes = new Uint8Array(buffer);\n    const encType = encBytes[0];\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.macBytes = encBytes.slice(\n          ENC_TYPE_LENGTH + IV_LENGTH,\n          ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH\n        ).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH).buffer;\n        break;\n      }\n      case EncryptionType.AesCbc256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        break;\n      }\n      default:\n        this.throwDecryptionError();\n    }\n\n    this.encryptionType = encType;\n  }\n\n  private throwDecryptionError() {\n    throw new Error(\n      \"Error parsing encrypted ArrayBuffer: data is corrupted or has an invalid format.\"\n    );\n  }\n\n  static async fromResponse(response: {\n    arrayBuffer: () => Promise<ArrayBuffer>;\n  }): Promise<EncArrayBuffer> {\n    const buffer = await response.arrayBuffer();\n    if (buffer == null) {\n      throw new Error(\"Cannot create EncArrayBuffer from Response - Response is empty\");\n    }\n    return new EncArrayBuffer(buffer);\n  }\n\n  static fromB64(b64: string) {\n    const buffer = Utils.fromB64ToArray(b64).buffer;\n    return new EncArrayBuffer(buffer);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncString implements IEncrypted {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      this.initFromData(encryptedStringOrType as EncryptionType, data, iv, mac);\n    } else {\n      this.initFromEncryptedString(encryptedStringOrType as string);\n    }\n  }\n\n  get ivBytes(): ArrayBuffer {\n    return this.iv == null ? null : Utils.fromB64ToArray(this.iv).buffer;\n  }\n\n  get macBytes(): ArrayBuffer {\n    return this.mac == null ? null : Utils.fromB64ToArray(this.mac).buffer;\n  }\n\n  get dataBytes(): ArrayBuffer {\n    return this.data == null ? null : Utils.fromB64ToArray(this.data).buffer;\n  }\n\n  toJSON() {\n    return this.encryptedString;\n  }\n\n  static fromJSON(obj: Jsonify<EncString>): EncString {\n    if (obj == null) {\n      return null;\n    }\n\n    return new EncString(obj);\n  }\n\n  private initFromData(encType: EncryptionType, data: string, iv: string, mac: string) {\n    if (iv != null) {\n      this.encryptedString = encType + \".\" + iv + \"|\" + data;\n    } else {\n      this.encryptedString = encType + \".\" + data;\n    }\n\n    // mac\n    if (mac != null) {\n      this.encryptedString += \"|\" + mac;\n    }\n\n    this.encryptionType = encType;\n    this.data = data;\n    this.iv = iv;\n    this.mac = mac;\n  }\n\n  private initFromEncryptedString(encryptedString: string) {\n    this.encryptedString = encryptedString as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const { encType, encPieces } = this.parseEncryptedString(this.encryptedString);\n    this.encryptionType = encType;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  private parseEncryptedString(encryptedString: string): {\n    encType: EncryptionType;\n    encPieces: string[];\n  } {\n    const headerPieces = encryptedString.split(\".\");\n    let encType: EncryptionType;\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = encryptedString.split(\"|\");\n      encType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    return {\n      encType,\n      encPieces,\n    };\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    try {\n      if (key == null) {\n        key = await this.getKeyForDecryption(orgId);\n      }\n      if (key == null) {\n        throw new Error(\"No key to decrypt EncString with orgId \" + orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      this.decryptedValue = await encryptService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nexport class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n\n  static fromJSON(obj: Jsonify<EnvironmentUrls>): EnvironmentUrls {\n    return Object.assign(new EnvironmentUrls(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldData } from \"../data/field.data\";\nimport { FieldView } from \"../view/field.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Field>>): Field {\n    if (obj == null) {\n      return null;\n    }\n\n    const name = EncString.fromJSON(obj.name);\n    const value = EncString.fromJSON(obj.value);\n\n    return Object.assign(new Field(), obj, {\n      name,\n      value,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FolderData } from \"../data/folder.data\";\nimport { FolderView } from \"../view/folder.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n\n  static fromJSON(obj: Jsonify<Folder>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new Folder(), obj, { name: EncString.fromJSON(obj.name), revisionDate });\n  }\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IdentityData } from \"../data/identity.data\";\nimport { IdentityView } from \"../view/identity.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n\n  static fromJSON(obj: Jsonify<Identity>): Identity {\n    if (obj == null) {\n      return null;\n    }\n\n    const title = EncString.fromJSON(obj.title);\n    const firstName = EncString.fromJSON(obj.firstName);\n    const middleName = EncString.fromJSON(obj.middleName);\n    const lastName = EncString.fromJSON(obj.lastName);\n    const address1 = EncString.fromJSON(obj.address1);\n    const address2 = EncString.fromJSON(obj.address2);\n    const address3 = EncString.fromJSON(obj.address3);\n    const city = EncString.fromJSON(obj.city);\n    const state = EncString.fromJSON(obj.state);\n    const postalCode = EncString.fromJSON(obj.postalCode);\n    const country = EncString.fromJSON(obj.country);\n    const company = EncString.fromJSON(obj.company);\n    const email = EncString.fromJSON(obj.email);\n    const phone = EncString.fromJSON(obj.phone);\n    const ssn = EncString.fromJSON(obj.ssn);\n    const username = EncString.fromJSON(obj.username);\n    const passportNumber = EncString.fromJSON(obj.passportNumber);\n    const licenseNumber = EncString.fromJSON(obj.licenseNumber);\n\n    return Object.assign(new Identity(), obj, {\n      title,\n      firstName,\n      middleName,\n      lastName,\n      address1,\n      address2,\n      address3,\n      city,\n      state,\n      postalCode,\n      country,\n      company,\n      email,\n      phone,\n      ssn,\n      username,\n      passportNumber,\n      licenseNumber,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriData } from \"../data/login-uri.data\";\nimport { LoginUriView } from \"../view/login-uri.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n        match: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n\n  static fromJSON(obj: Jsonify<LoginUri>): LoginUri {\n    if (obj == null) {\n      return null;\n    }\n\n    const uri = EncString.fromJSON(obj.uri);\n    return Object.assign(new LoginUri(), obj, {\n      uri,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LoginData } from \"../data/login.data\";\nimport { LoginView } from \"../view/login.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { LoginUri } from \"./login-uri\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Login>>): Login {\n    if (obj == null) {\n      return null;\n    }\n\n    const username = EncString.fromJSON(obj.username);\n    const password = EncString.fromJSON(obj.password);\n    const totp = EncString.fromJSON(obj.totp);\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUri.fromJSON(uri));\n\n    return Object.assign(new Login(), obj, {\n      username,\n      password,\n      totp,\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import Domain from \"./domain-base\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity = 0;\n  minLength = 0;\n  requireUpper = false;\n  requireLower = false;\n  requireNumbers = false;\n  requireSpecial = false;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\nimport { OrganizationData } from \"../data/organization.data\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useCustomPermissions: boolean;\n  useResetPassword: boolean;\n  useSecretsManager: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useScim = obj.useScim;\n    this.useCustomPermissions = obj.useCustomPermissions;\n    this.useResetPassword = obj.useResetPassword;\n    this.useSecretsManager = obj.useSecretsManager;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = obj.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = obj.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = obj.familySponsorshipToDelete;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return (this.isAdmin || this.permissions.accessEventLogs) && this.useEvents;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return (this.isAdmin || this.permissions.manageGroups) && this.useGroups;\n  }\n\n  get canManageSso() {\n    return (this.isAdmin || this.permissions.manageSso) && this.useSso;\n  }\n\n  get canManageScim() {\n    return (this.isAdmin || this.permissions.manageScim) && this.useScim;\n  }\n\n  get canManagePolicies() {\n    return (this.isAdmin || this.permissions.managePolicies) && this.usePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n\n  get canManageBilling() {\n    return this.isOwner && (this.isProviderUser || !this.hasProvider);\n  }\n\n  get hasProvider() {\n    return this.providerId != null || this.providerName != null;\n  }\n\n  get canAccessSecretsManager() {\n    return this.useSecretsManager;\n  }\n\n  static fromJSON(json: Jsonify<Organization>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new Organization(), json, {\n      familySponsorshipLastSyncDate: new Date(json.familySponsorshipLastSyncDate),\n      familySponsorshipValidUntil: new Date(json.familySponsorshipValidUntil),\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { PasswordHistoryData } from \"../data/password-history.data\";\nimport { PasswordHistoryView } from \"../view/password-history.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(this, obj, {\n      password: null,\n    });\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Password>>): Password {\n    if (obj == null) {\n      return null;\n    }\n\n    const password = EncString.fromJSON(obj.password);\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new Password(), obj, {\n      password,\n      lastUsedDate,\n    });\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../data/policy.data\";\n\nimport Domain from \"./domain-base\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteData } from \"../data/secure-note.data\";\nimport { SecureNoteView } from \"../view/secure-note.view\";\n\nimport Domain from \"./domain-base\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n\n  static fromJSON(obj: Jsonify<SecureNote>): SecureNote {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new SecureNote(), obj);\n  }\n}\n","import { SendFileData } from \"../data/send-file.data\";\nimport { SendFileView } from \"../view/send-file.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import { SendTextData } from \"../data/send-text.data\";\nimport { SendTextView } from \"../view/send-text.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n\n  toJSON() {\n    // The whole object is constructed from the initial key, so just store the B64 key\n    return { keyB64: this.keyB64 };\n  }\n\n  static fromJSON(obj: Jsonify<SymmetricCryptoKey>): SymmetricCryptoKey {\n    if (obj == null) {\n      return null;\n    }\n\n    const arrayBuffer = Utils.fromB64ToArray(obj.keyB64).buffer;\n    return new SymmetricCryptoKey(arrayBuffer);\n  }\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n  zoomFactor?: number;\n}\n","import { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/enc-string\";\nimport { CardView } from \"../view/card.view\";\n\nexport class CardExport {\n  static template(): CardExport {\n    const req = new CardExport();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: CardExport, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: CardExport, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { EncString } from \"../domain/enc-string\";\nimport { Field as FieldDomain } from \"../domain/field\";\nimport { FieldView } from \"../view/field.view\";\n\nexport class FieldExport {\n  static template(): FieldExport {\n    const req = new FieldExport();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: FieldExport, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: FieldExport, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { EncString } from \"../domain/enc-string\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\nimport { IdentityView } from \"../view/identity.view\";\n\nexport class IdentityExport {\n  static template(): IdentityExport {\n    const req = new IdentityExport();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: IdentityExport, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: IdentityExport, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { EncString } from \"../domain/enc-string\";\nimport { LoginUri as LoginUriDomain } from \"../domain/login-uri\";\nimport { LoginUriView } from \"../view/login-uri.view\";\n\nexport class LoginUriExport {\n  static template(): LoginUriExport {\n    const req = new LoginUriExport();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUriExport, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUriExport, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { EncString } from \"../domain/enc-string\";\nimport { Login as LoginDomain } from \"../domain/login\";\nimport { LoginView } from \"../view/login.view\";\n\nimport { LoginUriExport } from \"./login-uri.export\";\n\nexport class LoginExport {\n  static template(): LoginExport {\n    const req = new LoginExport();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: LoginExport, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUriExport.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: LoginExport, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUriExport.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUriExport[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote as SecureNoteDomain } from \"../domain/secure-note\";\nimport { SecureNoteView } from \"../view/secure-note.view\";\n\nexport class SecureNoteExport {\n  static template(): SecureNoteExport {\n    const req = new SecureNoteExport();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNoteExport, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNoteExport, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/enc-string\";\nimport { CipherView } from \"../view/cipher.view\";\n\nimport { CardExport } from \"./card.export\";\nimport { FieldExport } from \"./field.export\";\nimport { IdentityExport } from \"./identity.export\";\nimport { LoginExport } from \"./login.export\";\nimport { SecureNoteExport } from \"./secure-note.export\";\n\nexport class CipherExport {\n  static template(): CipherExport {\n    const req = new CipherExport();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: CipherExport, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => FieldExport.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = LoginExport.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteExport.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = CardExport.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityExport.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: CipherExport, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => FieldExport.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = LoginExport.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNoteExport.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = CardExport.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = IdentityExport.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: FieldExport[];\n  login: LoginExport;\n  secureNote: SecureNoteExport;\n  card: CardExport;\n  identity: IdentityExport;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      } else {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new LoginExport(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteExport(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardExport(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityExport(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { CipherView } from \"../view/cipher.view\";\n\nimport { CipherExport } from \"./cipher.export\";\n\nexport class CipherWithIdExport extends CipherExport {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/enc-string\";\nimport { CollectionView } from \"../view/collection.view\";\n\nexport class CollectionExport {\n  static template(): CollectionExport {\n    const req = new CollectionExport();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: CollectionExport, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: CollectionExport, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { CollectionView } from \"../view/collection.view\";\n\nimport { CollectionExport } from \"./collection.export\";\n\nexport class CollectionWithIdExport extends CollectionExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EncString } from \"../domain/enc-string\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folder.view\";\n\nexport class FolderExport {\n  static template(): FolderExport {\n    const req = new FolderExport();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: FolderExport, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: FolderExport, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folder.view\";\n\nimport { FolderExport } from \"./folder.export\";\n\nexport class FolderWithIdExport extends FolderExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipher.request\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipher.request\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardApi } from \"../api/card.api\";\nimport { FieldApi } from \"../api/field.api\";\nimport { IdentityApi } from \"../api/identity.api\";\nimport { LoginUriApi } from \"../api/login-uri.api\";\nimport { LoginApi } from \"../api/login.api\";\nimport { SecureNoteApi } from \"../api/secure-note.api\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentRequest } from \"./attachment.request\";\nimport { PasswordHistoryRequest } from \"./password-history.request\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { Collection } from \"../domain/collection\";\n\nimport { SelectionReadOnlyRequest } from \"./selection-read-only.request\";\n\nexport class CollectionRequest {\n  name: string;\n  externalId: string;\n  groups: SelectionReadOnlyRequest[] = [];\n\n  constructor(collection?: Collection) {\n    if (collection == null) {\n      return;\n    }\n    this.name = collection.name ? collection.name.encryptedString : null;\n    this.externalId = collection.externalId;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","import { TwoFactorProviderType } from \"../../../enums/twoFactorProviderType\";\n\nexport class TokenTwoFactorRequest {\n  constructor(\n    public provider: TwoFactorProviderType = null,\n    public token: string = null,\n    public remember: boolean = false\n  ) {}\n}\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class OrganizationApiKeyRequest extends SecretVerificationRequest {\n  type: OrganizationApiKeyType = OrganizationApiKeyType.Default;\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\n\nimport { BillingSyncConfigRequest } from \"./billing-sync-config.request\";\nimport { ScimConfigRequest } from \"./scim-config.request\";\n\n/**API request config types for OrganizationConnectionRequest */\nexport type OrganizationConnectionRequestConfigs = BillingSyncConfigRequest | ScimConfigRequest;\n\nexport class OrganizationConnectionRequest {\n  constructor(\n    public organizationId: string,\n    public type: OrganizationConnectionType,\n    public enabled: boolean,\n    public config: OrganizationConnectionRequestConfigs\n  ) {}\n}\n","import { KeysRequest } from \"./keys.request\";\n\nexport class OrganizationKeysRequest extends KeysRequest {\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    super(publicKey, encryptedPrivateKey);\n  }\n}\n","import { TaxInfoUpdateRequest } from \"./tax-info-update.request\";\n\nexport class OrganizationTaxInfoUpdateRequest extends TaxInfoUpdateRequest {\n  taxId: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n  authRequestAccessCode: string;\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/send-file.api\";\nimport { SendTextApi } from \"../api/send-text.api\";\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","export class TaxInfoUpdateRequest {\n  country: string;\n  postalCode: string;\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n  deviceIdentifier: string;\n  authRequestId: string;\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/card.api\";\nimport { FieldApi } from \"../api/field.api\";\nimport { IdentityApi } from \"../api/identity.api\";\nimport { LoginApi } from \"../api/login.api\";\nimport { SecureNoteApi } from \"../api/secure-note.api\";\n\nimport { AttachmentResponse } from \"./attachment.response\";\nimport { BaseResponse } from \"./base.response\";\nimport { PasswordHistoryResponse } from \"./password-history.response\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  creationDate: string;\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (status === 429) {\n      this.message = \"Rate limit exceeded. Try again later.\";\n    } else if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetric-crypto-key\";\n\nimport { View } from \"./view\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<AttachmentView>>): AttachmentView {\n    const key = obj.key == null ? null : SymmetricCryptoKey.fromJSON(obj.key);\n    return Object.assign(new AttachmentView(), obj, { key: key });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CardView>>): CardView {\n    return Object.assign(new CardView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { InitializerKey } from \"../../services/cryptography/initializer-key\";\nimport { LocalData } from \"../data/local.data\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachment.view\";\nimport { CardView } from \"./card.view\";\nimport { FieldView } from \"./field.view\";\nimport { IdentityView } from \"./identity.view\";\nimport { LoginView } from \"./login.view\";\nimport { PasswordHistoryView } from \"./password-history.view\";\nimport { SecureNoteView } from \"./secure-note.view\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View, InitializerMetadata {\n  readonly initializerKey = InitializerKey.CipherView;\n\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: LocalData;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  creationDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.creationDate = c.creationDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CipherView>>): CipherView {\n    const view = new CipherView();\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => AttachmentView.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => FieldView.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => PasswordHistoryView.fromJSON(ph));\n\n    Object.assign(view, obj, {\n      revisionDate: revisionDate,\n      deletedDate: deletedDate,\n      attachments: attachments,\n      fields: fields,\n      passwordHistory: passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        view.card = CardView.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityView.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        view.login = LoginView.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteView.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return view;\n  }\n}\n","import { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/tree-node\";\nimport { CollectionGroupDetailsResponse } from \"../response/collection.response\";\n\nimport { View } from \"./view\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionGroupDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Field } from \"../domain/field\";\n\nimport { View } from \"./view\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<FieldView>>): FieldView {\n    return Object.assign(new FieldView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/tree-node\";\n\nimport { View } from \"./view\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n\n  static fromJSON(obj: Jsonify<FolderView>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new FolderView(), obj, { revisionDate });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<IdentityView>>): IdentityView {\n    return Object.assign(new IdentityView(), obj);\n  }\n}\n","import { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { View } from \"./view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { LoginUri } from \"../domain/login-uri\";\n\nimport { View } from \"./view\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && !Utils.isNullOrWhitespace(Utils.getDomain(this.uri))))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && !Utils.isNullOrWhitespace(Utils.getDomain(this.uri))\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginUriView>>): LoginUriView {\n    return Object.assign(new LoginUriView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./item.view\";\nimport { LoginUriView } from \"./login-uri.view\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginView>>): LoginView {\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUriView.fromJSON(uri));\n\n    return Object.assign(new LoginView(), obj, {\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Password } from \"../domain/password\";\n\nimport { View } from \"./view\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<PasswordHistoryView>>): PasswordHistoryView {\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new PasswordHistoryView(), obj, {\n      lastUsedDate: lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secure-note\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<SecureNoteView>>): SecureNoteView {\n    return Object.assign(new SecureNoteView(), obj);\n  }\n}\n","import { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { SendFile } from \"../domain/send-file\";\n\nimport { View } from \"./view\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n\n  static fromJSON(json: DeepJsonify<SendFileView>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new SendFileView(), json);\n  }\n}\n","import { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { SendText } from \"../domain/send-text\";\n\nimport { View } from \"./view\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n\n  static fromJSON(json: DeepJsonify<SendTextView>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new SendTextView(), json);\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetric-crypto-key\";\n\nimport { SendFileView } from \"./send-file.view\";\nimport { SendTextView } from \"./send-text.view\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled = false;\n  hideEmail = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n\n  toJSON() {\n    return Utils.merge(this, {\n      key: Utils.fromBufferToB64(this.key),\n    });\n  }\n\n  static fromJSON(json: DeepJsonify<SendView>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new SendView(), json, {\n      key: Utils.fromB64ToArray(json.key)?.buffer,\n      cryptoKey: SymmetricCryptoKey.fromJSON(json.cryptoKey),\n      text: SendTextView.fromJSON(json.text),\n      file: SendFileView.fromJSON(json.file),\n      revisionDate: json.revisionDate == null ? null : new Date(json.revisionDate),\n      deletionDate: json.deletionDate == null ? null : new Date(json.deletionDate),\n      expirationDate: json.expirationDate == null ? null : new Date(json.expirationDate),\n    });\n  }\n}\n","import { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","export enum InitializerKey {\n  Cipher = 0,\n  CipherView = 1,\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Account } from \"./account\";\nimport { GlobalState } from \"./global-state\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n\n  // TODO, make Jsonify<State,TGlobalState,TAccount> work. It currently doesn't because Globals doesn't implement Jsonify.\n  static fromJSON<TGlobalState extends GlobalState, TAccount extends Account>(\n    obj: any,\n    accountDeserializer: (json: Jsonify<TAccount>) => TAccount\n  ): State<TGlobalState, TAccount> {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new State(null), obj, {\n      accounts: State.buildAccountMapFromJSON(obj?.accounts, accountDeserializer),\n    });\n  }\n\n  private static buildAccountMapFromJSON<TAccount extends Account>(\n    jsonAccounts: { [userId: string]: Jsonify<TAccount> },\n    accountDeserializer: (json: Jsonify<TAccount>) => TAccount\n  ) {\n    if (!jsonAccounts) {\n      return {};\n    }\n    const accounts: { [userId: string]: TAccount } = {};\n    for (const userId in jsonAccounts) {\n      accounts[userId] = accountDeserializer(jsonAccounts[userId]);\n    }\n    return accounts;\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\nimport { Jsonify } from \"type-fest\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport {\n  MemoryStorageServiceInterface,\n  AbstractStorageService,\n} from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encrypted-organization-key.data\";\nimport { EventData } from \"../models/data/event.data\";\nimport { FolderData } from \"../models/data/folder.data\";\nimport { LocalData } from \"../models/data/local.data\";\nimport { OrganizationData } from \"../models/data/organization.data\";\nimport { PolicyData } from \"../models/data/policy.data\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { SendData } from \"../models/data/send.data\";\nimport { ServerConfigData } from \"../models/data/server-config.data\";\nimport {\n  Account,\n  AccountData,\n  AccountSettings,\n  AccountSettingsSettings,\n} from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { GlobalState } from \"../models/domain/global-state\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storage-options\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { WindowState } from \"../models/domain/window-state\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { CollectionView } from \"../models/view/collection.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nconst keys = {\n  state: \"state\",\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nconst DDG_SHARED_KEY = \"DuckDuckGoSharedKey\";\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  protected accountsSubject = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  accounts$ = this.accountsSubject.asObservable();\n\n  protected activeAccountSubject = new BehaviorSubject<string | null>(null);\n  activeAccount$ = this.activeAccountSubject.asObservable();\n\n  protected activeAccountUnlockedSubject = new BehaviorSubject<boolean>(false);\n  activeAccountUnlocked$ = this.activeAccountUnlockedSubject.asObservable();\n\n  private hasBeenInited = false;\n  private isRecoveredSession = false;\n\n  protected accountDiskCache = new BehaviorSubject<Record<string, TAccount>>({});\n\n  // default account serializer, must be overridden by child class\n  protected accountDeserializer = Account.fromJSON as (json: Jsonify<TAccount>) => TAccount;\n\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected memoryStorageService: AbstractStorageService & MemoryStorageServiceInterface,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>,\n    protected useAccountCache: boolean = true\n  ) {\n    // If the account gets changed, verify the new account is unlocked\n    this.activeAccountSubject\n      .pipe(\n        concatMap(async (userId) => {\n          if (userId == null && this.activeAccountUnlockedSubject.getValue() == false) {\n            return;\n          } else if (userId == null) {\n            this.activeAccountUnlockedSubject.next(false);\n          }\n\n          // FIXME: This should be refactored into AuthService or a similar service,\n          //  as checking for the existance of the crypto key is a low level\n          //  implementation detail.\n          this.activeAccountUnlockedSubject.next((await this.getCryptoMasterKey()) != null);\n        })\n      )\n      .subscribe();\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.state().then(async (state) => {\n      if (state == null) {\n        await this.setState(new State<TGlobalState, TAccount>(this.createGlobals()));\n      } else {\n        this.isRecoveredSession = true;\n      }\n    });\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    if (this.isRecoveredSession) {\n      return;\n    }\n\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts =\n        (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n      for (const i in state.authenticatedAccounts) {\n        if (i != null) {\n          await this.syncAccountFromDisk(state.authenticatedAccounts[i]);\n        }\n      }\n      const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n      if (storedActiveUser != null) {\n        state.activeUserId = storedActiveUser;\n      }\n      await this.pushAccounts();\n      this.activeAccountSubject.next(state.activeUserId);\n\n      return state;\n    });\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    await this.updateState(async (state) => {\n      if (state.accounts == null) {\n        state.accounts = {};\n      }\n      state.accounts[userId] = this.createAccount();\n      const diskAccount = await this.getAccountFromDisk({ userId: userId });\n      state.accounts[userId].profile = diskAccount.profile;\n      return state;\n    });\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts.push(account.profile.userId);\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n      state.accounts[account.profile.userId] = account;\n      return state;\n    });\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccountSubject.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    await this.updateState(async (state) => {\n      state.activeUserId = userId;\n      await this.storageService.save(keys.activeUserId, userId);\n      this.activeAccountSubject.next(state.activeUserId);\n      return state;\n    });\n\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === (await this.state())?.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? false\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? true\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    return (\n      (await this.getHasPremiumPersonally(options)) ||\n      (await this.getHasPremiumFromOrganization(options))\n    );\n  }\n\n  async getHasPremiumPersonally(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.profile?.hasPremiumPersonally;\n  }\n\n  async setHasPremiumPersonally(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumPersonally = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getHasPremiumFromOrganization(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    if (account.profile?.hasPremiumFromOrganization) {\n      return true;\n    }\n\n    // TODO: older server versions won't send the hasPremiumFromOrganization flag, so we're keeping the old logic\n    // for backwards compatibility. It can be removed after everyone has upgraded.\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async setHasPremiumFromOrganization(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumFromOrganization = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<string[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: string[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.collapsedGroupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n\n    if (options.userId == this.activeAccountSubject.getValue()) {\n      const nextValue = value != null;\n\n      // Avoid emitting if we are already unlocked\n      if (this.activeAccountUnlockedSubject.getValue() != nextValue) {\n        this.activeAccountUnlockedSubject.next(nextValue);\n      }\n    }\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.autoKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.autoKey, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.masterKey, value, options);\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.biometricKey, value, options);\n  }\n\n  @withPrototypeForArrayMembers(CipherView, CipherView.fromJSON)\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(CollectionView)\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return Utils.recordToMap(account?.keys?.organizationKeys?.decrypted);\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.organizationKeys.decrypted = Utils.mapToRecord(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(Policy)\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.privateKey.decrypted;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.privateKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return Utils.recordToMap(account?.keys?.providerKeys?.decrypted);\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.providerKeys.decrypted = Utils.mapToRecord(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(SendView)\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDuckDuckGoSharedKey(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(DDG_SHARED_KEY, options);\n  }\n\n  async setDuckDuckGoSharedKey(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    value == null\n      ? await this.secureStorageService.remove(DDG_SHARED_KEY, options)\n      : await this.secureStorageService.save(DDG_SHARED_KEY, value, options);\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.email = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableDuckDuckGoBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableDuckDuckGoBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableDuckDuckGoBrowserIntegration(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableDuckDuckGoBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CipherData)\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CollectionData)\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(FolderData)\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<{ [orgId: string]: EncryptedOrganizationKeyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(PolicyData)\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(SendData)\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if ((await this.state())?.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(EventData)\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<{ [cipherId: string]: LocalData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n\n  async setLocalData(\n    value: { [cipherId: string]: LocalData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUsernameGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.usernameGenerationOptions;\n  }\n\n  async setUsernameGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.usernameGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getGeneratorOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.generatorOptions;\n  }\n\n  async setGeneratorOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.generatorOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(ProviderData)\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    const keys = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys;\n    return keys?.publicKey;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.publicKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getSettings(options?: StorageOptions): Promise<AccountSettingsSettings> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: AccountSettingsSettings, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async setServerConfig(value: ServerConfigData, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.serverConfig = value;\n    return await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getServerConfig(options: StorageOptions): Promise<ServerConfigData> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.serverConfig;\n  }\n\n  async getAvatarColor(options?: StorageOptions): Promise<string | null | undefined> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.avatarColor;\n  }\n\n  async setAvatarColor(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.avatarColor = value;\n    return await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = await this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected async getGlobalsFromMemory(): Promise<TGlobalState> {\n    return (await this.state()).globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected async saveGlobalsToMemory(globals: TGlobalState): Promise<void> {\n    await this.updateState(async (state) => {\n      state.globals = globals;\n      return state;\n    });\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = await this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async getAccountFromMemory(options: StorageOptions): Promise<TAccount> {\n    return await this.state().then(async (state) => {\n      if (state.accounts == null) {\n        return null;\n      }\n      return state.accounts[await this.getUserIdFromMemory(options)];\n    });\n  }\n\n  protected async getUserIdFromMemory(options: StorageOptions): Promise<string> {\n    return await this.state().then((state) => {\n      return options?.userId != null\n        ? state.accounts[options.userId]?.profile?.userId\n        : state.activeUserId;\n    });\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && (await this.state())?.activeUserId == null) {\n      return null;\n    }\n\n    if (this.useAccountCache) {\n      const cachedAccount = this.accountDiskCache.value[options.userId];\n      if (cachedAccount != null) {\n        return cachedAccount;\n      }\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    this.setDiskCache(options.userId, account);\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n\n    this.deleteDiskCache(options.userId);\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      await this.updateState((state) => {\n        return new Promise((resolve) => {\n          state.accounts[account.profile.userId] = account;\n          resolve(state);\n        });\n      });\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<AccountSettings>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    await this.state().then((state) => {\n      if (state.accounts == null || Object.keys(state.accounts).length < 1) {\n        this.accountsSubject.next({});\n        return;\n      }\n\n      this.accountsSubject.next(state.accounts);\n    });\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected async defaultInMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Memory,\n      userId: (await this.state()).activeUserId,\n    };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: (await this.state())?.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected async removeAccountFromMemory(userId: string = null): Promise<void> {\n    await this.updateState(async (state) => {\n      userId = userId ?? state.activeUserId;\n      delete state.accounts[userId];\n\n      this.deleteDiskCache(userId);\n\n      return state;\n    });\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in (await this.state())?.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        await this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected async clearDecryptedDataForActiveUser(): Promise<void> {\n    await this.updateState(async (state) => {\n      const userId = state?.activeUserId;\n      if (userId != null && state?.accounts[userId]?.data != null) {\n        state.accounts[userId].data = new AccountData();\n      }\n\n      return state;\n    });\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string): Promise<void> {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts = state.authenticatedAccounts.filter((id) => id !== userId);\n\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n\n      return state;\n    });\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    const accounts = (await this.state())?.accounts;\n    if (accounts == null || Object.keys(accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? await this.defaultInMemoryOptions()\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n\n  private async saveSecureStorageKey(key: string, value: string, options?: StorageOptions) {\n    return value == null\n      ? await this.secureStorageService.remove(`${options.userId}${key}`, options)\n      : await this.secureStorageService.save(`${options.userId}${key}`, value, options);\n  }\n\n  protected async state(): Promise<State<TGlobalState, TAccount>> {\n    const state = await this.memoryStorageService.get<State<TGlobalState, TAccount>>(keys.state, {\n      deserializer: (s) => State.fromJSON(s, this.accountDeserializer),\n    });\n    return state;\n  }\n\n  private async setState(state: State<TGlobalState, TAccount>): Promise<void> {\n    await this.memoryStorageService.save(keys.state, state);\n  }\n\n  protected async updateState(\n    stateUpdater: (state: State<TGlobalState, TAccount>) => Promise<State<TGlobalState, TAccount>>\n  ) {\n    await this.state().then(async (state) => {\n      const updatedState = await stateUpdater(state);\n      if (updatedState == null) {\n        throw new Error(\"Attempted to update state to null value\");\n      }\n\n      await this.setState(updatedState);\n    });\n  }\n\n  private setDiskCache(key: string, value: TAccount, options?: StorageOptions) {\n    if (this.useAccountCache) {\n      this.accountDiskCache.value[key] = value;\n      this.accountDiskCache.next(this.accountDiskCache.value);\n    }\n  }\n\n  private deleteDiskCache(key: string) {\n    if (this.useAccountCache) {\n      delete this.accountDiskCache.value[key];\n      this.accountDiskCache.next(this.accountDiskCache.value);\n    }\n  }\n}\n\nfunction withPrototypeForArrayMembers<T>(\n  memberConstructor: new (...args: any[]) => T,\n  memberConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T[]> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<any[]> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else if (!(result instanceof Array)) {\n            throw new Error(\n              `Attempted to retrieve non array type from state as an array for method ${String(\n                propertyKey\n              )}`\n            );\n          } else {\n            return result.map((r) => {\n              return r == null ||\n                r.constructor.name === memberConstructor.prototype.constructor.name\n                ? r\n                : memberConverter(\n                    Object.create(memberConstructor.prototype, Object.getOwnPropertyDescriptors(r))\n                  );\n            });\n          }\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForObjectValues<T>(\n  valuesConstructor: new (...args: any[]) => T,\n  valuesConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<{ [key: string]: T }> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<{ [key: string]: T }> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else {\n            for (const [key, val] of Object.entries(result)) {\n              result[key] =\n                val == null || val.constructor.name === valuesConstructor.prototype.constructor.name\n                  ? valuesConverter(val)\n                  : valuesConverter(\n                      Object.create(\n                        valuesConstructor.prototype,\n                        Object.getOwnPropertyDescriptors(val)\n                      )\n                    );\n            }\n\n            return result as { [key: string]: T };\n          }\n        });\n      },\n    };\n  };\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport {\n  TwoFactorProviderDetails,\n  TwoFactorService as TwoFactorServiceAbstraction,\n} from \"../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\n\nexport const TwoFactorProviders: Partial<Record<TwoFactorProviderType, TwoFactorProviderDetails>> =\n  {\n    [TwoFactorProviderType.Authenticator]: {\n      type: TwoFactorProviderType.Authenticator,\n      name: null as string,\n      description: null as string,\n      priority: 1,\n      sort: 1,\n      premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n      type: TwoFactorProviderType.Yubikey,\n      name: null as string,\n      description: null as string,\n      priority: 3,\n      sort: 2,\n      premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n      type: TwoFactorProviderType.Duo,\n      name: \"Duo\",\n      description: null as string,\n      priority: 2,\n      sort: 3,\n      premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n      type: TwoFactorProviderType.OrganizationDuo,\n      name: \"Duo (Organization)\",\n      description: null as string,\n      priority: 10,\n      sort: 4,\n      premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n      type: TwoFactorProviderType.Email,\n      name: null as string,\n      description: null as string,\n      priority: 0,\n      sort: 6,\n      premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n      type: TwoFactorProviderType.WebAuthn,\n      name: null as string,\n      description: null as string,\n      priority: 4,\n      sort: 5,\n      premium: true,\n    },\n  };\n\nexport class TwoFactorService implements TwoFactorServiceAbstraction {\n  private twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  private selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  getSupportedProviders(win: Window): TwoFactorProviderDetails[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  setSelectedProvider(type: TwoFactorProviderType) {\n    this.selectedTwoFactorProviderType = type;\n  }\n\n  clearSelectedProvider() {\n    this.selectedTwoFactorProviderType = null;\n  }\n\n  setProviders(response: IdentityTwoFactorResponse) {\n    this.twoFactorProvidersData = response.twoFactorProviders2;\n  }\n\n  clearProviders() {\n    this.twoFactorProvidersData = null;\n  }\n\n  getProviders() {\n    return this.twoFactorProvidersData;\n  }\n}\n","import { Component, Input, OnChanges } from \"@angular/core\";\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\ntype SizeTypes = \"xlarge\" | \"large\" | \"default\" | \"small\" | \"xsmall\";\n\nconst SizeClasses: Record<SizeTypes, string[]> = {\n  xlarge: [\"tw-h-24\", \"tw-w-24\"],\n  large: [\"tw-h-16\", \"tw-w-16\"],\n  default: [\"tw-h-10\", \"tw-w-10\"],\n  small: [\"tw-h-7\", \"tw-w-7\"],\n  xsmall: [\"tw-h-6\", \"tw-w-6\"],\n};\n\n@Component({\n  selector: \"bit-avatar\",\n  template: `<img *ngIf=\"src\" [src]=\"src\" title=\"{{ title || text }}\" [ngClass]=\"classList\" />`,\n})\nexport class AvatarComponent implements OnChanges {\n  @Input() border = false;\n  @Input() color?: string;\n  @Input() id?: string;\n  @Input() text?: string;\n  @Input() title: string;\n  @Input() size: SizeTypes = \"default\";\n\n  private svgCharCount = 2;\n  private svgFontSize = 20;\n  private svgFontWeight = 300;\n  private svgSize = 48;\n  src: SafeResourceUrl;\n\n  constructor(public sanitizer: DomSanitizer) {}\n\n  ngOnChanges() {\n    this.generate();\n  }\n\n  get classList() {\n    return [\"tw-rounded-full\"]\n      .concat(SizeClasses[this.size] ?? [])\n      .concat(this.border ? [\"tw-border\", \"tw-border-solid\", \"tw-border-secondary-500\"] : []);\n  }\n\n  private generate() {\n    let chars: string = null;\n    const upperCaseText = this.text?.toUpperCase() ?? \"\";\n\n    chars = this.getFirstLetters(upperCaseText, this.svgCharCount);\n\n    if (chars == null) {\n      chars = this.unicodeSafeSubstring(upperCaseText, this.svgCharCount);\n    }\n\n    // If the chars contain an emoji, only show it.\n    if (chars.match(Utils.regexpEmojiPresentation)) {\n      chars = chars.match(Utils.regexpEmojiPresentation)[0];\n    }\n\n    let svg: HTMLElement;\n    let hexColor = this.color;\n\n    if (!Utils.isNullOrWhitespace(this.color)) {\n      svg = this.createSvgElement(this.svgSize, hexColor);\n    } else if (!Utils.isNullOrWhitespace(this.id)) {\n      hexColor = Utils.stringToColor(this.id.toString());\n      svg = this.createSvgElement(this.svgSize, hexColor);\n    } else {\n      hexColor = Utils.stringToColor(upperCaseText);\n      svg = this.createSvgElement(this.svgSize, hexColor);\n    }\n\n    const charObj = this.createTextElement(chars, hexColor);\n    svg.appendChild(charObj);\n    const html = window.document.createElement(\"div\").appendChild(svg).outerHTML;\n    const svgHtml = window.btoa(unescape(encodeURIComponent(html)));\n    this.src = this.sanitizer.bypassSecurityTrustResourceUrl(\n      \"data:image/svg+xml;base64,\" + svgHtml\n    );\n  }\n\n  private getFirstLetters(data: string, count: number): string {\n    const parts = data.split(\" \");\n    if (parts.length > 1) {\n      let text = \"\";\n      for (let i = 0; i < count; i++) {\n        text += this.unicodeSafeSubstring(parts[i], 1);\n      }\n      return text;\n    }\n    return null;\n  }\n\n  private createSvgElement(size: number, color: string): HTMLElement {\n    const svgTag = window.document.createElement(\"svg\");\n    svgTag.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    svgTag.setAttribute(\"pointer-events\", \"none\");\n    svgTag.setAttribute(\"width\", size.toString());\n    svgTag.setAttribute(\"height\", size.toString());\n    svgTag.style.backgroundColor = color;\n    svgTag.style.width = size + \"px\";\n    svgTag.style.height = size + \"px\";\n    return svgTag;\n  }\n\n  private createTextElement(character: string, color: string): HTMLElement {\n    const textTag = window.document.createElement(\"text\");\n    textTag.setAttribute(\"text-anchor\", \"middle\");\n    textTag.setAttribute(\"y\", \"50%\");\n    textTag.setAttribute(\"x\", \"50%\");\n    textTag.setAttribute(\"dy\", \"0.35em\");\n    textTag.setAttribute(\"pointer-events\", \"auto\");\n    textTag.setAttribute(\"fill\", Utils.pickTextColorBasedOnBgColor(color, 135, true));\n    textTag.setAttribute(\n      \"font-family\",\n      '\"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,' +\n        'sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\"'\n    );\n    textTag.textContent = character;\n    textTag.style.fontWeight = this.svgFontWeight.toString();\n    textTag.style.fontSize = this.svgFontSize + \"px\";\n    return textTag;\n  }\n\n  private unicodeSafeSubstring(str: string, count: number) {\n    const characters = str.match(/./gu);\n    return characters != null ? characters.slice(0, count).join(\"\") : \"\";\n  }\n}\n","import { Directive, ElementRef, HostBinding, Input } from \"@angular/core\";\n\nexport type BadgeTypes = \"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\";\n\nconst styles: Record<BadgeTypes, string[]> = {\n  primary: [\"tw-bg-primary-500\"],\n  secondary: [\"tw-bg-text-muted\"],\n  success: [\"tw-bg-success-500\"],\n  danger: [\"tw-bg-danger-500\"],\n  warning: [\"tw-bg-warning-500\"],\n  info: [\"tw-bg-info-500\"],\n};\n\nconst hoverStyles: Record<BadgeTypes, string[]> = {\n  primary: [\"hover:tw-bg-primary-700\"],\n  secondary: [\"hover:tw-bg-secondary-700\"],\n  success: [\"hover:tw-bg-success-700\"],\n  danger: [\"hover:tw-bg-danger-700\"],\n  warning: [\"hover:tw-bg-warning-700\"],\n  info: [\"hover:tw-bg-info-700\"],\n};\n\n@Directive({\n  selector: \"span[bitBadge], a[bitBadge], button[bitBadge]\",\n})\nexport class BadgeDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-inline\",\n      \"tw-py-0.5\",\n      \"tw-px-1.5\",\n      \"tw-font-bold\",\n      \"tw-text-center\",\n      \"!tw-text-contrast\",\n      \"tw-rounded\",\n      \"tw-border-none\",\n      \"tw-box-border\",\n      \"tw-whitespace-no-wrap\",\n      \"tw-text-xs\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n      \"focus:tw-ring\",\n      \"focus:tw-ring-offset-2\",\n      \"focus:tw-ring-primary-700\",\n    ]\n      .concat(styles[this.badgeType])\n      .concat(this.hasHoverEffects ? hoverStyles[this.badgeType] : []);\n  }\n\n  @Input() badgeType: BadgeTypes = \"primary\";\n\n  private hasHoverEffects = false;\n\n  constructor(el: ElementRef<Element>) {\n    this.hasHoverEffects = el?.nativeElement?.nodeName != \"SPAN\";\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BadgeDirective } from \"./badge.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [BadgeDirective],\n  declarations: [BadgeDirective],\n})\nexport class BadgeModule {}\n","import { Input, HostBinding, Component } from \"@angular/core\";\n\nimport { ButtonLikeAbstraction, ButtonType } from \"../shared/button-like.abstraction\";\n\nconst focusRing = [\n  \"focus-visible:tw-ring\",\n  \"focus-visible:tw-ring-offset-2\",\n  \"focus-visible:tw-ring-primary-700\",\n  \"focus-visible:tw-z-10\",\n];\n\nconst buttonStyles: Record<ButtonType, string[]> = {\n  primary: [\n    \"tw-border-primary-500\",\n    \"tw-bg-primary-500\",\n    \"!tw-text-contrast\",\n    \"hover:tw-bg-primary-700\",\n    \"hover:tw-border-primary-700\",\n    \"disabled:tw-bg-primary-500/60\",\n    \"disabled:tw-border-primary-500/60\",\n    \"disabled:!tw-text-contrast/60\",\n    \"disabled:tw-bg-clip-padding\",\n    ...focusRing,\n  ],\n  secondary: [\n    \"tw-bg-transparent\",\n    \"tw-border-text-muted\",\n    \"!tw-text-muted\",\n    \"hover:tw-bg-text-muted\",\n    \"hover:tw-border-text-muted\",\n    \"hover:!tw-text-contrast\",\n    \"disabled:tw-bg-transparent\",\n    \"disabled:tw-border-text-muted/60\",\n    \"disabled:!tw-text-muted/60\",\n    ...focusRing,\n  ],\n  danger: [\n    \"tw-bg-transparent\",\n    \"tw-border-danger-500\",\n    \"!tw-text-danger\",\n    \"hover:tw-bg-danger-500\",\n    \"hover:tw-border-danger-500\",\n    \"hover:!tw-text-contrast\",\n    \"disabled:tw-bg-transparent\",\n    \"disabled:tw-border-danger-500/60\",\n    \"disabled:!tw-text-danger/60\",\n    ...focusRing,\n  ],\n  unstyled: [],\n};\n\n@Component({\n  selector: \"button[bitButton], a[bitButton]\",\n  templateUrl: \"button.component.html\",\n  providers: [{ provide: ButtonLikeAbstraction, useExisting: ButtonComponent }],\n})\nexport class ButtonComponent implements ButtonLikeAbstraction {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-font-semibold\",\n      \"tw-py-1.5\",\n      \"tw-px-3\",\n      \"tw-rounded\",\n      \"tw-transition\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      \"tw-text-center\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n    ]\n      .concat(\n        this.block == null || this.block === false ? [\"tw-inline-block\"] : [\"tw-w-full\", \"tw-block\"]\n      )\n      .concat(buttonStyles[this.buttonType ?? \"secondary\"]);\n  }\n\n  @HostBinding(\"attr.disabled\")\n  get disabledAttr() {\n    const disabled = this.disabled != null && this.disabled !== false;\n    return disabled || this.loading ? true : null;\n  }\n\n  @Input() buttonType: ButtonType;\n  @Input() block?: boolean;\n\n  @Input() loading = false;\n\n  @Input() disabled = false;\n\n  setButtonType(value: \"primary\" | \"secondary\" | \"danger\" | \"unstyled\") {\n    this.buttonType = value;\n  }\n}\n","<span class=\"tw-relative\">\n  <span [ngClass]=\"{ 'tw-invisible': loading }\">\n    <ng-content></ng-content>\n  </span>\n  <span\n    class=\"tw-absolute tw-inset-0 tw-flex tw-items-center tw-justify-center\"\n    [ngClass]=\"{ 'tw-invisible': !loading }\"\n  >\n    <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" aria-hidden=\"true\"></i>\n  </span>\n</span>\n","<div\n  class=\"tw-mb-4 tw-box-border tw-rounded tw-border tw-border-l-8 tw-border-solid tw-border-secondary-300 tw-bg-background-alt tw-py-3 tw-px-5 tw-leading-5 tw-text-main\"\n  [ngClass]=\"calloutClass\"\n>\n  <h3\n    class=\"tw-mt-0 tw-mb-2 tw-text-base tw-font-bold tw-uppercase\"\n    [ngClass]=\"headerClass\"\n    *ngIf=\"title\"\n  >\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\ntype CalloutTypes = \"success\" | \"info\" | \"warning\" | \"danger\";\n\nconst defaultIcon: Record<CalloutTypes, string> = {\n  success: \"bwi-check\",\n  info: \"bwi-info-circle\",\n  warning: \"bwi-exclamation-triangle\",\n  danger: \"bwi-error\",\n};\n\nconst defaultI18n: Partial<Record<CalloutTypes, string>> = {\n  warning: \"warning\",\n  danger: \"error\",\n};\n\n@Component({\n  selector: \"bit-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type: CalloutTypes = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() useAlertRole = false;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.icon ??= defaultIcon[this.type];\n    if (this.title == null && defaultI18n[this.type] != null) {\n      this.title = this.i18nService.t(defaultI18n[this.type]);\n    }\n  }\n\n  get calloutClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"tw-border-l-danger-500\";\n      case \"info\":\n        return \"tw-border-l-info-500\";\n      case \"success\":\n        return \"tw-border-l-success-500\";\n      case \"warning\":\n        return \"tw-border-l-warning-500\";\n    }\n  }\n\n  get headerClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"!tw-text-danger\";\n      case \"info\":\n        return \"!tw-text-info\";\n      case \"success\":\n        return \"!tw-text-success\";\n      case \"warning\":\n        return \"!tw-text-warning\";\n    }\n  }\n}\n","import { Component, HostBinding, Input } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nenum CharacterType {\n  Letter,\n  Emoji,\n  Special,\n  Number,\n}\n\n@Component({\n  selector: \"bit-color-password\",\n  template: `<div\n    *ngFor=\"let character of passwordArray; index as i\"\n    [class]=\"getCharacterClass(character)\"\n  >\n    <span>{{ character }}</span>\n    <span *ngIf=\"showCount\" class=\"tw-whitespace-nowrap tw-text-xs tw-leading-5 tw-text-main\">{{\n      i + 1\n    }}</span>\n  </div>`,\n})\nexport class ColorPasswordComponent {\n  @Input() private password: string = null;\n  @Input() showCount = false;\n\n  characterStyles: Record<CharacterType, string[]> = {\n    [CharacterType.Emoji]: [],\n    [CharacterType.Letter]: [\"tw-text-main\"],\n    [CharacterType.Special]: [\"tw-text-danger\"],\n    [CharacterType.Number]: [\"tw-text-primary-500\"],\n  };\n\n  @HostBinding(\"class\")\n  get classList() {\n    return [\"tw-min-w-0\", \"tw-whitespace-pre-wrap\", \"tw-break-all\"];\n  }\n\n  get passwordArray() {\n    // Convert to an array to handle cases that strings have special characters, i.e.: emoji.\n    return Array.from(this.password);\n  }\n\n  getCharacterClass(character: string) {\n    const charType = this.getCharacterType(character);\n    const charClass = this.characterStyles[charType].concat(\"tw-inline-flex\");\n\n    if (this.showCount) {\n      return charClass.concat([\n        \"tw-flex-col\",\n        \"tw-items-center\",\n        \"tw-w-7\",\n        \"tw-py-1\",\n        \"odd:tw-bg-secondary-100\",\n        \"even:tw-bg-background\",\n      ]);\n    }\n\n    return charClass;\n  }\n\n  private getCharacterType(character: string): CharacterType {\n    if (character.match(Utils.regexpEmojiPresentation)) {\n      return CharacterType.Emoji;\n    }\n\n    if (character.match(/\\d/)) {\n      return CharacterType.Number;\n    }\n\n    const specials = [\"&\", \"<\", \">\", \" \"];\n    if (specials.includes(character) || character.match(/[^\\w ]/)) {\n      return CharacterType.Special;\n    }\n\n    return CharacterType.Letter;\n  }\n}\n","import {\n  DEFAULT_DIALOG_CONFIG,\n  Dialog,\n  DialogConfig,\n  DialogRef,\n  DIALOG_SCROLL_STRATEGY,\n} from \"@angular/cdk/dialog\";\nimport { ComponentType, Overlay, OverlayContainer } from \"@angular/cdk/overlay\";\nimport {\n  Inject,\n  Injectable,\n  Injector,\n  OnDestroy,\n  Optional,\n  SkipSelf,\n  TemplateRef,\n} from \"@angular/core\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport { filter, Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class DialogService extends Dialog implements OnDestroy {\n  private _destroy$ = new Subject<void>();\n\n  override open<R = unknown, D = unknown, C = unknown>(\n    componentOrTemplateRef: ComponentType<C> | TemplateRef<C>,\n    config?: DialogConfig<D, DialogRef<R, C>>\n  ): DialogRef<R, C> {\n    config = {\n      backdropClass: [\"tw-fixed\", \"tw-bg-black\", \"tw-bg-opacity-30\", \"tw-inset-0\", \"tw-z-40\"],\n      ...config,\n    };\n\n    return super.open(componentOrTemplateRef, config);\n  }\n\n  constructor(\n    /** Parent class constructor */\n    _overlay: Overlay,\n    _injector: Injector,\n    @Optional() @Inject(DEFAULT_DIALOG_CONFIG) _defaultOptions: DialogConfig,\n    @Optional() @SkipSelf() _parentDialog: Dialog,\n    _overlayContainer: OverlayContainer,\n    @Inject(DIALOG_SCROLL_STRATEGY) scrollStrategy: any,\n\n    /** Not in parent class */\n    @Optional() router: Router,\n    @Optional() authService: AuthService\n  ) {\n    super(_overlay, _injector, _defaultOptions, _parentDialog, _overlayContainer, scrollStrategy);\n\n    /** Close all open dialogs if the vault locks */\n    if (router && authService) {\n      router.events\n        .pipe(\n          filter((event) => event instanceof NavigationEnd),\n          switchMap(() => authService.getAuthStatus()),\n          filter((v) => v !== AuthenticationStatus.Unlocked),\n          takeUntil(this._destroy$)\n        )\n        .subscribe(() => this.closeAll());\n    }\n  }\n\n  override ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n    super.ngOnDestroy();\n  }\n}\n","import { CdkDialogContainer, DialogRef } from \"@angular/cdk/dialog\";\nimport { Directive, HostBinding, Input, OnInit, Optional } from \"@angular/core\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"[bitDialogTitleContainer]\",\n})\nexport class DialogTitleContainerDirective implements OnInit {\n  @HostBinding(\"id\") id = `bit-dialog-title-${nextId++}`;\n\n  @Input() simple = false;\n\n  constructor(@Optional() private dialogRef: DialogRef<any>) {}\n\n  ngOnInit(): void {\n    // Based on angular/components, licensed under MIT\n    // https://github.com/angular/components/blob/14.2.0/src/material/dialog/dialog-content-directives.ts#L121-L128\n    if (this.dialogRef) {\n      Promise.resolve().then(() => {\n        const container = this.dialogRef.containerInstance as CdkDialogContainer;\n\n        if (container && !container._ariaLabelledBy) {\n          container._ariaLabelledBy = this.id;\n        }\n      });\n    }\n  }\n}\n","<div\n  class=\"tw-my-4 tw-flex tw-max-h-screen tw-w-96 tw-max-w-90vw tw-flex-col tw-overflow-hidden tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-text-contrast tw-text-main\"\n>\n  <div class=\"tw-flex tw-flex-col tw-items-center tw-gap-2 tw-px-4 tw-pt-4 tw-text-center\">\n    <ng-content *ngIf=\"hasIcon; else elseBlock\" select=\"[bit-dialog-icon]\"></ng-content>\n    <ng-template #elseBlock>\n      <i class=\"bwi bwi-exclamation-triangle tw-text-3xl tw-text-warning\" aria-hidden=\"true\"></i>\n    </ng-template>\n    <h1 bitDialogTitleContainer class=\"tw-mb-0 tw-text-base tw-font-semibold\">\n      <ng-content select=\"[bitDialogTitle]\"></ng-content>\n    </h1>\n  </div>\n  <div class=\"tw-overflow-y-auto tw-px-4 tw-pt-2 tw-pb-4 tw-text-center tw-text-base\">\n    <ng-content select=\"[bitDialogContent]\"></ng-content>\n  </div>\n  <div class=\"tw-border-0 tw-border-t tw-border-solid tw-border-secondary-300 tw-p-4\">\n    <ng-content select=\"[bitDialogFooter]\"></ng-content>\n  </div>\n</div>\n","import { Component, ContentChild, Directive } from \"@angular/core\";\n\n@Directive({ selector: \"[bit-dialog-icon]\" })\nexport class IconDirective {}\n\n@Component({\n  selector: \"bit-simple-dialog\",\n  templateUrl: \"./simple-dialog.component.html\",\n})\nexport class SimpleDialogComponent {\n  @ContentChild(IconDirective) icon!: IconDirective;\n\n  get hasIcon() {\n    return this.icon != null;\n  }\n}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"bit-hint\",\n  host: {\n    class: \"tw-text-muted tw-inline-block tw-mt-1\",\n  },\n})\nexport class BitHintComponent {\n  @HostBinding() id = `bit-hint-${nextId++}`;\n}\n","import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"bit-label\",\n})\nexport class BitLabel {}\n","import { Component, Input } from \"@angular/core\";\nimport { AbstractControl, UntypedFormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"bit-error-summary\",\n  template: ` <ng-container *ngIf=\"errorCount > 0\">\n    <i class=\"bwi bwi-error\"></i> {{ \"fieldsNeedAttention\" | i18n: errorString }}\n  </ng-container>`,\n  host: {\n    class: \"tw-block tw-text-danger tw-mt-2\",\n    \"aria-live\": \"assertive\",\n  },\n})\nexport class BitErrorSummary {\n  @Input()\n  formGroup: UntypedFormGroup;\n\n  get errorCount(): number {\n    return this.getErrorCount(this.formGroup);\n  }\n\n  get errorString() {\n    return this.errorCount.toString();\n  }\n\n  private getErrorCount(form: UntypedFormGroup): number {\n    return Object.values(form.controls).reduce((acc: number, control: AbstractControl) => {\n      if (control instanceof UntypedFormGroup) {\n        return acc + this.getErrorCount(control);\n      }\n\n      if (control.errors == null) {\n        return acc;\n      }\n\n      if (!control.dirty && control.untouched) {\n        return acc;\n      }\n\n      return acc + Object.keys(control.errors).length;\n    }, 0);\n  }\n}\n","export type InputTypes =\n  | \"text\"\n  | \"password\"\n  | \"number\"\n  | \"datetime-local\"\n  | \"email\"\n  | \"checkbox\"\n  | \"search\";\n\nexport abstract class BitFormFieldControl {\n  ariaDescribedBy: string;\n  id: string;\n  labelForId: string;\n  required: boolean;\n  hasError: boolean;\n  error: [string, any];\n  type?: InputTypes;\n  spellcheck?: boolean;\n  focus?: () => void;\n}\n","import { Component, HostBinding, Input } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Component({\n  selector: \"bit-error\",\n  template: `<i class=\"bwi bwi-error\"></i> {{ displayError }}`,\n  host: {\n    class: \"tw-block tw-mt-1 tw-text-danger\",\n    \"aria-live\": \"assertive\",\n  },\n})\nexport class BitErrorComponent {\n  @HostBinding() id = `bit-error-${nextId++}`;\n\n  @Input() error: [string, any];\n\n  constructor(private i18nService: I18nService) {}\n\n  get displayError() {\n    switch (this.error[0]) {\n      case \"required\":\n        return this.i18nService.t(\"inputRequired\");\n      case \"email\":\n        return this.i18nService.t(\"inputEmail\");\n      case \"minlength\":\n        return this.i18nService.t(\"inputMinLength\", this.error[1]?.requiredLength);\n      case \"maxlength\":\n        return this.i18nService.t(\"inputMaxLength\", this.error[1]?.requiredLength);\n      default:\n        // Attempt to show a custom error message.\n        if (this.error[1]?.message) {\n          return this.error[1]?.message;\n        }\n\n        return this.error;\n    }\n  }\n}\n","<label class=\"tw-mb-1 tw-block tw-font-semibold tw-text-main\" [attr.for]=\"input.labelForId\">\n  <ng-content select=\"bit-label\"></ng-content>\n  <span *ngIf=\"input.required\" class=\"tw-text-xs tw-font-normal\"> ({{ \"required\" | i18n }})</span>\n</label>\n<div class=\"tw-flex\">\n  <div *ngIf=\"prefixChildren.length\" class=\"tw-flex\">\n    <ng-content select=\"[bitPrefix]\"></ng-content>\n  </div>\n  <ng-content></ng-content>\n  <div *ngIf=\"suffixChildren.length\" class=\"tw-flex\">\n    <ng-content select=\"[bitSuffix]\"></ng-content>\n  </div>\n</div>\n<ng-container [ngSwitch]=\"input.hasError\">\n  <ng-content select=\"bit-hint\" *ngSwitchCase=\"false\"></ng-content>\n  <bit-error [error]=\"input.error\" *ngSwitchCase=\"true\"></bit-error>\n</ng-container>\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChild,\n  ContentChildren,\n  QueryList,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { BitHintComponent } from \"../form-control/hint.component\";\n\nimport { BitErrorComponent } from \"./error.component\";\nimport { BitFormFieldControl } from \"./form-field-control\";\nimport { BitPrefixDirective } from \"./prefix.directive\";\nimport { BitSuffixDirective } from \"./suffix.directive\";\n\n@Component({\n  selector: \"bit-form-field\",\n  templateUrl: \"./form-field.component.html\",\n  host: {\n    class: \"tw-mb-6 tw-block\",\n  },\n})\nexport class BitFormFieldComponent implements AfterContentChecked {\n  @ContentChild(BitFormFieldControl) input: BitFormFieldControl;\n  @ContentChild(BitHintComponent) hint: BitHintComponent;\n\n  @ViewChild(BitErrorComponent) error: BitErrorComponent;\n\n  @ContentChildren(BitPrefixDirective) prefixChildren: QueryList<BitPrefixDirective>;\n  @ContentChildren(BitSuffixDirective) suffixChildren: QueryList<BitSuffixDirective>;\n\n  ngAfterContentChecked(): void {\n    if (this.error) {\n      this.input.ariaDescribedBy = this.error.id;\n    } else if (this.hint) {\n      this.input.ariaDescribedBy = this.hint.id;\n    } else {\n      this.input.ariaDescribedBy = undefined;\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared\";\n\nimport { FormControlComponent } from \"./form-control.component\";\nimport { BitHintComponent } from \"./hint.component\";\nimport { BitLabel } from \"./label.directive\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [FormControlComponent, BitLabel, BitHintComponent],\n  exports: [FormControlComponent, BitLabel, BitHintComponent],\n})\nexport class FormControlModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitInputDirective } from \"./input.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitInputDirective],\n  exports: [BitInputDirective],\n})\nexport class InputModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { NgSelectModule } from \"@ng-select/ng-select\";\n\nimport { BadgeModule } from \"../badge\";\nimport { SharedModule } from \"../shared\";\n\nimport { MultiSelectComponent } from \"./multi-select.component\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, NgSelectModule, BadgeModule, SharedModule],\n  exports: [MultiSelectComponent],\n  declarations: [MultiSelectComponent],\n})\nexport class MultiSelectModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { FormControlModule } from \"../form-control\";\nimport { BitInputDirective } from \"../input/input.directive\";\nimport { InputModule } from \"../input/input.module\";\nimport { MultiSelectComponent } from \"../multi-select/multi-select.component\";\nimport { MultiSelectModule } from \"../multi-select/multi-select.module\";\nimport { SharedModule } from \"../shared\";\n\nimport { BitErrorSummary } from \"./error-summary.component\";\nimport { BitErrorComponent } from \"./error.component\";\nimport { BitFormFieldComponent } from \"./form-field.component\";\nimport { BitPasswordInputToggleDirective } from \"./password-input-toggle.directive\";\nimport { BitPrefixDirective } from \"./prefix.directive\";\nimport { BitSuffixDirective } from \"./suffix.directive\";\n\n@NgModule({\n  imports: [SharedModule, FormControlModule, InputModule, MultiSelectModule],\n  declarations: [\n    BitErrorComponent,\n    BitErrorSummary,\n    BitFormFieldComponent,\n    BitPasswordInputToggleDirective,\n    BitPrefixDirective,\n    BitSuffixDirective,\n  ],\n  exports: [\n    BitErrorComponent,\n    BitErrorSummary,\n    BitFormFieldComponent,\n    BitInputDirective,\n    BitPasswordInputToggleDirective,\n    BitPrefixDirective,\n    BitSuffixDirective,\n    MultiSelectComponent,\n    FormControlModule,\n  ],\n})\nexport class FormFieldModule {}\n","import {\n  AfterContentInit,\n  Directive,\n  EventEmitter,\n  Host,\n  HostBinding,\n  HostListener,\n  Input,\n  OnChanges,\n  Output,\n} from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\nimport { BitIconButtonComponent } from \"../icon-button/icon-button.component\";\n\nimport { BitFormFieldComponent } from \"./form-field.component\";\n\n@Directive({\n  selector: \"[bitPasswordInputToggle]\",\n})\nexport class BitPasswordInputToggleDirective implements AfterContentInit, OnChanges {\n  /**\n   * Whether the input is toggled to show the password.\n   */\n  @HostBinding(\"attr.aria-pressed\") @Input() toggled = false;\n  @Output() toggledChange = new EventEmitter<boolean>();\n\n  @HostBinding(\"attr.title\") title = this.i18nService.t(\"toggleVisibility\");\n  @HostBinding(\"attr.aria-label\") label = this.i18nService.t(\"toggleVisibility\");\n\n  /**\n   * Click handler to toggle the state of the input type.\n   */\n  @HostListener(\"click\") onClick() {\n    this.toggled = !this.toggled;\n    this.toggledChange.emit(this.toggled);\n\n    this.update();\n\n    this.formField.input?.focus();\n  }\n\n  constructor(\n    @Host() private button: BitIconButtonComponent,\n    private formField: BitFormFieldComponent,\n    private i18nService: I18nService\n  ) {}\n\n  get icon() {\n    return this.toggled ? \"bwi-eye-slash\" : \"bwi-eye\";\n  }\n\n  ngOnChanges(): void {\n    this.update();\n  }\n\n  ngAfterContentInit(): void {\n    this.toggled = this.formField.input.type !== \"password\";\n    this.button.icon = this.icon;\n  }\n\n  private update() {\n    this.button.icon = this.icon;\n    if (this.formField.input?.type != null) {\n      this.formField.input.type = this.toggled ? \"text\" : \"password\";\n      this.formField.input.spellcheck = this.toggled ? false : undefined;\n    }\n  }\n}\n","import { Directive, HostBinding, Input, OnInit, Optional } from \"@angular/core\";\n\nimport { ButtonLikeAbstraction } from \"../shared/button-like.abstraction\";\n\nexport const PrefixClasses = [\n  \"tw-bg-background-alt\",\n  \"tw-border\",\n  \"tw-border-solid\",\n  \"tw-border-secondary-500\",\n  \"tw-text-muted\",\n  \"tw-rounded-none\",\n];\n\nexport const PrefixButtonClasses = [\n  \"hover:tw-bg-text-muted\",\n  \"hover:tw-text-contrast\",\n  \"disabled:tw-opacity-100\",\n  \"disabled:tw-bg-secondary-100\",\n  \"disabled:hover:tw-bg-secondary-100\",\n  \"disabled:hover:tw-text-muted\",\n  \"focus-visible:tw-ring-primary-700\",\n\n  \"focus-visible:tw-border-primary-700\",\n  \"focus-visible:tw-ring-1\",\n  \"focus-visible:tw-ring-inset\",\n  \"focus-visible:tw-ring-primary-700\",\n  \"focus-visible:tw-z-10\",\n];\n\nexport const PrefixStaticContentClasses = [\"tw-block\", \"tw-px-3\", \"tw-py-1.5\"];\n\n@Directive({\n  selector: \"[bitPrefix]\",\n})\nexport class BitPrefixDirective implements OnInit {\n  constructor(@Optional() private buttonComponent: ButtonLikeAbstraction) {}\n\n  @HostBinding(\"class\") @Input() get classList() {\n    return PrefixClasses.concat([\n      \"tw-border-r-0\",\n      \"first:tw-rounded-l\",\n\n      \"focus-visible:tw-border-r\",\n      \"focus-visible:tw-mr-[-1px]\",\n    ]).concat(this.buttonComponent != undefined ? PrefixButtonClasses : PrefixStaticContentClasses);\n  }\n\n  ngOnInit(): void {\n    this.buttonComponent?.setButtonType(\"unstyled\");\n  }\n}\n","import { Directive, HostBinding, Input, Optional } from \"@angular/core\";\n\nimport { ButtonLikeAbstraction } from \"../shared/button-like.abstraction\";\n\nimport { PrefixButtonClasses, PrefixClasses, PrefixStaticContentClasses } from \"./prefix.directive\";\n\n@Directive({\n  selector: \"[bitSuffix]\",\n})\nexport class BitSuffixDirective {\n  constructor(@Optional() private buttonComponent: ButtonLikeAbstraction) {}\n\n  @HostBinding(\"class\") @Input() get classList() {\n    return PrefixClasses.concat([\n      \"tw-border-l-0\",\n      \"last:tw-rounded-r\",\n\n      \"focus-visible:tw-border-l\",\n      \"focus-visible:tw-ml-[-1px]\",\n    ]).concat(this.buttonComponent != undefined ? PrefixButtonClasses : PrefixStaticContentClasses);\n  }\n\n  ngOnInit(): void {\n    this.buttonComponent?.setButtonType(\"unstyled\");\n  }\n}\n","import { Component, HostBinding, Input } from \"@angular/core\";\n\nimport { ButtonLikeAbstraction, ButtonType } from \"../shared/button-like.abstraction\";\n\nexport type IconButtonType = ButtonType | \"contrast\" | \"main\" | \"muted\" | \"light\";\n\nconst focusRing = [\n  // Workaround for box-shadow with transparent offset issue:\n  // https://github.com/tailwindlabs/tailwindcss/issues/3595\n  // Remove `before:` and use regular `tw-ring` when browser no longer has bug, or better:\n  // switch to `outline` with `outline-offset` when Safari supports border radius on outline.\n  // Using `box-shadow` to create outlines is a hack and as such `outline` should be preferred.\n  \"tw-relative\",\n  \"before:tw-content-['']\",\n  \"before:tw-block\",\n  \"before:tw-absolute\",\n  \"before:-tw-inset-[3px]\",\n  \"before:tw-rounded-md\",\n  \"before:tw-transition\",\n  \"before:tw-ring\",\n  \"before:tw-ring-transparent\",\n  \"focus-visible:tw-z-10\",\n];\n\nconst styles: Record<IconButtonType, string[]> = {\n  contrast: [\n    \"tw-bg-transparent\",\n    \"!tw-text-contrast\",\n    \"tw-border-transparent\",\n    \"hover:tw-bg-transparent-hover\",\n    \"hover:tw-border-text-contrast\",\n    \"focus-visible:before:tw-ring-text-contrast\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-transparent\",\n    \"disabled:hover:tw-bg-transparent\",\n    ...focusRing,\n  ],\n  main: [\n    \"tw-bg-transparent\",\n    \"!tw-text-main\",\n    \"tw-border-transparent\",\n    \"hover:tw-bg-transparent-hover\",\n    \"hover:tw-border-text-main\",\n    \"focus-visible:before:tw-ring-text-main\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-transparent\",\n    \"disabled:hover:tw-bg-transparent\",\n    ...focusRing,\n  ],\n  muted: [\n    \"tw-bg-transparent\",\n    \"!tw-text-muted\",\n    \"tw-border-transparent\",\n    \"hover:tw-bg-transparent-hover\",\n    \"hover:tw-border-primary-700\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-transparent\",\n    \"disabled:hover:tw-bg-transparent\",\n    ...focusRing,\n  ],\n  primary: [\n    \"tw-bg-primary-500\",\n    \"!tw-text-contrast\",\n    \"tw-border-primary-500\",\n    \"hover:tw-bg-primary-700\",\n    \"hover:tw-border-primary-700\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-primary-500\",\n    \"disabled:hover:tw-bg-primary-500\",\n    ...focusRing,\n  ],\n  secondary: [\n    \"tw-bg-transparent\",\n    \"!tw-text-muted\",\n    \"tw-border-text-muted\",\n    \"hover:!tw-text-contrast\",\n    \"hover:tw-bg-text-muted\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-text-muted\",\n    \"disabled:hover:tw-bg-transparent\",\n    \"disabled:hover:!tw-text-muted\",\n    \"disabled:hover:tw-border-text-muted\",\n    ...focusRing,\n  ],\n  danger: [\n    \"tw-bg-transparent\",\n    \"!tw-text-danger\",\n    \"tw-border-danger-500\",\n    \"hover:!tw-text-contrast\",\n    \"hover:tw-bg-danger-500\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-danger-500\",\n    \"disabled:hover:tw-bg-transparent\",\n    \"disabled:hover:!tw-text-danger\",\n    \"disabled:hover:tw-border-danger-500\",\n    ...focusRing,\n  ],\n  light: [\n    \"tw-bg-transparent\",\n    \"!tw-text-alt2\",\n    \"tw-border-transparent\",\n    \"hover:tw-bg-transparent-hover\",\n    \"hover:tw-border-text-alt2\",\n    \"focus-visible:before:tw-ring-text-alt2\",\n    \"disabled:hover:tw-border-transparent\",\n    \"disabled:hover:tw-bg-transparent\",\n    ...focusRing,\n  ],\n  unstyled: [],\n};\n\nexport type IconButtonSize = \"default\" | \"small\";\n\nconst sizes: Record<IconButtonSize, string[]> = {\n  default: [\"tw-px-2.5\", \"tw-py-1.5\"],\n  small: [\"tw-leading-none\", \"tw-text-base\", \"tw-p-1\"],\n};\n\n@Component({\n  selector: \"button[bitIconButton]:not(button[bitButton])\",\n  templateUrl: \"icon-button.component.html\",\n  providers: [{ provide: ButtonLikeAbstraction, useExisting: BitIconButtonComponent }],\n})\nexport class BitIconButtonComponent implements ButtonLikeAbstraction {\n  @Input(\"bitIconButton\") icon: string;\n\n  @Input() buttonType: IconButtonType;\n\n  @Input() size: IconButtonSize = \"default\";\n\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-font-semibold\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      \"tw-rounded\",\n      \"tw-transition\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n    ]\n      .concat(styles[this.buttonType ?? \"main\"])\n      .concat(sizes[this.size]);\n  }\n\n  get iconClass() {\n    return [this.icon, \"!tw-m-0\"];\n  }\n\n  @HostBinding(\"attr.disabled\")\n  get disabledAttr() {\n    const disabled = this.disabled != null && this.disabled !== false;\n    return disabled || this.loading ? true : null;\n  }\n\n  @Input() loading = false;\n  @Input() disabled = false;\n\n  setButtonType(value: \"primary\" | \"secondary\" | \"danger\" | \"unstyled\") {\n    this.buttonType = value;\n  }\n}\n","<span class=\"tw-relative\">\n  <span [ngClass]=\"{ 'tw-invisible': loading }\">\n    <i class=\"bwi\" [ngClass]=\"iconClass\" aria-hidden=\"true\"></i>\n  </span>\n  <span\n    class=\"tw-absolute tw-inset-0 tw-flex tw-items-center tw-justify-center\"\n    [ngClass]=\"{ 'tw-invisible': !loading }\"\n  >\n    <i\n      class=\"bwi bwi-spinner bwi-spin\"\n      aria-hidden=\"true\"\n      [ngClass]=\"{ 'bwi-lg': size === 'default' }\"\n    ></i>\n  </span>\n</span>\n","import { Component, HostBinding, Input } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { Icon, isIcon } from \"./icon\";\n\n@Component({\n  selector: \"bit-icon\",\n  template: ``,\n})\nexport class BitIconComponent {\n  @Input() icon: Icon;\n\n  @HostBinding()\n  protected get innerHtml() {\n    if (!isIcon(this.icon)) {\n      return \"\";\n    }\n\n    const svg = this.icon.svg;\n    return this.domSanitizer.bypassSecurityTrustHtml(svg);\n  }\n\n  constructor(private domSanitizer: DomSanitizer) {}\n}\n","class Icon {\n  constructor(readonly svg: string) {}\n}\n\n// We only export the type to prohibit the creation of Icons without using\n// the `svgIcon` template literal tag.\nexport type { Icon };\n\nexport function isIcon(icon: unknown): icon is Icon {\n  return icon instanceof Icon;\n}\n\nexport class DynamicContentNotAllowedError extends Error {\n  constructor() {\n    super(\"Dynamic content in icons is not allowed due to risk of user-injected XSS.\");\n  }\n}\n\nexport function svgIcon(strings: TemplateStringsArray, ...values: unknown[]): Icon {\n  if (values.length > 0) {\n    throw new DynamicContentNotAllowedError();\n  }\n\n  return new Icon(strings[0]);\n}\n","import { svgIcon } from \"../icon\";\n\nexport const Search = svgIcon`\n<svg width=\"120\" height=\"120\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <g opacity=\".49\">\n    <path class=\"tw-fill-secondary-300\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M40.36 73.256a30.004 30.004 0 0 0 10.346 1.826c16.282 0 29.482-12.912 29.482-28.84 0-.384-.008-.766-.023-1.145h28.726v39.57H40.36v-11.41Z\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M21.546 46.241c0 15.929 13.2 28.841 29.482 28.841S80.51 62.17 80.51 46.241c0-15.928-13.2-28.841-29.482-28.841S21.546 30.313 21.546 46.241Z\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path class=\"tw-fill-secondary-500\" d=\"M35.36 70.595a1.2 1.2 0 0 0-2.4 0h2.4Zm77.475-30.356a2.343 2.343 0 0 1 2.365 2.33h2.4c0-2.593-2.107-4.73-4.765-4.73v2.4Zm2.365 2.33v46.047h2.4V42.57h-2.4Zm0 46.047c0 1.293-1.058 2.33-2.365 2.33v2.4c2.59 0 4.765-2.069 4.765-4.73h-2.4Zm-2.365 2.33h-75.11v2.4h75.11v-2.4Zm-75.11 0a2.343 2.343 0 0 1-2.365-2.33h-2.4c0 2.594 2.107 4.73 4.766 4.73v-2.4Zm-2.365-2.33v-18.02h-2.4v18.02h2.4Zm44.508-48.377h32.967v-2.4H79.868v2.4Z\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M79.907 45.287h29.114v39.57H40.487V73.051\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M57.356 102.56h35.849\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M68.954 92.147v10.413m11.599-10.413v10.413\" stroke-width=\"4\" stroke-linejoin=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"m27.44 64.945-4.51 4.51L5.72 86.663a3 3 0 0 0 0 4.243l1.238 1.238a3 3 0 0 0 4.243 0L28.41 74.936l4.51-4.51\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M101.293 53.154H85.178m16.115 6.043H90.214m-5.036 0h-7.553m23.668 6.043h-7.05m-5.54 0h-15.61m28.2 6.042H85.178m-5.538 0h-8.562m30.215 6.043H78.632m-5.539 0H60m-5.54 0h-8.057\" stroke-width=\"2\" stroke-linecap=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M29.164 33.01h41.529a2.4 2.4 0 0 1 2.4 2.4v6.28a2.4 2.4 0 0 1-2.4 2.4h-41.53a2.4 2.4 0 0 1-2.4-2.4v-6.28a2.4 2.4 0 0 1 2.4-2.4Z\" stroke-width=\"4\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M22.735 54.16h34.361a2.4 2.4 0 0 1 2.4 2.4v6.28a2.4 2.4 0 0 1-2.4 2.4H28.778m50.358-11.08h-6.161a2.4 2.4 0 0 0-2.4 2.4v6.414a2.266 2.266 0 0 0 2.266 2.265\" stroke-width=\"4\" stroke-linecap=\"round\" />\n  </g>\n</svg>\n`;\n","import { Directive, ElementRef, HostBinding, Input, NgZone, Optional, Self } from \"@angular/core\";\nimport { NgControl, Validators } from \"@angular/forms\";\n\nimport { BitFormFieldControl, InputTypes } from \"../form-field/form-field-control\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"input[bitInput], select[bitInput], textarea[bitInput]\",\n  providers: [{ provide: BitFormFieldControl, useExisting: BitInputDirective }],\n})\nexport class BitInputDirective implements BitFormFieldControl {\n  @HostBinding(\"class\") @Input() get classList() {\n    return [\n      \"tw-block\",\n      \"tw-w-full\",\n      \"tw-px-3\",\n      \"tw-py-1.5\",\n      \"tw-bg-background-alt\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      this.hasError ? \"tw-border-danger-500\" : \"tw-border-secondary-500\",\n      \"tw-text-main\",\n      \"tw-placeholder-text-muted\",\n      // Rounded\n      \"tw-rounded-none\",\n      \"first:tw-rounded-l\",\n      \"last:tw-rounded-r\",\n      // Focus\n      \"focus:tw-outline-none\",\n      \"focus:tw-border-primary-700\",\n      \"focus:tw-ring-1\",\n      \"focus:tw-ring-inset\",\n      \"focus:tw-ring-primary-700\",\n      \"focus:tw-z-10\",\n      \"disabled:tw-bg-secondary-100\",\n    ].filter((s) => s != \"\");\n  }\n\n  @HostBinding() @Input() id = `bit-input-${nextId++}`;\n\n  @HostBinding(\"attr.aria-describedby\") ariaDescribedBy: string;\n\n  @HostBinding(\"attr.aria-invalid\") get ariaInvalid() {\n    return this.hasError ? true : undefined;\n  }\n\n  @HostBinding(\"attr.type\") @Input() type?: InputTypes;\n\n  @HostBinding(\"attr.spellcheck\") @Input() spellcheck?: boolean;\n\n  @HostBinding()\n  @Input()\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value: any) {\n    this._required = value != null && value !== false;\n  }\n  private _required: boolean;\n\n  @Input() hasPrefix = false;\n  @Input() hasSuffix = false;\n\n  get labelForId(): string {\n    return this.id;\n  }\n\n  get hasError() {\n    return this.ngControl?.status === \"INVALID\" && this.ngControl?.touched;\n  }\n\n  get error(): [string, any] {\n    const key = Object.keys(this.ngControl.errors)[0];\n    return [key, this.ngControl.errors[key]];\n  }\n\n  constructor(\n    @Optional() @Self() private ngControl: NgControl,\n    private ngZone: NgZone,\n    private elementRef: ElementRef<HTMLInputElement>\n  ) {}\n\n  focus() {\n    this.ngZone.runOutsideAngular(() => {\n      const end = this.elementRef.nativeElement.value.length;\n      this.elementRef.nativeElement.setSelectionRange(end, end);\n      this.elementRef.nativeElement.focus();\n    });\n  }\n}\n","import { Input, HostBinding, Directive } from \"@angular/core\";\n\nexport type LinkType = \"primary\" | \"secondary\" | \"contrast\";\n\nconst linkStyles: Record<LinkType, string[]> = {\n  primary: [\n    \"!tw-text-primary-500\",\n    \"hover:!tw-text-primary-500\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:!tw-text-primary-500/60\",\n  ],\n  secondary: [\n    \"!tw-text-main\",\n    \"hover:!tw-text-main\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:!tw-text-muted/60\",\n  ],\n  contrast: [\n    \"!tw-text-contrast\",\n    \"hover:!tw-text-contrast\",\n    \"focus-visible:before:tw-ring-text-contrast\",\n    \"disabled:!tw-text-contrast/60\",\n  ],\n};\n\nconst commonStyles = [\n  \"tw-leading-none\",\n  \"tw-p-0\",\n  \"tw-font-semibold\",\n  \"tw-bg-transparent\",\n  \"tw-border-0\",\n  \"tw-border-none\",\n  \"tw-rounded\",\n  \"tw-transition\",\n  \"hover:tw-underline\",\n  \"hover:tw-decoration-1\",\n  \"disabled:tw-no-underline\",\n  \"disabled:tw-cursor-not-allowed\",\n  \"focus-visible:tw-outline-none\",\n  \"focus-visible:tw-underline\",\n  \"focus-visible:tw-decoration-1\",\n\n  // Workaround for html button tag not being able to be set to `display: inline`\n  // and at the same time not being able to use `tw-ring-offset` because of box-shadow issue.\n  // https://github.com/w3c/csswg-drafts/issues/3226\n  // Add `tw-inline`, add `tw-py-0.5` and use regular `tw-ring` if issue is fixed.\n  //\n  // https://github.com/tailwindlabs/tailwindcss/issues/3595\n  // Remove `before:` and use regular `tw-ring` when browser no longer has bug, or better:\n  // switch to `outline` with `outline-offset` when Safari supports border radius on outline.\n  // Using `box-shadow` to create outlines is a hack and as such `outline` should be preferred.\n  \"tw-relative\",\n  \"before:tw-content-['']\",\n  \"before:tw-block\",\n  \"before:tw-absolute\",\n  \"before:-tw-inset-x-[0.1em]\",\n  \"before:tw-rounded-md\",\n  \"before:tw-transition\",\n  \"focus-visible:before:tw-ring-2\",\n  \"focus-visible:before:tw-ring-text-contrast\",\n  \"focus-visible:tw-z-10\",\n];\n\n@Directive()\nabstract class LinkDirective {\n  @Input()\n  linkType: LinkType = \"primary\";\n}\n\n@Directive({\n  selector: \"a[bitLink]\",\n})\nexport class AnchorLinkDirective extends LinkDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\"before:-tw-inset-y-[0.125rem]\"]\n      .concat(commonStyles)\n      .concat(linkStyles[this.linkType] ?? []);\n  }\n}\n\n@Directive({\n  selector: \"button[bitLink]\",\n})\nexport class ButtonLinkDirective extends LinkDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\"before:-tw-inset-y-[0.25rem]\"]\n      .concat(commonStyles)\n      .concat(linkStyles[this.linkType] ?? []);\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-menu-divider\",\n  templateUrl: \"./menu-divider.component.html\",\n})\nexport class MenuDividerComponent {}\n","<div\n  class=\"tw-my-2 tw-border-0 tw-border-t tw-border-solid tw-border-t-secondary-500\"\n  role=\"separator\"\n></div>\n","import { FocusableOption } from \"@angular/cdk/a11y\";\nimport { Directive, ElementRef, HostBinding } from \"@angular/core\";\n\n@Directive({\n  selector: \"[bitMenuItem]\",\n})\nexport class MenuItemDirective implements FocusableOption {\n  @HostBinding(\"class\") classList = [\n    \"tw-block\",\n    \"tw-py-1\",\n    \"tw-px-4\",\n    \"!tw-text-main\",\n    \"!tw-no-underline\",\n    \"tw-cursor-pointer\",\n    \"tw-border-none\",\n    \"tw-bg-background\",\n    \"tw-text-left\",\n    \"hover:tw-bg-secondary-100\",\n    \"focus:tw-bg-secondary-100\",\n    \"focus:tw-z-50\",\n    \"focus:tw-outline-none\",\n    \"focus:tw-ring\",\n    \"focus:tw-ring-offset-2\",\n    \"focus:tw-ring-primary-700\",\n    \"active:!tw-ring-0\",\n    \"active:!tw-ring-offset-0\",\n  ];\n  @HostBinding(\"attr.role\") role = \"menuitem\";\n  @HostBinding(\"tabIndex\") tabIndex = \"-1\";\n\n  constructor(private elementRef: ElementRef) {}\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n}\n","import { Overlay, OverlayConfig, OverlayRef } from \"@angular/cdk/overlay\";\nimport { TemplatePortal } from \"@angular/cdk/portal\";\nimport {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { filter, mergeWith } from \"rxjs/operators\";\n\nimport { MenuComponent } from \"./menu.component\";\n\n@Directive({\n  selector: \"[bitMenuTriggerFor]\",\n})\nexport class MenuTriggerForDirective implements OnDestroy {\n  @HostBinding(\"attr.aria-expanded\") isOpen = false;\n  @HostBinding(\"attr.aria-haspopup\") get hasPopup(): \"menu\" | \"dialog\" {\n    return this.menu?.ariaRole || \"menu\";\n  }\n  @HostBinding(\"attr.role\") role = \"button\";\n\n  @Input(\"bitMenuTriggerFor\") menu: MenuComponent;\n\n  private overlayRef: OverlayRef;\n  private defaultMenuConfig: OverlayConfig = {\n    panelClass: \"bit-menu-panel\",\n    hasBackdrop: true,\n    backdropClass: \"cdk-overlay-transparent-backdrop\",\n    scrollStrategy: this.overlay.scrollStrategies.reposition(),\n    positionStrategy: this.overlay\n      .position()\n      .flexibleConnectedTo(this.elementRef)\n      .withPositions([\n        {\n          originX: \"start\",\n          originY: \"bottom\",\n          overlayX: \"start\",\n          overlayY: \"top\",\n        },\n        {\n          originX: \"end\",\n          originY: \"bottom\",\n          overlayX: \"end\",\n          overlayY: \"top\",\n        },\n      ])\n      .withLockedPosition(true)\n      .withFlexibleDimensions(false)\n      .withPush(true),\n  };\n  private closedEventsSub: Subscription;\n  private keyDownEventsSub: Subscription;\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    private viewContainerRef: ViewContainerRef,\n    private overlay: Overlay\n  ) {}\n\n  @HostListener(\"click\") toggleMenu() {\n    this.isOpen ? this.destroyMenu() : this.openMenu();\n  }\n\n  ngOnDestroy() {\n    this.disposeAll();\n  }\n\n  private openMenu() {\n    if (this.menu == null) {\n      throw new Error(\"Cannot find bit-menu element\");\n    }\n\n    this.isOpen = true;\n    this.overlayRef = this.overlay.create(this.defaultMenuConfig);\n\n    const templatePortal = new TemplatePortal(this.menu.templateRef, this.viewContainerRef);\n    this.overlayRef.attach(templatePortal);\n\n    this.closedEventsSub = this.getClosedEvents().subscribe((event: KeyboardEvent | undefined) => {\n      if (event?.key === \"Tab\") {\n        // Required to ensure tab order resumes correctly\n        this.elementRef.nativeElement.focus();\n      }\n      this.destroyMenu();\n    });\n    this.keyDownEventsSub =\n      this.menu.keyManager &&\n      this.overlayRef\n        .keydownEvents()\n        .subscribe((event: KeyboardEvent) => this.menu.keyManager.onKeydown(event));\n  }\n\n  private destroyMenu() {\n    if (this.overlayRef == null || !this.isOpen) {\n      return;\n    }\n\n    this.isOpen = false;\n    this.disposeAll();\n  }\n\n  private getClosedEvents(): Observable<any> {\n    const detachments = this.overlayRef.detachments();\n    const escKey = this.overlayRef.keydownEvents().pipe(\n      filter((event: KeyboardEvent) => {\n        const keys = this.menu.ariaRole === \"menu\" ? [\"Escape\", \"Tab\"] : [\"Escape\"];\n        return keys.includes(event.key);\n      })\n    );\n    const backdrop = this.overlayRef.backdropClick();\n    const menuClosed = this.menu.closed;\n\n    return detachments.pipe(mergeWith(escKey, backdrop, menuClosed));\n  }\n\n  private disposeAll() {\n    this.closedEventsSub?.unsubscribe();\n    this.overlayRef?.dispose();\n    this.keyDownEventsSub?.unsubscribe();\n  }\n}\n","<ng-template>\n  <div\n    (click)=\"closed.emit()\"\n    class=\"tw-flex tw-shrink-0 tw-flex-col tw-rounded tw-border tw-border-solid tw-border-secondary-500 tw-bg-background tw-bg-clip-padding tw-py-2\"\n    [attr.role]=\"ariaRole\"\n    [attr.aria-label]=\"ariaLabel\"\n    cdkTrapFocus\n    [cdkTrapFocusAutoCapture]=\"true\"\n  >\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","import { FocusKeyManager } from \"@angular/cdk/a11y\";\nimport {\n  Component,\n  Output,\n  TemplateRef,\n  ViewChild,\n  EventEmitter,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  Input,\n} from \"@angular/core\";\n\nimport { MenuItemDirective } from \"./menu-item.directive\";\n\n@Component({\n  selector: \"bit-menu\",\n  templateUrl: \"./menu.component.html\",\n  exportAs: \"menuComponent\",\n})\nexport class MenuComponent implements AfterContentInit {\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n  @Output() closed = new EventEmitter<void>();\n  @ContentChildren(MenuItemDirective, { descendants: true })\n  menuItems: QueryList<MenuItemDirective>;\n  keyManager?: FocusKeyManager<MenuItemDirective>;\n\n  @Input() ariaRole: \"menu\" | \"dialog\" = \"menu\";\n\n  @Input() ariaLabel: string;\n\n  ngAfterContentInit() {\n    if (this.ariaRole === \"menu\") {\n      this.keyManager = new FocusKeyManager(this.menuItems).withWrap();\n    }\n  }\n}\n","export type ButtonType = \"primary\" | \"secondary\" | \"danger\" | \"unstyled\";\n\nexport abstract class ButtonLikeAbstraction {\n  loading: boolean;\n  disabled: boolean;\n  setButtonType: (value: ButtonType) => void;\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n/**\n * Temporarily duplicate this pipe\n */\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { I18nPipe } from \"./i18n.pipe\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [I18nPipe],\n  exports: [CommonModule, I18nPipe],\n})\nexport class SharedModule {}\n","import { HostBinding, Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"th[bitCell], td[bitCell]\",\n})\nexport class CellDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\"tw-p-3\"];\n  }\n}\n","import { Directive, HostBinding, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"tr[bitRow]\",\n})\nexport class RowDirective {\n  @Input() alignContent: \"top\" | \"middle\" | \"bottom\" | \"baseline\" = \"baseline\";\n\n  get alignmentClass(): string {\n    switch (this.alignContent) {\n      case \"top\":\n        return \"tw-align-top\";\n      case \"middle\":\n        return \"tw-align-middle\";\n      case \"bottom\":\n        return \"tw-align-bottom\";\n      default:\n        return \"tw-align-baseline\";\n    }\n  }\n\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-border-0\",\n      \"tw-border-b\",\n      \"tw-border-secondary-300\",\n      \"tw-border-solid\",\n      \"hover:tw-bg-background-alt\",\n      \"last:tw-border-0\",\n      this.alignmentClass,\n    ];\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-table\",\n  templateUrl: \"./table.component.html\",\n})\nexport class TableComponent {}\n","<table class=\"tw-w-full tw-table-auto tw-leading-normal tw-text-main\">\n  <thead\n    class=\"tw-text-bold tw-border-0 tw-border-b-2 tw-border-solid tw-border-secondary-300 tw-text-muted\"\n  >\n    <ng-content select=\"[header]\"></ng-content>\n  </thead>\n  <tbody>\n    <ng-content select=\"[body]\"></ng-content>\n  </tbody>\n</table>\n","import { Component } from \"@angular/core\";\n\n/**\n * Component used for styling the tab header/background for both content and navigation tabs\n */\n@Component({\n  selector: \"bit-tab-header\",\n  host: {\n    class:\n      \"tw-h-16 tw-pl-4 tw-bg-background-alt tw-flex tw-items-end tw-border-0 tw-border-b tw-border-solid tw-border-secondary-300\",\n  },\n  template: `<ng-content></ng-content>`,\n})\nexport class TabHeaderComponent {}\n","import { Directive } from \"@angular/core\";\n\n/**\n * Directive used for styling the container for bit tab labels\n */\n@Directive({\n  selector: \"[bitTabListContainer]\",\n  host: {\n    class: \"tw-inline-flex tw-flex-wrap tw-leading-5\",\n  },\n})\nexport class TabListContainerDirective {}\n","import { FocusableOption } from \"@angular/cdk/a11y\";\nimport { Directive, ElementRef, HostBinding, Input } from \"@angular/core\";\n\n/**\n * Directive used for styling tab header items for both nav links (anchor tags)\n * and content tabs (button tags)\n */\n@Directive({ selector: \"[bitTabListItem]\" })\nexport class TabListItemDirective implements FocusableOption {\n  @Input() active: boolean;\n  @Input() disabled: boolean;\n\n  @HostBinding(\"attr.disabled\")\n  get disabledAttr() {\n    return this.disabled || null; // native disabled attr must be null when false\n  }\n\n  constructor(private elementRef: ElementRef) {}\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n\n  click() {\n    this.elementRef.nativeElement.click();\n  }\n\n  @HostBinding(\"class\")\n  get classList(): string[] {\n    return this.baseClassList\n      .concat(this.active ? this.activeClassList : [])\n      .concat(this.disabled ? this.disabledClassList : [])\n      .concat(this.textColorClassList);\n  }\n\n  /**\n   * Classes used for styling tab item text color.\n   * Separate text color class list required to override bootstrap classes in Web.\n   */\n  get textColorClassList(): string[] {\n    if (this.disabled) {\n      return [\"!tw-text-muted\", \"hover:!tw-text-muted\"];\n    }\n    if (this.active) {\n      return [\"!tw-text-primary-500\", \"hover:!tw-text-primary-700\"];\n    }\n    return [\"!tw-text-main\", \"hover:!tw-text-main\"];\n  }\n\n  get baseClassList(): string[] {\n    return [\n      \"tw-block\",\n      \"tw-relative\",\n      \"tw-py-2\",\n      \"tw-px-4\",\n      \"tw-font-semibold\",\n      \"tw-transition\",\n      \"tw-rounded-t\",\n      \"tw-border-0\",\n      \"tw-border-x\",\n      \"tw-border-t-4\",\n      \"tw-border-transparent\",\n      \"tw-border-solid\",\n      \"tw-bg-transparent\",\n      \"hover:tw-underline\",\n      \"focus-visible:tw-z-10\",\n      \"focus-visible:tw-outline-none\",\n      \"focus-visible:tw-ring-2\",\n      \"focus-visible:tw-ring-primary-700\",\n    ];\n  }\n\n  get disabledClassList(): string[] {\n    return [\"!tw-bg-secondary-100\", \"!tw-no-underline\", \"tw-cursor-not-allowed\"];\n  }\n\n  get activeClassList(): string[] {\n    return [\n      \"tw--mb-px\",\n      \"tw-border-x-secondary-300\",\n      \"tw-border-t-primary-500\",\n      \"tw-border-b\",\n      \"tw-border-b-background\",\n      \"tw-bg-background\",\n      \"hover:tw-border-t-primary-700\",\n      \"focus-visible:tw-border-t-primary-700\",\n      \"focus-visible:!tw-text-primary-700\",\n    ];\n  }\n}\n","import { FocusableOption } from \"@angular/cdk/a11y\";\nimport { AfterViewInit, Component, HostListener, Input, OnDestroy, ViewChild } from \"@angular/core\";\nimport { IsActiveMatchOptions, RouterLinkActive } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { TabListItemDirective } from \"../shared/tab-list-item.directive\";\n\nimport { TabNavBarComponent } from \"./tab-nav-bar.component\";\n\n@Component({\n  selector: \"bit-tab-link\",\n  templateUrl: \"tab-link.component.html\",\n})\nexport class TabLinkComponent implements FocusableOption, AfterViewInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n\n  @ViewChild(TabListItemDirective) tabItem: TabListItemDirective;\n  @ViewChild(\"rla\") routerLinkActive: RouterLinkActive;\n\n  readonly routerLinkMatchOptions: IsActiveMatchOptions = {\n    queryParams: \"ignored\",\n    matrixParams: \"ignored\",\n    paths: \"subset\",\n    fragment: \"ignored\",\n  };\n\n  @Input() route: string | any[];\n  @Input() disabled = false;\n\n  @HostListener(\"keydown\", [\"$event\"]) onKeyDown(event: KeyboardEvent) {\n    if (event.code === \"Space\") {\n      this.tabItem.click();\n    }\n  }\n\n  get active() {\n    return this.routerLinkActive?.isActive ?? false;\n  }\n\n  constructor(private _tabNavBar: TabNavBarComponent) {}\n\n  focus(): void {\n    this.tabItem.focus();\n  }\n\n  ngAfterViewInit() {\n    // The active state of tab links are tracked via the routerLinkActive directive\n    // We need to watch for changes to tell the parent nav group when the tab is active\n    this.routerLinkActive.isActiveChange\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((_) => this._tabNavBar.updateActiveLink());\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<a\n  bitTabListItem\n  [routerLink]=\"disabled ? null : route\"\n  routerLinkActive\n  [routerLinkActiveOptions]=\"routerLinkMatchOptions\"\n  #rla=\"routerLinkActive\"\n  [active]=\"rla.isActive\"\n  [disabled]=\"disabled\"\n  [attr.aria-disabled]=\"disabled\"\n  ariaCurrentWhenActive=\"page\"\n  role=\"link\"\n>\n  <ng-content></ng-content>\n</a>\n","import { FocusKeyManager } from \"@angular/cdk/a11y\";\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  forwardRef,\n  Input,\n  QueryList,\n} from \"@angular/core\";\n\nimport { TabLinkComponent } from \"./tab-link.component\";\n\n@Component({\n  selector: \"bit-tab-nav-bar\",\n  templateUrl: \"tab-nav-bar.component.html\",\n})\nexport class TabNavBarComponent implements AfterContentInit {\n  @ContentChildren(forwardRef(() => TabLinkComponent)) tabLabels: QueryList<TabLinkComponent>;\n  @Input() label = \"\";\n\n  /**\n   * Focus key manager for keeping tab controls accessible.\n   * https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tablist_role#keyboard_interactions\n   */\n  keyManager: FocusKeyManager<TabLinkComponent>;\n\n  ngAfterContentInit(): void {\n    this.keyManager = new FocusKeyManager(this.tabLabels)\n      .withHorizontalOrientation(\"ltr\")\n      .withWrap()\n      .withHomeAndEnd();\n  }\n\n  updateActiveLink() {\n    // Keep the keyManager in sync with active tabs\n    const items = this.tabLabels.toArray();\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].active) {\n        this.keyManager.updateActiveItem(i);\n      }\n    }\n  }\n}\n","<bit-tab-header>\n  <nav bitTabListContainer [attr.aria-label]=\"label\" (keydown)=\"keyManager.onKeydown($event)\">\n    <ng-content></ng-content>\n  </nav>\n</bit-tab-header>\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + (chunkId === 768 ? \"encrypt-worker\" : chunkId) + \".\" + {\"167\":\"e46b81edf723a2a3e5f6\",\"182\":\"0213c9ca535f6fe6aef1\",\"271\":\"c8b1e1a8d5e6f6fc6f9a\",\"584\":\"238f402a694e2a33f299\",\"604\":\"bb5ea11234bcc9ba2061\",\"612\":\"4f56141adf765ea17600\",\"754\":\"8dc86c47e64d7376e1c7\",\"768\":\"f4230c205b1bc7d3b0a1\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t148: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_web_vault\"] = self[\"webpackChunk_bitwarden_web_vault\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [734], () => (__webpack_require__(58512)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","inProgress","dataWebpackPrefix","RegisterFormModule","BaseAcceptComponent","constructor","router","platformUtilService","i18nService","route","stateService","loading","authed","requiredParameters","failedShortMessage","failedMessage","ngOnInit","this","queryParams","pipe","subscribe","qParams","error","some","e","errorMessage","getIsAuthenticated","email","authedHandler","message","unauthedHandler","t","showToast","timeout","navigate","EventView","data","humanReadableMessage","appIcon","appName","userId","userName","userEmail","date","ip","type","installationId","systemUser","BaseEventsComponent","eventService","exportService","platformUtilsService","logService","fileDownloadService","loaded","dirtyDates","defaultDates","getDefaultDateFilters","start","end","exportEvents","appApiPromiseUnfulfilled","dates","parseDates","exportPromise","export","loadEvents","clearExisting","events","promise","loadAndParseEvents","continuationToken","refreshPromise","morePromise","result","length","concat","startDate","endDate","response","requestEvents","Promise","all","map","r","actingUserId","eventInfo","getEventInfo","user","getUserName","name","ipAddress","formatDateFilters","getEventExport","fileName","getFileName","exportFileName","download","blobData","blobOptions","UserConfirmComponent","cryptoService","onConfirmedUser","dontAskAgain","publicKey","fingerprint","getFingerprint","buffer","join","submit","setAutoConfirmFingerprints","emit","BasePeopleComponent","apiService","searchService","validationService","modalService","searchPipe","userNamePipe","statusMap","Map","users","pagedUsers","allUsers","activeUsers","didScroll","pageSize","pagedUsersCount","allCount","invitedCount","has","userStatusType","Invited","get","acceptedCount","Accepted","confirmedCount","Confirmed","revokedCount","Revoked","showConfirmUsers","showBulkConfirmUsers","load","getUsers","clear","status","set","sort","forEach","u","push","filter","selectAll","resetPaging","loadMore","pagedLength","pagedSize","slice","checkUser","select","checked","filteredUsers","transform","searchText","selectCount","i","invite","edit","removeUserConfirmationDialog","showDialog","remove","actionPromise","deleteUser","id","removeUser","showError","revoke","revokeWarningMessage","revokeUser","restore","restoreUser","reinvite","reinviteUser","confirm","confirmUser","self","mapIndex","indexOf","splice","updateUser","publicKeyResponse","getUserPublicKey","autoConfirm","getAutoConfirmFingerPrints","modal","openViewRef","confirmModalRef","comp","formPromise","close","info","isSearching","isSearchable","isPaging","searching","getCheckedUsers","index","DynamicAvatarComponent","accountUpdateService","border","size","destroy$","text","toUpperCase","color$","avatarUpdate$","ngOnDestroy","next","complete","NotPremiumDirective","templateRef","viewContainer","getCanAccessPremium","createEmbeddedView","premiumRequired","PremiumBadgeComponent","messagingService","send","keyConnectorService","userVerificationService","usesKeyConnector","disableRequestOTP","sentCode","secret","getUsesKeyConnector","processChanges","value","valueChanges","requestOTP","writeValue","obj","setValue","registerOnChange","fn","onChange","registerOnTouched","setDisabledState","isDisabled","disable","enable","UserVerificationComponent","provide","multi","useExisting","opacity","EventService","policyService","policies$","policies","d","Date","getFullYear","getMonth","getDate","setDate","toDateTimeLocalString","filterStart","filterEnd","isNaN","getTime","Error","toISOString","ev","options","EventOptions","appInfo","getAppInfo","deviceType","getEventMessage","msg","humanReadableMsg","formatCipherId","getShortId","cipherId","formatCollectionId","collectionId","formatGroupId","groupId","formatOrgUserId","organizationUserId","formatPolicyId","policy","p","policyId","p1","formatProviderUserId","providerUserId","formatProviderOrganizationId","providerOrganizationId","shortId","organizationId","cipherInfo","a","makeAnchor","setAttribute","outerHTML","providerId","document","createElement","title","innerHTML","substring","pad","getHours","getMinutes","num","norm","Math","floor","abs","PolicyListService","addPolicies","getPolicies","RouterService","activatedRoute","titleService","previousUrl","undefined","currentUrl","url","event","child","firstChild","titleId","snapshot","rawTitle","updateUrl","doNotSaveUrl","newTitle","setTitle","setPreviousUrl","getPreviousUrl","AccountSettings","vaultTimeout","Account","init","super","settings","Object","assign","StateService","storageService","secureStorageService","memoryStorageService","stateMigrationService","stateFactory","useAccountCache","addAccount","account","getEncryptedCiphers","reconcileOptions","defaultInMemoryOptions","setEncryptedCiphers","getEncryptedCollections","setEncryptedCollections","getEncryptedFolders","setEncryptedFolders","getEncryptedSends","setEncryptedSends","getLastSync","setLastSync","FooterComponent","year","toString","version","getApplicationVersion","FrontendLayoutComponent","body","classList","add","NavbarComponent","tokenService","providerService","syncService","organizationService","selfHosted","providers","isSelfHost","getName","getEmail","getUserId","trim","fullSync","getAll","organizations$","orgs","lock","logOut","ProductSwitcherContentComponent","products$","combineLatest","paramMap","routeOrg","find","o","smOrg","canAccessSecretsManager","products","pm","icon","appRoute","marketingRoute","sm","bento","other","ProductSwitcherComponent","changeDetector","isEnabled","buttonType","ngAfterViewInit","detectChanges","ProductSwitcherModule","OrganizationCreateModule","changedBusinessOwned","OrganizationInformationComponent","nameOnly","createOrganization","isProvider","acceptingSponsorship","OrganizationPermissionsGuard","canActivate","state","org","params","createUrlTree","isOwner","enabled","permissionsCallback","organizationPermissions","root","queryParamMap","itemId","OrganizationRedirectGuard","customRedirect","autoRedirectCallback","redirectPath","OrganizationSwitcherComponent","activeOrganization","OrganizationLayoutComponent","_destroy","Subject","organization$","takeUntil","mergeMap","canShowSettingsTab","organization","canShowManageTab","canShowMembersTab","canShowGroupsTab","canShowReportsTab","canShowBillingTab","getReportTabLabel","useEvents","OrganizationUserBulkConfirmRequest","keys","BulkConfirmComponent","organizationUserService","publicKeys","fingerprints","statuses","done","excludedUsers","isAccepted","getPublicKeys","entry","key","getCryptoKey","userIdsWithKeys","encryptedKey","rsaEncrypt","encryptedString","postConfirmRequest","postOrganizationUsersPublicKey","getOrgKey","request","postOrganizationUserBulkConfirm","BulkRemoveComponent","deleteUsers","deleteManyOrganizationUsers","removeUsersWarning","BulkStatusComponent","EntityEventsComponent","showUser","orgUsersUserIdMap","orgUsersIdMap","getAllUsers","entity","getEventsProviderUser","entityId","getEventsOrganizationUser","getEventsCipher","PolicyRequest","BasePolicy","display","BasePolicyComponent","policyResponse","loadData","patchValue","buildRequestData","buildRequest","policiesEnabledMap","resolve","PoliciesModule","DisableSendPolicy","description","component","DisableSendPolicyComponent","MasterPasswordPolicy","MasterPasswordPolicyComponent","formBuilder","group","minComplexity","minLength","requireUpper","requireLower","requireNumbers","requireSpecial","showKeyConnectorInfo","passwordScores","keyConnectorEnabled","PasswordGeneratorPolicy","PasswordGeneratorPolicyComponent","defaultType","useUpper","useLower","useNumbers","useSpecial","minNumbers","minSpecial","minNumberWords","capitalize","includeNumber","defaultTypes","PersonalOwnershipPolicy","PersonalOwnershipPolicyComponent","RequireSsoPolicy","RequireSsoPolicyComponent","useSso","singleOrgEnabled","ResetPasswordPolicy","ResetPasswordPolicyComponent","useResetPassword","autoEnrollEnabled","SendOptionsPolicy","SendOptionsPolicyComponent","disableHideEmail","SingleOrgPolicy","SingleOrgPolicyComponent","TwoFactorAuthenticationPolicy","TwoFactorAuthenticationPolicyComponent","PolicyEditComponent","policyApiService","componentFactoryResolver","cdr","onSavedPolicy","policyType","factory","resolveComponentFactory","policyComponent","policyFormRef","createComponent","instance","getPolicy","statusCode","Enabled","putPolicy","PoliciesComponent","policyListService","parent","first","policyIdFromEvents","orgPolicy","orgPolicies","op","editModalRef","OrganizationUpdateRequest","CountBasedLocalizationKey","singular","plural","getKey","count","OrganizationContentSummaryItem","localizationKeyOptions","localizationKey","OrganizationContentSummary","totalItemCount","itemCountByType","DeleteOrganizationComponent","cipherService","organizationApiService","deleteOrganizationRequestType","organizationContentSummary","onSuccess","masterPassword","then","delete","organizationName","buildOrganizationContentSummary","organizationItems","getAllFromApiForOrganization","item","deletedDate","cipherType","getOrganizationItemCountByType","getOrganizationItemLocalizationKeysByType","items","viewApiKey","rotateApiKey","AccountComponent","canManageBilling","canUseApi","useApi","businessName","billingEmail","identifier","hasPublicAndPrivateKeys","orgShareKey","orgKeys","makeKeyPair","save","deleteOrganization","deleteModalRef","purgeVault","purgeModalRef","apiKeyModalRef","keyType","postKey","getOrCreateApiKey","bind","scope","grantType","apiKeyTitle","apiKeyWarning","apiKeyDescription","rotateApiKeyModalRef","isRotation","recoveryCode","manage","TwoFactorSetupComponent","duoComp","openModal","duoModalRef","onUpdated","updateStatus","getTwoFactorProviders","getTwoFactorOrganizationProviders","filterProvider","routes","path","children","pathMatch","canManagePolicies","canAccessImportExport","canManageSso","canManageScim","loadChildren","m","OrganizationImportExportModule","OrganizationSettingsRoutingModule","OrganizationSettingsModule","SettingsComponent","cipher","copy","generatePassword","checkPassword","togglePasswordCount","upgradeOrganization","removeUri","launch","loginUriMatchChanged","addUri","togglePassword","toggleCardNumber","toggleCardCode","organizationChanged","viewHistory","repromptChanged","toggleFavorite","AddEditComponent","folderService","auditService","collectionService","totpService","passwordGenerationService","eventCollectionService","passwordRepromptService","originalCipher","componentName","allowOwnershipAssignment","ownershipOptions","allowPersonal","cloneMode","canEditAnyCollection","editMode","loadCollections","collections","loadCipher","getCipherAdmin","encryptCipher","encrypt","saveCipher","putCipherAdmin","postCipherAdmin","deleteCipher","isDeleted","deleteCipherAdmin","putDeleteCipherAdmin","EmergencyAccessAcceptRequest","AcceptEmergencyComponent","token","postEmergencyAccessAccept","replace","OrganizationUserAcceptRequest","AcceptOrganizationComponent","getOrganizationInvitation","redirect","prepareOrganizationInvitation","prepareAcceptRequest","postOrganizationUserAccept","setOrganizationInvitation","performResetPasswordAutoEnroll","getKeys","encKey","getEncKey","resetPasswordKey","policyList","getPoliciesByToken","mapPoliciesFromToken","getResetPasswordPolicyOptions","orgName","PasswordHintRequest","loginService","successRoute","postPasswordHint","onSuccessfulSubmit","HintComponent","vaultTimeoutService","vaultTimeoutSettingsService","environmentService","ngZone","pin","showPassword","pinLock","webVaultHostname","invalidPinAttempts","activeAccount$","concatMap","handlePinRequiredUnlock","handleMasterPasswordRequiredUnlock","unlockBiometric","biometricLock","success","doContinue","input","getElementById","isStable","focus","onStable","take","doUnlockWithPin","failed","kdf","getKdfType","kdfIterations","getKdfIterations","pinSet","makeKeyFromPin","getDecryptedPinProtected","protectedPin","getProtectedPin","decryptToUtf8","setKeyAndContinue","doUnlockWithMasterPassword","makeKey","passwordValid","getKeyHash","compareAndUpdateKeyHash","serverKeyHash","hashPassword","masterPasswordHash","postAccountVerifyPassword","localKeyHash","setKeyHash","decPin","pinKey","makePinKey","setDecryptedPinProtected","setKey","setEverBeenUnlocked","disableFavicon","getDisableFavicon","setDisableFavicon","isPinLockSet","supportsBiometric","isBiometricLockSet","hasKeyStored","supportsSecureStorage","biometricText","getBiometricText","hideInput","webVaultUrl","getWebVaultUrl","vaultUrl","LockComponent","routerService","navigateByUrl","CaptchaIFrame","win","iframeId","successCallback","errorCallback","infoCallback","parseFunction","parseMessage","connectorLink","stop","sendMessage","iframe","src","contentWindow","postMessage","base64Encode","str","btoa","encodeURIComponent","match","String","fromCharCode","cleanup","removeEventListener","createParams","URLSearchParams","JSON","stringify","location","href","v","initComponent","addEventListener","validMessage","parts","split","origin","parsedMessage","parse","height","width","siteKey","locale","translationLocale","AuthRequestType","CaptchaProtectedComponent","captchaSiteKey","captchaToken","setupCaptcha","captcha","window","showCaptcha","handleCaptchaRequired","PasswordLogInCredentials","twoFactor","SsoLogInCredentials","code","codeVerifier","redirectUrl","orgId","PasswordlessLogInCredentials","accessCode","authRequestId","decKey","localPasswordHash","PasswordlessCreateAuthRequest","deviceIdentifier","fingerprintPhrase","startPasswordlessLogin","LoginWithDeviceComponent","cryptoFunctionService","appIdService","authService","anonymousHubService","showResendNotification","twoFactorRoute","forcePasswordResetRoute","getCurrentNavigation","getPushNotifcationObs$","confirmResponse","buildAuthRequest","reqResponse","postAuthRequest","passwordlessRequest","createHubConnection","setTimeout","stopHubConnection","requestId","getAuthResponse","requestApproved","credentials","buildLoginCredntials","loginResponse","logIn","requiresTwoFactor","onSuccessfulLoginTwoFactorNavigate","forcePasswordReset","onSuccessfulLoginForceResetNavigate","saveEmailSettings","onSuccessfulLogin","onSuccessfulLoginNavigate","authRequestKeyPair","rsaGenerateKeyPair","getAppId","AuthenticateAndUnlock","rsaDecrypt","decMasterPasswordHash","localHashedPassword","formValidationErrorService","validatedEmail","paramEmailSet","formGroup","rememberEmail","loggedEmail","selfHostedDomain","hasBaseUrl","queryParamsEmail","setEmail","getRememberedEmail","getRememberEmail","markAllAsTouched","invalid","errorText","getErrorToastMessage","setFormValues","launchSsoBrowser","clientId","ssoRedirectUri","passwordOptions","uppercase","lowercase","numbers","special","ssoCodeVerifier","codeVerifierHash","hash","codeChallenge","setSsoState","setSsoCodeVerifier","webUrl","launchUri","validateEmail","controls","markAsTouched","toggleValidateEmail","getLoginWithDevice","reset","setRememberEmail","getFormValidationErrors","shift","errorName","errorTag","charAt","controlName","res","getKnownDevice","showLoginWithDevice","goToHint","LoginComponent","showResetPasswordAutoEnrollWarning","showPasswordless","goAfterLogIn","premium","plan","sponsorshipToken","resetPasswordPolicy","masterPasswordPolicyOptions$","enforcedPasswordPolicyOptions","strengthResult","passwordStrength","getPasswordStrengthUserInput","masterPasswordScore","score","evaluateMasterPassword","policiesData","clearValues","setRememberedEmail","clearValidators","updateValueAndValidity","valid","userInput","atPosition","substr","toLowerCase","DeleteRecoverRequest","RecoverDeleteComponent","postAccountRecoverDelete","TwoFactorRecoveryRequest","RecoverTwoFactorComponent","makePreloginKey","postTwoFactorRecover","continuing","leaving","getManagingOrganization","convert","migrateUser","removeConvertAccountRequired","leave","RemovePasswordComponent","OrganizationUserResetPasswordEnrollmentRequest","SetPasswordRequest","masterPasswordHint","orgIdentifier","enforcedPolicyOptions","strongPassword","setupSubmitActions","makeEncKey","remakeEncKey","performSubmitActions","masterPasswordRetype","passwordStrengthResult","getStrengthResult","getPasswordScoreText","color","syncLoading","hint","resetPasswordAutoEnroll","getAutoEnrollStatus","resetPasswordEnabled","getMasterPasswordPoliciesForInvitedUsers","setPassword","onSetPasswordSuccess","userEncKey","resetRequest","putOrganizationUserResetPasswordEnrollment","onSuccessfulChangePassword","confirmField","setKdfType","setKdfIterations","setEncKey","setEncPrivateKey","PasswordStrengthComponent","showText","passwordScoreColor","scoreWidth","password","updatePasswordStrength","masterPasswordScoreColor","masterPasswordScoreText","ngOnChanges","masterPasswordStrengthTimeout","setPasswordScoreText","clearTimeout","SetPasswordComponent","loggingIn","changePasswordRoute","getSsoCodeVerifier","getSsoState","checkState","getOrgIdentifierFromState","redirectUri","returnUri","includeUserIdentifier","initiateSsoFormPromise","preValidateSso","authorizeUrl","buildAuthorizeUrl","sameWindow","getIdentityUrl","userIdentifier","getSsoUserIdentifier","orgIdFromState","sso","resetMasterPassword","onSuccessfulLoginChangePasswordNavigate","stateSplit","checkStateSplit","SsoComponent","storedIdentifier","getSsoOrgIdentifier","setSsoOrganizationIdentifier","cookie","ReferenceEventRequest","VerticalStep","subLabel","applyBorder","VerticalStepContentComponent","onSelectStep","disabled","selected","selectStep","selectStepByIndex","VerticalStepperComponent","activeClass","isNextButtonHidden","steps","selectedIndex","isStepDisabled","_","completed","RegisterRequest","referenceData","captchaResponse","InputsFieldMatch","static","matchTo","control","inputsMatchError","inputsDoesntMatchError","field","fieldMatchTo","fieldCtrl","fieldMatchToCtrl","setErrors","RegisterComponent","isInTrialFlow","createdAccount","showTerms","showErrorSummary","confirmMasterPassword","validateInputsDoesntMatch","acceptPolicies","acceptPoliciesValidation","validator","validateFormInputsMatch","accountCreated","captchaBypassToken","registerResponse","registerAccount","buildRegisterRequest","successful","captchaRequired","required","validateRegistration","hasError","isValid","hashedPassword","orgInvite","postRegister","RegisterFormComponent","referenceDataValue","queryParamEmail","LogoForbesComponent","LogoUSNewsComponent","EnterpriseContentComponent","TeamsContentComponent","ConfirmationDetailsComponent","BillingComponent","previousStep","additionalSeats","product","orgInfoForm","stepBack","changedCountry","DefaultContentComponent","Enterprise1ContentComponent","Enterprise2ContentComponent","Teams1ContentComponent","Teams2ContentComponent","LogoCnetComponent","CnetEnterpriseContentComponent","CnetIndividualContentComponent","CnetTeamsContentComponent","AbmEnterpriseContentComponent","AbmTeamsContentComponent","billingSuccess","stepSelectionChange","navigateToOrgVault","navigateToOrgInvite","ValidOrgParams","ValidLayoutParams","TrialInitiationComponent","titleCasePipe","orgInfoSubLabel","orgLabel","billingSubLabel","layout","accountCreateOnly","useTrialStepper","trialFlowOrgs","teams","enterprise","families","routeFlowOrgs","free","individual","layouts","orgInfoFormGroup","validators","updateOn","referenceDataId","referenceId","pop","reference","values","includes","flow","setupFamilySponsorship","previouslySelectedIndex","verticalStepper","subLabelText","previous","WebAuthnIFrame","webAuthnNewTab","btnText","append","allow","URL","twoFactorService","remember","webAuthnReady","providerType","selectedProviderType","webAuthnSupported","webAuthn","twoFactorEmail","loginRoute","supportsWebAuthn","webAuthnAllow","authing","getProviders","needsLock","getDefaultProvider","cleanupWebAuthn","providerData","authWebAuthn","host","Host","sig_request","Signature","submit_callback","f","sig","querySelector","Email","sendEmail","doSubmit","logInTwoFactor","doToast","emailPromise","authRequestAccessCode","postTwoFactorEmail","authingWithPassword","authingWithSso","authingWithUserApiKey","authingWithPasswordless","Window","onProviderSelected","onRecoverSelected","getSupportedProviders","choose","recover","TwoFactorOptionsComponent","TwoFactorComponent","anotherMethod","twoFactorOptionsModal","provider","PasswordRequest","cancel","currentMasterPassword","verifyUser","newMasterPasswordHash","postPassword","UpdatePasswordComponent","OrganizationUserResetPasswordRequest","UpdateTempPasswordRequest","newKey","newPasswordHash","newEncKey","putUpdateTempPassword","UpdateTempPasswordComponent","VerifyEmailRequest","VerifyEmailTokenComponent","postAccountVerifyEmailToken","refreshIdentityToken","VerifyDeleteRecoverRequest","VerifyRecoverDeleteComponent","postAccountRecoverDeleteToken","HomeGuard","authStatus","getAuthStatus","CollectionPermission","AccessItemType","UserLayoutComponent","findSortedIndex","sortedArray","val","compareFn","low","high","mid","c","FormSelectionList","controlFactory","allItems","selectedItems","deselectedItems","formArray","selectItems","ids","initialValue","selectItem","deselectItems","deselectItem","deselectAll","findIndex","selectedOption","sortedInsertIndex","newControl","insert","deselectedOption","removeAt","populateItems","selectedItem","nextId","MultiSelectComponent","ngControl","removeSelectedItems","searchInputId","onItemsConfirmed","valueAccessor","placeholder","loadingText","isSelected","onDropdownClosed","updatedBaseItems","baseItems","notifyOnChange","notifyOnTouched","onBlur","ariaDescribedBy","_ariaDescribedBy","searchInput","nativeElement","labelForId","_required","hasValidator","touched","errors","UserTypePipe","unknownText","handleBlur","selectionList","PermissionMode","AccessSelectorComponent","permissionControl","initialPermission","fg","permission","readonly","accessAllItems","permissionMode","Edit","_itemComparator","itemType","permissionList","perm","View","labelId","ViewExceptPass","EditExceptPass","_permissionMode","Hidden","getRawValue","itemIcon","notifyOnTouch","pauseChangeNotification","Array","isArray","Collection","Group","Member","permissionLabelId","accessAllLabelId","canEditItemPermission","b","collator","compare","listName","labelName","AccessSelectorModule","readOnly","hidePasswords","check","CollectionAddEditComponent","onSavedCollection","onDeletedCollection","accessGroups","groups","useGroups","groupsResponse","getGroups","orgKey","collection","getCollectionDetails","externalId","s","g","accessAll","putCollection","postCollection","deletePromise","deleteCollection","selectedChanged","filterSelected","EntityUsersComponent","search","onEditedUsers","organizationUserType","organizationUserStatusType","showSelected","selectedCount","loadUsers","searchedUsers","scrollViewportStyle","getGroupUsers","getCollectionUsers","selections","putGroupUsers","putCollectionUsers","dialogRef","OrgUpgradeDialogComponent","CollectionsComponent","dialogService","canCreate","pagedCollectionsCount","canCreateNewCollections","decryptCollections","decryptMany","canViewAssignedCollections","getUserCollections","assignedCollections","canViewAllCollections","getCollections","pagedCollections","canEdit","canDelete","planProductType","maxCollections","dialogBodyText","open","orgCanManageBilling","addEditModalRef","canSave","removeCollection","usersModalRef","entityName","canEditAssignedCollections","canDeleteAnyCollection","canDeleteAssignedCollections","GroupRequest","GroupAddEditComponent","onSavedGroup","onDeletedGroup","access","getGroupDetails","putGroup","postGroup","deleteGroup","GroupsComponent","pagedGroupsCount","pagedGroups","removeGroup","ManageComponent","OrganizationUserConfirmRequest","BulkRestoreRevokeComponent","config","isRevoking","bulkTitle","titleKey","performBulkUserAction","bulkMessage","userIds","revokeManyOrganizationUsers","restoreManyOrganizationUsers","ResetPasswordComponent","onPasswordReset","newPassword","loggedOutWarningName","getOptions","passwordStrengthComponent","copyToClipboard","getOrganizationUserResetPasswordDetails","kdfType","encryptedPrivateKey","orgSymKey","decPrivateKey","decryptToBytes","decValue","putOrganizationUserResetPassword","OrganizationUserUpdateRequest","OrganizationUserInviteRequest","emails","NestedCheckboxComponent","onSavedUser","onDeletedUser","parentIndeterminate","parentChecked","checkboxes","every","pascalize","permissions","handleDependentPermissions","UserAddEditComponent","onRevokedUser","onRestoredUser","isRevoked","showCustom","manageAllCollectionsCheckboxes","createNewCollections","editAnyCollection","deleteAnyCollection","manageAssignedCollectionsCheckboxes","editAssignedCollections","deleteAssignedCollections","customUserTypeSelected","canUseCustomPermissions","useCustomPermissions","getOrganizationUser","setRequestPermissions","clearPermissions","manageResetPassword","manageUsers","inviteUser","deleteOrganizationUser","revokeOrganizationUser","restoreOrganizationUser","putOrganizationUser","Set","postOrganizationUserInvite","OrganizationUserUpdateGroupsRequest","groupIds","UserGroupsComponent","userGroups","getOrganizationUserGroups","ug","putOrganizationUserGroups","bulkConfirm","resetPassword","PeopleComponent","userType","orgResetPasswordPolicyEnabled","canManageUsersPassword","updateKeys","privateKey","viewEvents","postOrganizationUserReinvite","postOrganizationUserConfirm","allowResetPassword","orgUser","callingUserHasPermission","resetPasswordEnrolled","showEnrolledStatus","seats","groupsModalRef","bulkRemove","bulkRemoveModalRef","onClosedPromise","bulkRevoke","bulkRevokeOrRestore","bulkRestore","ref","allowMultipleModals","bulkReinvite","postManyOrganizationUserReinvite","showBulkStatus","bulkConfirmModalRef","eventsModalRef","resetPasswordModalRef","warningMessage","successfullMessage","childComponent","bulkStatusModalRef","onShown","keyedErrors","reduce","x","keyedFilteredUsers","hasOwnProperty","PipesModule","VaultService","calculateSearchBarLocalizationString","vaultFilter","selectedFolderId","selectedCollection","selectedOrganizationId","myVaultOnly","VaultSharedModule","useClass","VaultFilterModule","VaultFilter","selectedFolder","refreshCollectionsAndFolders","resetFilter","selectedCollectionId","resetOrganization","buildFilter","cipherPassesFilter","favorite","folderId","collectionIds","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","emergencyAccessId","hasUpdatedKey","fileEl","files","saveCipherAttachment","cipherDomain","decrypt","attachment","deleteCipherAttachment","attachments","downloading","canAccessAttachments","getAttachmentData","getSingleMessage","fetch","Request","cache","encBuf","decBuf","decryptFromBytes","hasEncKey","canAccessPremium","reuploadCipherAttachment","admin","saveAttachmentRawWithServer","foundAttachment","a2","file","saveAttachmentWithServer","attachmentId","deleteAttachmentWithServer","reupload","viewOnly","showFixOldAttachments","AttachmentsComponent","deleteCipherAttachmentAdmin","allowSelectNone","onSavedCollections","loadCipherCollections","selectedCollectionIds","saveCollections","getAllDecrypted","saveCollectionsWithServer","putCipherCollectionsAdmin","vaultFilterService","activeFilter","hideFolders","hideCollections","hideFavorites","hideTrash","hideOrganizations","onFilterChange","onAddFolder","onEditFolder","isLoaded","displayCollections","fullList","collapsedFilterNodes","buildCollapsedFilterNodes","organizations","buildOrganizations","activePersonalOwnershipPolicy","checkForPersonalOwnershipPolicy","activeSingleOrganizationPolicy","checkForSingleOrganizationPolicy","folders$","buildNestedFolders","initCollections","buildCollections","toggleFilterNodeCollapseState","node","storeCollapsedFilterNodes","applyFilter","reloadCollectionsAndFolders","pruneInvalidatedFilterSelections","reloadOrganizations","addFolder","editFolder","folder","pruneInvalidFolderSelection","pruneInvalidCollectionSelection","firstValueFrom","hasId","hide","onNodeCollapseStateChange","collectionsGrouping","collectionNodes","nestedCollections","nestedList","show","isCollapsed","toggleCollapse","CollectionFilterComponent","foldersGrouping","folders","folderNodes","nestedFolders","FolderFilterComponent","cipherStatus","StatusFilterComponent","selectedCipherType","typesNode","cipherTypeEnum","TypeFilterComponent","organizationGrouping","displayMode","hasActiveFilter","applyOrganizationFilter","applyMyVaultFilter","clearFilter","EnrollMasterPasswordReset","modalRef","toastStringRef","verification","keyString","LinkSsoComponent","ngAfterContentInit","toggleResetPasswordEnrollment","unlinkSso","OrganizationOptionsComponent","allowEnrollmentChanges","usePolicies","deleteSsoUser","OrganizationFilterComponent","displayText","searchTextChanged","onSearchTextChanged","collapsedFilterNodes$","nodes","VaultFilterComponent","buildAdminCollections","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","ciphers","searchPlaceholder","deleted","accessEvents","searchPending","searchTimeout","deletedFilter","reload","refresh","indexedCiphers","doSearch","selectCipher","rightClickCipher","addCipher","addCipherOptions","searchCiphers","EllipsisPipe","limit","completeWords","ellipsis","lastIndexOf","OrganizationNameBadgeComponent","avatarService","onOrganizationClicked","isMe","loadColorFromState","textColor","emitOnOrganizationClicked","GetOrgNameFromIdPipe","profileName","clone","share","checkCipher","showAddNew","onAttachmentsClicked","onShareClicked","onCollectionsClicked","onCloneClicked","onOrganzationBadgeClicked","pagedCiphers","userHasPremiumAccess","noItemIcon","pagedCiphersCount","refreshing","uri","repromptCipher","permanent","restoreWithServer","typeI18nKey","aType","protectedFields","displayTotpCopyButton","login","totp","getCode","viewPassword","collect","getSelected","getSelectedIds","hasTotp","organizationUseTotp","deleteWithServer","softDeleteWithServer","hasOldAttachments","reprompt","showPasswordPrompt","VaultItemsComponent","onEventsClicked","allCiphers","indexCiphers","BulkDeleteComponent","cipherIds","onDeleted","deleteCiphersAdmin","deleteCiphers","deleteManyWithServer","softDeleteManyWithServer","deleteRequest","deleteManyCiphersAdmin","putDeleteManyCiphersAdmin","BulkMoveComponent","onMoved","folderViews$","moveManyWithServer","BulkRestoreComponent","onRestored","restoreManyWithServer","isChecked","BulkShareComponent","onShared","nonShareableCount","shareableCiphers","writeableCollections","allCollections","filterCollections","checkedCollectionIds","shareManyWithServer","bulkMove","bulkShare","BulkActionsComponent","bulkDelete","promptPassword","selectedIds","vaultItemsComponent","bulkDeleteModalRef","bulkRestoreModalRef","selectedCiphers","bulkShareModalRef","bulkMoveModalRef","BroadcasterSubscriptionId","VaultComponent","changeDetectorRef","broadcasterService","vaultService","trashCleanupWarning","firstLoaded","vaultFilterComponent","run","command","successfully","getCipherIdFromParams","editCipherId","queryParamsHandling","unsubscribe","applyVaultFilter","go","filterSearchText","editCipherAttachments","maxStorageGb","madeAttachmentChanges","attachmentsModalRef","onClosed","editCipherCollections","collectionsModalRef","editCipher","cipherAddEditModalRef","onSavedCipher","onDeletedCipher","onRestoredCipher","cloneCipher","relativeTo","replaceUrl","VaultRoutingModule","VaultModule","redirectTo","canManageUsers","canManageGroups","OrganizationReportingModule","OrganizationBillingModule","OrganizationsRoutingModule","SharedOrganizationModule","OrganizationModule","PlanSponsorshipType","AcceptFamilySponsorshipComponent","register","OrganizationSponsorshipRedeemRequest","FamiliesForEnterpriseSetupComponent","badToken","showNewOrganization","_selectedFamilyOrganizationId","organizationPlansComponent","onOrganizationCreateSuccess","postPreValidateSponsorshipToken","existingFamilyOrganizations$","selectedFamilyOrganizationId","planSponsorshipType","FamiliesForEnterprise","sponsoredOrganizationId","postRedeemSponsorship","SendAccessView","expirationDate","creatorIdentifier","SendAccess","buildDomainModel","model","decryptObj","SendAccessRequest","toggleText","copyText","AccessComponent","sendType","passwordRequired","unavailable","hideEmail","sendText","maskedText","sendId","downloadData","getSendFileDownloadData","accessRequest","downloadMethod","keyArray","passwordHash","pbkdf2","sendResponse","postSendAccess","sendAccess","makeSendKey","hidden","sendService","disableSend","expired","sends","filteredSends","hasSearched","policyAppliesToActiveUser$","policyAppliesToActiveUser","onSuccessfulLoad","applyTextSearch","removePassword","removePasswordWithServer","onSuccessfulRemovePassword","onSuccessfulDelete","link","getSendUrl","accessId","urlB64Key","clearSelections","selectedAll","selectType","selectedType","searchSends","BrowserPath","DateField","DatePreset","datePipe","onSavedSend","onDeletedSend","onCancelled","copyLink","emailVerified","alertShown","showOptions","typeOptions","sendLinkBaseUrl","isSafari","isDateTimeLocalSupported","isFirefox","setDates","deletionDate","getEmailVerified","loadSend","hasPassword","encryptSend","encSend","uploadPromise","saveWithServer","copySuccess","copyLinkToClipboard","typeChanged","toggleOptions","sendData","togglePasswordVisible","datesChanged","datesForm","selectedDeletionDatePreset","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","Custom","expirationDatePresets","Never","browserPath","Firefox","Safari","Default","formattedDeletionDate","now","miliseconds","setTime","formattedExpirationDate","safariDeletionTimePresetOptions","safariTimePresetOptions","DeletionDate","safariExpirationTimePresetOptions","ExpriationDate","nextWeek","setInitialFormValues","emitDates","onDeletionDatePresetSelect","clearExpiration","initialDeletionDate","toTimeString","initialExpirationDate","twentyFourHour","noon","midnight","ams","pms","h","hour","minutes","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","EffluxDatesComponent","editSend","addSend","SendComponent","sendAddEditModalRef","DeauthorizeSessionsComponent","postSecurityStamp","DeleteAccountComponent","accountApiService","deleteForm","deleteAccount","EmailTokenRequest","EmailRequest","ChangeEmailComponent","tokenSent","showTwoFactorEmailWarning","twoFactorProviders","newEmail","postEmail","postEmailToken","UpdateProfileRequest","culture","SelectableAvatarComponent","onFire","setSelection","ChangeAvatarComponent","changeColor","onSaved","defaultColorPalette","customColorSelected","customColor$","BehaviorSubject","customTextColor$","debounceTime","currentSelection","showCustomPicker","colorPickerElement","click","generateAvatarColor","profile","pushUpdate","selectedColorIndex","openChangeAvatar","ProfileComponent","getProfile","modalOpened","avatarModalRef","putProfile","showChangeEmail","deauthorizeSessions","deauthModalRef","CreateOrganizationComponent","orgPlansComponent","UpdateDomainsRequest","toggleExcluded","customize","DomainRulesComponent","custom","global","getSettingsDomains","equivalentDomains","globalEquivalentDomains","domains","excluded","globalDomain","excludedGlobalEquivalentDomains","d2","putSettingsDomains","indexTrackBy","EmergencyAccessAttachmentsComponent","EmergencyAddEditComponent","viewAttachments","EmergencyAccessViewComponent","postEmergencyAccessView","getAllCiphers","decCiphers","oldKeyBuffer","keyEncrypted","oldEncKey","promises","cipherResponse","cipherData","getLocaleSortingFunction","EmergencyAccessStatusType","EmergencyAccessType","EmergencyAccessConfirmRequest","EmergencyAccessInviteRequest","EmergencyAccessUpdateRequest","EmergencyAccessAddEditComponent","emergencyAccessType","waitTimes","emergencyAccess","getEmergencyAccess","waitTime","waitTimeDays","putEmergencyAccess","postEmergencyAccessInvite","EmergencyAccessConfirmComponent","onConfirmed","EmergencyAccessPasswordRequest","EmergencyAccessTakeoverComponent","onDone","getEmergencyGrantorPolicies","takeoverResponse","postEmergencyAccessTakeover","postEmergencyAccessPassword","approve","reject","requestAccess","takeover","EmergencyAccessComponent","emergencyAccessStatusType","isOrganizationOwner","trustedContacts","getEmergencyAccessTrusted","grantedContacts","getEmergencyAccessGranted","details","contact","postEmergencyAccessReinvite","doConfirmation","granteeId","deleteEmergencyAccess","removeGrantee","removeGrantor","postEmergencyAccessInitiate","RecoveryInitiated","postEmergencyAccessApprove","RecoveryApproved","postEmergencyAccessReject","takeoverModalRef","debug","postEmergencyAccessConfirm","form","hours","CUSTOM_VALUE","exceedsMinimumTimout","customTimeInMinutes","MIN_CUSTOM_MINUTES","combineLatestWith","vaultTimeoutPolicy","applyVaultTimeoutPolicy","getVaultTimeout","current","max","vaultTimeouts","onTouched","validate","policyError","minTimeoutError","registerOnValidatorChange","validatorChange","vaultTimeoutPolicyHours","vaultTimeoutPolicyMinutes","VaultTimeoutInputComponent","PreferencesComponent","themingService","vaultTimeoutAction","isDev","localeOptions","supportedTranslationLocales","localeNames","themeOptions","getVaultTimeoutAction","enableFavicons","enableFullWidth","getEnableFullWidth","getLocale","startingLocale","theme","getTheme","startingTheme","setVaultTimeoutOptions","setEnableFullWidth","updateConfiguredTheme","setLocale","vaultTimeoutActionChanged","newValue","FolderWithIdRequest","SendWithIdRequest","UpdateKeyRequest","ChangePasswordComponent","rotateEncKey","rotateEncKeyClicked","updateKey","getPrivateKey","encPrivateKey","cryptoKey","postAccountKey","updateEmergencyAccesses","updateAllResetPasswordKeys","allowedStatuses","filteredAccesses","updateRequest","KdfRequest","ChangeKdfComponent","kdfOptions","recommendedKdfIterations","postAccountKdf","SecurityKeysComponent","showChangeKdf","viewUserApiKey","viewUserApiKeyModalRef","postUserApiKey","rotateUserApiKey","rotateUserApiKeyModalRef","postUserRotateApiKey","SecurityComponent","showChangePassword","SecurityRoutingModule","getHasPremiumPersonally","hasFamilySponsorshipAvailable","canManageSponsorships","hasPremiumFromOrg","getHasPremiumFromOrganization","billing","getUserBillingHistory","hideSubscription","hasNoHistory","notAllowedValueAsync","valueGetter","caseInsensitive","notAllowedValue","controlValue","resendEmail","SponsoringOrgRowComponent","sponsoringOrg","isSelfHosted","sponsorshipRemoved","statusMessage","statusClass","locale$","setStatus","familySponsorshipToDelete","familySponsorshipValidUntil","familySponsorshipLastSyncDate","revokeSponsorship","revokeSponsorshipPromise","doRevokeSponsorship","resendEmailPromise","postResendSponsorshipOffer","isSentAwaitingSync","familySponsorshipFriendlyName","deleteRevokeSponsorship","toDelete","validUntil","lastSyncDate","forceReload","SponsoredFamiliesComponent","sponsorshipForm","selectedSponsorshipOrgId","sponsorshipEmail","asyncValidators","availableSponsorshipOrgs$","familySponsorshipAvailable","anyOrgsAvailable$","activeSponsorshipOrgs$","anyActiveSponsorships$","postCreateSponsorship","sponsoredEmail","friendlyName","resetForm","sponsorshipEmailControl","BillingHistoryViewComponent","PremiumComponent","premiumPrice","storageGbPrice","additionalStorage","fd","FormData","postAccountLicense","finalizePremium","paymentComponent","createPaymentToken","taxInfoComponent","taxInfo","country","postalCode","postPremium","paymentResponse","paymentIntentClientSecret","handleStripeCardPayment","additionalStorageTotal","subtotal","taxCharges","taxRate","total","SubscriptionComponent","hasPremium","subscriptionRoute","reinstate","closeUpdateLicense","updateLicense","downloadLicense","adjustStorage","closeStorage","UserSubscriptionComponent","adjustStorageAdd","showAdjustStorage","showUpdateLicense","sub","getUserSubscription","usingInAppPurchase","reinstatePromise","postReinstatePremium","cancelPromise","postCancelPremium","licenseString","license","subscriptionMarkedForCancel","subscription","cancelled","cancelAtEndDate","nextInvoice","upcomingInvoice","storagePercentage","storageGb","toFixed","storageProgressWidth","SubscriptionRoutingModule","usernameGenerationService","comingFromAddEdit","onSelected","usernameOptions","username","avoidAmbiguous","usernameWebsite","passTypeOptions","usernameTypeOptions","desc","subaddressOptions","catchallOptions","initForwardOptions","passwordOptionsResponse","ambiguous","subaddressEmail","subaddressType","catchallType","website","websiteOption","generatorOptions","getGeneratorOptions","regenerateWithoutButtonPress","regenerate","setGeneratorOptions","regeneratePassword","regenerateUsername","sliderChanged","savePasswordOptions","addHistory","sliderInput","normalizePasswordOptions","saveOptions","saveUsernameOptions","generateUsername","usernameGeneratingPromise","copyOptions","number","normalizeOptions","forwardOptions","forwardedService","localeCompare","history","getHistory","SelectCopyDirective","el","onCopy","selection","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","PasswordGeneratorHistoryComponent","lengthChanged","minNumberChanged","minSpecialChanged","GeneratorComponent","historyModalRef","ToolsComponent","UpdateKeyComponent","makeRequest","folderApiService","onSavedFolder","onDeletedFolder","FolderAddEditComponent","onSharedCipher","cipherView","shareWithServer","ShareComponent","VerifyEmailComponent","onVerified","verifyEmail","postAccountVerifyEmail","showVerifyEmail","showBrowserOutdated","showUpdateKey","showPremiumCallout","navigator","userAgent","filterComponent","action","isShowingCards","verified","ensureVaultFiltersAreExpanded","shareCipher","shareModalRef","folderAddEditModalRef","updateKeyModalRef","favorites","ImportExportModule","OssRoutingModule","buildFlaggedRoute","flagName","useHash","paramsInheritanceStrategy","HasPremiumGuard","routerState","userHasPremium","BreachReportComponent","breachedAccounts","checkedUsername","ReportBreach","ReportExposedPasswords","ReportInactiveTwoFactor","ReportReusedPasswords","ReportUnsecuredWebsites","ReportWeakPasswords","ReportType","reports","ExposedPasswords","ReusedPasswords","WeakPasswords","UnsecuredWebsites","Inactive2fa","DataBreach","ReportsSharedModule","ReportsHomeComponent","reportRequiresPremium","variant","ReportsLayoutComponent","homepage","ReportsRoutingModule","ReportsModule","CipherReportComponent","requiresPaid","hasLoaded","setCiphers","checkAccess","useTotp","ExposedPasswordsReportComponent","exposedPasswordMap","exposedPasswordCiphers","passwordLeaked","exposedCount","canManageCipher","InactiveTwoFactorReportComponent","services","cipherDocs","load2fa","inactive2faCiphers","docs","hasUris","uris","domain","responseJson","json","service","serviceData","documentation","additionalDomain","ReusedPasswordsReportComponent","ciphersWithPasswords","passwordUseMap","reusedPasswordCiphers","UnsecuredWebsitesReportComponent","unsecuredCiphers","WeakPasswordsReportComponent","passwordStrengthMap","passwordStrengthCache","weakPasswordCiphers","isUserNameNotEmpty","getCacheKey","hasUserName","cacheKey","scoreKey","ReportVariant","ReportCardComponent","requiresPremium","ReportListComponent","StorageRequest","AdjustStorageComponent","interval","onAdjusted","onCanceled","storageAdjustment","storageGbAdjustment","paymentFailed","postAccountStorage","updateStorage","adjustedStorageTotal","ApiKeyComponent","clientSecret","apiKey","TransactionType","BillingHistoryComponent","paymentMethodType","transactionType","invoices","transactions","paymentMethodClasses","OrganizationCreateRequest","OrganizationUpgradeRequest","ProviderOrganizationCreateRequest","clientOwnerEmail","organizationCreateRequest","changedProduct","changedOwnedBusiness","OrganizationPlansComponent","showFree","showCancel","onTrialBillingSuccess","productTypes","singleOrgPolicyBlock","discount","businessOwned","premiumAccessAddon","plans","getPlans","addValidators","selectedPlan","selectedPlanInterval","isAnnual","selectableProducts","validPlans","canBeUsedByBusiness","legacyYear","Free","familyPlan","basePrice","selectablePlans","additionalStoragePriceMonthly","additionalStoragePricePerGb","seatPriceMonthly","seatPrice","hasAdditionalStorageOption","seatTotal","hasAdditionalSeatsOption","subTotal","hasPremiumAccessOption","premiumAccessOptionPrice","freeTrial","trialPeriodDays","taxComponent","paymentDesc","baseSeats","hideBank","method","changeMethod","shareKey","makeShareKey","collectionCt","createSelfHosted","createCloudHosted","updateOrganization","billingSubLabelText","additionalStorageGb","planType","billingAddressCountry","billingAddressPostalCode","upgrade","collectionName","tokenResult","paymentToken","includeTaxId","taxIdNumber","taxId","billingAddressLine1","line1","billingAddressLine2","line2","billingAddressCity","city","billingAddressState","providerRequest","providerKey","getProviderKey","postProviderCreateOrganization","create","createLicense","price","VerifyBankRequest","BitPayInvoiceRequest","AddCreditComponent","onAdded","ppLoading","payPalConfig","ppButtonFormAction","ppButtonBusinessId","creditAmount","ppButtonCustomField","subject","returnUrl","ppButtonFormRef","req","credit","amount","creditAmountNumber","postBitPayInvoice","bitPayUrl","formatAmount","floatAmount","parseFloat","round","PaymentRequest","AdjustPaymentComponent","postAccountPayment","updatePayment","changeCountry","addCredit","closeAddCredit","verifyBank","changePayment","closePayment","submitTaxInfo","PaymentMethodComponent","showAdjustPayment","showAddCredit","verifyBankForm","amount1","amount2","forOrganization","billingPromise","getBilling","orgPromise","getUserBillingPayment","paymentSourceInApp","verifyBankPromise","taxFormPromise","isCreditBalance","balance","creditOrBalance","paymentSource","headerClass","paymentSourceClasses","bank","PaymentComponent","showMethods","hidePaypal","hideCredit","trialFlow","routing_number","account_number","account_holder_name","account_holder_type","currency","btInstance","stripe","stripeElements","stripeCardNumberElement","stripeCardExpiryElement","stripeCardCvcElement","stripeScript","async","onload","Stripe","elements","setStripeElement","btScript","StripeElementStyle","base","fontFamily","fontSize","fontSmoothing","StripeElementClasses","empty","subscribeToTheme","head","appendChild","removeChild","from","querySelectorAll","btStylesheet","braintree","dropin","authorization","container","paymentOptionPriority","paypal","buttonStyle","label","shape","tagline","createErr","console","requestPaymentMethod","payload","nonce","catch","err","postSetupPayment","handleCardSetup","setupIntent","payment_method","createToken","handleCardPayment","paymentIntent","style","classes","mount","theme$","getComputedStyle","documentElement","getPropertyValue","borderColor","PurgeVaultComponent","postPurgeCiphers","TaxInfoComponent","onCountryChanged","pristine","getTaxInfo","taxRates","getTaxRates","localTaxRate","rate","getTaxInfoRequest","hasChanged","updateTaxInfo","putTaxInfo","TwoFactorProviderRequest","TwoFactorBaseComponent","twoFactorProviderType","auth","authResponse","hashedSecret","verificationType","enableFunction","buildRequestModel","putTwoFactorOrganizationDisable","putTwoFactorDisable","requestClass","UpdateTwoFactorDuoRequest","TwoFactorDuoComponent","processResponse","integrationKey","ikey","secretKey","skey","putTwoFactorOrganizationDuo","putTwoFactorDuo","UpdateTwoFactorAuthenticatorRequest","TwoFactorAuthenticatorComponent","qrScript","putTwoFactorAuthenticator","QRious","element","UpdateTwoFactorEmailRequest","TwoFactorEmailComponent","postTwoFactorEmailSetup","sentEmail","putTwoFactorEmail","print","TwoFactorRecoveryComponent","w","write","onafterprint","formatString","UpdateTwoFactorWebAuthnDeleteRequest","UpdateTwoFactorWebAuthnRequest","readKey","TwoFactorWebAuthnComponent","keyIdAvailable","keysConfiguredCount","webAuthnResponse","deviceResponse","putTwoFactorWebAuthn","removePromise","deleteTwoFactorWebAuthn","challengePromise","getTwoFactorWebAuthnChallenge","challenge","readDevice","webAuthnChallenge","log","resetWebAuthn","webAuthnListening","webAuthnError","listening","k","configured","migrated","UpdateTwoFactorYubioOtpRequest","TwoFactorYubiKeyComponent","nfc","key1","key2","key3","key4","key5","putTwoFactorYubiKey","disablePromise","existingKey","padRight","character","showPolicyWarning","twoFactorAuthPolicyAppliesToActiveUser","p2","evaluatePolicies","authenticatorModalRef","yubikeyModalRef","emailModalRef","webAuthnModalRef","recoveryModalRef","TwoFactorVerifyComponent","onAuthed","otp","apiCall","getTwoFactorRecover","getTwoFactorOrganizationDuo","getTwoFactorDuo","getTwoFactorEmail","getTwoFactorWebAuthn","getTwoFactorAuthenticator","getTwoFactorYubiKey","UpdateLicenseComponent","updatePromise","LooseComponentsModule","AsyncActionsModule","AvatarModule","ButtonModule","CalloutModule","IconButtonModule","DialogModule","IconModule","LinkModule","MenuModule","NavigationModule","TableModule","TabsModule","ColorPasswordModule","SharedModule","addFieldType","linkedFieldOptions","fieldType","eventType","addFieldTypeOptions","addFieldLinkedTypeOption","changes","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","fields","newField","linkedId","removeField","toggleFieldValue","showValue","trackByFunction","drop","previousIndex","currentIndex","linkedFieldOption","i18nKey","TrueFalseValueDirective","elementRef","renderer","trueValue","falseValue","propagateChange","onHostChange","target","setProperty","AddEditCustomFieldsComponent","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","onGenerateUsername","showCardNumber","showCardCode","currentDate","canUseReprompt","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","uriMatchOptions","autofillOnPageLoadOptions","personalOwnershipPolicyAppliesToActiveUser","myEmail","addEditCipherInfo","getAddEditCipherInfo","setAddEditCipherInfo","card","identity","secureNote","previousCipherId","getCardExpMonthDisplay","expMonth","editCollections","restorePromise","restoreCipher","toggleUriOptions","checkPasswordPromise","matches","createWithServer","updateWithServer","showRevisionDate","hasPasswordHistory","viewingPasswordHistory","showPasswordCount","passwordRevisionDisplayDate","cleanUp","totpUpdateCode","getTimeInterval","totpTick","totpInterval","setInterval","canLaunch","confirmed","showGetPremium","clearInterval","totpCode","half","totpCodeFormatted","intervalSeconds","mod","totpSec","totpDash","totpLow","OrganizationBadgeModule","VaultFilterSharedModule","VaultFilterService","_collapsedFilterNodes","asObservable","collectionResponse","collectionDomains","noneCollection","getAllNested","flagEnabled","flag","AccountService","InternalAccountService","ConfigApiServiceAbstraction","EventUploadService","FileUploadService","NotificationsService","SettingsService","SyncNotifierService","UserVerificationApiServiceAbstraction","AccountFactory","accountConstructor","args","GlobalStateFactory","globalStateConstructor","StateFactory","globalStateFactory","accountFactory","createGlobal","createAccount","StateVersion","stateVersion","One","environmentUrls","UpdateAvatarRequest","avatarColor","NotificationType","NotificationResponse","contextId","getResponseProperty","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","AuthRequest","AuthRequestResponse","AuthRequestPushNotification","revisionDate","AnonymousHubService","getNotificationsUrl","anonHubConnection","HubConnectionBuilder","withUrl","skipNegotiation","transport","withHubProtocol","MessagePackHubProtocol","build","on","ProcessNotification","notification","authResponsePushNotifiction","DeviceRequest","appId","getDevice","getDeviceString","pushToken","TokenRequest","device","alterIdentityTokenHeaders","headers","setTwoFactor","setPasswordlessAccessCode","passwordlessAuthRequest","toIdentityToken","client_id","deviceName","authRequest","twoFactorToken","twoFactorProvider","twoFactorRemember","UserApiTokenRequest","startsWith","grant_type","client_secret","ApiKeyResponse","AttachmentUploadDataResponse","fileUploadType","cipherMiniResponse","requestDeviceType","requestIpAddress","creationDate","RegisterResponse","BillingResponse","BillingSourceResponse","BillingTransactionResponse","BillingInvoiceResponse","cardBrand","needsVerification","pdfUrl","paid","createdDate","refunded","partiallyRefunded","refundedAmount","BillingHistoryResponse","BillingPaymentResponse","BreachAccountResponse","addedDate","breachDate","dataClasses","isActive","isVerified","logoPath","modifiedDate","pwnCount","SelectionReadOnlyResponse","CollectionResponse","CollectionDetailsResponse","CollectionGroupDetailsResponse","DeviceVerificationResponse","isDeviceVerificationSectionEnabled","unknownDeviceVerificationEnabled","GlobalDomainResponse","DomainsResponse","EventResponse","GroupResponse","GroupDetailsResponse","IdentityCaptchaResponse","IdentityTokenResponse","accessToken","access_token","expiresIn","expires_in","refreshToken","refresh_token","tokenType","token_type","apiUseKeyConnector","keyConnectorUrl","IdentityTwoFactorResponse","twoFactorProviders2","prop","parseInt","KeyConnectorUserKeyResponse","OrganizationConnectionResponse","configType","rawConfig","OrganizationExportResponse","OrganizationSponsorshipSyncStatusResponse","ProfileOrganizationResponse","useDirectory","use2fa","useKeyConnector","useScim","useSecretsManager","selfHost","usersGetPremium","ssoBound","providerName","familySponsorshipLastSyncDateString","familySponsorshipValidUntilString","ProfileProviderOrganizationResponse","ProfileProviderResponse","ProfileResponse","providerOrganizations","premiumPersonally","premiumFromOrganization","twoFactorEnabled","securityStamp","PaymentResponse","userProfile","PlanResponse","nameLocalizationKey","descriptionLocalizationKey","baseStorageGb","maxUsers","maxAdditionalSeats","maxAdditionalStorage","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","has2fa","hasApi","hasSso","hasResetPassword","upgradeSortOrder","displaySortOrder","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","PreloginResponse","ProviderOrganizationResponse","userCount","ProviderOrganizationOrganizationDetailsResponse","OrganizationUserBulkPublicKeyResponse","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","ProviderUserUserDetailsResponse","ProviderResponse","SendAccessResponse","SendFileDownloadDataResponse","SendResponse","notes","maxAccessCount","accessCount","SendFileUploadDataResponse","SsoPreValidateResponse","SubscriptionResponse","storageName","expiration","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","trialEndDate","periodStartDate","periodEndDate","cancelledDate","BillingSubscriptionItemResponse","quantity","sponsoredSubscriptionItem","FolderResponse","SyncResponse","TaxInfoResponse","taxIdType","TaxRateResponse","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","TwoFactorWebAuthnResponse","KeyResponse","ChallengeResponse","attestation","authenticatorSelection","excludeCredentials","extensions","pubKeyCredParams","rp","TwoFactorYubiKeyResponse","UserKeyResponse","AuditService","hashBytes","hashStart","hashEnding","nativeFetch","getHibpBreach","throttleKey","propertyKey","descriptor","originalMethod","allThrottles","throttles","getThrottles","argsThrottleKey","queue","exec","onFinally","apply","PasswordTokenRequest","AuthResult","requiresCaptcha","LogInStrategy","tokenRequest","startLogIn","clearSelectedProvider","postIdentityToken","processTwoFactorResponse","processCaptchaResponse","processTokenResponse","buildDeviceRequest","buildTwoFactor","userProvidedTwoFactor","storedTwoFactorToken","getTwoFactorToken","saveAccountInformation","tokenResponse","accountInformation","decodeToken","hasPremiumPersonally","tokens","setTwoFactorToken","setUserKey","createKeyPairForOldAccount","setProviders","postAccountKeys","PasswordLogInStrategy","PasswordlessLogInStrategy","passwordlessCredentials","SsoTokenRequest","code_verifier","redirect_uri","SsoLogInStrategy","newSsoUser","convertNewSsoUserToKeyConnector","getAndSetKey","UserApiLogInStrategy","getKeyConnectorUrl","setApiKeyClientId","setApiKeyClientSecret","PreloginRequest","sequentialize","caches","getCache","argsCacheKey","SortedCiphersCache","comparator","sortedCiphersByUrl","timeouts","isCached","addCiphers","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","lastUsedIndex","localData","lastLaunched","y","valueOf","getNextIndex","CipherBulkMoveRequest","CipherBulkRestoreRequest","CipherBulkShareRequest","CipherPartialRequest","CipherShareRequest","DomainMatchBlacklist","CipherService","settingsService","fileUploadService","encryptService","sortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","clearCache","clearDecryptedCiphersState","existingCipher","passwordHistory","ph","lastUsedDate","passwordRevisionDate","hasFields","existingHiddenFields","hiddenFields","ef","matchedField","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","encAttachments","sizeName","fieldsModel","encFields","encField","encryptField","fieldModel","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getLocalData","reindexCiphers","hasKey","getOrgKeys","userKey","getKeyForUserEncryption","grouped","agg","entries","groupedCiphers","decryptItems","flat","indexedEntityId","getAllDecryptedForGrouping","groupingId","getAllDecryptedForUrl","includeOtherTypes","defaultMatch","eqDomainsPromise","settings$","eqDomain","matchingDomains","getDefaultUriMatch","domainUrlHost","urlHost","RegExp","test","getCiphersOrganization","cr","getLastUsedForUrl","autofillOnPageLoad","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","setLocalData","decryptedCipherCache","cached","updateLastLaunchedDate","saveNeverDomain","getNeverDomains","setNeverDomains","postCipherCreate","postCipher","upsert","putCipher","putPartialCipher","attachmentPromises","shareAttachmentWithServer","encCipher","putShareCipher","encCiphers","putShareCiphers","toCipherData","unencryptedFile","reader","FileReader","readAsArrayBuffer","evt","cData","onerror","filename","encFileName","dataEncKey","encData","encryptToBytes","fileSize","byteLength","adminRequest","uploadDataResponse","postCipherAttachment","uploadCipherAttachment","legacyServerAttachmentFileUpload","blob","Blob","Buffer","filepath","contentType","postCipherAttachmentAdminLegacy","postCipherAttachmentLegacy","putCipherCollections","clearEncryptedCiphersState","putMoveCiphers","deleteManyCiphers","deleteAttachment","aLastUsed","bLastUsed","bothNotNull","sortCiphersByLastUsedThenName","aName","bName","softDelete","setDeletedDate","putDeleteCipher","putDeleteManyCiphers","clearDeletedDate","putRestoreCipher","putRestoreManyCiphers","restores","attachmentView","attachmentResponse","postShareCipherAttachment","theProp","theObj","modelProp","loginUri","cardholderName","brand","expYear","firstName","middleName","lastName","address1","address2","address3","company","phone","ssn","passportNumber","licenseNumber","lastUsed","autofillOnPageLoadDefault","getAutoFillOnPageLoadDefault","clearSortedCiphers","ServerConfigResponse","gitHash","server","ThirdPartyServerConfigResponse","environment","EnvironmentServerConfigResponse","vault","api","notifications","ServerConfig","serverConfigData","utcDate","getAgeInMilliseconds","expiresSoon","EFFLongWordList","BaseEncryptedOrganizationKey","EncryptedOrganizationKey","ProviderEncryptedOrganizationKey","toData","CryptoService","setCryptoMasterKey","storeKey","keyHash","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","setDecryptedPrivateKey","setEncryptedPrivateKey","setOrgKeys","providerOrgs","encOrgKeyData","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setProviderKeys","providerKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","keySuffix","inMemoryKey","getCryptoMasterKey","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","warning","clearSecretKeyStore","storedKeyHash","getEncKeyHelper","getPublicKey","inMemoryPublicKey","rsaExtractPublicKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","keyFingerprint","userFingerprint","hkdfExpand","hashPhrase","decryptedOrganizationKeys","getDecryptedOrganizationKeys","getEncryptedOrganizationKeys","encOrgKey","fromData","decOrgKey","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","encProviderKeys","getEncryptedProviderKeys","hasKeyInMemory","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","getEncryptedCryptoSymmetricKey","clearKey","clearSecretStorage","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearPinProtectedKey","setEncryptedPinProtected","clearKeys","toggleKey","salt","protectedKeyCs","pinProtectedKey","getEncryptedPinProtected","randomBytes","keyPair","stretchKey","keyMaterial","sendKey","hkdf","hashPurpose","iterations","theKey","buildEncKey","plainValue","encBytes","encValue","privateKeyValue","headerPieces","encPieces","encType","alg","encString","keyForEnc","encBuffer","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","Uint8Array","shouldStoreKey","keyB64","getBiometricUnlock","getCryptoMasterKeyBiometric","macKey","minimumEntropy","entropyPerWord","numWords","hashArr","phrase","hashNumber","remainder","divide","encKeyEnc","getDecryptedCryptoSymmetricKey","decEncKey","encKeyCipher","encryptionType","symmetricCryptoKey","EncryptedObject","EncryptServiceImplementation","logMacFailures","plainBuf","encObj","aesEncrypt","iv","mac","macLen","resolveLegacyKey","fastParams","aesDecryptFastParameters","computedMac","hmacFast","macData","compareFast","logMacFailed","aesDecryptFast","encThing","macBytes","ivBytes","dataBytes","hmac","aesDecrypt","classInitializers","MultithreadEncryptServiceImplementation","clear$","worker","Worker","restartTimeout","fromEvent","jsonItem","className","initializerKey","defaultIfEmpty","terminate","EventRequest","EventExport","FileUploadType","AzureFileUploadService","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","Headers","toUTCString","searchParams","blobResponse","baseUrl","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","blockListUrl","blockListXml","expiry","utfBlockId","blockIdList","xml","Version","month","day","Number","compareTo","BitwardenFileUploadService","encryptedFileName","encryptedFileData","SetKeyConnectorKeyRequest","KeyConnectorUserKeyRequest","LoginService","_email","_rememberEmail","OrganizationUserResponse","OrganizationUserUserDetailsResponse","OrganizationUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","OrganizationUserBulkResponse","OrganizationUserBulkRequest","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","OrganizationApiKeyInformationResponse","OrganizationAutoEnrollStatusResponse","KeysResponse","OrganizationKeysResponse","OrganizationResponse","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","maxAutoscaleSeats","OrganizationSubscriptionResponse","SsoConfigApi","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpDisableOutboundLogoutRequests","idpWantAuthnRequestsSigned","view","OpenIdConnect","openId","Saml2","saml","idpAllowOutboundLogoutRequests","OrganizationSsoResponse","urls","SsoUrls","callbackPath","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","PasswordGeneratorPolicyOptions","useUppercase","useLowercase","numberCount","specialCount","inEffect","DefaultOptions","minNumber","minUppercase","minLowercase","wordSeparator","ResetPasswordPolicyOptions","ProviderUserStatusType","ProviderUserType","Provider","canAccess","isProviderAdmin","canCreateOrganizations","canAccessEventLogs","ProviderAdmin","SearchService","indexing","immediateSearchLocales","defaultSearchableMinLength","searchableMinLength","registeredPipeline","lunr","Pipeline","registerFunction","normalizeAccentsPipelineFunction","query","normalizeSearchQuery","builder","Builder","pipeline","boost","extractor","subTitle","uriExtractor","fieldExtractor","attachmentExtractor","results","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","toLocaleLowerCase","sendsMatched","lowPriorityMatched","joined","hasAttachments","hostname","protocolIndex","queryIndex","searchableFields","metadata","normalize","Send","getCryptoService","TokenService","decoded","setTokens","clientIdClientSecret","setToken","setRefreshToken","setClientId","setClientSecret","getClientId","getApiKeyClientId","getClientSecret","getApiKeyClientSecret","setAccessToken","getToken","getAccessToken","getRefreshToken","clearTwoFactorToken","clearToken","getTokenExpirationDate","exp","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","tokenNeedsRefresh","email_verified","getIssuer","iss","getIsExternal","amr","v1Keys","alwaysShowDock","autoConfirmFingerprints","autoFillOnPageLoadDefault","biometricAwaitingAcceptance","biometricFingerprintValidated","biometricUnlock","clearClipboard","collapsedGroupings","convertAccountToKeyConnector","defaultUriMatch","disableAddLoginNotification","disableAutoBiometricsPrompt","disableAutoTotpCopy","disableBadgeCounter","disableChangedPasswordNotification","disableContextMenuItem","disableGa","dontShowCardsCurrentTab","dontShowIdentitiesCurrentTab","enableAlwaysOnTop","enableAutoFillOnPageLoad","enableBiometric","enableBrowserIntegration","enableBrowserIntegrationFingerprint","enableCloseToTray","enableMinimizeToTray","enableStartToTray","enableTray","encOrgKeys","encPrivate","entityType","eventCollection","installedVersion","lastActive","mainWindowSize","minimizeOnCopyToClipboard","neverDomains","noAutoPromptBiometricsText","openAtLogin","passwordGenerationOptions","pinProtected","ssoIdentifier","ssoState","stamp","usesConnector","rememberedEmail","v1KeyPrefixes","lastSync","partialKeys","needsMigration","currentStateVersion","getCurrentStateVersion","Latest","migrate","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","Four","authenticatedAccounts","getAuthenticatedAccounts","migratedAccount","migrateAccountFrom4To5","setCurrentStateVersion","Five","migrateAccountFrom5To6","Six","clearV1Keys","clearingUserId","keyPrefix","globals","noAutoPromptBiometrics","ssoOrganizationIdentifier","defaultAccount","accountSettings","autoConfirmFingerPrints","decrypted","encrypted","passwordGenerationHistory","apiKeyClientSecret","cryptoMasterKey","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","cryptoSymmetricKey","legacyEtmKey","organizationKeys","apiKeyClientId","authenticationStatus","everBeenUnlocked","decodedToken","accountActivity","authenticatedUserIds","getGlobals","encryptedOrgKeys","htmlStorageLocation","newVersion","OrganizationData","SyncService","logoutCallback","syncInProgress","toJSON","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","getSync","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","syncUpsertFolder","isEdit","localFolder","remoteFolder","syncDeleteFolder","syncUpsertCipher","shouldUpdate","localCipher","checkCollections","remoteCipher","getFullCipherDetails","syncDeleteCipher","syncUpsertSend","localSend","remoteSend","getSend","syncDeleteSend","getAccountRevisionDate","getSecurityStamp","setAvatarColor","setSecurityStamp","setEmailVerified","setHasPremiumPersonally","setHasPremiumFromOrganization","setForcePasswordReset","setUsesKeyConnector","isProviderUser","userNeedsMigration","setConvertAccountRequired","eqDomains","setEquivalentDomains","B32Chars","SteamChars","VerifyOTPRequest","OTP","AnonAddyForwarder","generate","anonaddy","requestInit","Authorization","DuckDuckGoForwarder","address","FastmailForwarder","accountId","getAccountId","using","methodCalls","emailPrefix","fastmail","prefix","methodResponses","created","notCreated","primaryAccounts","FirefoxRelayForwarder","generated_for","full_address","ForwarderOptions","FastmailForwarderOptions","AnonAddyForwarderOptions","SimpleLoginForwarder","Authentication","note","alias","wordCapitalize","wordIncludeNumber","forwardedAnonAddyDomain","DecryptParameters","BroadcasterService","subscribers","messageCallback","ThemeBuilder","configuredTheme","systemTheme","effectiveTheme","updateSystemTheme","ThemingService","_theme","monitorThemeChanges","getSystemTheme","monitorConfiguredThemeChanges","monitorSystemThemeChanges","getValue","setTheme","matchMedia","JslibServicesModule","useValue","useFactory","deps","language","makeAndGetAppId","getAnonymousAppId","existingId","guid","pushNotificationSubject","logInStrategy","strategy","clearState","saveState","callback","getEverBeenUnlocked","preloginResponse","postPrelogin","startSessionTimeout","clearSessionTimeout","sessionTimeout","P","injector","_folders","_folderViews","activeAccountUnlocked$","unlocked","updateObservables","getAllFromState","getFromState","getAllDecryptedFromState","decryptFolders","updates","cId","foldersMap","decryptFolderPromises","decryptedFolders","noneFolder","postFolder","putFolder","deleteFolder","accountService","verificationRequest","_avatarUpdate$","getAvatarColor","putAvatar","setDecryptedCollections","decCollections","decryptedCollections","getDecryptedCollections","collectionCopy","getNested","urlsSubject","scimUrl","setUrlsFromStorage","notificationsUrl","getIconsUrl","iconsUrl","getApiUrl","apiUrl","identityUrl","getEventsUrl","eventsUrl","getScimUrl","getEnvironmentUrls","envUrls","webVault","icons","keyConnector","setUrls","formatUrl","scim","setEnvironmentUrls","getUrls","isCloud","period","digits","keyB32","isOtpAuth","isSteamAuth","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","timeBytes","keyBytes","b32ToBytes","sign","offset","binary","fullCode","trunc","l","b32ToHex","cleanedInput","bits","hex","byteIndex","chunk","signature","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","getPasswordGenerationOptions","setPasswordGenerationOptions","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","getPasswordGeneratorPolicyOptions","currentPolicy","getDecryptedPasswordGenerationHistory","getEncryptedPasswordGenerationHistory","decryptHistory","setDecryptedPasswordGenerationHistory","currentHistory","matchesPrevious","unshift","newHistory","encryptHistory","setEncryptedPasswordGenerationHistory","userInputs","globalUserInputs","finalUserInputs","array","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","generateCatchall","generateSubaddress","generateForwarded","generateWord","word","zeroPad","atIndex","emailBeginning","emailEnding","subaddressString","randomString","catchallDomain","startString","forwarder","forwarderOptions","forwardedSimpleLoginApiKey","forwardedAnonAddyApiToken","forwardedFirefoxApiToken","forwardedFastmailApiToken","forwardedDuckDuckGoToken","getUsernameGenerationOptions","setUsernameGenerationOptions","charSet","customUserAgent","isWebClient","isDesktopClient","Accept","identityToken","getClientType","qsStringify","getCredentials","isJsonResponse","TwoFactorProviders2","HCaptcha_SiteKey","doAuthRefresh","postSetKeyConnectorKey","postIapCheck","postConvertToKeyConnector","getSends","L","postSend","postFileTypeSend","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","postImportCiphers","postImportOrganizationCiphers","putRestoreCipherAdmin","renewAttachmentUploadUrl","postAttachmentFile","dr","deleteCollectionUser","deleteGroupUser","postPublicImportDirectory","rawId","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","getDeviceVerificationSettings","putDeviceVerificationSettings","getCloudCommunicationsEnabled","getOrganizationConnection","createOrganizationConnection","updateOrganizationConnection","organizationConnectionId","deleteOrganizationConnection","postProviderSetup","getProvider","putProvider","getProviderUsers","getProviderUser","postProviderUserInvite","postProviderUserReinvite","postManyProviderUserReinvite","postProviderUserBulkConfirm","deleteManyProviderUsers","postProviderUserAccept","postProviderUserConfirm","postProviderUsersPublicKey","putProviderUser","deleteProviderUser","getProviderClients","postProviderAddOrganization","deleteProviderOrganization","getEvents","addEventParameters","getEventsOrganization","getEventsProvider","postEventsCollect","authHeader","getActiveBearerToken","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getKeyConnectorAlive","getOrganizationExport","getApplicationVersionNumber","sponsoredOrgId","getSponsorshipSyncStatus","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","doRefreshToken","doApiTokenRefresh","deviceRequest","hasResponse","alterHeaders","requestUrl","responseType","responseIsJson","tokenError","isTextResponse","Message","typeHeader","azureFileUploadService","bitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","_settings","getSettings","setSettings","setVaultTimeout","currentAction","setVaultTimeoutAction","policyAppliesToUser","setProtectedPin","lockedCallback","loggedOutCallback","inited","checkOnInterval","startCheck","checkVaultTimeout","isViewOpen","accounts","accounts$","shouldLock","executeTimeoutAction","getLastActive","vaultTimeoutSeconds","getExport","format","getEncryptedExport","getDecryptedExport","getPasswordProtectedExport","clearText","encKeyValidation","encText","jsonDoc","passwordProtected","encKeyValidation_DO_NOT_EDIT","getOrganizationEncryptedExport","getOrganizationDecryptedExport","extension","padNumber","getSeconds","decFolders","exportCiphers","buildCommonCipher","exportData","exportPromises","decCol","decCipher","collectionsMap","padCharacter","numString","login_uri","login_username","login_password","login_totp","connected","inactive","reconnectTimer","signalrConnection","off","accessTokenFactory","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","sync","reconnectFromActivity","disconnectFromInactivity","isAuthenticated","payloadUserId","UserId","myUserId","random","crypto","subtle","algorithm","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","ikm","outputByteSize","hkdfParams","prk","hashLen","infoBuf","infoArr","runningOkmLength","previousT","n","okm","md","valueBytes","toByteString","update","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","bytes","getBytes","rand","Uint32Array","putInt32","meta","encKeyByteString","macKeyByteString","encKeyB64","macKeyB64","parameters","dataBuffer","decipher","finish","output","rsaParams","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","arr","getRandomValues","buf","cryptoFunctionservice","uploadEvents","getEventCollection","clearEvents","setEventCollection","eventUploadService","uploadImmediately","orgIds","_policies","getEncryptedPolicies","decryptedPolicies","getDecryptedPolicies","diskPolicies","prototype","call","setDecryptedPolicies","of","obsPolicies","filteredPolicies","policyFilter","checkPoliciesThatApplyToUser","toLocaleUpperCase","resetPasswordPolicyOptions","policiesResponse","setEncryptedPolicies","isExcemptFromPolicies","isExemptFromPolicies","policiesMap","policySet","getPoliciesByInvitedUser","setDecryptedSends","fileData","ArrayBuffer","encryptFileData","parseFile","decSends","getDecryptedSends","legacyServerSendFileUpload","loggedInUsingSso","requiredByOrganization","userIsNotUsingKeyConnector","keyConnectorRequest","handleKeyConnectorError","userKeyResponse","keyArr","pubKey","privKey","setPasswordRequest","setConvertAccountToKeyConnector","getConvertAccountRequired","getConvertAccountToKeyConnector","userVerificationApiService","alreadyHashed","validateInput","postAccountVerifyOTP","postAccountRequestOTP","_organizations","getOrganizations","organizationsMap","hasOrganizations","getByIdentifier","setOrganizations","controlErrors","keyError","getSubscription","getLicense","updateSubscription","updateSeats","importDirectory","getApiKeyInformation","organizationApiKeyType","getSso","updateSso","_sync","sync$","configApiService","_serverConfig","serverConfig$","switchMap","timer","E","buildServerConfig","serverConfig","getServerConfig","fetchServerConfig","setServerConfig","defaultErrorMessage","validationErrors","getAllMessages","MemoryStorageService","store","BroadcasterMessagingService","subscriber","arg","HtmlStorageService","defaultOptions","localStorage","getItem","sessionStorage","setItem","removeItem","ContainerService","attachToGlobal","bitwardenContainerService","getEncryptService","InitService","notificationsService","ModalService","applicationRef","modalOpen","setupHandlers","onCreated","modals","shown","closed","onClose","PasswordRepromptComponent","PasswordRepromptService","FileDownloadBuilder","_request","fileType","fileNameLower","endsWith","WebFileDownloadService","createObjectURL","position","ClientType","WebPlatformUtilsService","browserCache","chrome","Web","isChrome","isEdge","isOpera","isVivaldi","isMacAppStore","rel","PublicKeyCredential","supportsDuo","confirmText","cancelText","bodyIsHtml","iconClasses","bootstrapModal","removeAttribute","iconHtmlStr","heightAuto","buttonsStyling","iconHtml","html","titleText","showCancelButton","cancelButtonText","showConfirmButton","confirmButtonText","doc","clipboardData","setData","queryCommandSupported","textarea","textContent","copyEl","contains","execCommand","warn","readFromClipboard","authenticateBiometric","CoreModule","parentModule","initService","systemLanguage","localesDirectory","getLocalesJson","_locale","ReplaySubject","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","p3","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","content","replaceToken","replaceContent","filePath","localesResult","migrationStateFrom1To2","LoginModule","VerticalStepperModule","TrialInitiationModule","OrganizationManageModule","OrganizationUserModule","OssModule","WildcardRoutingModule","ProviderAddOrganizationRequest","WebProviderService","addOrganizationToProvider","encryptedOrgKey","detachOrganizastion","AddOrganizationComponent","webProviderService","onAddedOrganization","ProviderPermissionsGuard","providerPermissions","ProvidersComponent","addExistingOrganization","DisallowedPlanTypes","ClientsComponent","manageOrganizations","showAddExisting","pagedClientsCount","clients","candidateOrgs","allowedOrgsIds","addableOrganizations","pagedClients","addModalRef","ProviderUserAcceptRequest","AcceptProviderComponent","EventsComponent","providerUsersUserIdMap","providerUsersIdMap","ProviderUserBulkRequest","ProviderUserConfirmRequest","ProviderUserBulkConfirmRequest","ProviderUserInviteRequest","ProviderUserUpdateRequest","ServiceUser","ProvidersLayoutComponent","showMenuBar","showManageTab","showSettingsTab","manageRoute","ProviderUpdateRequest","SetupProviderComponent","ProviderSetupRequest","SetupComponent","ProvidersRoutingModule","ProvidersModule","registerComponentFactoryResolver","SecretsManagerModule","AppRoutingModule","toastrService","sanitizer","lastActivity","idleTimer","isIdle","lang","runOutsideAngular","onmousemove","recordActivity","onmousedown","ontouchstart","onclick","onscroll","onkeypress","setFullWidth","clean","setLastActive","idleStateChanged","sanitize","enableHtml","trustedHtml","timeOut","DisablePersonalVaultExportPolicy","DisablePersonalVaultExportPolicyComponent","MaximumVaultTimeoutPolicy","MaximumVaultTimeoutPolicyComponent","AppComponent","ScimConfigApi","scimProvider","ScimConfigRequest","copyScimUrl","toggleScimKey","rotateScimKey","copyScimKey","ScimComponent","showScimSettings","showScimKey","formData","endpointUrl","connection","setConnectionFormValues","loadApiKey","apiKeyRequest","apiKeyResponse","getScimEndpointUrl","rotatePromise","existingConnectionId","OrganizationSsoRequest","SsoConfigView","InputStripSpacesDirective","onInput","CopyClickDirective","valueToCopy","onClick","LaunchClickDirective","uriToLaunch","BaseCvaComponent","controlDir","internalControl","onValueChangesInternal","describedById","showDescribedBy","controlId","helperText","isRequired","onBlurInternal","InputCheckboxComponent","validateKeyConnectorUrl","toggleOpenIdCustomizations","defaultSigningAlgorithm","ssoType","ssoTypeOptions","None","samlSigningAlgorithms","saml2SigningBehaviourOptions","IfIdpWantAuthnRequestsSigned","Always","saml2BindingTypeOptions","HttpRedirect","HttpPost","saml2NameIdFormatOptions","NotConfigured","Unspecified","EmailAddress","X509SubjectName","WindowsDomainQualifiedName","KerberosPrincipalName","EntityIdentifier","Persistent","Transient","connectRedirectOptions","RedirectGet","FormPost","destory$","showOpenIdCustomizations","haveTestedKeyConnector","openIdForm","samlForm","ssoConfigForm","newType","ssoSettings","populateForm","validateForm","readOutErrors","fromView","markAsPending","invalidUrl","getErrorCount","acc","enableTestKeyConnector","samlSigningAlgorithmOptions","markAsDirty","ssoConfigView","errorCount","errorCountText","div","innerText","existing","OrganizationsModule","AppModule","bootstrapModule","preserveWhitespaces","CalloutComponent","useAlertRole","calloutStyle","enforcedPolicyMessage","getPasswordScoreAlertDisplay","FallbackSrcDirective","onError","appFallbackSrc","cardIcons","Visa","Mastercard","Amex","Discover","JCB","Maestro","UnionPay","RuPay","Mir","IconComponent","image","fallbackImage","imageEnabled","setLoginIcon","setCardIcon","hostnameUri","isWebsite","ModalRef","_onCreated","_onClose","_onClosed","_onShow","_onShown","onShow","lastResult","toPromise","A11yTitleDirective","appA11yTitle","hasAttribute","ApiActionDirective","appApiAction","AutofocusDirective","appAutofocus","condition","autofocus","InputVerbatimDirective","appInputVerbatim","disableComplete","StopClickDirective","$event","preventDefault","StopPropDirective","stopPropagation","AuthGuard","promptBiometric","LockGuard","loginpage","UnauthGuard","BitwardenToast","toastPackage","BitwardenToastGlobalConfig","toastComponent","BitwardenToastModule","ngModule","default","numberFormats","cardLength","blocks","Other","CreditCardNumberPipe","creditCardNumber","rules","matchingRule","chunks","JslibModule","forRoot","maxOpened","autoDismiss","closeButton","I18nPipe","SearchPipe","prop1","prop2","prop3","UserNamePipe","WINDOW","MEMORY_STORAGE","SECURE_STORAGE","STATE_FACTORY","STATE_SERVICE_USE_CACHE","LOGOUT_CALLBACK","LOCKED_CALLBACK","LOCALES_DIRECTORY","SYSTEM_LANGUAGE","LOG_MAC_FAILURES","DynamicModalComponent","cd","focusTrapFactory","loadChildComponent","childComponentType","setComponentParameters","componentRef","focusTrap","focusFirstTabbableElementWhenReady","componentType","componentFactory","modalContentRef","destroy","getFocus","autoFocusEl","ModalInjector","_parentInjector","_additionalTokens","notFoundValue","flags","ModalConfig","modalList","factoryResolvers","modalCount","topModal","viewContainerRef","modalComponentRef","openInternal","hostView","replaceTopModal","closeAll","attachToDom","createModalComponent","attachView","domElem","rootNodes","detachView","backdrop","modalEl","dialogEl","zIndex","prepend","closeElement","WeakMap","AbstractThemingService","DynamicTreeNode","setCollapsedGroupings","getCollapsedGroupings","transformation","storedFolders","orgCiphers","oc","getAllFoldersNested","storedCollections","folderCopy","getFolderNested","AccountApiService","AvatarUpdateService","ApiService","AppIdService","AuthService","CollectionService","CryptoFunctionService","EncryptService","EnvironmentService","EventCollectionService","ExportService","FileDownloadService","FolderApiServiceAbstraction","FolderService","InternalFolderService","FormValidationErrorsService","I18nService","KeyConnectorService","LogService","MessagingService","OrganizationUserService","OrganizationApiServiceAbstraction","canAccessSettingsTab","canAccessMembersTab","canAccessGroupsTab","canAccessReportingTab","canAccessReports","canAccessBillingTab","canManageCollections","canAccessManageTab","canAccessOrgAdmin","isManager","canAccessVaultTab","getOrganizationById","canAccessAdmin","isNotProviderUser","OrganizationService","InternalOrganizationService","PasswordGenerationService","PlatformUtilsService","PolicyApiServiceAbstraction","PolicyService","InternalPolicyService","ProviderService","SendService","StateMigrationService","AbstractStorageService","TotpService","TwoFactorService","UserVerificationService","UsernameGenerationService","ValidationService","VaultTimeoutService","VaultTimeoutSettingsService","AuthenticationStatus","AuthenticationType","CipherRepromptType","CipherType","DeviceType","EncryptionType","EventType","FieldType","HashPurpose","HtmlStorageLocation","KdfType","DEFAULT_KDF_TYPE","PBKDF2_SHA256","DEFAULT_KDF_ITERATIONS","SEND_KDF_ITERATIONS","KeySuffixOptions","LoginLinkedId","CardLinkedId","IdentityLinkedId","LogLevelType","OrganizationApiKeyType","OrganizationConnectionType","OrganizationUserStatusType","OrganizationUserType","PaymentMethodType","PlanType","PolicyType","ProductType","SecureNoteType","SendType","ThemeType","TwoFactorProviderType","UriMatchType","VerificationType","getFlags","envFlags","LinkedMetadata","_i18nKey","TreeNode","ServiceUtils","nodeTree","partIndex","delimiter","partName","nestedTraverse","newPartName","getTreeNodeObject","nodeURL","Utils","isNode","process","release","isBrowser","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","binaryString","atob","charCodeAt","fromB64ToArray","fromUrlB64ToB64","strUtf8","unescape","fromB64toUrlB64","fromBufferToB64","b64Str","encodedString","decodeURIComponent","escape","urlB64Str","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","uriString","isNullOrWhitespace","validHosts","getUrl","parseResult","isIp","pair","source","getUrlObject","bgColor","threshold","svgTextFill","bgColorHexNums","fromEntries","record","destination","mobile","vendor","opera","hasProtocol","anchor","regexpEmojiPresentation","CardApi","FieldApi","IdentityApi","LoginUriApi","LoginApi","PermissionsApi","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageScim","SecureNoteApi","SendFileApi","SendTextApi","AttachmentData","CardData","CipherData","CollectionData","EventData","FieldData","FolderData","IdentityData","LoginUriData","LoginData","PasswordHistoryData","PolicyData","ProviderData","SecureNoteData","SendFileData","SendTextData","SendData","ServerConfigData","serverConfigResponse","ThirdPartyServerConfigData","EnvironmentServerConfigData","fromJSON","EncryptionPair","decryptedFromJson","encryptedFromJson","DataEncryptionPair","TemporaryDataEncryption","AccountData","AccountKeys","initRecordEncryptionPairsFromJSON","decObj","AccountProfile","AccountTokens","Attachment","decryptAttachmentKey","getKeyForDecryption","toAttachmentData","buildDataModel","Card","toCardData","Cipher","decAttachment","decField","decPh","toLoginData","toSecureNoteData","toIdentityData","toFieldData","toPasswordHistoryData","Domain","dataObj","notEncList","objProp","notEncStringList","viewModel","mapProp","EncArrayBuffer","minimumLength","ENC_TYPE_LENGTH","throwDecryptionError","arrayBuffer","b64","EncString","encryptedStringOrType","initFromData","initFromEncryptedString","parseEncryptedString","decryptedValue","EnvironmentUrls","Field","Folder","GeneratedPasswordHistory","Identity","LoginUri","toLoginUriData","Login","MasterPasswordPolicyOptions","Organization","isAdmin","hasProvider","Password","Policy","SecureNote","SendFile","SendText","SymmetricCryptoKey","WindowState","CardExport","FieldExport","IdentityExport","LoginUriExport","LoginExport","toView","toDomain","SecureNoteExport","CipherExport","CipherWithIdExport","CollectionExport","CollectionWithIdExport","FolderExport","FolderWithIdExport","CipherBulkDeleteRequest","CipherCollectionsRequest","CipherCreateRequest","CipherWithIdRequest","AttachmentRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","CollectionRequest","FolderRequest","TokenTwoFactorRequest","KeysRequest","OrganizationApiKeyRequest","OrganizationConnectionRequest","OrganizationKeysRequest","OrganizationTaxInfoUpdateRequest","SecretVerificationRequest","SendRequest","fileLength","TaxInfoUpdateRequest","TwoFactorEmailRequest","AttachmentResponse","BaseResponse","propertyName","exactName","otherCasePropertyName","PasswordHistoryResponse","CipherResponse","EmergencyAccessGranteeDetailsResponse","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","EmergencyAccessViewResponse","ErrorResponse","identityResponse","errorModel","responseErrorModel","messages","lastSep","ListResponse","PolicyResponse","AttachmentView","CardView","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","formatYear","CipherView","linkedFieldValue","linkedFieldI18nKey","CollectionView","FieldView","showCount","maskedValue","FolderView","IdentityView","_firstName","_lastName","fullName","fullAddress","fullAddressPart2","addressPart2","ItemView","CanLaunchWhitelist","LoginUriView","_uri","_domain","_hostname","_host","_canLaunch","hostnameOrUri","hostOrUri","LoginView","maskedPassword","PasswordHistoryView","SecureNoteView","SendFileView","SendTextView","SendView","maxAccessCountReached","pendingDelete","ConsoleLogService","timersMap","level","InitializerKey","StorageLocation","State","accountDeserializer","buildAccountMapFromJSON","jsonAccounts","DDG_SHARED_KEY","accountsSubject","activeAccountSubject","activeAccountUnlockedSubject","hasBeenInited","isRecoveredSession","accountDiskCache","setState","createGlobals","initAccountState","updateState","syncAccountFromDisk","storedActiveUser","activeUserId","pushAccounts","diskAccount","getAccountFromDisk","setAccountEnvironmentUrls","scaffoldNewAccountStorage","setActiveUser","clearDecryptedDataForActiveUser","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getTimeoutBasedStorageOptions","getAccount","saveAccount","getAlwaysShowDock","defaultOnDiskOptions","setAlwaysShowDock","saveGlobals","setAutoFillOnPageLoadDefault","getBiometricAwaitingAcceptance","setBiometricAwaitingAcceptance","getBiometricFingerprintValidated","setBiometricFingerprintValidated","setBiometricText","setBiometricUnlock","hasPremiumFromOrganization","getClearClipboard","defaultOnDiskLocalOptions","setClearClipboard","nextValue","defaultSecureStorageOptions","saveSecureStorageKey","getCryptoMasterKeyB64","setCryptoMasterKeyB64","setDefaultUriMatch","getDisableAddLoginNotification","setDisableAddLoginNotification","getDisableAutoBiometricsPrompt","setDisableAutoBiometricsPrompt","getDisableAutoTotpCopy","setDisableAutoTotpCopy","getDisableBadgeCounter","setDisableBadgeCounter","getDisableChangedPasswordNotification","setDisableChangedPasswordNotification","getDisableContextMenuItem","setDisableContextMenuItem","getDisableGa","setDisableGa","getDontShowCardsCurrentTab","setDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","setDontShowIdentitiesCurrentTab","getDuckDuckGoSharedKey","setDuckDuckGoSharedKey","getEnableAlwaysOnTop","accountPreference","globalPreference","setEnableAlwaysOnTop","getEnableAutoFillOnPageLoad","setEnableAutoFillOnPageLoad","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","setEnableCloseToTray","getEnableDuckDuckGoBrowserIntegration","enableDuckDuckGoBrowserIntegration","setEnableDuckDuckGoBrowserIntegration","getEnableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","setEnableStartToTray","getEnableTray","setEnableTray","defaultOnDiskMemoryOptions","getEntityId","setEntityId","getEntityType","setEntityType","getGlobalEnvironmentUrls","getEquivalentDomains","getForcePasswordReset","getInstalledVersion","setInstalledVersion","getMainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","getNoAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","setOpenAtLogin","organizationInvitation","usernameGenerationOptions","accountVaultTimeoutAction","globalVaultTimeoutAction","getStateVersion","setStateVersion","getWindow","setWindow","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","setDiskCache","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deleteDiskCache","deepClone","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","timeoutAction","deserializer","stateUpdater","updatedState","withPrototypeForArrayMembers","memberConstructor","memberConverter","originalResult","getOwnPropertyDescriptors","withPrototypeForObjectValues","valuesConstructor","valuesConverter","TwoFactorProviders","priority","selectedTwoFactorProviderType","twoFactorProvidersData","providerPriority","_value","setSelectedProvider","clearProviders","SizeClasses","xlarge","large","small","xsmall","AvatarComponent","svgCharCount","svgFontSize","svgFontWeight","svgSize","chars","upperCaseText","svg","getFirstLetters","unicodeSafeSubstring","hexColor","createSvgElement","charObj","createTextElement","svgHtml","bypassSecurityTrustResourceUrl","svgTag","backgroundColor","textTag","fontWeight","characters","styles","primary","secondary","danger","hoverStyles","BadgeDirective","badgeType","hasHoverEffects","nodeName","BadgeModule","focusRing","buttonStyles","unstyled","ButtonComponent","block","disabledAttr","setButtonType","defaultIcon","defaultI18n","calloutClass","CharacterType","ColorPasswordComponent","characterStyles","Emoji","Letter","Special","passwordArray","getCharacterClass","charType","getCharacterType","charClass","DialogService","_overlay","_injector","_defaultOptions","_parentDialog","_overlayContainer","scrollStrategy","_destroy$","componentOrTemplateRef","backdropClass","DialogTitleContainerDirective","simple","containerInstance","_ariaLabelledBy","IconDirective","SimpleDialogComponent","hasIcon","BitHintComponent","BitLabel","BitErrorSummary","errorString","dirty","untouched","BitFormFieldControl","BitErrorComponent","displayError","requiredLength","BitFormFieldComponent","ngAfterContentChecked","FormControlModule","InputModule","MultiSelectModule","FormFieldModule","BitPasswordInputToggleDirective","button","formField","toggled","toggledChange","spellcheck","PrefixClasses","PrefixButtonClasses","PrefixStaticContentClasses","BitPrefixDirective","buttonComponent","BitSuffixDirective","contrast","main","muted","light","sizes","BitIconButtonComponent","iconClass","BitIconComponent","domSanitizer","innerHtml","bypassSecurityTrustHtml","Icon","isIcon","DynamicContentNotAllowedError","svgIcon","strings","Search","BitInputDirective","hasPrefix","hasSuffix","ariaInvalid","setSelectionRange","linkStyles","commonStyles","LinkDirective","linkType","AnchorLinkDirective","ButtonLinkDirective","MenuDividerComponent","MenuItemDirective","role","tabIndex","MenuTriggerForDirective","overlay","isOpen","defaultMenuConfig","panelClass","hasBackdrop","scrollStrategies","reposition","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","withLockedPosition","withFlexibleDimensions","withPush","hasPopup","menu","ariaRole","toggleMenu","destroyMenu","openMenu","disposeAll","overlayRef","templatePortal","attach","closedEventsSub","getClosedEvents","keyDownEventsSub","keyManager","keydownEvents","onKeydown","detachments","escKey","backdropClick","menuClosed","dispose","MenuComponent","menuItems","withWrap","ButtonLikeAbstraction","CellDirective","RowDirective","alignContent","alignmentClass","TableComponent","TabHeaderComponent","TabListContainerDirective","TabListItemDirective","baseClassList","active","activeClassList","disabledClassList","textColorClassList","TabLinkComponent","_tabNavBar","routerLinkMatchOptions","matrixParams","paths","fragment","onKeyDown","tabItem","routerLinkActive","isActiveChange","updateActiveLink","TabNavBarComponent","tabLabels","withHorizontalOrientation","withHomeAndEnd","toArray","updateActiveItem","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","O","chunkIds","notFulfilled","Infinity","fulfilled","getter","__esModule","definition","defineProperty","enumerable","chunkId","miniCssF","globalThis","Function","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","nc","onScriptComplete","prev","doneFns","parentNode","Symbol","toStringTag","nmd","scriptUrl","importScripts","currentScript","baseURI","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}