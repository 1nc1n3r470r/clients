{"version":3,"file":"app/main.96bd88a4d3ed65a982d4.js","mappings":"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","sources":["webpack://@bitwarden/web-vault/webpack/runtime/chunk loaded","webpack://@bitwarden/web-vault/webpack/runtime/load script","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-create.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/guards/org-permissions.guard.ts","webpack://@bitwarden/web-vault/./src/app/shared/loose-components.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/avatar/avatar.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/async-actions/async-actions.module.ts","webpack://@bitwarden/web-vault/./src/app/shared/locales.ts","webpack://@bitwarden/web-vault/./src/app/shared/shared.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-badge.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/vault-filter-shared.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/vault-filter.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/injection-tokens.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/account/account-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/account/account.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/anonymousHub.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/appId.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/audit.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/auth.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/config-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/cryptoFunction.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/encrypt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/environment.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/folder/folder-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/formValidationErrors.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/messaging.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/notifications.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization/organization-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/policy/policy-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/provider.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/search.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/send.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/settings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/stateMigration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/storage.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/sync/syncNotifier.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/token.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/totp.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/twoFactor.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/userVerification/userVerification-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/usernameGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/vaultTimeout/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/vaultTimeout/vaultTimeoutSettings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/accountFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/globalStateFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/stateFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/flags.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/server-config.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/environment-urls.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/stateVersion.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/themeType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/account.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/window-state.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/global-state.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/notificationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/notification.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/deviceType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/anonymousHub.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/device.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identity-token/token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identity-token/api-token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identity-token/token-two-factor.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/api-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/attachment.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/password-history.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/cipher.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/attachment-upload-data.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/auth-request.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/authentication/register.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billing.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billing-history.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billing-payment.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/breach-account.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/selection-read-only.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/collection.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/device-verification.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/global-domain.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/domains.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/emergency-access.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/event.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/group.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identity-captcha.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identity-token.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identity-two-factor.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/key-connector-user-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/list.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-connection.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-export.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-sponsorship-sync-status.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-user-bulk-public-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-user-bulk.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/permissions.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-user.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profile-organization.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profile-provider-organization.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profile-provider.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profile.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/payment.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/plan.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/policy.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/prelogin.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider-organization.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider-user-bulk-public-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider-user-bulk.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider-user.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/send-file.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/send-text.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/send-access.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/send-file-download-data.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/send.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/send-file-upload-data.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sso-pre-validate.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/subscription.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/folder.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sync.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/tax-info.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/tax-rate.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-authenticator.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-duo.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-email.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-provider.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-recover.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-web-authn.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-yubi-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/user-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/htmlStorageLocation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/audit.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/throttle.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authenticationStatus.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authenticationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/keySuffixOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/twoFactorProviderType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/auth-result.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/keys.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/logIn.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/hashPurpose.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/apiLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identity-token/password-token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/passwordLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/passwordlessLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identity-token/sso-token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/ssoLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/prelogin.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/sequentialize.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/enc-array-buffer.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sorted-ciphers-cache.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-bulk-delete.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-bulk-move.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-bulk-restore.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-with-id.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-bulk-share.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-collections.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-create.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-partial.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-share.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cipher.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/server-config.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/server-config.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/wordlist.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encrypted-organization-key.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/crypto.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encrypted-object.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/encrypt.service.implementation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/get-class-initializer.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/multithread-encrypt.service.implementation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/event.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/event.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/event.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/fileUploadType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/azureFileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/bitwardenFileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/folder.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationUserType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/account/set-key-connector-key.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/key-connector-user-key.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/ssoEnums.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-api-key-information.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-auto-enroll-status.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/keys.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-keys.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-subscription.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/sso-config.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization/organization-sso.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationUserStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/organization.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/organization.ts","webpack://@bitwarden/web-vault/../../libs/common/src/types/syncEventArgs.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/generated-password-history.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/password-generator-policy-options.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/policy.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/policy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/reset-password-policy-options.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/providerUserStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/providerUserType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/provider.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/sendType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/search.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/send-file.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/send-text.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/send.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/send-file.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/send-text.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/send.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send-file.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send-text.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/send.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/storageLocation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/provider.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/state.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/token.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/stateMigration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/sync/sync.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/totp.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/twoFactor.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/account/verify-otp.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/secret-verification.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/anonAddyForwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/duckDuckGoForwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/fastmailForwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/firefoxRelayForwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/forwarderOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/emailForwarders/simpleLoginForwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/usernameGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/decrypt-parameters.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/auth.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/lock.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/unauth.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/themeBuilder.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/theming.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/theming.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/jslib-services.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/appId.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/auth.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/folder/folder.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/folder/folder-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/account/account-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/account/account.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/environment.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/fileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/settings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/vaultTimeout/vaultTimeoutSettings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/vaultTimeout/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/export.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/notifications.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/webCryptoFunction.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/event.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/policy/policy.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/policy/policy-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/send.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/keyConnector.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/userVerification/userVerification.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization/organization.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/provider.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/formValidationErrors.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/userVerification/userVerification-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization/organization-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/sync/syncNotifier.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/config.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/config/config.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/config/config-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/validation.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/memoryStorage.service.ts","webpack://@bitwarden/web-vault/./src/app/core/broadcaster-messaging.service.ts","webpack://@bitwarden/web-vault/./src/app/core/event.service.ts","webpack://@bitwarden/web-vault/./src/app/core/html-storage.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/container.service.ts","webpack://@bitwarden/web-vault/./src/app/core/init.service.ts","webpack://@bitwarden/web-vault/./src/app/core/modal.service.ts","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.html","webpack://@bitwarden/web-vault/./src/app/core/password-reprompt.service.ts","webpack://@bitwarden/web-vault/./src/app/core/policy-list.service.ts","webpack://@bitwarden/web-vault/./src/app/core/router.service.ts","webpack://@bitwarden/web-vault/./src/app/core/state/account.ts","webpack://@bitwarden/web-vault/./src/app/core/state/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileDownload/fileDownloadBuilder.ts","webpack://@bitwarden/web-vault/./src/app/core/web-file-download.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/clientType.ts","webpack://@bitwarden/web-vault/./src/app/core/web-platform-utils.service.ts","webpack://@bitwarden/web-vault/./src/app/core/core.module.ts","webpack://@bitwarden/web-vault/./src/utils/flags.ts","webpack://@bitwarden/web-vault/./src/app/core/state/global-state.ts","webpack://@bitwarden/web-vault/./src/app/core/i18n.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/i18n.service.ts","webpack://@bitwarden/web-vault/./src/app/core/state-migration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergency-access-accept.request.ts","webpack://@bitwarden/web-vault/./src/app/common/base.accept.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-user-accept.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/password-hint.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/hint.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/lock.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/misc/captcha_iframe.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/iframe_component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authRequestType.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/captchaProtected.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/log-in-credentials.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/passwordless-create-auth.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login/login-with-device.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/login/login-with-device.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/login.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login/login.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/login/login.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/delete-recover.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/two-factor-recovery.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/register.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/inputsFieldMatch.validator.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/register.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/reference-event.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/shared/components/password-strength/password-strength.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/shared/components/password-strength/password-strength.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/error-summary.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/register.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/register.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/remove-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-user-reset-password-enrollment.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/set-password.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/change-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/set-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/sso.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/planType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/productType.ts","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-information.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-information.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-forbes.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-forbes.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-us-news.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-us-news.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/confirmation-details.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/paymentMethodType.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/confirmation-details.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-create.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-keys.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-upgrade.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-organization-create.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.ts","webpack://@bitwarden/web-vault/./src/scss/export.module.scss","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/tax-info-update.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-tax-info-update.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.html","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.html","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/billing.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/billing.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/default-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/default-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise1-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise1-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise2-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise2-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams1-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams1-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams2-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams2-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-cnet.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-cnet.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-individual-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-individual-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/webauthn_iframe.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/two-factor-email.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/two-factor.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/password.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/update-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-user-reset-password.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-temp-password.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/update-temp-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verify-email.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verify-delete-recover.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.html","webpack://@bitwarden/web-vault/./src/app/guards/home.guard.ts","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/stop-prop.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-item.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-trigger-for.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-divider.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/avatar/avatar.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-divider.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.html","webpack://@bitwarden/web-vault/./src/app/components/organization-switcher.component.html","webpack://@bitwarden/web-vault/./src/app/components/organization-switcher.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/layouts/organization-layout.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/layouts/organization-layout.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/selection-read-only.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collection-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collection-add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge/badge.directive.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/event.view.ts","webpack://@bitwarden/web-vault/./src/app/common/base.events.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/events.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/events.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/group.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-user-bulk.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-user-confirm.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/common/base.people.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-user-bulk-confirm.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-remove.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-restore-revoke.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-restore-revoke.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-status.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/bulk/bulk-status.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/reset-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-user-invite.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-user-update.request.ts","webpack://@bitwarden/web-vault/./src/app/components/nested-checkbox.component.html","webpack://@bitwarden/web-vault/./src/app/components/nested-checkbox.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-user-update-groups.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/people.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/people.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/policy.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/base-policy.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policy-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policy-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policies.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/policies.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-update.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.html","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/transactionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verify-bank.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/bit-pay-invoice.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/payment.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-billing.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-billing.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationApiKeyType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationConnectionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/billing-sync-config.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/billing-sync-config.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-connection.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/billing-sync-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/billing-sync-key.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-api-key.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/billing-sync-api-key.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/billing-sync-api-key.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/subscription-hidden.icon.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/storage.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.html","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-subscription-update.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/adjust-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/adjust-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/change-plan.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/change-plan.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/download-license.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/download-license.component.html","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-duo.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/two-factor-provider.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-base.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-authenticator.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-email.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-web-authn-delete.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-web-authn.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-yubio-otp.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/not-premium.directive.ts","webpack://@bitwarden/web-vault/./src/app/components/premium-badge.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/true-false-value.directive.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.html","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/cipher-report.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/fallback-src.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/icon.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/icon.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/exposed-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/inactive-two-factor-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reused-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/tools.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/tools/tools.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/unsecured-websites-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/weak-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/tools/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/shared/pipes/pipes.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/shared/vault.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/shared/vault-shared.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-filter/vault-filter.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/models/vault-filter.model.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.html","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/attachments.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/ciphers.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icons/search.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/ellipsis.pipe.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-name-badge.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-name-badge.component.html","webpack://@bitwarden/web-vault/./src/app/vault/shared/pipes/get-organization-name.pipe.ts","webpack://@bitwarden/web-vault/./src/app/vault/ciphers.component.html","webpack://@bitwarden/web-vault/./src/app/vault/ciphers.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/ciphers.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.html","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/collections.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/vault-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/collection-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/collection-filter/collection-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/collection-filter/collection-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/folder-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/folder-filter/folder-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/folder-filter/folder-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/status-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/status-filter/status-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/status-filter/status-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/type-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/type-filter/type-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/type-filter/type-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/components/organization-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/enroll-master-password-reset.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/enroll-master-password-reset.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/link-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/link-sso.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-options.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-options.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/organization-filter/organization-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-filter/vault-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-delete.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-move.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-move.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-restore.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/types/checkable.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-restore.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-actions.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-actions.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/organization-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/planSponsorshipType.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/accept-family-sponsorship.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/accept-family-sponsorship.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization/organization-sponsorship-redeem.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/shared/guards/has-premium.guard.ts","webpack://@bitwarden/web-vault/./src/app/reports/models/report-variant.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/breach-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/breach-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-breach.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-exposed-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-inactive-two-factor.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-reused-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-unsecured-websites.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-weak-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports.ts","webpack://@bitwarden/web-vault/./src/app/reports/report-card/report-card.component.html","webpack://@bitwarden/web-vault/./src/app/reports/report-card/report-card.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/report-list/report-list.component.html","webpack://@bitwarden/web-vault/./src/app/reports/report-list/report-list.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reports-home.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports-layout.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/reports-home.component.html","webpack://@bitwarden/web-vault/./src/app/reports/reports-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/send-access.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send-access.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/send-access.request.ts","webpack://@bitwarden/web-vault/./src/app/send/access.component.html","webpack://@bitwarden/web-vault/./src/app/send/access.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/send.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.html","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/send.component.html","webpack://@bitwarden/web-vault/./src/app/send/send.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.html","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/email-token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/email.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-profile.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.html","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-domains.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.html","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/emergencyAccessStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/emergencyAccessType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergency-access-confirm.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergency-access-invite.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergency-access-update.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergency-access-password.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.html","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/preferences.component.html","webpack://@bitwarden/web-vault/./src/app/settings/preferences.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/folder-with-id.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/send-with-id.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-key.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/kdf.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security-keys.component.html","webpack://@bitwarden/web-vault/./src/app/settings/security-keys.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security.component.html","webpack://@bitwarden/web-vault/./src/app/settings/security.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/notAllowedValueAsync.validator.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/payment-method.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment-method.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.html","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-billing-history.component.html","webpack://@bitwarden/web-vault/./src/app/settings/user-billing-history.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/subscription-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/generator.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/password-generator-history.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/select-copy.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/color-password.pipe.ts","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.html","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.html","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.html","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/share.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault.module.ts","webpack://@bitwarden/web-vault/./src/app/oss-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login/login.module.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.module.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/organization-manage.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/organization-user.module.ts","webpack://@bitwarden/web-vault/./src/app/oss.module.ts","webpack://@bitwarden/web-vault/./src/app/wildcard-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-add-organization.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/services/webProvider.service.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/add-organization.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/add-organization.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/guards/provider-permissions.guard.ts","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.html","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/clients.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/clients.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/create-organization.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/create-organization.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-accept.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/accept-provider.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/accept-provider.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/events.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/events.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/manage.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/manage.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-bulk.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-confirm.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-bulk-confirm.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-invite.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-update.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/user-add-edit.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/user-add-edit.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/people.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/people.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-layout.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-layout.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-update.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/account.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/account.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/settings.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup-provider.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup-provider.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-setup.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-routing.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.html","webpack://@bitwarden/web-vault/./src/app/app.component.ts","webpack://@bitwarden/web-vault/./src/app/app.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/disable-personal-vault-export.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/disable-personal-vault-export.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/maximum-vault-timeout.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/maximum-vault-timeout.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/scim-config.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/scim-config.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/scim.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/scim.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/dirty.validator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization/organization-sso.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sso-config.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/view.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/a11y-invalid.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/input-strip-spaces.directive.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/base-cva.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-checkbox.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-checkbox.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-text.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-text.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-text-readonly.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-text-readonly.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/select.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/select.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/sso.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/sso.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/organizations-routing.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/organizations.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/main.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/callout.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/callout.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/modal.ref.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/user-verification.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/user-verification.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/a11y-title.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/api-action.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/autofocus.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/input-verbatim.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/stop-click.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/toastr.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/credit-card-number.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/jslib.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/i18n.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/search.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/user-name.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/dynamic-modal.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/modal-injector.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/modal.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/models/dynamic-tree-node.model.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/vault-filter/services/vault-filter.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/cipher.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/crypto.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/event.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/export.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileDownload/fileDownload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/folder/folder.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/i18n.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/keyConnector.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/log.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization/organization.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/platformUtils.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/policy/policy.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/sync/sync.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/userVerification/userVerification.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/validation.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/cipherRepromptType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/cipherType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/encryptionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/eventType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/fieldType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/kdfType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/linkedIdType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/logLevelType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/policyType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/secureNoteType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/uriMatchType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/verificationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/linkedFieldOption.decorator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/tree-node.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/serviceUtils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/utils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/card.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/field.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/identity.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/login-uri.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/login.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/secure-note.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/attachment.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/card.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/cipher.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/collection.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/field.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/identity.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/login-uri.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/login.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/password-history.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/secure-note.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/attachment.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/card.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/cipher.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/collection.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/domain-base.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/enc-string.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/field.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/folder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/identity.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/login-uri.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/login.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/master-password-policy-options.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/password.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/secure-note.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/symmetric-crypto-key.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/card.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/field.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/identity.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/login-uri.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/login.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/secure-note.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cipher.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cipher-with-ids.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/collection.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/collection-with-id.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/folder.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/folder-with-id.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/attachment.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/collection.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/folder.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/base.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/error.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/attachment.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/card.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/cipher.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/collection.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/field.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/folder.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/identity.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/item.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/login-uri.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/login.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/password-history.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/secure-note.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/consoleLog.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/initializer-key.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge/badge.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/shared/button-like.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field-control.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/error.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/input/input.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/multi-select/multi-select.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/hint.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/label.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/prefix.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/suffix.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/input/input.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/shared/i18n.pipe.ts","webpack://@bitwarden/web-vault/../../libs/components/src/shared/shared.module.ts","webpack://@bitwarden/web-vault/webpack/bootstrap","webpack://@bitwarden/web-vault/webpack/runtime/compat get default export","webpack://@bitwarden/web-vault/webpack/runtime/define property getters","webpack://@bitwarden/web-vault/webpack/runtime/ensure chunk","webpack://@bitwarden/web-vault/webpack/runtime/get javascript chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/get mini-css chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/global","webpack://@bitwarden/web-vault/webpack/runtime/hasOwnProperty shorthand","webpack://@bitwarden/web-vault/webpack/runtime/make namespace object","webpack://@bitwarden/web-vault/webpack/runtime/node module decorator","webpack://@bitwarden/web-vault/webpack/runtime/publicPath","webpack://@bitwarden/web-vault/webpack/runtime/jsonp chunk loading","webpack://@bitwarden/web-vault/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"@bitwarden/web-vault:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { RegisterFormComponent } from \"./register-form.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [RegisterFormComponent],\n  exports: [RegisterFormComponent],\n})\nexport class RegisterFormModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { OrganizationInformationComponent } from \"./organization-information.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [OrganizationInformationComponent],\n  exports: [OrganizationInformationComponent],\n})\nexport class OrganizationCreateModule {}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport {\n  canAccessOrgAdmin,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OrganizationPermissionsGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private organizationService: OrganizationService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private syncService: SyncService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    // TODO: We need to fix this issue once and for all.\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n\n    const org = this.organizationService.get(route.params.organizationId);\n    if (org == null) {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    if (!org.isOwner && !org.enabled) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"organizationIsDisabled\")\n      );\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    const permissionsCallback: (organization: Organization) => boolean =\n      route.data?.organizationPermissions;\n    const hasPermissions = permissionsCallback == null || permissionsCallback(org);\n\n    if (!hasPermissions) {\n      // Handle linkable ciphers for organizations the user only has view access to\n      // https://bitwarden.atlassian.net/browse/EC-203\n      const cipherId =\n        state.root.queryParamMap.get(\"itemId\") || state.root.queryParamMap.get(\"cipherId\");\n      if (cipherId) {\n        return this.router.createUrlTree([\"/vault\"], {\n          queryParams: {\n            itemId: cipherId,\n          },\n        });\n      }\n\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"accessDenied\"));\n      return canAccessOrgAdmin(org)\n        ? this.router.createUrlTree([\"/organizations\", org.id])\n        : this.router.createUrlTree([\"/\"]);\n    }\n\n    return true;\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { UserVerificationComponent } from \"@bitwarden/angular/components/user-verification.component\";\n\nimport { AcceptEmergencyComponent } from \"../accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"../accounts/accept-organization.component\";\nimport { HintComponent } from \"../accounts/hint.component\";\nimport { LockComponent } from \"../accounts/lock.component\";\nimport { RecoverDeleteComponent } from \"../accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"../accounts/recover-two-factor.component\";\nimport { RegisterFormModule } from \"../accounts/register-form/register-form.module\";\nimport { RegisterComponent } from \"../accounts/register.component\";\nimport { RemovePasswordComponent } from \"../accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"../accounts/set-password.component\";\nimport { SsoComponent } from \"../accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"../accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"../accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"../accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"../accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"../accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"../accounts/verify-recover-delete.component\";\nimport { NestedCheckboxComponent } from \"../components/nested-checkbox.component\";\nimport { OrganizationSwitcherComponent } from \"../components/organization-switcher.component\";\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\nimport { PremiumBadgeComponent } from \"../components/premium-badge.component\";\nimport { UserVerificationPromptComponent } from \"../components/user-verification-prompt.component\";\nimport { FooterComponent } from \"../layouts/footer.component\";\nimport { FrontendLayoutComponent } from \"../layouts/frontend-layout.component\";\nimport { NavbarComponent } from \"../layouts/navbar.component\";\nimport { UserLayoutComponent } from \"../layouts/user-layout.component\";\nimport { OrganizationCreateModule } from \"../organizations/create/organization-create.module\";\nimport { OrganizationLayoutComponent } from \"../organizations/layouts/organization-layout.component\";\nimport { BulkConfirmComponent as OrgBulkConfirmComponent } from \"../organizations/manage/bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent as OrgBulkRemoveComponent } from \"../organizations/manage/bulk/bulk-remove.component\";\nimport { BulkRestoreRevokeComponent as OrgBulkRestoreRevokeComponent } from \"../organizations/manage/bulk/bulk-restore-revoke.component\";\nimport { BulkStatusComponent as OrgBulkStatusComponent } from \"../organizations/manage/bulk/bulk-status.component\";\nimport { CollectionAddEditComponent as OrgCollectionAddEditComponent } from \"../organizations/manage/collection-add-edit.component\";\nimport { CollectionsComponent as OrgManageCollectionsComponent } from \"../organizations/manage/collections.component\";\nimport { EntityEventsComponent as OrgEntityEventsComponent } from \"../organizations/manage/entity-events.component\";\nimport { EventsComponent as OrgEventsComponent } from \"../organizations/manage/events.component\";\nimport { GroupAddEditComponent as OrgGroupAddEditComponent } from \"../organizations/manage/group-add-edit.component\";\nimport { GroupsComponent as OrgGroupsComponent } from \"../organizations/manage/groups.component\";\nimport { ManageComponent as OrgManageComponent } from \"../organizations/manage/manage.component\";\nimport { PeopleComponent as OrgPeopleComponent } from \"../organizations/manage/people.component\";\nimport { PoliciesComponent as OrgPoliciesComponent } from \"../organizations/manage/policies.component\";\nimport { PolicyEditComponent as OrgPolicyEditComponent } from \"../organizations/manage/policy-edit.component\";\nimport { ResetPasswordComponent as OrgResetPasswordComponent } from \"../organizations/manage/reset-password.component\";\nimport { UserAddEditComponent as OrgUserAddEditComponent } from \"../organizations/manage/user-add-edit.component\";\nimport { UserConfirmComponent as OrgUserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\nimport { UserGroupsComponent as OrgUserGroupsComponent } from \"../organizations/manage/user-groups.component\";\nimport { DisableSendPolicyComponent } from \"../organizations/policies/disable-send.component\";\nimport { MasterPasswordPolicyComponent } from \"../organizations/policies/master-password.component\";\nimport { PasswordGeneratorPolicyComponent } from \"../organizations/policies/password-generator.component\";\nimport { PersonalOwnershipPolicyComponent } from \"../organizations/policies/personal-ownership.component\";\nimport { RequireSsoPolicyComponent } from \"../organizations/policies/require-sso.component\";\nimport { ResetPasswordPolicyComponent } from \"../organizations/policies/reset-password.component\";\nimport { SendOptionsPolicyComponent } from \"../organizations/policies/send-options.component\";\nimport { SingleOrgPolicyComponent } from \"../organizations/policies/single-org.component\";\nimport { TwoFactorAuthenticationPolicyComponent } from \"../organizations/policies/two-factor-authentication.component\";\nimport { AccountComponent as OrgAccountComponent } from \"../organizations/settings/account.component\";\nimport { AdjustSubscription } from \"../organizations/settings/adjust-subscription.component\";\nimport { BillingSyncApiKeyComponent } from \"../organizations/settings/billing-sync-api-key.component\";\nimport { ChangePlanComponent } from \"../organizations/settings/change-plan.component\";\nimport { DeleteOrganizationComponent } from \"../organizations/settings/delete-organization.component\";\nimport { DownloadLicenseComponent } from \"../organizations/settings/download-license.component\";\nimport { OrganizationBillingComponent } from \"../organizations/settings/organization-billing.component\";\nimport { OrganizationSubscriptionComponent } from \"../organizations/settings/organization-subscription.component\";\nimport { SettingsComponent as OrgSettingComponent } from \"../organizations/settings/settings.component\";\nimport { TwoFactorSetupComponent as OrgTwoFactorSetupComponent } from \"../organizations/settings/two-factor-setup.component\";\nimport { AcceptFamilySponsorshipComponent } from \"../organizations/sponsorships/accept-family-sponsorship.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"../organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent } from \"../organizations/tools/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent } from \"../organizations/tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent } from \"../organizations/tools/reused-passwords-report.component\";\nimport { ToolsComponent as OrgToolsComponent } from \"../organizations/tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent } from \"../organizations/tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent } from \"../organizations/tools/weak-passwords-report.component\";\nimport { AddEditComponent as OrgAddEditComponent } from \"../organizations/vault/add-edit.component\";\nimport { AttachmentsComponent as OrgAttachmentsComponent } from \"../organizations/vault/attachments.component\";\nimport { CollectionsComponent as OrgCollectionsComponent } from \"../organizations/vault/collections.component\";\nimport { ProvidersComponent } from \"../providers/providers.component\";\nimport { AccessComponent } from \"../send/access.component\";\nimport { AddEditComponent as SendAddEditComponent } from \"../send/add-edit.component\";\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from \"../send/efflux-dates.component\";\nimport { SendComponent } from \"../send/send.component\";\nimport { AccountComponent } from \"../settings/account.component\";\nimport { AddCreditComponent } from \"../settings/add-credit.component\";\nimport { AdjustPaymentComponent } from \"../settings/adjust-payment.component\";\nimport { AdjustStorageComponent } from \"../settings/adjust-storage.component\";\nimport { ApiKeyComponent } from \"../settings/api-key.component\";\nimport { BillingSyncKeyComponent } from \"../settings/billing-sync-key.component\";\nimport { ChangeEmailComponent } from \"../settings/change-email.component\";\nimport { ChangeKdfComponent } from \"../settings/change-kdf.component\";\nimport { ChangePasswordComponent } from \"../settings/change-password.component\";\nimport { CreateOrganizationComponent } from \"../settings/create-organization.component\";\nimport { DeauthorizeSessionsComponent } from \"../settings/deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"../settings/delete-account.component\";\nimport { DomainRulesComponent } from \"../settings/domain-rules.component\";\nimport { EmergencyAccessAddEditComponent } from \"../settings/emergency-access-add-edit.component\";\nimport { EmergencyAccessAttachmentsComponent } from \"../settings/emergency-access-attachments.component\";\nimport { EmergencyAccessConfirmComponent } from \"../settings/emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"../settings/emergency-access-takeover.component\";\nimport { EmergencyAccessViewComponent } from \"../settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"../settings/emergency-access.component\";\nimport { EmergencyAddEditComponent } from \"../settings/emergency-add-edit.component\";\nimport { OrganizationPlansComponent } from \"../settings/organization-plans.component\";\nimport { PaymentMethodComponent } from \"../settings/payment-method.component\";\nimport { PaymentComponent } from \"../settings/payment.component\";\nimport { PreferencesComponent } from \"../settings/preferences.component\";\nimport { PremiumComponent } from \"../settings/premium.component\";\nimport { ProfileComponent } from \"../settings/profile.component\";\nimport { PurgeVaultComponent } from \"../settings/purge-vault.component\";\nimport { SecurityKeysComponent } from \"../settings/security-keys.component\";\nimport { SecurityComponent } from \"../settings/security.component\";\nimport { SettingsComponent } from \"../settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"../settings/sponsored-families.component\";\nimport { SponsoringOrgRowComponent } from \"../settings/sponsoring-org-row.component\";\nimport { SubscriptionComponent } from \"../settings/subscription.component\";\nimport { TaxInfoComponent } from \"../settings/tax-info.component\";\nimport { TwoFactorAuthenticatorComponent } from \"../settings/two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"../settings/two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"../settings/two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"../settings/two-factor-recovery.component\";\nimport { TwoFactorSetupComponent } from \"../settings/two-factor-setup.component\";\nimport { TwoFactorVerifyComponent } from \"../settings/two-factor-verify.component\";\nimport { TwoFactorWebAuthnComponent } from \"../settings/two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"../settings/two-factor-yubikey.component\";\nimport { UpdateKeyComponent } from \"../settings/update-key.component\";\nimport { UpdateLicenseComponent } from \"../settings/update-license.component\";\nimport { UserBillingHistoryComponent } from \"../settings/user-billing-history.component\";\nimport { UserSubscriptionComponent } from \"../settings/user-subscription.component\";\nimport { VaultTimeoutInputComponent } from \"../settings/vault-timeout-input.component\";\nimport { VerifyEmailComponent } from \"../settings/verify-email.component\";\nimport { GeneratorComponent } from \"../tools/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"../tools/password-generator-history.component\";\nimport { ToolsComponent } from \"../tools/tools.component\";\nimport { AddEditCustomFieldsComponent } from \"../vault/add-edit-custom-fields.component\";\nimport { AddEditComponent } from \"../vault/add-edit.component\";\nimport { AttachmentsComponent } from \"../vault/attachments.component\";\nimport { BulkActionsComponent } from \"../vault/bulk-actions.component\";\nimport { BulkDeleteComponent } from \"../vault/bulk-delete.component\";\nimport { BulkMoveComponent } from \"../vault/bulk-move.component\";\nimport { BulkRestoreComponent } from \"../vault/bulk-restore.component\";\nimport { BulkShareComponent } from \"../vault/bulk-share.component\";\nimport { CollectionsComponent } from \"../vault/collections.component\";\nimport { FolderAddEditComponent } from \"../vault/folder-add-edit.component\";\nimport { OrganizationBadgeModule } from \"../vault/organization-badge/organization-badge.module\";\nimport { ShareComponent } from \"../vault/share.component\";\nimport { VaultFilterModule } from \"../vault/vault-filter/vault-filter.module\";\n\nimport { SharedModule } from \".\";\n\n// Please do not add to this list of declarations - we should refactor these into modules when doing so makes sense until there are none left.\n// If you are building new functionality, please create or extend a feature module instead.\n@NgModule({\n  imports: [\n    SharedModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    OrganizationCreateModule,\n    RegisterFormModule,\n  ],\n  declarations: [\n    PremiumBadgeComponent,\n    AcceptEmergencyComponent,\n    AcceptFamilySponsorshipComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    AdjustSubscription,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    BillingSyncApiKeyComponent,\n    BillingSyncKeyComponent,\n    BulkActionsComponent,\n    BulkDeleteComponent,\n    BulkMoveComponent,\n    BulkRestoreComponent,\n    BulkShareComponent,\n    ChangeEmailComponent,\n    ChangeKdfComponent,\n    ChangePasswordComponent,\n    ChangePlanComponent,\n    CollectionsComponent,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DeleteOrganizationComponent,\n    DisableSendPolicyComponent,\n    DomainRulesComponent,\n    DownloadLicenseComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    HintComponent,\n    LockComponent,\n    MasterPasswordPolicyComponent,\n    NavbarComponent,\n    NestedCheckboxComponent,\n    OrganizationSwitcherComponent,\n    OrgAccountComponent,\n    OrgAddEditComponent,\n    OrganizationBillingComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrganizationSubscriptionComponent,\n    OrgAttachmentsComponent,\n    OrgBulkConfirmComponent,\n    OrgBulkRestoreRevokeComponent,\n    OrgBulkRemoveComponent,\n    OrgBulkStatusComponent,\n    OrgCollectionAddEditComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEventsComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgGroupAddEditComponent,\n    OrgGroupsComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgPeopleComponent,\n    OrgPoliciesComponent,\n    OrgPolicyEditComponent,\n    OrgResetPasswordComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgSettingComponent,\n    OrgToolsComponent,\n    OrgTwoFactorSetupComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserAddEditComponent,\n    OrgUserConfirmComponent,\n    OrgUserGroupsComponent,\n    OrgWeakPasswordsReportComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordGeneratorPolicyComponent,\n    PasswordRepromptComponent,\n    UserVerificationPromptComponent,\n    PaymentComponent,\n    PaymentMethodComponent,\n    PersonalOwnershipPolicyComponent,\n    PreferencesComponent,\n    PremiumBadgeComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RegisterComponent,\n    RemovePasswordComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    SecurityComponent,\n    SecurityKeysComponent,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SendOptionsPolicyComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SingleOrgPolicyComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    SubscriptionComponent,\n    TaxInfoComponent,\n    ToolsComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdatePasswordComponent,\n    UpdateTempPasswordComponent,\n    UserBillingHistoryComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyRecoverDeleteComponent,\n  ],\n  exports: [\n    PremiumBadgeComponent,\n    AcceptEmergencyComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    AdjustSubscription,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    BulkActionsComponent,\n    BulkDeleteComponent,\n    BulkMoveComponent,\n    BulkRestoreComponent,\n    BulkShareComponent,\n    ChangeEmailComponent,\n    ChangeKdfComponent,\n    ChangePasswordComponent,\n    ChangePlanComponent,\n    CollectionsComponent,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DeleteOrganizationComponent,\n    DisableSendPolicyComponent,\n    DomainRulesComponent,\n    DownloadLicenseComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    HintComponent,\n    LockComponent,\n    MasterPasswordPolicyComponent,\n    NavbarComponent,\n    NestedCheckboxComponent,\n    OrganizationSwitcherComponent,\n    OrgAccountComponent,\n    OrgAddEditComponent,\n    OrganizationBillingComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrganizationSubscriptionComponent,\n    OrgAttachmentsComponent,\n    OrgBulkConfirmComponent,\n    OrgBulkRestoreRevokeComponent,\n    OrgBulkRemoveComponent,\n    OrgBulkStatusComponent,\n    OrgCollectionAddEditComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEventsComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgGroupAddEditComponent,\n    OrgGroupsComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgPeopleComponent,\n    OrgPoliciesComponent,\n    OrgPolicyEditComponent,\n    OrgResetPasswordComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgSettingComponent,\n    OrgToolsComponent,\n    OrgTwoFactorSetupComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserAddEditComponent,\n    OrgUserConfirmComponent,\n    OrgUserGroupsComponent,\n    OrgWeakPasswordsReportComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordGeneratorPolicyComponent,\n    PasswordRepromptComponent,\n    PaymentComponent,\n    PaymentMethodComponent,\n    PersonalOwnershipPolicyComponent,\n    PreferencesComponent,\n    PremiumBadgeComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RegisterComponent,\n    RemovePasswordComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    SecurityComponent,\n    SecurityKeysComponent,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SendOptionsPolicyComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SingleOrgPolicyComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    SubscriptionComponent,\n    TaxInfoComponent,\n    ToolsComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdatePasswordComponent,\n    UpdateTempPasswordComponent,\n    UserBillingHistoryComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyRecoverDeleteComponent,\n  ],\n})\nexport class LooseComponentsModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ButtonComponent } from \"./button.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [ButtonComponent],\n  declarations: [ButtonComponent],\n})\nexport class ButtonModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { CalloutComponent } from \"./callout.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [CalloutComponent],\n  declarations: [CalloutComponent],\n})\nexport class CalloutModule {}\n","import { OverlayModule } from \"@angular/cdk/overlay\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { MenuDividerComponent } from \"./menu-divider.component\";\nimport { MenuItemDirective } from \"./menu-item.directive\";\nimport { MenuTriggerForDirective } from \"./menu-trigger-for.directive\";\nimport { MenuComponent } from \"./menu.component\";\n\n@NgModule({\n  imports: [CommonModule, OverlayModule],\n  declarations: [MenuComponent, MenuTriggerForDirective, MenuItemDirective, MenuDividerComponent],\n  exports: [MenuComponent, MenuTriggerForDirective, MenuItemDirective, MenuDividerComponent],\n})\nexport class MenuModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitIconComponent } from \"./icon.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitIconComponent],\n  exports: [BitIconComponent],\n})\nexport class IconModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AvatarComponent } from \"./avatar.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [AvatarComponent],\n  declarations: [AvatarComponent],\n})\nexport class AvatarModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared\";\n\nimport { BitActionDirective } from \"./bit-action.directive\";\nimport { BitSubmitDirective } from \"./bit-submit.directive\";\nimport { BitFormButtonDirective } from \"./form-button.directive\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [BitActionDirective, BitFormButtonDirective, BitSubmitDirective],\n  exports: [BitActionDirective, BitFormButtonDirective, BitSubmitDirective],\n})\nexport class AsyncActionsModule {}\n","import { registerLocaleData } from \"@angular/common\";\nimport localeAf from \"@angular/common/locales/af\";\nimport localeAr from \"@angular/common/locales/ar\";\nimport localeAz from \"@angular/common/locales/az\";\nimport localeBe from \"@angular/common/locales/be\";\nimport localeBg from \"@angular/common/locales/bg\";\nimport localeBn from \"@angular/common/locales/bn\";\nimport localeBs from \"@angular/common/locales/bs\";\nimport localeCa from \"@angular/common/locales/ca\";\nimport localeCs from \"@angular/common/locales/cs\";\nimport localeDa from \"@angular/common/locales/da\";\nimport localeDe from \"@angular/common/locales/de\";\nimport localeEl from \"@angular/common/locales/el\";\nimport localeEnGb from \"@angular/common/locales/en-GB\";\nimport localeEnIn from \"@angular/common/locales/en-IN\";\nimport localeEo from \"@angular/common/locales/eo\";\nimport localeEs from \"@angular/common/locales/es\";\nimport localeEt from \"@angular/common/locales/et\";\nimport localeEu from \"@angular/common/locales/eu\";\nimport localeFi from \"@angular/common/locales/fi\";\nimport localeFil from \"@angular/common/locales/fil\";\nimport localeFr from \"@angular/common/locales/fr\";\nimport localeHe from \"@angular/common/locales/he\";\nimport localeHi from \"@angular/common/locales/hi\";\nimport localeHr from \"@angular/common/locales/hr\";\nimport localeHu from \"@angular/common/locales/hu\";\nimport localeId from \"@angular/common/locales/id\";\nimport localeIt from \"@angular/common/locales/it\";\nimport localeJa from \"@angular/common/locales/ja\";\nimport localeKa from \"@angular/common/locales/ka\";\nimport localeKm from \"@angular/common/locales/km\";\nimport localeKn from \"@angular/common/locales/kn\";\nimport localeKo from \"@angular/common/locales/ko\";\nimport localeLv from \"@angular/common/locales/lv\";\nimport localeMl from \"@angular/common/locales/ml\";\nimport localeNb from \"@angular/common/locales/nb\";\nimport localeNl from \"@angular/common/locales/nl\";\nimport localeNn from \"@angular/common/locales/nn\";\nimport localePl from \"@angular/common/locales/pl\";\nimport localePtBr from \"@angular/common/locales/pt\";\nimport localePtPt from \"@angular/common/locales/pt-PT\";\nimport localeRo from \"@angular/common/locales/ro\";\nimport localeRu from \"@angular/common/locales/ru\";\nimport localeSi from \"@angular/common/locales/si\";\nimport localeSk from \"@angular/common/locales/sk\";\nimport localeSl from \"@angular/common/locales/sl\";\nimport localeSr from \"@angular/common/locales/sr\";\nimport localeSv from \"@angular/common/locales/sv\";\nimport localeTr from \"@angular/common/locales/tr\";\nimport localeUk from \"@angular/common/locales/uk\";\nimport localeVi from \"@angular/common/locales/vi\";\nimport localeZhCn from \"@angular/common/locales/zh-Hans\";\nimport localeZhTw from \"@angular/common/locales/zh-Hant\";\n\nregisterLocaleData(localeAf, \"af\");\nregisterLocaleData(localeAr, \"ar\");\nregisterLocaleData(localeAz, \"az\");\nregisterLocaleData(localeBe, \"be\");\nregisterLocaleData(localeBg, \"bg\");\nregisterLocaleData(localeBn, \"bn\");\nregisterLocaleData(localeBs, \"bs\");\nregisterLocaleData(localeCa, \"ca\");\nregisterLocaleData(localeCs, \"cs\");\nregisterLocaleData(localeDa, \"da\");\nregisterLocaleData(localeDe, \"de\");\nregisterLocaleData(localeEl, \"el\");\nregisterLocaleData(localeEnGb, \"en-GB\");\nregisterLocaleData(localeEnIn, \"en-IN\");\nregisterLocaleData(localeEo, \"eo\");\nregisterLocaleData(localeEs, \"es\");\nregisterLocaleData(localeEt, \"et\");\nregisterLocaleData(localeEu, \"eu\");\nregisterLocaleData(localeFi, \"fi\");\nregisterLocaleData(localeFil, \"fil\");\nregisterLocaleData(localeFr, \"fr\");\nregisterLocaleData(localeHe, \"he\");\nregisterLocaleData(localeHi, \"hi\");\nregisterLocaleData(localeHr, \"hr\");\nregisterLocaleData(localeHu, \"hu\");\nregisterLocaleData(localeId, \"id\");\nregisterLocaleData(localeIt, \"it\");\nregisterLocaleData(localeJa, \"ja\");\nregisterLocaleData(localeKa, \"ka\");\nregisterLocaleData(localeKm, \"km\");\nregisterLocaleData(localeKn, \"kn\");\nregisterLocaleData(localeKo, \"ko\");\nregisterLocaleData(localeLv, \"lv\");\nregisterLocaleData(localeMl, \"ml\");\nregisterLocaleData(localeNb, \"nb\");\nregisterLocaleData(localeNl, \"nl\");\nregisterLocaleData(localeNn, \"nn\");\nregisterLocaleData(localePl, \"pl\");\nregisterLocaleData(localePtBr, \"pt-BR\");\nregisterLocaleData(localePtPt, \"pt-PT\");\nregisterLocaleData(localeRo, \"ro\");\nregisterLocaleData(localeRu, \"ru\");\nregisterLocaleData(localeSi, \"si\");\nregisterLocaleData(localeSk, \"sk\");\nregisterLocaleData(localeSl, \"sl\");\nregisterLocaleData(localeSr, \"sr\");\nregisterLocaleData(localeSv, \"sv\");\nregisterLocaleData(localeTr, \"tr\");\nregisterLocaleData(localeUk, \"uk\");\nregisterLocaleData(localeVi, \"vi\");\nregisterLocaleData(localeZhCn, \"zh-CN\");\nregisterLocaleData(localeZhTw, \"zh-TW\");\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { DatePipe, CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\nimport { ToastrModule } from \"ngx-toastr\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport {\n  AsyncActionsModule,\n  AvatarModule,\n  BadgeModule,\n  ButtonModule,\n  CalloutModule,\n  FormFieldModule,\n  IconModule,\n  MenuModule,\n} from \"@bitwarden/components\";\n\n// Register the locales for the application\nimport \"./locales\";\n\n/**\n * This NgModule should contain the most basic shared directives, pipes, and components. They\n * should be widely used by other modules to be considered for adding to this module. If in doubt\n * do not add to this module.\n *\n * See: https://angular.io/guide/module-types#shared-ngmodules\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    DragDropModule,\n    FormsModule,\n    InfiniteScrollModule,\n    JslibModule,\n    ReactiveFormsModule,\n    RouterModule,\n    BadgeModule,\n    ButtonModule,\n    CalloutModule,\n    ToastrModule,\n    BadgeModule,\n    ButtonModule,\n    MenuModule,\n    FormFieldModule,\n    IconModule,\n    AvatarModule,\n  ],\n  exports: [\n    CommonModule,\n    AsyncActionsModule,\n    DragDropModule,\n    FormsModule,\n    InfiniteScrollModule,\n    JslibModule,\n    ReactiveFormsModule,\n    RouterModule,\n    BadgeModule,\n    ButtonModule,\n    CalloutModule,\n    ToastrModule,\n    BadgeModule,\n    ButtonModule,\n    MenuModule,\n    FormFieldModule,\n    IconModule,\n    AvatarModule,\n  ],\n  providers: [DatePipe],\n  bootstrap: [],\n})\nexport class SharedModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { OrganizationNameBadgeComponent } from \"./organization-name-badge.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [OrganizationNameBadgeComponent],\n  exports: [OrganizationNameBadgeComponent],\n})\nexport class OrganizationBadgeModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\n\nimport { CollectionFilterComponent } from \"./collection-filter/collection-filter.component\";\nimport { FolderFilterComponent } from \"./folder-filter/folder-filter.component\";\nimport { StatusFilterComponent } from \"./status-filter/status-filter.component\";\nimport { TypeFilterComponent } from \"./type-filter/type-filter.component\";\nimport { VaultFilterService } from \"./vault-filter.service\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [\n    CollectionFilterComponent,\n    FolderFilterComponent,\n    StatusFilterComponent,\n    TypeFilterComponent,\n  ],\n  exports: [\n    SharedModule,\n    CollectionFilterComponent,\n    FolderFilterComponent,\n    StatusFilterComponent,\n    TypeFilterComponent,\n  ],\n  providers: [VaultFilterService],\n})\nexport class VaultFilterSharedModule {}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\nimport { DynamicTreeNode } from \"@bitwarden/angular/vault/vault-filter/models/dynamic-tree-node.model\";\nimport { VaultFilterService as BaseVaultFilterService } from \"@bitwarden/angular/vault/vault-filter/services/vault-filter.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collection.response\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Injectable()\nexport class VaultFilterService extends BaseVaultFilterService {\n  private _collapsedFilterNodes = new BehaviorSubject<Set<string>>(null);\n  collapsedFilterNodes$: Observable<Set<string>> = this._collapsedFilterNodes.asObservable();\n\n  constructor(\n    stateService: StateService,\n    organizationService: OrganizationService,\n    folderService: FolderService,\n    cipherService: CipherService,\n    collectionService: CollectionService,\n    policyService: PolicyService,\n    private i18nService: I18nService,\n    protected apiService: ApiService\n  ) {\n    super(\n      stateService,\n      organizationService,\n      folderService,\n      cipherService,\n      collectionService,\n      policyService\n    );\n  }\n\n  async buildCollapsedFilterNodes(): Promise<Set<string>> {\n    const nodes = await super.buildCollapsedFilterNodes();\n    this._collapsedFilterNodes.next(nodes);\n    return nodes;\n  }\n\n  async storeCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await super.storeCollapsedFilterNodes(collapsedFilterNodes);\n    this._collapsedFilterNodes.next(collapsedFilterNodes);\n  }\n\n  async ensureVaultFiltersAreExpanded() {\n    const collapsedFilterNodes = await super.buildCollapsedFilterNodes();\n    if (!collapsedFilterNodes.has(\"vaults\")) {\n      return;\n    }\n    collapsedFilterNodes.delete(\"vaults\");\n    await this.storeCollapsedFilterNodes(collapsedFilterNodes);\n  }\n\n  async buildAdminCollections(organizationId: string) {\n    let result: CollectionView[] = [];\n    const collectionResponse = await this.apiService.getCollections(organizationId);\n    if (collectionResponse?.data != null && collectionResponse.data.length) {\n      const collectionDomains = collectionResponse.data.map(\n        (r: CollectionDetailsResponse) => new Collection(new CollectionData(r))\n      );\n      result = await this.collectionService.decryptMany(collectionDomains);\n    }\n\n    const noneCollection = new CollectionView();\n    noneCollection.name = this.i18nService.t(\"unassigned\");\n    noneCollection.organizationId = organizationId;\n    result.push(noneCollection);\n\n    const nestedCollections = await this.collectionService.getAllNested(result);\n    return new DynamicTreeNode<CollectionView>({\n      fullList: result,\n      nestedList: nestedCollections,\n    });\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { LinkSsoComponent } from \"./organization-filter/link-sso.component\";\nimport { OrganizationFilterComponent } from \"./organization-filter/organization-filter.component\";\nimport { OrganizationOptionsComponent } from \"./organization-filter/organization-options.component\";\nimport { VaultFilterSharedModule } from \"./shared/vault-filter-shared.module\";\nimport { VaultFilterComponent } from \"./vault-filter.component\";\n\n@NgModule({\n  imports: [VaultFilterSharedModule],\n  declarations: [\n    VaultFilterComponent,\n    OrganizationFilterComponent,\n    OrganizationOptionsComponent,\n    LinkSsoComponent,\n  ],\n  exports: [VaultFilterComponent],\n})\nexport class VaultFilterModule {}\n","import { InjectionToken } from \"@angular/core\";\n\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\n\nexport const WINDOW = new InjectionToken<Window>(\"WINDOW\");\nexport const MEMORY_STORAGE = new InjectionToken<AbstractStorageService>(\"MEMORY_STORAGE\");\nexport const SECURE_STORAGE = new InjectionToken<AbstractStorageService>(\"SECURE_STORAGE\");\nexport const STATE_FACTORY = new InjectionToken<StateFactory>(\"STATE_FACTORY\");\nexport const STATE_SERVICE_USE_CACHE = new InjectionToken<boolean>(\"STATE_SERVICE_USE_CACHE\");\nexport const LOGOUT_CALLBACK = new InjectionToken<(expired: boolean, userId?: string) => void>(\n  \"LOGOUT_CALLBACK\"\n);\nexport const LOCKED_CALLBACK = new InjectionToken<() => void>(\"LOCKED_CALLBACK\");\nexport const CLIENT_TYPE = new InjectionToken<boolean>(\"CLIENT_TYPE\");\nexport const LOCALES_DIRECTORY = new InjectionToken<string>(\"LOCALES_DIRECTORY\");\nexport const SYSTEM_LANGUAGE = new InjectionToken<string>(\"SYSTEM_LANGUAGE\");\nexport const LOG_MAC_FAILURES = new InjectionToken<string>(\"LOG_MAC_FAILURES\");\n","import { Verification } from \"../../types/verification\";\n\nexport abstract class AccountApiService {\n  abstract deleteAccount(verification: Verification): Promise<void>;\n}\n","export abstract class AccountService {}\n\nexport abstract class InternalAccountService extends AccountService {\n  abstract delete(): void;\n}\n","export abstract class AnonymousHubService {\n  createHubConnection: (token: string) => void;\n  stopHubConnection: () => void;\n}\n","export abstract class AppIdService {\n  getAppId: () => Promise<string>;\n  getAnonymousAppId: () => Promise<string>;\n}\n","import { BreachAccountResponse } from \"../models/response/breach-account.response\";\n\nexport abstract class AuditService {\n  passwordLeaked: (password: string) => Promise<number>;\n  breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthResult } from \"../models/domain/auth-result\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\nimport { AuthRequestPushNotification } from \"../models/response/notification.response\";\n\nexport abstract class AuthService {\n  masterPasswordHash: string;\n  email: string;\n  accessCode: string;\n  authRequestId: string;\n\n  logIn: (\n    credentials:\n      | ApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ) => Promise<AuthResult>;\n  logInTwoFactor: (\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ) => Promise<AuthResult>;\n  logOut: (callback: () => void) => void;\n  makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n  authingWithApiKey: () => boolean;\n  authingWithSso: () => boolean;\n  authingWithPassword: () => boolean;\n  authingWithPasswordless: () => boolean;\n  getAuthStatus: (userId?: string) => Promise<AuthenticationStatus>;\n  authResponsePushNotifiction: (notification: AuthRequestPushNotification) => Promise<any>;\n\n  getPushNotifcationObs$: () => Observable<any>;\n}\n","export interface MessageBase {\n  command: string;\n}\n\nexport abstract class BroadcasterService {\n  send: (message: MessageBase, id?: string) => void;\n  subscribe: (id: string, messageCallback: (message: MessageBase) => void) => void;\n  unsubscribe: (id: string) => void;\n}\n","import { ServerConfigResponse } from \"../../models/response/server-config.response\";\n\nexport abstract class ConfigApiServiceAbstraction {\n  get: () => Promise<ServerConfigResponse>;\n}\n","import { DecryptParameters } from \"../models/domain/decrypt-parameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport abstract class CryptoFunctionService {\n  pbkdf2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ) => Promise<ArrayBuffer>;\n  hkdf: (\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hkdfExpand: (\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hash: (\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ) => Promise<ArrayBuffer>;\n  hmac: (\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n  hmacFast: (\n    value: ArrayBuffer | string,\n    key: ArrayBuffer | string,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer | string>;\n  compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n  aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  aesDecryptFastParameters: (\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ) => DecryptParameters<ArrayBuffer | string>;\n  aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n  aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaEncrypt: (\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaDecrypt: (\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n  randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { IEncrypted } from \"../interfaces/IEncrypted\";\nimport { Decryptable } from \"../interfaces/decryptable.interface\";\nimport { InitializerMetadata } from \"../interfaces/initializer-metadata.interface\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport abstract class EncryptService {\n  abstract encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString>;\n  abstract encryptToBytes: (\n    plainValue: ArrayBuffer,\n    key?: SymmetricCryptoKey\n  ) => Promise<EncArrayBuffer>;\n  abstract decryptToUtf8: (encString: EncString, key: SymmetricCryptoKey) => Promise<string>;\n  abstract decryptToBytes: (encThing: IEncrypted, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  abstract resolveLegacyKey: (key: SymmetricCryptoKey, encThing: IEncrypted) => SymmetricCryptoKey;\n  abstract decryptItems: <T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ) => Promise<T[]>;\n}\n","import { Observable } from \"rxjs\";\n\nexport type Urls = {\n  base?: string;\n  webVault?: string;\n  api?: string;\n  identity?: string;\n  icons?: string;\n  notifications?: string;\n  events?: string;\n  keyConnector?: string;\n  scim?: string;\n};\n\nexport type PayPalConfig = {\n  businessId?: string;\n  buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n  urls: Observable<Urls>;\n\n  hasBaseUrl: () => boolean;\n  getNotificationsUrl: () => string;\n  getWebVaultUrl: () => string;\n  getSendUrl: () => string;\n  getIconsUrl: () => string;\n  getApiUrl: () => string;\n  getIdentityUrl: () => string;\n  getEventsUrl: () => string;\n  getKeyConnectorUrl: () => string;\n  getScimUrl: () => string;\n  setUrlsFromStorage: () => Promise<void>;\n  setUrls: (urls: Urls) => Promise<Urls>;\n  getUrls: () => Urls;\n  isCloud: () => boolean;\n}\n","import { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\n\nexport abstract class FileUploadService {\n  uploadSendFile: (\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n  uploadCipherAttachment: (\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n}\n","import { Folder } from \"../../models/domain/folder\";\nimport { FolderResponse } from \"../../models/response/folder.response\";\n\nexport class FolderApiServiceAbstraction {\n  save: (folder: Folder) => Promise<any>;\n  delete: (id: string) => Promise<any>;\n  get: (id: string) => Promise<FolderResponse>;\n}\n","import { AbstractControl } from \"@angular/forms\";\nexport interface AllValidationErrors {\n  controlName: string;\n  errorName: string;\n}\n\nexport interface FormGroupControls {\n  [key: string]: AbstractControl;\n}\n\nexport abstract class FormValidationErrorsService {\n  getFormValidationErrors: (controls: FormGroupControls) => AllValidationErrors[];\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","export abstract class NotificationsService {\n  init: () => Promise<void>;\n  updateConnection: (sync?: boolean) => Promise<void>;\n  reconnectFromActivity: () => Promise<void>;\n  disconnectFromInactivity: () => Promise<void>;\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\nimport { ImportDirectoryRequest } from \"../../models/request/import-directory.request\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organization-api-key.request\";\nimport { OrganizationCreateRequest } from \"../../models/request/organization-create.request\";\nimport { OrganizationKeysRequest } from \"../../models/request/organization-keys.request\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organization-subscription-update.request\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organization-tax-info-update.request\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organization-update.request\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organization-upgrade.request\";\nimport { OrganizationSsoRequest } from \"../../models/request/organization/organization-sso.request\";\nimport { PaymentRequest } from \"../../models/request/payment.request\";\nimport { SeatRequest } from \"../../models/request/seat.request\";\nimport { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { StorageRequest } from \"../../models/request/storage.request\";\nimport { VerifyBankRequest } from \"../../models/request/verify-bank.request\";\nimport { ApiKeyResponse } from \"../../models/response/api-key.response\";\nimport { BillingResponse } from \"../../models/response/billing.response\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organization-api-key-information.response\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organization-auto-enroll-status.response\";\nimport { OrganizationKeysResponse } from \"../../models/response/organization-keys.response\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organization-subscription.response\";\nimport { OrganizationResponse } from \"../../models/response/organization.response\";\nimport { OrganizationSsoResponse } from \"../../models/response/organization/organization-sso.response\";\nimport { PaymentResponse } from \"../../models/response/payment.response\";\nimport { TaxInfoResponse } from \"../../models/response/tax-info.response\";\n\nexport class OrganizationApiServiceAbstraction {\n  get: (id: string) => Promise<OrganizationResponse>;\n  getBilling: (id: string) => Promise<BillingResponse>;\n  getSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n  getLicense: (id: string, installationId: string) => Promise<unknown>;\n  getAutoEnrollStatus: (identifier: string) => Promise<OrganizationAutoEnrollStatusResponse>;\n  create: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n  createLicense: (data: FormData) => Promise<OrganizationResponse>;\n  save: (id: string, request: OrganizationUpdateRequest) => Promise<OrganizationResponse>;\n  updatePayment: (id: string, request: PaymentRequest) => Promise<void>;\n  upgrade: (id: string, request: OrganizationUpgradeRequest) => Promise<PaymentResponse>;\n  updateSubscription: (id: string, request: OrganizationSubscriptionUpdateRequest) => Promise<void>;\n  updateSeats: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n  updateStorage: (id: string, request: StorageRequest) => Promise<PaymentResponse>;\n  verifyBank: (id: string, request: VerifyBankRequest) => Promise<void>;\n  cancel: (id: string) => Promise<void>;\n  reinstate: (id: string) => Promise<void>;\n  leave: (id: string) => Promise<void>;\n  delete: (id: string, request: SecretVerificationRequest) => Promise<void>;\n  updateLicense: (id: string, data: FormData) => Promise<void>;\n  importDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<void>;\n  getOrCreateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getApiKeyInformation: (\n    id: string,\n    organizationApiKeyType?: OrganizationApiKeyType\n  ) => Promise<ListResponse<OrganizationApiKeyInformationResponse>>;\n  rotateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n  updateTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<void>;\n  getKeys: (id: string) => Promise<OrganizationKeysResponse>;\n  updateKeys: (id: string, request: OrganizationKeysRequest) => Promise<OrganizationKeysResponse>;\n  getSso: (id: string) => Promise<OrganizationSsoResponse>;\n  updateSso: (id: string, request: OrganizationSsoRequest) => Promise<OrganizationSsoResponse>;\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { PasswordGeneratorOptions } from \"../models/domain/password-generator-options\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/password-generator-policy-options\";\n\nexport abstract class PasswordGenerationService {\n  generatePassword: (options: PasswordGeneratorOptions) => Promise<string>;\n  generatePassphrase: (options: PasswordGeneratorOptions) => Promise<string>;\n  getOptions: () => Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]>;\n  enforcePasswordGeneratorPoliciesOnOptions: (\n    options: PasswordGeneratorOptions\n  ) => Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]>;\n  getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n  saveOptions: (options: PasswordGeneratorOptions) => Promise<void>;\n  getHistory: () => Promise<GeneratedPasswordHistory[]>;\n  addHistory: (password: string) => Promise<void>;\n  clear: (userId?: string) => Promise<void>;\n  passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n  normalizeOptions: (\n    options: PasswordGeneratorOptions,\n    enforcedPolicyOptions: PasswordGeneratorPolicyOptions\n  ) => void;\n}\n","export abstract class PasswordRepromptService {\n  protectedFields: () => string[];\n  showPasswordPrompt: () => Promise<boolean>;\n  enabled: () => Promise<boolean>;\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { PolicyRequest } from \"../../models/request/policy.request\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport class PolicyApiServiceAbstraction {\n  getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n  getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByToken: (\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByInvitedUser: (\n    organizationId: string,\n    userId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n  putPolicy: (organizationId: string, type: PolicyType, request: PolicyRequest) => Promise<any>;\n}\n","import { ProviderData } from \"../models/data/provider.data\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport abstract class ProviderService {\n  get: (id: string) => Promise<Provider>;\n  getAll: () => Promise<Provider[]>;\n  save: (providers: { [id: string]: ProviderData }) => Promise<any>;\n}\n","import { CipherView } from \"../models/view/cipher.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport abstract class SearchService {\n  indexedEntityId?: string = null;\n  clearIndex: () => void;\n  isSearchable: (query: string) => boolean;\n  indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n  searchCiphers: (\n    query: string,\n    filter?: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[],\n    ciphers?: CipherView[]\n  ) => Promise<CipherView[]>;\n  searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n  searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { SendData } from \"../models/data/send.data\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { Send } from \"../models/domain/send\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport abstract class SendService {\n  clearCache: () => Promise<void>;\n  encrypt: (\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ) => Promise<[Send, EncArrayBuffer]>;\n  get: (id: string) => Promise<Send>;\n  getAll: () => Promise<Send[]>;\n  getAllDecrypted: () => Promise<SendView[]>;\n  saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n  upsert: (send: SendData | SendData[]) => Promise<any>;\n  replace: (sends: { [id: string]: SendData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  removePasswordWithServer: (id: string) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { AccountSettingsSettings } from \"../models/domain/account\";\n\nexport abstract class SettingsService {\n  settings$: Observable<AccountSettingsSettings>;\n\n  setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n  clear: (userId?: string) => Promise<void>;\n}\n","export abstract class StateMigrationService {\n  needsMigration: () => Promise<boolean>;\n  migrate: () => Promise<void>;\n}\n","import { MemoryStorageOptions, StorageOptions } from \"../models/domain/storage-options\";\n\nexport abstract class AbstractStorageService {\n  abstract get<T>(key: string, options?: StorageOptions): Promise<T>;\n  abstract has(key: string, options?: StorageOptions): Promise<boolean>;\n  abstract save<T>(key: string, obj: T, options?: StorageOptions): Promise<void>;\n  abstract remove(key: string, options?: StorageOptions): Promise<void>;\n}\n\nexport abstract class AbstractCachedStorageService extends AbstractStorageService {\n  abstract getBypassCache<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T>;\n}\n\nexport interface MemoryStorageServiceInterface {\n  get<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { SyncEventArgs } from \"../../types/syncEventArgs\";\n\nexport abstract class SyncNotifierService {\n  sync$: Observable<SyncEventArgs>;\n  next: (event: SyncEventArgs) => void;\n}\n","import { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport abstract class TokenService {\n  setTokens: (\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ) => Promise<any>;\n  setToken: (token: string) => Promise<any>;\n  getToken: () => Promise<string>;\n  setRefreshToken: (refreshToken: string) => Promise<any>;\n  getRefreshToken: () => Promise<string>;\n  setClientId: (clientId: string) => Promise<any>;\n  getClientId: () => Promise<string>;\n  setClientSecret: (clientSecret: string) => Promise<any>;\n  getClientSecret: () => Promise<string>;\n  setTwoFactorToken: (tokenResponse: IdentityTokenResponse) => Promise<any>;\n  getTwoFactorToken: () => Promise<string>;\n  clearTwoFactorToken: () => Promise<any>;\n  clearToken: (userId?: string) => Promise<any>;\n  decodeToken: (token?: string) => any;\n  getTokenExpirationDate: () => Promise<Date>;\n  tokenSecondsRemaining: (offsetSeconds?: number) => Promise<number>;\n  tokenNeedsRefresh: (minutes?: number) => Promise<boolean>;\n  getUserId: () => Promise<string>;\n  getEmail: () => Promise<string>;\n  getEmailVerified: () => Promise<boolean>;\n  getName: () => Promise<string>;\n  getIssuer: () => Promise<string>;\n  getIsExternal: () => Promise<boolean>;\n}\n","export abstract class TotpService {\n  getCode: (key: string) => Promise<string>;\n  getTimeInterval: (key: string) => number;\n}\n","import { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\n\nexport interface TwoFactorProviderDetails {\n  type: TwoFactorProviderType;\n  name: string;\n  description: string;\n  priority: number;\n  sort: number;\n  premium: boolean;\n}\n\nexport abstract class TwoFactorService {\n  init: () => void;\n  getSupportedProviders: (win: Window) => TwoFactorProviderDetails[];\n  getDefaultProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n  setSelectedProvider: (type: TwoFactorProviderType) => void;\n  clearSelectedProvider: () => void;\n\n  setProviders: (response: IdentityTwoFactorResponse) => void;\n  clearProviders: () => void;\n  getProviders: () => Map<TwoFactorProviderType, { [key: string]: string }>;\n}\n","import { VerifyOTPRequest } from \"../../models/request/account/verify-otp.request\";\n\nexport abstract class UserVerificationApiServiceAbstraction {\n  postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n  postAccountRequestOTP: () => Promise<void>;\n}\n","export abstract class UsernameGenerationService {\n  generateUsername: (options: any) => Promise<string>;\n  generateWord: (options: any) => Promise<string>;\n  generateSubaddress: (options: any) => Promise<string>;\n  generateCatchall: (options: any) => Promise<string>;\n  generateForwarded: (options: any) => Promise<string>;\n  getOptions: () => Promise<any>;\n  saveOptions: (options: any) => Promise<void>;\n}\n","export abstract class VaultTimeoutService {\n  checkVaultTimeout: () => Promise<void>;\n  lock: (userId?: string) => Promise<void>;\n  logOut: (userId?: string) => Promise<void>;\n}\n","export abstract class VaultTimeoutSettingsService {\n  setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n  getVaultTimeout: (userId?: string) => Promise<number>;\n  isPinLockSet: () => Promise<[boolean, boolean]>;\n  isBiometricLockSet: () => Promise<boolean>;\n  clear: (userId?: string) => Promise<void>;\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/global-state\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/global-state\";\n\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","// required to avoid linting errors when there are no flags\n/* eslint-disable @typescript-eslint/ban-types */\nexport type SharedFlags = {\n  multithreadDecryption: boolean;\n};\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable @typescript-eslint/ban-types */\nexport type SharedDevFlags = {};\n\nfunction getFlags<T>(envFlags: string | T): T {\n  if (typeof envFlags === \"string\") {\n    return JSON.parse(envFlags) as T;\n  } else {\n    return envFlags as T;\n  }\n}\n\n/**\n * Gets the value of a feature flag from environment.\n * All flags default to \"on\" (true).\n * Only use for shared code in `libs`, otherwise use the client-specific function.\n * @param flag The name of the feature flag to check\n * @returns The value of the flag\n */\nexport function flagEnabled<Flags extends SharedFlags>(flag: keyof Flags): boolean {\n  const flags = getFlags<Flags>(process.env.FLAGS);\n  return flags[flag] == null || !!flags[flag];\n}\n\n/**\n * Gets the value of a dev flag from environment.\n * Will always return false unless in development.\n * Only use for shared code in `libs`, otherwise use the client-specific function.\n * @param flag The name of the dev flag to check\n * @returns The value of the flag\n */\nexport function devFlagEnabled<DevFlags extends SharedDevFlags>(flag: keyof DevFlags): boolean {\n  if (process.env.ENV !== \"development\") {\n    return false;\n  }\n\n  const devFlags = getFlags<DevFlags>(process.env.DEV_FLAGS);\n  return devFlags[flag] == null || !!devFlags[flag];\n}\n\n/**\n * Gets the value of a dev flag from environment.\n * Will always return false unless in development.\n * @param flag The name of the dev flag to check\n * @returns The value of the flag\n * @throws Error if the flag is not enabled\n */\nexport function devFlagValue<DevFlags extends SharedDevFlags>(\n  flag: keyof DevFlags\n): DevFlags[keyof DevFlags] {\n  if (!devFlagEnabled(flag)) {\n    throw new Error(`This method should not be called, it is protected by a disabled dev flag.`);\n  }\n\n  const devFlags = getFlags<DevFlags>(process.env.DEV_FLAGS);\n  return devFlags[flag];\n}\n","import { Jsonify } from \"type-fest\";\n\nimport {\n  ServerConfigResponse,\n  ThirdPartyServerConfigResponse,\n  EnvironmentServerConfigResponse,\n} from \"../response/server-config.response\";\n\nexport class ServerConfigData {\n  version: string;\n  gitHash: string;\n  server?: ThirdPartyServerConfigData;\n  environment?: EnvironmentServerConfigData;\n  utcDate: string;\n\n  constructor(serverConfigResponse: Partial<ServerConfigResponse>) {\n    this.version = serverConfigResponse?.version;\n    this.gitHash = serverConfigResponse?.gitHash;\n    this.server = serverConfigResponse?.server\n      ? new ThirdPartyServerConfigData(serverConfigResponse.server)\n      : null;\n    this.utcDate = new Date().toISOString();\n    this.environment = serverConfigResponse?.environment\n      ? new EnvironmentServerConfigData(serverConfigResponse.environment)\n      : null;\n  }\n\n  static fromJSON(obj: Jsonify<ServerConfigData>): ServerConfigData {\n    return Object.assign(new ServerConfigData({}), obj, {\n      server: obj?.server ? ThirdPartyServerConfigData.fromJSON(obj.server) : null,\n      environment: obj?.environment ? EnvironmentServerConfigData.fromJSON(obj.environment) : null,\n    });\n  }\n}\n\nexport class ThirdPartyServerConfigData {\n  name: string;\n  url: string;\n\n  constructor(response: Partial<ThirdPartyServerConfigResponse>) {\n    this.name = response.name;\n    this.url = response.url;\n  }\n\n  static fromJSON(obj: Jsonify<ThirdPartyServerConfigData>): ThirdPartyServerConfigData {\n    return Object.assign(new ThirdPartyServerConfigData({}), obj);\n  }\n}\n\nexport class EnvironmentServerConfigData {\n  vault: string;\n  api: string;\n  identity: string;\n  notifications: string;\n  sso: string;\n\n  constructor(response: Partial<EnvironmentServerConfigResponse>) {\n    this.vault = response.vault;\n    this.api = response.api;\n    this.identity = response.identity;\n    this.notifications = response.notifications;\n    this.sso = response.sso;\n  }\n\n  static fromJSON(obj: Jsonify<EnvironmentServerConfigData>): EnvironmentServerConfigData {\n    return Object.assign(new EnvironmentServerConfigData({}), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nexport class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n\n  static fromJSON(obj: Jsonify<EnvironmentUrls>): EnvironmentUrls {\n    return Object.assign(new EnvironmentUrls(), obj);\n  }\n}\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Five = 5, // Migrate to new storage of encrypted organization keys\n  Six = 6, // Delete account.keys.legacyEtmKey property\n  Latest = Six,\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","import { Except, Jsonify } from \"type-fest\";\n\nimport { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { CipherData } from \"../data/cipher.data\";\nimport { CollectionData } from \"../data/collection.data\";\nimport { EncryptedOrganizationKeyData } from \"../data/encrypted-organization-key.data\";\nimport { EventData } from \"../data/event.data\";\nimport { FolderData } from \"../data/folder.data\";\nimport { OrganizationData } from \"../data/organization.data\";\nimport { PolicyData } from \"../data/policy.data\";\nimport { ProviderData } from \"../data/provider.data\";\nimport { SendData } from \"../data/send.data\";\nimport { ServerConfigData } from \"../data/server-config.data\";\nimport { CipherView } from \"../view/cipher.view\";\nimport { CollectionView } from \"../view/collection.view\";\nimport { SendView } from \"../view/send.view\";\n\nimport { EncString } from \"./enc-string\";\nimport { EnvironmentUrls } from \"./environment-urls\";\nimport { GeneratedPasswordHistory } from \"./generated-password-history\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n\n  toJSON() {\n    return {\n      encrypted: this.encrypted,\n      decrypted:\n        this.decrypted instanceof ArrayBuffer\n          ? Utils.fromBufferToByteString(this.decrypted)\n          : this.decrypted,\n    };\n  }\n\n  static fromJSON<TEncrypted, TDecrypted>(\n    obj: Jsonify<EncryptionPair<Jsonify<TEncrypted>, Jsonify<TDecrypted>>>,\n    decryptedFromJson?: (decObj: Jsonify<TDecrypted> | string) => TDecrypted,\n    encryptedFromJson?: (encObj: Jsonify<TEncrypted>) => TEncrypted\n  ) {\n    if (obj == null) {\n      return null;\n    }\n\n    const pair = new EncryptionPair<TEncrypted, TDecrypted>();\n    if (obj?.encrypted != null) {\n      pair.encrypted = encryptedFromJson\n        ? encryptedFromJson(obj.encrypted)\n        : (obj.encrypted as TEncrypted);\n    }\n    if (obj?.decrypted != null) {\n      pair.decrypted = decryptedFromJson\n        ? decryptedFromJson(obj.decrypted)\n        : (obj.decrypted as TDecrypted);\n    }\n    return pair;\n  }\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\n// This is a temporary structure to handle migrated `DataEncryptionPair` to\n//  avoid needing a data migration at this stage. It should be replaced with\n//  proper data migrations when `DataEncryptionPair` is deprecated.\nexport class TemporaryDataEncryption<TEncrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders? = new TemporaryDataEncryption<FolderData>();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Record<string, SymmetricCryptoKey>\n  > = new EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Record<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Record<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Record<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  publicKey?: ArrayBuffer;\n  apiKeyClientSecret?: string;\n\n  toJSON() {\n    return Object.assign(this as Except<AccountKeys, \"publicKey\">, {\n      publicKey: Utils.fromBufferToByteString(this.publicKey),\n    });\n  }\n\n  static fromJSON(obj: DeepJsonify<AccountKeys>): AccountKeys {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(\n      new AccountKeys(),\n      { cryptoMasterKey: SymmetricCryptoKey.fromJSON(obj?.cryptoMasterKey) },\n      {\n        cryptoSymmetricKey: EncryptionPair.fromJSON(\n          obj?.cryptoSymmetricKey,\n          SymmetricCryptoKey.fromJSON\n        ),\n      },\n      { organizationKeys: AccountKeys.initRecordEncryptionPairsFromJSON(obj?.organizationKeys) },\n      { providerKeys: AccountKeys.initRecordEncryptionPairsFromJSON(obj?.providerKeys) },\n      {\n        privateKey: EncryptionPair.fromJSON<string, ArrayBuffer>(\n          obj?.privateKey,\n          (decObj: string) => Utils.fromByteStringToArray(decObj).buffer\n        ),\n      },\n      {\n        publicKey: Utils.fromByteStringToArray(obj?.publicKey)?.buffer,\n      }\n    );\n  }\n\n  static initRecordEncryptionPairsFromJSON(obj: any) {\n    return EncryptionPair.fromJSON(obj, (decObj: any) => {\n      if (obj == null) {\n        return null;\n      }\n\n      const record: Record<string, SymmetricCryptoKey> = {};\n      for (const id in decObj) {\n        record[id] = SymmetricCryptoKey.fromJSON(decObj[id]);\n      }\n      return record;\n    });\n  }\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  name?: string;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  hasPremiumFromOrganization?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n\n  static fromJSON(obj: Jsonify<AccountProfile>): AccountProfile {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountProfile(), obj);\n  }\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  collapsedGroupings?: string[];\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  usernameGenerationOptions?: any;\n  generatorOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: AccountSettingsSettings; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n  serverConfig?: ServerConfigData;\n\n  static fromJSON(obj: Jsonify<AccountSettings>): AccountSettings {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountSettings(), obj, {\n      environmentUrls: EnvironmentUrls.fromJSON(obj?.environmentUrls),\n      pinProtected: EncryptionPair.fromJSON<string, EncString>(\n        obj?.pinProtected,\n        EncString.fromJSON\n      ),\n      serverConfig: ServerConfigData.fromJSON(obj?.serverConfig),\n    });\n  }\n}\n\nexport type AccountSettingsSettings = {\n  equivalentDomains?: { [id: string]: any };\n};\n\nexport class AccountTokens {\n  accessToken?: string;\n  refreshToken?: string;\n  securityStamp?: string;\n\n  static fromJSON(obj: Jsonify<AccountTokens>): AccountTokens {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountTokens(), obj);\n  }\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n\n  static fromJSON(json: Jsonify<Account>): Account {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new Account({}), json, {\n      keys: AccountKeys.fromJSON(json?.keys),\n      profile: AccountProfile.fromJSON(json?.profile),\n      settings: AccountSettings.fromJSON(json?.settings),\n      tokens: AccountTokens.fromJSON(json?.tokens),\n    });\n  }\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environment-urls\";\nimport { WindowState } from \"./window-state\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string;\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n  enableDuckDuckGoBrowserIntegration?: boolean;\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n\n  AuthRequest = 15,\n  AuthRequestResponse = 16,\n}\n","import { NotificationType } from \"../../enums/notificationType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n        break;\n      case NotificationType.AuthRequest:\n      case NotificationType.AuthRequestResponse:\n        this.payload = new AuthRequestPushNotification(payload);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class AuthRequestPushNotification extends BaseResponse {\n  id: string;\n  userId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n  }\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  HttpTransportType,\n  HubConnection,\n  HubConnectionBuilder,\n  IHubProtocol,\n} from \"@microsoft/signalr\";\nimport { MessagePackHubProtocol } from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { AnonymousHubService as AnonymousHubServiceAbstraction } from \"../abstractions/anonymousHub.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\n\nimport {\n  AuthRequestPushNotification,\n  NotificationResponse,\n} from \"./../models/response/notification.response\";\n\n@Injectable()\nexport class AnonymousHubService implements AnonymousHubServiceAbstraction {\n  private anonHubConnection: HubConnection;\n  private url: string;\n\n  constructor(\n    private environmentService: EnvironmentService,\n    private authService: AuthService,\n    private logService: LogService\n  ) {}\n\n  async createHubConnection(token: string) {\n    this.url = this.environmentService.getNotificationsUrl();\n\n    this.anonHubConnection = new HubConnectionBuilder()\n      .withUrl(this.url + \"/anonymous-hub?Token=\" + token, {\n        skipNegotiation: true,\n        transport: HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new MessagePackHubProtocol() as IHubProtocol)\n      .build();\n\n    this.anonHubConnection.start().catch((error) => this.logService.error(error));\n\n    this.anonHubConnection.on(\"AuthRequestResponseRecieved\", (data: any) => {\n      this.ProcessNotification(new NotificationResponse(data));\n    });\n  }\n\n  stopHubConnection() {\n    if (this.anonHubConnection) {\n      this.anonHubConnection.stop();\n    }\n  }\n\n  private async ProcessNotification(notification: NotificationResponse) {\n    await this.authService.authResponsePushNotifiction(\n      notification.payload as AuthRequestPushNotification\n    );\n  }\n}\n","import { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { DeviceType } from \"../../enums/deviceType\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","import { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\n\nexport abstract class TokenRequest {\n  protected device?: DeviceRequest;\n  protected passwordlessAuthRequest: string;\n\n  constructor(protected twoFactor: TokenTwoFactorRequest, device?: DeviceRequest) {\n    this.device = device != null ? device : null;\n  }\n\n  // eslint-disable-next-line\n  alterIdentityTokenHeaders(headers: Headers) {\n    // Implemented in subclass if required\n  }\n\n  setTwoFactor(twoFactor: TokenTwoFactorRequest) {\n    this.twoFactor = twoFactor;\n  }\n\n  setPasswordlessAccessCode(accessCode: string) {\n    this.passwordlessAuthRequest = accessCode;\n  }\n\n  protected toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    //passswordless login\n    if (this.passwordlessAuthRequest) {\n      obj.authRequest = this.passwordlessAuthRequest;\n    }\n\n    if (this.twoFactor.token && this.twoFactor.provider != null) {\n      obj.twoFactorToken = this.twoFactor.token;\n      obj.twoFactorProvider = this.twoFactor.provider;\n      obj.twoFactorRemember = this.twoFactor.remember ? \"1\" : \"0\";\n    }\n\n    return obj;\n  }\n}\n","import { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\nimport { TokenRequest } from \"./token.request\";\n\nexport class ApiTokenRequest extends TokenRequest {\n  constructor(\n    public clientId: string,\n    public clientSecret: string,\n    protected twoFactor: TokenTwoFactorRequest,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken() {\n    const obj = super.toIdentityToken(this.clientId);\n\n    obj.scope = this.clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n    obj.grant_type = \"client_credentials\";\n    obj.client_secret = this.clientSecret;\n\n    return obj;\n  }\n}\n","import { TwoFactorProviderType } from \"../../../enums/twoFactorProviderType\";\n\nexport class TokenTwoFactorRequest {\n  constructor(\n    public provider: TwoFactorProviderType = null,\n    public token: string = null,\n    public remember: boolean = false\n  ) {}\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/card.api\";\nimport { FieldApi } from \"../api/field.api\";\nimport { IdentityApi } from \"../api/identity.api\";\nimport { LoginApi } from \"../api/login.api\";\nimport { SecureNoteApi } from \"../api/secure-note.api\";\n\nimport { AttachmentResponse } from \"./attachment.response\";\nimport { BaseResponse } from \"./base.response\";\nimport { PasswordHistoryResponse } from \"./password-history.response\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  creationDate: string;\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class AuthRequestResponse extends BaseResponse {\n  id: string;\n  publicKey: string;\n  requestDeviceType: DeviceType;\n  requestIpAddress: string;\n  key: string;\n  masterPasswordHash: string;\n  creationDate: string;\n  requestApproved: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n    this.requestDeviceType = this.getResponseProperty(\"RequestDeviceType\");\n    this.requestIpAddress = this.getResponseProperty(\"RequestIpAddress\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.masterPasswordHash = this.getResponseProperty(\"MasterPasswordHash\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.requestApproved = this.getResponseProperty(\"RequestApproved\");\n  }\n}\n","import { BaseResponse } from \"../base.response\";\n\nimport { ICaptchaProtectedResponse } from \"./captcha-protected.response\";\n\nexport class RegisterResponse extends BaseResponse implements ICaptchaProtectedResponse {\n  captchaBypassToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaBypassToken = this.getResponseProperty(\"CaptchaBypassToken\");\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { BillingInvoiceResponse, BillingTransactionResponse } from \"./billing.response\";\n\nexport class BillingHistoryResponse extends BaseResponse {\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { BillingSourceResponse } from \"./billing.response\";\n\nexport class BillingPaymentResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { SelectionReadOnlyResponse } from \"./selection-read-only.response\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class DeviceVerificationResponse extends BaseResponse {\n  isDeviceVerificationSectionEnabled: boolean;\n  unknownDeviceVerificationEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.isDeviceVerificationSectionEnabled = this.getResponseProperty(\n      \"IsDeviceVerificationSectionEnabled\"\n    );\n    this.unknownDeviceVerificationEnabled = this.getResponseProperty(\n      \"UnknownDeviceVerificationEnabled\"\n    );\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { GlobalDomainResponse } from \"./global-domain.response\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\nimport { EventType } from \"../../enums/eventType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n  installationId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n    this.installationId = this.getResponseProperty(\"InstallationId\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { SelectionReadOnlyResponse } from \"./selection-read-only.response\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        // eslint-disable-next-line\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\nimport { BillingSyncConfigApi } from \"../api/billing-sync-config.api\";\nimport { ScimConfigApi } from \"../api/scim-config.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\n/**API response config types for OrganizationConnectionResponse */\nexport type OrganizationConnectionConfigApis = BillingSyncConfigApi | ScimConfigApi;\n\nexport class OrganizationConnectionResponse<\n  TConfig extends OrganizationConnectionConfigApis\n> extends BaseResponse {\n  id: string;\n  type: OrganizationConnectionType;\n  organizationId: string;\n  enabled: boolean;\n  config: TConfig;\n\n  constructor(response: any, configType: { new (response: any): TConfig }) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const rawConfig = this.getResponseProperty(\"Config\");\n    this.config = rawConfig == null ? null : new configType(rawConfig);\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\nimport { CollectionResponse } from \"./collection.response\";\nimport { ListResponse } from \"./list.response\";\n\nexport class OrganizationExportResponse extends BaseResponse {\n  collections: ListResponse<CollectionResponse>;\n  ciphers: ListResponse<CipherResponse>;\n\n  constructor(response: any) {\n    super(response);\n    this.collections = this.getResponseProperty(\"Collections\");\n    this.ciphers = this.getResponseProperty(\"Ciphers\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class OrganizationSponsorshipSyncStatusResponse extends BaseResponse {\n  lastSyncDate?: Date;\n\n  constructor(response: any) {\n    super(response);\n    const lastSyncDate = this.getResponseProperty(\"LastSyncDate\");\n    if (lastSyncDate) {\n      this.lastSyncDate = new Date(lastSyncDate);\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n  manageScim: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n    this.manageScim = this.getResponseProperty(\"ManageScim\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { SelectionReadOnlyResponse } from \"./selection-read-only.response\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useScim = this.getResponseProperty(\"UseScim\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n    const familySponsorshipLastSyncDateString = this.getResponseProperty(\n      \"FamilySponsorshipLastSyncDate\"\n    );\n    if (familySponsorshipLastSyncDateString) {\n      this.familySponsorshipLastSyncDate = new Date(familySponsorshipLastSyncDateString);\n    }\n    const familySponsorshipValidUntilString = this.getResponseProperty(\n      \"FamilySponsorshipValidUntil\"\n    );\n    if (familySponsorshipValidUntilString) {\n      this.familySponsorshipValidUntil = new Date(familySponsorshipValidUntilString);\n    }\n    this.familySponsorshipToDelete = this.getResponseProperty(\"FamilySponsorshipToDelete\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profile-organization.response\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { ProfileOrganizationResponse } from \"./profile-organization.response\";\nimport { ProfileProviderOrganizationResponse } from \"./profile-provider-organization.response\";\nimport { ProfileProviderResponse } from \"./profile-provider.response\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premiumPersonally: boolean;\n  premiumFromOrganization: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premiumPersonally = this.getResponseProperty(\"Premium\");\n    this.premiumFromOrganization = this.getResponseProperty(\"PremiumFromOrganization\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { ProfileResponse } from \"./profile.response\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { BaseResponse } from \"../base.response\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n  userCount: number;\n  seats?: number;\n  plan?: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.userCount = this.getResponseProperty(\"UserCount\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.plan = this.getResponseProperty(\"Plan\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../organization-user-bulk-public-key.response\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../base.response\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\nimport { PermissionsApi } from \"../../api/permissions.api\";\nimport { BaseResponse } from \"../base.response\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"../base.response\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/send-file.api\";\nimport { SendTextApi } from \"../api/send-text.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/send-file.api\";\nimport { SendTextApi } from \"../api/send-text.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { SendResponse } from \"./send.response\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SsoPreValidateResponse extends BaseResponse {\n  token: string;\n\n  constructor(response: any) {\n    super(response);\n    this.token = this.getResponseProperty(\"Token\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\nimport { CollectionDetailsResponse } from \"./collection.response\";\nimport { DomainsResponse } from \"./domains.response\";\nimport { FolderResponse } from \"./folder.response\";\nimport { PolicyResponse } from \"./policy.response\";\nimport { ProfileResponse } from \"./profile.response\";\nimport { SendResponse } from \"./send.response\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\nimport { BreachAccountResponse } from \"../models/response/breach-account.response\";\nimport { ErrorResponse } from \"../models/response/error.response\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","export enum AuthenticationStatus {\n  LoggedOut = 0,\n  Locked = 1,\n  Unlocked = 2,\n}\n","export enum AuthenticationType {\n  Password = 0,\n  Sso = 1,\n  Api = 2,\n  Passwordless = 3,\n}\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class AuthResult {\n  captchaSiteKey = \"\";\n  resetMasterPassword = false;\n  forcePasswordReset = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n\n  get requiresCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  get requiresTwoFactor() {\n    return this.twoFactorProviders != null;\n  }\n}\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Account, AccountProfile, AccountTokens } from \"../../models/domain/account\";\nimport { AuthResult } from \"../../models/domain/auth-result\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../../models/domain/log-in-credentials\";\nimport { DeviceRequest } from \"../../models/request/device.request\";\nimport { ApiTokenRequest } from \"../../models/request/identity-token/api-token.request\";\nimport { PasswordTokenRequest } from \"../../models/request/identity-token/password-token.request\";\nimport { SsoTokenRequest } from \"../../models/request/identity-token/sso-token.request\";\nimport { TokenTwoFactorRequest } from \"../../models/request/identity-token/token-two-factor.request\";\nimport { KeysRequest } from \"../../models/request/keys.request\";\nimport { IdentityCaptchaResponse } from \"../../models/response/identity-captcha.response\";\nimport { IdentityTokenResponse } from \"../../models/response/identity-token.response\";\nimport { IdentityTwoFactorResponse } from \"../../models/response/identity-two-factor.response\";\n\nexport abstract class LogInStrategy {\n  protected abstract tokenRequest: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest;\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService\n  ) {}\n\n  abstract logIn(\n    credentials:\n      | ApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ): Promise<AuthResult>;\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string = null\n  ): Promise<AuthResult> {\n    this.tokenRequest.setTwoFactor(twoFactor);\n    return this.startLogIn();\n  }\n\n  protected async startLogIn(): Promise<AuthResult> {\n    this.twoFactorService.clearSelectedProvider();\n\n    const response = await this.apiService.postIdentityToken(this.tokenRequest);\n\n    if (response instanceof IdentityTwoFactorResponse) {\n      return this.processTwoFactorResponse(response);\n    } else if (response instanceof IdentityCaptchaResponse) {\n      return this.processCaptchaResponse(response);\n    } else if (response instanceof IdentityTokenResponse) {\n      return this.processTokenResponse(response);\n    }\n\n    throw new Error(\"Invalid response object.\");\n  }\n\n  protected onSuccessfulLogin(response: IdentityTokenResponse): Promise<void> {\n    // Implemented in subclass if required\n    return null;\n  }\n\n  protected async buildDeviceRequest() {\n    const appId = await this.appIdService.getAppId();\n    return new DeviceRequest(appId, this.platformUtilsService);\n  }\n\n  protected async buildTwoFactor(userProvidedTwoFactor?: TokenTwoFactorRequest) {\n    if (userProvidedTwoFactor != null) {\n      return userProvidedTwoFactor;\n    }\n\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken();\n    if (storedTwoFactorToken != null) {\n      return new TokenTwoFactorRequest(TwoFactorProviderType.Remember, storedTwoFactorToken, false);\n    }\n\n    return new TokenTwoFactorRequest();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            name: accountInformation.name,\n            email: accountInformation.email,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n  }\n\n  protected async processTokenResponse(response: IdentityTokenResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.resetMasterPassword = response.resetMasterPassword;\n    result.forcePasswordReset = response.forcePasswordReset;\n\n    await this.saveAccountInformation(response);\n\n    if (response.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(response);\n    }\n\n    const newSsoUser = response.key == null;\n    if (!newSsoUser) {\n      await this.cryptoService.setEncKey(response.key);\n      await this.cryptoService.setEncPrivateKey(\n        response.privateKey ?? (await this.createKeyPairForOldAccount())\n      );\n    }\n\n    await this.onSuccessfulLogin(response);\n\n    this.messagingService.send(\"loggedIn\");\n\n    return result;\n  }\n\n  private async processTwoFactorResponse(response: IdentityTwoFactorResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.twoFactorProviders = response.twoFactorProviders2;\n    this.twoFactorService.setProviders(response);\n    this.captchaBypassToken = response.captchaToken ?? null;\n    return result;\n  }\n\n  private async processCaptchaResponse(response: IdentityCaptchaResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.captchaSiteKey = response.siteKey;\n    return result;\n  }\n\n  private async createKeyPairForOldAccount() {\n    try {\n      const [publicKey, privateKey] = await this.cryptoService.makeKeyPair();\n      await this.apiService.postAccountKeys(new KeysRequest(publicKey, privateKey.encryptedString));\n      return privateKey.encryptedString;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { ApiLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { ApiTokenRequest } from \"../../models/request/identity-token/api-token.request\";\nimport { IdentityTokenResponse } from \"../../models/response/identity-token.response\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class ApiLogInStrategy extends LogInStrategy {\n  tokenRequest: ApiTokenRequest;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private environmentService: EnvironmentService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    if (tokenResponse.apiUseKeyConnector) {\n      const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n      await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n    }\n  }\n\n  async logIn(credentials: ApiLogInCredentials) {\n    this.tokenRequest = new ApiTokenRequest(\n      credentials.clientId,\n      credentials.clientSecret,\n      await this.buildTwoFactor(),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    await super.saveAccountInformation(tokenResponse);\n    await this.stateService.setApiKeyClientId(this.tokenRequest.clientId);\n    await this.stateService.setApiKeyClientSecret(this.tokenRequest.clientSecret);\n  }\n}\n","import { ClientType } from \"../../../enums/clientType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { CaptchaProtectedRequest } from \"../captcha-protected.request\";\nimport { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\nimport { TokenRequest } from \"./token.request\";\n\nexport class PasswordTokenRequest extends TokenRequest implements CaptchaProtectedRequest {\n  constructor(\n    public email: string,\n    public masterPasswordHash: string,\n    public captchaResponse: string,\n    protected twoFactor: TokenTwoFactorRequest,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: ClientType) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"password\";\n    obj.username = this.email;\n    obj.password = this.masterPasswordHash;\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { HashPurpose } from \"../../enums/hashPurpose\";\nimport { AuthResult } from \"../../models/domain/auth-result\";\nimport { PasswordLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { PasswordTokenRequest } from \"../../models/request/identity-token/password-token.request\";\nimport { TokenTwoFactorRequest } from \"../../models/request/identity-token/token-two-factor.request\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordLogInCredentials) {\n    const { email, masterPassword, captchaToken, twoFactor } = credentials;\n\n    this.key = await this.authService.makePreloginKey(masterPassword, email);\n\n    // Hash the password early (before authentication) so we don't persist it in memory in plaintext\n    this.localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      this.key,\n      HashPurpose.LocalAuthorization\n    );\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, this.key);\n\n    this.tokenRequest = new PasswordTokenRequest(\n      email,\n      hashedPassword,\n      captchaToken,\n      await this.buildTwoFactor(twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { AuthResult } from \"../../models/domain/auth-result\";\nimport { PasswordlessLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { PasswordTokenRequest } from \"../../models/request/identity-token/password-token.request\";\nimport { TokenTwoFactorRequest } from \"../../models/request/identity-token/token-two-factor.request\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordlessLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get accessCode() {\n    return this.passwordlessCredentials.accessCode;\n  }\n\n  get authRequestId() {\n    return this.passwordlessCredentials.authRequestId;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n  private passwordlessCredentials: PasswordlessLogInCredentials;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin() {\n    await this.cryptoService.setKey(this.passwordlessCredentials.decKey);\n    await this.cryptoService.setKeyHash(this.passwordlessCredentials.localPasswordHash);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordlessLogInCredentials) {\n    this.passwordlessCredentials = credentials;\n\n    this.tokenRequest = new PasswordTokenRequest(\n      credentials.email,\n      credentials.accessCode,\n      null,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    this.tokenRequest.setPasswordlessAccessCode(credentials.authRequestId);\n    return this.startLogIn();\n  }\n}\n","import { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\nimport { TokenRequest } from \"./token.request\";\n\nexport class SsoTokenRequest extends TokenRequest {\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUri: string,\n    protected twoFactor: TokenTwoFactorRequest,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"authorization_code\";\n    obj.code = this.code;\n    obj.code_verifier = this.codeVerifier;\n    obj.redirect_uri = this.redirectUri;\n\n    return obj;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { SsoLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { SsoTokenRequest } from \"../../models/request/identity-token/sso-token.request\";\nimport { IdentityTokenResponse } from \"../../models/response/identity-token.response\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class SsoLogInStrategy extends LogInStrategy {\n  tokenRequest: SsoTokenRequest;\n  orgId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async onSuccessfulLogin(tokenResponse: IdentityTokenResponse) {\n    const newSsoUser = tokenResponse.key == null;\n\n    if (tokenResponse.keyConnectorUrl != null) {\n      if (!newSsoUser) {\n        await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n      } else {\n        await this.keyConnectorService.convertNewSsoUserToKeyConnector(tokenResponse, this.orgId);\n      }\n    }\n  }\n\n  async logIn(credentials: SsoLogInCredentials) {\n    this.orgId = credentials.orgId;\n    this.tokenRequest = new SsoTokenRequest(\n      credentials.code,\n      credentials.codeVerifier,\n      credentials.redirectUrl,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Utils } from \"../../misc/utils\";\n\nconst ENC_TYPE_LENGTH = 1;\nconst IV_LENGTH = 16;\nconst MAC_LENGTH = 32;\nconst MIN_DATA_LENGTH = 1;\n\nexport class EncArrayBuffer implements IEncrypted {\n  readonly encryptionType: EncryptionType = null;\n  readonly dataBytes: ArrayBuffer = null;\n  readonly ivBytes: ArrayBuffer = null;\n  readonly macBytes: ArrayBuffer = null;\n\n  constructor(readonly buffer: ArrayBuffer) {\n    const encBytes = new Uint8Array(buffer);\n    const encType = encBytes[0];\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.macBytes = encBytes.slice(\n          ENC_TYPE_LENGTH + IV_LENGTH,\n          ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH\n        ).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH).buffer;\n        break;\n      }\n      case EncryptionType.AesCbc256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        break;\n      }\n      default:\n        this.throwDecryptionError();\n    }\n\n    this.encryptionType = encType;\n  }\n\n  private throwDecryptionError() {\n    throw new Error(\n      \"Error parsing encrypted ArrayBuffer: data is corrupted or has an invalid format.\"\n    );\n  }\n\n  static async fromResponse(response: {\n    arrayBuffer: () => Promise<ArrayBuffer>;\n  }): Promise<EncArrayBuffer> {\n    const buffer = await response.arrayBuffer();\n    if (buffer == null) {\n      throw new Error(\"Cannot create EncArrayBuffer from Response - Response is empty\");\n    }\n    return new EncArrayBuffer(buffer);\n  }\n\n  static fromB64(b64: string) {\n    const buffer = Utils.fromB64ToArray(b64).buffer;\n    return new EncArrayBuffer(buffer);\n  }\n}\n","import { CipherView } from \"../view/cipher.view\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipher.request\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherWithIdRequest } from \"./cipher-with-id.request\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipher.request\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nexport class CipherPartialRequest {\n  folderId: string;\n  favorite: boolean;\n\n  constructor(cipher: Cipher) {\n    this.folderId = cipher.folderId;\n    this.favorite = cipher.favorite;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipher.request\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { AccountSettingsSettings } from \"../models/domain/account\";\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domain-base\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/login-uri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secure-note\";\nimport { SortedCiphersCache } from \"../models/domain/sorted-ciphers-cache\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { AttachmentRequest } from \"../models/request/attachment.request\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipher-bulk-delete.request\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipher-bulk-move.request\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipher-bulk-restore.request\";\nimport { CipherBulkShareRequest } from \"../models/request/cipher-bulk-share.request\";\nimport { CipherCollectionsRequest } from \"../models/request/cipher-collections.request\";\nimport { CipherCreateRequest } from \"../models/request/cipher-create.request\";\nimport { CipherPartialRequest } from \"../models/request/cipher-partial.request\";\nimport { CipherShareRequest } from \"../models/request/cipher-share.request\";\nimport { CipherRequest } from \"../models/request/cipher.request\";\nimport { CipherResponse } from \"../models/response/cipher.response\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { AttachmentView } from \"../models/view/attachment.view\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { FieldView } from \"../models/view/field.view\";\nimport { PasswordHistoryView } from \"../models/view/password-history.view\";\nimport { View } from \"../models/view/view\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService,\n    private encryptService: EncryptService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n    cipher.edit = model.edit;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    if ((await this.getDecryptedCipherCache()) != null) {\n      await this.reindexCiphers();\n      return await this.getDecryptedCipherCache();\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const ciphers = await this.getAll();\n    const orgKeys = await this.cryptoService.getOrgKeys();\n    const userKey = await this.cryptoService.getKeyForUserEncryption();\n\n    // Group ciphers by orgId or under 'null' for the user's ciphers\n    const grouped = ciphers.reduce((agg, c) => {\n      agg[c.organizationId] ??= [];\n      agg[c.organizationId].push(c);\n      return agg;\n    }, {} as Record<string, Cipher[]>);\n\n    const decCiphers = (\n      await Promise.all(\n        Object.entries(grouped).map(([orgId, groupedCiphers]) =>\n          this.encryptService.decryptItems(groupedCiphers, orgKeys.get(orgId) ?? userKey)\n        )\n      )\n    )\n      .flat()\n      .sort(this.getLocaleSortingFunction());\n\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  private async reindexCiphers() {\n    const userId = await this.stateService.getUserId();\n    const reindexRequired =\n      this.searchService != null && (this.searchService().indexedEntityId ?? userId) !== userId;\n    if (reindexRequired) {\n      await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n    }\n  }\n\n  async getAllDecryptedForGrouping(groupingId: string, folder = true): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : firstValueFrom(this.settingsService.settings$).then(\n            (settings: AccountSettingsSettings) => {\n              let matches: any[] = [];\n              settings.equivalentDomains?.forEach((eqDomain: any) => {\n                if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                  matches = matches.concat(eqDomain);\n                }\n              });\n\n              if (!matches.length) {\n                matches.push(domain);\n              }\n\n              return matches;\n            }\n          );\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host: {\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            }\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const response = await this.apiService.getCiphersOrganization(organizationId);\n    if (response?.data == null || response.data.length < 1) {\n      return [];\n    }\n\n    const ciphers = response.data.map((cr) => new Cipher(new CipherData(cr)));\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const decCiphers = await this.encryptService.decryptItems(ciphers, key);\n\n    decCiphers.sort(this.getLocaleSortingFunction());\n    return decCiphers;\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async createWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.collectionIds != null) {\n      const request = new CipherCreateRequest(cipher);\n      response = await this.apiService.postCipherCreate(request);\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.postCipher(request);\n    }\n    cipher.id = response.id;\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async updateWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.edit) {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    } else {\n      const request = new CipherPartialRequest(cipher);\n      response = await this.apiService.putPartialCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    try {\n      await this.apiService.putShareCiphers(request);\n    } catch (e) {\n      for (const cipher of ciphers) {\n        cipher.organizationId = null;\n        cipher.collectionIds = null;\n      }\n      throw e;\n    }\n    await this.upsert(encCiphers.map((c) => c.toCipherData()));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(response, cipher.collectionIds);\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData();\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === Array.name) {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const encBuf = await EncArrayBuffer.fromResponse(attachmentResponse);\n    const decBuf = await this.cryptoService.decryptFromBytes(encBuf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class ServerConfigResponse extends BaseResponse {\n  version: string;\n  gitHash: string;\n  server: ThirdPartyServerConfigResponse;\n  environment: EnvironmentServerConfigResponse;\n\n  constructor(response: any) {\n    super(response);\n\n    if (response == null) {\n      return;\n    }\n\n    this.version = this.getResponseProperty(\"Version\");\n    this.gitHash = this.getResponseProperty(\"GitHash\");\n    this.server = new ThirdPartyServerConfigResponse(this.getResponseProperty(\"Server\"));\n    this.environment = new EnvironmentServerConfigResponse(this.getResponseProperty(\"Environment\"));\n  }\n}\n\nexport class EnvironmentServerConfigResponse extends BaseResponse {\n  vault: string;\n  api: string;\n  identity: string;\n  notifications: string;\n  sso: string;\n\n  constructor(data: any = null) {\n    super(data);\n\n    if (data == null) {\n      return;\n    }\n\n    this.vault = this.getResponseProperty(\"Vault\");\n    this.api = this.getResponseProperty(\"Api\");\n    this.identity = this.getResponseProperty(\"Identity\");\n    this.notifications = this.getResponseProperty(\"Notifications\");\n    this.sso = this.getResponseProperty(\"Sso\");\n  }\n}\n\nexport class ThirdPartyServerConfigResponse extends BaseResponse {\n  name: string;\n  url: string;\n\n  constructor(data: any = null) {\n    super(data);\n\n    if (data == null) {\n      return;\n    }\n\n    this.name = this.getResponseProperty(\"Name\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import {\n  ServerConfigData,\n  ThirdPartyServerConfigData,\n  EnvironmentServerConfigData,\n} from \"../../models/data/server-config.data\";\n\nconst dayInMilliseconds = 24 * 3600 * 1000;\nconst eighteenHoursInMilliseconds = 18 * 3600 * 1000;\n\nexport class ServerConfig {\n  version: string;\n  gitHash: string;\n  server?: ThirdPartyServerConfigData;\n  environment?: EnvironmentServerConfigData;\n  utcDate: Date;\n\n  constructor(serverConfigData: ServerConfigData) {\n    this.version = serverConfigData.version;\n    this.gitHash = serverConfigData.gitHash;\n    this.server = serverConfigData.server;\n    this.utcDate = new Date(serverConfigData.utcDate);\n    this.environment = serverConfigData.environment;\n\n    if (this.server?.name == null && this.server?.url == null) {\n      this.server = null;\n    }\n  }\n\n  private getAgeInMilliseconds(): number {\n    return new Date().getTime() - this.utcDate?.getTime();\n  }\n\n  isValid(): boolean {\n    return this.getAgeInMilliseconds() <= dayInMilliseconds;\n  }\n\n  expiresSoon(): boolean {\n    return this.getAgeInMilliseconds() >= eighteenHoursInMilliseconds;\n  }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EFFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptedOrganizationKeyData } from \"../data/encrypted-organization-key.data\";\n\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport abstract class BaseEncryptedOrganizationKey {\n  decrypt: (cryptoService: CryptoService) => Promise<SymmetricCryptoKey>;\n\n  static fromData(data: EncryptedOrganizationKeyData) {\n    switch (data.type) {\n      case \"organization\":\n        return new EncryptedOrganizationKey(data.key);\n\n      case \"provider\":\n        return new ProviderEncryptedOrganizationKey(data.key, data.providerId);\n\n      default:\n        return null;\n    }\n  }\n}\n\nexport class EncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const decValue = await cryptoService.rsaDecrypt(this.key);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"organization\",\n      key: this.key,\n    };\n  }\n}\n\nexport class ProviderEncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string, private providerId: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const providerKey = await cryptoService.getProviderKey(this.providerId);\n    const decValue = await cryptoService.decryptToBytes(new EncString(this.key), providerKey);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"provider\",\n      key: this.key,\n      providerId: this.providerId,\n    };\n  }\n}\n","import * as bigInt from \"big-integer\";\n\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EFFLongWordList } from \"../misc/wordlist\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encrypted-organization-key.data\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { BaseEncryptedOrganizationKey } from \"../models/domain/encrypted-organization-key\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { ProfileOrganizationResponse } from \"../models/response/profile-organization.response\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profile-provider-organization.response\";\nimport { ProfileProviderResponse } from \"../models/response/profile-provider.response\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private encryptService: EncryptService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[] = [],\n    providerOrgs: ProfileProviderOrganizationResponse[] = []\n  ): Promise<void> {\n    const encOrgKeyData: { [orgId: string]: EncryptedOrganizationKeyData } = {};\n\n    orgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"organization\",\n        key: org.key,\n      };\n    });\n\n    providerOrgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"provider\",\n        providerId: org.providerId,\n        key: org.key,\n      };\n    });\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(encOrgKeyData);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    return this.getEncKeyHelper(key);\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const result: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeyData = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeyData == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId of Object.keys(encOrgKeyData)) {\n      if (result.has(orgId)) {\n        continue;\n      }\n\n      const encOrgKey = BaseEncryptedOrganizationKey.fromData(encOrgKeyData[orgId]);\n      const decOrgKey = await encOrgKey.decrypt(this);\n      result.set(orgId, decOrgKey);\n\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(result);\n    }\n\n    return result;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      // eslint-disable-next-line\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForUserEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encrypt\n   */\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.encrypt(plainValue, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encryptToBytes\n   */\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    key = await this.getKeyForUserEncryption(key);\n    return this.encryptService.encryptToBytes(plainValue, key);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64: // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForUserEncryption(key);\n    return this.encryptService.decryptToBytes(encString, keyForEnc);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToUtf8\n   */\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.decryptToUtf8(encString, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptFromBytes(encBuffer: EncArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuffer == null) {\n      throw new Error(\"No buffer provided for decryption.\");\n    }\n\n    key = await this.getKeyForUserEncryption(key);\n\n    return this.encryptService.decryptToBytes(encBuffer, key);\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKeyHelper(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // ---HELPERS---\n\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  async getKeyForUserEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    // Legacy support: encryption used to be done with the user key (derived from master password).\n    // Users who have not migrated will have a null encKey and must use the user key instead.\n    return await this.getKey();\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy = 64) {\n    const entropyPerWord = Math.log(EFFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EFFLongWordList.length);\n      hashNumber = hashNumber.divide(EFFLongWordList.length);\n      phrase.push(EFFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n\n  private async getEncKeyHelper(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n}\n","import { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","import { CryptoFunctionService } from \"../../abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"../../abstractions/encrypt.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Utils } from \"../../misc/utils\";\nimport { EncArrayBuffer } from \"../../models/domain/enc-array-buffer\";\nimport { EncString } from \"../../models/domain/enc-string\";\nimport { EncryptedObject } from \"../../models/domain/encrypted-object\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\n\nexport class EncryptServiceImplementation implements EncryptService {\n  constructor(\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected logMacFailures: boolean\n  ) {}\n\n  async encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async decryptToUtf8(encString: EncString, key: SymmetricCryptoKey): Promise<string> {\n    if (key == null) {\n      throw new Error(\"No key provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encString);\n\n    if (key.macKey != null && encString?.mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (key.encType !== encString.encryptionType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  async decryptToBytes(encThing: IEncrypted, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (encThing == null) {\n      throw new Error(\"Nothing provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encThing);\n\n    if (key.macKey != null && encThing.macBytes == null) {\n      return null;\n    }\n\n    if (key.encType !== encThing.encryptionType) {\n      return null;\n    }\n\n    if (key.macKey != null && encThing.macBytes != null) {\n      const macData = new Uint8Array(encThing.ivBytes.byteLength + encThing.dataBytes.byteLength);\n      macData.set(new Uint8Array(encThing.ivBytes), 0);\n      macData.set(new Uint8Array(encThing.dataBytes), encThing.ivBytes.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        key.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(encThing.macBytes, computedMac);\n      if (!macsMatch) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    const result = await this.cryptoFunctionService.aesDecrypt(\n      encThing.dataBytes,\n      encThing.ivBytes,\n      key.encKey\n    );\n\n    return result ?? null;\n  }\n\n  async decryptItems<T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ): Promise<T[]> {\n    if (items == null || items.length < 1) {\n      return [];\n    }\n\n    return await Promise.all(items.map((item) => item.decrypt(key)));\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = key;\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private logMacFailed(msg: string) {\n    if (this.logMacFailures) {\n      this.logService.error(msg);\n    }\n  }\n\n  /**\n   * Transform into new key for the old encrypt-then-mac scheme if required, otherwise return the current key unchanged\n   * @param encThing The encrypted object (e.g. encString or encArrayBuffer) that you want to decrypt\n   */\n  resolveLegacyKey(key: SymmetricCryptoKey, encThing: IEncrypted): SymmetricCryptoKey {\n    if (\n      encThing.encryptionType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      return new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n    }\n\n    return key;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Cipher } from \"../../models/domain/cipher\";\nimport { CipherView } from \"../../models/view/cipher.view\";\n\nimport { InitializerKey } from \"./initializer-key\";\n\n/**\n * Internal reference of classes so we can reconstruct objects properly.\n * Each entry should be keyed using the Decryptable.initializerKey property\n */\nconst classInitializers: Record<InitializerKey, (obj: any) => any> = {\n  [InitializerKey.Cipher]: Cipher.fromJSON,\n  [InitializerKey.CipherView]: CipherView.fromJSON,\n};\n\nexport function getClassInitializer<T extends InitializerMetadata>(\n  className: InitializerKey\n): (obj: Jsonify<T>) => T {\n  return classInitializers[className];\n}\n","import { defaultIfEmpty, filter, firstValueFrom, fromEvent, map, Subject, takeUntil } from \"rxjs\";\nimport { Jsonify } from \"type-fest\";\n\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Utils } from \"../../misc/utils\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\n\nimport { EncryptServiceImplementation } from \"./encrypt.service.implementation\";\nimport { getClassInitializer } from \"./get-class-initializer\";\n\n// TTL (time to live) is not strictly required but avoids tying up memory resources if inactive\nconst workerTTL = 3 * 60000; // 3 minutes\n\nexport class MultithreadEncryptServiceImplementation extends EncryptServiceImplementation {\n  private worker: Worker;\n  private timeout: any;\n\n  private clear$ = new Subject<void>();\n\n  /**\n   * Sends items to a web worker to decrypt them.\n   * This utilises multithreading to decrypt items faster without interrupting other operations (e.g. updating UI).\n   */\n  async decryptItems<T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ): Promise<T[]> {\n    if (items == null || items.length < 1) {\n      return [];\n    }\n\n    this.logService.info(\"Starting decryption using multithreading\");\n\n    this.worker ??= new Worker(\n      new URL(\"@bitwarden/common/services/cryptography/encrypt.worker.ts\", import.meta.url)\n    );\n\n    this.restartTimeout();\n\n    const request = {\n      id: Utils.newGuid(),\n      items: items,\n      key: key,\n    };\n\n    this.worker.postMessage(JSON.stringify(request));\n\n    return await firstValueFrom(\n      fromEvent(this.worker, \"message\").pipe(\n        filter((response: MessageEvent) => response.data?.id === request.id),\n        map((response) => JSON.parse(response.data.items)),\n        map((items) =>\n          items.map((jsonItem: Jsonify<T>) => {\n            const initializer = getClassInitializer<T>(jsonItem.initializerKey);\n            return initializer(jsonItem);\n          })\n        ),\n        takeUntil(this.clear$),\n        defaultIfEmpty([])\n      )\n    );\n  }\n\n  private clear() {\n    this.clear$.next();\n    this.worker?.terminate();\n    this.worker = null;\n    this.clearTimeout();\n  }\n\n  private restartTimeout() {\n    this.clearTimeout();\n    this.timeout = setTimeout(() => this.clear(), workerTTL);\n  }\n\n  private clearTimeout() {\n    if (this.timeout != null) {\n      clearTimeout(this.timeout);\n    }\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/event.view\";\n\nexport class EventExport {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n  installationId: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n    this.installationId = event.installationId;\n  }\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","import { LogService } from \"../abstractions/log.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    // eslint-disable-next-line\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\n\nexport class BitwardenFileUploadService {\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { FolderResponse } from \"../response/folder.response\";\n\nexport class FolderData {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse) {\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../keys.request\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","export enum SsoType {\n  None = 0,\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nexport enum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nexport enum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n}\n\nexport enum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nexport enum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class OrganizationApiKeyInformationResponse extends BaseResponse {\n  keyType: OrganizationApiKeyType;\n\n  constructor(response: any) {\n    super(response);\n    this.keyType = this.getResponseProperty(\"KeyType\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { KeysResponse } from \"./keys.response\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { PlanResponse } from \"./plan.response\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { OrganizationResponse } from \"./organization.response\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscription.response\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { BaseResponse } from \"../response/base.response\";\nimport { SsoConfigView } from \"../view/sso-config.view\";\n\nexport class SsoConfigApi extends BaseResponse {\n  static fromView(view: SsoConfigView, api = new SsoConfigApi()) {\n    api.configType = view.configType;\n\n    api.keyConnectorEnabled = view.keyConnectorEnabled;\n    api.keyConnectorUrl = view.keyConnectorUrl;\n\n    if (api.configType === SsoType.OpenIdConnect) {\n      api.authority = view.openId.authority;\n      api.clientId = view.openId.clientId;\n      api.clientSecret = view.openId.clientSecret;\n      api.metadataAddress = view.openId.metadataAddress;\n      api.redirectBehavior = view.openId.redirectBehavior;\n      api.getClaimsFromUserInfoEndpoint = view.openId.getClaimsFromUserInfoEndpoint;\n      api.additionalScopes = view.openId.additionalScopes;\n      api.additionalUserIdClaimTypes = view.openId.additionalUserIdClaimTypes;\n      api.additionalEmailClaimTypes = view.openId.additionalEmailClaimTypes;\n      api.additionalNameClaimTypes = view.openId.additionalNameClaimTypes;\n      api.acrValues = view.openId.acrValues;\n      api.expectedReturnAcrValue = view.openId.expectedReturnAcrValue;\n    } else if (api.configType === SsoType.Saml2) {\n      api.spNameIdFormat = view.saml.spNameIdFormat;\n      api.spOutboundSigningAlgorithm = view.saml.spOutboundSigningAlgorithm;\n      api.spSigningBehavior = view.saml.spSigningBehavior;\n      api.spMinIncomingSigningAlgorithm = view.saml.spMinIncomingSigningAlgorithm;\n      api.spWantAssertionsSigned = view.saml.spWantAssertionsSigned;\n      api.spValidateCertificates = view.saml.spValidateCertificates;\n\n      api.idpEntityId = view.saml.idpEntityId;\n      api.idpBindingType = view.saml.idpBindingType;\n      api.idpSingleSignOnServiceUrl = view.saml.idpSingleSignOnServiceUrl;\n      api.idpSingleLogoutServiceUrl = view.saml.idpSingleLogoutServiceUrl;\n      api.idpX509PublicCert = view.saml.idpX509PublicCert;\n      api.idpOutboundSigningAlgorithm = view.saml.idpOutboundSigningAlgorithm;\n      api.idpAllowUnsolicitedAuthnResponse = view.saml.idpAllowUnsolicitedAuthnResponse;\n      api.idpWantAuthnRequestsSigned = view.saml.idpWantAuthnRequestsSigned;\n\n      // Value is inverted in the api model (disable instead of allow)\n      api.idpDisableOutboundLogoutRequests = !view.saml.idpAllowOutboundLogoutRequests;\n    }\n\n    return api;\n  }\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: boolean;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { SsoConfigApi } from \"../../api/sso-config.api\";\nimport { BaseResponse } from \"../base.response\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.data =\n      this.getResponseProperty(\"Data\") != null\n        ? new SsoConfigApi(this.getResponseProperty(\"Data\"))\n        : null;\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1,\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\nimport { ProfileOrganizationResponse } from \"../response/profile-organization.response\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useScim = response.useScim;\n    this.useResetPassword = response.useResetPassword;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = response.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = response.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = response.familySponsorshipToDelete;\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\nimport { OrganizationData } from \"../data/organization.data\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useResetPassword: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useScim = obj.useScim;\n    this.useResetPassword = obj.useResetPassword;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = obj.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = obj.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = obj.familySponsorshipToDelete;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return (this.isAdmin || this.permissions.accessEventLogs) && this.useEvents;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return (this.isAdmin || this.permissions.manageGroups) && this.useGroups;\n  }\n\n  get canManageSso() {\n    return (this.isAdmin || this.permissions.manageSso) && this.useSso;\n  }\n\n  get canManageScim() {\n    return (this.isAdmin || this.permissions.manageScim) && this.useScim;\n  }\n\n  get canManagePolicies() {\n    return (this.isAdmin || this.permissions.managePolicies) && this.usePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n\n  get canManageBilling() {\n    return this.isOwner && (this.isProviderUser || !this.hasProvider);\n  }\n\n  get hasProvider() {\n    return this.providerId != null || this.providerName != null;\n  }\n}\n","import { SyncResponse } from \"../models/response/sync.response\";\n\ntype SyncStatus = \"Started\" | \"Completed\";\n\ntype SyncEventArgsBase<T extends SyncStatus> = {\n  status: T;\n};\n\ntype SyncCompletedEventArgsBase<T extends boolean> = SyncEventArgsBase<\"Completed\"> & {\n  successfully: T;\n};\n\ntype SyncSuccessfullyCompletedEventArgs = SyncCompletedEventArgsBase<true> & {\n  data: SyncResponse;\n};\n\nexport type SyncEventArgs =\n  | SyncSuccessfullyCompletedEventArgs\n  | SyncCompletedEventArgsBase<false>\n  | SyncEventArgsBase<\"Started\">;\n\n/**\n * Helper function to filter only on successfully completed syncs\n * @returns a function that can be used in a `.pipe(filter(...))` from an observable\n * @example\n * ```\n * of<SyncEventArgs>({ status: \"Completed\", successfully: true, data: new SyncResponse() })\n *  .pipe(filter(isSuccessfullyCompleted))\n *  .subscribe(event => {\n *    console.log(event.data);\n *  });\n * ```\n */\nexport function isSuccessfullyCompleted(\n  syncEvent: SyncEventArgs\n): syncEvent is SyncSuccessfullyCompletedEventArgs {\n  return syncEvent.status === \"Completed\" && syncEvent.successfully;\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import Domain from \"./domain-base\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType = \"\";\n  minLength = 0;\n  useUppercase = false;\n  useLowercase = false;\n  useNumbers = false;\n  numberCount = 0;\n  useSpecial = false;\n  specialCount = 0;\n  minNumberWords = 0;\n  capitalize = false;\n  includeNumber = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import { firstValueFrom, map } from \"rxjs\";\nimport * as zxcvbn from \"zxcvbn\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { EFFLongWordList } from \"../misc/wordlist\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { PasswordGeneratorOptions } from \"../models/domain/password-generator-options\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/password-generator-policy-options\";\nimport { Policy } from \"../models/domain/policy\";\n\nconst DefaultOptions: PasswordGeneratorOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: PasswordGeneratorOptions): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: PasswordGeneratorOptions): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EFFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EFFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EFFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: PasswordGeneratorOptions\n  ): Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies: Policy[] =\n      this.policyService == null\n        ? null\n        : await firstValueFrom(\n            this.policyService.policies$.pipe(\n              map((p) => p.filter((policy) => policy.type === PolicyType.PasswordGenerator))\n            )\n          );\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: PasswordGeneratorOptions) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<void> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    await this.stateService.setDecryptedPasswordGenerationHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(\n    options: PasswordGeneratorOptions,\n    enforcedPolicyOptions: PasswordGeneratorPolicyOptions\n  ) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyResponse } from \"../response/policy.response\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../data/policy.data\";\n\nimport Domain from \"./domain-base\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import Domain from \"./domain-base\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled = false;\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1, // Not used, compile-time support only\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/provider.data\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  private static registeredPipeline = false;\n\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private readonly immediateSearchLocales: string[] = [\"zh-CN\", \"zh-TW\", \"ja\", \"ko\", \"vi\"];\n  private readonly defaultSearchableMinLength: number = 2;\n  private searchableMinLength: number = this.defaultSearchableMinLength;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    this.i18nService.locale$.subscribe((locale) => {\n      if (this.immediateSearchLocales.indexOf(locale) !== -1) {\n        this.searchableMinLength = 1;\n      } else {\n        this.searchableMinLength = this.defaultSearchableMinLength;\n      }\n    });\n\n    // Currently have to ensure this is only done a single time. Lunr allows you to register a function\n    // multiple times but they will add a warning message to the console. The way they do that breaks when ran on a service worker.\n    if (!SearchService.registeredPipeline) {\n      SearchService.registeredPipeline = true;\n      //register lunr pipeline function\n      lunr.Pipeline.registerFunction(this.normalizeAccentsPipelineFunction, \"normalizeAccents\");\n    }\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    query = SearchService.normalizeSearchQuery(query);\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.pipeline.add(this.normalizeAccentsPipelineFunction);\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", {\n      boost: 10,\n    });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.info(\"Finished search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted = false) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        c.login &&\n        c.login.hasUris &&\n        c.login.uris.some((loginUri) => loginUri?.uri?.toLowerCase().indexOf(query) > -1)\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLocaleLowerCase());\n    if (query === null) {\n      return sends;\n    }\n    const sendsMatched: SendView[] = [];\n    const lowPriorityMatched: SendView[] = [];\n    sends.forEach((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        sendsMatched.push(s);\n      } else if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        lowPriorityMatched.push(s);\n      } else if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      }\n    });\n    return sendsMatched.concat(lowPriorityMatched);\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n\n  private normalizeAccentsPipelineFunction(token: lunr.Token): any {\n    const searchableFields = [\"name\", \"login.username\", \"subtitle\", \"notes\"];\n    const fields = (token as any).metadata[\"fields\"];\n    const checkFields = fields.every((i: any) => searchableFields.includes(i));\n\n    if (checkFields) {\n      return SearchService.normalizeSearchQuery(token.toString());\n    }\n\n    return token;\n  }\n\n  // Remove accents/diacritics characters from text. This regex is equivalent to the Diacritic unicode property escape, i.e. it will match all diacritic characters.\n  static normalizeSearchQuery(query: string): string {\n    return query?.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n  }\n}\n","import { SendFileApi } from \"../api/send-file.api\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/send-text.api\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendResponse } from \"../response/send.response\";\n\nimport { SendFileData } from \"./send-file.data\";\nimport { SendTextData } from \"./send-text.data\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SendFile } from \"../domain/send-file\";\n\nimport { View } from \"./view\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n}\n","import { SendText } from \"../domain/send-text\";\n\nimport { View } from \"./view\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetric-crypto-key\";\n\nimport { SendFileView } from \"./send-file.view\";\nimport { SendTextView } from \"./send-text.view\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled = false;\n  hideEmail = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n}\n","import { SendFileData } from \"../data/send-file.data\";\nimport { SendFileView } from \"../view/send-file.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import { SendTextData } from \"../data/send-text.data\";\nimport { SendTextView } from \"../view/send-text.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SendData } from \"../data/send.data\";\nimport { SendView } from \"../view/send.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SendFile } from \"./send-file\";\nimport { SendText } from \"./send-text\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      [\"id\", \"accessId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    const cryptoService = Utils.getContainerService().getCryptoService();\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/send-file.api\";\nimport { SendTextApi } from \"../api/send-text.api\";\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProfileProviderResponse } from \"../response/profile-provider.response\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Account } from \"./account\";\nimport { GlobalState } from \"./global-state\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n\n  // TODO, make Jsonify<State,TGlobalState,TAccount> work. It currently doesn't because Globals doesn't implement Jsonify.\n  static fromJSON<TGlobalState extends GlobalState, TAccount extends Account>(\n    obj: any\n  ): State<TGlobalState, TAccount> {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new State(null), obj, {\n      accounts: State.buildAccountMapFromJSON(obj?.accounts),\n    });\n  }\n\n  private static buildAccountMapFromJSON(\n    jsonAccounts: Jsonify<{ [userId: string]: Jsonify<Account> }>\n  ) {\n    if (!jsonAccounts) {\n      return {};\n    }\n    const accounts: { [userId: string]: Account } = {};\n    for (const userId in jsonAccounts) {\n      accounts[userId] = Account.fromJSON(jsonAccounts[userId]);\n    }\n    return accounts;\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport {\n  MemoryStorageServiceInterface,\n  AbstractStorageService,\n} from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encrypted-organization-key.data\";\nimport { EventData } from \"../models/data/event.data\";\nimport { FolderData } from \"../models/data/folder.data\";\nimport { LocalData } from \"../models/data/local.data\";\nimport { OrganizationData } from \"../models/data/organization.data\";\nimport { PolicyData } from \"../models/data/policy.data\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { SendData } from \"../models/data/send.data\";\nimport { ServerConfigData } from \"../models/data/server-config.data\";\nimport {\n  Account,\n  AccountData,\n  AccountSettings,\n  AccountSettingsSettings,\n} from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { GlobalState } from \"../models/domain/global-state\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storage-options\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { WindowState } from \"../models/domain/window-state\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { CollectionView } from \"../models/view/collection.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nconst keys = {\n  state: \"state\",\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nconst DDG_SHARED_KEY = \"DuckDuckGoSharedKey\";\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  accounts = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  private activeAccountSubject = new BehaviorSubject<string>(null);\n  activeAccount$ = this.activeAccountSubject.asObservable();\n\n  private activeAccountUnlockedSubject = new BehaviorSubject<boolean>(false);\n  activeAccountUnlocked$ = this.activeAccountUnlockedSubject.asObservable();\n\n  private hasBeenInited = false;\n  private isRecoveredSession = false;\n\n  private accountDiskCache = new Map<string, TAccount>();\n\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected memoryStorageService: AbstractStorageService & MemoryStorageServiceInterface,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>,\n    protected useAccountCache: boolean = true\n  ) {\n    // If the account gets changed, verify the new account is unlocked\n    this.activeAccountSubject\n      .pipe(\n        concatMap(async (userId) => {\n          if (userId == null && this.activeAccountUnlockedSubject.getValue() == false) {\n            return;\n          } else if (userId == null) {\n            this.activeAccountUnlockedSubject.next(false);\n          }\n\n          // FIXME: This should be refactored into AuthService or a similar service,\n          //  as checking for the existance of the crypto key is a low level\n          //  implementation detail.\n          this.activeAccountUnlockedSubject.next((await this.getCryptoMasterKey()) != null);\n        })\n      )\n      .subscribe();\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.state().then(async (state) => {\n      if (state == null) {\n        await this.setState(new State<TGlobalState, TAccount>(this.createGlobals()));\n      } else {\n        this.isRecoveredSession = true;\n      }\n    });\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    if (this.isRecoveredSession) {\n      return;\n    }\n\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts =\n        (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n      for (const i in state.authenticatedAccounts) {\n        if (i != null) {\n          await this.syncAccountFromDisk(state.authenticatedAccounts[i]);\n        }\n      }\n      const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n      if (storedActiveUser != null) {\n        state.activeUserId = storedActiveUser;\n      }\n      await this.pushAccounts();\n      this.activeAccountSubject.next(state.activeUserId);\n\n      return state;\n    });\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    await this.updateState(async (state) => {\n      if (state.accounts == null) {\n        state.accounts = {};\n      }\n      state.accounts[userId] = this.createAccount();\n      const diskAccount = await this.getAccountFromDisk({ userId: userId });\n      state.accounts[userId].profile = diskAccount.profile;\n      return state;\n    });\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts.push(account.profile.userId);\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n      state.accounts[account.profile.userId] = account;\n      return state;\n    });\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccountSubject.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    await this.updateState(async (state) => {\n      state.activeUserId = userId;\n      await this.storageService.save(keys.activeUserId, userId);\n      this.activeAccountSubject.next(state.activeUserId);\n      return state;\n    });\n\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === (await this.state())?.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? false\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? true\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    return (\n      (await this.getHasPremiumPersonally(options)) ||\n      (await this.getHasPremiumFromOrganization(options))\n    );\n  }\n\n  async getHasPremiumPersonally(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.profile?.hasPremiumPersonally;\n  }\n\n  async setHasPremiumPersonally(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumPersonally = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getHasPremiumFromOrganization(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    if (account.profile?.hasPremiumFromOrganization) {\n      return true;\n    }\n\n    // TODO: older server versions won't send the hasPremiumFromOrganization flag, so we're keeping the old logic\n    // for backwards compatibility. It can be removed after everyone has upgraded.\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async setHasPremiumFromOrganization(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumFromOrganization = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<string[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: string[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.collapsedGroupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n\n    if (options.userId == this.activeAccountSubject.getValue()) {\n      const nextValue = value != null;\n\n      // Avoid emitting if we are already unlocked\n      if (this.activeAccountUnlockedSubject.getValue() != nextValue) {\n        this.activeAccountUnlockedSubject.next(nextValue);\n      }\n    }\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.autoKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.autoKey, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.masterKey, value, options);\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.biometricKey, value, options);\n  }\n\n  @withPrototypeForArrayMembers(CipherView, CipherView.fromJSON)\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(CollectionView)\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return this.recordToMap(account?.keys?.organizationKeys?.decrypted);\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.organizationKeys.decrypted = this.mapToRecord(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(Policy)\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.privateKey.decrypted;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.privateKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return this.recordToMap(account?.keys?.providerKeys?.decrypted);\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.providerKeys.decrypted = this.mapToRecord(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(SendView)\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDuckDuckGoSharedKey(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(DDG_SHARED_KEY, options);\n  }\n\n  async setDuckDuckGoSharedKey(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    value == null\n      ? await this.secureStorageService.remove(DDG_SHARED_KEY, options)\n      : await this.secureStorageService.save(DDG_SHARED_KEY, value, options);\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.email = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableDuckDuckGoBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableDuckDuckGoBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableDuckDuckGoBrowserIntegration(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableDuckDuckGoBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CipherData)\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CollectionData)\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(FolderData)\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<{ [orgId: string]: EncryptedOrganizationKeyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(PolicyData)\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(SendData)\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if ((await this.state())?.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(EventData)\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<{ [cipherId: string]: LocalData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n\n  async setLocalData(\n    value: { [cipherId: string]: LocalData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUsernameGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.usernameGenerationOptions;\n  }\n\n  async setUsernameGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.usernameGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getGeneratorOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.generatorOptions;\n  }\n\n  async setGeneratorOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.generatorOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(ProviderData)\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    const keys = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys;\n    return keys?.publicKey;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.publicKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getSettings(options?: StorageOptions): Promise<AccountSettingsSettings> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: AccountSettingsSettings, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async setServerConfig(value: ServerConfigData, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.serverConfig = value;\n    return await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getServerConfig(options: StorageOptions): Promise<ServerConfigData> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.serverConfig;\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = await this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected async getGlobalsFromMemory(): Promise<TGlobalState> {\n    return (await this.state()).globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected async saveGlobalsToMemory(globals: TGlobalState): Promise<void> {\n    await this.updateState(async (state) => {\n      state.globals = globals;\n      return state;\n    });\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = await this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async getAccountFromMemory(options: StorageOptions): Promise<TAccount> {\n    return await this.state().then(async (state) => {\n      if (state.accounts == null) {\n        return null;\n      }\n      return state.accounts[await this.getUserIdFromMemory(options)];\n    });\n  }\n\n  protected async getUserIdFromMemory(options: StorageOptions): Promise<string> {\n    return await this.state().then((state) => {\n      return options?.userId != null\n        ? state.accounts[options.userId]?.profile?.userId\n        : state.activeUserId;\n    });\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && (await this.state())?.activeUserId == null) {\n      return null;\n    }\n\n    if (this.useAccountCache) {\n      const cachedAccount = this.accountDiskCache.get(options.userId);\n      if (cachedAccount != null) {\n        return cachedAccount;\n      }\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.set(options.userId, account);\n    }\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n\n    if (this.useAccountCache) {\n      this.accountDiskCache.delete(options.userId);\n    }\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      await this.updateState((state) => {\n        return new Promise((resolve) => {\n          state.accounts[account.profile.userId] = account;\n          resolve(state);\n        });\n      });\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<AccountSettings>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    await this.state().then((state) => {\n      if (state.accounts == null || Object.keys(state.accounts).length < 1) {\n        this.accounts.next(null);\n        return;\n      }\n\n      this.accounts.next(state.accounts);\n    });\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected async defaultInMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Memory,\n      userId: (await this.state()).activeUserId,\n    };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: (await this.state())?.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected async removeAccountFromMemory(userId: string = null): Promise<void> {\n    await this.updateState(async (state) => {\n      userId = userId ?? state.activeUserId;\n      delete state.accounts[userId];\n\n      if (this.useAccountCache) {\n        this.accountDiskCache.delete(userId);\n      }\n\n      return state;\n    });\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in (await this.state())?.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        await this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected async clearDecryptedDataForActiveUser(): Promise<void> {\n    await this.updateState(async (state) => {\n      const userId = state?.activeUserId;\n      if (userId != null && state?.accounts[userId]?.data != null) {\n        state.accounts[userId].data = new AccountData();\n      }\n\n      return state;\n    });\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string): Promise<void> {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts = state.authenticatedAccounts.filter((id) => id !== userId);\n\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n\n      return state;\n    });\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    const accounts = (await this.state())?.accounts;\n    if (accounts == null || Object.keys(accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? await this.defaultInMemoryOptions()\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n\n  private async saveSecureStorageKey(key: string, value: string, options?: StorageOptions) {\n    return value == null\n      ? await this.secureStorageService.remove(`${options.userId}${key}`, options)\n      : await this.secureStorageService.save(`${options.userId}${key}`, value, options);\n  }\n\n  protected async state(): Promise<State<TGlobalState, TAccount>> {\n    const state = await this.memoryStorageService.get<State<TGlobalState, TAccount>>(keys.state, {\n      deserializer: (s) => State.fromJSON(s),\n    });\n    return state;\n  }\n\n  private async setState(state: State<TGlobalState, TAccount>): Promise<void> {\n    await this.memoryStorageService.save(keys.state, state);\n  }\n\n  protected async updateState(\n    stateUpdater: (state: State<TGlobalState, TAccount>) => Promise<State<TGlobalState, TAccount>>\n  ) {\n    await this.state().then(async (state) => {\n      const updatedState = await stateUpdater(state);\n      if (updatedState == null) {\n        throw new Error(\"Attempted to update state to null value\");\n      }\n\n      await this.setState(updatedState);\n    });\n  }\n\n  private mapToRecord<V>(map: Map<string, V>): Record<string, V> {\n    return map == null ? null : Object.fromEntries(map);\n  }\n\n  private recordToMap<V>(record: Record<string, V>): Map<string, V> {\n    return record == null ? null : new Map(Object.entries(record));\n  }\n}\n\nexport function withPrototype<T>(\n  constructor: new (...args: any[]) => T,\n  converter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<T> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          return result == null ||\n            result.constructor.name === constructor.prototype.constructor.name\n            ? converter(result as T)\n            : converter(\n                Object.create(constructor.prototype, Object.getOwnPropertyDescriptors(result)) as T\n              );\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForArrayMembers<T>(\n  memberConstructor: new (...args: any[]) => T,\n  memberConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T[]> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<any[]> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else if (!(result instanceof Array)) {\n            throw new Error(\n              `Attempted to retrieve non array type from state as an array for method ${String(\n                propertyKey\n              )}`\n            );\n          } else {\n            return result.map((r) => {\n              return r == null ||\n                r.constructor.name === memberConstructor.prototype.constructor.name\n                ? memberConverter(r)\n                : memberConverter(\n                    Object.create(memberConstructor.prototype, Object.getOwnPropertyDescriptors(r))\n                  );\n            });\n          }\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForObjectValues<T>(\n  valuesConstructor: new (...args: any[]) => T,\n  valuesConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<{ [key: string]: T }> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<{ [key: string]: T }> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else {\n            for (const [key, val] of Object.entries(result)) {\n              result[key] =\n                val == null || val.constructor.name === valuesConstructor.prototype.constructor.name\n                  ? valuesConverter(val)\n                  : valuesConverter(\n                      Object.create(\n                        valuesConstructor.prototype,\n                        Object.getOwnPropertyDescriptors(val)\n                      )\n                    );\n            }\n\n            return result as { [key: string]: T };\n          }\n        });\n      },\n    };\n  };\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\nimport { Utils } from \"../misc/utils\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async setTwoFactorToken(tokenResponse: IdentityTokenResponse): Promise<any> {\n    return await this.stateService.setTwoFactorToken(tokenResponse.twoFactorToken);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { EventData } from \"../models/data/event.data\";\nimport { FolderData } from \"../models/data/folder.data\";\nimport { OrganizationData } from \"../models/data/organization.data\";\nimport { PolicyData } from \"../models/data/policy.data\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { SendData } from \"../models/data/send.data\";\nimport {\n  Account,\n  AccountSettings,\n  AccountSettingsSettings,\n  EncryptionPair,\n} from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { GlobalState } from \"../models/domain/global-state\";\nimport { StorageOptions } from \"../models/domain/storage-options\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n        case StateVersion.Four: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom4To5(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Five);\n          break;\n        }\n        case StateVersion.Five: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom5To6(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Six);\n          break;\n        }\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: Object.assign(new EncryptionPair<string, EncString>(), {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      }),\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings:\n        userId == null\n          ? null\n          : await this.get<AccountSettingsSettings>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateAccountFrom4To5(account: TAccount): Promise<TAccount> {\n    const encryptedOrgKeys = account.keys?.organizationKeys?.encrypted;\n    if (encryptedOrgKeys != null) {\n      for (const [orgId, encKey] of Object.entries(encryptedOrgKeys)) {\n        encryptedOrgKeys[orgId] = {\n          type: \"organization\",\n          key: encKey as unknown as string, // Account v4 does not reflect the current account model so we have to cast\n        };\n      }\n    }\n\n    return account;\n  }\n\n  protected async migrateAccountFrom5To6(account: TAccount): Promise<TAccount> {\n    delete (account as any).keys?.legacyEtmKey;\n    return account;\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n\n  protected async setCurrentStateVersion(newVersion: StateVersion): Promise<void> {\n    const globals = await this.getGlobals();\n    globals.stateVersion = newVersion;\n    await this.set(keys.global, globals);\n  }\n\n  protected async getAuthenticatedAccounts(): Promise<TAccount[]> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    return Promise.all(authenticatedUserIds.map((id) => this.get<TAccount>(id)));\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CollectionService } from \"../../abstractions/collection.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { FolderApiServiceAbstraction } from \"../../abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { InternalPolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { ProviderService } from \"../../abstractions/provider.service\";\nimport { SendService } from \"../../abstractions/send.service\";\nimport { SettingsService } from \"../../abstractions/settings.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../../abstractions/sync/sync.service.abstraction\";\nimport { SyncNotifierService } from \"../../abstractions/sync/syncNotifier.service.abstraction\";\nimport { sequentialize } from \"../../misc/sequentialize\";\nimport { CipherData } from \"../../models/data/cipher.data\";\nimport { CollectionData } from \"../../models/data/collection.data\";\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { ProviderData } from \"../../models/data/provider.data\";\nimport { SendData } from \"../../models/data/send.data\";\nimport { CipherResponse } from \"../../models/response/cipher.response\";\nimport { CollectionDetailsResponse } from \"../../models/response/collection.response\";\nimport { DomainsResponse } from \"../../models/response/domains.response\";\nimport { FolderResponse } from \"../../models/response/folder.response\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../../models/response/notification.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\nimport { ProfileResponse } from \"../../models/response/profile.response\";\nimport { SendResponse } from \"../../models/response/send.response\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress = false;\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: InternalFolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: InternalPolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private providerService: ProviderService,\n    private folderApiService: FolderApiServiceAbstraction,\n    private syncNotifierService: SyncNotifierService,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  @sequentialize(() => \"fullSync\")\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    this.syncNotifierService.next({ status: \"Started\" });\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      this.syncNotifierService.next({ status: \"Completed\", successfully: false });\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      this.syncNotifierService.next({ status: \"Completed\", successfully: false });\n      return this.syncCompleted(false);\n    }\n\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(response.ciphers);\n      await this.syncSends(response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      this.syncNotifierService.next({ status: \"Completed\", successfully: true, data: response });\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        this.syncNotifierService.next({ status: \"Completed\", successfully: false });\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.folderApiService.get(notification.id);\n          if (remoteFolder != null) {\n            await this.folderService.upsert(new FolderData(remoteFolder));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getFullCipherDetails(notification.id);\n          if (remoteCipher != null) {\n            await this.cipherService.upsert(new CipherData(remoteCipher));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            await this.sendService.upsert(new SendData(remoteSend));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setHasPremiumPersonally(response.premiumPersonally);\n    await this.stateService.setHasPremiumFromOrganization(response.premiumFromOrganization);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport {\n  TwoFactorProviderDetails,\n  TwoFactorService as TwoFactorServiceAbstraction,\n} from \"../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\n\nexport const TwoFactorProviders: Partial<Record<TwoFactorProviderType, TwoFactorProviderDetails>> =\n  {\n    [TwoFactorProviderType.Authenticator]: {\n      type: TwoFactorProviderType.Authenticator,\n      name: null as string,\n      description: null as string,\n      priority: 1,\n      sort: 1,\n      premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n      type: TwoFactorProviderType.Yubikey,\n      name: null as string,\n      description: null as string,\n      priority: 3,\n      sort: 2,\n      premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n      type: TwoFactorProviderType.Duo,\n      name: \"Duo\",\n      description: null as string,\n      priority: 2,\n      sort: 3,\n      premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n      type: TwoFactorProviderType.OrganizationDuo,\n      name: \"Duo (Organization)\",\n      description: null as string,\n      priority: 10,\n      sort: 4,\n      premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n      type: TwoFactorProviderType.Email,\n      name: null as string,\n      description: null as string,\n      priority: 0,\n      sort: 6,\n      premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n      type: TwoFactorProviderType.WebAuthn,\n      name: null as string,\n      description: null as string,\n      priority: 4,\n      sort: 5,\n      premium: true,\n    },\n  };\n\nexport class TwoFactorService implements TwoFactorServiceAbstraction {\n  private twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  private selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  getSupportedProviders(win: Window): TwoFactorProviderDetails[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  setSelectedProvider(type: TwoFactorProviderType) {\n    this.selectedTwoFactorProviderType = type;\n  }\n\n  clearSelectedProvider() {\n    this.selectedTwoFactorProviderType = null;\n  }\n\n  setProviders(response: IdentityTwoFactorResponse) {\n    this.twoFactorProvidersData = response.twoFactorProviders2;\n  }\n\n  clearProviders() {\n    this.twoFactorProvidersData = null;\n  }\n\n  getProviders() {\n    return this.twoFactorProvidersData;\n  }\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n  authRequestAccessCode: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class AnonAddyForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    if (options.anonaddy?.domain == null || options.anonaddy.domain === \"\") {\n      throw \"Invalid AnonAddy domain.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://app.anonaddy.com/api/v1/aliases\";\n    requestInit.body = JSON.stringify({\n      domain: options.anonaddy.domain,\n      description:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.data?.email;\n    }\n    if (response.status === 401) {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    throw \"Unknown AnonAddy error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class DuckDuckGoForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://quack.duckduckgo.com/api/email/addresses\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      if (json.address) {\n        return `${json.address}@duck.com`;\n      }\n    } else if (response.status === 401) {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    throw \"Unknown DuckDuckGo error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class FastmailForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Fastmail API token.\";\n    }\n\n    const accountId = await this.getAccountId(apiService, options);\n    if (accountId == null || accountId === \"\") {\n      throw \"Unable to obtain Fastmail masked email account ID.\";\n    }\n\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://api.fastmail.com/jmap/api/\";\n    requestInit.body = JSON.stringify({\n      using: [\"https://www.fastmail.com/dev/maskedemail\", \"urn:ietf:params:jmap:core\"],\n      methodCalls: [\n        [\n          \"MaskedEmail/set\",\n          {\n            accountId: accountId,\n            create: {\n              \"new-masked-email\": {\n                state: \"enabled\",\n                description: \"\",\n                url: options.website,\n                emailPrefix: options.fastmail.prefix,\n              },\n            },\n          },\n          \"0\",\n        ],\n      ],\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (\n        json.methodResponses != null &&\n        json.methodResponses.length > 0 &&\n        json.methodResponses[0].length > 0\n      ) {\n        if (json.methodResponses[0][0] === \"MaskedEmail/set\") {\n          if (json.methodResponses[0][1]?.created?.[\"new-masked-email\"] != null) {\n            return json.methodResponses[0][1]?.created?.[\"new-masked-email\"]?.email;\n          }\n          if (json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"] != null) {\n            throw (\n              \"Fastmail error: \" +\n              json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"]?.description\n            );\n          }\n        } else if (json.methodResponses[0][0] === \"error\") {\n          throw \"Fastmail error: \" + json.methodResponses[0][1]?.description;\n        }\n      }\n    }\n    if (response.status === 401 || response.status === 403) {\n      throw \"Invalid Fastmail API token.\";\n    }\n    throw \"Unknown Fastmail error occurred.\";\n  }\n\n  private async getAccountId(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      method: \"GET\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n      }),\n    };\n    const url = \"https://api.fastmail.com/.well-known/jmap\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (json.primaryAccounts != null) {\n        return json.primaryAccounts[\"https://www.fastmail.com/dev/maskedemail\"];\n      }\n    }\n    return null;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class FirefoxRelayForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Token \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://relay.firefox.com/api/v1/relayaddresses/\";\n    requestInit.body = JSON.stringify({\n      enabled: true,\n      generated_for: options.website,\n      description:\n        (options.website != null ? options.website + \" - \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.full_address;\n    }\n    if (response.status === 401) {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    throw \"Unknown Firefox Relay error occurred.\";\n  }\n}\n","export class ForwarderOptions {\n  apiKey: string;\n  website: string;\n  fastmail = new FastmailForwarderOptions();\n  anonaddy = new AnonAddyForwarderOptions();\n}\n\nexport class FastmailForwarderOptions {\n  prefix: string;\n}\n\nexport class AnonAddyForwarderOptions {\n  domain: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarderOptions\";\n\nexport class SimpleLoginForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authentication: options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    let url = \"https://app.simplelogin.io/api/alias/random/new\";\n    if (options.website != null) {\n      url += \"?hostname=\" + options.website;\n    }\n    requestInit.body = JSON.stringify({\n      note:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json.alias;\n    }\n    if (response.status === 401) {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    try {\n      const json = await response.json();\n      if (json?.error != null) {\n        throw \"SimpleLogin error:\" + json.error;\n      }\n    } catch {\n      // Do nothing...\n    }\n    throw \"Unknown SimpleLogin error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { UsernameGenerationService as BaseUsernameGenerationService } from \"../abstractions/usernameGeneration.service\";\nimport { AnonAddyForwarder } from \"../emailForwarders/anonAddyForwarder\";\nimport { DuckDuckGoForwarder } from \"../emailForwarders/duckDuckGoForwarder\";\nimport { FastmailForwarder } from \"../emailForwarders/fastmailForwarder\";\nimport { FirefoxRelayForwarder } from \"../emailForwarders/firefoxRelayForwarder\";\nimport { Forwarder } from \"../emailForwarders/forwarder\";\nimport { ForwarderOptions } from \"../emailForwarders/forwarderOptions\";\nimport { SimpleLoginForwarder } from \"../emailForwarders/simpleLoginForwarder\";\nimport { EFFLongWordList } from \"../misc/wordlist\";\n\nconst DefaultOptions = {\n  type: \"word\",\n  wordCapitalize: true,\n  wordIncludeNumber: true,\n  subaddressType: \"random\",\n  catchallType: \"random\",\n  forwardedService: \"simplelogin\",\n  forwardedAnonAddyDomain: \"anonaddy.me\",\n};\n\nexport class UsernameGenerationService implements BaseUsernameGenerationService {\n  constructor(\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  generateUsername(options: any): Promise<string> {\n    if (options.type === \"catchall\") {\n      return this.generateCatchall(options);\n    } else if (options.type === \"subaddress\") {\n      return this.generateSubaddress(options);\n    } else if (options.type === \"forwarded\") {\n      return this.generateForwarded(options);\n    } else {\n      return this.generateWord(options);\n    }\n  }\n\n  async generateWord(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.wordCapitalize == null) {\n      o.wordCapitalize = true;\n    }\n    if (o.wordIncludeNumber == null) {\n      o.wordIncludeNumber = true;\n    }\n\n    const wordIndex = await this.cryptoService.randomNumber(0, EFFLongWordList.length - 1);\n    let word = EFFLongWordList[wordIndex];\n    if (o.wordCapitalize) {\n      word = word.charAt(0).toUpperCase() + word.slice(1);\n    }\n    if (o.wordIncludeNumber) {\n      const num = await this.cryptoService.randomNumber(1, 9999);\n      word = word + this.zeroPad(num.toString(), 4);\n    }\n    return word;\n  }\n\n  async generateSubaddress(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    const subaddressEmail = o.subaddressEmail;\n    if (subaddressEmail == null || subaddressEmail.length < 3) {\n      return o.subaddressEmail;\n    }\n    const atIndex = subaddressEmail.indexOf(\"@\");\n    if (atIndex < 1 || atIndex >= subaddressEmail.length - 1) {\n      return subaddressEmail;\n    }\n    if (o.subaddressType == null) {\n      o.subaddressType = \"random\";\n    }\n\n    const emailBeginning = subaddressEmail.substr(0, atIndex);\n    const emailEnding = subaddressEmail.substr(atIndex + 1, subaddressEmail.length);\n\n    let subaddressString = \"\";\n    if (o.subaddressType === \"random\") {\n      subaddressString = await this.randomString(8);\n    } else if (o.subaddressType === \"website-name\") {\n      subaddressString = o.website;\n    }\n    return emailBeginning + \"+\" + subaddressString + \"@\" + emailEnding;\n  }\n\n  async generateCatchall(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.catchallDomain == null || o.catchallDomain === \"\") {\n      return null;\n    }\n    if (o.catchallType == null) {\n      o.catchallType = \"random\";\n    }\n\n    let startString = \"\";\n    if (o.catchallType === \"random\") {\n      startString = await this.randomString(8);\n    } else if (o.catchallType === \"website-name\") {\n      startString = o.website;\n    }\n    return startString + \"@\" + o.catchallDomain;\n  }\n\n  async generateForwarded(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.forwardedService == null) {\n      return null;\n    }\n\n    let forwarder: Forwarder = null;\n    const forwarderOptions = new ForwarderOptions();\n    forwarderOptions.website = o.website;\n    if (o.forwardedService === \"simplelogin\") {\n      forwarder = new SimpleLoginForwarder();\n      forwarderOptions.apiKey = o.forwardedSimpleLoginApiKey;\n    } else if (o.forwardedService === \"anonaddy\") {\n      forwarder = new AnonAddyForwarder();\n      forwarderOptions.apiKey = o.forwardedAnonAddyApiToken;\n      forwarderOptions.anonaddy.domain = o.forwardedAnonAddyDomain;\n    } else if (o.forwardedService === \"firefoxrelay\") {\n      forwarder = new FirefoxRelayForwarder();\n      forwarderOptions.apiKey = o.forwardedFirefoxApiToken;\n    } else if (o.forwardedService === \"fastmail\") {\n      forwarder = new FastmailForwarder();\n      forwarderOptions.apiKey = o.forwardedFastmailApiToken;\n    } else if (o.forwardedService === \"duckduckgo\") {\n      forwarder = new DuckDuckGoForwarder();\n      forwarderOptions.apiKey = o.forwardedDuckDuckGoToken;\n    }\n\n    if (forwarder == null) {\n      return null;\n    }\n\n    return forwarder.generate(this.apiService, forwarderOptions);\n  }\n\n  async getOptions(): Promise<any> {\n    let options = await this.stateService.getUsernameGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setUsernameGenerationOptions(options);\n    return options;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setUsernameGenerationOptions(options);\n  }\n\n  private async randomString(length: number) {\n    let str = \"\";\n    const charSet = \"abcdefghijklmnopqrstuvwxyz1234567890\";\n    for (let i = 0; i < length; i++) {\n      const randomCharIndex = await this.cryptoService.randomNumber(0, charSet.length - 1);\n      str += charSet.charAt(randomCharIndex);\n    }\n    return str;\n  }\n\n  // ref: https://stackoverflow.com/a/10073788\n  private zeroPad(number: string, width: number) {\n    return number.length >= width\n      ? number\n      : new Array(width - number.length + 1).join(\"0\") + number;\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      this.messagingService.send(\"authBlocked\", { url: routerState.url });\n      return false;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (routerState != null) {\n        this.messagingService.send(\"lockedUrl\", { url: routerState.url });\n      }\n      return this.router.createUrlTree([\"lock\"], { queryParams: { promptBiometric: true } });\n    }\n\n    if (\n      !routerState.url.includes(\"remove-password\") &&\n      (await this.keyConnectorService.getConvertAccountRequired())\n    ) {\n      return this.router.createUrlTree([\"/remove-password\"]);\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class LockGuard implements CanActivate {\n  protected homepage = \"vault\";\n  protected loginpage = \"login\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return true;\n    }\n\n    const redirectUrl =\n      authStatus === AuthenticationStatus.LoggedOut ? this.loginpage : this.homepage;\n\n    return this.router.createUrlTree([redirectUrl]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class UnauthGuard implements CanActivate {\n  protected homepage = \"vault\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return true;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"lock\"]);\n    }\n\n    return this.router.createUrlTree([this.homepage]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService as BaseBroadcasterService } from \"@bitwarden/common/services/broadcaster.service\";\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {}\n","import {\n  BroadcasterService as BroadcasterServiceAbstraction,\n  MessageBase,\n} from \"../abstractions/broadcaster.service\";\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n  subscribers: Map<string, (message: MessageBase) => void> = new Map<\n    string,\n    (message: MessageBase) => void\n  >();\n\n  send(message: MessageBase, id?: string) {\n    if (id != null) {\n      if (this.subscribers.has(id)) {\n        this.subscribers.get(id)(message);\n      }\n      return;\n    }\n\n    this.subscribers.forEach((value) => {\n      value(message);\n    });\n  }\n\n  subscribe(id: string, messageCallback: (message: MessageBase) => void) {\n    this.subscribers.set(id, messageCallback);\n  }\n\n  unsubscribe(id: string) {\n    if (this.subscribers.has(id)) {\n      this.subscribers.delete(id);\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationComponent for any other situation where you need to verify the user's identity.\n */\n@Directive()\nexport class PasswordRepromptComponent {\n  showPassword = false;\n  masterPassword = \"\";\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async submit() {\n    if (!(await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\nimport { ModalService } from \"./modal.service\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationService for any other situation where you need to verify the user's identity.\n */\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n  protected component = PasswordRepromptComponent;\n\n  constructor(\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  protectedFields() {\n    return [\"TOTP\", \"Password\", \"H_Field\", \"Card Number\", \"Security Code\"];\n  }\n\n  async showPasswordPrompt() {\n    if (!(await this.enabled())) {\n      return true;\n    }\n\n    const ref = this.modalService.open(this.component, { allowMultipleModals: true });\n\n    if (ref == null) {\n      return false;\n    }\n\n    const result = await ref.onClosedPromise();\n    return result === true;\n  }\n\n  async enabled() {\n    return !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport class ThemeBuilder implements Theme {\n  get effectiveTheme(): ThemeType {\n    return this.configuredTheme != ThemeType.System ? this.configuredTheme : this.systemTheme;\n  }\n\n  constructor(readonly configuredTheme: ThemeType, readonly systemTheme: ThemeType) {}\n\n  updateSystemTheme(systemTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(this.configuredTheme, systemTheme);\n  }\n\n  updateConfiguredTheme(configuredTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(configuredTheme, this.systemTheme);\n  }\n}\n","import { DOCUMENT } from \"@angular/common\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, filter, fromEvent, Observable } from \"rxjs\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { WINDOW } from \"../injection-tokens\";\n\nimport { Theme } from \"./theme\";\nimport { ThemeBuilder } from \"./themeBuilder\";\nimport { AbstractThemingService } from \"./theming.service.abstraction\";\n\n@Injectable()\nexport class ThemingService implements AbstractThemingService {\n  private _theme = new BehaviorSubject<ThemeBuilder | null>(null);\n  theme$: Observable<Theme> = this._theme.pipe(filter((x) => x !== null));\n\n  constructor(\n    private stateService: StateService,\n    @Inject(WINDOW) private window: Window,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.monitorThemeChanges();\n  }\n\n  async monitorThemeChanges(): Promise<void> {\n    this._theme.next(\n      new ThemeBuilder(await this.stateService.getTheme(), await this.getSystemTheme())\n    );\n    this.monitorConfiguredThemeChanges();\n    this.monitorSystemThemeChanges();\n  }\n\n  updateSystemTheme(systemTheme: ThemeType): void {\n    this._theme.next(this._theme.getValue().updateSystemTheme(systemTheme));\n  }\n\n  async updateConfiguredTheme(theme: ThemeType): Promise<void> {\n    await this.stateService.setTheme(theme);\n    this._theme.next(this._theme.getValue().updateConfiguredTheme(theme));\n  }\n\n  protected monitorConfiguredThemeChanges(): void {\n    this.theme$.subscribe((theme: Theme) => {\n      this.document.documentElement.classList.remove(\n        \"theme_\" + ThemeType.Light,\n        \"theme_\" + ThemeType.Dark,\n        \"theme_\" + ThemeType.Nord,\n        \"theme_\" + ThemeType.SolarizedDark\n      );\n      this.document.documentElement.classList.add(\"theme_\" + theme.effectiveTheme);\n    });\n  }\n\n  // We use a media match query for monitoring the system theme on web and browser, but this doesn't work for electron apps on Linux.\n  // In desktop we override these methods to track systemTheme with the electron renderer instead, which works for all OSs.\n  protected async getSystemTheme(): Promise<ThemeType> {\n    return this.window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      ? ThemeType.Dark\n      : ThemeType.Light;\n  }\n\n  protected monitorSystemThemeChanges(): void {\n    fromEvent<MediaQueryListEvent>(\n      this.window.matchMedia(\"(prefers-color-scheme: dark)\"),\n      \"change\"\n    ).subscribe((event) => {\n      this.updateSystemTheme(event.matches ? ThemeType.Dark : ThemeType.Light);\n    });\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport abstract class AbstractThemingService {\n  theme$: Observable<Theme>;\n  monitorThemeChanges: () => Promise<void>;\n  updateSystemTheme: (systemTheme: ThemeType) => void;\n  updateConfiguredTheme: (theme: ThemeType) => Promise<void>;\n}\n","import { Injector, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { AccountApiService as AccountApiServiceAbstraction } from \"@bitwarden/common/abstractions/account/account-api.service\";\nimport {\n  InternalAccountService,\n  AccountService as AccountServiceAbstraction,\n} from \"@bitwarden/common/abstractions/account/account.service\";\nimport { AnonymousHubService as AnonymousHubServiceAbstraction } from \"@bitwarden/common/abstractions/anonymousHub.service\";\nimport { ApiService as ApiServiceAbstraction } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService as BroadcasterServiceAbstraction } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService as CipherServiceAbstraction } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"@bitwarden/common/abstractions/collection.service\";\nimport { ConfigApiServiceAbstraction } from \"@bitwarden/common/abstractions/config/config-api.service.abstraction\";\nimport { ConfigServiceAbstraction } from \"@bitwarden/common/abstractions/config/config.service.abstraction\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"@bitwarden/common/abstractions/encrypt.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventService as EventServiceAbstraction } from \"@bitwarden/common/abstractions/event.service\";\nimport { ExportService as ExportServiceAbstraction } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport {\n  FolderService as FolderServiceAbstraction,\n  InternalFolderService,\n} from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FormValidationErrorsService as FormValidationErrorsServiceAbstraction } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService as OrganizationServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport {\n  PolicyService as PolicyServiceAbstraction,\n  InternalPolicyService,\n} from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { ProviderService as ProviderServiceAbstraction } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { SyncNotifierService as SyncNotifierServiceAbstraction } from \"@bitwarden/common/abstractions/sync/syncNotifier.service.abstraction\";\nimport { TokenService as TokenServiceAbstraction } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationApiServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { ValidationService as ValidationServiceAbstraction } from \"@bitwarden/common/abstractions/validation.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { flagEnabled } from \"@bitwarden/common/misc/flags\";\nimport { Account } from \"@bitwarden/common/models/domain/account\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/global-state\";\nimport { AccountApiServiceImplementation } from \"@bitwarden/common/services/account/account-api.service\";\nimport { AccountServiceImplementation } from \"@bitwarden/common/services/account/account.service\";\nimport { AnonymousHubService } from \"@bitwarden/common/services/anonymousHub.service\";\nimport { ApiService } from \"@bitwarden/common/services/api.service\";\nimport { AppIdService } from \"@bitwarden/common/services/appId.service\";\nimport { AuditService } from \"@bitwarden/common/services/audit.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { CipherService } from \"@bitwarden/common/services/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/services/collection.service\";\nimport { ConfigApiService } from \"@bitwarden/common/services/config/config-api.service\";\nimport { ConfigService } from \"@bitwarden/common/services/config/config.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { CryptoService } from \"@bitwarden/common/services/crypto.service\";\nimport { EncryptServiceImplementation } from \"@bitwarden/common/services/cryptography/encrypt.service.implementation\";\nimport { MultithreadEncryptServiceImplementation } from \"@bitwarden/common/services/cryptography/multithread-encrypt.service.implementation\";\nimport { EnvironmentService } from \"@bitwarden/common/services/environment.service\";\nimport { EventService } from \"@bitwarden/common/services/event.service\";\nimport { ExportService } from \"@bitwarden/common/services/export.service\";\nimport { FileUploadService } from \"@bitwarden/common/services/fileUpload.service\";\nimport { FolderApiService } from \"@bitwarden/common/services/folder/folder-api.service\";\nimport { FolderService } from \"@bitwarden/common/services/folder/folder.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/services/formValidationErrors.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/services/keyConnector.service\";\nimport { NotificationsService } from \"@bitwarden/common/services/notifications.service\";\nimport { OrganizationApiService } from \"@bitwarden/common/services/organization/organization-api.service\";\nimport { OrganizationService } from \"@bitwarden/common/services/organization/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/services/passwordGeneration.service\";\nimport { PolicyApiService } from \"@bitwarden/common/services/policy/policy-api.service\";\nimport { PolicyService } from \"@bitwarden/common/services/policy/policy.service\";\nimport { ProviderService } from \"@bitwarden/common/services/provider.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\nimport { SendService } from \"@bitwarden/common/services/send.service\";\nimport { SettingsService } from \"@bitwarden/common/services/settings.service\";\nimport { StateService } from \"@bitwarden/common/services/state.service\";\nimport { StateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\nimport { SyncService } from \"@bitwarden/common/services/sync/sync.service\";\nimport { SyncNotifierService } from \"@bitwarden/common/services/sync/syncNotifier.service\";\nimport { TokenService } from \"@bitwarden/common/services/token.service\";\nimport { TotpService } from \"@bitwarden/common/services/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/services/twoFactor.service\";\nimport { UserVerificationApiService } from \"@bitwarden/common/services/userVerification/userVerification-api.service\";\nimport { UserVerificationService } from \"@bitwarden/common/services/userVerification/userVerification.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/services/usernameGeneration.service\";\nimport { ValidationService } from \"@bitwarden/common/services/validation.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeoutSettings.service\";\nimport { WebCryptoFunctionService } from \"@bitwarden/common/services/webCryptoFunction.service\";\n\nimport { AuthGuard } from \"../guards/auth.guard\";\nimport { LockGuard } from \"../guards/lock.guard\";\nimport { UnauthGuard } from \"../guards/unauth.guard\";\n\nimport { BroadcasterService } from \"./broadcaster.service\";\nimport {\n  WINDOW,\n  MEMORY_STORAGE,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n  LOGOUT_CALLBACK,\n  LOCKED_CALLBACK,\n  LOCALES_DIRECTORY,\n  SYSTEM_LANGUAGE,\n  LOG_MAC_FAILURES,\n} from \"./injection-tokens\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./passwordReprompt.service\";\nimport { ThemingService } from \"./theming/theming.service\";\nimport { AbstractThemingService } from \"./theming/theming.service.abstraction\";\n\n@NgModule({\n  declarations: [],\n  providers: [\n    AuthGuard,\n    UnauthGuard,\n    LockGuard,\n    ModalService,\n    { provide: WINDOW, useValue: window },\n    {\n      provide: LOCALE_ID,\n      useFactory: (i18nService: I18nServiceAbstraction) => i18nService.translationLocale,\n      deps: [I18nServiceAbstraction],\n    },\n    {\n      provide: LOCALES_DIRECTORY,\n      useValue: \"./locales\",\n    },\n    {\n      provide: SYSTEM_LANGUAGE,\n      useFactory: (window: Window) => window.navigator.language,\n      deps: [WINDOW],\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: true,\n    },\n    {\n      provide: LOGOUT_CALLBACK,\n      useFactory:\n        (messagingService: MessagingServiceAbstraction) => (expired: boolean, userId?: string) =>\n          messagingService.send(\"logout\", { expired: expired, userId: userId }),\n      deps: [MessagingServiceAbstraction],\n    },\n    {\n      provide: LOCKED_CALLBACK,\n      useValue: null,\n    },\n    {\n      provide: LOG_MAC_FAILURES,\n      useValue: true,\n    },\n    {\n      provide: AppIdServiceAbstraction,\n      useClass: AppIdService,\n      deps: [AbstractStorageService],\n    },\n    {\n      provide: AuditServiceAbstraction,\n      useClass: AuditService,\n      deps: [CryptoFunctionServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useClass: AuthService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        AppIdServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        StateServiceAbstraction,\n        TwoFactorServiceAbstraction,\n        I18nServiceAbstraction,\n      ],\n    },\n    {\n      provide: CipherServiceAbstraction,\n      useFactory: (\n        cryptoService: CryptoServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        fileUploadService: FileUploadServiceAbstraction,\n        i18nService: I18nServiceAbstraction,\n        injector: Injector,\n        logService: LogService,\n        stateService: StateServiceAbstraction,\n        encryptService: EncryptService\n      ) =>\n        new CipherService(\n          cryptoService,\n          settingsService,\n          apiService,\n          fileUploadService,\n          i18nService,\n          () => injector.get(SearchServiceAbstraction),\n          logService,\n          stateService,\n          encryptService\n        ),\n      deps: [\n        CryptoServiceAbstraction,\n        SettingsServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        Injector, // TODO: Get rid of this circular dependency!\n        LogService,\n        StateServiceAbstraction,\n        EncryptService,\n      ],\n    },\n    {\n      provide: FolderServiceAbstraction,\n      useClass: FolderService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: InternalFolderService,\n      useExisting: FolderServiceAbstraction,\n    },\n    {\n      provide: FolderApiServiceAbstraction,\n      useClass: FolderApiService,\n      deps: [FolderServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AccountApiServiceAbstraction,\n      useClass: AccountApiServiceImplementation,\n      deps: [\n        ApiServiceAbstraction,\n        UserVerificationServiceAbstraction,\n        LogService,\n        InternalAccountService,\n      ],\n    },\n    {\n      provide: AccountServiceAbstraction,\n      useClass: AccountServiceImplementation,\n      deps: [MessagingServiceAbstraction, LogService],\n    },\n    {\n      provide: InternalAccountService,\n      useExisting: AccountServiceAbstraction,\n    },\n    { provide: LogService, useFactory: () => new ConsoleLogService(false) },\n    {\n      provide: CollectionServiceAbstraction,\n      useClass: CollectionService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: EnvironmentServiceAbstraction,\n      useClass: EnvironmentService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TotpServiceAbstraction,\n      useClass: TotpService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, StateServiceAbstraction],\n    },\n    { provide: TokenServiceAbstraction, useClass: TokenService, deps: [StateServiceAbstraction] },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        EncryptService,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: PasswordGenerationServiceAbstraction,\n      useClass: PasswordGenerationService,\n      deps: [CryptoServiceAbstraction, PolicyServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: UsernameGenerationServiceAbstraction,\n      useClass: UsernameGenerationService,\n      deps: [CryptoServiceAbstraction, StateServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: ApiServiceAbstraction,\n      useClass: ApiService,\n      deps: [\n        TokenServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        AppIdServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: FileUploadServiceAbstraction,\n      useClass: FileUploadService,\n      deps: [LogService, ApiServiceAbstraction],\n    },\n    {\n      provide: SyncServiceAbstraction,\n      useClass: SyncService,\n      deps: [\n        ApiServiceAbstraction,\n        SettingsServiceAbstraction,\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        CryptoServiceAbstraction,\n        CollectionServiceAbstraction,\n        MessagingServiceAbstraction,\n        PolicyServiceAbstraction,\n        SendServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        ProviderServiceAbstraction,\n        FolderApiServiceAbstraction,\n        SyncNotifierServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    { provide: BroadcasterServiceAbstraction, useClass: BroadcasterService },\n    {\n      provide: SettingsServiceAbstraction,\n      useClass: SettingsService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultTimeoutSettingsServiceAbstraction,\n      useClass: VaultTimeoutSettingsService,\n      deps: [\n        CryptoServiceAbstraction,\n        TokenServiceAbstraction,\n        PolicyServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: VaultTimeoutServiceAbstraction,\n      useClass: VaultTimeoutService,\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        CollectionServiceAbstraction,\n        CryptoServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        SearchServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n        VaultTimeoutSettingsServiceAbstraction,\n        LOCKED_CALLBACK,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useClass: StateService,\n      deps: [\n        AbstractStorageService,\n        SECURE_STORAGE,\n        MEMORY_STORAGE,\n        LogService,\n        StateMigrationServiceAbstraction,\n        STATE_FACTORY,\n        STATE_SERVICE_USE_CACHE,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    {\n      provide: ExportServiceAbstraction,\n      useClass: ExportService,\n      deps: [\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        ApiServiceAbstraction,\n        CryptoServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n      ],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useClass: SearchService,\n      deps: [CipherServiceAbstraction, LogService, I18nServiceAbstraction],\n    },\n    {\n      provide: NotificationsServiceAbstraction,\n      useClass: NotificationsService,\n      deps: [\n        SyncServiceAbstraction,\n        AppIdServiceAbstraction,\n        ApiServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        LOGOUT_CALLBACK,\n        LogService,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoFunctionServiceAbstraction,\n      useClass: WebCryptoFunctionService,\n      deps: [WINDOW],\n    },\n    {\n      provide: EncryptService,\n      useFactory: encryptServiceFactory,\n      deps: [CryptoFunctionServiceAbstraction, LogService, LOG_MAC_FAILURES],\n    },\n    {\n      provide: EventServiceAbstraction,\n      useClass: EventService,\n      deps: [\n        ApiServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: PolicyServiceAbstraction,\n      useClass: PolicyService,\n      deps: [StateServiceAbstraction, OrganizationServiceAbstraction],\n    },\n    {\n      provide: InternalPolicyService,\n      useExisting: PolicyServiceAbstraction,\n    },\n    {\n      provide: PolicyApiServiceAbstraction,\n      useClass: PolicyApiService,\n      deps: [\n        PolicyServiceAbstraction,\n        ApiServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: SendServiceAbstraction,\n      useClass: SendService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: KeyConnectorServiceAbstraction,\n      useClass: KeyConnectorService,\n      deps: [\n        StateServiceAbstraction,\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: UserVerificationServiceAbstraction,\n      useClass: UserVerificationService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        UserVerificationApiServiceAbstraction,\n      ],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationServiceAbstraction,\n      useClass: OrganizationService,\n      deps: [StateServiceAbstraction, SyncNotifierServiceAbstraction],\n    },\n    {\n      provide: ProviderServiceAbstraction,\n      useClass: ProviderService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TwoFactorServiceAbstraction,\n      useClass: TwoFactorService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: AbstractThemingService,\n      useClass: ThemingService,\n    },\n    {\n      provide: FormValidationErrorsServiceAbstraction,\n      useClass: FormValidationErrorsService,\n    },\n    {\n      provide: UserVerificationApiServiceAbstraction,\n      useClass: UserVerificationApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: OrganizationApiServiceAbstraction,\n      useClass: OrganizationApiService,\n      // This is a slightly odd dependency tree for a specialized api service\n      // it depends on SyncService so that new data can be retrieved through the sync\n      // rather than updating the OrganizationService directly. Instead OrganizationService\n      // subscribes to sync notifications and will update itself based on that.\n      deps: [ApiServiceAbstraction, SyncServiceAbstraction],\n    },\n    {\n      provide: SyncNotifierServiceAbstraction,\n      useClass: SyncNotifierService,\n    },\n    {\n      provide: ConfigServiceAbstraction,\n      useClass: ConfigService,\n      deps: [StateServiceAbstraction, ConfigApiServiceAbstraction],\n    },\n    {\n      provide: ConfigApiServiceAbstraction,\n      useClass: ConfigApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: AnonymousHubServiceAbstraction,\n      useClass: AnonymousHubService,\n      deps: [EnvironmentServiceAbstraction, AuthServiceAbstraction, LogService],\n    },\n    {\n      provide: ValidationServiceAbstraction,\n      useClass: ValidationService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n  ],\n})\nexport class JslibServicesModule {}\n\nfunction encryptServiceFactory(\n  cryptoFunctionservice: CryptoFunctionServiceAbstraction,\n  logService: LogService,\n  logMacFailures: boolean\n): EncryptService {\n  return flagEnabled(\"multithreadDecryption\")\n    ? new MultithreadEncryptServiceImplementation(cryptoFunctionservice, logService, logMacFailures)\n    : new EncryptServiceImplementation(cryptoFunctionservice, logService, logMacFailures);\n}\n","import { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { Utils } from \"../misc/utils\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: AbstractStorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/twoFactor.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthenticationType } from \"../enums/authenticationType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { ApiLogInStrategy } from \"../misc/logInStrategies/apiLogin.strategy\";\nimport { PasswordLogInStrategy } from \"../misc/logInStrategies/passwordLogin.strategy\";\nimport { PasswordlessLogInStrategy } from \"../misc/logInStrategies/passwordlessLogin.strategy\";\nimport { SsoLogInStrategy } from \"../misc/logInStrategies/ssoLogin.strategy\";\nimport { AuthResult } from \"../models/domain/auth-result\";\nimport {\n  ApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\nimport { PreloginRequest } from \"../models/request/prelogin.request\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { AuthRequestPushNotification } from \"../models/response/notification.response\";\n\nconst sessionTimeoutLength = 2 * 60 * 1000; // 2 minutes\n\nexport class AuthService implements AuthServiceAbstraction {\n  get email(): string {\n    if (\n      this.logInStrategy instanceof PasswordLogInStrategy ||\n      this.logInStrategy instanceof PasswordlessLogInStrategy\n    ) {\n      return this.logInStrategy.email;\n    }\n\n    return null;\n  }\n\n  get masterPasswordHash(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy\n      ? this.logInStrategy.masterPasswordHash\n      : null;\n  }\n\n  get accessCode(): string {\n    return this.logInStrategy instanceof PasswordlessLogInStrategy\n      ? this.logInStrategy.accessCode\n      : null;\n  }\n\n  get authRequestId(): string {\n    return this.logInStrategy instanceof PasswordlessLogInStrategy\n      ? this.logInStrategy.authRequestId\n      : null;\n  }\n\n  private logInStrategy:\n    | ApiLogInStrategy\n    | PasswordLogInStrategy\n    | SsoLogInStrategy\n    | PasswordlessLogInStrategy;\n  private sessionTimeout: any;\n\n  private pushNotificationSubject = new Subject<string>();\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService,\n    protected i18nService: I18nService\n  ) {}\n\n  async logIn(\n    credentials:\n      | ApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ): Promise<AuthResult> {\n    this.clearState();\n\n    let strategy:\n      | ApiLogInStrategy\n      | PasswordLogInStrategy\n      | SsoLogInStrategy\n      | PasswordlessLogInStrategy;\n\n    switch (credentials.type) {\n      case AuthenticationType.Password:\n        strategy = new PasswordLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this\n        );\n        break;\n      case AuthenticationType.Sso:\n        strategy = new SsoLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this.keyConnectorService\n        );\n        break;\n      case AuthenticationType.Api:\n        strategy = new ApiLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this.environmentService,\n          this.keyConnectorService\n        );\n        break;\n      case AuthenticationType.Passwordless:\n        strategy = new PasswordlessLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this\n        );\n        break;\n    }\n\n    const result = await strategy.logIn(credentials as any);\n\n    if (result?.requiresTwoFactor) {\n      this.saveState(strategy);\n    }\n    return result;\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    if (this.logInStrategy == null) {\n      throw new Error(this.i18nService.t(\"sessionTimeout\"));\n    }\n\n    try {\n      const result = await this.logInStrategy.logInTwoFactor(twoFactor, captchaResponse);\n\n      // Only clear state if 2FA token has been accepted, otherwise we need to be able to try again\n      if (!result.requiresTwoFactor && !result.requiresCaptcha) {\n        this.clearState();\n      }\n      return result;\n    } catch (e) {\n      // API exceptions are okay, but if there are any unhandled client-side errors then clear state to be safe\n      if (!(e instanceof ErrorResponse)) {\n        this.clearState();\n      }\n      throw e;\n    }\n  }\n\n  logOut(callback: () => void) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  authingWithApiKey(): boolean {\n    return this.logInStrategy instanceof ApiLogInStrategy;\n  }\n\n  authingWithSso(): boolean {\n    return this.logInStrategy instanceof SsoLogInStrategy;\n  }\n\n  authingWithPassword(): boolean {\n    return this.logInStrategy instanceof PasswordLogInStrategy;\n  }\n\n  authingWithPasswordless(): boolean {\n    return this.logInStrategy instanceof PasswordlessLogInStrategy;\n  }\n\n  async getAuthStatus(userId?: string): Promise<AuthenticationStatus> {\n    const isAuthenticated = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!isAuthenticated) {\n      return AuthenticationStatus.LoggedOut;\n    }\n\n    // Keys aren't stored for a device that is locked or logged out\n    // Make sure we're logged in before checking this, otherwise we could mix up those states\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    const hasKeyInMemory = await this.cryptoService.hasKeyInMemory(userId);\n    if (!hasKeyInMemory) {\n      return AuthenticationStatus.Locked;\n    }\n\n    return AuthenticationStatus.Unlocked;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  async authResponsePushNotifiction(notification: AuthRequestPushNotification): Promise<any> {\n    this.pushNotificationSubject.next(notification.id);\n  }\n\n  getPushNotifcationObs$(): Observable<any> {\n    return this.pushNotificationSubject.asObservable();\n  }\n\n  private saveState(\n    strategy:\n      | ApiLogInStrategy\n      | PasswordLogInStrategy\n      | SsoLogInStrategy\n      | PasswordlessLogInStrategy\n  ) {\n    this.logInStrategy = strategy;\n    this.startSessionTimeout();\n  }\n\n  private clearState() {\n    this.logInStrategy = null;\n    this.clearSessionTimeout();\n  }\n\n  private startSessionTimeout() {\n    this.clearSessionTimeout();\n    this.sessionTimeout = setTimeout(() => this.clearState(), sessionTimeoutLength);\n  }\n\n  private clearSessionTimeout() {\n    if (this.sessionTimeout != null) {\n      clearTimeout(this.sessionTimeout);\n    }\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { InternalFolderService as InternalFolderServiceAbstraction } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { CipherData } from \"../../models/data/cipher.data\";\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { FolderView } from \"../../models/view/folder.view\";\n\nexport class FolderService implements InternalFolderServiceAbstraction {\n  protected _folders: BehaviorSubject<Folder[]> = new BehaviorSubject([]);\n  protected _folderViews: BehaviorSubject<FolderView[]> = new BehaviorSubject([]);\n\n  folders$ = this._folders.asObservable();\n  folderViews$ = this._folderViews.asObservable();\n\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._folders.next([]);\n            this._folderViews.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getEncryptedFolders();\n\n          await this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async clearCache(): Promise<void> {\n    this._folderViews.next([]);\n  }\n\n  // TODO: This should be moved to EncryptService or something\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = this._folders.getValue();\n\n    return folders.find((folder) => folder.id === id);\n  }\n\n  /**\n   * @deprecated Only use in CLI!\n   */\n  async getAllDecryptedFromState(): Promise<FolderView[]> {\n    const data = await this.stateService.getEncryptedFolders();\n    const folders = Object.values(data || {}).map((f) => new Folder(f));\n\n    return this.decryptFolders(folders);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<void> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<void> {\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._folders.next([]);\n      this._folderViews.next([]);\n    }\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  private async updateObservables(foldersMap: { [id: string]: FolderData }) {\n    const folders = Object.values(foldersMap || {}).map((f) => new Folder(f));\n\n    this._folders.next(folders);\n\n    if (await this.cryptoService.hasKey()) {\n      this._folderViews.next(await this.decryptFolders(folders));\n    }\n  }\n\n  private async decryptFolders(folders: Folder[]) {\n    const decryptFolderPromises = folders.map((f) => f.decrypt());\n    const decryptedFolders = await Promise.all(decryptFolderPromises);\n\n    decryptedFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decryptedFolders.push(noneFolder);\n\n    return decryptedFolders;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { FolderApiServiceAbstraction } from \"../../abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { FolderRequest } from \"../../models/request/folder.request\";\nimport { FolderResponse } from \"../../models/response/folder.response\";\n\nexport class FolderApiService implements FolderApiServiceAbstraction {\n  constructor(private folderService: InternalFolderService, private apiService: ApiService) {}\n\n  async save(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.putFolder(folder.id, request);\n    }\n\n    const data = new FolderData(response);\n    await this.folderService.upsert(data);\n  }\n\n  async delete(id: string): Promise<any> {\n    await this.deleteFolder(id);\n    await this.folderService.delete(id);\n  }\n\n  async get(id: string): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  private async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  private deleteFolder(id: string): Promise<any> {\n    return this.apiService.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n}\n","import { AccountApiService } from \"../../abstractions/account/account-api.service\";\nimport { InternalAccountService } from \"../../abstractions/account/account.service\";\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { UserVerificationService } from \"../../abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"../../types/verification\";\n\nexport class AccountApiServiceImplementation implements AccountApiService {\n  constructor(\n    private apiService: ApiService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService,\n    private accountService: InternalAccountService\n  ) {}\n\n  async deleteAccount(verification: Verification): Promise<void> {\n    try {\n      const verificationRequest = await this.userVerificationService.buildRequest(verification);\n      await this.apiService.send(\"DELETE\", \"/accounts\", verificationRequest, true, false);\n      this.accountService.delete();\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  }\n}\n","import { InternalAccountService } from \"../../abstractions/account/account.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\n\nexport class AccountServiceImplementation implements InternalAccountService {\n  constructor(private messagingService: MessagingService, private logService: LogService) {}\n\n  async delete(): Promise<void> {\n    try {\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  }\n}\n","import { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/tree-node\";\nimport { CollectionView } from \"../models/view/collection.view\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    // eslint-disable-next-line\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      // eslint-disable-next-line\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","import { concatMap, Observable, Subject } from \"rxjs\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject;\n\n  protected baseUrl: string;\n  protected webVaultUrl: string;\n  protected apiUrl: string;\n  protected identityUrl: string;\n  protected iconsUrl: string;\n  protected notificationsUrl: string;\n  protected eventsUrl: string;\n  private keyConnectorUrl: string;\n  private scimUrl: string = null;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount$\n      .pipe(\n        concatMap(async () => {\n          await this.setUrlsFromStorage();\n        })\n      )\n      .subscribe();\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  getScimUrl() {\n    if (this.scimUrl != null) {\n      return this.scimUrl + \"/v2\";\n    }\n\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://scim.bitwarden.com/v2\"\n      : this.getWebVaultUrl() + \"/scim/v2\";\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    // scimUrl is not saved to storage\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    // scimUrl cannot be cleared\n    urls.scim = this.formatUrl(urls.scim) ?? this.scimUrl;\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n      // scimUrl is not saved to storage\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    this.scimUrl = urls.scim;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n      scim: this.scimUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n\n  isCloud(): boolean {\n    return [\"https://api.bitwarden.com\", \"https://vault.bitwarden.com/api\"].includes(\n      this.getApiUrl()\n    );\n  }\n}\n","import { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { Utils } from \"../misc/utils\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/set-key-connector-key.request\";\nimport { AttachmentRequest } from \"../models/request/attachment.request\";\nimport { BitPayInvoiceRequest } from \"../models/request/bit-pay-invoice.request\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipher-bulk-delete.request\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipher-bulk-move.request\";\nimport { CipherBulkShareRequest } from \"../models/request/cipher-bulk-share.request\";\nimport { CipherCollectionsRequest } from \"../models/request/cipher-collections.request\";\nimport { CipherCreateRequest } from \"../models/request/cipher-create.request\";\nimport { CipherPartialRequest } from \"../models/request/cipher-partial.request\";\nimport { CipherShareRequest } from \"../models/request/cipher-share.request\";\nimport { CipherRequest } from \"../models/request/cipher.request\";\nimport { CollectionRequest } from \"../models/request/collection.request\";\nimport { DeleteRecoverRequest } from \"../models/request/delete-recover.request\";\nimport { DeviceVerificationRequest } from \"../models/request/device-verification.request\";\nimport { DeviceRequest } from \"../models/request/device.request\";\nimport { EmailTokenRequest } from \"../models/request/email-token.request\";\nimport { EmailRequest } from \"../models/request/email.request\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergency-access-accept.request\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergency-access-confirm.request\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergency-access-invite.request\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergency-access-password.request\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergency-access-update.request\";\nimport { EventRequest } from \"../models/request/event.request\";\nimport { GroupRequest } from \"../models/request/group.request\";\nimport { IapCheckRequest } from \"../models/request/iap-check.request\";\nimport { ApiTokenRequest } from \"../models/request/identity-token/api-token.request\";\nimport { PasswordTokenRequest } from \"../models/request/identity-token/password-token.request\";\nimport { SsoTokenRequest } from \"../models/request/identity-token/sso-token.request\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\nimport { ImportCiphersRequest } from \"../models/request/import-ciphers.request\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/import-organization-ciphers.request\";\nimport { KdfRequest } from \"../models/request/kdf.request\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/key-connector-user-key.request\";\nimport { KeysRequest } from \"../models/request/keys.request\";\nimport { OrganizationConnectionRequest } from \"../models/request/organization-connection.request\";\nimport { OrganizationImportRequest } from \"../models/request/organization-import.request\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organization-user-accept.request\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organization-user-bulk-confirm.request\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organization-user-bulk.request\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organization-user-confirm.request\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organization-user-invite.request\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organization-user-reset-password-enrollment.request\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organization-user-reset-password.request\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organization-user-update-groups.request\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organization-user-update.request\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organization-sponsorship-create.request\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organization-sponsorship-redeem.request\";\nimport { PasswordHintRequest } from \"../models/request/password-hint.request\";\nimport { PasswordRequest } from \"../models/request/password.request\";\nimport { PasswordlessCreateAuthRequest } from \"../models/request/passwordless-create-auth.request\";\nimport { PaymentRequest } from \"../models/request/payment.request\";\nimport { PreloginRequest } from \"../models/request/prelogin.request\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/provider-add-organization.request\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/provider-organization-create.request\";\nimport { ProviderSetupRequest } from \"../models/request/provider/provider-setup.request\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/provider-update.request\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/provider-user-accept.request\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/provider-user-bulk-confirm.request\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/provider-user-bulk.request\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/provider-user-confirm.request\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/provider-user-invite.request\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/provider-user-update.request\";\nimport { RegisterRequest } from \"../models/request/register.request\";\nimport { SecretVerificationRequest } from \"../models/request/secret-verification.request\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selection-read-only.request\";\nimport { SendAccessRequest } from \"../models/request/send-access.request\";\nimport { SendRequest } from \"../models/request/send.request\";\nimport { SetPasswordRequest } from \"../models/request/set-password.request\";\nimport { StorageRequest } from \"../models/request/storage.request\";\nimport { TaxInfoUpdateRequest } from \"../models/request/tax-info-update.request\";\nimport { TwoFactorEmailRequest } from \"../models/request/two-factor-email.request\";\nimport { TwoFactorProviderRequest } from \"../models/request/two-factor-provider.request\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/two-factor-recovery.request\";\nimport { UpdateDomainsRequest } from \"../models/request/update-domains.request\";\nimport { UpdateKeyRequest } from \"../models/request/update-key.request\";\nimport { UpdateProfileRequest } from \"../models/request/update-profile.request\";\nimport { UpdateTempPasswordRequest } from \"../models/request/update-temp-password.request\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/update-two-factor-authenticator.request\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/update-two-factor-duo.request\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/update-two-factor-email.request\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/update-two-factor-web-authn-delete.request\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/update-two-factor-web-authn.request\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/update-two-factor-yubio-otp.request\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verify-delete-recover.request\";\nimport { VerifyEmailRequest } from \"../models/request/verify-email.request\";\nimport { ApiKeyResponse } from \"../models/response/api-key.response\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { AttachmentResponse } from \"../models/response/attachment.response\";\nimport { AuthRequestResponse } from \"../models/response/auth-request.response\";\nimport { RegisterResponse } from \"../models/response/authentication/register.response\";\nimport { BillingHistoryResponse } from \"../models/response/billing-history.response\";\nimport { BillingPaymentResponse } from \"../models/response/billing-payment.response\";\nimport { BreachAccountResponse } from \"../models/response/breach-account.response\";\nimport { CipherResponse } from \"../models/response/cipher.response\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collection.response\";\nimport { DeviceVerificationResponse } from \"../models/response/device-verification.response\";\nimport { DomainsResponse } from \"../models/response/domains.response\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergency-access.response\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { EventResponse } from \"../models/response/event.response\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/group.response\";\nimport { IdentityCaptchaResponse } from \"../models/response/identity-captcha.response\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/key-connector-user-key.response\";\nimport { ListResponse } from \"../models/response/list.response\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organization-connection.response\";\nimport { OrganizationExportResponse } from \"../models/response/organization-export.response\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organization-sponsorship-sync-status.response\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organization-user-bulk-public-key.response\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organization-user-bulk.response\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n} from \"../models/response/organization-user.response\";\nimport { PaymentResponse } from \"../models/response/payment.response\";\nimport { PlanResponse } from \"../models/response/plan.response\";\nimport { PolicyResponse } from \"../models/response/policy.response\";\nimport { PreloginResponse } from \"../models/response/prelogin.response\";\nimport { ProfileResponse } from \"../models/response/profile.response\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/provider-organization.response\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/provider-user-bulk-public-key.response\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/provider-user-bulk.response\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/provider-user.response\";\nimport { ProviderResponse } from \"../models/response/provider/provider.response\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selection-read-only.response\";\nimport { SendAccessResponse } from \"../models/response/send-access.response\";\nimport { SendFileDownloadDataResponse } from \"../models/response/send-file-download-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\nimport { SendResponse } from \"../models/response/send.response\";\nimport { SsoPreValidateResponse } from \"../models/response/sso-pre-validate.response\";\nimport { SubscriptionResponse } from \"../models/response/subscription.response\";\nimport { SyncResponse } from \"../models/response/sync.response\";\nimport { TaxInfoResponse } from \"../models/response/tax-info.response\";\nimport { TaxRateResponse } from \"../models/response/tax-rate.response\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/two-factor-authenticator.response\";\nimport { TwoFactorDuoResponse } from \"../models/response/two-factor-duo.response\";\nimport { TwoFactorEmailResponse } from \"../models/response/two-factor-email.response\";\nimport { TwoFactorProviderResponse } from \"../models/response/two-factor-provider.response\";\nimport { TwoFactorRecoverResponse } from \"../models/response/two-factor-recover.response\";\nimport {\n  TwoFactorWebAuthnResponse,\n  ChallengeResponse,\n} from \"../models/response/two-factor-web-authn.response\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/two-factor-yubi-key.response\";\nimport { UserKeyResponse } from \"../models/response/user-key.response\";\nimport { SendAccessView } from \"../models/view/send-access.view\";\n\nexport class ApiService implements ApiServiceAbstraction {\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private appIdService: AppIdService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: ApiTokenRequest | PasswordTokenRequest | SsoTokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n\n    const identityToken =\n      request instanceof ApiTokenRequest\n        ? request.toIdentityToken()\n        : request.toIdentityToken(this.platformUtilsService.getClientType());\n\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(identityToken),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken();\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  async postAuthRequest(request: PasswordlessCreateAuthRequest): Promise<AuthRequestResponse> {\n    const r = await this.send(\"POST\", \"/auth-requests/\", request, false, true);\n    return new AuthRequestResponse(r);\n  }\n\n  async getAuthResponse(id: string, accessCode: string): Promise<AuthRequestResponse> {\n    const path = `/auth-requests/${id}/response?code=${accessCode}`;\n    const r = await this.send(\"GET\", path, null, false, true);\n    return new AuthRequestResponse(r);\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/prelogin\",\n      request,\n      false,\n      true,\n      this.environmentService.getIdentityUrl()\n    );\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  async postRegister(request: RegisterRequest): Promise<RegisterResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/register\",\n      request,\n      false,\n      true,\n      this.environmentService.getIdentityUrl()\n    );\n    return new RegisterResponse(r);\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<void> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Account Billing APIs\n\n  async getUserBillingHistory(): Promise<BillingHistoryResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/history\", null, true, true);\n    return new BillingHistoryResponse(r);\n  }\n\n  async getUserBillingPayment(): Promise<BillingPaymentResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/payment-method\", null, true, true);\n    return new BillingPaymentResponse(r);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getFullCipherDetails(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/details\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putPartialCipher(id: string, request: CipherPartialRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/partial\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionGroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionGroupDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new GroupDetailsResponse(r);\n  }\n\n  async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, GroupResponse);\n  }\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return new GroupResponse(r);\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroup(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Organization User APIs\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getOrganizationUsers(\n    organizationId: string\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<void> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  revokeOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/revoke\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async revokeManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/revoke\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  restoreOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/restore\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async restoreManyOrganizationUsers(\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/restore\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, false, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  async getDeviceVerificationSettings(): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/two-factor/get-device-verification-settings\",\n      null,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  async putDeviceVerificationSettings(\n    request: DeviceVerificationRequest\n  ): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/two-factor/device-verification-settings\",\n      request,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getCloudCommunicationsEnabled(): Promise<boolean> {\n    const r = await this.send(\"GET\", \"/organizations/connections/enabled\", null, true, true);\n    return r as boolean;\n  }\n\n  async getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"GET\", `/organizations/connections/${id}/${type}`, null, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"POST\", \"/organizations/connections/\", request, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId?: string\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/connections/\" + organizationConnectionId,\n      request,\n      true,\n      true\n    );\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async deleteOrganizationConnection(id: string): Promise<void> {\n    return this.send(\"DELETE\", \"/organizations/connections/\" + id, null, true, false);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getOrganizationExport(organizationId: string): Promise<OrganizationExportResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/export\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationExportResponse(r);\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    request.headers.set(\"Bitwarden-Client-Name\", this.platformUtilsService.getClientType());\n    request.headers.set(\n      \"Bitwarden-Client-Version\",\n      await this.platformUtilsService.getApplicationVersion()\n    );\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<SsoPreValidateResponse> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      const body = await response.json();\n      return new SsoPreValidateResponse(body);\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoredOrgId +\n        \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getSponsorshipSyncStatus(\n    sponsoredOrgId: string\n  ): Promise<OrganizationSponsorshipSyncStatusResponse> {\n    const response = await this.send(\n      \"GET\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/sync-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSponsorshipSyncStatusResponse(response);\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const appId = await this.appIdService.getAppId();\n    const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n\n    const tokenRequest = new ApiTokenRequest(\n      clientId,\n      clientSecret,\n      new TokenTwoFactorRequest(),\n      deviceRequest\n    );\n\n    const response = await this.postIdentityToken(tokenRequest);\n    if (!(response instanceof IdentityTokenResponse)) {\n      throw new Error(\"Invalid response received when refreshing api token\");\n    }\n\n    await this.tokenService.setToken(response.accessToken);\n  }\n\n  async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    const responseType = response.headers.get(\"content-type\");\n    const responseIsJson = responseType != null && responseType.indexOf(\"application/json\") !== -1;\n    if (hasResponse && response.status === 200 && responseIsJson) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    if (\n      authed &&\n      ((tokenError && response.status === 400) ||\n        response.status === 401 ||\n        response.status === 403)\n    ) {\n      await this.logoutCallback(true);\n      return null;\n    }\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { FileUploadType } from \"../enums/fileUploadType\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService();\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { Utils } from \"../misc/utils\";\nimport { AccountSettingsSettings } from \"../models/domain/account\";\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  private _settings: BehaviorSubject<AccountSettingsSettings> = new BehaviorSubject({});\n\n  settings$ = this._settings.asObservable();\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._settings.next({});\n            return;\n          }\n\n          const data = await this.stateService.getSettings();\n\n          this._settings.next(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    const settings = this._settings.getValue() ?? {};\n\n    settings.equivalentDomains = equivalentDomains;\n\n    this._settings.next(settings);\n    await this.stateService.setSettings(settings);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._settings.next({});\n    }\n\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { PolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"../../abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { PolicyType } from \"../../enums/policyType\";\n\nexport class VaultTimeoutSettingsService implements VaultTimeoutSettingsServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n}\n","import { AuthService } from \"../../abstractions/auth.service\";\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CollectionService } from \"../../abstractions/collection.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { FolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { SearchService } from \"../../abstractions/search.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../../abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"../../abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { AuthenticationStatus } from \"../../enums/authenticationStatus\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private authService: AuthService,\n    private vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (expired: boolean, userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    for (const userId in this.stateService.accounts.getValue()) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.vaultTimeoutSettingsService.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      await this.folderService.clearCache();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(false, userId);\n    }\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    const authStatus = await this.authService.getAuthStatus(userId);\n    if (\n      authStatus === AuthenticationStatus.Locked ||\n      authStatus === AuthenticationStatus.LoggedOut\n    ) {\n      return false;\n    }\n\n    const vaultTimeout = await this.vaultTimeoutSettingsService.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(userId);\n  }\n}\n","import * as papa from \"papaparse\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport {\n  ExportFormat,\n  ExportService as ExportServiceAbstraction,\n} from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"../enums/kdfType\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\nimport { CipherWithIdExport as CipherExport } from \"../models/export/cipher-with-ids.export\";\nimport { CollectionWithIdExport as CollectionExport } from \"../models/export/collection-with-id.export\";\nimport { EventExport } from \"../models/export/event.export\";\nimport { FolderWithIdExport as FolderExport } from \"../models/export/folder-with-id.export\";\nimport { CollectionDetailsResponse } from \"../models/response/collection.response\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { CollectionView } from \"../models/view/collection.view\";\nimport { EventView } from \"../models/view/event.view\";\nimport { FolderView } from \"../models/view/folder.view\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  async getExport(format: ExportFormat = \"csv\", organizationId?: string): Promise<string> {\n    if (organizationId) {\n      return await this.getOrganizationExport(organizationId, format);\n    }\n\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getPasswordProtectedExport(password: string, organizationId?: string): Promise<string> {\n    const clearText = organizationId\n      ? await this.getOrganizationExport(organizationId, \"json\")\n      : await this.getExport(\"json\");\n\n    const salt = Utils.fromBufferToB64(await this.cryptoFunctionService.randomBytes(16));\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makePinKey(\n      password,\n      salt,\n      KdfType.PBKDF2_SHA256,\n      kdfIterations\n    );\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), key);\n    const encText = await this.cryptoService.encrypt(clearText, key);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      passwordProtected: true,\n      salt: salt,\n      kdfIterations: kdfIterations,\n      kdfType: KdfType.PBKDF2_SHA256,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      data: encText.encryptedString,\n    };\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: ExportFormat = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new EventExport(e)));\n  }\n\n  getFileName(prefix: string = null, extension = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      firstValueFrom(this.folderService.folderViews$).then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      firstValueFrom(this.folderService.folders$).then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getOrganizationExport(organizationId).then((exportData) => {\n        const exportPromises: any = [];\n        if (exportData != null) {\n          if (\n            exportData.collections != null &&\n            exportData.collections.data != null &&\n            exportData.collections.data.length > 0\n          ) {\n            exportData.collections.data.forEach((c) => {\n              const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n              exportPromises.push(\n                collection.decrypt().then((decCol) => {\n                  decCollections.push(decCol);\n                })\n              );\n            });\n          }\n          if (\n            exportData.ciphers != null &&\n            exportData.ciphers.data != null &&\n            exportData.ciphers.data.length > 0\n          ) {\n            exportData.ciphers.data\n              .filter((c) => c.deletedDate === null)\n              .forEach((c) => {\n                const cipher = new Cipher(new CipherData(c));\n                exportPromises.push(\n                  cipher.decrypt().then((decCipher) => {\n                    decCiphers.push(decCipher);\n                  })\n                );\n              });\n          }\n        }\n        return Promise.all(exportPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync/sync.service.abstraction\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { NotificationType } from \"../enums/notificationType\";\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notification.response\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService,\n    private authService: AuthService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    // eslint-disable-next-line\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback(true);\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    const authStatus = await this.authService.getAuthStatus();\n    return authStatus >= AuthenticationStatus.Unlocked;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { Utils } from \"../misc/utils\";\nimport { DecryptParameters } from \"../models/domain/decrypt-parameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n\n  constructor(win: Window | typeof global) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if (algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = forge.hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = forge.hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = forge.util.createBuffer(parameters.data);\n    const decipher = forge.cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString();\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { EventService as EventServiceAbstraction } from \"../abstractions/event.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EventType } from \"../enums/eventType\";\nimport { EventData } from \"../models/data/event.data\";\nimport { EventRequest } from \"../models/request/event.request\";\n\nexport class EventService implements EventServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private apiService: ApiService,\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false,\n    organizationId: string = null\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    if (organizationId != null) {\n      if (!orgIds.has(organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    event.organizationId = organizationId;\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.uploadEvents();\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      req.organizationId = e.organizationId;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","import { of, concatMap, BehaviorSubject, Observable, map } from \"rxjs\";\n\nimport { OrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { InternalPolicyService as InternalPolicyServiceAbstraction } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PolicyType } from \"../../enums/policyType\";\nimport { Utils } from \"../../misc/utils\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/reset-password-policy-options\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport class PolicyService implements InternalPolicyServiceAbstraction {\n  private _policies: BehaviorSubject<Policy[]> = new BehaviorSubject([]);\n\n  policies$ = this._policies.asObservable();\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._policies.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getEncryptedPolicies();\n\n          await this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  /**\n   * @deprecated Do not call this, use the policies$ observable collection\n   */\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        if (Object.prototype.hasOwnProperty.call(diskPolicies, id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  masterPasswordPolicyOptions$(policies?: Policy[]): Observable<MasterPasswordPolicyOptions> {\n    const observable = policies ? of(policies) : this.policies$;\n    return observable.pipe(\n      map((obsPolicies) => {\n        let enforcedOptions: MasterPasswordPolicyOptions = null;\n        const filteredPolicies = obsPolicies.filter((p) => p.type === PolicyType.MasterPassword);\n\n        if (filteredPolicies == null || filteredPolicies.length === 0) {\n          return enforcedOptions;\n        }\n\n        filteredPolicies.forEach((currentPolicy) => {\n          if (!currentPolicy.enabled || currentPolicy.data == null) {\n            return;\n          }\n\n          if (enforcedOptions == null) {\n            enforcedOptions = new MasterPasswordPolicyOptions();\n          }\n\n          if (\n            currentPolicy.data.minComplexity != null &&\n            currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n          ) {\n            enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n          }\n\n          if (\n            currentPolicy.data.minLength != null &&\n            currentPolicy.data.minLength > enforcedOptions.minLength\n          ) {\n            enforcedOptions.minLength = currentPolicy.data.minLength;\n          }\n\n          if (currentPolicy.data.requireUpper) {\n            enforcedOptions.requireUpper = true;\n          }\n\n          if (currentPolicy.data.requireLower) {\n            enforcedOptions.requireLower = true;\n          }\n\n          if (currentPolicy.data.requireNumbers) {\n            enforcedOptions.requireNumbers = true;\n          }\n\n          if (currentPolicy.data.requireSpecial) {\n            enforcedOptions.requireSpecial = true;\n          }\n        });\n\n        return enforcedOptions;\n      })\n    );\n  }\n\n  policyAppliesToActiveUser$(\n    policyType: PolicyType,\n    policyFilter: (policy: Policy) => boolean = (p) => true\n  ) {\n    return this.policies$.pipe(\n      concatMap(async (policies) => {\n        const userId = await this.stateService.getUserId();\n        return await this.checkPoliciesThatApplyToUser(policies, policyType, policyFilter, userId);\n      })\n    );\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    // eslint-disable-next-line\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n\n    return this.checkPoliciesThatApplyToUser(policies, policyType, policyFilter, userId);\n  }\n\n  async upsert(policy: PolicyData): Promise<any> {\n    let policies = await this.stateService.getEncryptedPolicies();\n    if (policies == null) {\n      policies = {};\n    }\n\n    policies[policy.id] = policy;\n\n    await this.updateObservables(policies);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<void> {\n    await this.updateObservables(policies);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._policies.next([]);\n    }\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n\n  private async updateObservables(policiesMap: { [id: string]: PolicyData }) {\n    const policies = Object.values(policiesMap || {}).map((f) => new Policy(f));\n\n    this._policies.next(policies);\n  }\n\n  private async checkPoliciesThatApplyToUser(\n    policies: Policy[],\n    policyType: PolicyType,\n    policyFilter: (policy: Policy) => boolean = (p) => true,\n    userId?: string\n  ) {\n    const organizations = await this.organizationService.getAll(userId);\n    const filteredPolicies = policies.filter(\n      (p) => p.type === policyType && p.enabled && policyFilter(p)\n    );\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.enabled &&\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        policySet.has(o.id) &&\n        !this.isExcemptFromPolicies(o, policyType)\n    );\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { OrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { PolicyApiServiceAbstraction } from \"../../abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { PolicyRequest } from \"../../models/request/policy.request\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport class PolicyApiService implements PolicyApiServiceAbstraction {\n  constructor(\n    private policyService: InternalPolicyService,\n    private apiService: ApiService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.policyService.mapPoliciesFromToken(response);\n    return await firstValueFrom(this.policyService.masterPasswordPolicyOptions$(policies));\n  }\n\n  async putPolicy(organizationId: string, type: PolicyType, request: PolicyRequest): Promise<any> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    const response = new PolicyResponse(r);\n    const data = new PolicyData(response);\n    await this.policyService.upsert(data);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SEND_KDF_ITERATIONS } from \"../enums/kdfType\";\nimport { SendType } from \"../enums/sendType\";\nimport { Utils } from \"../misc/utils\";\nimport { SendData } from \"../models/data/send.data\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/send-file\";\nimport { SendText } from \"../models/domain/send-text\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { SendRequest } from \"../models/request/send.request\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { SendResponse } from \"../models/response/send.response\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    // eslint-disable-next-line\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      // eslint-disable-next-line\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { Utils } from \"../misc/utils\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/set-key-connector-key.request\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/key-connector-user-key.request\";\nimport { KeysRequest } from \"../models/request/keys.request\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private logoutCallback: (expired: boolean, userId?: string) => void\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async convertNewSsoUserToKeyConnector(tokenResponse: IdentityTokenResponse, orgId: string) {\n    const { kdf, kdfIterations, keyConnectorUrl } = tokenResponse;\n    const password = await this.cryptoFunctionService.randomBytes(64);\n\n    const k = await this.cryptoService.makeKey(\n      Utils.fromBufferToB64(password),\n      await this.tokenService.getEmail(),\n      kdf,\n      kdfIterations\n    );\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n    await this.cryptoService.setKey(k);\n\n    const encKey = await this.cryptoService.makeEncKey(k);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n    const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(keyConnectorUrl, keyConnectorRequest);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    const keys = new KeysRequest(pubKey, privKey.encryptedString);\n    const setPasswordRequest = new SetKeyConnectorKeyRequest(\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      orgId,\n      keys\n    );\n    await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n\n  private handleKeyConnectorError(e: any) {\n    this.logService.error(e);\n    if (this.logoutCallback != null) {\n      this.logoutCallback(false);\n    }\n    throw new Error(\"Key Connector error\");\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"../../abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"../../enums/verificationType\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verify-otp.request\";\nimport { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { Verification } from \"../../types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Use it to verify the input collected by UserVerificationComponent.\n */\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private userVerificationApiService: UserVerificationApiServiceAbstraction\n  ) {}\n\n  /**\n   * Create a new request model to be used for server-side verification\n   * @param verification User-supplied verification data (Master Password or OTP)\n   * @param requestClass The request model to create\n   * @param alreadyHashed Whether the master password is already hashed\n   */\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  /**\n   * Used to verify the Master Password client-side, or send the OTP to the server for verification (with no other data)\n   * Generally used for client-side verification only.\n   * @param verification User-supplied verification data (Master Password or OTP)\n   */\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.userVerificationApiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.userVerificationApiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPasswordRequired\"));\n      }\n    }\n  }\n}\n","import { BehaviorSubject, concatMap, filter } from \"rxjs\";\n\nimport { OrganizationService as OrganizationServiceAbstraction } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { SyncNotifierService } from \"../../abstractions/sync/syncNotifier.service.abstraction\";\nimport { OrganizationData } from \"../../models/data/organization.data\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { isSuccessfullyCompleted } from \"../../types/syncEventArgs\";\n\nexport class OrganizationService implements OrganizationServiceAbstraction {\n  private _organizations = new BehaviorSubject<Organization[]>([]);\n\n  organizations$ = this._organizations.asObservable();\n\n  constructor(\n    private stateService: StateService,\n    private syncNotifierService: SyncNotifierService\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (!unlocked) {\n            this._organizations.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getOrganizations();\n          this.updateObservables(data);\n        })\n      )\n      .subscribe();\n\n    this.syncNotifierService.sync$\n      .pipe(\n        filter(isSuccessfullyCompleted),\n        concatMap(async ({ data }) => {\n          const { profile } = data;\n          const organizations: { [id: string]: OrganizationData } = {};\n          profile.organizations.forEach((o) => {\n            organizations[o.id] = new OrganizationData(o);\n          });\n\n          profile.providerOrganizations.forEach((o) => {\n            if (organizations[o.id] == null) {\n              organizations[o.id] = new OrganizationData(o);\n              organizations[o.id].isProviderUser = true;\n            }\n          });\n\n          await this.updateStateAndObservables(organizations);\n        })\n      )\n      .subscribe();\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizationsMap = await this.stateService.getOrganizations({ userId: userId });\n    return Object.values(organizationsMap || {}).map((o) => new Organization(o));\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const organizations = this._organizations.getValue();\n    return organizations.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n\n  hasOrganizations(): boolean {\n    const organizations = this._organizations.getValue();\n    return organizations.length > 0;\n  }\n\n  async upsert(organization: OrganizationData): Promise<void> {\n    let organizations = await this.stateService.getOrganizations();\n    if (organizations == null) {\n      organizations = {};\n    }\n\n    organizations[organization.id] = organization;\n\n    await this.updateStateAndObservables(organizations);\n  }\n\n  async delete(id: string): Promise<void> {\n    const organizations = await this.stateService.getOrganizations();\n    if (organizations == null) {\n      return;\n    }\n\n    if (organizations[id] == null) {\n      return;\n    }\n\n    delete organizations[id];\n    await this.updateStateAndObservables(organizations);\n  }\n\n  get(id: string): Organization {\n    const organizations = this._organizations.getValue();\n\n    return organizations.find((organization) => organization.id === id);\n  }\n\n  getByIdentifier(identifier: string): Organization {\n    const organizations = this._organizations.getValue();\n\n    return organizations.find((organization) => organization.identifier === identifier);\n  }\n\n  private async updateStateAndObservables(organizationsMap: { [id: string]: OrganizationData }) {\n    await this.stateService.setOrganizations(organizationsMap);\n    this.updateObservables(organizationsMap);\n  }\n\n  private updateObservables(organizationsMap: { [id: string]: OrganizationData }) {\n    const organizations = Object.values(organizationsMap || {}).map((o) => new Organization(o));\n    this._organizations.next(organizations);\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    // eslint-disable-next-line\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      // eslint-disable-next-line\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","import { UntypedFormGroup, ValidationErrors } from \"@angular/forms\";\n\nimport {\n  FormGroupControls,\n  FormValidationErrorsService as FormValidationErrorsAbstraction,\n  AllValidationErrors,\n} from \"../abstractions/formValidationErrors.service\";\n\nexport class FormValidationErrorsService implements FormValidationErrorsAbstraction {\n  getFormValidationErrors(controls: FormGroupControls): AllValidationErrors[] {\n    let errors: AllValidationErrors[] = [];\n    Object.keys(controls).forEach((key) => {\n      const control = controls[key];\n      if (control instanceof UntypedFormGroup) {\n        errors = errors.concat(this.getFormValidationErrors(control.controls));\n      }\n\n      const controlErrors: ValidationErrors = controls[key].errors;\n      if (controlErrors !== null) {\n        Object.keys(controlErrors).forEach((keyError) => {\n          errors.push({\n            controlName: key,\n            errorName: keyError,\n          });\n        });\n      }\n    });\n\n    return errors;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verify-otp.request\";\n\nexport class UserVerificationApiService implements UserVerificationApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n  async postAccountRequestOTP(): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { OrganizationApiServiceAbstraction } from \"../../abstractions/organization/organization-api.service.abstraction\";\nimport { SyncService } from \"../../abstractions/sync/sync.service.abstraction\";\nimport { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\nimport { ImportDirectoryRequest } from \"../../models/request/import-directory.request\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organization-api-key.request\";\nimport { OrganizationCreateRequest } from \"../../models/request/organization-create.request\";\nimport { OrganizationKeysRequest } from \"../../models/request/organization-keys.request\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organization-subscription-update.request\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organization-tax-info-update.request\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organization-update.request\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organization-upgrade.request\";\nimport { OrganizationSsoRequest } from \"../../models/request/organization/organization-sso.request\";\nimport { PaymentRequest } from \"../../models/request/payment.request\";\nimport { SeatRequest } from \"../../models/request/seat.request\";\nimport { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { StorageRequest } from \"../../models/request/storage.request\";\nimport { VerifyBankRequest } from \"../../models/request/verify-bank.request\";\nimport { ApiKeyResponse } from \"../../models/response/api-key.response\";\nimport { BillingResponse } from \"../../models/response/billing.response\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organization-api-key-information.response\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organization-auto-enroll-status.response\";\nimport { OrganizationKeysResponse } from \"../../models/response/organization-keys.response\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organization-subscription.response\";\nimport { OrganizationResponse } from \"../../models/response/organization.response\";\nimport { OrganizationSsoResponse } from \"../../models/response/organization/organization-sso.response\";\nimport { PaymentResponse } from \"../../models/response/payment.response\";\nimport { TaxInfoResponse } from \"../../models/response/tax-info.response\";\n\nexport class OrganizationApiService implements OrganizationApiServiceAbstraction {\n  constructor(private apiService: ApiService, private syncService: SyncService) {}\n\n  async get(id: string): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getBilling(id: string): Promise<BillingResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/billing\",\n      null,\n      true,\n      true\n    );\n    return new BillingResponse(r);\n  }\n\n  async getSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/subscription\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getLicense(id: string, installationId: string): Promise<unknown> {\n    return this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getAutoEnrollStatus(identifier: string): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  async create(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"POST\", \"/organizations\", request, true, true);\n    // Forcing a sync will notify organization service that they need to repull\n    await this.syncService.fullSync(true);\n    return new OrganizationResponse(r);\n  }\n\n  async createLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async save(id: string, request: OrganizationUpdateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    const data = new OrganizationResponse(r);\n    await this.syncService.fullSync(true);\n    return data;\n  }\n\n  async updatePayment(id: string, request: PaymentRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  async upgrade(id: string, request: OrganizationUpgradeRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/upgrade\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/subscription\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async updateSeats(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/seat\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/storage\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async verifyBank(id: string, request: VerifyBankRequest): Promise<void> {\n    await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/verify-bank\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async cancel(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  async reinstate(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  async leave(id: string): Promise<void> {\n    await this.apiService.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n    await this.syncService.fullSync(true);\n  }\n\n  async delete(id: string, request: SecretVerificationRequest): Promise<void> {\n    await this.apiService.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n    await this.syncService.fullSync(true);\n  }\n\n  async updateLicense(id: string, data: FormData): Promise<void> {\n    await this.apiService.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async importDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/import\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getOrCreateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getApiKeyInformation(\n    id: string,\n    organizationApiKeyType: OrganizationApiKeyType = null\n  ): Promise<ListResponse<OrganizationApiKeyInformationResponse>> {\n    const uri =\n      organizationApiKeyType === null\n        ? \"/organizations/\" + id + \"/api-key-information\"\n        : \"/organizations/\" + id + \"/api-key-information/\" + organizationApiKeyType;\n    const r = await this.apiService.send(\"GET\", uri, null, true, true);\n    return new ListResponse(r, OrganizationApiKeyInformationResponse);\n  }\n\n  async rotateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async updateTaxInfo(id: string, request: OrganizationTaxInfoUpdateRequest): Promise<void> {\n    // Can't broadcast anything because the response doesn't have content\n    return this.apiService.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  async getKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async updateKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/keys\",\n      request,\n      true,\n      true\n    );\n    // Not broadcasting anything because data on this response doesn't correspond to `Organization`\n    return new OrganizationKeysResponse(r);\n  }\n\n  async getSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async updateSso(id: string, request: OrganizationSsoRequest): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/sso\",\n      request,\n      true,\n      true\n    );\n    // Not broadcasting anything because data on this response doesn't correspond to `Organization`\n    return new OrganizationSsoResponse(r);\n  }\n}\n","import { Subject } from \"rxjs\";\n\nimport { SyncNotifierService as SyncNotifierServiceAbstraction } from \"../../abstractions/sync/syncNotifier.service.abstraction\";\nimport { SyncEventArgs } from \"../../types/syncEventArgs\";\n\n/**\n * This class should most likely have 0 dependencies because it will hopefully\n * be rolled into SyncService once upon a time.\n */\nexport class SyncNotifierService implements SyncNotifierServiceAbstraction {\n  private _sync = new Subject<SyncEventArgs>();\n\n  sync$ = this._sync.asObservable();\n\n  next(event: SyncEventArgs): void {\n    this._sync.next(event);\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { ServerConfig } from \"./server-config\";\n\nexport abstract class ConfigServiceAbstraction {\n  serverConfig$: Observable<ServerConfig | null>;\n}\n","import { BehaviorSubject, concatMap, map, switchMap, timer, EMPTY } from \"rxjs\";\n\nimport { ConfigApiServiceAbstraction } from \"../../abstractions/config/config-api.service.abstraction\";\nimport { ConfigServiceAbstraction } from \"../../abstractions/config/config.service.abstraction\";\nimport { ServerConfig } from \"../../abstractions/config/server-config\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { ServerConfigData } from \"../../models/data/server-config.data\";\n\nexport class ConfigService implements ConfigServiceAbstraction {\n  private _serverConfig = new BehaviorSubject<ServerConfig | null>(null);\n  serverConfig$ = this._serverConfig.asObservable();\n\n  constructor(\n    private stateService: StateService,\n    private configApiService: ConfigApiServiceAbstraction\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        switchMap((unlocked) => {\n          if (!unlocked) {\n            this._serverConfig.next(null);\n            return EMPTY;\n          }\n\n          // Re-fetch the server config every hour\n          return timer(0, 3600 * 1000).pipe(map(() => unlocked));\n        }),\n        concatMap(async (unlocked) => {\n          return unlocked ? await this.buildServerConfig() : null;\n        })\n      )\n      .subscribe((serverConfig) => {\n        this._serverConfig.next(serverConfig);\n      });\n  }\n\n  private async buildServerConfig(): Promise<ServerConfig> {\n    const data = await this.stateService.getServerConfig();\n    const domain = data ? new ServerConfig(data) : null;\n\n    if (domain == null || !domain.isValid() || domain.expiresSoon()) {\n      const value = await this.fetchServerConfig();\n      return value ?? domain;\n    }\n\n    return domain;\n  }\n\n  private async fetchServerConfig(): Promise<ServerConfig> {\n    try {\n      const response = await this.configApiService.get();\n\n      if (response != null) {\n        const data = new ServerConfigData(response);\n        await this.stateService.setServerConfig(data);\n        return new ServerConfig(data);\n      }\n    } catch {\n      return null;\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { ConfigApiServiceAbstraction as ConfigApiServiceAbstraction } from \"../../abstractions/config/config-api.service.abstraction\";\nimport { ServerConfigResponse } from \"../../models/response/server-config.response\";\n\nexport class ConfigApiService implements ConfigApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  async get(): Promise<ServerConfigResponse> {\n    const r = await this.apiService.send(\"GET\", \"/config\", null, true, true);\n    return new ServerConfigResponse(r);\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { ValidationService as ValidationServiceAbstraction } from \"../abstractions/validation.service\";\nimport { ErrorResponse } from \"../models/response/error.response\";\n\nexport class ValidationService implements ValidationServiceAbstraction {\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  showError(data: any): string[] {\n    const defaultErrorMessage = this.i18nService.t(\"unexpectedError\");\n    let errors: string[] = [];\n\n    if (data != null && typeof data === \"string\") {\n      errors.push(data);\n    } else if (data == null || typeof data !== \"object\") {\n      errors.push(defaultErrorMessage);\n    } else if (data.validationErrors != null) {\n      errors = errors.concat((data as ErrorResponse).getAllMessages());\n    } else {\n      errors.push(data.message ? data.message : defaultErrorMessage);\n    }\n\n    if (errors.length === 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors[0]);\n    } else if (errors.length > 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors, {\n        timeout: 5000 * errors.length,\n      });\n    }\n\n    return errors;\n  }\n}\n","import {\n  AbstractStorageService,\n  MemoryStorageServiceInterface,\n} from \"../abstractions/storage.service\";\n\nexport class MemoryStorageService\n  extends AbstractStorageService\n  implements MemoryStorageServiceInterface\n{\n  private store = new Map<string, any>();\n\n  get<T>(key: string): Promise<T> {\n    if (this.store.has(key)) {\n      const obj = this.store.get(key);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string): Promise<boolean> {\n    return this.get(key) != null;\n  }\n\n  save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      return this.remove(key);\n    }\n    this.store.set(key, obj);\n    return Promise.resolve();\n  }\n\n  remove(key: string): Promise<any> {\n    this.store.delete(key);\n    return Promise.resolve();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\n@Injectable()\nexport class BroadcasterMessagingService implements MessagingService {\n  constructor(private broadcasterService: BroadcasterService) {}\n\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    this.broadcasterService.send(message);\n  }\n}\n","import { Injectable, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { EventResponse } from \"@bitwarden/common/models/response/event.response\";\n\n@Injectable()\nexport class EventService implements OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n  private policies: Policy[];\n\n  constructor(private i18nService: I18nService, private policyService: PolicyService) {}\n\n  ngOnInit(): void {\n    this.policyService.policies$.pipe(takeUntil(this.destroy$)).subscribe((policies) => {\n      this.policies = policies;\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  getDefaultDateFilters() {\n    const d = new Date();\n    const end = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59);\n    d.setDate(d.getDate() - 30);\n    const start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0);\n    return [this.toDateTimeLocalString(start), this.toDateTimeLocalString(end)];\n  }\n\n  formatDateFilters(filterStart: string, filterEnd: string) {\n    const start: Date = new Date(filterStart);\n    const end: Date = new Date(filterEnd + \":59.999\");\n    if (isNaN(start.getTime()) || isNaN(end.getTime()) || end < start) {\n      throw new Error(\"Invalid date range.\");\n    }\n    return [start.toISOString(), end.toISOString()];\n  }\n\n  async getEventInfo(ev: EventResponse, options = new EventOptions()): Promise<EventInfo> {\n    const appInfo = this.getAppInfo(ev.deviceType);\n    const { message, humanReadableMessage } = await this.getEventMessage(ev, options);\n    return {\n      message: message,\n      humanReadableMessage: humanReadableMessage,\n      appIcon: appInfo[0],\n      appName: appInfo[1],\n    };\n  }\n\n  private async getEventMessage(ev: EventResponse, options: EventOptions) {\n    let msg = \"\";\n    let humanReadableMsg = \"\";\n    switch (ev.type) {\n      // User\n      case EventType.User_LoggedIn:\n        msg = humanReadableMsg = this.i18nService.t(\"loggedIn\");\n        break;\n      case EventType.User_ChangedPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"changedPassword\");\n        break;\n      case EventType.User_Updated2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledUpdated2fa\");\n        break;\n      case EventType.User_Disabled2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"disabled2fa\");\n        break;\n      case EventType.User_Recovered2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"recovered2fa\");\n        break;\n      case EventType.User_FailedLogIn:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin\");\n        break;\n      case EventType.User_FailedLogIn2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin2fa\");\n        break;\n      case EventType.User_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedVault\");\n        break;\n      case EventType.User_UpdatedTempPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"updatedMasterPassword\");\n        break;\n      case EventType.User_MigratedKeyToKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"migratedKeyConnector\");\n        break;\n      // Cipher\n      case EventType.Cipher_Created:\n        msg = this.i18nService.t(\"createdItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"createdItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Updated:\n        msg = this.i18nService.t(\"editedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"editedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Deleted:\n        msg = this.i18nService.t(\"permanentlyDeletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"permanentlyDeletedItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_SoftDeleted:\n        msg = this.i18nService.t(\"deletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"deletedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Restored:\n        msg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        break;\n      case EventType.Cipher_AttachmentCreated:\n        msg = this.i18nService.t(\"createdAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"createdAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_AttachmentDeleted:\n        msg = this.i18nService.t(\"deletedAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_Shared:\n        msg = this.i18nService.t(\"movedItemIdToOrg\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"movedItemIdToOrg\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientViewed:\n        msg = this.i18nService.t(\"viewedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledPasswordVisible:\n        msg = this.i18nService.t(\"viewedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledHiddenFieldVisible:\n        msg = this.i18nService.t(\"viewedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientToggledCardCodeVisible:\n        msg = this.i18nService.t(\"viewedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedHiddenField:\n        msg = this.i18nService.t(\"copiedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedPassword:\n        msg = this.i18nService.t(\"copiedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"copiedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientCopiedCardCode:\n        msg = this.i18nService.t(\"copiedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientAutofilled:\n        msg = this.i18nService.t(\"autofilledItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"autofilledItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_UpdatedCollections:\n        msg = this.i18nService.t(\"editedCollectionsForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionsForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      // Collection\n      case EventType.Collection_Created:\n        msg = this.i18nService.t(\"createdCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Updated:\n        msg = this.i18nService.t(\"editedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Deleted:\n        msg = this.i18nService.t(\"deletedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      // Group\n      case EventType.Group_Created:\n        msg = this.i18nService.t(\"createdGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"createdGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Updated:\n        msg = this.i18nService.t(\"editedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Deleted:\n        msg = this.i18nService.t(\"deletedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"deletedGroupId\", this.getShortId(ev.groupId));\n        break;\n      // Org user\n      case EventType.OrganizationUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"invitedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UpdatedGroups:\n        msg = this.i18nService.t(\"editedGroupsForUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedGroupsForUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UnlinkedSso:\n        msg = this.i18nService.t(\"unlinkedSsoUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"unlinkedSsoUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Enroll:\n        msg = this.i18nService.t(\"eventEnrollPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventEnrollPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Withdraw:\n        msg = this.i18nService.t(\"eventWithdrawPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventWithdrawPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_AdminResetPassword:\n        msg = this.i18nService.t(\"eventAdminPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventAdminPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetSsoLink:\n        msg = this.i18nService.t(\"eventResetSsoLink\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventResetSsoLink\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_FirstSsoLogin:\n        msg = this.i18nService.t(\"firstSsoLogin\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"firstSsoLogin\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Revoked:\n        msg = this.i18nService.t(\"revokedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"revokedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Restored:\n        msg = this.i18nService.t(\"restoredUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"restoredUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      // Org\n      case EventType.Organization_Updated:\n        msg = humanReadableMsg = this.i18nService.t(\"editedOrgSettings\");\n        break;\n      case EventType.Organization_PurgedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"purgedOrganizationVault\");\n        break;\n      case EventType.Organization_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedOrganizationVault\");\n        break;\n      case EventType.Organization_VaultAccessed:\n        msg = humanReadableMsg = this.i18nService.t(\"vaultAccessedByProvider\");\n        break;\n      case EventType.Organization_EnabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledSso\");\n        break;\n      case EventType.Organization_DisabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledSso\");\n        break;\n      case EventType.Organization_EnabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledKeyConnector\");\n        break;\n      case EventType.Organization_DisabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledKeyConnector\");\n        break;\n      case EventType.Organization_SponsorshipsSynced:\n        msg = humanReadableMsg = this.i18nService.t(\"sponsorshipsSynced\");\n        break;\n      // Policies\n      case EventType.Policy_Updated: {\n        msg = this.i18nService.t(\"modifiedPolicyId\", this.formatPolicyId(ev));\n\n        const policy = this.policies.filter((p) => p.id === ev.policyId)[0];\n        let p1 = this.getShortId(ev.policyId);\n        if (policy != null) {\n          p1 = PolicyType[policy.type];\n        }\n\n        humanReadableMsg = this.i18nService.t(\"modifiedPolicyId\", p1);\n        break;\n      }\n      // Provider users:\n      case EventType.ProviderUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"invitedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.providerUserId)\n        );\n        break;\n      case EventType.ProviderUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"removedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderOrganization_Created:\n        msg = this.i18nService.t(\"createdOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Added:\n        msg = this.i18nService.t(\"addedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"addedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Removed:\n        msg = this.i18nService.t(\"removedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_VaultAccessed:\n        msg = this.i18nService.t(\"accessedClientVault\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"accessedClientVault\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      default:\n        break;\n    }\n    return {\n      message: msg === \"\" ? null : msg,\n      humanReadableMessage: humanReadableMsg === \"\" ? null : humanReadableMsg,\n    };\n  }\n\n  private getAppInfo(deviceType: DeviceType): [string, string] {\n    switch (deviceType) {\n      case DeviceType.Android:\n        return [\"bwi-android\", this.i18nService.t(\"mobile\") + \" - Android\"];\n      case DeviceType.iOS:\n        return [\"bwi-apple\", this.i18nService.t(\"mobile\") + \" - iOS\"];\n      case DeviceType.UWP:\n        return [\"bwi-windows\", this.i18nService.t(\"mobile\") + \" - Windows\"];\n      case DeviceType.ChromeExtension:\n        return [\"bwi-chrome\", this.i18nService.t(\"extension\") + \" - Chrome\"];\n      case DeviceType.FirefoxExtension:\n        return [\"bwi-firefox\", this.i18nService.t(\"extension\") + \" - Firefox\"];\n      case DeviceType.OperaExtension:\n        return [\"bwi-opera\", this.i18nService.t(\"extension\") + \" - Opera\"];\n      case DeviceType.EdgeExtension:\n        return [\"bwi-edge\", this.i18nService.t(\"extension\") + \" - Edge\"];\n      case DeviceType.VivaldiExtension:\n        return [\"bwi-puzzle\", this.i18nService.t(\"extension\") + \" - Vivaldi\"];\n      case DeviceType.SafariExtension:\n        return [\"bwi-safari\", this.i18nService.t(\"extension\") + \" - Safari\"];\n      case DeviceType.WindowsDesktop:\n        return [\"bwi-windows\", this.i18nService.t(\"desktop\") + \" - Windows\"];\n      case DeviceType.MacOsDesktop:\n        return [\"bwi-apple\", this.i18nService.t(\"desktop\") + \" - macOS\"];\n      case DeviceType.LinuxDesktop:\n        return [\"bwi-linux\", this.i18nService.t(\"desktop\") + \" - Linux\"];\n      case DeviceType.ChromeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Chrome\"];\n      case DeviceType.FirefoxBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Firefox\"];\n      case DeviceType.OperaBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Opera\"];\n      case DeviceType.SafariBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Safari\"];\n      case DeviceType.VivaldiBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Vivaldi\"];\n      case DeviceType.EdgeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Edge\"];\n      case DeviceType.IEBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - IE\"];\n      case DeviceType.UnknownBrowser:\n        return [\n          \"bwi-globe\",\n          this.i18nService.t(\"webVault\") + \" - \" + this.i18nService.t(\"unknown\"),\n        ];\n      default:\n        return [\"bwi-globe\", this.i18nService.t(\"unknown\")];\n    }\n  }\n\n  private formatCipherId(ev: EventResponse, options: EventOptions) {\n    const shortId = this.getShortId(ev.cipherId);\n    if (ev.organizationId == null || !options.cipherInfo) {\n      return \"<code>\" + shortId + \"</code>\";\n    }\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/vault?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.cipherId\n    );\n    return a.outerHTML;\n  }\n\n  private formatGroupId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.groupId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/groups?search=\" + shortId\n    );\n    return a.outerHTML;\n  }\n\n  private formatCollectionId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.collectionId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/collections?search=\" + shortId\n    );\n    return a.outerHTML;\n  }\n\n  private formatOrgUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.organizationUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/manage/people?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.organizationUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/providers/\" +\n        ev.providerId +\n        \"/manage/people?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.providerUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderOrganizationId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerOrganizationId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\"href\", \"#/providers/\" + ev.providerId + \"/clients?search=\" + shortId);\n    return a.outerHTML;\n  }\n\n  private formatPolicyId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.policyId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/policies?policyId=\" + ev.policyId\n    );\n    return a.outerHTML;\n  }\n\n  private makeAnchor(shortId: string) {\n    const a = document.createElement(\"a\");\n    a.title = this.i18nService.t(\"view\");\n    a.innerHTML = \"<code>\" + shortId + \"</code>\";\n    return a;\n  }\n\n  private getShortId(id: string) {\n    return id?.substring(0, 8);\n  }\n\n  private toDateTimeLocalString(date: Date) {\n    return (\n      date.getFullYear() +\n      \"-\" +\n      this.pad(date.getMonth() + 1) +\n      \"-\" +\n      this.pad(date.getDate()) +\n      \"T\" +\n      this.pad(date.getHours()) +\n      \":\" +\n      this.pad(date.getMinutes())\n    );\n  }\n\n  private pad(num: number) {\n    const norm = Math.floor(Math.abs(num));\n    return (norm < 10 ? \"0\" : \"\") + norm;\n  }\n}\n\nexport class EventInfo {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n}\n\nexport class EventOptions {\n  cipherInfo = true;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"@bitwarden/common/enums/htmlStorageLocation\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storage-options\";\n\n@Injectable()\nexport class HtmlStorageService implements AbstractStorageService {\n  get defaultOptions(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Session };\n  }\n\n  get<T>(key: string, options: StorageOptions = this.defaultOptions): Promise<T> {\n    let json: string = null;\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        json = window.localStorage.getItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        json = window.sessionStorage.getItem(key);\n        break;\n    }\n\n    if (json != null) {\n      const obj = JSON.parse(json);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string, options: StorageOptions = this.defaultOptions): Promise<boolean> {\n    return (await this.get(key, options)) != null;\n  }\n\n  save(key: string, obj: any, options: StorageOptions = this.defaultOptions): Promise<any> {\n    if (obj == null) {\n      return this.remove(key, options);\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const json = JSON.stringify(obj);\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.setItem(key, json);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.setItem(key, json);\n        break;\n    }\n    return Promise.resolve();\n  }\n\n  remove(key: string, options: StorageOptions = this.defaultOptions): Promise<any> {\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.removeItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.removeItem(key);\n        break;\n    }\n    return Promise.resolve();\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\n\nexport class ContainerService {\n  constructor(private cryptoService: CryptoService, private encryptService: EncryptService) {}\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  /**\n   * @throws Will throw if CryptoService was not instantiated and provided to the ContainerService constructor\n   */\n  getCryptoService(): CryptoService {\n    if (this.cryptoService == null) {\n      throw new Error(\"ContainerService.cryptoService not initialized.\");\n    }\n    return this.cryptoService;\n  }\n\n  /**\n   * @throws Will throw if EncryptService was not instantiated and provided to the ContainerService constructor\n   */\n  getEncryptService(): EncryptService {\n    if (this.encryptService == null) {\n      throw new Error(\"ContainerService.encryptService not initialized.\");\n    }\n    return this.encryptService;\n  }\n}\n","import { Inject, Injectable } from \"@angular/core\";\n\nimport { WINDOW } from \"@bitwarden/angular/services/injection-tokens\";\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EncryptService } from \"@bitwarden/common/abstractions/encrypt.service\";\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventService as EventLoggingServiceAbstraction } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { ContainerService } from \"@bitwarden/common/services/container.service\";\nimport { EventService as EventLoggingService } from \"@bitwarden/common/services/event.service\";\nimport { VaultTimeoutService as VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeout.service\";\n\nimport { I18nService } from \"./i18n.service\";\n\n@Injectable()\nexport class InitService {\n  constructor(\n    @Inject(WINDOW) private win: Window,\n    private environmentService: EnvironmentServiceAbstraction,\n    private notificationsService: NotificationsServiceAbstraction,\n    private vaultTimeoutService: VaultTimeoutServiceAbstraction,\n    private i18nService: I18nServiceAbstraction,\n    private eventLoggingService: EventLoggingServiceAbstraction,\n    private twoFactorService: TwoFactorServiceAbstraction,\n    private stateService: StateServiceAbstraction,\n    private cryptoService: CryptoServiceAbstraction,\n    private themingService: AbstractThemingService,\n    private encryptService: EncryptService\n  ) {}\n\n  init() {\n    return async () => {\n      await this.stateService.init();\n\n      const urls = process.env.URLS as Urls;\n      urls.base ??= this.win.location.origin;\n      this.environmentService.setUrls(urls);\n\n      setTimeout(() => this.notificationsService.init(), 3000);\n      (this.vaultTimeoutService as VaultTimeoutService).init(true);\n      const locale = await this.stateService.getLocale();\n      await (this.i18nService as I18nService).init(locale);\n      (this.eventLoggingService as EventLoggingService).init(true);\n      this.twoFactorService.init();\n      const htmlEl = this.win.document.documentElement;\n      htmlEl.classList.add(\"locale_\" + this.i18nService.translationLocale);\n      await this.themingService.monitorThemeChanges();\n      const containerService = new ContainerService(this.cryptoService, this.encryptService);\n      containerService.attachToGlobal(this.win);\n    };\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, Injectable, Injector } from \"@angular/core\";\nimport * as jq from \"jquery\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService as BaseModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Injectable()\nexport class ModalService extends BaseModalService {\n  el: any = null;\n  modalOpen = false;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    applicationRef: ApplicationRef,\n    injector: Injector,\n    private messagingService: MessagingService\n  ) {\n    super(componentFactoryResolver, applicationRef, injector);\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    modalRef.onCreated.pipe(first()).subscribe(() => {\n      const modals = Array.from(document.querySelectorAll(\".modal\"));\n      if (modals.length > 0) {\n        this.el = jq(modals[0]);\n        this.el.modal(\"show\");\n\n        this.el.on(\"show.bs.modal\", () => {\n          modalRef.show();\n          this.messagingService.send(\"modalShow\");\n        });\n        this.el.on(\"shown.bs.modal\", () => {\n          modalRef.shown();\n          this.messagingService.send(\"modalShown\");\n          if (!Utils.isMobileBrowser) {\n            this.el.find(\"*[appAutoFocus]\").focus();\n          }\n        });\n        this.el.on(\"hide.bs.modal\", () => {\n          this.messagingService.send(\"modalClose\");\n        });\n        this.el.on(\"hidden.bs.modal\", () => {\n          modalRef.closed();\n          this.messagingService.send(\"modalClosed\");\n        });\n      }\n    });\n\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      if (this.el != null) {\n        this.el.modal(\"hide\");\n      }\n    });\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from \"@bitwarden/angular/components/password-reprompt.component\";\n\n@Component({\n  templateUrl: \"password-reprompt.component.html\",\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"passwordConfirmation\" | i18n }}\n        </h1>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"passwordConfirmationDesc\" | i18n }}\n\n        <div class=\"form-group\">\n          <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n          <div class=\"d-flex\">\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appAutofocus\n              appInputVerbatim\n            />\n            <button\n              type=\"button\"\n              class=\"ml-1 btn btn-link\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\">\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from \"@bitwarden/angular/services/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n  component = PasswordRepromptComponent;\n}\n","import { BasePolicy } from \"../organizations/policies/base-policy.component\";\n\nexport class PolicyListService {\n  private policies: BasePolicy[] = [];\n\n  addPolicies(policies: BasePolicy[]) {\n    this.policies.push(...policies);\n  }\n\n  getPolicies(): BasePolicy[] {\n    return this.policies;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Title } from \"@angular/platform-browser\";\nimport { ActivatedRoute, NavigationEnd, Router } from \"@angular/router\";\nimport { filter } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Injectable()\nexport class RouterService {\n  private previousUrl: string = undefined;\n  private currentUrl: string = undefined;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title,\n    i18nService: I18nService\n  ) {\n    this.currentUrl = this.router.url;\n\n    router.events\n      .pipe(filter((e) => e instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => {\n        this.currentUrl = event.url;\n\n        let title = i18nService.t(\"pageTitle\", \"Bitwarden\");\n        let child = this.activatedRoute.firstChild;\n        while (child.firstChild) {\n          child = child.firstChild;\n        }\n\n        const titleId: string = child?.snapshot?.data?.titleId;\n        const rawTitle: string = child?.snapshot?.data?.title;\n        const updateUrl = !child?.snapshot?.data?.doNotSaveUrl ?? true;\n\n        if (titleId != null || rawTitle != null) {\n          const newTitle = rawTitle != null ? rawTitle : i18nService.t(titleId);\n          if (newTitle != null && newTitle !== \"\") {\n            title = newTitle + \" | \" + title;\n          }\n        }\n        this.titleService.setTitle(title);\n        if (updateUrl) {\n          this.setPreviousUrl(this.currentUrl);\n        }\n      });\n  }\n\n  getPreviousUrl() {\n    return this.previousUrl;\n  }\n\n  setPreviousUrl(url: string) {\n    this.previousUrl = url;\n  }\n}\n","import {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"@bitwarden/common/models/domain/account\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout: number = process.env.NODE_ENV === \"development\" ? null : 15;\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n  }\n}\n","import { Inject, Injectable } from \"@angular/core\";\n\nimport {\n  MEMORY_STORAGE,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n} from \"@bitwarden/angular/services/injection-tokens\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateMigrationService } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipher.data\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { FolderData } from \"@bitwarden/common/models/data/folder.data\";\nimport { SendData } from \"@bitwarden/common/models/data/send.data\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storage-options\";\nimport { StateService as BaseStateService } from \"@bitwarden/common/services/state.service\";\n\nimport { Account } from \"./account\";\nimport { GlobalState } from \"./global-state\";\n\n@Injectable()\nexport class StateService extends BaseStateService<GlobalState, Account> {\n  constructor(\n    storageService: AbstractStorageService,\n    @Inject(SECURE_STORAGE) secureStorageService: AbstractStorageService,\n    @Inject(MEMORY_STORAGE) memoryStorageService: AbstractStorageService,\n    logService: LogService,\n    stateMigrationService: StateMigrationService,\n    @Inject(STATE_FACTORY) stateFactory: StateFactory<GlobalState, Account>,\n    @Inject(STATE_SERVICE_USE_CACHE) useAccountCache = true\n  ) {\n    super(\n      storageService,\n      secureStorageService,\n      memoryStorageService,\n      logService,\n      stateMigrationService,\n      stateFactory,\n      useAccountCache\n    );\n  }\n\n  async addAccount(account: Account) {\n    // Apply web overrides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getRememberEmail(options?: StorageOptions) {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberEmail;\n  }\n\n  async setRememberEmail(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedCiphers(options);\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedCiphers(value, options);\n  }\n\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedCollections(options);\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedCollections(value, options);\n  }\n\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedFolders(options);\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedFolders(value, options);\n  }\n\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedSends(options);\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedSends(value, options);\n  }\n\n  override async getLastSync(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getLastSync(options);\n  }\n\n  override async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setLastSync(value, options);\n  }\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport class FileDownloadBuilder {\n  get blobOptions(): any {\n    const options = this._request.blobOptions ?? {};\n    if (options.type == null) {\n      options.type = this.fileType;\n    }\n    return options;\n  }\n\n  get blob(): Blob {\n    if (this.blobOptions != null) {\n      return new Blob([this._request.blobData], this.blobOptions);\n    } else {\n      return new Blob([this._request.blobData]);\n    }\n  }\n\n  get downloadMethod(): \"save\" | \"open\" {\n    if (this._request.downloadMethod != null) {\n      return this._request.downloadMethod;\n    }\n    return this.fileType != \"application/pdf\" ? \"save\" : \"open\";\n  }\n\n  private get fileType() {\n    const fileNameLower = this._request.fileName.toLowerCase();\n    if (fileNameLower.endsWith(\".pdf\")) {\n      return \"application/pdf\";\n    } else if (fileNameLower.endsWith(\".xlsx\")) {\n      return \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    } else if (fileNameLower.endsWith(\".docx\")) {\n      return \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n    } else if (fileNameLower.endsWith(\".pptx\")) {\n      return \"application/vnd.openxmlformats-officedocument.presentationml.presentation\";\n    } else if (fileNameLower.endsWith(\".csv\")) {\n      return \"text/csv\";\n    } else if (fileNameLower.endsWith(\".png\")) {\n      return \"image/png\";\n    } else if (fileNameLower.endsWith(\".jpg\") || fileNameLower.endsWith(\".jpeg\")) {\n      return \"image/jpeg\";\n    } else if (fileNameLower.endsWith(\".gif\")) {\n      return \"image/gif\";\n    }\n    return null;\n  }\n\n  constructor(private readonly _request: FileDownloadRequest) {}\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FileDownloadBuilder } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadBuilder\";\nimport { FileDownloadRequest } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadRequest\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Injectable()\nexport class WebFileDownloadService implements FileDownloadService {\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  download(request: FileDownloadRequest): void {\n    const builder = new FileDownloadBuilder(request);\n    const a = window.document.createElement(\"a\");\n    if (builder.downloadMethod === \"save\") {\n      a.download = request.fileName;\n    } else if (!this.platformUtilsService.isSafari()) {\n      a.target = \"_blank\";\n    }\n    a.href = URL.createObjectURL(builder.blob);\n    a.style.position = \"fixed\";\n    window.document.body.appendChild(a);\n    a.click();\n    window.document.body.removeChild(a);\n  }\n}\n","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  Mobile = \"mobile\",\n  Cli = \"cli\",\n  DirectoryConnector = \"connector\",\n}\n","import { Injectable } from \"@angular/core\";\nimport Swal, { SweetAlertIcon } from \"sweetalert2\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ClientType } from \"@bitwarden/common/enums/clientType\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\n\n@Injectable()\nexport class WebPlatformUtilsService implements PlatformUtilsService {\n  private browserCache: DeviceType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.browserCache != null) {\n      return this.browserCache;\n    }\n\n    if (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    ) {\n      this.browserCache = DeviceType.FirefoxBrowser;\n    } else if (navigator.userAgent.indexOf(\" OPR/\") >= 0) {\n      this.browserCache = DeviceType.OperaBrowser;\n    } else if (navigator.userAgent.indexOf(\" Edg/\") !== -1) {\n      this.browserCache = DeviceType.EdgeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Vivaldi/\") !== -1) {\n      this.browserCache = DeviceType.VivaldiBrowser;\n    } else if (\n      navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n      navigator.userAgent.indexOf(\"Chrome\") === -1\n    ) {\n      this.browserCache = DeviceType.SafariBrowser;\n    } else if ((window as any).chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1) {\n      this.browserCache = DeviceType.ChromeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Trident/\") !== -1) {\n      this.browserCache = DeviceType.IEBrowser;\n    } else {\n      this.browserCache = DeviceType.UnknownBrowser;\n    }\n\n    return this.browserCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"browser\", \"\");\n  }\n\n  getClientType() {\n    return ClientType.Web;\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxBrowser;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeBrowser;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeBrowser;\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaBrowser;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiBrowser;\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariBrowser;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  isViewOpen(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  launchUri(uri: string, options?: any): void {\n    const a = document.createElement(\"a\");\n    a.href = uri;\n    if (options == null || !options.sameWindow) {\n      a.target = \"_blank\";\n      a.rel = \"noreferrer noopener\";\n    }\n    a.classList.add(\"d-none\");\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(process.env.APPLICATION_VERSION || \"-\");\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  async showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml = false\n  ) {\n    let iconClasses: string = null;\n    if (type != null) {\n      // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n      switch (type) {\n        case \"success\":\n          iconClasses = \"bwi-check text-success\";\n          break;\n        case \"warning\":\n          iconClasses = \"bwi-exclamation-triangle text-warning\";\n          break;\n        case \"error\":\n          iconClasses = \"bwi-error text-danger\";\n          break;\n        case \"info\":\n          iconClasses = \"bwi-info-circle text-info\";\n          break;\n        default:\n          break;\n      }\n    }\n\n    const bootstrapModal = document.querySelector(\"div.modal\");\n    if (bootstrapModal != null) {\n      bootstrapModal.removeAttribute(\"tabindex\");\n    }\n\n    const iconHtmlStr =\n      iconClasses != null ? `<i class=\"swal-custom-icon bwi ${iconClasses}\"></i>` : undefined;\n    const confirmed = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n      iconHtml: iconHtmlStr,\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      titleText: title,\n      showCancelButton: cancelText != null,\n      cancelButtonText: cancelText,\n      showConfirmButton: true,\n      confirmButtonText: confirmText == null ? this.i18nService.t(\"ok\") : confirmText,\n    });\n\n    if (bootstrapModal != null) {\n      bootstrapModal.setAttribute(\"tabindex\", \"-1\");\n    }\n\n    return confirmed.value;\n  }\n\n  isDev(): boolean {\n    return process.env.NODE_ENV === \"development\";\n  }\n\n  isSelfHost(): boolean {\n    return process.env.ENV.toString() === \"selfhosted\";\n  }\n\n  copyToClipboard(text: string, options?: any): void | boolean {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      let copyEl = doc.body;\n      // For some reason copy command won't work when modal is open if appending to body\n      if (doc.body.classList.contains(\"modal-open\")) {\n        copyEl = doc.body.querySelector<HTMLElement>(\".modal\");\n      }\n      copyEl.appendChild(textarea);\n      textarea.select();\n      let success = false;\n      try {\n        // Security exception may be thrown by some browsers.\n        success = doc.execCommand(\"copy\");\n        if (!success) {\n          this.logService.debug(\"Copy command unsupported or disabled.\");\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        copyEl.removeChild(textarea);\n      }\n      return success;\n    }\n  }\n\n  readFromClipboard(options?: any): Promise<string> {\n    throw new Error(\"Cannot read from clipboard on web.\");\n  }\n\n  supportsBiometric() {\n    return Promise.resolve(false);\n  }\n\n  authenticateBiometric() {\n    return Promise.resolve(false);\n  }\n\n  supportsSecureStorage() {\n    return false;\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { APP_INITIALIZER, NgModule, Optional, SkipSelf } from \"@angular/core\";\n\nimport {\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n  LOCALES_DIRECTORY,\n  SYSTEM_LANGUAGE,\n  MEMORY_STORAGE,\n} from \"@bitwarden/angular/services/injection-tokens\";\nimport { JslibServicesModule } from \"@bitwarden/angular/services/jslib-services.module\";\nimport { ModalService as ModalServiceAbstraction } from \"@bitwarden/angular/services/modal.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService as BaseStateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { MemoryStorageService } from \"@bitwarden/common/services/memoryStorage.service\";\n\nimport { BroadcasterMessagingService } from \"./broadcaster-messaging.service\";\nimport { EventService } from \"./event.service\";\nimport { HtmlStorageService } from \"./html-storage.service\";\nimport { I18nService } from \"./i18n.service\";\nimport { InitService } from \"./init.service\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./password-reprompt.service\";\nimport { PolicyListService } from \"./policy-list.service\";\nimport { RouterService } from \"./router.service\";\nimport { Account, GlobalState, StateService } from \"./state\";\nimport { StateMigrationService } from \"./state-migration.service\";\nimport { WebFileDownloadService } from \"./web-file-download.service\";\nimport { WebPlatformUtilsService } from \"./web-platform-utils.service\";\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, JslibServicesModule],\n  providers: [\n    InitService,\n    RouterService,\n    EventService,\n    PolicyListService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (initService: InitService) => initService.init(),\n      deps: [InitService],\n      multi: true,\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: false,\n    },\n    {\n      provide: I18nServiceAbstraction,\n      useClass: I18nService,\n      deps: [SYSTEM_LANGUAGE, LOCALES_DIRECTORY],\n    },\n    { provide: AbstractStorageService, useClass: HtmlStorageService },\n    {\n      provide: SECURE_STORAGE,\n      // TODO: platformUtilsService.isDev has a helper for this, but using that service here results in a circular dependency.\n      // We have a tech debt item in the backlog to break up platformUtilsService, but in the meantime simply checking the environement here is less cumbersome.\n      useClass: process.env.NODE_ENV === \"development\" ? HtmlStorageService : MemoryStorageService,\n    },\n    {\n      provide: MEMORY_STORAGE,\n      useClass: MemoryStorageService,\n    },\n    {\n      provide: PlatformUtilsServiceAbstraction,\n      useClass: WebPlatformUtilsService,\n    },\n    { provide: MessagingServiceAbstraction, useClass: BroadcasterMessagingService },\n    { provide: ModalServiceAbstraction, useClass: ModalService },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    StateService,\n    {\n      provide: BaseStateServiceAbstraction,\n      useExisting: StateService,\n    },\n    {\n      provide: PasswordRepromptServiceAbstraction,\n      useClass: PasswordRepromptService,\n    },\n    {\n      provide: FileDownloadService,\n      useClass: WebFileDownloadService,\n    },\n  ],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule?: CoreModule) {\n    if (parentModule) {\n      throw new Error(\"CoreModule is already loaded. Import it in the AppModule only\");\n    }\n  }\n}\n","import {\n  flagEnabled as baseFlagEnabled,\n  devFlagEnabled as baseDevFlagEnabled,\n  devFlagValue as baseDevFlagValue,\n  SharedFlags,\n  SharedDevFlags,\n} from \"@bitwarden/common/misc/flags\";\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable-next-line @typescript-eslint/ban-types */\nexport type Flags = {\n  showTrial?: boolean;\n  showPasswordless?: boolean;\n} & SharedFlags;\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable-next-line @typescript-eslint/ban-types */\nexport type DevFlags = {} & SharedDevFlags;\n\nexport function flagEnabled(flag: keyof Flags): boolean {\n  return baseFlagEnabled<Flags>(flag);\n}\n\nexport function devFlagEnabled(flag: keyof DevFlags) {\n  return baseDevFlagEnabled<DevFlags>(flag);\n}\n\nexport function devFlagValue(flag: keyof DevFlags) {\n  return baseDevFlagValue(flag);\n}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { GlobalState as BaseGlobalState } from \"@bitwarden/common/models/domain/global-state\";\n\nexport class GlobalState extends BaseGlobalState {\n  theme?: ThemeType = ThemeType.Light;\n  rememberEmail = true;\n}\n","import { I18nService as BaseI18nService } from \"@bitwarden/common/services/i18n.service\";\n\nexport class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string, localesDirectory: string) {\n    super(systemLanguage || \"en-US\", localesDirectory, async (formattedLocale: string) => {\n      const filePath =\n        this.localesDirectory +\n        \"/\" +\n        formattedLocale +\n        \"/messages.json?cache=\" +\n        process.env.CACHE_TAG;\n      const localesResult = await fetch(filePath);\n      const locales = await localesResult.json();\n      return locales;\n    });\n\n    // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n    this.supportedTranslationLocales = [\n      \"en\",\n      \"af\",\n      \"ar\",\n      \"az\",\n      \"be\",\n      \"bg\",\n      \"bn\",\n      \"bs\",\n      \"ca\",\n      \"cs\",\n      \"da\",\n      \"de\",\n      \"el\",\n      \"en-GB\",\n      \"en-IN\",\n      \"eo\",\n      \"es\",\n      \"et\",\n      \"eu\",\n      \"fi\",\n      \"fil\",\n      \"fr\",\n      \"he\",\n      \"hi\",\n      \"hr\",\n      \"hu\",\n      \"id\",\n      \"it\",\n      \"ja\",\n      \"ka\",\n      \"km\",\n      \"kn\",\n      \"ko\",\n      \"lv\",\n      \"ml\",\n      \"nb\",\n      \"nl\",\n      \"nn\",\n      \"pl\",\n      \"pt-PT\",\n      \"pt-BR\",\n      \"ro\",\n      \"ru\",\n      \"si\",\n      \"sk\",\n      \"sl\",\n      \"sr\",\n      \"sv\",\n      \"tr\",\n      \"uk\",\n      \"vi\",\n      \"zh-CN\",\n      \"zh-TW\",\n    ];\n  }\n}\n","import { Observable, ReplaySubject } from \"rxjs\";\n\nimport { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  private _locale = new ReplaySubject<string>(1);\n  locale$: Observable<string> = this._locale.asObservable();\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"ar\", \"العربية الفصحى\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"eu\", \"euskara\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.translationLocale = locale != null ? locale : this.systemLanguage;\n    this._locale.next(this.translationLocale);\n\n    try {\n      this.collator = new Intl.Collator(this.translationLocale, {\n        numeric: true,\n        sensitivity: \"base\",\n      });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.supportedTranslationLocales[0];\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n        await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string, p2?: string, p3?: string): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1);\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2);\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3);\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import { StateMigrationService as BaseStateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\n\nimport { Account } from \"./state/account\";\nimport { GlobalState } from \"./state/global-state\";\n\nexport class StateMigrationService extends BaseStateMigrationService<GlobalState, Account> {\n  protected async migrationStateFrom1To2(): Promise<void> {\n    await super.migrateStateFrom1To2();\n    const globals = (await this.get<GlobalState>(\"global\")) ?? this.stateFactory.createGlobal(null);\n    globals.rememberEmail = (await this.get<boolean>(\"rememberEmail\")) ?? globals.rememberEmail;\n    await this.set(\"global\", globals);\n  }\n}\n","export class EmergencyAccessAcceptRequest {\n  token: string;\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Directive()\nexport abstract class BaseAcceptComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  actionPromise: Promise<any>;\n\n  protected requiredParameters: string[] = [];\n  protected failedShortMessage = \"inviteAcceptFailedShort\";\n  protected failedMessage = \"inviteAcceptFailed\";\n\n  constructor(\n    protected router: Router,\n    protected platformUtilService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService\n  ) {}\n\n  abstract authedHandler(qParams: Params): Promise<void>;\n  abstract unauthedHandler(qParams: Params): Promise<void>;\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      let error = this.requiredParameters.some((e) => qParams?.[e] == null || qParams[e] === \"\");\n      let errorMessage: string = null;\n      if (!error) {\n        this.authed = await this.stateService.getIsAuthenticated();\n\n        if (this.authed) {\n          try {\n            await this.authedHandler(qParams);\n          } catch (e) {\n            error = true;\n            errorMessage = e.message;\n          }\n        } else {\n          this.email = qParams.email;\n          await this.unauthedHandler(qParams);\n        }\n      }\n\n      if (error) {\n        const message =\n          errorMessage != null\n            ? this.i18nService.t(this.failedShortMessage, errorMessage)\n            : this.i18nService.t(this.failedMessage);\n        this.platformUtilService.showToast(\"error\", null, message, { timeout: 10000 });\n        this.router.navigate([\"/\"]);\n      }\n\n      this.loading = false;\n    });\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"emergencyAccess\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ name }}\n          </p>\n          <p>{{ \"acceptEmergencyAccess\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EmergencyAccessAcceptRequest } from \"@bitwarden/common/models/request/emergency-access-accept.request\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-emergency\",\n  templateUrl: \"accept-emergency.component.html\",\n})\nexport class AcceptEmergencyComponent extends BaseAcceptComponent {\n  name: string;\n\n  protected requiredParameters: string[] = [\"id\", \"name\", \"email\", \"token\"];\n  protected failedShortMessage = \"emergencyInviteAcceptFailedShort\";\n  protected failedMessage = \"emergencyInviteAcceptFailed\";\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params): Promise<void> {\n    const request = new EmergencyAccessAcceptRequest();\n    request.token = qParams.token;\n    this.actionPromise = this.apiService.postEmergencyAccessAccept(qParams.id, request);\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"emergencyInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params): Promise<void> {\n    this.name = qParams.name;\n    if (this.name != null) {\n      // Fix URL encoding of space issue with Angular\n      this.name = this.name.replace(/\\+/g, \" \");\n    }\n  }\n}\n","export class OrganizationUserAcceptRequest {\n  token: string;\n  // Used to auto-enroll in master password reset\n  resetPasswordKey: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img src=\"../../images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinOrganization\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ orgName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinOrganizationDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { OrganizationUserAcceptRequest } from \"@bitwarden/common/models/request/organization-user-accept.request\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-organization\",\n  templateUrl: \"accept-organization.component.html\",\n})\nexport class AcceptOrganizationComponent extends BaseAcceptComponent {\n  orgName: string;\n\n  protected requiredParameters: string[] = [\"organizationId\", \"organizationUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService,\n    private cryptoService: CryptoService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params): Promise<void> {\n    this.actionPromise = this.prepareAcceptRequest(qParams).then(async (request) => {\n      await this.apiService.postOrganizationUserAccept(\n        qParams.organizationId,\n        qParams.organizationUserId,\n        request\n      );\n    });\n\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"inviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n\n    await this.stateService.setOrganizationInvitation(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params): Promise<void> {\n    this.orgName = qParams.organizationName;\n    if (this.orgName != null) {\n      // Fix URL encoding of space issue with Angular\n      this.orgName = this.orgName.replace(/\\+/g, \" \");\n    }\n    await this.stateService.setOrganizationInvitation(qParams);\n  }\n\n  private async prepareAcceptRequest(qParams: Params): Promise<OrganizationUserAcceptRequest> {\n    const request = new OrganizationUserAcceptRequest();\n    request.token = qParams.token;\n\n    if (await this.performResetPasswordAutoEnroll(qParams)) {\n      const response = await this.organizationApiService.getKeys(qParams.organizationId);\n\n      if (response == null) {\n        throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n      }\n\n      const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n      // RSA Encrypt user's encKey.key with organization public key\n      const encKey = await this.cryptoService.getEncKey();\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Add reset password key to accept request\n      request.resetPasswordKey = encryptedKey.encryptedString;\n    }\n    return request;\n  }\n\n  private async performResetPasswordAutoEnroll(qParams: Params): Promise<boolean> {\n    let policyList: Policy[] = null;\n    try {\n      const policies = await this.policyApiService.getPoliciesByToken(\n        qParams.organizationId,\n        qParams.token,\n        qParams.email,\n        qParams.organizationUserId\n      );\n      policyList = this.policyService.mapPoliciesFromToken(policies);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (policyList != null) {\n      const result = this.policyService.getResetPasswordPolicyOptions(\n        policyList,\n        qParams.organizationId\n      );\n      // Return true if policy enabled and auto-enroll enabled\n      return result[1] && result[0].autoEnrollEnabled;\n    }\n\n    return false;\n  }\n}\n","export class PasswordHintRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { HintComponent as BaseHintComponent } from \"@bitwarden/angular/components/hint.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-hint\",\n  templateUrl: \"hint.component.html\",\n})\nexport class HintComponent extends BaseHintComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(router, i18nService, apiService, platformUtilsService, logService);\n  }\n}\n","import { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PasswordHintRequest } from \"@bitwarden/common/models/request/password-hint.request\";\n\nexport class HintComponent {\n  email = \"\";\n  formPromise: Promise<any>;\n\n  protected successRoute = \"login\";\n  protected onSuccessfulSubmit: () => void;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"masterPassSent\"));\n      if (this.onSuccessfulSubmit != null) {\n        this.onSuccessfulSubmit();\n      } else if (this.router != null) {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"passwordHint\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n            <small class=\"form-text text-muted\">{{ \"enterEmailToGetHint\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Directive, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subject } from \"rxjs\";\nimport { concatMap, take, takeUntil } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { KeySuffixOptions } from \"@bitwarden/common/enums/keySuffixOptions\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\n\n@Directive()\nexport class LockComponent implements OnInit, OnDestroy {\n  masterPassword = \"\";\n  pin = \"\";\n  showPassword = false;\n  email: string;\n  pinLock = false;\n  webVaultHostname = \"\";\n  formPromise: Promise<any>;\n  supportsBiometric: boolean;\n  biometricLock: boolean;\n  biometricText: string;\n  hideInput: boolean;\n\n  protected successRoute = \"vault\";\n  protected onSuccessfulSubmit: () => Promise<void>;\n\n  private invalidPinAttempts = 0;\n  private pinSet: [boolean, boolean];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected cryptoService: CryptoService,\n    protected vaultTimeoutService: VaultTimeoutService,\n    protected vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected apiService: ApiService,\n    protected logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    protected ngZone: NgZone\n  ) {}\n\n  async ngOnInit() {\n    this.stateService.activeAccount$\n      .pipe(\n        concatMap(async () => {\n          await this.load();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async submit() {\n    if (this.pinLock) {\n      return await this.handlePinRequiredUnlock();\n    }\n\n    await this.handleMasterPasswordRequiredUnlock();\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const success = (await this.cryptoService.getKey(KeySuffixOptions.Biometric)) != null;\n\n    if (success) {\n      await this.doContinue();\n    }\n\n    return success;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    const input = document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\");\n    if (this.ngZone.isStable) {\n      input.focus();\n    } else {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => input.focus());\n    }\n  }\n\n  private async handlePinRequiredUnlock() {\n    if (this.pin == null || this.pin === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"pinRequired\")\n      );\n      return;\n    }\n\n    return await this.doUnlockWithPin();\n  }\n\n  private async doUnlockWithPin() {\n    let failed = true;\n    try {\n      const kdf = await this.stateService.getKdfType();\n      const kdfIterations = await this.stateService.getKdfIterations();\n      if (this.pinSet[0]) {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfIterations,\n          await this.stateService.getDecryptedPinProtected()\n        );\n        const encKey = await this.cryptoService.getEncKey(key);\n        const protectedPin = await this.stateService.getProtectedPin();\n        const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n        failed = decPin !== this.pin;\n        if (!failed) {\n          await this.setKeyAndContinue(key);\n        }\n      } else {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfIterations\n        );\n        failed = false;\n        await this.setKeyAndContinue(key);\n      }\n    } catch {\n      failed = true;\n    }\n\n    if (failed) {\n      this.invalidPinAttempts++;\n      if (this.invalidPinAttempts >= 5) {\n        this.messagingService.send(\"logout\");\n        return;\n      }\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidPin\")\n      );\n    }\n  }\n\n  private async handleMasterPasswordRequiredUnlock() {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return;\n    }\n    await this.doUnlockWithMasterPassword();\n  }\n\n  private async doUnlockWithMasterPassword() {\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      kdf,\n      kdfIterations\n    );\n    const storedKeyHash = await this.cryptoService.getKeyHash();\n\n    let passwordValid = false;\n\n    if (storedKeyHash != null) {\n      passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n    } else {\n      const request = new SecretVerificationRequest();\n      const serverKeyHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      request.masterPasswordHash = serverKeyHash;\n      try {\n        this.formPromise = this.apiService.postAccountVerifyPassword(request);\n        await this.formPromise;\n        passwordValid = true;\n        const localKeyHash = await this.cryptoService.hashPassword(\n          this.masterPassword,\n          key,\n          HashPurpose.LocalAuthorization\n        );\n        await this.cryptoService.setKeyHash(localKeyHash);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (!passwordValid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    if (this.pinSet[0]) {\n      const protectedPin = await this.stateService.getProtectedPin();\n      const encKey = await this.cryptoService.getEncKey(key);\n      const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n      const pinKey = await this.cryptoService.makePinKey(decPin, this.email, kdf, kdfIterations);\n      await this.stateService.setDecryptedPinProtected(\n        await this.cryptoService.encrypt(key.key, pinKey)\n      );\n    }\n    await this.setKeyAndContinue(key);\n  }\n  private async setKeyAndContinue(key: SymmetricCryptoKey) {\n    await this.cryptoService.setKey(key);\n    await this.doContinue();\n  }\n\n  private async doContinue() {\n    await this.stateService.setEverBeenUnlocked(true);\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    this.messagingService.send(\"unlocked\");\n    if (this.onSuccessfulSubmit != null) {\n      await this.onSuccessfulSubmit();\n    } else if (this.router != null) {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  private async load() {\n    this.pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n    this.pinLock =\n      (this.pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) ||\n      this.pinSet[1];\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometricLock =\n      (await this.vaultTimeoutSettingsService.isBiometricLockSet()) &&\n      ((await this.cryptoService.hasKeyStored(KeySuffixOptions.Biometric)) ||\n        !this.platformUtilsService.supportsSecureStorage());\n    this.biometricText = await this.stateService.getBiometricText();\n    this.email = await this.stateService.getEmail();\n    const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.hideInput = usesKeyConnector && !this.pinLock;\n\n    // Users with key connector and without biometric or pin has no MP to unlock using\n    if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n      await this.vaultTimeoutService.logOut();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const vaultUrl =\n      webVaultUrl === \"https://vault.bitwarden.com\" ? \"https://bitwarden.com\" : webVaultUrl;\n    this.webVaultHostname = Utils.getHostname(vaultUrl);\n  }\n}\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LockComponent as BaseLockComponent } from \"@bitwarden/angular/components/lock.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\n\nimport { RouterService } from \"../core\";\n\n@Component({\n  selector: \"app-lock\",\n  templateUrl: \"lock.component.html\",\n})\nexport class LockComponent extends BaseLockComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    cryptoService: CryptoService,\n    vaultTimeoutService: VaultTimeoutService,\n    vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    environmentService: EnvironmentService,\n    private routerService: RouterService,\n    stateService: StateService,\n    apiService: ApiService,\n    logService: LogService,\n    keyConnectorService: KeyConnectorService,\n    ngZone: NgZone\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      messagingService,\n      cryptoService,\n      vaultTimeoutService,\n      vaultTimeoutSettingsService,\n      environmentService,\n      stateService,\n      apiService,\n      logService,\n      keyConnectorService,\n      ngZone\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.onSuccessfulSubmit = async () => {\n      const previousUrl = this.routerService.getPreviousUrl();\n      if (previousUrl && previousUrl !== \"/\" && previousUrl.indexOf(\"lock\") === -1) {\n        this.successRoute = previousUrl;\n      }\n      this.router.navigateByUrl(this.successRoute);\n    };\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"text-center mb-4\">\n        <i class=\"bwi bwi-lock bwi-4x text-muted\" aria-hidden=\"true\"></i>\n      </p>\n      <p class=\"lead text-center mx-4 mb-4\">{{ \"yourVaultIsLocked\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appAutofocus\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n            <small class=\"text-muted form-text\">\n              {{ \"loggedInAsEmailOn\" | i18n: email:webVaultHostname }}\n            </small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-unlock\" aria-hidden=\"true\"></i> {{ \"unlock\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { I18nService } from \"../abstractions/i18n.service\";\n\nimport { IFrameComponent } from \"./iframe_component\";\n\nexport class CaptchaIFrame extends IFrameComponent {\n  constructor(\n    win: Window,\n    webVaultUrl: string,\n    private i18nService: I18nService,\n    successCallback: (message: string) => any,\n    errorCallback: (message: string) => any,\n    infoCallback: (message: string) => any\n  ) {\n    super(\n      win,\n      webVaultUrl,\n      \"captcha-connector.html\",\n      \"hcaptcha_iframe\",\n      successCallback,\n      errorCallback,\n      (message: string) => {\n        const parsedMessage = JSON.parse(message);\n        if (typeof parsedMessage !== \"string\") {\n          this.iframe.height = parsedMessage.height.toString();\n          this.iframe.width = parsedMessage.width.toString();\n        } else {\n          infoCallback(parsedMessage);\n        }\n      }\n    );\n  }\n\n  init(siteKey: string): void {\n    super.initComponent(\n      this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1)\n    );\n  }\n}\n","export abstract class IFrameComponent {\n  iframe: HTMLIFrameElement;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    protected webVaultUrl: string,\n    private path: string,\n    private iframeId: string,\n    public successCallback?: (message: string) => any,\n    public errorCallback?: (message: string) => any,\n    public infoCallback?: (message: string) => any\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  protected createParams(data: any, version: number) {\n    return new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      v: version.toString(),\n    });\n  }\n\n  protected initComponent(params: URLSearchParams): void {\n    this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n    this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n    this.iframe.src = this.connectorLink.href;\n\n    this.win.addEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","export enum AuthRequestType {\n  AuthenticateAndUnlock = 0,\n  Unlock = 1,\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CaptchaIFrame } from \"@bitwarden/common/misc/captcha_iframe\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n  @Input() captchaSiteKey: string = null;\n  captchaToken: string = null;\n  captcha: CaptchaIFrame;\n\n  constructor(\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async setupCaptcha() {\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n    this.captcha = new CaptchaIFrame(\n      window,\n      webVaultUrl,\n      this.i18nService,\n      (token: string) => {\n        this.captchaToken = token;\n      },\n      (error: string) => {\n        this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n      },\n      (info: string) => {\n        this.platformUtilsService.showToast(\"info\", this.i18nService.t(\"info\"), info);\n      }\n    );\n  }\n\n  showCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  protected handleCaptchaRequired(response: { captchaSiteKey: string }): boolean {\n    if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n      return false;\n    }\n\n    this.captchaSiteKey = response.captchaSiteKey;\n    this.captcha.init(response.captchaSiteKey);\n    return true;\n  }\n}\n","import { AuthenticationType } from \"../../enums/authenticationType\";\nimport { TokenTwoFactorRequest } from \"../request/identity-token/token-two-factor.request\";\n\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class PasswordLogInCredentials {\n  readonly type = AuthenticationType.Password;\n\n  constructor(\n    public email: string,\n    public masterPassword: string,\n    public captchaToken?: string,\n    public twoFactor?: TokenTwoFactorRequest\n  ) {}\n}\n\nexport class SsoLogInCredentials {\n  readonly type = AuthenticationType.Sso;\n\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUrl: string,\n    public orgId: string,\n    public twoFactor?: TokenTwoFactorRequest\n  ) {}\n}\n\nexport class ApiLogInCredentials {\n  readonly type = AuthenticationType.Api;\n\n  constructor(public clientId: string, public clientSecret: string) {}\n}\n\nexport class PasswordlessLogInCredentials {\n  readonly type = AuthenticationType.Passwordless;\n\n  constructor(\n    public email: string,\n    public accessCode: string,\n    public authRequestId: string,\n    public decKey: SymmetricCryptoKey,\n    public localPasswordHash: string,\n    public twoFactor?: TokenTwoFactorRequest\n  ) {}\n}\n","import { AuthRequestType } from \"../../enums/authRequestType\";\n\nexport class PasswordlessCreateAuthRequest {\n  constructor(\n    readonly email: string,\n    readonly deviceIdentifier: string,\n    readonly publicKey: string,\n    readonly type: AuthRequestType,\n    readonly accessCode: string,\n    readonly fingerprintPhrase: string\n  ) {}\n}\n","<div\n  class=\"tw-mx-auto tw-mt-5 tw-flex tw-max-w-lg tw-flex-col tw-items-center tw-justify-center tw-p-8\"\n>\n  <div>\n    <img class=\"logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"tw-mx-4 tw-mt-3 tw-mb-4 tw-text-center tw-text-xl\">\n      {{ \"loginOrCreateNewAccount\" | i18n }}\n    </p>\n\n    <div\n      class=\"tw-mt-3 tw-rounded-md tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-6\"\n    >\n      <h2 class=\"tw-mb-6 tw-text-xl tw-font-semibold\">{{ \"logInInitiated\" | i18n }}</h2>\n\n      <div class=\"tw-text-light\">\n        <p class=\"tw-mb-6\">{{ \"notificationSentDevice\" | i18n }}</p>\n\n        <p class=\"tw-mb-6\">\n          {{ \"fingerprintMatchInfo\" | i18n }}\n        </p>\n      </div>\n\n      <div class=\"tw-mb-6\">\n        <h4 class=\"tw-font-semibold\">{{ \"fingerprintPhraseHeader\" | i18n }}</h4>\n        <p>\n          <code>{{ passwordlessRequest?.fingerprintPhrase }}</code>\n        </p>\n      </div>\n\n      <div class=\"tw-my-10\" *ngIf=\"showResendNotification\">\n        <a [routerLink]=\"[]\" disabled=\"true\" (click)=\"startPasswordlessLogin()\">{{\n          \"resendNotification\" | i18n\n        }}</a>\n      </div>\n\n      <hr />\n\n      <div class=\"tw-text-light tw-mt-3\">\n        {{ \"loginWithDeviceEnabledInfo\" | i18n }}\n        <a routerLink=\"/login\">{{ \"viewAllLoginOptions\" | i18n }}</a>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { CaptchaProtectedComponent } from \"@bitwarden/angular/components/captchaProtected.component\";\nimport { AnonymousHubService } from \"@bitwarden/common/abstractions/anonymousHub.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { AuthRequestType } from \"@bitwarden/common/enums/authRequestType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { PasswordlessLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { PasswordlessCreateAuthRequest } from \"@bitwarden/common/models/request/passwordless-create-auth.request\";\nimport { AuthRequestResponse } from \"@bitwarden/common/models/response/auth-request.response\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\n\n@Component({\n  selector: \"app-login-with-device\",\n  templateUrl: \"login-with-device.component.html\",\n})\nexport class LoginWithDeviceComponent\n  extends CaptchaProtectedComponent\n  implements OnInit, OnDestroy\n{\n  private destroy$ = new Subject<void>();\n  email: string;\n  showResendNotification = false;\n  passwordlessRequest: PasswordlessCreateAuthRequest;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  private authRequestKeyPair: [publicKey: ArrayBuffer, privateKey: ArrayBuffer];\n\n  constructor(\n    private router: Router,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private appIdService: AppIdService,\n    private passwordGenerationService: PasswordGenerationService,\n    private apiService: ApiService,\n    private authService: AuthService,\n    private logService: LogService,\n    environmentService: EnvironmentService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private anonymousHubService: AnonymousHubService,\n    private validationService: ValidationService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n\n    const navigation = this.router.getCurrentNavigation();\n    if (navigation) {\n      this.email = navigation.extras?.state?.email;\n    }\n\n    //gets signalR push notification\n    this.authService\n      .getPushNotifcationObs$()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((id) => {\n        this.confirmResponse(id);\n      });\n  }\n\n  async ngOnInit() {\n    if (!this.email) {\n      this.router.navigate([\"/login\"]);\n      return;\n    }\n\n    this.startPasswordlessLogin();\n  }\n\n  async startPasswordlessLogin() {\n    this.showResendNotification = false;\n\n    try {\n      await this.buildAuthRequest();\n      const reqResponse = await this.apiService.postAuthRequest(this.passwordlessRequest);\n\n      if (reqResponse.id) {\n        this.anonymousHubService.createHubConnection(reqResponse.id);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    setTimeout(() => {\n      this.showResendNotification = true;\n    }, 12000);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.anonymousHubService.stopHubConnection();\n  }\n\n  private async confirmResponse(requestId: string) {\n    try {\n      const response = await this.apiService.getAuthResponse(\n        requestId,\n        this.passwordlessRequest.accessCode\n      );\n\n      if (!response.requestApproved) {\n        return;\n      }\n\n      const credentials = await this.buildLoginCredntials(requestId, response);\n      const loginResponse = await this.authService.logIn(credentials);\n\n      if (loginResponse.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (loginResponse.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (error) {\n      if (error instanceof ErrorResponse) {\n        this.router.navigate([\"/login\"]);\n        this.validationService.showError(error);\n        return;\n      }\n\n      this.logService.error(error);\n    }\n  }\n\n  private async buildAuthRequest() {\n    this.authRequestKeyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const fingerprint = await (\n      await this.cryptoService.getFingerprint(this.email, this.authRequestKeyPair[0])\n    ).join(\"-\");\n    const deviceIdentifier = await this.appIdService.getAppId();\n    const publicKey = Utils.fromBufferToB64(this.authRequestKeyPair[0]);\n    const accessCode = await this.passwordGenerationService.generatePassword({ length: 25 });\n\n    this.passwordlessRequest = new PasswordlessCreateAuthRequest(\n      this.email,\n      deviceIdentifier,\n      publicKey,\n      AuthRequestType.AuthenticateAndUnlock,\n      accessCode,\n      fingerprint\n    );\n  }\n\n  private async buildLoginCredntials(\n    requestId: string,\n    response: AuthRequestResponse\n  ): Promise<PasswordlessLogInCredentials> {\n    const decKey = await this.cryptoService.rsaDecrypt(response.key, this.authRequestKeyPair[1]);\n    const decMasterPasswordHash = await this.cryptoService.rsaDecrypt(\n      response.masterPasswordHash,\n      this.authRequestKeyPair[1]\n    );\n    const key = new SymmetricCryptoKey(decKey);\n    const localHashedPassword = Utils.fromBufferToUtf8(decMasterPasswordHash);\n\n    return new PasswordlessLogInCredentials(\n      this.email,\n      this.passwordlessRequest.accessCode,\n      requestId,\n      key,\n      localHashedPassword\n    );\n  }\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/auth-result\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n  showPassword = false;\n  formPromise: Promise<AuthResult>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n  selfHosted = false;\n\n  formGroup = this.formBuilder.group({\n    email: [\"\", [Validators.required, Validators.email]],\n    masterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n    rememberEmail: [true],\n  });\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected alwaysRememberEmail = false;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    protected stateService: StateService,\n    environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected ngZone: NgZone,\n    protected formBuilder: FormBuilder,\n    protected formValidationErrorService: FormValidationErrorsService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  get selfHostedDomain() {\n    return this.environmentService.hasBaseUrl() ? this.environmentService.getWebVaultUrl() : null;\n  }\n\n  async ngOnInit() {\n    let email = this.formGroup.value.email;\n    if (email == null || email === \"\") {\n      email = await this.stateService.getRememberedEmail();\n      this.formGroup.get(\"email\")?.setValue(email);\n\n      if (email == null) {\n        this.formGroup.get(\"email\")?.setValue(\"\");\n      }\n    }\n    if (!this.alwaysRememberEmail) {\n      const rememberEmail = (await this.stateService.getRememberedEmail()) != null;\n      this.formGroup.get(\"rememberEmail\")?.setValue(rememberEmail);\n    }\n  }\n\n  async submit(showToast = true) {\n    const data = this.formGroup.value;\n\n    await this.setupCaptcha();\n\n    this.formGroup.markAllAsTouched();\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return;\n    }\n\n    //desktop, browser; This should be removed once all clients use reactive forms\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return;\n    }\n\n    try {\n      const credentials = new PasswordLogInCredentials(\n        data.email,\n        data.masterPassword,\n        this.captchaToken,\n        null\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (data.rememberEmail || this.alwaysRememberEmail) {\n        await this.stateService.setRememberedEmail(data.email);\n      } else {\n        await this.stateService.setRememberedEmail(null);\n      }\n      if (this.handleCaptchaRequired(response)) {\n        return;\n      } else if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    if (this.ngZone.isStable) {\n      document.getElementById(\"masterPassword\").focus();\n    } else {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => document.getElementById(\"masterPassword\").focus());\n    }\n  }\n\n  async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n    const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    // Save sso params\n    await this.stateService.setSsoState(state);\n    await this.stateService.setSsoCodeVerifier(ssoCodeVerifier);\n\n    // Build URI\n    const webUrl = this.environmentService.getWebVaultUrl();\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      webUrl +\n        \"/#/sso?clientId=\" +\n        clientId +\n        \"&redirectUri=\" +\n        encodeURIComponent(ssoRedirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  protected focusInput() {\n    const email = this.formGroup.value.email;\n    document.getElementById(email == null || email === \"\" ? \"email\" : \"masterPassword\").focus();\n  }\n}\n","<div\n  class=\"tw-mb-4 tw-box-border tw-rounded tw-border tw-border-l-8 tw-border-solid tw-border-secondary-300 tw-bg-background-alt tw-py-3 tw-px-5 tw-leading-5 tw-text-main\"\n  [ngClass]=\"calloutClass\"\n>\n  <h3\n    class=\"tw-mt-0 tw-mb-2 tw-text-base tw-font-bold tw-uppercase\"\n    [ngClass]=\"headerClass\"\n    *ngIf=\"title\"\n  >\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\ntype CalloutTypes = \"success\" | \"info\" | \"warning\" | \"danger\";\n\nconst defaultIcon: Record<CalloutTypes, string> = {\n  success: \"bwi-check\",\n  info: \"bwi-info-circle\",\n  warning: \"bwi-exclamation-triangle\",\n  danger: \"bwi-error\",\n};\n\nconst defaultI18n: Partial<Record<CalloutTypes, string>> = {\n  warning: \"warning\",\n  danger: \"error\",\n};\n\n@Component({\n  selector: \"bit-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type: CalloutTypes = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() useAlertRole = false;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.icon ??= defaultIcon[this.type];\n    if (this.title == null && defaultI18n[this.type] != null) {\n      this.title = this.i18nService.t(defaultI18n[this.type]);\n    }\n  }\n\n  get calloutClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"tw-border-l-danger-500\";\n      case \"info\":\n        return \"tw-border-l-info-500\";\n      case \"success\":\n        return \"tw-border-l-success-500\";\n      case \"warning\":\n        return \"tw-border-l-warning-500\";\n    }\n  }\n\n  get headerClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"!tw-text-danger\";\n      case \"info\":\n        return \"!tw-text-info\";\n      case \"success\":\n        return \"!tw-text-success\";\n      case \"warning\":\n        return \"!tw-text-warning\";\n    }\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"tw-container tw-mx-auto\"\n  [formGroup]=\"formGroup\"\n>\n  <div\n    class=\"tw-mx-auto tw-mt-5 tw-flex tw-max-w-lg tw-flex-col tw-items-center tw-justify-center tw-p-8\"\n  >\n    <div>\n      <img class=\"logo logo-themed\" alt=\"Bitwarden\" />\n      <p class=\"tw-mx-4 tw-mt-3 tw-mb-4 tw-text-center tw-text-xl\">\n        {{ \"loginOrCreateNewAccount\" | i18n }}\n      </p>\n      <div\n        class=\"tw-mt-3 tw-rounded-md tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-6\"\n      >\n        <bit-callout\n          type=\"warning\"\n          title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n          *ngIf=\"showResetPasswordAutoEnrollWarning\"\n        >\n          {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n        </bit-callout>\n\n        <div class=\"tw-mb-3\">\n          <bit-form-field>\n            <bit-label>{{ \"emailAddress\" | i18n }}</bit-label>\n            <input id=\"login_input_email\" bitInput type=\"email\" formControlName=\"email\" />\n          </bit-form-field>\n        </div>\n\n        <div class=\"tw-mb-3\">\n          <bit-form-field>\n            <bit-label>{{ \"masterPass\" | i18n }}</bit-label>\n            <input\n              id=\"login_input_master-password\"\n              bitInput\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              formControlName=\"masterPassword\"\n            />\n            <button type=\"button\" bitSuffix bitButton (click)=\"togglePassword()\">\n              <i\n                aria-hidden=\"true\"\n                class=\"bwi bwi-lg bwi-eye\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n            <bit-hint>\n              <a routerLink=\"/hint\">{{ \"getMasterPasswordHint\" | i18n }}</a>\n            </bit-hint>\n          </bit-form-field>\n        </div>\n\n        <div class=\"tw-mb-3 tw-flex tw-items-start\">\n          <div class=\"tw-flex tw-h-6 tw-items-center\">\n            <input\n              id=\"login_input_remember-email\"\n              class=\"tw-w-4 tw-rounded tw-border\"\n              bitInput\n              type=\"checkbox\"\n              formControlName=\"rememberEmail\"\n            />\n          </div>\n          <bit-label class=\"ml-2\">\n            {{ \"rememberEmail\" | i18n }}\n          </bit-label>\n        </div>\n\n        <hr />\n\n        <div [hidden]=\"!showCaptcha()\">\n          <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n        </div>\n\n        <div class=\"tw-mb-3 tw-flex tw-space-x-4\">\n          <button\n            bitButton\n            buttonType=\"primary\"\n            type=\"submit\"\n            [block]=\"true\"\n            [loading]=\"form.loading\"\n            [disabled]=\"form.loading\"\n          >\n            <span> <i class=\"bwi bwi-sign-in\"></i> {{ \"logIn\" | i18n }} </span>\n          </button>\n\n          <a bitButton buttonType=\"secondary\" routerLink=\"/register\" [block]=\"true\">\n            <i class=\"bwi bwi-pencil-square\"></i>\n            {{ \"createAccount\" | i18n }}\n          </a>\n        </div>\n\n        <div class=\"tw-mb-3\" *ngIf=\"!selfHosted && showPasswordless\">\n          <button\n            bitButton\n            type=\"button\"\n            buttonType=\"secondary\"\n            class=\"tw-w-full\"\n            (click)=\"startPasswordlessLogin()\"\n            [disabled]=\"form.loading\"\n          >\n            <span> <i class=\"bwi bwi-mobile\"></i> {{ \"loginWithDevice\" | i18n }} </span>\n          </button>\n        </div>\n\n        <div class=\"tw-mb-3\">\n          <a routerLink=\"/sso\" bitButton buttonType=\"secondary\" class=\"tw-w-full\">\n            <i class=\"bwi bwi-provider tw-mr-2\"></i>\n            {{ \"enterpriseSingleSignOn\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nimport { LoginComponent as BaseLoginComponent } from \"@bitwarden/angular/components/login.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\nimport { flagEnabled } from \"../../../utils/flags\";\nimport { RouterService, StateService } from \"../../core\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"login.component.html\",\n})\nexport class LoginComponent extends BaseLoginComponent implements OnInit, OnDestroy {\n  showResetPasswordAutoEnrollWarning = false;\n  enforcedPasswordPolicyOptions: MasterPasswordPolicyOptions;\n  policies: ListResponse<PolicyResponse>;\n  showPasswordless = false;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    private route: ActivatedRoute,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: InternalPolicyService,\n    logService: LogService,\n    ngZone: NgZone,\n    protected stateService: StateService,\n    private messagingService: MessagingService,\n    private routerService: RouterService,\n    formBuilder: FormBuilder,\n    formValidationErrorService: FormValidationErrorsService\n  ) {\n    super(\n      authService,\n      router,\n      platformUtilsService,\n      i18nService,\n      stateService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      logService,\n      ngZone,\n      formBuilder,\n      formValidationErrorService\n    );\n    this.onSuccessfulLogin = async () => {\n      this.messagingService.send(\"setFullWidth\");\n    };\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n    this.showPasswordless = flagEnabled(\"showPasswordless\");\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.formGroup.get(\"email\")?.setValue(qParams.email);\n      }\n      if (qParams.premium != null) {\n        this.routerService.setPreviousUrl(\"/settings/premium\");\n      } else if (qParams.org != null) {\n        const route = this.router.createUrlTree([\"create-organization\"], {\n          queryParams: { plan: qParams.org },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n\n      // Are they coming from an email for sponsoring a families organization\n      if (qParams.sponsorshipToken != null) {\n        const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n          queryParams: { token: qParams.sponsorshipToken },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      await super.ngOnInit();\n      const rememberEmail = await this.stateService.getRememberEmail();\n      this.formGroup.get(\"rememberEmail\")?.setValue(rememberEmail);\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      let policyList: Policy[] = null;\n      try {\n        this.policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        policyList = this.policyService.mapPoliciesFromToken(this.policies);\n      } catch (e) {\n        this.logService.error(e);\n      }\n\n      if (policyList != null) {\n        const resetPasswordPolicy = this.policyService.getResetPasswordPolicyOptions(\n          policyList,\n          invite.organizationId\n        );\n        // Set to true if policy enabled and auto-enroll enabled\n        this.showResetPasswordAutoEnrollWarning =\n          resetPasswordPolicy[1] && resetPasswordPolicy[0].autoEnrollEnabled;\n\n        this.policyService\n          .masterPasswordPolicyOptions$(policyList)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((enforcedPasswordPolicyOptions) => {\n            this.enforcedPasswordPolicyOptions = enforcedPasswordPolicyOptions;\n          });\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async goAfterLogIn() {\n    const masterPassword = this.formGroup.value.masterPassword;\n\n    // Check master password against policy\n    if (this.enforcedPasswordPolicyOptions != null) {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      const masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n\n      // If invalid, save policies and require update\n      if (\n        !this.policyService.evaluateMasterPassword(\n          masterPasswordScore,\n          masterPassword,\n          this.enforcedPasswordPolicyOptions\n        )\n      ) {\n        const policiesData: { [id: string]: PolicyData } = {};\n        this.policies.data.map((p) => (policiesData[p.id] = new PolicyData(p)));\n        await this.policyService.replace(policiesData);\n        this.router.navigate([\"update-password\"]);\n        return;\n      }\n    }\n\n    const previousUrl = this.routerService.getPreviousUrl();\n    if (previousUrl) {\n      this.router.navigateByUrl(previousUrl);\n    } else {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  async submit() {\n    const rememberEmail = this.formGroup.value.rememberEmail;\n\n    await this.stateService.setRememberEmail(rememberEmail);\n    if (!rememberEmail) {\n      await this.stateService.setRememberedEmail(null);\n    }\n    await super.submit(false);\n  }\n\n  async startPasswordlessLogin() {\n    this.formGroup.get(\"masterPassword\")?.clearValidators();\n    this.formGroup.get(\"masterPassword\")?.updateValueAndValidity();\n\n    if (!this.formGroup.valid) {\n      return;\n    }\n\n    const email = this.formGroup.get(\"email\").value;\n    this.router.navigate([\"/login-with-device\"], { state: { email: email } });\n  }\n\n  private getPasswordStrengthUserInput() {\n    const email = this.formGroup.value.email;\n    let userInput: string[] = [];\n    const atPosition = email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n}\n","export class DeleteRecoverRequest {\n  email: string;\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { DeleteRecoverRequest } from \"@bitwarden/common/models/request/delete-recover.request\";\n\n@Component({\n  selector: \"app-recover-delete\",\n  templateUrl: \"recover-delete.component.html\",\n})\nexport class RecoverDeleteComponent {\n  email: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new DeleteRecoverRequest();\n      request.email = this.email.trim().toLowerCase();\n      this.formPromise = this.apiService.postAccountRecoverDelete(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deleteRecoverEmailSent\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>{{ \"deleteRecoverDesc\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class TwoFactorRecoveryRequest extends SecretVerificationRequest {\n  recoveryCode: string;\n  email: string;\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorRecoveryRequest } from \"@bitwarden/common/models/request/two-factor-recovery.request\";\n\n@Component({\n  selector: \"app-recover-two-factor\",\n  templateUrl: \"recover-two-factor.component.html\",\n})\nexport class RecoverTwoFactorComponent {\n  email: string;\n  masterPassword: string;\n  recoveryCode: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private authService: AuthService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new TwoFactorRecoveryRequest();\n      request.recoveryCode = this.recoveryCode.replace(/\\s/g, \"\").toLowerCase();\n      request.email = this.email.trim().toLowerCase();\n      const key = await this.authService.makePreloginKey(this.masterPassword, request.email);\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n      this.formPromise = this.apiService.postTwoFactorRecover(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"twoStepRecoverDisabled\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"recoverAccountTwoStep\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>\n            {{ \"recoverAccountTwoStepDesc\" | i18n }}\n            <a\n              href=\"https://bitwarden.com/help/lost-two-step-device/\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              >{{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"password\"\n              name=\"MasterPassword\"\n              class=\"form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"recoveryCode\">{{ \"recoveryCodeTitle\" | i18n }}</label>\n            <input\n              id=\"recoveryCode\"\n              class=\"text-monospace form-control\"\n              type=\"text\"\n              name=\"RecoveryCode\"\n              [(ngModel)]=\"recoveryCode\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { CaptchaProtectedRequest } from \"./captcha-protected.request\";\nimport { KeysRequest } from \"./keys.request\";\nimport { ReferenceEventRequest } from \"./reference-event.request\";\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  token: string;\n  organizationUserId: string;\n\n  constructor(\n    public email: string,\n    public name: string,\n    public masterPasswordHash: string,\n    masterPasswordHint: string,\n    public key: string,\n    public kdf: KdfType,\n    public kdfIterations: number,\n    public referenceData: ReferenceEventRequest,\n    public captchaResponse: string\n  ) {\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { AbstractControl, UntypedFormGroup, ValidatorFn } from \"@angular/forms\";\n\nimport { FormGroupControls } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\n\nexport class InputsFieldMatch {\n  //check to ensure two fields do not have the same value\n  static validateInputsDoesntMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? {\n              inputsMatchError: {\n                message: errorMessage,\n              },\n            }\n          : null;\n      }\n\n      return null;\n    };\n  }\n\n  //check to ensure two fields have the same value\n  static validateInputsMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? null\n          : {\n              inputsDoesntMatchError: {\n                message: errorMessage,\n              },\n            };\n      }\n\n      return null;\n    };\n  }\n\n  //checks the formGroup if two fields have the same value and validation is controlled from either field\n  static validateFormInputsMatch(field: string, fieldMatchTo: string, errorMessage: string) {\n    return (formGroup: UntypedFormGroup) => {\n      const fieldCtrl = formGroup.controls[field];\n      const fieldMatchToCtrl = formGroup.controls[fieldMatchTo];\n\n      if (fieldCtrl.value !== fieldMatchToCtrl.value) {\n        fieldMatchToCtrl.setErrors({\n          inputsDoesntMatchError: {\n            message: errorMessage,\n          },\n        });\n      } else {\n        fieldMatchToCtrl.setErrors(null);\n      }\n    };\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { AbstractControl, UntypedFormBuilder, ValidatorFn, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keys.request\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/reference-event.request\";\nimport { RegisterRequest } from \"@bitwarden/common/models/request/register.request\";\nimport { RegisterResponse } from \"@bitwarden/common/models/response/authentication/register.response\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\nimport { InputsFieldMatch } from \"../validators/inputsFieldMatch.validator\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() isInTrialFlow = false;\n  @Output() createdAccount = new EventEmitter<string>();\n\n  showPassword = false;\n  formPromise: Promise<RegisterResponse>;\n  referenceData: ReferenceEventRequest;\n  showTerms = true;\n  showErrorSummary = false;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  formGroup = this.formBuilder.group(\n    {\n      email: [\"\", [Validators.required, Validators.email]],\n      name: [\"\"],\n      masterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      confirmMasterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      hint: [\n        null,\n        [\n          InputsFieldMatch.validateInputsDoesntMatch(\n            \"masterPassword\",\n            this.i18nService.t(\"hintEqualsPassword\")\n          ),\n        ],\n      ],\n      acceptPolicies: [false, [this.acceptPoliciesValidation()]],\n    },\n    {\n      validator: InputsFieldMatch.validateFormInputsMatch(\n        \"masterPassword\",\n        \"confirmMasterPassword\",\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      ),\n    }\n  );\n\n  protected successRoute = \"login\";\n\n  protected accountCreated = false;\n\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected formValidationErrorService: FormValidationErrorsService,\n    protected formBuilder: UntypedFormBuilder,\n    protected authService: AuthService,\n    protected router: Router,\n    i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    protected passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    protected logService: LogService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.showTerms = !platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.setupCaptcha();\n  }\n\n  async submit(showToast = true) {\n    let email = this.formGroup.value.email;\n    email = email.trim().toLowerCase();\n    let name = this.formGroup.value.name;\n    name = name === \"\" ? null : name; // Why do we do this?\n    const masterPassword = this.formGroup.value.masterPassword;\n    try {\n      if (!this.accountCreated) {\n        const registerResponse = await this.registerAccount(\n          await this.buildRegisterRequest(email, masterPassword, name),\n          showToast\n        );\n        if (!registerResponse.successful) {\n          return;\n        }\n        this.captchaBypassToken = registerResponse.captchaBypassToken;\n        this.accountCreated = true;\n      }\n      if (this.isInTrialFlow) {\n        if (!this.accountCreated) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"trialAccountCreated\")\n          );\n        }\n        const loginResponse = await this.logIn(email, masterPassword, this.captchaBypassToken);\n        if (loginResponse.captchaRequired) {\n          return;\n        }\n        this.createdAccount.emit(this.formGroup.value.email);\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"newAccountCreated\")\n        );\n        this.router.navigate([this.successRoute], { queryParams: { email: email } });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        case \"inputsDoesntMatchError\":\n          return this.i18nService.t(\"masterPassDoesntMatch\");\n        case \"inputsMatchError\":\n          return this.i18nService.t(\"hintEqualsPassword\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  //validation would be ignored on selfhosted\n  private acceptPoliciesValidation(): ValidatorFn {\n    return (control: AbstractControl) => {\n      const ctrlValue = control.value;\n\n      return !ctrlValue && this.showTerms ? { required: true } : null;\n    };\n  }\n\n  private async validateRegistration(showToast: boolean): Promise<{ isValid: boolean }> {\n    this.formGroup.markAllAsTouched();\n    this.showErrorSummary = true;\n\n    if (this.formGroup.get(\"acceptPolicies\").hasError(\"required\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"acceptPoliciesRequired\")\n      );\n      return { isValid: false };\n    }\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return { isValid: false };\n    }\n\n    //desktop, browser\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return { isValid: false };\n    }\n\n    if (this.passwordStrengthResult != null && this.passwordStrengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return { isValid: false };\n      }\n    }\n    return { isValid: true };\n  }\n\n  private async buildRegisterRequest(\n    email: string,\n    masterPassword: string,\n    name: string\n  ): Promise<RegisterRequest> {\n    const hint = this.formGroup.value.hint;\n    const kdf = DEFAULT_KDF_TYPE;\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new RegisterRequest(\n      email,\n      name,\n      hashedPassword,\n      hint,\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      this.referenceData,\n      this.captchaToken\n    );\n    request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n    const orgInvite = await this.stateService.getOrganizationInvitation();\n    if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n      request.token = orgInvite.token;\n      request.organizationUserId = orgInvite.organizationUserId;\n    }\n    return request;\n  }\n\n  private async registerAccount(\n    request: RegisterRequest,\n    showToast: boolean\n  ): Promise<{ successful: boolean; captchaBypassToken?: string }> {\n    if (!(await this.validateRegistration(showToast)).isValid) {\n      return { successful: false };\n    }\n    this.formPromise = this.apiService.postRegister(request);\n    try {\n      const response = await this.formPromise;\n      return { successful: true, captchaBypassToken: response.captchaBypassToken };\n    } catch (e) {\n      if (this.handleCaptchaRequired(e)) {\n        return { successful: false };\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  private async logIn(\n    email: string,\n    masterPassword: string,\n    captchaBypassToken: string\n  ): Promise<{ captchaRequired: boolean }> {\n    const credentials = new PasswordLogInCredentials(\n      email,\n      masterPassword,\n      captchaBypassToken,\n      null\n    );\n    const loginResponse = await this.authService.logIn(credentials);\n    if (this.handleCaptchaRequired(loginResponse)) {\n      return { captchaRequired: true };\n    }\n    return { captchaRequired: false };\n  }\n}\n","export class ReferenceEventRequest {\n  id: string;\n  layout: string;\n  flow: string;\n}\n","<div class=\"progress\">\n  <div\n    class=\"progress-bar {{ color }}\"\n    role=\"progressbar\"\n    [ngStyle]=\"{ width: scoreWidth + '%' }\"\n    attr.aria-valuenow=\"{{ scoreWidth }}\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n  >\n    <ng-container *ngIf=\"showText && text\">\n      {{ text }}\n    </ng-container>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\n\nexport interface PasswordColorText {\n  color: string;\n  text: string;\n}\n\n@Component({\n  selector: \"app-password-strength\",\n  templateUrl: \"password-strength.component.html\",\n})\nexport class PasswordStrengthComponent implements OnChanges {\n  @Input() showText = false;\n  @Input() email: string;\n  @Input() name: string;\n  @Input() set password(value: string) {\n    this.updatePasswordStrength(value);\n  }\n  @Output() passwordStrengthResult = new EventEmitter<any>();\n  @Output() passwordScoreColor = new EventEmitter<PasswordColorText>();\n\n  masterPasswordScore: number;\n  scoreWidth = 0;\n  color = \"bg-danger\";\n  text: string;\n\n  private masterPasswordStrengthTimeout: any;\n\n  //used by desktop and browser to display strength text color\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  //used by desktop and browser to display strength text\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n\n  constructor(\n    private i18nService: I18nService,\n    private passwordGenerationService: PasswordGenerationService\n  ) {}\n\n  ngOnChanges(): void {\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      this.scoreWidth = this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n\n      switch (this.masterPasswordScore) {\n        case 4:\n          this.color = \"bg-success\";\n          this.text = this.i18nService.t(\"strong\");\n          break;\n        case 3:\n          this.color = \"bg-primary\";\n          this.text = this.i18nService.t(\"good\");\n          break;\n        case 2:\n          this.color = \"bg-warning\";\n          this.text = this.i18nService.t(\"weak\");\n          break;\n        default:\n          this.color = \"bg-danger\";\n          this.text = this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n          break;\n      }\n\n      this.setPasswordScoreText(this.color, this.text);\n    }, 300);\n  }\n\n  updatePasswordStrength(password: string) {\n    const masterPassword = password;\n\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n    this.passwordStrengthResult.emit(strengthResult);\n    this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n  }\n\n  getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const email = this.email;\n    const name = this.name;\n    const atPosition = email?.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (name != null && name !== \"\") {\n      userInput = userInput.concat(name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n\n  setPasswordScoreText(color: string, text: string) {\n    color = color.slice(3);\n    this.passwordScoreColor.emit({ color: color, text: text });\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { AbstractControl, UntypedFormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"bit-error-summary\",\n  template: ` <ng-container *ngIf=\"errorCount > 0\">\n    <i class=\"bwi bwi-error\"></i> {{ \"fieldsNeedAttention\" | i18n: errorString }}\n  </ng-container>`,\n  host: {\n    class: \"tw-block tw-text-danger tw-mt-2\",\n    \"aria-live\": \"assertive\",\n  },\n})\nexport class BitErrorSummary {\n  @Input()\n  formGroup: UntypedFormGroup;\n\n  get errorCount(): number {\n    return this.getErrorCount(this.formGroup);\n  }\n\n  get errorString() {\n    return this.errorCount.toString();\n  }\n\n  private getErrorCount(form: UntypedFormGroup): number {\n    return Object.values(form.controls).reduce((acc: number, control: AbstractControl) => {\n      if (control instanceof UntypedFormGroup) {\n        return acc + this.getErrorCount(control);\n      }\n\n      if (control.errors == null) {\n        return acc;\n      }\n\n      return acc + Object.keys(control.errors).length;\n    }, 0);\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"tw-container tw-mx-auto\"\n  [formGroup]=\"formGroup\"\n>\n  <div>\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"emailAddress\" | i18n }}</bit-label>\n        <input id=\"register-form_input_email\" bitInput type=\"email\" formControlName=\"email\" />\n        <bit-hint>{{ \"emailAddressDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"name\" | i18n }}</bit-label>\n        <input id=\"register-form_input_name\" bitInput type=\"text\" formControlName=\"name\" />\n        <bit-hint>{{ \"yourNameDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <app-callout\n        type=\"info\"\n        [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n        *ngIf=\"enforcedPolicyOptions\"\n      >\n      </app-callout>\n      <bit-form-field>\n        <bit-label>{{ \"masterPass\" | i18n }}</bit-label>\n        <input\n          id=\"register-form_input_master-password\"\n          bitInput\n          type=\"{{ showPassword ? 'text' : 'password' }}\"\n          formControlName=\"masterPassword\"\n        />\n        <button type=\"button\" bitSuffix bitButton (click)=\"togglePassword()\">\n          <i\n            aria-hidden=\"true\"\n            class=\"bwi bwi-lg bwi-eye\"\n            [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n          ></i>\n        </button>\n        <bit-hint>\n          <span class=\"tw-font-semibold\">Important:</span>\n          {{ \"masterPassImportant\" | i18n }}\n        </bit-hint>\n      </bit-form-field>\n      <app-password-strength\n        [password]=\"formGroup.get('masterPassword')?.value\"\n        [email]=\"formGroup.get('email')?.value\"\n        [name]=\"formGroup.get('name')?.value\"\n        [showText]=\"true\"\n        (passwordStrengthResult)=\"getStrengthResult($event)\"\n      >\n      </app-password-strength>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"reTypeMasterPass\" | i18n }}</bit-label>\n        <input\n          id=\"register-form_input_confirm-master-password\"\n          bitInput\n          type=\"{{ showPassword ? 'text' : 'password' }}\"\n          formControlName=\"confirmMasterPassword\"\n        />\n        <button type=\"button\" bitSuffix bitButton (click)=\"togglePassword()\">\n          <i\n            aria-hidden=\"true\"\n            class=\"bwi bwi-lg bwi-eye\"\n            [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n          ></i>\n        </button>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"masterPassHint\" | i18n }}</bit-label>\n        <input id=\"register-form_input_hint\" bitInput type=\"text\" formControlName=\"hint\" />\n        <bit-hint>{{ \"masterPassHintDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div [hidden]=\"!showCaptcha()\">\n      <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n    </div>\n\n    <div class=\"tw-mb-3 tw-flex tw-items-start\" *ngIf=\"showTerms\">\n      <div class=\"tw-flex tw-h-6 tw-items-center\">\n        <input\n          id=\"register-form_input_accept-policies\"\n          class=\"tw-border-gray-300 tw-w-4 tw-rounded tw-border\"\n          bitInput\n          type=\"checkbox\"\n          formControlName=\"acceptPolicies\"\n        />\n      </div>\n      <bit-label class=\"ml-2\">\n        {{ \"acceptPolicies\" | i18n }}<br />\n        <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{\n          \"termsOfService\" | i18n\n        }}</a\n        >,\n        <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{\n          \"privacyPolicy\" | i18n\n        }}</a>\n      </bit-label>\n    </div>\n\n    <div class=\"tw-mb-3 tw-flex\">\n      <ng-container *ngIf=\"!accountCreated\">\n        <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n          {{ \"createAccount\" | i18n }}\n        </button>\n        <a\n          bitButton\n          buttonType=\"secondary\"\n          routerLink=\"/login\"\n          class=\"tw-ml-3 tw-inline-flex tw-items-center tw-px-3\"\n        >\n          <i class=\"bwi bwi-sign-in tw-mr-2\"></i>\n          {{ \"logIn\" | i18n }}\n        </a>\n      </ng-container>\n      <ng-container *ngIf=\"accountCreated\">\n        <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n          {{ \"logIn\" | i18n }}\n        </button>\n      </ng-container>\n    </div>\n    <bit-error-summary *ngIf=\"showErrorSummary\" [formGroup]=\"formGroup\"></bit-error-summary>\n  </div>\n</form>\n","import { Component, Input } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"@bitwarden/angular/components/register.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/reference-event.request\";\n\n@Component({\n  selector: \"app-register-form\",\n  templateUrl: \"./register-form.component.html\",\n})\nexport class RegisterFormComponent extends BaseRegisterComponent {\n  @Input() queryParamEmail: string;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() referenceDataValue: ReferenceEventRequest;\n\n  showErrorSummary = false;\n\n  constructor(\n    formValidationErrorService: FormValidationErrorsService,\n    formBuilder: UntypedFormBuilder,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      formValidationErrorService,\n      formBuilder,\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.referenceData = this.referenceDataValue;\n\n    if (this.queryParamEmail) {\n      this.formGroup.get(\"email\")?.setValue(this.queryParamEmail);\n    }\n  }\n\n  async submit() {\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.passwordStrengthResult.score,\n        this.formGroup.value.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    await super.submit(false);\n  }\n}\n","<div class=\"layout\" [ngClass]=\"['layout', layout]\">\n  <!-- TEAMS 1 Header -->\n  <header\n    class=\"header\"\n    *ngIf=\"\n      layout === 'default' ||\n      layout === 'teams' ||\n      layout === 'teams1' ||\n      layout === 'teams2' ||\n      layout === 'enterprise' ||\n      layout === 'enterprise1' ||\n      layout === 'enterprise2' ||\n      layout === 'cnetcmpgnent' ||\n      layout === 'cnetcmpgnteams' ||\n      layout === 'cnetcmpgnind'\n    \"\n  >\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-7\">\n          <img\n            alt=\"Bitwarden\"\n            class=\"logo mb-2\"\n            src=\"../../images/register-layout/logo-horizontal-white.svg\"\n          />\n        </div>\n      </div>\n    </div>\n  </header>\n\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-7\" *ngIf=\"layout\">\n        <div class=\"mt-5\">\n          <!-- Default Body -->\n          <div\n            *ngIf=\"\n              layout === 'teams' ||\n              layout === 'enterprise' ||\n              layout === 'enterprise1' ||\n              layout === 'default'\n            \"\n          >\n            <h1>The Bitwarden Password Manager</h1>\n            <h2>\n              Trusted by millions of individuals, teams, and organizations worldwide for secure\n              password storage and sharing.\n            </h2>\n            <p>Store logins, secure notes, and more</p>\n            <p>Collaborate and share securely</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- Teams & Enterprise Body -->\n          <div *ngIf=\"layout === 'teams1' || layout === 'teams2' || layout === 'enterprise2'\">\n            <h1>\n              Start Your <span *ngIf=\"layout === 'teams1' || layout === 'teams1'\">Teams<br /></span\n              ><span *ngIf=\"layout === 'enterprise2'\">Enterprise</span> Free Trial Now\n            </h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Collaborate and share securely</p>\n            <p>Deploy and manage quickly and easily</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- CNET Campaign Teams & Enterprise Body -->\n          <div *ngIf=\"layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnent'\">\n            <h1>\n              Start Your <span *ngIf=\"layout === 'cnetcmpgnteams'\">Teams<br /></span\n              ><span *ngIf=\"layout === 'cnetcmpgnent'\">Enterprise</span> Free Trial Now\n            </h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Collaborate and share securely</p>\n            <p>Deploy and manage quickly and easily</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n\n          <!-- CNET Campaign Premium Body -->\n          <div *ngIf=\"layout === 'cnetcmpgnind'\">\n            <h1>Start Your Premium Account Now</h1>\n            <h2>\n              Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure\n              password storage and sharing.\n            </h2>\n            <p>Store logins, secure notes, and more</p>\n            <p>Secure your account with advanced two-step login</p>\n            <p>Access anywhere on any device</p>\n            <p>Create your account to get started</p>\n          </div>\n        </div>\n      </div>\n      <div [ngClass]=\"{ 'col-5': layout, 'col-12': !layout }\">\n        <div class=\"row justify-content-md-center mt-5\">\n          <div [ngClass]=\"{ 'col-5': !layout, 'col-12': layout }\">\n            <h1 class=\"lead text-center mb-4\" *ngIf=\"!layout\">{{ \"createAccount\" | i18n }}</h1>\n            <div class=\"card d-block\">\n              <div class=\"card-body\">\n                <app-callout\n                  title=\"{{ 'createOrganizationStep1' | i18n }}\"\n                  type=\"info\"\n                  icon=\"bwi bwi-thumb-tack\"\n                  *ngIf=\"showCreateOrgMessage\"\n                >\n                  {{ \"createOrganizationCreatePersonalAccount\" | i18n }}\n                </app-callout>\n                <app-register-form\n                  [queryParamEmail]=\"email\"\n                  [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n                  [referenceDataValue]=\"referenceData\"\n                ></app-register-form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-7 d-flex align-items-center\">\n        <div\n          *ngIf=\"\n            layout === 'cnetcmpgnent' || layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnind'\n          \"\n        >\n          <figure>\n            <figcaption>\n              <cite>\n                <img\n                  src=\"../../images/register-layout/cnet-logo.svg\"\n                  class=\"w-25 d-block mx-auto\"\n                  alt=\"cnet logo\"\n                />\n              </cite>\n            </figcaption>\n            <blockquote class=\"mx-auto text-center px-4\">\n              \"No more excuses; start using Bitwarden today. The identity you save could be your\n              own. The money definitely will be.\"\n            </blockquote>\n          </figure>\n        </div>\n\n        <div\n          *ngIf=\"\n            layout === 'teams' ||\n            layout === 'teams1' ||\n            layout === 'teams2' ||\n            layout === 'enterprise' ||\n            layout === 'enterprise1' ||\n            layout === 'enterprise2' ||\n            layout === 'default'\n          \"\n        >\n          <figure>\n            <figcaption>\n              <cite>\n                <img\n                  src=\"../../images/register-layout/forbes-logo.svg\"\n                  class=\"w-25 d-block mx-auto\"\n                  alt=\"Forbes Logo\"\n                />\n              </cite>\n            </figcaption>\n            <blockquote class=\"mx-auto text-center px-4\">\n              “Bitwarden boasts the backing of some of the world's best security experts and an\n              attractive, easy-to-use interface”\n            </blockquote>\n          </figure>\n        </div>\n      </div>\n      <div\n        *ngIf=\"\n          layout === 'cnetcmpgnent' || layout === 'cnetcmpgnteams' || layout === 'cnetcmpgnind'\n        \"\n        class=\"col-5 d-flex align-items-center justify-content-center\"\n      >\n        <img\n          src=\"../../images/register-layout/usnews-360-badge.svg\"\n          class=\"w-50 d-block\"\n          alt=\"US News 360 Reviews Best Password Manager\"\n        />\n      </div>\n      <div\n        *ngIf=\"\n          layout === 'teams' ||\n          layout === 'teams1' ||\n          layout === 'teams2' ||\n          layout === 'enterprise' ||\n          layout === 'enterprise1' ||\n          layout === 'enterprise2' ||\n          layout === 'default'\n        \"\n        class=\"col-5 d-flex align-items-center justify-content-center\"\n      >\n        <img\n          src=\"../../images/register-layout/usnews-360-badge.svg\"\n          class=\"w-50 d-block\"\n          alt=\"US News 360 Reviews Best Password Manager\"\n        />\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"@bitwarden/angular/components/register.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/reference-event.request\";\n\nimport { RouterService } from \"../core\";\n\n@Component({\n  selector: \"app-register\",\n  templateUrl: \"register.component.html\",\n})\nexport class RegisterComponent extends BaseRegisterComponent implements OnInit, OnDestroy {\n  email = \"\";\n  showCreateOrgMessage = false;\n  layout = \"\";\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n  private policies: Policy[];\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    formValidationErrorService: FormValidationErrorsService,\n    formBuilder: UntypedFormBuilder,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    environmentService: EnvironmentService,\n    logService: LogService,\n    private routerService: RouterService\n  ) {\n    super(\n      formValidationErrorService,\n      formBuilder,\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      this.referenceData = new ReferenceEventRequest();\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n      if (qParams.premium != null) {\n        this.routerService.setPreviousUrl(\"/settings/premium\");\n      } else if (qParams.org != null) {\n        this.showCreateOrgMessage = true;\n        this.referenceData.flow = qParams.org;\n        const route = this.router.createUrlTree([\"create-organization\"], {\n          queryParams: { plan: qParams.org },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      if (qParams.layout != null) {\n        this.layout = this.referenceData.layout = qParams.layout;\n      }\n      if (qParams.reference != null) {\n        this.referenceData.id = qParams.reference;\n      } else {\n        this.referenceData.id = (\"; \" + document.cookie)\n          .split(\"; reference=\")\n          .pop()\n          .split(\";\")\n          .shift();\n      }\n      // Are they coming from an email for sponsoring a families organization\n      if (qParams.sponsorshipToken != null) {\n        // After logging in redirect them to setup the families sponsorship\n        const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n          queryParams: { plan: qParams.sponsorshipToken },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      if (this.referenceData.id === \"\") {\n        this.referenceData.id = null;\n      }\n    });\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      try {\n        const policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        if (policies.data != null) {\n          const policiesData = policies.data.map((p) => new PolicyData(p));\n          this.policies = policiesData.map((p) => new Policy(p));\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (this.policies != null) {\n      this.policyService\n        .masterPasswordPolicyOptions$(this.policies)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((enforcedPasswordPolicyOptions) => {\n          this.enforcedPolicyOptions = enforcedPasswordPolicyOptions;\n        });\n    }\n\n    await super.ngOnInit();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n  actionPromise: Promise<void | boolean>;\n  continuing = false;\n  leaving = false;\n\n  loading = true;\n  organization: Organization;\n  email: string;\n\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private keyConnectorService: KeyConnectorService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.organization = await this.keyConnectorService.getManagingOrganization();\n    this.email = await this.stateService.getEmail();\n    await this.syncService.fullSync(false);\n    this.loading = false;\n  }\n\n  async convert() {\n    this.continuing = true;\n    this.actionPromise = this.keyConnectorService.migrateUser();\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedMasterPassword\")\n      );\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n    }\n  }\n\n  async leave() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      this.organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.leaving = true;\n      this.actionPromise = this.organizationApiService.leave(this.organization.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e);\n    }\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"removeMasterPassword\" | i18n }}</p>\n      <hr />\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"convertOrganizationEncryptionDesc\" | i18n: organization.name }}</p>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-block\"\n            (click)=\"convert()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"continuing\"\n            ></i>\n            {{ \"removeMasterPassword\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-block\"\n            (click)=\"leave()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"leaving\"\n            ></i>\n            {{ \"leaveOrganization\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from \"@bitwarden/angular/components/remove-password.component\";\n\n@Component({\n  selector: \"app-remove-password\",\n  templateUrl: \"remove-password.component.html\",\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class OrganizationUserResetPasswordEnrollmentRequest extends SecretVerificationRequest {\n  resetPasswordKey: string;\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { KeysRequest } from \"./keys.request\";\n\nexport class SetPasswordRequest {\n  masterPasswordHash: string;\n  key: string;\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    masterPasswordHash: string,\n    key: string,\n    masterPasswordHint: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.masterPasswordHash = masterPasswordHash;\n    this.key = key;\n    this.masterPasswordHint = masterPasswordHint;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit, OnDestroy {\n  masterPassword: string;\n  masterPasswordRetype: string;\n  formPromise: Promise<any>;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  protected email: string;\n  protected kdf: KdfType;\n  protected kdfIterations: number;\n\n  protected destroy$ = new Subject<void>();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected messagingService: MessagingService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.email = await this.stateService.getEmail();\n    this.policyService\n      .masterPasswordPolicyOptions$()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (enforcedPasswordPolicyOptions) =>\n          (this.enforcedPolicyOptions ??= enforcedPasswordPolicyOptions)\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    const email = await this.stateService.getEmail();\n    if (this.kdf == null) {\n      this.kdf = await this.stateService.getKdfType();\n    }\n    if (this.kdfIterations == null) {\n      this.kdfIterations = await this.stateService.getKdfIterations();\n    }\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email.trim().toLowerCase(),\n      this.kdf,\n      this.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    let encKey: [SymmetricCryptoKey, EncString] = null;\n    const existingEncKey = await this.cryptoService.getEncKey();\n    if (existingEncKey == null) {\n      encKey = await this.cryptoService.makeEncKey(key);\n    } else {\n      encKey = await this.cryptoService.remakeEncKey(key);\n    }\n\n    await this.performSubmitActions(masterPasswordHash, key, encKey);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    // Override in sub-class\n    // Can be used for additional validation and/or other processes the should occur before changing passwords\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    // Override in sub-class\n  }\n\n  async strongPassword(): Promise<boolean> {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordMinlength\")\n      );\n      return false;\n    }\n    if (this.masterPassword !== this.masterPasswordRetype) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return false;\n    }\n\n    const strengthResult = this.passwordStrengthResult;\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return false;\n    }\n\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keys.request\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organization-user-reset-password-enrollment.request\";\nimport { SetPasswordRequest } from \"@bitwarden/common/models/request/set-password.request\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n  syncLoading = true;\n  showPassword = false;\n  hint = \"\";\n  identifier: string = null;\n  orgId: string;\n  resetPasswordAutoEnroll = false;\n\n  onSuccessfulChangePassword: () => Promise<void>;\n  successRoute = \"vault\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    protected router: Router,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    this.syncLoading = false;\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    // Automatic Enrollment Detection\n    if (this.identifier != null) {\n      try {\n        const response = await this.organizationApiService.getAutoEnrollStatus(this.identifier);\n        this.orgId = response.id;\n        this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n        this.enforcedPolicyOptions =\n          await this.policyApiService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    }\n\n    super.ngOnInit();\n  }\n\n  async setupSubmitActions() {\n    this.kdf = DEFAULT_KDF_TYPE;\n    this.kdfIterations = DEFAULT_KDF_ITERATIONS;\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new SetPasswordRequest(\n      masterPasswordHash,\n      encKey[1].encryptedString,\n      this.hint,\n      this.kdf,\n      this.kdfIterations,\n      this.identifier,\n      new KeysRequest(keys[0], keys[1].encryptedString)\n    );\n    try {\n      if (this.resetPasswordAutoEnroll) {\n        this.formPromise = this.apiService\n          .setPassword(request)\n          .then(async () => {\n            await this.onSetPasswordSuccess(key, encKey, keys);\n            return this.organizationApiService.getKeys(this.orgId);\n          })\n          .then(async (response) => {\n            if (response == null) {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n            const userId = await this.stateService.getUserId();\n            const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n            // RSA Encrypt user's encKey.key with organization public key\n            const userEncKey = await this.cryptoService.getEncKey();\n            const encryptedKey = await this.cryptoService.rsaEncrypt(\n              userEncKey.key,\n              publicKey.buffer\n            );\n\n            const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n            resetRequest.masterPasswordHash = masterPasswordHash;\n            resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n            return this.apiService.putOrganizationUserResetPasswordEnrollment(\n              this.orgId,\n              userId,\n              resetRequest\n            );\n          });\n      } else {\n        this.formPromise = this.apiService.setPassword(request).then(async () => {\n          await this.onSetPasswordSuccess(key, encKey, keys);\n        });\n      }\n\n      await this.formPromise;\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  private async onSetPasswordSuccess(\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString],\n    keys: [string, EncString]\n  ) {\n    await this.stateService.setKdfType(this.kdf);\n    await this.stateService.setKdfIterations(this.kdfIterations);\n    await this.cryptoService.setKey(key);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n    await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n    const localKeyHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    await this.cryptoService.setKeyHash(localKeyHash);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body text-center\" *ngIf=\"syncLoading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!syncLoading\">\n          <app-callout type=\"info\">{{ \"ssoCompleteRegistration\" | i18n }}</app-callout>\n          <app-callout\n            type=\"warning\"\n            title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n            *ngIf=\"resetPasswordAutoEnroll\"\n          >\n            {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n          </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength\n                  [password]=\"masterPassword\"\n                  [email]=\"email\"\n                  [showText]=\"true\"\n                  (passwordStrengthResult)=\"getStrengthResult($event)\"\n                >\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n            <small class=\"form-text text-muted\">{{ \"masterPassDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SetPasswordComponent as BaseSetPasswordComponent } from \"@bitwarden/angular/components/set-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-set-password\",\n  templateUrl: \"set-password.component.html\",\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    router: Router,\n    syncService: SyncService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyApiService,\n      policyService,\n      router,\n      apiService,\n      syncService,\n      route,\n      stateService,\n      organizationApiService\n    );\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/auth-result\";\nimport { SsoLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\nimport { SsoPreValidateResponse } from \"@bitwarden/common/models/response/sso-pre-validate.response\";\n\n@Directive()\nexport class SsoComponent {\n  identifier: string;\n  loggingIn = false;\n\n  formPromise: Promise<AuthResult>;\n  initiateSsoFormPromise: Promise<SsoPreValidateResponse>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"lock\";\n  protected changePasswordRoute = \"set-password\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected clientId: string;\n  protected redirectUri: string;\n  protected state: string;\n  protected codeChallenge: string;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.code != null && qParams.state != null) {\n        const codeVerifier = await this.stateService.getSsoCodeVerifier();\n        const state = await this.stateService.getSsoState();\n        await this.stateService.setSsoCodeVerifier(null);\n        await this.stateService.setSsoState(null);\n        if (\n          qParams.code != null &&\n          codeVerifier != null &&\n          state != null &&\n          this.checkState(state, qParams.state)\n        ) {\n          await this.logIn(\n            qParams.code,\n            codeVerifier,\n            this.getOrgIdentifierFromState(qParams.state)\n          );\n        }\n      } else if (\n        qParams.clientId != null &&\n        qParams.redirectUri != null &&\n        qParams.state != null &&\n        qParams.codeChallenge != null\n      ) {\n        this.redirectUri = qParams.redirectUri;\n        this.state = qParams.state;\n        this.codeChallenge = qParams.codeChallenge;\n        this.clientId = qParams.clientId;\n      }\n    });\n  }\n\n  async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n    if (this.identifier == null || this.identifier === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"ssoValidationFailed\"),\n        this.i18nService.t(\"ssoIdentifierRequired\")\n      );\n      return;\n    }\n\n    this.initiateSsoFormPromise = this.apiService.preValidateSso(this.identifier);\n    const response = await this.initiateSsoFormPromise;\n\n    const authorizeUrl = await this.buildAuthorizeUrl(\n      returnUri,\n      includeUserIdentifier,\n      response.token\n    );\n    this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n  }\n\n  protected async buildAuthorizeUrl(\n    returnUri?: string,\n    includeUserIdentifier?: boolean,\n    token?: string\n  ): Promise<string> {\n    let codeChallenge = this.codeChallenge;\n    let state = this.state;\n\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    if (codeChallenge == null) {\n      const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n      codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      await this.stateService.setSsoCodeVerifier(codeVerifier);\n    }\n\n    if (state == null) {\n      state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      if (returnUri) {\n        state += `_returnUri='${returnUri}'`;\n      }\n    }\n\n    // Add Organization Identifier to state\n    state += `_identifier=${this.identifier}`;\n\n    // Save state (regardless of new or existing)\n    await this.stateService.setSsoState(state);\n\n    let authorizeUrl =\n      this.environmentService.getIdentityUrl() +\n      \"/connect/authorize?\" +\n      \"client_id=\" +\n      this.clientId +\n      \"&redirect_uri=\" +\n      encodeURIComponent(this.redirectUri) +\n      \"&\" +\n      \"response_type=code&scope=api offline_access&\" +\n      \"state=\" +\n      state +\n      \"&code_challenge=\" +\n      codeChallenge +\n      \"&\" +\n      \"code_challenge_method=S256&response_mode=query&\" +\n      \"domain_hint=\" +\n      encodeURIComponent(this.identifier) +\n      \"&ssoToken=\" +\n      encodeURIComponent(token);\n\n    if (includeUserIdentifier) {\n      const userIdentifier = await this.apiService.getSsoUserIdentifier();\n      authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n    }\n\n    return authorizeUrl;\n  }\n\n  private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n    this.loggingIn = true;\n    try {\n      const credentials = new SsoLogInCredentials(\n        code,\n        codeVerifier,\n        this.redirectUri,\n        orgIdFromState\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n              sso: \"true\",\n            },\n          });\n        }\n      } else if (response.resetMasterPassword) {\n        if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n          this.onSuccessfulLoginChangePasswordNavigate();\n        } else {\n          this.router.navigate([this.changePasswordRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n            },\n          });\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n\n      // TODO: Key Connector Service should pass this error message to the logout callback instead of displaying here\n      if (e.message === \"Key Connector error\") {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"ssoKeyConnectorError\")\n        );\n      }\n    }\n    this.loggingIn = false;\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","export enum PlanType {\n  Free = 0,\n  FamiliesAnnually2019 = 1,\n  TeamsMonthly2019 = 2,\n  TeamsAnnually2019 = 3,\n  EnterpriseMonthly2019 = 4,\n  EnterpriseAnnually2019 = 5,\n  Custom = 6,\n  FamiliesAnnually = 7,\n  TeamsMonthly = 8,\n  TeamsAnnually = 9,\n  EnterpriseMonthly = 10,\n  EnterpriseAnnually = 11,\n}\n","export enum ProductType {\n  Free = 0,\n  Families = 1,\n  Teams = 2,\n  Enterprise = 3,\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  class=\"container\"\n  [appApiAction]=\"initiateSsoFormPromise\"\n  ngNativeValidate\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <img class=\"logo mb-2 logo-themed\" alt=\"Bitwarden\" />\n      <div class=\"card d-block mt-4\">\n        <div class=\"card-body\" *ngIf=\"loggingIn\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loggingIn\">\n          <p>{{ \"ssoLogInWithOrgIdentifier\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"identifier\">{{ \"organizationIdentifier\" | i18n }}</label>\n            <input\n              id=\"identifier\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Identifier\"\n              [(ngModel)]=\"identifier\"\n              required\n              appAutofocus\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"logIn\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SsoComponent as BaseSsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-sso\",\n  templateUrl: \"sso.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SsoComponent extends BaseSsoComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      } else {\n        const storedIdentifier = await this.stateService.getSsoOrgIdentifier();\n        if (storedIdentifier != null) {\n          this.identifier = storedIdentifier;\n        }\n      }\n    });\n  }\n\n  async submit() {\n    await this.stateService.setSsoOrganizationIdentifier(this.identifier);\n    if (this.clientId === \"browser\") {\n      document.cookie = `ssoHandOffMessage=${this.i18nService.t(\"ssoHandOff\")};SameSite=strict`;\n    }\n    super.submit();\n  }\n}\n","<ng-template>\n  <div\n    class=\"tw-inline-block tw-w-11/12 tw-pl-7\"\n    [ngClass]=\"{ 'tw-border-0 tw-border-l tw-border-solid tw-border-secondary-300': applyBorder }\"\n  >\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","import { CdkStep } from \"@angular/cdk/stepper\";\nimport { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-vertical-step\",\n  templateUrl: \"vertical-step.component.html\",\n  providers: [{ provide: CdkStep, useExisting: VerticalStep }],\n})\nexport class VerticalStep extends CdkStep {\n  @Input() subLabel = \"\";\n  @Input() applyBorder = true;\n}\n","<div class=\"tw-m-2.5 tw-h-16 tw-text-center\">\n  <button\n    (click)=\"selectStep()\"\n    [disabled]=\"disabled\"\n    class=\"tw-flex tw-w-full tw-items-center tw-border-none tw-bg-transparent\"\n    [ngClass]=\"{\n      'hover:tw-bg-secondary-100': !disabled && step.editable\n    }\"\n    [attr.aria-expanded]=\"selected\"\n  >\n    <span\n      class=\"tw-mr-3.5 tw-w-9 tw-rounded-full tw-font-bold tw-leading-9\"\n      *ngIf=\"!step.completed\"\n      [ngClass]=\"{\n        'tw-bg-primary-500 tw-text-contrast': selected,\n        'tw-bg-secondary-300 tw-text-main': !selected && !disabled && step.editable,\n        'tw-bg-transparent tw-text-muted': disabled\n      }\"\n    >\n      {{ stepNumber }}\n    </span>\n    <span\n      class=\"tw-mr-3.5 tw-w-9 tw-rounded-full tw-bg-primary-500 tw-font-bold tw-leading-9 tw-text-contrast\"\n      *ngIf=\"step.completed\"\n    >\n      <i class=\"bwi bwi-fw bwi-check tw-p-1\" aria-hidden=\"true\"></i>\n    </span>\n    <div\n      class=\"tw-txt-main tw-mt-3.5 tw-h-12 tw-text-left tw-leading-snug\"\n      [ngClass]=\"{\n        'tw-font-bold': selected\n      }\"\n    >\n      <p\n        class=\"main-label text tw-mb-1 tw-text-main\"\n        [ngClass]=\"{\n          'tw-mt-1': !step.subLabel\n        }\"\n      >\n        {{ step.label }}\n      </p>\n      <p class=\"sub-label small tw-text-muted\">{{ step.subLabel }}</p>\n    </div>\n  </button>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { VerticalStep } from \"./vertical-step.component\";\n\n@Component({\n  selector: \"app-vertical-step-content\",\n  templateUrl: \"vertical-step-content.component.html\",\n})\nexport class VerticalStepContentComponent {\n  @Output() onSelectStep = new EventEmitter<void>();\n\n  @Input() disabled = false;\n  @Input() selected = false;\n  @Input() step: VerticalStep;\n  @Input() stepNumber: number;\n\n  selectStep() {\n    this.onSelectStep.emit();\n  }\n}\n","<div>\n  <ul class=\"tw-flex tw-list-none tw-flex-col tw-flex-wrap tw-p-5\">\n    <li *ngFor=\"let step of steps; let i = index; let isLast = last\">\n      <app-vertical-step-content\n        [disabled]=\"isStepDisabled(i)\"\n        [selected]=\"selectedIndex === i\"\n        [step]=\"step\"\n        [stepNumber]=\"i + 1\"\n        (onSelectStep)=\"selectStepByIndex(i)\"\n      ></app-vertical-step-content>\n      <div\n        class=\"tw-inline-block tw-pl-7\"\n        *ngIf=\"selectedIndex === i\"\n        [ngTemplateOutlet]=\"selected ? selected.content : null\"\n      ></div>\n      <div\n        class=\"tw-ml-8 tw-h-6 tw-border-0 tw-border-l tw-border-solid tw-border-secondary-300\"\n        *ngIf=\"!isLast && !(selectedIndex === i)\"\n      ></div>\n    </li>\n  </ul>\n</div>\n","import { CdkStepper } from \"@angular/cdk/stepper\";\nimport { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-vertical-stepper\",\n  templateUrl: \"vertical-stepper.component.html\",\n  providers: [{ provide: CdkStepper, useExisting: VerticalStepperComponent }],\n})\nexport class VerticalStepperComponent extends CdkStepper {\n  @Input()\n  activeClass = \"active\";\n\n  isNextButtonHidden() {\n    return !(this.steps.length === this.selectedIndex + 1);\n  }\n\n  isStepDisabled(index: number) {\n    if (this.selectedIndex !== index) {\n      return this.selectedIndex === index - 1\n        ? !this.steps.find((_, i) => i == index - 1)?.completed\n        : true;\n    }\n    return false;\n  }\n\n  selectStepByIndex(index: number): void {\n    this.selectedIndex = index;\n  }\n}\n","<form #form [formGroup]=\"formGroup\" *ngIf=\"nameOnly\">\n  <bit-form-field>\n    <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"name\" />\n  </bit-form-field>\n</form>\n<form #form [formGroup]=\"formGroup\" *ngIf=\"!nameOnly\">\n  <h2>{{ \"generalInformation\" | i18n }}</h2>\n  <div class=\"tw-flex tw-w-full tw-space-x-4\" *ngIf=\"createOrganization\">\n    <bit-form-field class=\"tw-w-1/2\">\n      <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n      <input bitInput type=\"text\" formControlName=\"name\" />\n    </bit-form-field>\n    <bit-form-field class=\"tw-w-1/2\">\n      <bit-label>{{ \"billingEmail\" | i18n }}</bit-label>\n      <input bitInput type=\"email\" formControlName=\"billingEmail\" />\n    </bit-form-field>\n    <bit-form-field class=\"tw-w-1/2\" *ngIf=\"isProvider\">\n      <bit-label>{{ \"clientOwnerEmail\" | i18n }}</bit-label>\n      <input bitInput type=\"email\" formControlName=\"clientOwnerEmail\" />\n    </bit-form-field>\n  </div>\n  <div *ngIf=\"!isProvider && !acceptingSponsorship\">\n    <input\n      type=\"checkbox\"\n      name=\"businessOwned\"\n      formControlName=\"businessOwned\"\n      (change)=\"changedBusinessOwned.emit()\"\n    />\n    <bit-label for=\"businessOwned\" class=\"tw-mb-3\">{{ \"accountOwnedBusiness\" | i18n }}</bit-label>\n    <div class=\"tw-mt-4\" *ngIf=\"formGroup.controls['businessOwned'].value\">\n      <bit-form-field class=\"tw-w-1/2\">\n        <bit-label>{{ \"businessName\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"businessName\" />\n      </bit-form-field>\n    </div>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { UntypedFormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-org-info\",\n  templateUrl: \"organization-information.component.html\",\n})\nexport class OrganizationInformationComponent {\n  @Input() nameOnly = false;\n  @Input() createOrganization = true;\n  @Input() isProvider = false;\n  @Input() acceptingSponsorship = false;\n  @Input() formGroup: UntypedFormGroup;\n  @Output() changedBusinessOwned = new EventEmitter<void>();\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-forbes\",\n  templateUrl: \"logo-forbes.component.html\",\n})\nexport class LogoForbesComponent {}\n","<figure>\n  <figcaption>\n    <cite>\n      <img\n        src=\"../../images/register-layout/forbes-logo.svg\"\n        class=\"tw-mx-auto tw-block tw-w-40\"\n        alt=\"Forbes Logo\"\n      />\n    </cite>\n  </figcaption>\n  <blockquote class=\"tw-mx-auto tw-mt-2 tw-max-w-xl tw-px-4 tw-text-center\">\n    “Bitwarden boasts the backing of some of the world's best security experts and an attractive,\n    easy-to-use interface”\n  </blockquote>\n</figure>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-us-news\",\n  templateUrl: \"logo-us-news.component.html\",\n})\nexport class LogoUSNewsComponent {}\n","<img\n  src=\"../../images/register-layout/usnews-360-badge.svg\"\n  class=\"tw-mx-auto tw-block tw-w-48\"\n  alt=\"US News 360 Reviews Best Password Manager\"\n/>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise-content\",\n  templateUrl: \"enterprise-content.component.html\",\n})\nexport class EnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams-content\",\n  templateUrl: \"teams-content.component.html\",\n})\nexport class TeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-trial-confirmation-details\",\n  templateUrl: \"confirmation-details.component.html\",\n})\nexport class ConfirmationDetailsComponent {\n  @Input() email: string;\n  @Input() orgLabel: string;\n}\n","export enum PaymentMethodType {\n  Card = 0,\n  BankAccount = 1,\n  PayPal = 2,\n  BitPay = 3,\n  Credit = 4,\n  WireTransfer = 5,\n  AppleInApp = 6,\n  GoogleInApp = 7,\n  Check = 8,\n}\n","<div class=\"tw-pl-6 tw-pb-6\">\n  <p class=\"tw-text-xl\">{{ \"trialThankYou\" | i18n: orgLabel }}</p>\n  <ul class=\"tw-list-disc\">\n    <li>\n      <p>\n        {{ \"trialConfirmationEmail\" | i18n }}\n        <span class=\"tw-font-bold\">{{ email }}</span\n        >.\n      </p>\n    </li>\n    <li>\n      <p>\n        {{ \"trialPaidInfoMessage\" | i18n: orgLabel }}\n      </p>\n    </li>\n  </ul>\n</div>\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organization-keys.request\";\n\nexport class OrganizationCreateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  planType: PlanType;\n  key: string;\n  keys: OrganizationKeysRequest;\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n  additionalSeats: number;\n  maxAutoscaleSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  collectionName: string;\n  taxIdNumber: string;\n  billingAddressLine1: string;\n  billingAddressLine2: string;\n  billingAddressCity: string;\n  billingAddressState: string;\n  billingAddressPostalCode: string;\n  billingAddressCountry: string;\n}\n","import { KeysRequest } from \"./keys.request\";\n\nexport class OrganizationKeysRequest extends KeysRequest {\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    super(publicKey, encryptedPrivateKey);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organization-keys.request\";\n\nexport class OrganizationUpgradeRequest {\n  businessName: string;\n  planType: PlanType;\n  additionalSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  billingAddressCountry: string;\n  billingAddressPostalCode: string;\n  keys: OrganizationKeysRequest;\n}\n","import { OrganizationCreateRequest } from \"../organization-create.request\";\n\nexport class ProviderOrganizationCreateRequest {\n  constructor(\n    public clientOwnerEmail: string,\n    public organizationCreateRequest: OrganizationCreateRequest\n  ) {}\n}\n","<div class=\"mb-4 text-lg\" *ngIf=\"showOptions && showMethods\">\n  <div class=\"form-check form-check-inline mr-4\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-card\"\n      [value]=\"paymentMethodType.Card\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-card\">\n      <i class=\"bwi bwi-fw bwi-credit-card\" aria-hidden=\"true\"></i> {{ \"creditCard\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline mr-4\" *ngIf=\"!hideBank\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-bank\"\n      [value]=\"paymentMethodType.BankAccount\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-bank\">\n      <i class=\"bwi bwi-fw bwi-bank\" aria-hidden=\"true\"></i> {{ \"bankAccount\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hidePaypal\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-paypal\"\n      [value]=\"paymentMethodType.PayPal\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-paypal\">\n      <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hideCredit\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-credit\"\n      [value]=\"paymentMethodType.Credit\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-credit\">\n      <i class=\"bwi bwi-fw bwi-dollar\" aria-hidden=\"true\"></i> {{ \"accountCredit\" | i18n }}</label\n    >\n  </div>\n</div>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Card\">\n  <div class=\"row\">\n    <div [ngClass]=\"trialFlow ? 'col-5' : 'col-4'\" class=\"form-group\">\n      <label for=\"stripe-card-number-element\">{{ \"number\" | i18n }}</label>\n      <div id=\"stripe-card-number-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div *ngIf=\"!trialFlow\" class=\"form-group col-8 d-flex align-items-end\">\n      <img\n        src=\"../../images/cards.png\"\n        alt=\"Visa, MasterCard, Discover, AmEx, JCB, Diners Club, UnionPay\"\n        width=\"323\"\n        height=\"32\"\n      />\n    </div>\n    <div [ngClass]=\"trialFlow ? 'col-3' : 'col-4'\" class=\"form-group\">\n      <label for=\"stripe-card-expiry-element\">{{ \"expiration\" | i18n }}</label>\n      <div id=\"stripe-card-expiry-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div class=\"form-group col-4\">\n      <div class=\"d-flex\">\n        <label for=\"stripe-card-cvc-element\">\n          {{ \"securityCode\" | i18n }}\n        </label>\n        <a\n          href=\"https://www.cvvnumber.com/cvv.html\"\n          tabindex=\"-1\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          class=\"ml-auto\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n      </div>\n      <div id=\"stripe-card-cvc-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.BankAccount\">\n  <app-callout type=\"warning\" title=\"{{ 'verifyBankAccount' | i18n }}\">\n    {{ \"verifyBankAccountInitialDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"routing_number\">{{ \"routingNumber\" | i18n }}</label>\n      <input\n        id=\"routing_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"routing_number\"\n        [(ngModel)]=\"bank.routing_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_number\">{{ \"accountNumber\" | i18n }}</label>\n      <input\n        id=\"account_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_number\"\n        [(ngModel)]=\"bank.account_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_name\">{{ \"accountHolderName\" | i18n }}</label>\n      <input\n        id=\"account_holder_name\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_holder_name\"\n        [(ngModel)]=\"bank.account_holder_name\"\n        required\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_type\">{{ \"bankAccountType\" | i18n }}</label>\n      <select\n        id=\"account_holder_type\"\n        class=\"form-control\"\n        name=\"account_holder_type\"\n        [(ngModel)]=\"bank.account_holder_type\"\n        required\n      >\n        <option value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option value=\"company\">{{ \"bankAccountTypeCompany\" | i18n }}</option>\n        <option value=\"individual\">{{ \"bankAccountTypeIndividual\" | i18n }}</option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.PayPal\">\n  <div class=\"mb-3\">\n    <div id=\"bt-dropin-container\" class=\"mb-1\"></div>\n    <small class=\"text-muted\">{{ \"paypalClickSubmit\" | i18n }}</small>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Credit\">\n  <app-callout type=\"note\">\n    {{ \"makeSureEnoughCredit\" | i18n }}\n  </app-callout>\n</ng-container>\n","import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport ThemeVariables from \"../../scss/export.module.scss\";\n\nconst lightInputColor = ThemeVariables.lightInputColor;\nconst lightInputPlaceholderColor = ThemeVariables.lightInputPlaceholderColor;\nconst darkInputColor = ThemeVariables.darkInputColor;\nconst darkInputPlaceholderColor = ThemeVariables.darkInputPlaceholderColor;\n\n@Component({\n  selector: \"app-payment\",\n  templateUrl: \"payment.component.html\",\n})\nexport class PaymentComponent implements OnInit, OnDestroy {\n  @Input() showMethods = true;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.Card;\n  @Input() hideBank = false;\n  @Input() hidePaypal = false;\n  @Input() hideCredit = false;\n  @Input() trialFlow = false;\n\n  private destroy$ = new Subject<void>();\n\n  bank: any = {\n    routing_number: null,\n    account_number: null,\n    account_holder_name: null,\n    account_holder_type: \"\",\n    currency: \"USD\",\n    country: \"US\",\n  };\n\n  paymentMethodType = PaymentMethodType;\n\n  private btScript: HTMLScriptElement;\n  private btInstance: any = null;\n  private stripeScript: HTMLScriptElement;\n  private stripe: any = null;\n  private stripeElements: any = null;\n  private stripeCardNumberElement: any = null;\n  private stripeCardExpiryElement: any = null;\n  private stripeCardCvcElement: any = null;\n  private StripeElementStyle: any;\n  private StripeElementClasses: any;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private themingService: AbstractThemingService\n  ) {\n    this.stripeScript = window.document.createElement(\"script\");\n    this.stripeScript.src = \"https://js.stripe.com/v3/\";\n    this.stripeScript.async = true;\n    this.stripeScript.onload = () => {\n      this.stripe = (window as any).Stripe(process.env.STRIPE_KEY);\n      this.stripeElements = this.stripe.elements();\n      this.setStripeElement();\n    };\n    this.btScript = window.document.createElement(\"script\");\n    this.btScript.src = `scripts/dropin.js?cache=${process.env.CACHE_TAG}`;\n    this.btScript.async = true;\n    this.StripeElementStyle = {\n      base: {\n        color: null,\n        fontFamily:\n          '\"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, ' +\n          '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n        fontSize: \"14px\",\n        fontSmoothing: \"antialiased\",\n        \"::placeholder\": {\n          color: null,\n        },\n      },\n      invalid: {\n        color: null,\n      },\n    };\n    this.StripeElementClasses = {\n      focus: \"is-focused\",\n      empty: \"is-empty\",\n      invalid: \"is-invalid\",\n    };\n  }\n\n  async ngOnInit() {\n    if (!this.showOptions) {\n      this.hidePaypal = this.method !== PaymentMethodType.PayPal;\n      this.hideBank = this.method !== PaymentMethodType.BankAccount;\n      this.hideCredit = this.method !== PaymentMethodType.Credit;\n    }\n    await this.setTheme();\n    window.document.head.appendChild(this.stripeScript);\n    if (!this.hidePaypal) {\n      window.document.head.appendChild(this.btScript);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    window.document.head.removeChild(this.stripeScript);\n    window.setTimeout(() => {\n      Array.from(window.document.querySelectorAll(\"iframe\")).forEach((el) => {\n        if (el.src != null && el.src.indexOf(\"stripe\") > -1) {\n          try {\n            window.document.body.removeChild(el);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      });\n    }, 500);\n    if (!this.hidePaypal) {\n      window.document.head.removeChild(this.btScript);\n      window.setTimeout(() => {\n        Array.from(window.document.head.querySelectorAll(\"script\")).forEach((el) => {\n          if (el.src != null && el.src.indexOf(\"paypal\") > -1) {\n            try {\n              window.document.head.removeChild(el);\n            } catch (e) {\n              this.logService.error(e);\n            }\n          }\n        });\n        const btStylesheet = window.document.head.querySelector(\"#braintree-dropin-stylesheet\");\n        if (btStylesheet != null) {\n          try {\n            window.document.head.removeChild(btStylesheet);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      }, 500);\n    }\n  }\n\n  changeMethod() {\n    this.btInstance = null;\n\n    if (this.method === PaymentMethodType.PayPal) {\n      window.setTimeout(() => {\n        (window as any).braintree.dropin.create(\n          {\n            authorization: process.env.BRAINTREE_KEY,\n            container: \"#bt-dropin-container\",\n            paymentOptionPriority: [\"paypal\"],\n            paypal: {\n              flow: \"vault\",\n              buttonStyle: {\n                label: \"pay\",\n                size: \"medium\",\n                shape: \"pill\",\n                color: \"blue\",\n                tagline: \"false\",\n              },\n            },\n          },\n          (createErr: any, instance: any) => {\n            if (createErr != null) {\n              // eslint-disable-next-line\n              console.error(createErr);\n              return;\n            }\n            this.btInstance = instance;\n          }\n        );\n      }, 250);\n    } else {\n      this.setStripeElement();\n    }\n  }\n\n  createPaymentToken(): Promise<[string, PaymentMethodType]> {\n    return new Promise((resolve, reject) => {\n      if (this.method === PaymentMethodType.Credit) {\n        resolve([null, this.method]);\n      } else if (this.method === PaymentMethodType.PayPal) {\n        this.btInstance\n          .requestPaymentMethod()\n          .then((payload: any) => {\n            resolve([payload.nonce, this.method]);\n          })\n          .catch((err: any) => {\n            reject(err.message);\n          });\n      } else if (\n        this.method === PaymentMethodType.Card ||\n        this.method === PaymentMethodType.BankAccount\n      ) {\n        if (this.method === PaymentMethodType.Card) {\n          this.apiService\n            .postSetupPayment()\n            .then((clientSecret) =>\n              this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n            )\n            .then((result: any) => {\n              if (result.error) {\n                reject(result.error.message);\n              } else if (result.setupIntent && result.setupIntent.status === \"succeeded\") {\n                resolve([result.setupIntent.payment_method, this.method]);\n              } else {\n                reject();\n              }\n            });\n        } else {\n          this.stripe.createToken(\"bank_account\", this.bank).then((result: any) => {\n            if (result.error) {\n              reject(result.error.message);\n            } else if (result.token && result.token.id != null) {\n              resolve([result.token.id, this.method]);\n            } else {\n              reject();\n            }\n          });\n        }\n      }\n    });\n  }\n\n  handleStripeCardPayment(clientSecret: string, successCallback: () => Promise<any>): Promise<any> {\n    return new Promise<void>((resolve, reject) => {\n      if (this.showMethods && this.stripeCardNumberElement == null) {\n        reject();\n        return;\n      }\n      const handleCardPayment = () =>\n        this.showMethods\n          ? this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n          : this.stripe.handleCardSetup(clientSecret);\n      return handleCardPayment().then(async (result: any) => {\n        if (result.error) {\n          reject(result.error.message);\n        } else if (result.paymentIntent && result.paymentIntent.status === \"succeeded\") {\n          if (successCallback != null) {\n            await successCallback();\n          }\n          resolve();\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n\n  private setStripeElement() {\n    window.setTimeout(() => {\n      if (this.showMethods && this.method === PaymentMethodType.Card) {\n        if (this.stripeCardNumberElement == null) {\n          this.stripeCardNumberElement = this.stripeElements.create(\"cardNumber\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        if (this.stripeCardExpiryElement == null) {\n          this.stripeCardExpiryElement = this.stripeElements.create(\"cardExpiry\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n          });\n        }\n        if (this.stripeCardCvcElement == null) {\n          this.stripeCardCvcElement = this.stripeElements.create(\"cardCvc\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        this.stripeCardNumberElement.mount(\"#stripe-card-number-element\");\n        this.stripeCardExpiryElement.mount(\"#stripe-card-expiry-element\");\n        this.stripeCardCvcElement.mount(\"#stripe-card-cvc-element\");\n      }\n    }, 50);\n  }\n\n  private async setTheme() {\n    this.themingService.theme$.pipe(takeUntil(this.destroy$)).subscribe((theme) => {\n      if (theme.effectiveTheme === ThemeType.Dark) {\n        this.StripeElementStyle.base.color = darkInputColor;\n        this.StripeElementStyle.base[\"::placeholder\"].color = darkInputPlaceholderColor;\n        this.StripeElementStyle.invalid.color = darkInputColor;\n      } else {\n        this.StripeElementStyle.base.color = lightInputColor;\n        this.StripeElementStyle.base[\"::placeholder\"].color = lightInputPlaceholderColor;\n        this.StripeElementStyle.invalid.color = lightInputColor;\n      }\n    });\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"darkInputColor\":\"#fff\",\"darkInputPlaceholderColor\":\"#bac0ce\",\"lightInputColor\":\"#465057\",\"lightInputPlaceholderColor\":\"#b6b8b8\"};","export class TaxInfoUpdateRequest {\n  country: string;\n  postalCode: string;\n}\n","import { TaxInfoUpdateRequest } from \"./tax-info-update.request\";\n\nexport class OrganizationTaxInfoUpdateRequest extends TaxInfoUpdateRequest {\n  taxId: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n}\n","<div class=\"row\">\n  <div [ngClass]=\"trialFlow ? 'col-7' : 'col-6'\">\n    <div class=\"form-group\">\n      <label for=\"addressCountry\">{{ \"country\" | i18n }}</label>\n      <select\n        id=\"addressCountry\"\n        class=\"form-control\"\n        [(ngModel)]=\"taxInfo.country\"\n        required\n        name=\"addressCountry\"\n        autocomplete=\"country\"\n        (change)=\"changeCountry()\"\n      >\n        <option value=\"\">-- Select --</option>\n        <option value=\"US\">United States</option>\n        <option value=\"CN\">China</option>\n        <option value=\"FR\">France</option>\n        <option value=\"DE\">Germany</option>\n        <option value=\"CA\">Canada</option>\n        <option value=\"GB\">United Kingdom</option>\n        <option value=\"AU\">Australia</option>\n        <option value=\"IN\">India</option>\n        <option value=\"-\" disabled></option>\n        <option value=\"AF\">Afghanistan</option>\n        <option value=\"AX\">Åland Islands</option>\n        <option value=\"AL\">Albania</option>\n        <option value=\"DZ\">Algeria</option>\n        <option value=\"AS\">American Samoa</option>\n        <option value=\"AD\">Andorra</option>\n        <option value=\"AO\">Angola</option>\n        <option value=\"AI\">Anguilla</option>\n        <option value=\"AQ\">Antarctica</option>\n        <option value=\"AG\">Antigua and Barbuda</option>\n        <option value=\"AR\">Argentina</option>\n        <option value=\"AM\">Armenia</option>\n        <option value=\"AW\">Aruba</option>\n        <option value=\"AT\">Austria</option>\n        <option value=\"AZ\">Azerbaijan</option>\n        <option value=\"BS\">Bahamas</option>\n        <option value=\"BH\">Bahrain</option>\n        <option value=\"BD\">Bangladesh</option>\n        <option value=\"BB\">Barbados</option>\n        <option value=\"BY\">Belarus</option>\n        <option value=\"BE\">Belgium</option>\n        <option value=\"BZ\">Belize</option>\n        <option value=\"BJ\">Benin</option>\n        <option value=\"BM\">Bermuda</option>\n        <option value=\"BT\">Bhutan</option>\n        <option value=\"BO\">Bolivia, Plurinational State of</option>\n        <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\n        <option value=\"BA\">Bosnia and Herzegovina</option>\n        <option value=\"BW\">Botswana</option>\n        <option value=\"BV\">Bouvet Island</option>\n        <option value=\"BR\">Brazil</option>\n        <option value=\"IO\">British Indian Ocean Territory</option>\n        <option value=\"BN\">Brunei Darussalam</option>\n        <option value=\"BG\">Bulgaria</option>\n        <option value=\"BF\">Burkina Faso</option>\n        <option value=\"BI\">Burundi</option>\n        <option value=\"KH\">Cambodia</option>\n        <option value=\"CM\">Cameroon</option>\n        <option value=\"CV\">Cape Verde</option>\n        <option value=\"KY\">Cayman Islands</option>\n        <option value=\"CF\">Central African Republic</option>\n        <option value=\"TD\">Chad</option>\n        <option value=\"CL\">Chile</option>\n        <option value=\"CX\">Christmas Island</option>\n        <option value=\"CC\">Cocos (Keeling) Islands</option>\n        <option value=\"CO\">Colombia</option>\n        <option value=\"KM\">Comoros</option>\n        <option value=\"CG\">Congo</option>\n        <option value=\"CD\">Congo, the Democratic Republic of the</option>\n        <option value=\"CK\">Cook Islands</option>\n        <option value=\"CR\">Costa Rica</option>\n        <option value=\"CI\">Côte d'Ivoire</option>\n        <option value=\"HR\">Croatia</option>\n        <option value=\"CU\">Cuba</option>\n        <option value=\"CW\">Curaçao</option>\n        <option value=\"CY\">Cyprus</option>\n        <option value=\"CZ\">Czech Republic</option>\n        <option value=\"DK\">Denmark</option>\n        <option value=\"DJ\">Djibouti</option>\n        <option value=\"DM\">Dominica</option>\n        <option value=\"DO\">Dominican Republic</option>\n        <option value=\"EC\">Ecuador</option>\n        <option value=\"EG\">Egypt</option>\n        <option value=\"SV\">El Salvador</option>\n        <option value=\"GQ\">Equatorial Guinea</option>\n        <option value=\"ER\">Eritrea</option>\n        <option value=\"EE\">Estonia</option>\n        <option value=\"ET\">Ethiopia</option>\n        <option value=\"FK\">Falkland Islands (Malvinas)</option>\n        <option value=\"FO\">Faroe Islands</option>\n        <option value=\"FJ\">Fiji</option>\n        <option value=\"FI\">Finland</option>\n        <option value=\"GF\">French Guiana</option>\n        <option value=\"PF\">French Polynesia</option>\n        <option value=\"TF\">French Southern Territories</option>\n        <option value=\"GA\">Gabon</option>\n        <option value=\"GM\">Gambia</option>\n        <option value=\"GE\">Georgia</option>\n        <option value=\"GH\">Ghana</option>\n        <option value=\"GI\">Gibraltar</option>\n        <option value=\"GR\">Greece</option>\n        <option value=\"GL\">Greenland</option>\n        <option value=\"GD\">Grenada</option>\n        <option value=\"GP\">Guadeloupe</option>\n        <option value=\"GU\">Guam</option>\n        <option value=\"GT\">Guatemala</option>\n        <option value=\"GG\">Guernsey</option>\n        <option value=\"GN\">Guinea</option>\n        <option value=\"GW\">Guinea-Bissau</option>\n        <option value=\"GY\">Guyana</option>\n        <option value=\"HT\">Haiti</option>\n        <option value=\"HM\">Heard Island and McDonald Islands</option>\n        <option value=\"VA\">Holy See (Vatican City State)</option>\n        <option value=\"HN\">Honduras</option>\n        <option value=\"HK\">Hong Kong</option>\n        <option value=\"HU\">Hungary</option>\n        <option value=\"IS\">Iceland</option>\n        <option value=\"ID\">Indonesia</option>\n        <option value=\"IR\">Iran, Islamic Republic of</option>\n        <option value=\"IQ\">Iraq</option>\n        <option value=\"IE\">Ireland</option>\n        <option value=\"IM\">Isle of Man</option>\n        <option value=\"IL\">Israel</option>\n        <option value=\"IT\">Italy</option>\n        <option value=\"JM\">Jamaica</option>\n        <option value=\"JP\">Japan</option>\n        <option value=\"JE\">Jersey</option>\n        <option value=\"JO\">Jordan</option>\n        <option value=\"KZ\">Kazakhstan</option>\n        <option value=\"KE\">Kenya</option>\n        <option value=\"KI\">Kiribati</option>\n        <option value=\"KP\">Korea, Democratic People's Republic of</option>\n        <option value=\"KR\">Korea, Republic of</option>\n        <option value=\"KW\">Kuwait</option>\n        <option value=\"KG\">Kyrgyzstan</option>\n        <option value=\"LA\">Lao People's Democratic Republic</option>\n        <option value=\"LV\">Latvia</option>\n        <option value=\"LB\">Lebanon</option>\n        <option value=\"LS\">Lesotho</option>\n        <option value=\"LR\">Liberia</option>\n        <option value=\"LY\">Libya</option>\n        <option value=\"LI\">Liechtenstein</option>\n        <option value=\"LT\">Lithuania</option>\n        <option value=\"LU\">Luxembourg</option>\n        <option value=\"MO\">Macao</option>\n        <option value=\"MK\">Macedonia, the former Yugoslav Republic of</option>\n        <option value=\"MG\">Madagascar</option>\n        <option value=\"MW\">Malawi</option>\n        <option value=\"MY\">Malaysia</option>\n        <option value=\"MV\">Maldives</option>\n        <option value=\"ML\">Mali</option>\n        <option value=\"MT\">Malta</option>\n        <option value=\"MH\">Marshall Islands</option>\n        <option value=\"MQ\">Martinique</option>\n        <option value=\"MR\">Mauritania</option>\n        <option value=\"MU\">Mauritius</option>\n        <option value=\"YT\">Mayotte</option>\n        <option value=\"MX\">Mexico</option>\n        <option value=\"FM\">Micronesia, Federated States of</option>\n        <option value=\"MD\">Moldova, Republic of</option>\n        <option value=\"MC\">Monaco</option>\n        <option value=\"MN\">Mongolia</option>\n        <option value=\"ME\">Montenegro</option>\n        <option value=\"MS\">Montserrat</option>\n        <option value=\"MA\">Morocco</option>\n        <option value=\"MZ\">Mozambique</option>\n        <option value=\"MM\">Myanmar</option>\n        <option value=\"NA\">Namibia</option>\n        <option value=\"NR\">Nauru</option>\n        <option value=\"NP\">Nepal</option>\n        <option value=\"NL\">Netherlands</option>\n        <option value=\"NC\">New Caledonia</option>\n        <option value=\"NZ\">New Zealand</option>\n        <option value=\"NI\">Nicaragua</option>\n        <option value=\"NE\">Niger</option>\n        <option value=\"NG\">Nigeria</option>\n        <option value=\"NU\">Niue</option>\n        <option value=\"NF\">Norfolk Island</option>\n        <option value=\"MP\">Northern Mariana Islands</option>\n        <option value=\"NO\">Norway</option>\n        <option value=\"OM\">Oman</option>\n        <option value=\"PK\">Pakistan</option>\n        <option value=\"PW\">Palau</option>\n        <option value=\"PS\">Palestinian Territory, Occupied</option>\n        <option value=\"PA\">Panama</option>\n        <option value=\"PG\">Papua New Guinea</option>\n        <option value=\"PY\">Paraguay</option>\n        <option value=\"PE\">Peru</option>\n        <option value=\"PH\">Philippines</option>\n        <option value=\"PN\">Pitcairn</option>\n        <option value=\"PL\">Poland</option>\n        <option value=\"PT\">Portugal</option>\n        <option value=\"PR\">Puerto Rico</option>\n        <option value=\"QA\">Qatar</option>\n        <option value=\"RE\">Réunion</option>\n        <option value=\"RO\">Romania</option>\n        <option value=\"RU\">Russian Federation</option>\n        <option value=\"RW\">Rwanda</option>\n        <option value=\"BL\">Saint Barthélemy</option>\n        <option value=\"SH\">Saint Helena, Ascension and Tristan da Cunha</option>\n        <option value=\"KN\">Saint Kitts and Nevis</option>\n        <option value=\"LC\">Saint Lucia</option>\n        <option value=\"MF\">Saint Martin (French part)</option>\n        <option value=\"PM\">Saint Pierre and Miquelon</option>\n        <option value=\"VC\">Saint Vincent and the Grenadines</option>\n        <option value=\"WS\">Samoa</option>\n        <option value=\"SM\">San Marino</option>\n        <option value=\"ST\">Sao Tome and Principe</option>\n        <option value=\"SA\">Saudi Arabia</option>\n        <option value=\"SN\">Senegal</option>\n        <option value=\"RS\">Serbia</option>\n        <option value=\"SC\">Seychelles</option>\n        <option value=\"SL\">Sierra Leone</option>\n        <option value=\"SG\">Singapore</option>\n        <option value=\"SX\">Sint Maarten (Dutch part)</option>\n        <option value=\"SK\">Slovakia</option>\n        <option value=\"SI\">Slovenia</option>\n        <option value=\"SB\">Solomon Islands</option>\n        <option value=\"SO\">Somalia</option>\n        <option value=\"ZA\">South Africa</option>\n        <option value=\"GS\">South Georgia and the South Sandwich Islands</option>\n        <option value=\"SS\">South Sudan</option>\n        <option value=\"ES\">Spain</option>\n        <option value=\"LK\">Sri Lanka</option>\n        <option value=\"SD\">Sudan</option>\n        <option value=\"SR\">Suriname</option>\n        <option value=\"SJ\">Svalbard and Jan Mayen</option>\n        <option value=\"SZ\">Swaziland</option>\n        <option value=\"SE\">Sweden</option>\n        <option value=\"CH\">Switzerland</option>\n        <option value=\"SY\">Syrian Arab Republic</option>\n        <option value=\"TW\">Taiwan</option>\n        <option value=\"TJ\">Tajikistan</option>\n        <option value=\"TZ\">Tanzania, United Republic of</option>\n        <option value=\"TH\">Thailand</option>\n        <option value=\"TL\">Timor-Leste</option>\n        <option value=\"TG\">Togo</option>\n        <option value=\"TK\">Tokelau</option>\n        <option value=\"TO\">Tonga</option>\n        <option value=\"TT\">Trinidad and Tobago</option>\n        <option value=\"TN\">Tunisia</option>\n        <option value=\"TR\">Turkey</option>\n        <option value=\"TM\">Turkmenistan</option>\n        <option value=\"TC\">Turks and Caicos Islands</option>\n        <option value=\"TV\">Tuvalu</option>\n        <option value=\"UG\">Uganda</option>\n        <option value=\"UA\">Ukraine</option>\n        <option value=\"AE\">United Arab Emirates</option>\n        <option value=\"UM\">United States Minor Outlying Islands</option>\n        <option value=\"UY\">Uruguay</option>\n        <option value=\"UZ\">Uzbekistan</option>\n        <option value=\"VU\">Vanuatu</option>\n        <option value=\"VE\">Venezuela, Bolivarian Republic of</option>\n        <option value=\"VN\">Viet Nam</option>\n        <option value=\"VG\">Virgin Islands, British</option>\n        <option value=\"VI\">Virgin Islands, U.S.</option>\n        <option value=\"WF\">Wallis and Futuna</option>\n        <option value=\"EH\">Western Sahara</option>\n        <option value=\"YE\">Yemen</option>\n        <option value=\"ZM\">Zambia</option>\n        <option value=\"ZW\">Zimbabwe</option>\n      </select>\n    </div>\n  </div>\n  <div [ngClass]=\"trialFlow ? 'col-5' : 'col-3'\">\n    <div class=\"form-group\">\n      <label for=\"addressPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n      <input\n        id=\"addressPostalCode\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressPostalCode\"\n        [(ngModel)]=\"taxInfo.postalCode\"\n        [required]=\"taxInfo.country === 'US'\"\n        autocomplete=\"postal-code\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\" *ngIf=\"organizationId && taxInfo.country !== 'US'\">\n    <div class=\"form-group form-check\">\n      <input\n        class=\"form-check-input\"\n        id=\"addressIncludeTaxId\"\n        name=\"addressIncludeTaxId\"\n        type=\"checkbox\"\n        [(ngModel)]=\"taxInfo.includeTaxId\"\n      />\n      <label class=\"form-check-label\" for=\"addressIncludeTaxId\">{{ \"includeVAT\" | i18n }}</label>\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"taxId\">{{ \"taxIdNumber\" | i18n }}</label>\n      <input id=\"taxId\" class=\"form-control\" type=\"text\" name=\"taxId\" [(ngModel)]=\"taxInfo.taxId\" />\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine1\">{{ \"address1\" | i18n }}</label>\n      <input\n        id=\"addressLine1\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine1\"\n        [(ngModel)]=\"taxInfo.line1\"\n        autocomplete=\"address-line1\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine2\">{{ \"address2\" | i18n }}</label>\n      <input\n        id=\"addressLine2\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine2\"\n        [(ngModel)]=\"taxInfo.line2\"\n        autocomplete=\"address-line2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressCity\">{{ \"cityTown\" | i18n }}</label>\n      <input\n        id=\"addressCity\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressCity\"\n        [(ngModel)]=\"taxInfo.city\"\n        autocomplete=\"address-level2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressState\">{{ \"stateProvince\" | i18n }}</label>\n      <input\n        id=\"addressState\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressState\"\n        [(ngModel)]=\"taxInfo.state\"\n        autocomplete=\"address-level1\"\n      />\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationTaxInfoUpdateRequest } from \"@bitwarden/common/models/request/organization-tax-info-update.request\";\nimport { TaxInfoUpdateRequest } from \"@bitwarden/common/models/request/tax-info-update.request\";\nimport { TaxInfoResponse } from \"@bitwarden/common/models/response/tax-info.response\";\nimport { TaxRateResponse } from \"@bitwarden/common/models/response/tax-rate.response\";\n\ntype TaxInfoView = Omit<TaxInfoResponse, \"taxIdType\"> & {\n  includeTaxId: boolean;\n  [key: string]: unknown;\n};\n\n@Component({\n  selector: \"app-tax-info\",\n  templateUrl: \"tax-info.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TaxInfoComponent {\n  @Input() trialFlow = false;\n  @Output() onCountryChanged = new EventEmitter();\n\n  loading = true;\n  organizationId: string;\n  taxInfo: TaxInfoView = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  taxRates: TaxRateResponse[];\n\n  private pristine: TaxInfoView = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      if (this.organizationId) {\n        try {\n          const taxInfo = await this.organizationApiService.getTaxInfo(this.organizationId);\n          if (taxInfo) {\n            this.taxInfo.taxId = taxInfo.taxId;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.line1 = taxInfo.line1;\n            this.taxInfo.line2 = taxInfo.line2;\n            this.taxInfo.city = taxInfo.city;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n            this.taxInfo.includeTaxId =\n              this.taxInfo.country !== \"US\" &&\n              (!!taxInfo.taxId ||\n                !!taxInfo.line1 ||\n                !!taxInfo.line2 ||\n                !!taxInfo.city ||\n                !!taxInfo.state);\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      } else {\n        try {\n          const taxInfo = await this.apiService.getTaxInfo();\n          if (taxInfo) {\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.pristine = Object.assign({}, this.taxInfo);\n      // If not the default (US) then trigger onCountryChanged\n      if (this.taxInfo.country !== \"US\") {\n        this.onCountryChanged.emit();\n      }\n    });\n\n    try {\n      const taxRates = await this.apiService.getTaxRates();\n      if (taxRates) {\n        this.taxRates = taxRates.data;\n      }\n    } catch (e) {\n      this.logService.error(e);\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  get taxRate() {\n    if (this.taxRates != null) {\n      const localTaxRate = this.taxRates.find(\n        (x) => x.country === this.taxInfo.country && x.postalCode === this.taxInfo.postalCode\n      );\n      return localTaxRate?.rate ?? null;\n    }\n  }\n\n  getTaxInfoRequest(): TaxInfoUpdateRequest {\n    if (this.organizationId) {\n      const request = new OrganizationTaxInfoUpdateRequest();\n      request.taxId = this.taxInfo.taxId;\n      request.state = this.taxInfo.state;\n      request.line1 = this.taxInfo.line1;\n      request.line2 = this.taxInfo.line2;\n      request.city = this.taxInfo.city;\n      request.state = this.taxInfo.state;\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    } else {\n      const request = new TaxInfoUpdateRequest();\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    }\n  }\n\n  submitTaxInfo(): Promise<any> {\n    if (!this.hasChanged()) {\n      return new Promise<void>((resolve) => {\n        resolve();\n      });\n    }\n    const request = this.getTaxInfoRequest();\n    return this.organizationId\n      ? this.organizationApiService.updateTaxInfo(\n          this.organizationId,\n          request as OrganizationTaxInfoUpdateRequest\n        )\n      : this.apiService.putTaxInfo(request);\n  }\n\n  changeCountry() {\n    if (this.taxInfo.country === \"US\") {\n      this.taxInfo.includeTaxId = false;\n      this.taxInfo.taxId = null;\n      this.taxInfo.line1 = null;\n      this.taxInfo.line2 = null;\n      this.taxInfo.city = null;\n      this.taxInfo.state = null;\n    }\n    this.onCountryChanged.emit();\n  }\n\n  private hasChanged(): boolean {\n    for (const key in this.taxInfo) {\n      // eslint-disable-next-line\n      if (this.pristine.hasOwnProperty(key) && this.pristine[key] !== this.taxInfo[key]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"createOrganization && selfHosted\">\n  <p>{{ \"uploadLicenseFileOrg\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_organization_license.json\"\n      }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n  </form>\n</ng-container>\n<form\n  #form\n  [formGroup]=\"formGroup\"\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n  *ngIf=\"!loading && !selfHosted && this.plans\"\n  class=\"tw-pt-6\"\n>\n  <app-org-info\n    (changedBusinessOwned)=\"changedOwnedBusiness()\"\n    [formGroup]=\"formGroup\"\n    [createOrganization]=\"createOrganization\"\n    [isProvider]=\"!!providerId\"\n    [acceptingSponsorship]=\"acceptingSponsorship\"\n  ></app-org-info>\n  <h2 class=\"mt-5\">{{ \"chooseYourPlan\" | i18n }}</h2>\n  <div *ngFor=\"let selectableProduct of selectableProducts\" class=\"form-check form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"product\"\n      id=\"product{{ selectableProduct.product }}\"\n      [value]=\"selectableProduct.product\"\n      formControlName=\"product\"\n      (change)=\"changedProduct()\"\n    />\n    <label class=\"form-check-label\" for=\"product{{ selectableProduct.product }}\">\n      {{ selectableProduct.nameLocalizationKey | i18n }}\n      <small class=\"mb-1\">{{ selectableProduct.descriptionLocalizationKey | i18n: \"1\" }}</small>\n      <ng-container\n        *ngIf=\"selectableProduct.product === productTypes.Enterprise; else fullFeatureList\"\n      >\n        <small>• {{ \"includeAllTeamsFeatures\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSso\">• {{ \"includeSsoAuthentication\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasPolicies\"\n          >• {{ \"includeEnterprisePolicies\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-container>\n      <ng-template #fullFeatureList>\n        <small *ngIf=\"selectableProduct.product == productTypes.Free\"\n          >• {{ \"limitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"selectableProduct.product != productTypes.Free && selectableProduct.maxUsers\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxUsers\">• {{ \"addShareUnlimitedUsers\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.maxCollections\"\n          >• {{ \"limitedCollections\" | i18n: selectableProduct.maxCollections }}</small\n        >\n        <small *ngIf=\"selectableProduct.maxAdditionalSeats\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxAdditionalSeats }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxCollections\"\n          >• {{ \"createUnlimitedCollections\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.baseStorageGb\"\n          >• {{ \"gbEncryptedFileStorage\" | i18n: selectableProduct.baseStorageGb + \"GB\" }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasGroups\">• {{ \"controlAccessWithGroups\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasApi\">• {{ \"trackAuditLogs\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasDirectory\"\n          >• {{ \"syncUsersFromDirectory\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.usersGetPremium\">• {{ \"usersGetPremium\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.product != productTypes.Free\"\n          >• {{ \"priorityCustomerSupport\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-template>\n      <span *ngIf=\"selectableProduct.product != productTypes.Free\">\n        <ng-container *ngIf=\"selectableProduct.basePrice && !acceptingSponsorship\">\n          {{ selectableProduct.basePrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }},\n          {{ \"includesXUsers\" | i18n: selectableProduct.baseSeats }}\n          <ng-container *ngIf=\"selectableProduct.hasAdditionalSeatsOption\">\n            {{ (\"additionalUsers\" | i18n).toLowerCase() }}\n            {{ selectableProduct.seatPrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </ng-container>\n        </ng-container>\n      </span>\n      <span *ngIf=\"!selectableProduct.basePrice && selectableProduct.hasAdditionalSeatsOption\">\n        {{ \"costPerUser\" | i18n: (selectableProduct.seatPrice / 12 | currency: \"$\") }} /{{\n          \"month\" | i18n\n        }}\n      </span>\n      <span *ngIf=\"selectableProduct.product == productTypes.Free\">{{ \"freeForever\" | i18n }}</span>\n    </label>\n  </div>\n  <div *ngIf=\"formGroup.controls['product'].value !== productTypes.Free\">\n    <ng-container *ngIf=\"selectedPlan.hasAdditionalSeatsOption && !selectedPlan.baseSeats\">\n      <h2 class=\"mt-5\">{{ \"users\" | i18n }}</h2>\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <label for=\"additionalSeats\">{{ \"userSeats\" | i18n }}</label>\n          <input\n            id=\"additionalSeats\"\n            class=\"form-control\"\n            type=\"number\"\n            name=\"additionalSeats\"\n            formControlName=\"additionalSeats\"\n            placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n            required\n          />\n          <small class=\"text-muted form-text\">{{ \"userSeatsHowManyDesc\" | i18n }}</small>\n        </div>\n      </div>\n    </ng-container>\n    <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n    <div class=\"row\" *ngIf=\"selectedPlan.hasAdditionalSeatsOption && selectedPlan.baseSeats\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalSeats\">{{ \"additionalUserSeats\" | i18n }}</label>\n        <input\n          id=\"additionalSeats\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"additionalSeats\"\n          formControlName=\"additionalSeats\"\n          placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"userSeatsAdditionalDesc\"\n            | i18n: selectedPlan.baseSeats:(seatPriceMonthly(selectedPlan) | currency: \"$\")\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n        <input\n          id=\"additionalStorage\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"additionalStorageGb\"\n          formControlName=\"additionalStorage\"\n          step=\"1\"\n          placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"additionalStorageIntervalDesc\"\n            | i18n\n              : \"1 GB\"\n              : (additionalStoragePriceMonthly(selectedPlan) | currency: \"$\")\n              : (\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\" *ngIf=\"selectedPlan.hasPremiumAccessOption\">\n        <div class=\"form-check\">\n          <input\n            id=\"premiumAccess\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"premiumAccessAddon\"\n            formControlName=\"premiumAccessAddon\"\n          />\n          <label for=\"premiumAccess\" class=\"form-check-label bold\">{{\n            \"premiumAccess\" | i18n\n          }}</label>\n        </div>\n        <small class=\"text-muted form-text\">{{\n          \"premiumAccessDesc\" | i18n: (3.33 | currency: \"$\"):(\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n    <div class=\"form-check form-check-block\" *ngFor=\"let selectablePlan of selectablePlans\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"plan\"\n        id=\"interval{{ selectablePlan.type }}\"\n        [value]=\"selectablePlan.type\"\n        formControlName=\"plan\"\n      />\n      <label class=\"form-check-label\" for=\"interval{{ selectablePlan.type }}\">\n        <ng-container *ngIf=\"selectablePlan.isAnnual\">\n          {{ \"annually\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }}\n            =\n            <ng-container *ngIf=\"acceptingSponsorship; else notAcceptingSponsorship\">\n              <span style=\"text-decoration: line-through\">{{\n                selectablePlan.basePrice | currency: \"$\"\n              }}</span>\n              {{ \"freeWithSponsorship\" | i18n }}\n            </ng-container>\n            <ng-template #notAcceptingSponsorship>\n              {{ selectablePlan.basePrice | currency: \"$\" }}\n              /{{ \"year\" | i18n }}\n            </ng-template>\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ formGroup.controls[\"additionalSeats\"].value || 0 }} &times;\n            {{ selectablePlan.seatPrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} = {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{\n              \"year\" | i18n\n            }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}:\n            {{ formGroup.controls[\"additionalStorage\"].value || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"year\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasPremiumAccessOption && premiumAccessAddon\">\n            {{ \"premiumAccess\" | i18n }}:\n            {{ selectablePlan.premiumAccessOptionCost / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }}\n            =\n            {{ 40 | currency: \"$\" }}\n            /{{ \"year\" | i18n }}\n          </small>\n        </ng-container>\n        <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n          {{ \"monthly\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }}\n            =\n            {{ selectablePlan.basePrice | currency: \"$\" }}\n            /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ formGroup.controls[\"additionalSeats\"].value || 0 }} &times;\n            {{ selectablePlan.seatPrice | currency: \"$\" }} {{ \"monthAbbr\" | i18n }} =\n            {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}:\n            {{ formGroup.controls[\"additionalStorage\"].value || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n          <small\n            *ngIf=\"\n              selectablePlan.hasPremiumAccessOption &&\n              formGroup.controls['premiumAccessAddon'].value\n            \"\n          >\n            {{ \"premiumAccess\" | i18n }}:\n            {{ selectablePlan.premiumAccessOptionCost | currency: \"$\" }} {{ \"monthAbbr\" | i18n }} =\n            {{ 40 | currency: \"$\" }}\n            /{{ \"month\" | i18n }}\n          </small>\n        </ng-container>\n      </label>\n    </div>\n    <hr class=\"my-3\" />\n    <h2 class=\"spaced-header mb-4\">\n      {{ (createOrganization ? \"paymentInformation\" : \"billingInformation\") | i18n }}\n    </h2>\n    <small class=\"text-muted font-italic mb-3 d-block\">\n      {{ paymentDesc }}\n    </small>\n    <app-payment *ngIf=\"createOrganization\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    <div id=\"price\" class=\"my-4\">\n      <div class=\"text-muted text-sm\">\n        {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n        <br />\n        <ng-container>\n          {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n        </ng-container>\n      </div>\n      <hr class=\"my-1 col-3 ml-0\" />\n      <p class=\"text-lg\">\n        <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{\n          selectedPlanInterval | i18n\n        }}\n      </p>\n    </div>\n    <ng-container *ngIf=\"!createOrganization\">\n      <app-payment [showMethods]=\"false\"></app-payment>\n    </ng-container>\n  </div>\n  <div *ngIf=\"singleOrgPolicyBlock\" class=\"mt-4\">\n    <app-callout [type]=\"'error'\">{{ \"singleOrgBlockCreateMessage\" | i18n }}</app-callout>\n  </div>\n  <div class=\"mt-4\">\n    <button\n      type=\"submit\"\n      buttonType=\"primary\"\n      bitButton\n      [loading]=\"form.loading\"\n      [disabled]=\"!formGroup.valid\"\n    >\n      {{ \"submit\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\nimport { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { OrganizationCreateRequest } from \"@bitwarden/common/models/request/organization-create.request\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organization-keys.request\";\nimport { OrganizationUpgradeRequest } from \"@bitwarden/common/models/request/organization-upgrade.request\";\nimport { ProviderOrganizationCreateRequest } from \"@bitwarden/common/models/request/provider/provider-organization-create.request\";\nimport { PlanResponse } from \"@bitwarden/common/models/response/plan.response\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\ninterface OnSuccessArgs {\n  organizationId: string;\n}\n\n@Component({\n  selector: \"app-organization-plans\",\n  templateUrl: \"organization-plans.component.html\",\n})\nexport class OrganizationPlansComponent implements OnInit, OnDestroy {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxComponent: TaxInfoComponent;\n\n  @Input() organizationId: string;\n  @Input() showFree = true;\n  @Input() showCancel = false;\n  @Input() acceptingSponsorship = false;\n  @Input() product: ProductType = ProductType.Free;\n  @Input() plan: PlanType = PlanType.Free;\n  @Input() providerId: string;\n  @Output() onSuccess = new EventEmitter<OnSuccessArgs>();\n  @Output() onCanceled = new EventEmitter<void>();\n  @Output() onTrialBillingSuccess = new EventEmitter();\n\n  loading = true;\n  selfHosted = false;\n  productTypes = ProductType;\n  formPromise: Promise<string>;\n  singleOrgPolicyBlock = false;\n  isInTrialFlow = false;\n  discount = 0;\n\n  formGroup = this.formBuilder.group({\n    name: [\"\"],\n    billingEmail: [\"\", [Validators.email]],\n    businessOwned: [false],\n    premiumAccessAddon: [false],\n    additionalStorage: [0, [Validators.min(0), Validators.max(99)]],\n    additionalSeats: [0, [Validators.min(0), Validators.max(100000)]],\n    clientOwnerEmail: [\"\", [Validators.email]],\n    businessName: [\"\"],\n    plan: [this.plan],\n    product: [this.product],\n  });\n\n  plans: PlanResponse[];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private router: Router,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private organizationService: OrganizationService,\n    private logService: LogService,\n    private messagingService: MessagingService,\n    private formBuilder: UntypedFormBuilder,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    if (!this.selfHosted) {\n      const plans = await this.apiService.getPlans();\n      this.plans = plans.data;\n      if (this.product === ProductType.Enterprise || this.product === ProductType.Teams) {\n        this.formGroup.controls.businessOwned.setValue(true);\n      }\n    }\n\n    if (this.providerId) {\n      this.formGroup.controls.businessOwned.setValue(true);\n      this.changedOwnedBusiness();\n    }\n\n    if (!this.createOrganization || this.acceptingSponsorship) {\n      this.formGroup.controls.product.setValue(ProductType.Families);\n      this.changedProduct();\n    }\n\n    if (this.createOrganization) {\n      this.formGroup.controls.name.addValidators(Validators.required);\n      this.formGroup.controls.billingEmail.addValidators(Validators.required);\n    }\n\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.SingleOrg)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.singleOrgPolicyBlock = policyAppliesToActiveUser;\n      });\n\n    this.loading = false;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get createOrganization() {\n    return this.organizationId == null;\n  }\n\n  get selectedPlan() {\n    return this.plans.find((plan) => plan.type === this.formGroup.controls.plan.value);\n  }\n\n  get selectedPlanInterval() {\n    return this.selectedPlan.isAnnual ? \"year\" : \"month\";\n  }\n\n  get selectableProducts() {\n    let validPlans = this.plans.filter((plan) => plan.type !== PlanType.Custom);\n\n    if (this.formGroup.controls.businessOwned.value) {\n      validPlans = validPlans.filter((plan) => plan.canBeUsedByBusiness);\n    }\n\n    if (!this.showFree) {\n      validPlans = validPlans.filter((plan) => plan.product !== ProductType.Free);\n    }\n\n    validPlans = validPlans.filter(\n      (plan) =>\n        !plan.legacyYear &&\n        !plan.disabled &&\n        (plan.isAnnual || plan.product === this.productTypes.Free)\n    );\n\n    if (this.acceptingSponsorship) {\n      const familyPlan = this.plans.find((plan) => plan.type === PlanType.FamiliesAnnually);\n      this.discount = familyPlan.basePrice;\n      validPlans = [familyPlan];\n    }\n\n    return validPlans;\n  }\n\n  get selectablePlans() {\n    return this.plans?.filter(\n      (plan) =>\n        !plan.legacyYear && !plan.disabled && plan.product === this.formGroup.controls.product.value\n    );\n  }\n\n  additionalStoragePriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.additionalStoragePricePerGb;\n    }\n    return selectedPlan.additionalStoragePricePerGb / 12;\n  }\n\n  seatPriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.seatPrice;\n    }\n    return selectedPlan.seatPrice / 12;\n  }\n\n  additionalStorageTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalStorageOption) {\n      return 0;\n    }\n\n    return (\n      plan.additionalStoragePricePerGb *\n      Math.abs(this.formGroup.controls.additionalStorage.value || 0)\n    );\n  }\n\n  seatTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalSeatsOption) {\n      return 0;\n    }\n\n    return plan.seatPrice * Math.abs(this.formGroup.controls.additionalSeats.value || 0);\n  }\n\n  get subtotal() {\n    let subTotal = this.selectedPlan.basePrice;\n    if (\n      this.selectedPlan.hasAdditionalSeatsOption &&\n      this.formGroup.controls.additionalSeats.value\n    ) {\n      subTotal += this.seatTotal(this.selectedPlan);\n    }\n    if (\n      this.selectedPlan.hasAdditionalStorageOption &&\n      this.formGroup.controls.additionalStorage.value\n    ) {\n      subTotal += this.additionalStorageTotal(this.selectedPlan);\n    }\n    if (\n      this.selectedPlan.hasPremiumAccessOption &&\n      this.formGroup.controls.premiumAccessAddon.value\n    ) {\n      subTotal += this.selectedPlan.premiumAccessOptionPrice;\n    }\n    return subTotal - this.discount;\n  }\n\n  get freeTrial() {\n    return this.selectedPlan.trialPeriodDays != null;\n  }\n\n  get taxCharges() {\n    return this.taxComponent != null && this.taxComponent.taxRate != null\n      ? (this.taxComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total() {\n    return this.subtotal + this.taxCharges || 0;\n  }\n\n  get paymentDesc() {\n    if (this.acceptingSponsorship) {\n      return this.i18nService.t(\"paymentSponsored\");\n    } else if (this.freeTrial && this.createOrganization) {\n      return this.i18nService.t(\"paymentChargedWithTrial\");\n    } else {\n      return this.i18nService.t(\"paymentCharged\", this.i18nService.t(this.selectedPlanInterval));\n    }\n  }\n\n  changedProduct() {\n    this.formGroup.controls.plan.setValue(this.selectablePlans[0].type);\n    if (!this.selectedPlan.hasPremiumAccessOption) {\n      this.formGroup.controls.premiumAccessAddon.setValue(false);\n    }\n    if (!this.selectedPlan.hasAdditionalStorageOption) {\n      this.formGroup.controls.additionalStorage.setValue(0);\n    }\n    if (!this.selectedPlan.hasAdditionalSeatsOption) {\n      this.formGroup.controls.additionalSeats.setValue(0);\n    } else if (\n      !this.formGroup.controls.additionalSeats.value &&\n      !this.selectedPlan.baseSeats &&\n      this.selectedPlan.hasAdditionalSeatsOption\n    ) {\n      this.formGroup.controls.additionalSeats.setValue(1);\n    }\n  }\n\n  changedOwnedBusiness() {\n    if (!this.formGroup.controls.businessOwned.value || this.selectedPlan.canBeUsedByBusiness) {\n      return;\n    }\n    this.formGroup.controls.product.setValue(ProductType.Teams);\n    this.formGroup.controls.plan.setValue(PlanType.TeamsAnnually);\n    this.changedProduct();\n  }\n\n  changedCountry() {\n    this.paymentComponent.hideBank = this.taxComponent.taxInfo.country !== \"US\";\n    // Bank Account payments are only available for US customers\n    if (\n      this.paymentComponent.hideBank &&\n      this.paymentComponent.method === PaymentMethodType.BankAccount\n    ) {\n      this.paymentComponent.method = PaymentMethodType.Card;\n      this.paymentComponent.changeMethod();\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  async submit() {\n    if (this.singleOrgPolicyBlock) {\n      return;\n    }\n\n    try {\n      const doSubmit = async (): Promise<string> => {\n        let orgId: string = null;\n        if (this.createOrganization) {\n          const shareKey = await this.cryptoService.makeShareKey();\n          const key = shareKey[0].encryptedString;\n          const collection = await this.cryptoService.encrypt(\n            this.i18nService.t(\"defaultCollection\"),\n            shareKey[1]\n          );\n          const collectionCt = collection.encryptedString;\n          const orgKeys = await this.cryptoService.makeKeyPair(shareKey[1]);\n\n          if (this.selfHosted) {\n            orgId = await this.createSelfHosted(key, collectionCt, orgKeys);\n          } else {\n            orgId = await this.createCloudHosted(key, collectionCt, orgKeys, shareKey[1]);\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            this.i18nService.t(\"organizationCreated\"),\n            this.i18nService.t(\"organizationReadyToGo\")\n          );\n        } else {\n          orgId = await this.updateOrganization(orgId);\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"organizationUpgraded\")\n          );\n        }\n\n        await this.apiService.refreshIdentityToken();\n        await this.syncService.fullSync(true);\n\n        if (!this.acceptingSponsorship && !this.isInTrialFlow) {\n          this.router.navigate([\"/organizations/\" + orgId]);\n        }\n\n        if (this.isInTrialFlow) {\n          this.onTrialBillingSuccess.emit({\n            orgId: orgId,\n            subLabelText: this.billingSubLabelText(),\n          });\n        }\n\n        return orgId;\n      };\n\n      this.formPromise = doSubmit();\n      const organizationId = await this.formPromise;\n      this.onSuccess.emit({ organizationId: organizationId });\n      this.messagingService.send(\"organizationCreated\", organizationId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async updateOrganization(orgId: string) {\n    const request = new OrganizationUpgradeRequest();\n    request.businessName = this.formGroup.controls.businessOwned.value\n      ? this.formGroup.controls.businessName.value\n      : null;\n    request.additionalSeats = this.formGroup.controls.additionalSeats.value;\n    request.additionalStorageGb = this.formGroup.controls.additionalStorage.value;\n    request.premiumAccessAddon =\n      this.selectedPlan.hasPremiumAccessOption && this.formGroup.controls.premiumAccessAddon.value;\n    request.planType = this.selectedPlan.type;\n    request.billingAddressCountry = this.taxComponent.taxInfo.country;\n    request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n\n    // Retrieve org info to backfill pub/priv key if necessary\n    const org = await this.organizationService.get(this.organizationId);\n    if (!org.hasPublicAndPrivateKeys) {\n      const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n      const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n      request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    }\n\n    const result = await this.organizationApiService.upgrade(this.organizationId, request);\n    if (!result.success && result.paymentIntentClientSecret != null) {\n      await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n    }\n    return this.organizationId;\n  }\n\n  private async createCloudHosted(\n    key: string,\n    collectionCt: string,\n    orgKeys: [string, EncString],\n    orgKey: SymmetricCryptoKey\n  ) {\n    const request = new OrganizationCreateRequest();\n    request.key = key;\n    request.collectionName = collectionCt;\n    request.name = this.formGroup.controls.name.value;\n    request.billingEmail = this.formGroup.controls.billingEmail.value;\n    request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n\n    if (this.selectedPlan.type === PlanType.Free) {\n      request.planType = PlanType.Free;\n    } else {\n      const tokenResult = await this.paymentComponent.createPaymentToken();\n\n      request.paymentToken = tokenResult[0];\n      request.paymentMethodType = tokenResult[1];\n      request.businessName = this.formGroup.controls.businessOwned.value\n        ? this.formGroup.controls.businessName.value\n        : null;\n      request.additionalSeats = this.formGroup.controls.additionalSeats.value;\n      request.additionalStorageGb = this.formGroup.controls.additionalStorage.value;\n      request.premiumAccessAddon =\n        this.selectedPlan.hasPremiumAccessOption &&\n        this.formGroup.controls.premiumAccessAddon.value;\n      request.planType = this.selectedPlan.type;\n      request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n      request.billingAddressCountry = this.taxComponent.taxInfo.country;\n      if (this.taxComponent.taxInfo.includeTaxId) {\n        request.taxIdNumber = this.taxComponent.taxInfo.taxId;\n        request.billingAddressLine1 = this.taxComponent.taxInfo.line1;\n        request.billingAddressLine2 = this.taxComponent.taxInfo.line2;\n        request.billingAddressCity = this.taxComponent.taxInfo.city;\n        request.billingAddressState = this.taxComponent.taxInfo.state;\n      }\n    }\n\n    if (this.providerId) {\n      const providerRequest = new ProviderOrganizationCreateRequest(\n        this.formGroup.controls.clientOwnerEmail.value,\n        request\n      );\n      const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n      providerRequest.organizationCreateRequest.key = (\n        await this.cryptoService.encrypt(orgKey.key, providerKey)\n      ).encryptedString;\n      const orgId = (\n        await this.apiService.postProviderCreateOrganization(this.providerId, providerRequest)\n      ).organizationId;\n\n      return orgId;\n    } else {\n      return (await this.organizationApiService.create(request)).id;\n    }\n  }\n\n  private async createSelfHosted(key: string, collectionCt: string, orgKeys: [string, EncString]) {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      throw new Error(this.i18nService.t(\"selectFile\"));\n    }\n\n    const fd = new FormData();\n    fd.append(\"license\", files[0]);\n    fd.append(\"key\", key);\n    fd.append(\"collectionName\", collectionCt);\n    const response = await this.organizationApiService.createLicense(fd);\n    const orgId = response.id;\n\n    await this.apiService.refreshIdentityToken();\n\n    // Org Keys live outside of the OrganizationLicense - add the keys to the org here\n    const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    await this.organizationApiService.updateKeys(orgId, request);\n\n    return orgId;\n  }\n\n  private billingSubLabelText(): string {\n    const selectedPlan = this.selectedPlan;\n    const price = selectedPlan.basePrice === 0 ? selectedPlan.seatPrice : selectedPlan.basePrice;\n    let text = \"\";\n\n    if (selectedPlan.isAnnual) {\n      text += `${this.i18nService.t(\"annual\")} ($${price}/${this.i18nService.t(\"yr\")})`;\n    } else {\n      text += `${this.i18nService.t(\"monthly\")} ($${price}/${this.i18nService.t(\"monthAbbr\")})`;\n    }\n\n    return text;\n  }\n}\n","<form #form [formGroup]=\"formGroup\" [appApiAction]=\"formPromise\" (ngSubmit)=\"submit()\">\n  <div class=\"tw-container tw-mb-3\">\n    <div class=\"tw-mb-6\">\n      <h2 class=\"tw-mb-3 tw-text-base tw-font-semibold\">{{ \"billingPlanLabel\" | i18n }}</h2>\n      <div class=\"tw-mb-1 tw-items-center\" *ngFor=\"let selectablePlan of selectablePlans\">\n        <label class=\"tw- tw-block tw-text-main\" for=\"interval{{ selectablePlan.type }}\">\n          <input\n            checked\n            class=\"tw-h-4 tw-w-4 tw-align-middle\"\n            id=\"interval{{ selectablePlan.type }}\"\n            name=\"plan\"\n            type=\"radio\"\n            [value]=\"selectablePlan.type\"\n            formControlName=\"plan\"\n          />\n          <ng-container *ngIf=\"selectablePlan.isAnnual\">\n            {{ \"annual\" | i18n }} -\n            {{\n              (selectablePlan.basePrice === 0 ? selectablePlan.seatPrice : selectablePlan.basePrice)\n                | currency: \"$\"\n            }}\n            /{{ \"yr\" | i18n }}\n          </ng-container>\n          <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n            {{ \"monthly\" | i18n }} -\n            {{\n              (selectablePlan.basePrice === 0 ? selectablePlan.seatPrice : selectablePlan.basePrice)\n                | currency: \"$\"\n            }}\n            /{{ \"monthAbbr\" | i18n }}\n          </ng-container>\n        </label>\n      </div>\n    </div>\n\n    <div class=\"tw-mb-4\">\n      <h2 class=\"tw-mb-3 tw-text-base tw-font-semibold\">{{ \"paymentType\" | i18n }}</h2>\n      <app-payment [hideCredit]=\"true\" [trialFlow]=\"true\"></app-payment>\n      <app-tax-info [trialFlow]=\"true\" (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    </div>\n\n    <div class=\"tw-flex tw-space-x-2\">\n      <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n        {{ \"startTrial\" | i18n }}\n      </button>\n\n      <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"stepBack()\">Back</button>\n    </div>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { UntypedFormBuilder, FormGroup } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\nimport { OrganizationPlansComponent } from \"../../settings/organization-plans.component\";\n\n@Component({\n  selector: \"app-billing\",\n  templateUrl: \"./billing.component.html\",\n})\nexport class BillingComponent extends OrganizationPlansComponent {\n  @Input() orgInfoForm: FormGroup;\n  @Output() previousStep = new EventEmitter();\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    router: Router,\n    syncService: SyncService,\n    policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    messagingService: MessagingService,\n    formBuilder: UntypedFormBuilder,\n    organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      apiService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      router,\n      syncService,\n      policyService,\n      organizationService,\n      logService,\n      messagingService,\n      formBuilder,\n      organizationApiService\n    );\n  }\n\n  async ngOnInit() {\n    const additionalSeats = this.product == ProductType.Families ? 0 : 1;\n    this.formGroup.patchValue({\n      name: this.orgInfoForm.value.name,\n      billingEmail: this.orgInfoForm.value.email,\n      additionalSeats: additionalSeats,\n      plan: this.plan,\n      product: this.product,\n    });\n    this.isInTrialFlow = true;\n    await super.ngOnInit();\n  }\n\n  stepBack() {\n    this.previousStep.emit();\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-default-content\",\n  templateUrl: \"default-content.component.html\",\n})\nexport class DefaultContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise1-content\",\n  templateUrl: \"enterprise1-content.component.html\",\n})\nexport class Enterprise1ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise2-content\",\n  templateUrl: \"enterprise2-content.component.html\",\n})\nexport class Enterprise2ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Enterprise Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams1-content\",\n  templateUrl: \"teams1-content.component.html\",\n})\nexport class Teams1ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Teams Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams2-content\",\n  templateUrl: \"teams2-content.component.html\",\n})\nexport class Teams2ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-cnet\",\n  templateUrl: \"logo-cnet.component.html\",\n})\nexport class LogoCnetComponent {}\n","<figure>\n  <figcaption>\n    <cite>\n      <img\n        src=\"../../images/register-layout/cnet-logo.svg\"\n        class=\"tw-mx-auto tw-block tw-w-40\"\n        alt=\"CNET Logo\"\n      />\n    </cite>\n  </figcaption>\n  <blockquote class=\"tw-mx-auto tw-mt-2 tw-max-w-xl tw-px-4 tw-text-center\">\n    \"No more excuses; start using Bitwarden today. The identity you save could be your own. The\n    money definitely will be.\"\n  </blockquote>\n</figure>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-enterprise-content\",\n  templateUrl: \"cnet-enterprise-content.component.html\",\n})\nexport class CnetEnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Enterprise Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-individual-content\",\n  templateUrl: \"cnet-individual-content.component.html\",\n})\nexport class CnetIndividualContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Premium Account Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Secure your account with advanced two-step login</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-teams-content\",\n  templateUrl: \"cnet-teams-content.component.html\",\n})\nexport class CnetTeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Teams Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-abm-enterprise-content\",\n  templateUrl: \"abm-enterprise-content.component.html\",\n})\nexport class AbmEnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-abm-teams-content\",\n  templateUrl: \"abm-teams-content.component.html\",\n})\nexport class AbmTeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","<div *ngIf=\"accountCreateOnly\" class=\"\">\n  <h1 class=\"tw-mt-12 tw-text-center tw-text-xl\">{{ \"createAccount\" | i18n }}</h1>\n  <div\n    class=\"tw-min-w-xl tw-m-auto tw-max-w-xl tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-8\"\n  >\n    <app-register-form\n      [queryParamEmail]=\"email\"\n      [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n      [referenceDataValue]=\"referenceData\"\n    ></app-register-form>\n  </div>\n</div>\n<div *ngIf=\"!accountCreateOnly\">\n  <div class=\"tw-absolute tw--z-10 tw--mt-48 tw-h-[28rem] tw-w-full tw-bg-background-alt2\"></div>\n  <div class=\"tw-min-w-4xl tw-mx-auto tw-flex tw-max-w-screen-xl tw-gap-12 tw-px-4\">\n    <div class=\"tw-w-1/2\">\n      <img\n        alt=\"Bitwarden\"\n        style=\"height: 50px; width: 335px\"\n        class=\"tw-mt-6\"\n        src=\"../../images/register-layout/logo-horizontal-white.svg\"\n      />\n\n      <div class=\"tw-pt-12\">\n        <!-- Layout params are used by marketing to determine left-hand content -->\n        <app-default-content *ngIf=\"layout === 'default'\"></app-default-content>\n        <app-teams-content *ngIf=\"layout === 'teams'\"></app-teams-content>\n        <app-teams1-content *ngIf=\"layout === 'teams1'\"></app-teams1-content>\n        <app-teams2-content *ngIf=\"layout === 'teams2'\"></app-teams2-content>\n        <app-enterprise-content *ngIf=\"layout === 'enterprise'\"></app-enterprise-content>\n        <app-enterprise1-content *ngIf=\"layout === 'enterprise1'\"></app-enterprise1-content>\n        <app-enterprise2-content *ngIf=\"layout === 'enterprise2'\"></app-enterprise2-content>\n        <app-cnet-enterprise-content\n          *ngIf=\"layout === 'cnetcmpgnent'\"\n        ></app-cnet-enterprise-content>\n        <app-cnet-individual-content\n          *ngIf=\"layout === 'cnetcmpgnind'\"\n        ></app-cnet-individual-content>\n        <app-cnet-teams-content *ngIf=\"layout === 'cnetcmpgnteams'\"></app-cnet-teams-content>\n        <app-abm-enterprise-content *ngIf=\"layout === 'abmenterprise'\"></app-abm-enterprise-content>\n        <app-abm-teams-content *ngIf=\"layout === 'abmteams'\"></app-abm-teams-content>\n      </div>\n    </div>\n    <div class=\"tw-w-1/2\">\n      <div class=\"tw-pt-56\">\n        <div class=\"tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background\">\n          <div class=\"tw-flex tw-h-12 tw-w-full tw-items-center tw-rounded-t tw-bg-secondary-100\">\n            <h2 class=\"tw-mb-0 tw-pl-4 tw-text-base tw-font-bold tw-uppercase\">\n              Start your 7-Day free trial of Bitwarden for {{ org }}\n            </h2>\n          </div>\n          <app-vertical-stepper #stepper linear (selectionChange)=\"stepSelectionChange($event)\">\n            <app-vertical-step label=\"Create Account\" [editable]=\"false\" [subLabel]=\"email\">\n              <app-register-form\n                [isInTrialFlow]=\"true\"\n                (createdAccount)=\"createdAccount($event)\"\n                [referenceDataValue]=\"referenceData\"\n              ></app-register-form>\n            </app-vertical-step>\n            <app-vertical-step label=\"Organization Information\" [subLabel]=\"orgInfoSubLabel\">\n              <app-org-info [nameOnly]=\"true\" [formGroup]=\"orgInfoFormGroup\"></app-org-info>\n              <button\n                bitButton\n                buttonType=\"primary\"\n                [disabled]=\"orgInfoFormGroup.get('name').hasError('required')\"\n                cdkStepperNext\n              >\n                Next\n              </button>\n            </app-vertical-step>\n            <app-vertical-step label=\"Billing\" [subLabel]=\"billingSubLabel\">\n              <app-billing\n                *ngIf=\"stepper.selectedIndex === 2\"\n                [plan]=\"plan\"\n                [product]=\"product\"\n                [orgInfoForm]=\"orgInfoFormGroup\"\n                (previousStep)=\"previousStep()\"\n                (onTrialBillingSuccess)=\"billingSuccess($event)\"\n              ></app-billing>\n            </app-vertical-step>\n            <app-vertical-step label=\"Confirmation Details\" [applyBorder]=\"false\">\n              <app-trial-confirmation-details\n                [email]=\"email\"\n                [orgLabel]=\"orgLabel\"\n              ></app-trial-confirmation-details>\n              <div class=\"tw-mb-3 tw-flex\">\n                <button bitButton buttonType=\"primary\" (click)=\"navigateToOrgVault()\">\n                  Get Started\n                </button>\n                <button\n                  bitButton\n                  buttonType=\"secondary\"\n                  (click)=\"navigateToOrgInvite()\"\n                  class=\"tw-ml-3 tw-inline-flex tw-items-center tw-px-3\"\n                >\n                  Invite Users\n                </button>\n              </div>\n            </app-vertical-step>\n          </app-vertical-stepper>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { StepperSelectionEvent } from \"@angular/cdk/stepper\";\nimport { TitleCasePipe } from \"@angular/common\";\nimport { Component, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\nimport { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first, Subject, takeUntil } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/reference-event.request\";\n\nimport { RouterService } from \"./../../core/router.service\";\nimport { VerticalStepperComponent } from \"./vertical-stepper/vertical-stepper.component\";\n\n@Component({\n  selector: \"app-trial\",\n  templateUrl: \"trial-initiation.component.html\",\n})\nexport class TrialInitiationComponent implements OnInit, OnDestroy {\n  email = \"\";\n  org = \"\";\n  orgInfoSubLabel = \"\";\n  orgId = \"\";\n  orgLabel = \"\";\n  billingSubLabel = \"\";\n  layout = \"default\";\n  plan: PlanType;\n  product: ProductType;\n  accountCreateOnly = true;\n  policies: Policy[];\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  validOrgs: string[] = [\"teams\", \"enterprise\", \"families\"];\n  referenceData: ReferenceEventRequest;\n  @ViewChild(\"stepper\", { static: false }) verticalStepper: VerticalStepperComponent;\n\n  orgInfoFormGroup = this.formBuilder.group({\n    name: [\"\", [Validators.required]],\n    email: [\"\"],\n  });\n\n  private set referenceDataId(referenceId: string) {\n    if (referenceId != null) {\n      this.referenceData.id = referenceId;\n    } else {\n      this.referenceData.id = (\"; \" + document.cookie)\n        .split(\"; reference=\")\n        .pop()\n        .split(\";\")\n        .shift();\n    }\n\n    if (this.referenceData.id === \"\") {\n      this.referenceData.id = null;\n    }\n  }\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private route: ActivatedRoute,\n    protected router: Router,\n    private formBuilder: UntypedFormBuilder,\n    private titleCasePipe: TitleCasePipe,\n    private stateService: StateService,\n    private logService: LogService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    private i18nService: I18nService,\n    private routerService: RouterService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      this.referenceData = new ReferenceEventRequest();\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n\n      this.referenceDataId = qParams.reference;\n\n      if (!qParams.org) {\n        return;\n      }\n\n      if (qParams.layout) {\n        this.layout = qParams.layout;\n      }\n\n      if (this.validOrgs.includes(qParams.org)) {\n        this.org = qParams.org;\n      } else {\n        this.org = \"families\";\n      }\n\n      this.referenceData.flow = qParams.org;\n\n      // Are they coming from an email for sponsoring a families organization\n      // After logging in redirect them to setup the families sponsorship\n      this.setupFamilySponsorship(qParams.sponsorshipToken);\n\n      this.orgLabel = this.titleCasePipe.transform(this.org);\n      this.accountCreateOnly = false;\n\n      if (this.org === \"families\") {\n        this.plan = PlanType.FamiliesAnnually;\n        this.product = ProductType.Families;\n      } else if (this.org === \"teams\") {\n        this.plan = PlanType.TeamsAnnually;\n        this.product = ProductType.Teams;\n      } else if (this.org === \"enterprise\") {\n        this.plan = PlanType.EnterpriseAnnually;\n        this.product = ProductType.Enterprise;\n      }\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      try {\n        const policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        if (policies.data != null) {\n          const policiesData = policies.data.map((p) => new PolicyData(p));\n          this.policies = policiesData.map((p) => new Policy(p));\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (this.policies != null) {\n      this.policyService\n        .masterPasswordPolicyOptions$(this.policies)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((enforcedPasswordPolicyOptions) => {\n          this.enforcedPolicyOptions = enforcedPasswordPolicyOptions;\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  stepSelectionChange(event: StepperSelectionEvent) {\n    // Set org info sub label\n    if (event.selectedIndex === 1 && this.orgInfoFormGroup.controls.name.value === \"\") {\n      this.orgInfoSubLabel =\n        \"Enter your \" + this.titleCasePipe.transform(this.org) + \" organization information\";\n    } else if (event.previouslySelectedIndex === 1) {\n      this.orgInfoSubLabel = this.orgInfoFormGroup.controls.name.value;\n    }\n\n    //set billing sub label\n    if (event.selectedIndex === 2) {\n      this.billingSubLabel = this.i18nService.t(\"billingTrialSubLabel\");\n    }\n  }\n\n  createdAccount(email: string) {\n    this.email = email;\n    this.orgInfoFormGroup.get(\"email\")?.setValue(email);\n    this.verticalStepper.next();\n  }\n\n  billingSuccess(event: any) {\n    this.orgId = event?.orgId;\n    this.billingSubLabel = event?.subLabelText;\n    this.verticalStepper.next();\n  }\n\n  navigateToOrgVault() {\n    this.router.navigate([\"organizations\", this.orgId, \"vault\"]);\n  }\n\n  navigateToOrgInvite() {\n    this.router.navigate([\"organizations\", this.orgId, \"manage\", \"people\"]);\n  }\n\n  previousStep() {\n    this.verticalStepper.previous();\n  }\n\n  private setupFamilySponsorship(sponsorshipToken: string) {\n    if (sponsorshipToken != null) {\n      const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n        queryParams: { plan: sponsorshipToken },\n      });\n      this.routerService.setPreviousUrl(route.toString());\n    }\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nexport class WebAuthnIFrame {\n  private iframe: HTMLIFrameElement = null;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    private webVaultUrl: string,\n    private webAuthnNewTab: boolean,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private successCallback: Function, // eslint-disable-line\n    private errorCallback: Function, // eslint-disable-line\n    private infoCallback: Function // eslint-disable-line\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  init(data: any): void {\n    const params = new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      btnText: encodeURIComponent(this.i18nService.t(\"webAuthnAuthenticate\")),\n      v: \"1\",\n    });\n\n    if (this.webAuthnNewTab) {\n      // Firefox fallback which opens the webauthn page in a new tab\n      params.append(\"locale\", this.i18nService.translationLocale);\n      this.platformUtilsService.launchUri(\n        `${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`\n      );\n    } else {\n      this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n      this.iframe = this.win.document.getElementById(\"webauthn_iframe\") as HTMLIFrameElement;\n      this.iframe.allow = \"publickey-credentials-get \" + new URL(this.webVaultUrl).origin;\n      this.iframe.src = this.connectorLink.href;\n\n      this.win.addEventListener(\"message\", this.parseFunction, false);\n    }\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n  deviceIdentifier: string;\n  authRequestId: string;\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport * as DuoWebSDK from \"duo_web_sdk\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { WebAuthnIFrame } from \"@bitwarden/common/misc/webauthn_iframe\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/auth-result\";\nimport { TokenTwoFactorRequest } from \"@bitwarden/common/models/request/identity-token/token-two-factor.request\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/two-factor-email.request\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class TwoFactorComponent extends CaptchaProtectedComponent implements OnInit, OnDestroy {\n  token = \"\";\n  remember = false;\n  webAuthnReady = false;\n  webAuthnNewTab = false;\n  providers = TwoFactorProviders;\n  providerType = TwoFactorProviderType;\n  selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n  webAuthnSupported = false;\n  webAuthn: WebAuthnIFrame = null;\n  title = \"\";\n  twoFactorEmail: string = null;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n  identifier: string = null;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n\n  get webAuthnAllow(): string {\n    return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n  }\n\n  protected loginRoute = \"login\";\n  protected successRoute = \"vault\";\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected route: ActivatedRoute,\n    protected logService: LogService,\n    protected twoFactorService: TwoFactorService,\n    protected appIdService: AppIdService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n  }\n\n  async ngOnInit() {\n    if (!this.authing || this.twoFactorService.getProviders() == null) {\n      this.router.navigate([this.loginRoute]);\n      return;\n    }\n\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    if (this.needsLock) {\n      this.successRoute = \"lock\";\n    }\n\n    if (this.win != null && this.webAuthnSupported) {\n      const webVaultUrl = this.environmentService.getWebVaultUrl();\n      this.webAuthn = new WebAuthnIFrame(\n        this.win,\n        webVaultUrl,\n        this.webAuthnNewTab,\n        this.platformUtilsService,\n        this.i18nService,\n        (token: string) => {\n          this.token = token;\n          this.submit();\n        },\n        (error: string) => {\n          this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n        },\n        (info: string) => {\n          if (info === \"ready\") {\n            this.webAuthnReady = true;\n          }\n        }\n      );\n    }\n\n    this.selectedProviderType = this.twoFactorService.getDefaultProvider(this.webAuthnSupported);\n    await this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupWebAuthn();\n    this.webAuthn = null;\n  }\n\n  async init() {\n    if (this.selectedProviderType == null) {\n      this.title = this.i18nService.t(\"loginUnavailable\");\n      return;\n    }\n\n    this.cleanupWebAuthn();\n    this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n    switch (this.selectedProviderType) {\n      case TwoFactorProviderType.WebAuthn:\n        if (!this.webAuthnNewTab) {\n          setTimeout(() => {\n            this.authWebAuthn();\n          }, 500);\n        }\n        break;\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        setTimeout(() => {\n          DuoWebSDK.init({\n            iframe: undefined,\n            host: providerData.Host,\n            sig_request: providerData.Signature,\n            submit_callback: async (f: HTMLFormElement) => {\n              const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n              if (sig != null) {\n                this.token = sig.value;\n                await this.submit();\n              }\n            },\n          });\n        }, 0);\n        break;\n      case TwoFactorProviderType.Email:\n        this.twoFactorEmail = providerData.Email;\n        if (this.twoFactorService.getProviders().size > 1) {\n          await this.sendEmail(false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.token == null || this.token === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"verificationCodeRequired\")\n      );\n      return;\n    }\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n      if (this.webAuthn != null) {\n        this.webAuthn.stop();\n      } else {\n        return;\n      }\n    } else if (\n      this.selectedProviderType === TwoFactorProviderType.Email ||\n      this.selectedProviderType === TwoFactorProviderType.Authenticator\n    ) {\n      this.token = this.token.replace(\" \", \"\").trim();\n    }\n\n    try {\n      await this.doSubmit();\n    } catch {\n      if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n        this.webAuthn.start();\n      }\n    }\n  }\n\n  async doSubmit() {\n    this.formPromise = this.authService.logInTwoFactor(\n      new TokenTwoFactorRequest(this.selectedProviderType, this.token, this.remember),\n      this.captchaToken\n    );\n    const response: AuthResult = await this.formPromise;\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    if (this.handleCaptchaRequired(response)) {\n      return;\n    }\n    if (this.onSuccessfulLogin != null) {\n      this.onSuccessfulLogin();\n    }\n    if (response.resetMasterPassword) {\n      this.successRoute = \"set-password\";\n    }\n    if (response.forcePasswordReset) {\n      this.successRoute = \"update-temp-password\";\n    }\n    if (this.onSuccessfulLoginNavigate != null) {\n      this.onSuccessfulLoginNavigate();\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n\n  async sendEmail(doToast: boolean) {\n    if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n      return;\n    }\n\n    if (this.emailPromise != null) {\n      return;\n    }\n\n    try {\n      const request = new TwoFactorEmailRequest();\n      request.email = this.authService.email;\n      request.masterPasswordHash = this.authService.masterPasswordHash;\n      request.deviceIdentifier = await this.appIdService.getAppId();\n      request.authRequestAccessCode = this.authService.accessCode;\n      request.authRequestId = this.authService.authRequestId;\n      this.emailPromise = this.apiService.postTwoFactorEmail(request);\n      await this.emailPromise;\n      if (doToast) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"verificationCodeEmailSent\", this.twoFactorEmail)\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.emailPromise = null;\n  }\n\n  authWebAuthn() {\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n\n    if (!this.webAuthnSupported || this.webAuthn == null) {\n      return;\n    }\n\n    this.webAuthn.init(providerData);\n  }\n\n  private cleanupWebAuthn() {\n    if (this.webAuthn != null) {\n      this.webAuthn.stop();\n      this.webAuthn.cleanup();\n    }\n  }\n\n  get authing(): boolean {\n    return (\n      this.authService.authingWithPassword() ||\n      this.authService.authingWithSso() ||\n      this.authService.authingWithApiKey() ||\n      this.authService.authingWithPasswordless()\n    );\n  }\n\n  get needsLock(): boolean {\n    return this.authService.authingWithSso() || this.authService.authingWithApiKey();\n  }\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n  @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n  @Output() onRecoverSelected = new EventEmitter();\n\n  providers: any[] = [];\n\n  constructor(\n    protected twoFactorService: TwoFactorService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window\n  ) {}\n\n  ngOnInit() {\n    this.providers = this.twoFactorService.getSupportedProviders(this.win);\n  }\n\n  choose(p: any) {\n    this.onProviderSelected.emit(p.type);\n  }\n\n  recover() {\n    this.platformUtilsService.launchUri(\"https://bitwarden.com/help/lost-two-step-device/\");\n    this.onRecoverSelected.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"twoStepOptionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"twoStepOptionsTitle\">{{ \"twoStepOptions\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"list-group list-group-flush-2fa\">\n          <div *ngFor=\"let p of providers\" class=\"list-group-item list-group-item-action\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ p.name }}</h3>\n                {{ p.description }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-describedby]=\"p.name\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"choose(p)\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"list-group-item list-group-item-action\" (click)=\"recover()\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img class=\"recovery-code-img\" alt=\"rc logo\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ \"recoveryCodeTitle\" | i18n }}</h3>\n                {{ \"recoveryCodeDesc\" | i18n }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-descibedby]=\"'recoveryCodeTitle' | i18n\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"recover()\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent } from \"@bitwarden/angular/components/two-factor-options.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\n\n@Component({\n  selector: \"app-two-factor-options\",\n  templateUrl: \"two-factor-options.component.html\",\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n  constructor(\n    twoFactorService: TwoFactorService,\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService\n  ) {\n    super(twoFactorService, router, i18nService, platformUtilsService, window);\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"container\"\n  ngNativeValidate\n  autocomplete=\"off\"\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div\n      class=\"col-5\"\n      [ngClass]=\"{\n        'col-9':\n          selectedProviderType === providerType.Duo ||\n          selectedProviderType === providerType.OrganizationDuo\n      }\"\n    >\n      <p class=\"lead text-center mb-4\">{{ title }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Email ||\n              selectedProviderType === providerType.Authenticator\n            \"\n          >\n            <p *ngIf=\"selectedProviderType === providerType.Authenticator\">\n              {{ \"enterVerificationCodeApp\" | i18n }}\n            </p>\n            <p *ngIf=\"selectedProviderType === providerType.Email\">\n              {{ \"enterVerificationCodeEmail\" | i18n: twoFactorEmail }}\n            </p>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"text\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                inputmode=\"tel\"\n                appInputVerbatim\n              />\n              <small class=\"form-text\" *ngIf=\"selectedProviderType === providerType.Email\">\n                <a\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"sendEmail(true)\"\n                  [appApiAction]=\"emailPromise\"\n                  *ngIf=\"selectedProviderType === providerType.Email\"\n                >\n                  {{ \"sendVerificationCodeEmailAgain\" | i18n }}\n                </a>\n              </small>\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n            <p class=\"text-center\">{{ \"insertYubiKey\" | i18n }}</p>\n            <picture>\n              <source srcset=\"../../images/yubikey.avif\" type=\"image/avif\" />\n              <source srcset=\"../../images/yubikey.webp\" type=\"image/webp\" />\n              <img src=\"../../images/yubikey.jpg\" class=\"rounded img-fluid mb-3\" alt=\"\" />\n            </picture>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"password\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn\">\n            <div id=\"web-authn-frame\" class=\"mb-3\">\n              <iframe id=\"webauthn_iframe\" [allow]=\"webAuthnAllow\"></iframe>\n            </div>\n          </ng-container>\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Duo ||\n              selectedProviderType === providerType.OrganizationDuo\n            \"\n          >\n            <div id=\"duo-frame\" class=\"mb-3\">\n              <iframe id=\"duo_iframe\"></iframe>\n            </div>\n          </ng-container>\n          <i\n            class=\"bwi bwi-spinner text-muted bwi-spin pull-right\"\n            title=\"{{ 'loading' | i18n }}\"\n            *ngIf=\"form.loading && selectedProviderType === providerType.WebAuthn\"\n            aria-hidden=\"true\"\n          ></i>\n          <div class=\"form-check\" *ngIf=\"selectedProviderType != null\">\n            <input\n              id=\"remember\"\n              type=\"checkbox\"\n              name=\"Remember\"\n              class=\"form-check-input\"\n              [(ngModel)]=\"remember\"\n            />\n            <label for=\"remember\" class=\"form-check-label\">{{ \"rememberMe\" | i18n }}</label>\n          </div>\n          <ng-container *ngIf=\"selectedProviderType == null\">\n            <p>{{ \"noTwoStepProviders\" | i18n }}</p>\n            <p>{{ \"noTwoStepProviders2\" | i18n }}</p>\n          </ng-container>\n          <hr />\n          <div [hidden]=\"!showCaptcha()\">\n            <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n          </div>\n          <div class=\"d-flex mb-3\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n              *ngIf=\"\n                selectedProviderType != null &&\n                selectedProviderType !== providerType.Duo &&\n                selectedProviderType !== providerType.OrganizationDuo &&\n                selectedProviderType !== providerType.WebAuthn\n              \"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n          <div class=\"text-center\">\n            <a href=\"#\" appStopClick (click)=\"anotherMethod()\">{{\n              \"useAnotherTwoStepMethod\" | i18n\n            }}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<ng-template #twoFactorOptions></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from \"@bitwarden/angular/components/two-factor.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { RouterService } from \"../core\";\n\nimport { TwoFactorOptionsComponent } from \"./two-factor-options.component\";\n\n@Component({\n  selector: \"app-two-factor\",\n  templateUrl: \"two-factor.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n  @ViewChild(\"twoFactorOptions\", { read: ViewContainerRef, static: true })\n  twoFactorOptionsModal: ViewContainerRef;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    private modalService: ModalService,\n    route: ActivatedRoute,\n    logService: LogService,\n    twoFactorService: TwoFactorService,\n    appIdService: AppIdService,\n    private routerService: RouterService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      apiService,\n      platformUtilsService,\n      window,\n      environmentService,\n      stateService,\n      route,\n      logService,\n      twoFactorService,\n      appIdService\n    );\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n  }\n\n  async anotherMethod() {\n    const [modal] = await this.modalService.openViewRef(\n      TwoFactorOptionsComponent,\n      this.twoFactorOptionsModal,\n      (comp) => {\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onProviderSelected.subscribe(async (provider: TwoFactorProviderType) => {\n          modal.close();\n          this.selectedProviderType = provider;\n          await this.init();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onRecoverSelected.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async goAfterLogIn() {\n    const previousUrl = this.routerService.getPreviousUrl();\n    if (previousUrl) {\n      this.router.navigateByUrl(previousUrl);\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class PasswordRequest extends SecretVerificationRequest {\n  newMasterPasswordHash: string;\n  masterPasswordHint: string;\n  key: string;\n}\n","import { Directive } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { PasswordRequest } from \"@bitwarden/common/models/request/password.request\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdatePasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n  currentMasterPassword: string;\n\n  onSuccessfulChangePassword: () => Promise<void>;\n\n  constructor(\n    protected router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async cancel() {\n    await this.stateService.setOrganizationInvitation(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n\n    const secret: Verification = {\n      type: VerificationType.MasterPassword,\n      secret: this.currentMasterPassword,\n    };\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return false;\n    }\n\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create Request\n      const request = new PasswordRequest();\n      request.masterPasswordHash = await this.cryptoService.hashPassword(\n        this.currentMasterPassword,\n        null\n      );\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.key = encKey[1].encryptedString;\n\n      // Update user's password\n      this.apiService.postPassword(request);\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"masterPasswordInvalidWarning\" | i18n }} </app-callout>\n          <app-callout\n            type=\"info\"\n            [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n            *ngIf=\"enforcedPolicyOptions\"\n          ></app-callout>\n\n          <form\n            #form\n            (ngSubmit)=\"submit()\"\n            [appApiAction]=\"formPromise\"\n            ngNativeValidate\n            autocomplete=\"off\"\n          >\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"currentMasterPassword\"\n                    type=\"password\"\n                    name=\"MasterPasswordHash\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"currentMasterPassword\"\n                    required\n                    appInputVerbatim\n                  />\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"newMasterPassword\"\n                    type=\"password\"\n                    name=\"NewMasterPasswordHash\"\n                    class=\"form-control mb-1\"\n                    [(ngModel)]=\"masterPassword\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                  <app-password-strength\n                    [password]=\"masterPassword\"\n                    [email]=\"email\"\n                    [showText]=\"true\"\n                  ></app-password-strength>\n                </div>\n              </div>\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"masterPasswordRetype\"\n                    type=\"password\"\n                    name=\"MasterPasswordRetype\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"masterPasswordRetype\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n              <i\n                class=\"fa fa-spinner fa-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"changeMasterPassword\" | i18n }}</span>\n            </button>\n            <button (click)=\"cancel()\" type=\"button\" class=\"btn btn-outline-secondary\">\n              <span>{{ \"cancel\" | i18n }}</span>\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { UpdatePasswordComponent as BaseUpdatePasswordComponent } from \"@bitwarden/angular/components/update-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\n\n@Component({\n  selector: \"app-update-password\",\n  templateUrl: \"update-password.component.html\",\n})\nexport class UpdatePasswordComponent extends BaseUpdatePasswordComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      userVerificationService,\n      logService\n    );\n  }\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { OrganizationUserResetPasswordRequest } from \"./organization-user-reset-password.request\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { UpdateTempPasswordRequest } from \"@bitwarden/common/models/request/update-temp-password.request\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private syncService: SyncService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    super.ngOnInit();\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    this.email = await this.stateService.getEmail();\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async submit() {\n    // Validation\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email.trim().toLowerCase(),\n        this.kdf,\n        this.kdfIterations\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = encKey[1].encryptedString;\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.masterPasswordHint = this.hint;\n\n      // Update user's password\n      this.formPromise = this.apiService.putUpdateTempPassword(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedMasterPassword\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"updateMasterPasswordWarning\" | i18n }} </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength\n                  [password]=\"masterPassword\"\n                  [email]=\"email\"\n                  [showText]=\"true\"\n                  (passwordStrengthResult)=\"getStrengthResult($event)\"\n                >\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from \"@bitwarden/angular/components/update-temp-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-update-temp-password\",\n  templateUrl: \"update-temp-password.component.html\",\n})\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    syncService: SyncService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      syncService,\n      logService\n    );\n  }\n}\n","export class VerifyEmailRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VerifyEmailRequest } from \"@bitwarden/common/models/request/verify-email.request\";\n\n@Component({\n  selector: \"app-verify-email-token\",\n  templateUrl: \"verify-email-token.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class VerifyEmailTokenComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null) {\n        try {\n          await this.apiService.postAccountVerifyEmailToken(\n            new VerifyEmailRequest(qParams.userId, qParams.token)\n          );\n          if (await this.stateService.getIsAuthenticated()) {\n            await this.apiService.refreshIdentityToken();\n          }\n          this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailVerified\"));\n          this.router.navigate([\"/\"]);\n          return;\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"emailVerifiedFailed\"));\n      this.router.navigate([\"/\"]);\n    });\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","export class VerifyDeleteRecoverRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { VerifyDeleteRecoverRequest } from \"@bitwarden/common/models/request/verify-delete-recover.request\";\n\n@Component({\n  selector: \"app-verify-recover-delete\",\n  templateUrl: \"verify-recover-delete.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class VerifyRecoverDeleteComponent implements OnInit {\n  email: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private token: string;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private logService: LogService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null && qParams.email != null) {\n        this.userId = qParams.userId;\n        this.token = qParams.token;\n        this.email = qParams.email;\n      } else {\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    try {\n      const request = new VerifyDeleteRecoverRequest(this.userId, this.token);\n      this.formPromise = this.apiService.postAccountRecoverDeleteToken(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n          <p class=\"text-center\">\n            <strong>{{ email }}</strong>\n          </p>\n          <p>{{ \"deleteRecoverConfirmDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-danger btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"deleteAccount\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HomeGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return this.router.createUrlTree([\"/login\"], { queryParams: route.queryParams });\n    }\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"/lock\"], { queryParams: route.queryParams });\n    }\n    return this.router.createUrlTree([\"/vault\"], { queryParams: route.queryParams });\n  }\n}\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-frontend-layout\",\n  templateUrl: \"frontend-layout.component.html\",\n})\nexport class FrontendLayoutComponent implements OnInit, OnDestroy {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n    document.body.classList.add(\"layout_frontend\");\n  }\n\n  ngOnDestroy() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<router-outlet></router-outlet>\n<div class=\"container my-5 text-muted text-center\">\n  &copy; {{ year }} Bitwarden Inc. <br />\n  {{ \"versionNumber\" | i18n: version }}\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-footer\",\n  templateUrl: \"footer.component.html\",\n})\nexport class FooterComponent implements OnInit {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n  }\n}\n","<div class=\"container footer text-muted\">\n  <div class=\"row\">\n    <div class=\"col\">&copy; {{ year }} Bitwarden Inc.</div>\n    <div class=\"col text-center\"></div>\n    <div class=\"col text-right\">\n      {{ \"versionNumber\" | i18n: version }}\n    </div>\n  </div>\n</div>\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopProp]\",\n})\nexport class StopPropDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n}\n","import { FocusableOption } from \"@angular/cdk/a11y\";\nimport { Directive, ElementRef, HostBinding } from \"@angular/core\";\n\n@Directive({\n  selector: \"[bitMenuItem]\",\n})\nexport class MenuItemDirective implements FocusableOption {\n  @HostBinding(\"class\") classList = [\n    \"tw-block\",\n    \"tw-py-1\",\n    \"tw-px-4\",\n    \"!tw-text-main\",\n    \"!tw-no-underline\",\n    \"tw-cursor-pointer\",\n    \"tw-border-none\",\n    \"tw-bg-background\",\n    \"tw-text-left\",\n    \"hover:tw-bg-secondary-100\",\n    \"focus:tw-bg-secondary-100\",\n    \"focus:tw-z-50\",\n    \"focus:tw-outline-none\",\n    \"focus:tw-ring\",\n    \"focus:tw-ring-offset-2\",\n    \"focus:tw-ring-primary-700\",\n    \"active:!tw-ring-0\",\n    \"active:!tw-ring-offset-0\",\n  ];\n  @HostBinding(\"attr.role\") role = \"menuitem\";\n  @HostBinding(\"tabIndex\") tabIndex = \"-1\";\n\n  constructor(private elementRef: ElementRef) {}\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n}\n","<ng-template>\n  <div\n    (click)=\"closed.emit()\"\n    class=\"tw-flex tw-shrink-0 tw-flex-col tw-rounded tw-border tw-border-solid tw-border-secondary-500 tw-bg-background tw-bg-clip-padding tw-py-2\"\n    role=\"menu\"\n  >\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","import { FocusKeyManager } from \"@angular/cdk/a11y\";\nimport {\n  Component,\n  Output,\n  TemplateRef,\n  ViewChild,\n  EventEmitter,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n} from \"@angular/core\";\n\nimport { MenuItemDirective } from \"./menu-item.directive\";\n\n@Component({\n  selector: \"bit-menu\",\n  templateUrl: \"./menu.component.html\",\n  exportAs: \"menuComponent\",\n})\nexport class MenuComponent implements AfterContentInit {\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n  @Output() closed = new EventEmitter<void>();\n  @ContentChildren(MenuItemDirective, { descendants: true })\n  menuItems: QueryList<MenuItemDirective>;\n  keyManager: FocusKeyManager<MenuItemDirective>;\n\n  ngAfterContentInit() {\n    this.keyManager = new FocusKeyManager(this.menuItems).withWrap();\n  }\n}\n","import { Overlay, OverlayConfig, OverlayRef } from \"@angular/cdk/overlay\";\nimport { TemplatePortal } from \"@angular/cdk/portal\";\nimport {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { filter, mergeWith } from \"rxjs/operators\";\n\nimport { MenuComponent } from \"./menu.component\";\n\n@Directive({\n  selector: \"[bitMenuTriggerFor]\",\n})\nexport class MenuTriggerForDirective implements OnDestroy {\n  @HostBinding(\"attr.aria-expanded\") isOpen = false;\n  @HostBinding(\"attr.aria-haspopup\") hasPopup = \"menu\";\n  @HostBinding(\"attr.role\") role = \"button\";\n\n  @Input(\"bitMenuTriggerFor\") menu: MenuComponent;\n\n  private overlayRef: OverlayRef;\n  private defaultMenuConfig: OverlayConfig = {\n    panelClass: \"bit-menu-panel\",\n    hasBackdrop: true,\n    backdropClass: \"cdk-overlay-transparent-backdrop\",\n    scrollStrategy: this.overlay.scrollStrategies.reposition(),\n    positionStrategy: this.overlay\n      .position()\n      .flexibleConnectedTo(this.elementRef)\n      .withPositions([\n        {\n          originX: \"start\",\n          originY: \"bottom\",\n          overlayX: \"start\",\n          overlayY: \"top\",\n        },\n        {\n          originX: \"end\",\n          originY: \"bottom\",\n          overlayX: \"end\",\n          overlayY: \"top\",\n        },\n      ])\n      .withLockedPosition(true)\n      .withFlexibleDimensions(false)\n      .withPush(false),\n  };\n  private closedEventsSub: Subscription;\n  private keyDownEventsSub: Subscription;\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    private viewContainerRef: ViewContainerRef,\n    private overlay: Overlay\n  ) {}\n\n  @HostListener(\"click\") toggleMenu() {\n    this.isOpen ? this.destroyMenu() : this.openMenu();\n  }\n\n  ngOnDestroy() {\n    this.disposeAll();\n  }\n\n  private openMenu() {\n    if (this.menu == null) {\n      throw new Error(\"Cannot find bit-menu element\");\n    }\n\n    this.isOpen = true;\n    this.overlayRef = this.overlay.create(this.defaultMenuConfig);\n\n    const templatePortal = new TemplatePortal(this.menu.templateRef, this.viewContainerRef);\n    this.overlayRef.attach(templatePortal);\n\n    this.closedEventsSub = this.getClosedEvents().subscribe((event: KeyboardEvent | undefined) => {\n      if (event?.key === \"Tab\") {\n        // Required to ensure tab order resumes correctly\n        this.elementRef.nativeElement.focus();\n      }\n      this.destroyMenu();\n    });\n    this.keyDownEventsSub = this.overlayRef\n      .keydownEvents()\n      .subscribe((event: KeyboardEvent) => this.menu.keyManager.onKeydown(event));\n  }\n\n  private destroyMenu() {\n    if (this.overlayRef == null || !this.isOpen) {\n      return;\n    }\n\n    this.isOpen = false;\n    this.disposeAll();\n  }\n\n  private getClosedEvents(): Observable<any> {\n    const detachments = this.overlayRef.detachments();\n    const escKey = this.overlayRef\n      .keydownEvents()\n      .pipe(filter((event: KeyboardEvent) => event.key === \"Escape\" || event.key === \"Tab\"));\n    const backdrop = this.overlayRef.backdropClick();\n    const menuClosed = this.menu.closed;\n\n    return detachments.pipe(mergeWith(escKey, backdrop, menuClosed));\n  }\n\n  private disposeAll() {\n    this.closedEventsSub?.unsubscribe();\n    this.overlayRef?.dispose();\n    this.keyDownEventsSub?.unsubscribe();\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-menu-divider\",\n  templateUrl: \"./menu-divider.component.html\",\n})\nexport class MenuDividerComponent {}\n","import { Component, Input, OnChanges } from \"@angular/core\";\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\ntype SizeTypes = \"large\" | \"default\" | \"small\";\n\nconst SizeClasses: Record<SizeTypes, string[]> = {\n  large: [\"tw-h-16\", \"tw-w-16\"],\n  default: [\"tw-h-12\", \"tw-w-12\"],\n  small: [\"tw-h-7\", \"tw-w-7\"],\n};\n\n@Component({\n  selector: \"bit-avatar\",\n  template: `<img *ngIf=\"src\" [src]=\"src\" title=\"{{ text }}\" [ngClass]=\"classList\" />`,\n})\nexport class AvatarComponent implements OnChanges {\n  @Input() border = false;\n  @Input() color?: string;\n  @Input() id?: string;\n  @Input() text?: string;\n  @Input() size: SizeTypes = \"default\";\n\n  private svgCharCount = 2;\n  private svgFontSize = 20;\n  private svgFontWeight = 300;\n  private svgSize = 48;\n  src: SafeResourceUrl;\n\n  constructor(public sanitizer: DomSanitizer) {}\n\n  ngOnChanges() {\n    this.generate();\n  }\n\n  get classList() {\n    return [\"tw-rounded-full\"]\n      .concat(SizeClasses[this.size] ?? [])\n      .concat(this.border ? [\"tw-border\", \"tw-border-solid\", \"tw-border-secondary-500\"] : []);\n  }\n\n  private generate() {\n    let chars: string = null;\n    const upperCaseText = this.text?.toUpperCase() ?? \"\";\n\n    chars = this.getFirstLetters(upperCaseText, this.svgCharCount);\n\n    if (chars == null) {\n      chars = this.unicodeSafeSubstring(upperCaseText, this.svgCharCount);\n    }\n\n    // If the chars contain an emoji, only show it.\n    if (chars.match(Utils.regexpEmojiPresentation)) {\n      chars = chars.match(Utils.regexpEmojiPresentation)[0];\n    }\n\n    let svg: HTMLElement;\n    let hexColor = this.color;\n\n    if (!Utils.isNullOrWhitespace(this.color)) {\n      svg = this.createSvgElement(this.svgSize, hexColor);\n    } else if (!Utils.isNullOrWhitespace(this.id)) {\n      hexColor = Utils.stringToColor(this.id.toString());\n      svg = this.createSvgElement(this.svgSize, hexColor);\n    } else {\n      hexColor = Utils.stringToColor(upperCaseText);\n      svg = this.createSvgElement(this.svgSize, hexColor);\n    }\n\n    const charObj = this.createTextElement(chars, hexColor);\n    svg.appendChild(charObj);\n    const html = window.document.createElement(\"div\").appendChild(svg).outerHTML;\n    const svgHtml = window.btoa(unescape(encodeURIComponent(html)));\n    this.src = this.sanitizer.bypassSecurityTrustResourceUrl(\n      \"data:image/svg+xml;base64,\" + svgHtml\n    );\n  }\n\n  private getFirstLetters(data: string, count: number): string {\n    const parts = data.split(\" \");\n    if (parts.length > 1) {\n      let text = \"\";\n      for (let i = 0; i < count; i++) {\n        text += this.unicodeSafeSubstring(parts[i], 1);\n      }\n      return text;\n    }\n    return null;\n  }\n\n  private createSvgElement(size: number, color: string): HTMLElement {\n    const svgTag = window.document.createElement(\"svg\");\n    svgTag.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    svgTag.setAttribute(\"pointer-events\", \"none\");\n    svgTag.setAttribute(\"width\", size.toString());\n    svgTag.setAttribute(\"height\", size.toString());\n    svgTag.style.backgroundColor = color;\n    svgTag.style.width = size + \"px\";\n    svgTag.style.height = size + \"px\";\n    return svgTag;\n  }\n\n  private createTextElement(character: string, color: string): HTMLElement {\n    const textTag = window.document.createElement(\"text\");\n    textTag.setAttribute(\"text-anchor\", \"middle\");\n    textTag.setAttribute(\"y\", \"50%\");\n    textTag.setAttribute(\"x\", \"50%\");\n    textTag.setAttribute(\"dy\", \"0.35em\");\n    textTag.setAttribute(\"pointer-events\", \"auto\");\n    textTag.setAttribute(\"fill\", Utils.pickTextColorBasedOnBgColor(color, 135, true));\n    textTag.setAttribute(\n      \"font-family\",\n      '\"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,' +\n        'sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\"'\n    );\n    textTag.textContent = character;\n    textTag.style.fontWeight = this.svgFontWeight.toString();\n    textTag.style.fontSize = this.svgFontSize + \"px\";\n    return textTag;\n  }\n\n  private unicodeSafeSubstring(str: string, count: number) {\n    const characters = str.match(/./gu);\n    return characters != null ? characters.slice(0, count).join(\"\") : \"\";\n  }\n}\n","<div\n  class=\"tw-my-2 tw-border-0 tw-border-t tw-border-solid tw-border-t-secondary-500\"\n  role=\"separator\"\n></div>\n","<nav class=\"navbar navbar-expand navbar-dark\" [ngClass]=\"{ 'nav-background-alt': selfHosted }\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\" appA11yTitle=\"{{ 'pageTitle' | i18n: 'Bitwarden' }}\">\n      <i class=\"bwi bwi-shield\" aria-hidden=\"true\"></i>\n    </a>\n    <div class=\"collapse navbar-collapse\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/vault\">{{ \"vaults\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/sends\">{{ \"send\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/tools\">{{ \"tools\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/reports\">{{ \"reports\" | i18n }}</a>\n        </li>\n        <li\n          *ngIf=\"(organizations$ | async)?.length >= 1\"\n          class=\"nav-item\"\n          routerLinkActive=\"active\"\n        >\n          <a class=\"nav-link\" [routerLink]=\"['/organizations', (organizations$ | async)[0].id]\">{{\n            \"organizations\" | i18n\n          }}</a>\n        </li>\n        <ng-container *ngIf=\"providers.length >= 1\">\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length == 1\">\n            <a class=\"nav-link\" [routerLink]=\"['/providers', providers[0].id]\">{{\n              \"provider\" | i18n\n            }}</a>\n          </li>\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length > 1\">\n            <a class=\"nav-link\" routerLink=\"/providers\">{{ \"provider\" | i18n }}</a>\n          </li>\n        </ng-container>\n      </ul>\n    </div>\n    <ul class=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\">\n      <li>\n        <button\n          [bitMenuTriggerFor]=\"accountMenu\"\n          class=\"tw-border-0 tw-bg-transparent tw-text-alt2 tw-opacity-70 hover:tw-opacity-90\"\n        >\n          <i class=\"bwi bwi-user-circle bwi-lg\" aria-hidden=\"true\"></i>\n          <i class=\"bwi bwi-caret-down bwi-sm\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu class=\"dropdown-menu\" #accountMenu>\n          <div class=\"tw-flex tw-min-w-[200px] tw-max-w-[300px] tw-flex-col\">\n            <div\n              class=\"tw-flex tw-items-center tw-py-1 tw-px-4 tw-leading-tight tw-text-info\"\n              *ngIf=\"name\"\n              appStopProp\n            >\n              <bit-avatar [text]=\"name\" [id]=\"userId\" size=\"small\"></bit-avatar>\n              <div class=\"tw-ml-2 tw-block tw-overflow-hidden tw-whitespace-nowrap\">\n                <span>{{ \"loggedInAs\" | i18n }}</span>\n                <small class=\"tw-block tw-overflow-hidden tw-whitespace-nowrap tw-text-muted\">{{\n                  name\n                }}</small>\n              </div>\n            </div>\n            <bit-menu-divider></bit-menu-divider>\n            <a bitMenuItem routerLink=\"/settings/account\">\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"accountSettings\" | i18n }}\n            </a>\n            <a bitMenuItem href=\"https://bitwarden.com/help/\" target=\"_blank\" rel=\"noopener\">\n              <i class=\"bwi bwi-fw bwi-question-circle\" aria-hidden=\"true\"></i>\n              {{ \"getHelp\" | i18n }}\n            </a>\n            <a bitMenuItem href=\"https://bitwarden.com/download/\" target=\"_blank\" rel=\"noopener\">\n              <i class=\"bwi bwi-fw bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"getApps\" | i18n }}\n            </a>\n            <bit-menu-divider></bit-menu-divider>\n            <button bitMenuItem type=\"button\" (click)=\"lock()\">\n              <i class=\"bwi bwi-fw bwi-lock\" aria-hidden=\"true\"></i>\n              {{ \"lockNow\" | i18n }}\n            </button>\n            <button bitMenuItem type=\"button\" (click)=\"logOut()\">\n              <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </bit-menu>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport {\n  canAccessAdmin,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"navbar.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class NavbarComponent implements OnInit {\n  selfHosted = false;\n  name: string;\n  email: string;\n  providers: Provider[] = [];\n  userId: string;\n  organizations$: Observable<Organization[]>;\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private providerService: ProviderService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService,\n    private i18nService: I18nService\n  ) {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.name = await this.tokenService.getName();\n    this.email = await this.tokenService.getEmail();\n    this.userId = await this.tokenService.getUserId();\n    if (this.name == null || this.name.trim() === \"\") {\n      this.name = this.email;\n    }\n\n    // Ensure providers and organizations are loaded\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n    this.providers = await this.providerService.getAll();\n\n    this.organizations$ = this.organizationService.organizations$.pipe(\n      canAccessAdmin(this.i18nService)\n    );\n  }\n\n  lock() {\n    this.messagingService.send(\"lockVault\");\n  }\n\n  logOut() {\n    this.messagingService.send(\"logout\");\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-user-layout\",\n  templateUrl: \"user-layout.component.html\",\n})\nexport class UserLayoutComponent implements OnInit {\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","<div *ngIf=\"loaded && activeOrganization != null\" class=\"tw-flex\">\n  <button\n    class=\"tw-flex tw-items-center tw-border-none tw-bg-background-alt\"\n    type=\"button\"\n    id=\"pickerButton\"\n    [appA11yTitle]=\"'organizationPicker' | i18n\"\n    [bitMenuTriggerFor]=\"orgPickerMenu\"\n  >\n    <bit-avatar [text]=\"activeOrganization.name\" [id]=\"activeOrganization.id\"></bit-avatar>\n    <div class=\"tw-flex\">\n      <div class=\"org-name tw-ml-3\">\n        <span>{{ activeOrganization.name }}</span>\n        <small class=\"tw-text-muted\">{{ \"organization\" | i18n }}</small>\n      </div>\n      <div class=\"tw-ml-3\">\n        <i class=\"bwi bwi-angle-down tw-text-main\" aria-hidden=\"true\"></i>\n      </div>\n    </div>\n  </button>\n  <div>\n    <div\n      class=\"tw-ml-3 tw-rounded tw-border tw-border-solid tw-border-danger-500 tw-text-danger\"\n      *ngIf=\"!activeOrganization.enabled\"\n    >\n      <div class=\"tw-py-2 tw-px-5\">\n        <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n        {{ \"organizationIsDisabled\" | i18n }}\n      </div>\n    </div>\n    <div\n      class=\"tw-ml-3 tw-rounded tw-border tw-border-solid tw-border-info-500 tw-text-info\"\n      *ngIf=\"activeOrganization.isProviderUser\"\n    >\n      <div class=\"tw-py-2 tw-px-5\">\n        <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n        {{ \"accessingUsingProvider\" | i18n: activeOrganization.providerName }}\n      </div>\n    </div>\n  </div>\n\n  <bit-menu #orgPickerMenu>\n    <ul aria-labelledby=\"pickerButton\" class=\"tw-m-0 tw-p-0\">\n      <li\n        *ngFor=\"let org of organizations$ | async\"\n        class=\"tw-flex tw-list-none tw-flex-col\"\n        role=\"none\"\n      >\n        <a bitMenuItem [routerLink]=\"['/organizations', org.id]\">\n          <i\n            class=\"bwi bwi-check mr-2\"\n            [ngClass]=\"org.id === activeOrganization.id ? 'visible' : 'invisible'\"\n          >\n            <span class=\"tw-sr-only\">{{ \"currentOrganization\" | i18n }}</span>\n          </i>\n          {{ org.name }}\n        </a>\n      </li>\n      <bit-menu-divider></bit-menu-divider>\n      <li class=\"tw-list-none\" role=\"none\">\n        <a bitMenuItem routerLink=\"/create-organization\">\n          <i class=\"bwi bwi-plus mr-2\"></i>\n          {{ \"newOrganization\" | i18n }}</a\n        >\n      </li>\n    </ul>\n  </bit-menu>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport {\n  canAccessAdmin,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-organization-switcher\",\n  templateUrl: \"organization-switcher.component.html\",\n})\nexport class OrganizationSwitcherComponent implements OnInit {\n  constructor(private organizationService: OrganizationService, private i18nService: I18nService) {}\n\n  @Input() activeOrganization: Organization = null;\n  organizations$: Observable<Organization[]>;\n\n  loaded = false;\n\n  async ngOnInit() {\n    this.organizations$ = this.organizationService.organizations$.pipe(\n      canAccessAdmin(this.i18nService)\n    );\n\n    this.loaded = true;\n  }\n}\n","<app-navbar></app-navbar>\n<ng-container *ngIf=\"organization$ | async as organization\">\n  <div class=\"org-nav\" *ngIf=\"organization\">\n    <div class=\"container d-flex\">\n      <div class=\"d-flex flex-column\">\n        <app-organization-switcher\n          class=\"my-auto pl-1\"\n          [activeOrganization]=\"organization\"\n        ></app-organization-switcher>\n        <ul class=\"nav nav-tabs\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"vault\" routerLinkActive=\"active\">\n              <i class=\"bwi bwi-lock\" aria-hidden=\"true\"></i>\n              {{ \"vault\" | i18n }}\n            </a>\n          </li>\n          <li class=\"nav-item\" *ngIf=\"canShowManageTab(organization)\">\n            <a\n              class=\"nav-link\"\n              [routerLink]=\"getManageRoute(organization)\"\n              routerLinkActive=\"active\"\n            >\n              <i class=\"bwi bwi-sliders\" aria-hidden=\"true\"></i>\n              {{ \"manage\" | i18n }}\n            </a>\n          </li>\n          <li class=\"nav-item\" *ngIf=\"canShowToolsTab(organization)\">\n            <a\n              class=\"nav-link\"\n              [routerLink]=\"getToolsRoute(organization)\"\n              routerLinkActive=\"active\"\n            >\n              <i class=\"bwi bwi-wrench\" aria-hidden=\"true\"></i>\n              {{ \"tools\" | i18n }}\n            </a>\n          </li>\n          <li class=\"nav-item\" *ngIf=\"canShowSettingsTab(organization)\">\n            <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\">\n              <i class=\"bwi bwi-cogs\" aria-hidden=\"true\"></i>\n              {{ \"settings\" | i18n }}\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</ng-container>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { map, mergeMap, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport {\n  OrganizationService,\n  getOrganizationById,\n  canAccessManageTab,\n  canAccessSettingsTab,\n  canAccessToolsTab,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-organization-layout\",\n  templateUrl: \"organization-layout.component.html\",\n})\nexport class OrganizationLayoutComponent implements OnInit, OnDestroy {\n  organization$: Observable<Organization>;\n  businessTokenPromise: Promise<void>;\n\n  private _destroy = new Subject<void>();\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n\n    this.organization$ = this.route.params\n      .pipe(takeUntil(this._destroy))\n      .pipe<string>(map((p) => p.organizationId))\n      .pipe(\n        mergeMap((id) => {\n          return this.organizationService.organizations$\n            .pipe(takeUntil(this._destroy))\n            .pipe(getOrganizationById(id));\n        })\n      );\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  canShowManageTab(organization: Organization): boolean {\n    return canAccessManageTab(organization);\n  }\n\n  canShowToolsTab(organization: Organization): boolean {\n    return canAccessToolsTab(organization);\n  }\n\n  canShowSettingsTab(organization: Organization): boolean {\n    return canAccessSettingsTab(organization);\n  }\n\n  getToolsRoute(organization: Organization): string {\n    return organization.canAccessImportExport ? \"tools/import\" : \"tools/exposed-passwords-report\";\n  }\n\n  getManageRoute(organization: Organization): string {\n    let route: string;\n    switch (true) {\n      case organization.canManageUsers:\n        route = \"manage/people\";\n        break;\n      case organization.canViewAssignedCollections || organization.canViewAllCollections:\n        route = \"manage/collections\";\n        break;\n      case organization.canManageGroups:\n        route = \"manage/groups\";\n        break;\n      case organization.canManagePolicies:\n        route = \"manage/policies\";\n        break;\n      case organization.canManageSso:\n        route = \"manage/sso\";\n        break;\n      case organization.canManageScim:\n        route = \"manage/scim\";\n        break;\n      case organization.canAccessEventLogs:\n        route = \"manage/events\";\n        break;\n    }\n    return route;\n  }\n}\n","export class SelectionReadOnlyRequest {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(id: string, readOnly: boolean, hidePasswords: boolean) {\n    this.id = id;\n    this.readOnly = readOnly;\n    this.hidePasswords = hidePasswords;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"collectionAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <div class=\"form-group\">\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"name\"\n            required\n            appAutofocus\n            [disabled]=\"!this.canSave\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"externalId\">{{ \"externalId\" | i18n }}</label>\n          <input\n            id=\"externalId\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"ExternalId\"\n            [(ngModel)]=\"externalId\"\n            [disabled]=\"!this.canSave\"\n          />\n          <small class=\"form-text text-muted\">{{ \"externalIdDesc\" | i18n }}</small>\n        </div>\n        <ng-container *ngIf=\"accessGroups\">\n          <h3 class=\"mt-4 d-flex mb-0\">\n            {{ \"groupAccess\" | i18n }}\n            <div class=\"ml-auto\" *ngIf=\"groups && groups.length && this.canSave\">\n              <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"selectAll\" | i18n }}\n              </button>\n              <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"unselectAll\" | i18n }}\n              </button>\n            </div>\n          </h3>\n          <div *ngIf=\"!groups || !groups.length\">\n            {{ \"noGroupsInList\" | i18n }}\n          </div>\n          <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let g of groups; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.checked\"\n                    name=\"Groups[{{ i }}].Checked\"\n                    [disabled]=\"g.accessAll || !this.canSave\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(g)\">\n                  {{ g.name }}\n                  <ng-container *ngIf=\"g.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter text-muted bwi-fw\"\n                      title=\"{{ 'groupAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"groupAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.hidePasswords\"\n                    name=\"Groups[{{ i }}].HidePasswords\"\n                    [disabled]=\"!g.checked || g.accessAll || !this.canSave\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"g.readOnly\"\n                    name=\"Groups[{{ i }}].ReadOnly\"\n                    [disabled]=\"!g.checked || g.accessAll || !this.canSave\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"this.canSave\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"this.canDelete\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { CollectionRequest } from \"@bitwarden/common/models/request/collection.request\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/group.response\";\n\n@Component({\n  selector: \"app-collection-add-edit\",\n  templateUrl: \"collection-add-edit.component.html\",\n})\nexport class CollectionAddEditComponent implements OnInit {\n  @Input() collectionId: string;\n  @Input() organizationId: string;\n  @Input() canSave: boolean;\n  @Input() canDelete: boolean;\n  @Output() onSavedCollection = new EventEmitter();\n  @Output() onDeletedCollection = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  accessGroups = false;\n  title: string;\n  name: string;\n  externalId: string;\n  groups: GroupResponse[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  private orgKey: SymmetricCryptoKey;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    const organization = await this.organizationService.get(this.organizationId);\n    this.accessGroups = organization.useGroups;\n    this.editMode = this.loading = this.collectionId != null;\n    if (this.accessGroups) {\n      const groupsResponse = await this.apiService.getGroups(this.organizationId);\n      this.groups = groupsResponse.data\n        .map((r) => r)\n        .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    }\n    this.orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editCollection\");\n      try {\n        const collection = await this.apiService.getCollectionDetails(\n          this.organizationId,\n          this.collectionId\n        );\n        this.name = await this.cryptoService.decryptToUtf8(\n          new EncString(collection.name),\n          this.orgKey\n        );\n        this.externalId = collection.externalId;\n        if (collection.groups != null && this.groups.length > 0) {\n          collection.groups.forEach((s) => {\n            const group = this.groups.filter((g) => !g.accessAll && g.id === s.id);\n            if (group != null && group.length > 0) {\n              (group[0] as any).checked = true;\n              (group[0] as any).readOnly = s.readOnly;\n              (group[0] as any).hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"addCollection\");\n    }\n\n    this.groups.forEach((g) => {\n      if (g.accessAll) {\n        (g as any).checked = true;\n      }\n    });\n\n    this.loading = false;\n  }\n\n  check(g: GroupResponse, select?: boolean) {\n    if (g.accessAll) {\n      return;\n    }\n    (g as any).checked = select == null ? !(g as any).checked : select;\n    if (!(g as any).checked) {\n      (g as any).readOnly = false;\n      (g as any).hidePasswords = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.groups.forEach((g) => this.check(g, select));\n  }\n\n  async submit() {\n    if (this.orgKey == null) {\n      throw new Error(\"No encryption key for this organization.\");\n    }\n\n    const request = new CollectionRequest();\n    request.name = (await this.cryptoService.encrypt(this.name, this.orgKey)).encryptedString;\n    request.externalId = this.externalId;\n    request.groups = this.groups\n      .filter((g) => (g as any).checked && !g.accessAll)\n      .map(\n        (g) => new SelectionReadOnlyRequest(g.id, !!(g as any).readOnly, !!(g as any).hidePasswords)\n      );\n\n    try {\n      if (this.editMode) {\n        this.formPromise = this.apiService.putCollection(\n          this.organizationId,\n          this.collectionId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.postCollection(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedCollectionId\" : \"createdCollectionId\", this.name)\n      );\n      this.onSavedCollection.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteCollection(this.organizationId, this.collectionId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", this.name)\n      );\n      this.onDeletedCollection.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Directive, ElementRef, HostBinding, Input } from \"@angular/core\";\n\ntype BadgeTypes = \"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\";\n\nconst styles: Record<BadgeTypes, string[]> = {\n  primary: [\"tw-bg-primary-500\"],\n  secondary: [\"tw-bg-text-muted\"],\n  success: [\"tw-bg-success-500\"],\n  danger: [\"tw-bg-danger-500\"],\n  warning: [\"tw-bg-warning-500\"],\n  info: [\"tw-bg-info-500\"],\n};\n\nconst hoverStyles: Record<BadgeTypes, string[]> = {\n  primary: [\"hover:tw-bg-primary-700\"],\n  secondary: [\"hover:tw-bg-secondary-700\"],\n  success: [\"hover:tw-bg-success-700\"],\n  danger: [\"hover:tw-bg-danger-700\"],\n  warning: [\"hover:tw-bg-warning-700\"],\n  info: [\"hover:tw-bg-info-700\"],\n};\n\n@Directive({\n  selector: \"span[bitBadge], a[bitBadge], button[bitBadge]\",\n})\nexport class BadgeDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-inline\",\n      \"tw-py-0.5\",\n      \"tw-px-1.5\",\n      \"tw-font-bold\",\n      \"tw-text-center\",\n      \"!tw-text-contrast\",\n      \"tw-rounded\",\n      \"tw-border-none\",\n      \"tw-box-border\",\n      \"tw-whitespace-no-wrap\",\n      \"tw-text-xs\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n      \"focus:tw-ring\",\n      \"focus:tw-ring-offset-2\",\n      \"focus:tw-ring-primary-700\",\n    ]\n      .concat(styles[this.badgeType])\n      .concat(this.hasHoverEffects ? hoverStyles[this.badgeType] : []);\n  }\n\n  @Input() badgeType: BadgeTypes = \"primary\";\n\n  private hasHoverEffects = false;\n\n  constructor(el: ElementRef<Element>) {\n    this.hasHoverEffects = el?.nativeElement?.nodeName != \"SPAN\";\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"userAccessTitle\">\n          {{ \"userAccess\" | i18n }}\n          <small>{{ entityName }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading || !users\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <cdk-virtual-scroll-viewport\n        itemSize=\"46\"\n        minBufferPx=\"600\"\n        maxBufferPx=\"1200\"\n        [style]=\"scrollViewportStyle\"\n      >\n        <div class=\"modal-body\" *ngIf=\"!loading && users && searchedUsers\">\n          <div class=\"d-flex\">\n            <div class=\"mr-3\">\n              <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n              <input\n                type=\"search\"\n                class=\"form-control form-control-sm\"\n                id=\"search\"\n                placeholder=\"{{ 'search' | i18n }}\"\n                name=\"SearchText\"\n                [(ngModel)]=\"searchText\"\n              />\n            </div>\n            <div class=\"btn-group btn-group-sm\" role=\"group\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{ active: !showSelected }\"\n                (click)=\"filterSelected(false)\"\n              >\n                {{ \"all\" | i18n }}\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{ active: showSelected }\"\n                (click)=\"filterSelected(true)\"\n              >\n                {{ \"selected\" | i18n }}\n                <span bitBadge badgeType=\"info\" *ngIf=\"selectedCount\">{{ selectedCount }}</span>\n              </button>\n            </div>\n          </div>\n          <ng-container *ngIf=\"!searchedUsers.length\">\n            <hr />\n            {{ \"noUsersInList\" | i18n }}\n          </ng-container>\n          <table class=\"table table-hover table-list mb-0\" [hidden]=\"!searchedUsers.length\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th *ngIf=\"entity === 'collection'\">&nbsp;</th>\n                <th>{{ \"userType\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"hidePasswords\" | i18n }}\n                </th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"readOnly\" | i18n }}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *cdkVirtualFor=\"let u of searchedUsers\" class=\"\">\n                <td class=\"table-list-checkbox\" (click)=\"check(u)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.checked\"\n                    name=\"{{ u.id.substr(0, 8) }}_Checked\"\n                    [disabled]=\"entity === 'collection' && u.accessAll\"\n                    (change)=\"selectedChanged(u)\"\n                    appStopProp\n                  />\n                </td>\n                <td width=\"30\" (click)=\"check(u)\">\n                  <bit-avatar [text]=\"u | userName\" [id]=\"u.id\" size=\"small\"></bit-avatar>\n                </td>\n                <td>\n                  {{ u.email }}\n                  <span\n                    bitBadge\n                    badgeType=\"secondary\"\n                    *ngIf=\"u.status === organizationUserStatusType.Invited\"\n                    >{{ \"invited\" | i18n }}</span\n                  >\n                  <span\n                    bitBadge\n                    badgeType=\"warning\"\n                    *ngIf=\"u.status === organizationUserStatusType.Accepted\"\n                    >{{ \"accepted\" | i18n }}</span\n                  >\n                  <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n                </td>\n                <td *ngIf=\"entity === 'collection'\">\n                  <ng-container *ngIf=\"u.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter\"\n                      title=\"{{ 'userAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"userAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td>\n                  <span *ngIf=\"u.type === organizationUserType.Owner\">{{ \"owner\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Admin\">{{ \"admin\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Manager\">{{\n                    \"manager\" | i18n\n                  }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.User\">{{ \"user\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Custom\">{{ \"custom\" | i18n }}</span>\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.hidePasswords\"\n                    name=\"{{ u.id.substr(0, 8) }}_HidePasswords\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.readOnly\"\n                    name=\"{{ u.id.substr(0, 8) }}_ReadOnly\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </cdk-virtual-scroll-viewport>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/models/response/organization-user.response\";\n\n@Component({\n  selector: \"app-entity-users\",\n  templateUrl: \"entity-users.component.html\",\n  providers: [SearchPipe],\n})\nexport class EntityUsersComponent implements OnInit {\n  @Input() entity: \"group\" | \"collection\";\n  @Input() entityId: string;\n  @Input() entityName: string;\n  @Input() organizationId: string;\n  @Output() onEditedUsers = new EventEmitter();\n\n  organizationUserType = OrganizationUserType;\n  organizationUserStatusType = OrganizationUserStatusType;\n\n  showSelected = false;\n  loading = true;\n  formPromise: Promise<any>;\n  selectedCount = 0;\n  searchText: string;\n\n  private allUsers: OrganizationUserUserDetailsResponse[] = [];\n\n  constructor(\n    private search: SearchPipe,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.loadUsers();\n    this.loading = false;\n  }\n\n  get users() {\n    if (this.showSelected) {\n      return this.allUsers.filter((u) => (u as any).checked);\n    } else {\n      return this.allUsers;\n    }\n  }\n\n  get searchedUsers() {\n    return this.search.transform(this.users, this.searchText, \"name\", \"email\", \"id\");\n  }\n\n  get scrollViewportStyle() {\n    return `min-height: 120px; height: ${120 + this.searchedUsers.length * 46}px`;\n  }\n\n  async loadUsers() {\n    const users = await this.apiService.getOrganizationUsers(this.organizationId);\n    this.allUsers = users.data.map((r) => r).sort(Utils.getSortFunction(this.i18nService, \"email\"));\n    if (this.entity === \"group\") {\n      const response = await this.apiService.getGroupUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => u.id === s);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n          }\n        });\n      }\n    } else if (this.entity === \"collection\") {\n      const response = await this.apiService.getCollectionUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => !u.accessAll && u.id === s.id);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n            (user[0] as any).readOnly = s.readOnly;\n            (user[0] as any).hidePasswords = s.hidePasswords;\n          }\n        });\n      }\n    }\n\n    this.allUsers.forEach((u) => {\n      if (this.entity === \"collection\" && u.accessAll) {\n        (u as any).checked = true;\n      }\n      if ((u as any).checked) {\n        this.selectedCount++;\n      }\n    });\n  }\n\n  check(u: OrganizationUserUserDetailsResponse) {\n    if (this.entity === \"collection\" && u.accessAll) {\n      return;\n    }\n    (u as any).checked = !(u as any).checked;\n    this.selectedChanged(u);\n  }\n\n  selectedChanged(u: OrganizationUserUserDetailsResponse) {\n    if ((u as any).checked) {\n      this.selectedCount++;\n    } else {\n      if (this.entity === \"collection\") {\n        (u as any).readOnly = false;\n        (u as any).hidePasswords = false;\n      }\n      this.selectedCount--;\n    }\n  }\n\n  filterSelected(showSelected: boolean) {\n    this.showSelected = showSelected;\n  }\n\n  async submit() {\n    try {\n      if (this.entity === \"group\") {\n        const selections = this.users.filter((u) => (u as any).checked).map((u) => u.id);\n        this.formPromise = this.apiService.putGroupUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      } else {\n        const selections = this.users\n          .filter((u) => (u as any).checked && !u.accessAll)\n          .map(\n            (u) =>\n              new SelectionReadOnlyRequest(u.id, !!(u as any).readOnly, !!(u as any).hidePasswords)\n          );\n        this.formPromise = this.apiService.putCollectionUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedUsers\"));\n      this.onEditedUsers.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"collections\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <button\n      type=\"button\"\n      *ngIf=\"this.canCreate\"\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"add()\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newCollection\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging()\n      ? pagedCollections\n      : (collections | search: searchText:'name':'id')) as searchedCollections\n  \"\n>\n  <p *ngIf=\"!searchedCollections.length\">{{ \"noCollectionsInList\" | i18n }}</p>\n  <table\n    class=\"table table-hover table-list\"\n    *ngIf=\"searchedCollections.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of searchedCollections\">\n        <td>\n          <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.name }}</a>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown *ngIf=\"this.canEdit(c) || this.canDelete(c)\">\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canEdit(c)\"\n                (click)=\"users(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                {{ \"users\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item text-danger\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canDelete(c)\"\n                (click)=\"delete(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport {\n  CollectionDetailsResponse,\n  CollectionResponse,\n} from \"@bitwarden/common/models/response/collection.response\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\nimport { CollectionAddEditComponent } from \"./collection-add-edit.component\";\nimport { EntityUsersComponent } from \"./entity-users.component\";\n\n@Component({\n  selector: \"app-org-manage-collections\",\n  templateUrl: \"collections.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CollectionsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organization: Organization;\n  canCreate = false;\n  organizationId: string;\n  collections: CollectionView[];\n  assignedCollections: CollectionView[];\n  pagedCollections: CollectionView[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedCollectionsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private collectionService: CollectionService,\n    private modalService: ModalService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private logService: LogService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    this.canCreate = this.organization.canCreateNewCollections;\n\n    const decryptCollections = async (r: ListResponse<CollectionResponse>) => {\n      const collections = r.data\n        .filter((c) => c.organizationId === this.organizationId)\n        .map((d) => new Collection(new CollectionData(d as CollectionDetailsResponse)));\n      return await this.collectionService.decryptMany(collections);\n    };\n\n    if (this.organization.canViewAssignedCollections) {\n      const response = await this.apiService.getUserCollections();\n      this.assignedCollections = await decryptCollections(response);\n    }\n\n    if (this.organization.canViewAllCollections) {\n      const response = await this.apiService.getCollections(this.organizationId);\n      this.collections = await decryptCollections(response);\n    } else {\n      this.collections = this.assignedCollections;\n    }\n\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.collections || this.collections.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCollections.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedCollectionsCount > this.pageSize) {\n      pagedSize = this.pagedCollectionsCount;\n    }\n    if (this.collections.length > pagedLength) {\n      this.pagedCollections = this.pagedCollections.concat(\n        this.collections.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCollectionsCount = this.pagedCollections.length;\n    this.didScroll = this.pagedCollections.length > this.pageSize;\n  }\n\n  async edit(collection: CollectionView) {\n    const canCreate = collection == null && this.canCreate;\n    const canEdit = collection != null && this.canEdit(collection);\n    const canDelete = collection != null && this.canDelete(collection);\n\n    if (!(canCreate || canEdit || canDelete)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      CollectionAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.collectionId = collection != null ? collection.id : null;\n        comp.canSave = canCreate || canEdit;\n        comp.canDelete = canDelete;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedCollection.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedCollection.subscribe(() => {\n          modal.close();\n          this.removeCollection(collection);\n        });\n      }\n    );\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(collection: CollectionView) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      collection.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteCollection(this.organizationId, collection.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", collection.name)\n      );\n      this.removeCollection(collection);\n    } catch (e) {\n      this.logService.error(e);\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n    }\n  }\n\n  async users(collection: CollectionView) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"collection\";\n        comp.entityId = collection.id;\n        comp.entityName = collection.name;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onEditedUsers.subscribe(() => {\n          this.load();\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedCollections = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.collections && this.collections.length > this.pageSize;\n  }\n\n  canEdit(collection: CollectionView) {\n    if (this.organization.canEditAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canEditAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  canDelete(collection: CollectionView) {\n    if (this.organization.canDeleteAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canDeleteAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  private removeCollection(collection: CollectionView) {\n    const index = this.collections.indexOf(collection);\n    if (index > -1) {\n      this.collections.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventView {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: EventType;\n  installationId: string;\n\n  constructor(data: Required<EventView>) {\n    this.message = data.message;\n    this.humanReadableMessage = data.humanReadableMessage;\n    this.appIcon = data.appIcon;\n    this.appName = data.appName;\n    this.userId = data.userId;\n    this.userName = data.userName;\n    this.userEmail = data.userEmail;\n    this.date = data.date;\n    this.ip = data.ip;\n    this.type = data.type;\n    this.installationId = data.installationId;\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/event.response\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { EventView } from \"@bitwarden/common/models/view/event.view\";\n\nimport { EventService } from \"../core\";\n\n@Directive()\nexport abstract class BaseEventsComponent {\n  loading = true;\n  loaded = false;\n  events: EventView[];\n  start: string;\n  end: string;\n  dirtyDates = true;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  exportPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  abstract readonly exportFileName: string;\n\n  constructor(\n    protected eventService: EventService,\n    protected i18nService: I18nService,\n    protected exportService: ExportService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected fileDownloadService: FileDownloadService\n  ) {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n  }\n\n  async exportEvents() {\n    if (this.appApiPromiseUnfulfilled() || this.dirtyDates) {\n      return;\n    }\n\n    this.loading = true;\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    try {\n      this.exportPromise = this.export(dates[0], dates[1]);\n\n      await this.exportPromise;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    this.exportPromise = null;\n    this.loading = false;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.appApiPromiseUnfulfilled()) {\n      return;\n    }\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    this.loading = true;\n    let events: EventView[] = [];\n    try {\n      const promise = this.loadAndParseEvents(\n        dates[0],\n        dates[1],\n        clearExisting ? null : this.continuationToken\n      );\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      const result = await promise;\n      this.continuationToken = result.continuationToken;\n      events = result.events;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.dirtyDates = false;\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n\n  protected abstract requestEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ): Promise<ListResponse<EventResponse>>;\n  protected abstract getUserName(r: EventResponse, userId: string): { name: string; email: string };\n\n  protected async loadAndParseEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ) {\n    const response = await this.requestEvents(startDate, endDate, continuationToken);\n\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user = this.getUserName(r, userId);\n        const userName = user != null ? user.name : this.i18nService.t(\"unknown\");\n\n        return new EventView({\n          message: eventInfo.message,\n          humanReadableMessage: eventInfo.humanReadableMessage,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: r.installationId != null ? `Installation: ${r.installationId}` : userName,\n          userEmail: user != null ? user.email : \"\",\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n          installationId: r.installationId,\n        });\n      })\n    );\n    return { continuationToken: response.continuationToken, events: events };\n  }\n\n  protected parseDates() {\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return null;\n    }\n    return dates;\n  }\n\n  protected appApiPromiseUnfulfilled() {\n    return this.refreshPromise != null || this.morePromise != null || this.exportPromise != null;\n  }\n\n  private async export(start: string, end: string) {\n    let continuationToken = this.continuationToken;\n    let events = [].concat(this.events);\n\n    while (continuationToken != null) {\n      const result = await this.loadAndParseEvents(start, end, continuationToken);\n      continuationToken = result.continuationToken;\n      events = events.concat(result.events);\n    }\n\n    const data = await this.exportService.getEventExport(events);\n    const fileName = this.exportService.getFileName(this.exportFileName, \"csv\");\n    this.fileDownloadService.download({\n      fileName,\n      blobData: data,\n      blobOptions: { type: \"text/plain\" },\n    });\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"eventLogs\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"form-inline\">\n      <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"start\"\n        placeholder=\"{{ 'startDate' | i18n }}\"\n        [(ngModel)]=\"start\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n      <span class=\"mx-2\">-</span>\n      <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"end\"\n        placeholder=\"{{ 'endDate' | i18n }}\"\n        [(ngModel)]=\"end\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n    </div>\n    <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary ml-3\"\n        (click)=\"loadEvents(true)\"\n        [disabled]=\"loaded && refreshForm.loading\"\n      >\n        <i\n          class=\"bwi bwi-refresh bwi-fw\"\n          aria-hidden=\"true\"\n          [ngClass]=\"{ 'bwi-spin': loaded && refreshForm.loading }\"\n        ></i>\n        {{ \"refresh\" | i18n }}\n      </button>\n    </form>\n    <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\"\n        [ngClass]=\"{ loading: exportForm.loading }\"\n        (click)=\"exportEvents()\"\n        [disabled]=\"(loaded && exportForm.loading) || dirtyDates\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i>\n        <span>{{ \"export\" | i18n }}</span>\n      </button>\n    </form>\n  </div>\n</div>\n<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"loaded\">\n  <p *ngIf=\"!events || !events.length\">{{ \"noEventsInList\" | i18n }}</p>\n  <table class=\"table table-hover\" *ngIf=\"events && events.length\">\n    <thead>\n      <tr>\n        <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n        <th class=\"border-top-0\" width=\"40\">\n          <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n        </th>\n        <th class=\"border-top-0\" width=\"150\">{{ \"user\" | i18n }}</th>\n        <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let e of events\">\n        <td>{{ e.date | date: \"medium\" }}</td>\n        <td>\n          <i\n            class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n            title=\"{{ e.appName }}, {{ e.ip }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n        </td>\n        <td>\n          <span title=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n        </td>\n        <td [innerHTML]=\"e.message\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <button\n    #moreBtn\n    [appApiAction]=\"morePromise\"\n    type=\"button\"\n    class=\"btn btn-block btn-link btn-submit\"\n    (click)=\"loadEvents(false)\"\n    [disabled]=\"loaded && moreBtn.loading\"\n    *ngIf=\"continuationToken\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"loadMore\" | i18n }}</span>\n  </button>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { EventResponse } from \"@bitwarden/common/models/response/event.response\";\n\nimport { BaseEventsComponent } from \"../../common/base.events.component\";\nimport { EventService } from \"../../core\";\n\n@Component({\n  selector: \"app-org-events\",\n  templateUrl: \"events.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n  exportFileName = \"org-events\";\n  organizationId: string;\n  organization: Organization;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    eventService: EventService,\n    i18nService: I18nService,\n    exportService: ExportService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    logService: LogService,\n    private userNamePipe: UserNamePipe,\n    private organizationService: OrganizationService,\n    private providerService: ProviderService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      eventService,\n      i18nService,\n      exportService,\n      platformUtilsService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.organization = await this.organizationService.get(this.organizationId);\n      if (this.organization == null || !this.organization.useEvents) {\n        this.router.navigate([\"/organizations\", this.organizationId]);\n        return;\n      }\n\n      await this.load();\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getOrganizationUsers(this.organizationId);\n    response.data.forEach((u) => {\n      const name = this.userNamePipe.transform(u);\n      this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n    });\n\n    if (this.organization.providerId != null) {\n      try {\n        const provider = await this.providerService.get(this.organization.providerId);\n        if (\n          provider != null &&\n          (await this.providerService.get(this.organization.providerId)).canManageUsers\n        ) {\n          const providerUsersResponse = await this.apiService.getProviderUsers(\n            this.organization.providerId\n          );\n          providerUsersResponse.data.forEach((u) => {\n            const name = this.userNamePipe.transform(u);\n            this.orgUsersUserIdMap.set(u.userId, {\n              name: `${name} (${this.organization.providerName})`,\n              email: u.email,\n            });\n          });\n        }\n      } catch (e) {\n        this.logService.warning(e);\n      }\n    }\n\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n    return this.apiService.getEventsOrganization(\n      this.organizationId,\n      startDate,\n      endDate,\n      continuationToken\n    );\n  }\n\n  protected getUserName(r: EventResponse, userId: string) {\n    if (userId == null) {\n      return null;\n    }\n\n    if (this.orgUsersUserIdMap.has(userId)) {\n      return this.orgUsersUserIdMap.get(userId);\n    }\n\n    if (r.providerId != null && r.providerId === this.organization.providerId) {\n      return {\n        name: this.organization.providerName,\n      };\n    }\n\n    return null;\n  }\n}\n","import { SelectionReadOnlyRequest } from \"./selection-read-only.request\";\n\nexport class GroupRequest {\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n  collections: SelectionReadOnlyRequest[] = [];\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"groupAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <div class=\"form-group\">\n          <label for=\"name\">{{ \"name\" | i18n }}</label>\n          <input\n            id=\"name\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Name\"\n            [(ngModel)]=\"name\"\n            required\n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"externalId\">{{ \"externalId\" | i18n }}</label>\n          <input\n            id=\"externalId\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"ExternalId\"\n            [(ngModel)]=\"externalId\"\n          />\n          <small class=\"form-text text-muted\">{{ \"externalIdDesc\" | i18n }}</small>\n        </div>\n        <h3 class=\"mt-4 d-flex\">\n          <div class=\"mb-2\">\n            {{ \"accessControl\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/user-types-access-control/#access-control\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </h3>\n        <div class=\"form-group\" [ngClass]=\"{ 'mb-0': access !== 'selected' }\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessAll\"\n              value=\"all\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessAll\">\n              {{ \"groupAccessAllItems\" | i18n }}\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessSelected\"\n              value=\"selected\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessSelected\">\n              {{ \"groupAccessSelectedCollections\" | i18n }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"access === 'selected'\">\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(c)\">\n                  {{ c.name }}\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.hidePasswords\"\n                    name=\"Collection[{{ i }}].HidePasswords\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.readOnly\"\n                    name=\"Collection[{{ i }}].ReadOnly\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              aria-hidden=\"true\"\n              title=\"{{ 'loading' | i18n }}\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { GroupRequest } from \"@bitwarden/common/models/request/group.request\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collection.response\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Component({\n  selector: \"app-group-add-edit\",\n  templateUrl: \"group-add-edit.component.html\",\n})\nexport class GroupAddEditComponent implements OnInit {\n  @Input() groupId: string;\n  @Input() organizationId: string;\n  @Output() onSavedGroup = new EventEmitter();\n  @Output() onDeletedGroup = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  title: string;\n  name: string;\n  externalId: string;\n  access: \"all\" | \"selected\" = \"selected\";\n  collections: CollectionView[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.groupId != null;\n    await this.loadCollections();\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editGroup\");\n      try {\n        const group = await this.apiService.getGroupDetails(this.organizationId, this.groupId);\n        this.access = group.accessAll ? \"all\" : \"selected\";\n        this.name = group.name;\n        this.externalId = group.externalId;\n        if (group.collections != null && this.collections != null) {\n          group.collections.forEach((s) => {\n            const collection = this.collections.filter((c) => c.id === s.id);\n            if (collection != null && collection.length > 0) {\n              (collection[0] as any).checked = true;\n              collection[0].readOnly = s.readOnly;\n              collection[0].hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"addGroup\");\n    }\n\n    this.loading = false;\n  }\n\n  async loadCollections() {\n    const response = await this.apiService.getCollections(this.organizationId);\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    this.collections = await this.collectionService.decryptMany(collections);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n    if (!(c as any).checked) {\n      c.readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n\n  async submit() {\n    const request = new GroupRequest();\n    request.name = this.name;\n    request.externalId = this.externalId;\n    request.accessAll = this.access === \"all\";\n    if (!request.accessAll) {\n      request.collections = this.collections\n        .filter((c) => (c as any).checked)\n        .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n    }\n\n    try {\n      if (this.editMode) {\n        this.formPromise = this.apiService.putGroup(this.organizationId, this.groupId, request);\n      } else {\n        this.formPromise = this.apiService.postGroup(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedGroupId\" : \"createdGroupId\", this.name)\n      );\n      this.onSavedGroup.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteGroup(this.organizationId, this.groupId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", this.name)\n      );\n      this.onDeletedGroup.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"groups\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newGroup\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedGroups : (groups | search: searchText:'name':'id')) as searchedGroups\n  \"\n>\n  <p *ngIf=\"!searchedGroups.length\">{{ \"noGroupsInList\" | i18n }}</p>\n  <table\n    class=\"table table-hover table-list\"\n    *ngIf=\"searchedGroups.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let g of searchedGroups\">\n        <td>\n          <a href=\"#\" appStopClick (click)=\"edit(g)\">{{ g.name }}</a>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"users(g)\">\n                <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                {{ \"users\" | i18n }}\n              </a>\n              <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(g)\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/group.response\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\nimport { GroupAddEditComponent } from \"./group-add-edit.component\";\n\n@Component({\n  selector: \"app-org-groups\",\n  templateUrl: \"groups.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class GroupsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  groups: GroupResponse[];\n  pagedGroups: GroupResponse[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedGroupsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getGroups(this.organizationId);\n    const groups = response.data != null && response.data.length > 0 ? response.data : [];\n    groups.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.groups = groups;\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.groups || this.groups.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedGroups.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedGroupsCount > this.pageSize) {\n      pagedSize = this.pagedGroupsCount;\n    }\n    if (this.groups.length > pagedLength) {\n      this.pagedGroups = this.pagedGroups.concat(\n        this.groups.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedGroupsCount = this.pagedGroups.length;\n    this.didScroll = this.pagedGroups.length > this.pageSize;\n  }\n\n  async edit(group: GroupResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      GroupAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.groupId = group != null ? group.id : null;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedGroup.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedGroup.subscribe(() => {\n          modal.close();\n          this.removeGroup(group);\n        });\n      }\n    );\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(group: GroupResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      group.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteGroup(this.organizationId, group.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", group.name)\n      );\n      this.removeGroup(group);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async users(group: GroupResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"group\";\n        comp.entityId = group.id;\n        comp.entityName = group.name;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onEditedUsers.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedGroups = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.groups && this.groups.length > this.pageSize;\n  }\n\n  private removeGroup(group: GroupResponse) {\n    const index = this.groups.indexOf(group);\n    if (index > -1) {\n      this.groups.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"organization\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"people\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageUsers\"\n          >\n            {{ \"people\" | i18n }}\n          </a>\n          <a\n            routerLink=\"collections\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canViewAllCollections || organization.canViewAssignedCollections\"\n          >\n            {{ \"collections\" | i18n }}\n          </a>\n          <a\n            routerLink=\"groups\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageGroups\"\n          >\n            {{ \"groups\" | i18n }}\n          </a>\n          <a\n            routerLink=\"policies\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManagePolicies\"\n          >\n            {{ \"policies\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sso\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageSso\"\n          >\n            {{ \"singleSignOn\" | i18n }}\n          </a>\n          <a\n            routerLink=\"scim\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageScim\"\n          >\n            {{ \"scim\" | i18n }}\n          </a>\n          <a\n            routerLink=\"events\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canAccessEventLogs\"\n          >\n            {{ \"eventLogs\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-manage\",\n  templateUrl: \"manage.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ManageComponent implements OnInit {\n  organization: Organization;\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n    });\n  }\n}\n","export class OrganizationUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class OrganizationUserConfirmRequest {\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-user-confirm\",\n  templateUrl: \"user-confirm.component.html\",\n})\nexport class UserConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() publicKey: Uint8Array;\n  @Output() onConfirmedUser = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      if (this.publicKey != null) {\n        const fingerprint = await this.cryptoService.getFingerprint(\n          this.userId,\n          this.publicKey.buffer\n        );\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    this.onConfirmedUser.emit();\n  }\n}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/models/response/organization-user.response\";\nimport { ProviderUserUserDetailsResponse } from \"@bitwarden/common/models/response/provider/provider-user.response\";\n\nimport { UserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\n\ntype StatusType = OrganizationUserStatusType | ProviderUserStatusType;\n\nconst MaxCheckedCount = 500;\n\n@Directive()\nexport abstract class BasePeopleComponent<\n  UserType extends ProviderUserUserDetailsResponse | OrganizationUserUserDetailsResponse\n> {\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  get allCount() {\n    return this.activeUsers != null ? this.activeUsers.length : 0;\n  }\n\n  get invitedCount() {\n    return this.statusMap.has(this.userStatusType.Invited)\n      ? this.statusMap.get(this.userStatusType.Invited).length\n      : 0;\n  }\n\n  get acceptedCount() {\n    return this.statusMap.has(this.userStatusType.Accepted)\n      ? this.statusMap.get(this.userStatusType.Accepted).length\n      : 0;\n  }\n\n  get confirmedCount() {\n    return this.statusMap.has(this.userStatusType.Confirmed)\n      ? this.statusMap.get(this.userStatusType.Confirmed).length\n      : 0;\n  }\n\n  get revokedCount() {\n    return this.statusMap.has(this.userStatusType.Revoked)\n      ? this.statusMap.get(this.userStatusType.Revoked).length\n      : 0;\n  }\n\n  get showConfirmUsers(): boolean {\n    return (\n      this.activeUsers != null &&\n      this.statusMap != null &&\n      this.activeUsers.length > 1 &&\n      this.confirmedCount > 0 &&\n      this.confirmedCount < 3 &&\n      this.acceptedCount > 0\n    );\n  }\n\n  get showBulkConfirmUsers(): boolean {\n    return this.acceptedCount > 0;\n  }\n\n  abstract userType: typeof OrganizationUserType | typeof ProviderUserType;\n  abstract userStatusType: typeof OrganizationUserStatusType | typeof ProviderUserStatusType;\n\n  loading = true;\n  statusMap = new Map<StatusType, UserType[]>();\n  status: StatusType;\n  users: UserType[] = [];\n  pagedUsers: UserType[] = [];\n  searchText: string;\n  actionPromise: Promise<void>;\n\n  protected allUsers: UserType[] = [];\n  protected activeUsers: UserType[] = [];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedUsersCount = 0;\n\n  constructor(\n    protected apiService: ApiService,\n    private searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cryptoService: CryptoService,\n    protected validationService: ValidationService,\n    protected modalService: ModalService,\n    private logService: LogService,\n    private searchPipe: SearchPipe,\n    protected userNamePipe: UserNamePipe,\n    protected stateService: StateService\n  ) {}\n\n  abstract edit(user: UserType): void;\n  abstract getUsers(): Promise<ListResponse<UserType>>;\n  abstract deleteUser(id: string): Promise<void>;\n  abstract revokeUser(id: string): Promise<void>;\n  abstract restoreUser(id: string): Promise<void>;\n  abstract reinviteUser(id: string): Promise<void>;\n  abstract confirmUser(user: UserType, publicKey: Uint8Array): Promise<void>;\n\n  async load() {\n    const response = await this.getUsers();\n    this.statusMap.clear();\n    this.activeUsers = [];\n    for (const status of Utils.iterateEnum(this.userStatusType)) {\n      this.statusMap.set(status, []);\n    }\n\n    this.allUsers = response.data != null && response.data.length > 0 ? response.data : [];\n    this.allUsers.sort(\n      Utils.getSortFunction<ProviderUserUserDetailsResponse | OrganizationUserUserDetailsResponse>(\n        this.i18nService,\n        \"email\"\n      )\n    );\n    this.allUsers.forEach((u) => {\n      if (!this.statusMap.has(u.status)) {\n        this.statusMap.set(u.status, [u]);\n      } else {\n        this.statusMap.get(u.status).push(u);\n      }\n      if (u.status !== this.userStatusType.Revoked) {\n        this.activeUsers.push(u);\n      }\n    });\n    this.filter(this.status);\n    this.loading = false;\n  }\n\n  filter(status: StatusType) {\n    this.status = status;\n    if (this.status != null) {\n      this.users = this.statusMap.get(this.status);\n    } else {\n      this.users = this.activeUsers;\n    }\n    // Reset checkbox selecton\n    this.selectAll(false);\n    this.resetPaging();\n  }\n\n  loadMore() {\n    if (!this.users || this.users.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedUsers.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedUsersCount > this.pageSize) {\n      pagedSize = this.pagedUsersCount;\n    }\n    if (this.users.length > pagedLength) {\n      this.pagedUsers = this.pagedUsers.concat(\n        this.users.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedUsersCount = this.pagedUsers.length;\n    this.didScroll = this.pagedUsers.length > this.pageSize;\n  }\n\n  checkUser(user: OrganizationUserUserDetailsResponse, select?: boolean) {\n    (user as any).checked = select == null ? !(user as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n\n    const filteredUsers = this.searchPipe.transform(\n      this.users,\n      this.searchText,\n      \"name\",\n      \"email\",\n      \"id\"\n    );\n\n    const selectCount =\n      select && filteredUsers.length > MaxCheckedCount ? MaxCheckedCount : filteredUsers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkUser(filteredUsers[i], select);\n    }\n  }\n\n  async resetPaging() {\n    this.pagedUsers = [];\n    this.loadMore();\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  protected async removeUserConfirmationDialog(user: UserType) {\n    return this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.userNamePipe.transform(user),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n  }\n\n  async remove(user: UserType) {\n    const confirmed = await this.removeUserConfirmationDialog(user);\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.deleteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(user))\n      );\n      this.removeUser(user);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async revoke(user: UserType) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.revokeWarningMessage(),\n      this.i18nService.t(\"revokeUserId\", this.userNamePipe.transform(user)),\n      this.i18nService.t(\"revokeAccess\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.revokeUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"revokedUserId\", this.userNamePipe.transform(user))\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async restore(user: UserType) {\n    this.actionPromise = this.restoreUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"restoredUserId\", this.userNamePipe.transform(user))\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async reinvite(user: UserType) {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    this.actionPromise = this.reinviteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"hasBeenReinvited\", this.userNamePipe.transform(user))\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async confirm(user: UserType) {\n    function updateUser(self: BasePeopleComponent<UserType>) {\n      user.status = self.userStatusType.Confirmed;\n      const mapIndex = self.statusMap.get(self.userStatusType.Accepted).indexOf(user);\n      if (mapIndex > -1) {\n        self.statusMap.get(self.userStatusType.Accepted).splice(mapIndex, 1);\n        self.statusMap.get(self.userStatusType.Confirmed).push(user);\n      }\n    }\n\n    const confirmUser = async (publicKey: Uint8Array) => {\n      try {\n        this.actionPromise = this.confirmUser(user, publicKey);\n        await this.actionPromise;\n        updateUser(this);\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(user))\n        );\n      } catch (e) {\n        this.validationService.showError(e);\n        throw e;\n      } finally {\n        this.actionPromise = null;\n      }\n    };\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(user.userId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n      if (autoConfirm == null || !autoConfirm) {\n        const [modal] = await this.modalService.openViewRef(\n          UserConfirmComponent,\n          this.confirmModalRef,\n          (comp) => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.userId = user != null ? user.userId : null;\n            comp.publicKey = publicKey;\n            // eslint-disable-next-line rxjs/no-async-subscribe\n            comp.onConfirmedUser.subscribe(async () => {\n              try {\n                comp.formPromise = confirmUser(publicKey);\n                await comp.formPromise;\n                modal.close();\n              } catch (e) {\n                this.logService.error(e);\n              }\n            });\n          }\n        );\n        return;\n      }\n\n      try {\n        const fingerprint = await this.cryptoService.getFingerprint(user.userId, publicKey.buffer);\n        this.logService.info(`User's fingerprint: ${fingerprint.join(\"-\")}`);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      await confirmUser(publicKey);\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.users && this.users.length > this.pageSize;\n  }\n\n  protected revokeWarningMessage(): string {\n    return this.i18nService.t(\"revokeUserConfirmation\");\n  }\n\n  protected getCheckedUsers() {\n    return this.users.filter((u) => (u as any).checked);\n  }\n\n  protected removeUser(user: UserType) {\n    let index = this.users.indexOf(user);\n    if (index > -1) {\n      this.users.splice(index, 1);\n      this.resetPaging();\n    }\n    if (this.statusMap.has(user.status)) {\n      index = this.statusMap.get(user.status).indexOf(user);\n      if (index > -1) {\n        this.statusMap.get(user.status).splice(index, 1);\n      }\n    }\n  }\n}\n","type OrganizationUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class OrganizationUserBulkConfirmRequest {\n  keys: OrganizationUserBulkRequestEntry[];\n\n  constructor(keys: OrganizationUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"confirmUsers\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <app-callout type=\"danger\" *ngIf=\"filteredUsers.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!loading && !done\">\n          <p>\n            {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n            <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n              {{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"fingerprint\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ fingerprints.get(user.id) }}\n              </td>\n            </tr>\n            <tr *ngFor=\"let user of excludedUsers\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"!loading && done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { OrganizationUserBulkConfirmRequest } from \"@bitwarden/common/models/request/organization-user-bulk-confirm.request\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organization-user-bulk.request\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-confirm\",\n  templateUrl: \"bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent implements OnInit {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  excludedUsers: BulkUserDetails[];\n  filteredUsers: BulkUserDetails[];\n  publicKeys: Map<string, Uint8Array> = new Map();\n  fingerprints: Map<string, string> = new Map();\n  statuses: Map<string, string> = new Map();\n\n  loading = true;\n  done = false;\n  error: string;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    this.excludedUsers = this.users.filter((u) => !this.isAccepted(u));\n    this.filteredUsers = this.users.filter((u) => this.isAccepted(u));\n\n    if (this.filteredUsers.length <= 0) {\n      this.done = true;\n    }\n\n    const response = await this.getPublicKeys();\n\n    for (const entry of response.data) {\n      const publicKey = Utils.fromB64ToArray(entry.key);\n      const fingerprint = await this.cryptoService.getFingerprint(entry.userId, publicKey.buffer);\n      if (fingerprint != null) {\n        this.publicKeys.set(entry.id, publicKey);\n        this.fingerprints.set(entry.id, fingerprint.join(\"-\"));\n      }\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.loading = true;\n    try {\n      const key = await this.getCryptoKey();\n      const userIdsWithKeys: any[] = [];\n      for (const user of this.filteredUsers) {\n        const publicKey = this.publicKeys.get(user.id);\n        if (publicKey == null) {\n          continue;\n        }\n        const encryptedKey = await this.cryptoService.rsaEncrypt(key.key, publicKey.buffer);\n        userIdsWithKeys.push({\n          id: user.id,\n          key: encryptedKey.encryptedString,\n        });\n      }\n      const response = await this.postConfirmRequest(userIdsWithKeys);\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkConfirmMessage\");\n        this.statuses.set(entry.id, error);\n      });\n\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n    this.loading = false;\n  }\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === OrganizationUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    const request = new OrganizationUserBulkRequest(this.filteredUsers.map((user) => user.id));\n    return await this.apiService.postOrganizationUsersPublicKey(this.organizationId, request);\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getOrgKey(this.organizationId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new OrganizationUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.apiService.postOrganizationUserBulkConfirm(this.organizationId, request);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"removeUsers\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"danger\" *ngIf=\"users.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!done\">\n          <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error\">\n            {{ removeUsersWarning }}\n          </app-callout>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done && users.length > 0\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"removeUsers\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organization-user-bulk.request\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-remove\",\n  templateUrl: \"bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  statuses: Map<string, string> = new Map();\n\n  loading = false;\n  done = false;\n  error: string;\n\n  constructor(protected apiService: ApiService, protected i18nService: I18nService) {}\n\n  async submit() {\n    this.loading = true;\n    try {\n      const response = await this.deleteUsers();\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkRemovedMessage\");\n        this.statuses.set(entry.id, error);\n      });\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n\n    this.loading = false;\n  }\n\n  protected async deleteUsers() {\n    const request = new OrganizationUserBulkRequest(this.users.map((user) => user.id));\n    return await this.apiService.deleteManyOrganizationUsers(this.organizationId, request);\n  }\n\n  protected get removeUsersWarning() {\n    return this.i18nService.t(\"removeOrgUsersConfirmation\");\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"bulkTitle\">\n          {{ bulkTitle }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"danger\" *ngIf=\"users.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!done\">\n          <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error && isRevoking\">\n            {{ \"revokeUsersWarning\" | i18n }}\n          </app-callout>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done && users.length > 0\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ bulkTitle }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ModalConfig } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organization-user-bulk.request\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-restore-revoke\",\n  templateUrl: \"bulk-restore-revoke.component.html\",\n})\nexport class BulkRestoreRevokeComponent {\n  isRevoking: boolean;\n  organizationId: string;\n  users: BulkUserDetails[];\n\n  statuses: Map<string, string> = new Map();\n\n  loading = false;\n  done = false;\n  error: string;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    config: ModalConfig\n  ) {\n    this.isRevoking = config.data.isRevoking;\n    this.organizationId = config.data.organizationId;\n    this.users = config.data.users;\n  }\n\n  get bulkTitle() {\n    const titleKey = this.isRevoking ? \"revokeUsers\" : \"restoreUsers\";\n    return this.i18nService.t(titleKey);\n  }\n\n  async submit() {\n    this.loading = true;\n    try {\n      const response = await this.performBulkUserAction();\n\n      const bulkMessage = this.isRevoking ? \"bulkRevokedMessage\" : \"bulkRestoredMessage\";\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(bulkMessage);\n        this.statuses.set(entry.id, error);\n      });\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n\n    this.loading = false;\n  }\n\n  protected async performBulkUserAction() {\n    const request = new OrganizationUserBulkRequest(this.users.map((user) => user.id));\n    if (this.isRevoking) {\n      return await this.apiService.revokeManyOrganizationUsers(this.organizationId, request);\n    } else {\n      return await this.apiService.restoreManyOrganizationUsers(this.organizationId, request);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"bulkConfirmStatus\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              <th>{{ \"status\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tr *ngFor=\"let item of users\">\n            <td width=\"30\">\n              <bit-avatar\n                [text]=\"item.user | userName\"\n                [id]=\"item.user.id\"\n                size=\"small\"\n              ></bit-avatar>\n            </td>\n            <td>\n              {{ item.user.email }}\n              <small class=\"text-muted d-block\" *ngIf=\"item.user.name\">{{ item.user.name }}</small>\n            </td>\n            <td class=\"text-danger\" *ngIf=\"item.error\">\n              {{ item.message }}\n            </td>\n            <td *ngIf=\"!item.error\">\n              {{ item.message }}\n            </td>\n          </tr>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\n\nexport interface BulkUserDetails {\n  id: string;\n  name: string;\n  email: string;\n  status: OrganizationUserStatusType | ProviderUserStatusType;\n}\n\ntype BulkStatusEntry = {\n  user: BulkUserDetails;\n  error: boolean;\n  message: string;\n};\n\n@Component({\n  selector: \"app-bulk-status\",\n  templateUrl: \"bulk-status.component.html\",\n})\nexport class BulkStatusComponent {\n  users: BulkStatusEntry[];\n  loading = false;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"eventLogsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"eventLogsTitle\">\n          {{ \"eventLogs\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loaded\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loaded\">\n        <div class=\"d-flex\">\n          <div class=\"form-inline\">\n            <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"start\"\n              placeholder=\"{{ 'startDate' | i18n }}\"\n              [(ngModel)]=\"start\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n            <span class=\"mx-2\">-</span>\n            <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"end\"\n              placeholder=\"{{ 'endDate' | i18n }}\"\n              [(ngModel)]=\"end\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n          </div>\n          <button\n            #refreshBtn\n            [appApiAction]=\"refreshPromise\"\n            type=\"button\"\n            class=\"btn btn-sm btn-outline-primary ml-3\"\n            (click)=\"loadEvents(true)\"\n            [disabled]=\"loaded && refreshBtn.loading\"\n          >\n            <i\n              class=\"bwi bwi-refresh bwi-fw\"\n              [ngClass]=\"{ 'bwi-spin': loaded && refreshBtn.loading }\"\n              aria-hidden=\"true\"\n            ></i>\n            {{ \"refresh\" | i18n }}\n          </button>\n        </div>\n        <hr />\n        <div *ngIf=\"!events || !events.length\">\n          {{ \"noEventsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover mb-0\" *ngIf=\"events && events.length\">\n          <thead>\n            <tr>\n              <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n              <th class=\"border-top-0\" width=\"40\">\n                <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n              </th>\n              <th class=\"border-top-0\" width=\"150\" *ngIf=\"showUser\">{{ \"user\" | i18n }}</th>\n              <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let e of events\">\n              <td>{{ e.date | date: \"medium\" }}</td>\n              <td>\n                <i\n                  class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n                  title=\"{{ e.appName }}, {{ e.ip }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n              </td>\n              <td *ngIf=\"showUser\">\n                <span appA11yTitle=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n              </td>\n              <td [innerHTML]=\"e.message\"></td>\n            </tr>\n          </tbody>\n        </table>\n        <button\n          #moreBtn\n          [appApiAction]=\"morePromise\"\n          type=\"button\"\n          class=\"btn btn-block btn-link btn-submit\"\n          (click)=\"loadEvents(false)\"\n          [disabled]=\"loaded && moreBtn.loading\"\n          *ngIf=\"continuationToken\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"loadMore\" | i18n }}</span>\n        </button>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/event.response\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\n\nimport { EventService } from \"../../core\";\n\n@Component({\n  selector: \"app-entity-events\",\n  templateUrl: \"entity-events.component.html\",\n})\nexport class EntityEventsComponent implements OnInit {\n  @Input() name: string;\n  @Input() entity: \"user\" | \"cipher\";\n  @Input() entityId: string;\n  @Input() organizationId: string;\n  @Input() providerId: string;\n  @Input() showUser = false;\n\n  loading = true;\n  loaded = false;\n  events: any[];\n  start: string;\n  end: string;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n  private orgUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private eventService: EventService,\n    private platformUtilsService: PlatformUtilsService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n    await this.load();\n  }\n\n  async load() {\n    if (this.showUser) {\n      const response = await this.apiService.getOrganizationUsers(this.organizationId);\n      response.data.forEach((u) => {\n        const name = this.userNamePipe.transform(u);\n        this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n        this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n      });\n    }\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.refreshPromise != null || this.morePromise != null) {\n      return;\n    }\n\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return;\n    }\n\n    this.loading = true;\n    let response: ListResponse<EventResponse>;\n    try {\n      let promise: Promise<any>;\n      if (this.entity === \"user\" && this.providerId) {\n        promise = this.apiService.getEventsProviderUser(\n          this.providerId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else if (this.entity === \"user\") {\n        promise = this.apiService.getEventsOrganizationUser(\n          this.organizationId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else {\n        promise = this.apiService.getEventsCipher(\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      }\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      response = await promise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.continuationToken = response.continuationToken;\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user =\n          this.showUser && userId != null && this.orgUsersUserIdMap.has(userId)\n            ? this.orgUsersUserIdMap.get(userId)\n            : null;\n        return {\n          message: eventInfo.message,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: user != null ? user.name : this.showUser ? this.i18nService.t(\"unknown\") : null,\n          userEmail: user != null ? user.email : this.showUser ? \"\" : null,\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n        };\n      })\n    );\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"resetPasswordTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"resetPasswordTitle\">\n          {{ \"resetPassword\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\"\n          >{{ \"resetPasswordLoggedOutWarning\" | i18n: loggedOutWarningName }}\n        </app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          enforcedPolicyMessage=\"{{ 'resetPasswordMasterPasswordPolicyInEffect' | i18n }}\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col form-group\">\n            <div class=\"d-flex\">\n              <label for=\"newPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"ml-auto d-flex\">\n                <a\n                  href=\"#\"\n                  class=\"d-block mr-2 bwi-icon-above-input\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                  (click)=\"generatePassword()\"\n                >\n                  <i class=\"bwi bwi-lg bwi-fw bwi-refresh\" aria-hidden=\"true\"></i>\n                </a>\n              </div>\n            </div>\n            <div class=\"input-group mb-1\">\n              <input\n                id=\"newPassword\"\n                class=\"form-control text-monospace\"\n                appAutofocus\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"NewPassword\"\n                [(ngModel)]=\"newPassword\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <div class=\"input-group-append\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword()\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary\"\n                  appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                  (click)=\"copy(newPassword)\"\n                >\n                  <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n            <app-password-strength\n              [password]=\"newPassword\"\n              [email]=\"email\"\n              [showText]=\"true\"\n              (passwordStrengthResult)=\"getStrengthResult($event)\"\n            >\n            </app-password-strength>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport zxcvbn from \"zxcvbn\";\n\nimport { PasswordStrengthComponent } from \"@bitwarden/angular/shared/components/password-strength/password-strength.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { OrganizationUserResetPasswordRequest } from \"@bitwarden/common/models/request/organization-user-reset-password.request\";\n\n@Component({\n  selector: \"app-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordComponent implements OnInit, OnDestroy {\n  @Input() name: string;\n  @Input() email: string;\n  @Input() id: string;\n  @Input() organizationId: string;\n  @Output() onPasswordReset = new EventEmitter();\n  @ViewChild(PasswordStrengthComponent) passwordStrengthComponent: PasswordStrengthComponent;\n\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  newPassword: string = null;\n  showPassword = false;\n  passwordStrengthResult: zxcvbn.ZXCVBNResult;\n  formPromise: Promise<any>;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    private cryptoService: CryptoService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService\n      .masterPasswordPolicyOptions$()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (enforcedPasswordPolicyOptions) =>\n          (this.enforcedPolicyOptions = enforcedPasswordPolicyOptions)\n      );\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get loggedOutWarningName() {\n    return this.name != null ? this.name : this.i18nService.t(\"thisUser\");\n  }\n\n  async generatePassword() {\n    const options = (await this.passwordGenerationService.getOptions())?.[0] ?? {};\n    this.newPassword = await this.passwordGenerationService.generatePassword(options);\n    this.passwordStrengthComponent.updatePasswordStrength(this.newPassword);\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"newPassword\").focus();\n  }\n\n  copy(value: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n\n  async submit() {\n    // Validation\n    if (this.newPassword == null || this.newPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n\n    if (this.newPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordMinlength\")\n      );\n      return false;\n    }\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.passwordStrengthResult.score,\n        this.newPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    if (this.passwordStrengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    // Get user Information (kdf type, kdf iterations, resetPasswordKey, private key) and change password\n    try {\n      this.formPromise = this.apiService\n        .getOrganizationUserResetPasswordDetails(this.organizationId, this.id)\n        .then(async (response) => {\n          if (response == null) {\n            throw new Error(this.i18nService.t(\"resetPasswordDetailsError\"));\n          }\n\n          const kdfType = response.kdf;\n          const kdfIterations = response.kdfIterations;\n          const resetPasswordKey = response.resetPasswordKey;\n          const encryptedPrivateKey = response.encryptedPrivateKey;\n\n          // Decrypt Organization's encrypted Private Key with org key\n          const orgSymKey = await this.cryptoService.getOrgKey(this.organizationId);\n          const decPrivateKey = await this.cryptoService.decryptToBytes(\n            new EncString(encryptedPrivateKey),\n            orgSymKey\n          );\n\n          // Decrypt User's Reset Password Key to get EncKey\n          const decValue = await this.cryptoService.rsaDecrypt(resetPasswordKey, decPrivateKey);\n          const userEncKey = new SymmetricCryptoKey(decValue);\n\n          // Create new key and hash new password\n          const newKey = await this.cryptoService.makeKey(\n            this.newPassword,\n            this.email.trim().toLowerCase(),\n            kdfType,\n            kdfIterations\n          );\n          const newPasswordHash = await this.cryptoService.hashPassword(this.newPassword, newKey);\n\n          // Create new encKey for the User\n          const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n          // Create request\n          const request = new OrganizationUserResetPasswordRequest();\n          request.key = newEncKey[1].encryptedString;\n          request.newMasterPasswordHash = newPasswordHash;\n\n          // Change user's password\n          return this.apiService.putOrganizationUserResetPassword(\n            this.organizationId,\n            this.id,\n            request\n          );\n        });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"resetPasswordSuccess\")\n      );\n      this.onPasswordReset.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  getStrengthResult(result: zxcvbn.ZXCVBNResult) {\n    this.passwordStrengthResult = result;\n  }\n}\n","import { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\n\nimport { SelectionReadOnlyRequest } from \"./selection-read-only.request\";\n\nexport class OrganizationUserInviteRequest {\n  emails: string[] = [];\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  permissions: PermissionsApi;\n}\n","import { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\n\nimport { SelectionReadOnlyRequest } from \"./selection-read-only.request\";\n\nexport class OrganizationUserUpdateRequest {\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  permissions: PermissionsApi;\n}\n","<div class=\"form-group mb-0\">\n  <div class=\"form-check mt-1 form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      [name]=\"pascalize(parentId)\"\n      [id]=\"parentId\"\n      [(ngModel)]=\"parentChecked\"\n      [indeterminate]=\"parentIndeterminate\"\n    />\n    <label class=\"form-check-label font-weight-normal\" [for]=\"parentId\">\n      {{ parentId | i18n }}\n    </label>\n  </div>\n  <div class=\"form-group form-group-child-check mb-0\">\n    <div class=\"form-check mt-1\" *ngFor=\"let c of checkboxes\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        [name]=\"pascalize(c.id)\"\n        [id]=\"c.id\"\n        [ngModel]=\"c.get()\"\n        (ngModelChange)=\"c.set($event)\"\n      />\n      <label class=\"form-check-label font-weight-normal\" [for]=\"c.id\">\n        {{ c.id | i18n }}\n      </label>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-nested-checkbox\",\n  templateUrl: \"nested-checkbox.component.html\",\n})\nexport class NestedCheckboxComponent {\n  @Input() parentId: string;\n  @Input() checkboxes: { id: string; get: () => boolean; set: (v: boolean) => void }[];\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  get parentIndeterminate() {\n    return !this.parentChecked && this.checkboxes.some((c) => c.get());\n  }\n\n  get parentChecked() {\n    return this.checkboxes.every((c) => c.get());\n  }\n\n  set parentChecked(value: boolean) {\n    this.checkboxes.forEach((c) => {\n      c.set(value);\n    });\n  }\n\n  pascalize(s: string) {\n    return Utils.camelToPascalCase(s);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n          <span bitBadge badgeType=\"secondary\" *ngIf=\"isRevoked\">{{ \"revoked\" | i18n }}</span>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteUserDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"emails\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"emails\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Emails\"\n              [(ngModel)]=\"emails\"\n              required\n              appAutoFocus\n            />\n            <small class=\"text-muted\">{{ \"inviteMultipleEmailDesc\" | i18n: \"20\" }}</small>\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userType\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/user-types-access-control/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeUser\"\n            [value]=\"organizationUserType.User\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeUser\">\n            {{ \"user\" | i18n }}\n            <small>{{ \"userDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeManager\"\n            [value]=\"organizationUserType.Manager\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeManager\">\n            {{ \"manager\" | i18n }}\n            <small>{{ \"managerDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeAdmin\"\n            [value]=\"organizationUserType.Admin\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeAdmin\">\n            {{ \"admin\" | i18n }}\n            <small>{{ \"adminDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeOwner\"\n            [value]=\"organizationUserType.Owner\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeOwner\">\n            {{ \"owner\" | i18n }}\n            <small>{{ \"ownerDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeCustom\"\n            [value]=\"organizationUserType.Custom\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeCustom\">\n            {{ \"custom\" | i18n }}\n            <small>{{ \"customDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <ng-container *ngIf=\"customUserTypeSelected\">\n          <h3 class=\"mt-4 d-flex\">\n            {{ \"permissions\" | i18n }}\n          </h3>\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <div class=\"mb-3\">\n                <label class=\"font-weight-bold mb-0\">{{ \"managerPermissions\" | i18n }}</label>\n                <hr class=\"my-0 mr-2\" />\n                <app-nested-checkbox\n                  parentId=\"manageAssignedCollections\"\n                  [checkboxes]=\"manageAssignedCollectionsCheckboxes\"\n                >\n                </app-nested-checkbox>\n              </div>\n            </div>\n            <div class=\"col-6\">\n              <div class=\"mb-3\">\n                <label class=\"font-weight-bold mb-0\">{{ \"adminPermissions\" | i18n }}</label>\n                <hr class=\"my-0 mr-2\" />\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessEventLogs\"\n                      id=\"accessEventLogs\"\n                      [(ngModel)]=\"permissions.accessEventLogs\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessEventLogs\">\n                      {{ \"accessEventLogs\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessImportExport\"\n                      id=\"accessImportExport\"\n                      [(ngModel)]=\"permissions.accessImportExport\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessImportExport\">\n                      {{ \"accessImportExport\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"accessReports\"\n                      id=\"accessReports\"\n                      [(ngModel)]=\"permissions.accessReports\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"accessReports\">\n                      {{ \"accessReports\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <app-nested-checkbox\n                  parentId=\"manageAllCollections\"\n                  [checkboxes]=\"manageAllCollectionsCheckboxes\"\n                >\n                </app-nested-checkbox>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageGroups\"\n                      id=\"manageGroups\"\n                      [(ngModel)]=\"permissions.manageGroups\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageGroups\">\n                      {{ \"manageGroups\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageSso\"\n                      id=\"managePolicies\"\n                      [(ngModel)]=\"permissions.manageSso\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageSso\">\n                      {{ \"manageSso\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"managePolicies\"\n                      id=\"managePolicies\"\n                      [(ngModel)]=\"permissions.managePolicies\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"managePolicies\">\n                      {{ \"managePolicies\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageUsers\"\n                      id=\"manageUsers\"\n                      [(ngModel)]=\"permissions.manageUsers\"\n                      (change)=\"handleDependentPermissions()\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageUsers\">\n                      {{ \"manageUsers\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                  <div class=\"form-check mt-1 form-check-block\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      name=\"manageResetPassword\"\n                      id=\"manageResetPassword\"\n                      [(ngModel)]=\"permissions.manageResetPassword\"\n                      (change)=\"handleDependentPermissions()\"\n                    />\n                    <label class=\"form-check-label font-weight-normal\" for=\"manageResetPassword\">\n                      {{ \"manageResetPassword\" | i18n }}\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-4 d-flex\">\n          <div class=\"mb-3\">\n            {{ \"accessControl\" | i18n }}\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/user-types-access-control/#access-control\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </h3>\n        <div class=\"form-group\" [ngClass]=\"{ 'mb-0': access !== 'selected' }\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessAll\"\n              value=\"all\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessAll\">\n              {{ \"userAccessAllItems\" | i18n }}\n            </label>\n          </div>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"radio\"\n              name=\"access\"\n              id=\"accessSelected\"\n              value=\"selected\"\n              [(ngModel)]=\"access\"\n            />\n            <label class=\"form-check-label\" for=\"accessSelected\">\n              {{ \"userAccessSelectedCollections\" | i18n }}\n            </label>\n          </div>\n        </div>\n        <ng-container *ngIf=\"access === 'selected'\">\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"hidePasswords\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\">{{ \"readOnly\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\">\n                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td (click)=\"check(c)\">\n                  {{ c.name }}\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.hidePasswords\"\n                    name=\"Collection[{{ i }}].HidePasswords\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n                <td class=\"text-center\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.readOnly\"\n                    name=\"Collection[{{ i }}].ReadOnly\"\n                    [disabled]=\"!c.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            type=\"button\"\n            (click)=\"restore()\"\n            class=\"btn btn-outline-secondary\"\n            *ngIf=\"editMode && isRevoked\"\n            [disabled]=\"form.loading\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"restoreAccess\" | i18n }}</span>\n          </button>\n          <button\n            type=\"button\"\n            (click)=\"revoke()\"\n            class=\"btn btn-outline-secondary\"\n            *ngIf=\"editMode && !isRevoked\"\n            [disabled]=\"form.loading\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"revokeAccess\" | i18n }}</span>\n          </button>\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { PermissionsApi } from \"@bitwarden/common/models/api/permissions.api\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { OrganizationUserInviteRequest } from \"@bitwarden/common/models/request/organization-user-invite.request\";\nimport { OrganizationUserUpdateRequest } from \"@bitwarden/common/models/request/organization-user-update.request\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collection.response\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Component({\n  selector: \"app-user-add-edit\",\n  templateUrl: \"user-add-edit.component.html\",\n})\nexport class UserAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() organizationUserId: string;\n  @Input() organizationId: string;\n  @Input() usesKeyConnector = false;\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n  @Output() onRevokedUser = new EventEmitter();\n  @Output() onRestoredUser = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  isRevoked = false;\n  title: string;\n  emails: string;\n  type: OrganizationUserType = OrganizationUserType.User;\n  permissions = new PermissionsApi();\n  showCustom = false;\n  access: \"all\" | \"selected\" = \"selected\";\n  collections: CollectionView[] = [];\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  organizationUserType = OrganizationUserType;\n\n  manageAllCollectionsCheckboxes = [\n    {\n      id: \"createNewCollections\",\n      get: () => this.permissions.createNewCollections,\n      set: (v: boolean) => (this.permissions.createNewCollections = v),\n    },\n    {\n      id: \"editAnyCollection\",\n      get: () => this.permissions.editAnyCollection,\n      set: (v: boolean) => (this.permissions.editAnyCollection = v),\n    },\n    {\n      id: \"deleteAnyCollection\",\n      get: () => this.permissions.deleteAnyCollection,\n      set: (v: boolean) => (this.permissions.deleteAnyCollection = v),\n    },\n  ];\n\n  manageAssignedCollectionsCheckboxes = [\n    {\n      id: \"editAssignedCollections\",\n      get: () => this.permissions.editAssignedCollections,\n      set: (v: boolean) => (this.permissions.editAssignedCollections = v),\n    },\n    {\n      id: \"deleteAssignedCollections\",\n      get: () => this.permissions.deleteAssignedCollections,\n      set: (v: boolean) => (this.permissions.deleteAssignedCollections = v),\n    },\n  ];\n\n  get customUserTypeSelected(): boolean {\n    return this.type === OrganizationUserType.Custom;\n  }\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.organizationUserId != null;\n    await this.loadCollections();\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editUser\");\n      try {\n        const user = await this.apiService.getOrganizationUser(\n          this.organizationId,\n          this.organizationUserId\n        );\n        this.access = user.accessAll ? \"all\" : \"selected\";\n        this.type = user.type;\n        this.isRevoked = user.status === OrganizationUserStatusType.Revoked;\n        if (user.type === OrganizationUserType.Custom) {\n          this.permissions = user.permissions;\n        }\n        if (user.collections != null && this.collections != null) {\n          user.collections.forEach((s) => {\n            const collection = this.collections.filter((c) => c.id === s.id);\n            if (collection != null && collection.length > 0) {\n              (collection[0] as any).checked = true;\n              collection[0].readOnly = s.readOnly;\n              collection[0].hidePasswords = s.hidePasswords;\n            }\n          });\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteUser\");\n    }\n\n    this.loading = false;\n  }\n\n  async loadCollections() {\n    const response = await this.apiService.getCollections(this.organizationId);\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    this.collections = await this.collectionService.decryptMany(collections);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n    if (!(c as any).checked) {\n      c.readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n\n  setRequestPermissions(p: PermissionsApi, clearPermissions: boolean) {\n    Object.assign(p, clearPermissions ? new PermissionsApi() : this.permissions);\n    return p;\n  }\n\n  handleDependentPermissions() {\n    // Manage Password Reset must have Manage Users enabled\n    if (this.permissions.manageResetPassword && !this.permissions.manageUsers) {\n      this.permissions.manageUsers = true;\n      (document.getElementById(\"manageUsers\") as HTMLInputElement).checked = true;\n      this.platformUtilsService.showToast(\n        \"info\",\n        null,\n        this.i18nService.t(\"resetPasswordManageUsers\")\n      );\n    }\n  }\n\n  async submit() {\n    let collections: SelectionReadOnlyRequest[] = null;\n    if (this.access !== \"all\") {\n      collections = this.collections\n        .filter((c) => (c as any).checked)\n        .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n    }\n\n    try {\n      if (this.editMode) {\n        const request = new OrganizationUserUpdateRequest();\n        request.accessAll = this.access === \"all\";\n        request.type = this.type;\n        request.collections = collections;\n        request.permissions = this.setRequestPermissions(\n          request.permissions ?? new PermissionsApi(),\n          request.type !== OrganizationUserType.Custom\n        );\n        this.formPromise = this.apiService.putOrganizationUser(\n          this.organizationId,\n          this.organizationUserId,\n          request\n        );\n      } else {\n        const request = new OrganizationUserInviteRequest();\n        request.emails = [...new Set(this.emails.trim().split(/\\s*,\\s*/))];\n        request.accessAll = this.access === \"all\";\n        request.type = this.type;\n        request.permissions = this.setRequestPermissions(\n          request.permissions ?? new PermissionsApi(),\n          request.type !== OrganizationUserType.Custom\n        );\n        request.collections = collections;\n        this.formPromise = this.apiService.postOrganizationUserInvite(this.organizationId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const message = this.usesKeyConnector\n      ? \"removeUserConfirmationKeyConnector\"\n      : \"removeOrgUserConfirmation\";\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(message),\n      this.i18nService.t(\"removeUserIdAccess\", this.name),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.name)\n      );\n      this.onDeletedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async revoke() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"revokeUserConfirmation\"),\n      this.i18nService.t(\"revokeUserId\", this.name),\n      this.i18nService.t(\"revokeAccess\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.formPromise = this.apiService.revokeOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"revokedUserId\", this.name)\n      );\n      this.isRevoked = true;\n      this.onRevokedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async restore() {\n    if (!this.editMode) {\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.restoreOrganizationUser(\n        this.organizationId,\n        this.organizationUserId\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"restoredUserId\", this.name)\n      );\n      this.isRevoked = false;\n      this.onRestoredUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export class OrganizationUserUpdateGroupsRequest {\n  groupIds: string[] = [];\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"groupAccessTitle\">\n          {{ \"groupAccess\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <p>{{ \"groupAccessUserDesc\" | i18n }}</p>\n        <div *ngIf=\"!groups || !groups.length\">\n          {{ \"noGroupsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n          <tbody>\n            <tr *ngFor=\"let g of groups; let i = index\">\n              <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"g.checked\"\n                  name=\"Groups[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td (click)=\"check(g)\">\n                {{ g.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { OrganizationUserUpdateGroupsRequest } from \"@bitwarden/common/models/request/organization-user-update-groups.request\";\nimport { GroupResponse } from \"@bitwarden/common/models/response/group.response\";\n\n@Component({\n  selector: \"app-user-groups\",\n  templateUrl: \"user-groups.component.html\",\n})\nexport class UserGroupsComponent implements OnInit {\n  @Input() name: string;\n  @Input() organizationUserId: string;\n  @Input() organizationId: string;\n  @Output() onSavedUser = new EventEmitter();\n\n  loading = true;\n  groups: GroupResponse[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const groupsResponse = await this.apiService.getGroups(this.organizationId);\n    const groups = groupsResponse.data.map((r) => r);\n    groups.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.groups = groups;\n\n    try {\n      const userGroups = await this.apiService.getOrganizationUserGroups(\n        this.organizationId,\n        this.organizationUserId\n      );\n      if (userGroups != null && this.groups != null) {\n        userGroups.forEach((ug) => {\n          const group = this.groups.filter((g) => g.id === ug);\n          if (group != null && group.length > 0) {\n            (group[0] as any).checked = true;\n          }\n        });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.loading = false;\n  }\n\n  check(g: GroupResponse, select?: boolean) {\n    (g as any).checked = select == null ? !(g as any).checked : select;\n    if (!(g as any).checked) {\n      (g as any).readOnly = false;\n    }\n  }\n\n  selectAll(select: boolean) {\n    this.groups.forEach((g) => this.check(g, select));\n  }\n\n  async submit() {\n    const request = new OrganizationUserUpdateGroupsRequest();\n    request.groupIds = this.groups.filter((g) => (g as any).checked).map((g) => g.id);\n\n    try {\n      this.formPromise = this.apiService.putOrganizationUserGroups(\n        this.organizationId,\n        this.organizationUserId,\n        request\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedGroupsForUser\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"people\" | i18n }}</h1>\n  <div class=\"mt-2 d-flex\">\n    <div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == null }\"\n        (click)=\"filter(null)\"\n      >\n        {{ \"all\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"allCount\">{{ allCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Invited }\"\n        (click)=\"filter(userStatusType.Invited)\"\n      >\n        {{ \"invited\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"invitedCount\">{{ invitedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Accepted }\"\n        (click)=\"filter(userStatusType.Accepted)\"\n      >\n        {{ \"accepted\" | i18n }}\n        <span bitBadge badgeType=\"warning\" *ngIf=\"acceptedCount\">{{ acceptedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Revoked }\"\n        (click)=\"filter(userStatusType.Revoked)\"\n      >\n        {{ \"revoked\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"revokedCount\">{{ revokedCount }}</span>\n      </button>\n    </div>\n    <div class=\"ml-3\">\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <div class=\"dropdown ml-3\" appListDropdown>\n      <button\n        class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"bulkActionsButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        appA11yTitle=\"{{ 'options' | i18n }}\"\n      >\n        <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\">\n          <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n          {{ \"reinviteSelected\" | i18n }}\n        </button>\n        <button\n          class=\"dropdown-item text-success\"\n          appStopClick\n          (click)=\"bulkConfirm()\"\n          *ngIf=\"showBulkConfirmUsers\"\n        >\n          <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n          {{ \"confirmSelected\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkRestore()\">\n          <i class=\"bwi bwi-fw bwi-plus-circle\" aria-hidden=\"true\"></i>\n          {{ \"restoreAccess\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkRevoke()\">\n          <i class=\"bwi bwi-fw bwi-minus-circle\" aria-hidden=\"true\"></i>\n          {{ \"revokeAccess\" | i18n }}\n        </button>\n        <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\">\n          <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n          {{ \"remove\" | i18n }}\n        </button>\n        <div class=\"dropdown-divider\"></div>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n          <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n          <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"inviteUser\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedUsers : (users | search: searchText:'name':'email':'id')) as searchedUsers\n  \"\n>\n  <p *ngIf=\"!searchedUsers.length\">{{ \"noUsersInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedUsers.length\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'confirmUsers' | i18n }}\"\n      icon=\"bwi bwi-check-circle\"\n      *ngIf=\"showConfirmUsers\"\n    >\n      {{ \"usersNeedConfirmed\" | i18n }}\n    </app-callout>\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let u of searchedUsers\">\n          <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\">\n            <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp />\n          </td>\n          <td width=\"30\">\n            <bit-avatar [text]=\"u | userName\" [id]=\"u.userId\" size=\"small\"></bit-avatar>\n          </td>\n          <td>\n            <a href=\"#\" appStopClick (click)=\"edit(u)\">{{ u.email }}</a>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{\n              \"invited\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{\n              \"accepted\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Revoked\">{{\n              \"revoked\" | i18n\n            }}</span>\n            <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n          </td>\n          <td>\n            <ng-container *ngIf=\"u.twoFactorEnabled\">\n              <i\n                class=\"bwi bwi-lock\"\n                title=\"{{ 'userUsingTwoStep' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"userUsingTwoStep\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"showEnrolledStatus(u)\">\n              <i\n                class=\"bwi bwi-key\"\n                title=\"{{ 'enrolledPasswordReset' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"enrolledPasswordReset\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td>\n            <span *ngIf=\"u.type === userType.Owner\">{{ \"owner\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Admin\">{{ \"admin\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Manager\">{{ \"manager\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.User\">{{ \"user\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Custom\">{{ \"custom\" | i18n }}</span>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"reinvite(u)\"\n                  *ngIf=\"u.status === userStatusType.Invited\"\n                >\n                  <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n                  {{ \"resendInvitation\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item text-success\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"confirm(u)\"\n                  *ngIf=\"u.status === userStatusType.Accepted\"\n                >\n                  <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n                  {{ \"confirm\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"groups(u)\"\n                  *ngIf=\"accessGroups\"\n                >\n                  <i class=\"bwi bwi-fw bwi-sitemap\" aria-hidden=\"true\"></i>\n                  {{ \"groups\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"events(u)\"\n                  *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"\n                >\n                  <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                  {{ \"eventLogs\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"resetPassword(u)\"\n                  *ngIf=\"allowResetPassword(u)\"\n                >\n                  <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n                  {{ \"resetPassword\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"restore(u)\"\n                  *ngIf=\"u.status === userStatusType.Revoked\"\n                >\n                  <i class=\"bwi bwi-fw bwi-plus-circle\" aria-hidden=\"true\"></i>\n                  {{ \"restoreAccess\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"revoke(u)\"\n                  *ngIf=\"u.status !== userStatusType.Revoked\"\n                >\n                  <i class=\"bwi bwi-fw bwi-minus-circle\" aria-hidden=\"true\"></i>\n                  {{ \"revokeAccess\" | i18n }}\n                </a>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #groupsTemplate></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n<ng-template #resetPasswordTemplate></ng-template>\n<ng-template #bulkStatusTemplate></ng-template>\n<ng-template #bulkConfirmTemplate></ng-template>\n<ng-template #bulkRemoveTemplate></ng-template>\n","import { Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { combineLatest, concatMap, Subject, takeUntil } from \"rxjs\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organization-keys.request\";\nimport { OrganizationUserBulkRequest } from \"@bitwarden/common/models/request/organization-user-bulk.request\";\nimport { OrganizationUserConfirmRequest } from \"@bitwarden/common/models/request/organization-user-confirm.request\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { OrganizationUserBulkResponse } from \"@bitwarden/common/models/response/organization-user-bulk.response\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/models/response/organization-user.response\";\n\nimport { BasePeopleComponent } from \"../../common/base.people.component\";\n\nimport { BulkConfirmComponent } from \"./bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./bulk/bulk-remove.component\";\nimport { BulkRestoreRevokeComponent } from \"./bulk/bulk-restore-revoke.component\";\nimport { BulkStatusComponent } from \"./bulk/bulk-status.component\";\nimport { EntityEventsComponent } from \"./entity-events.component\";\nimport { ResetPasswordComponent } from \"./reset-password.component\";\nimport { UserAddEditComponent } from \"./user-add-edit.component\";\nimport { UserGroupsComponent } from \"./user-groups.component\";\n\n@Component({\n  selector: \"app-org-people\",\n  templateUrl: \"people.component.html\",\n})\nexport class PeopleComponent\n  extends BasePeopleComponent<OrganizationUserUserDetailsResponse>\n  implements OnInit, OnDestroy\n{\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"groupsTemplate\", { read: ViewContainerRef, static: true })\n  groupsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n  @ViewChild(\"resetPasswordTemplate\", { read: ViewContainerRef, static: true })\n  resetPasswordModalRef: ViewContainerRef;\n  @ViewChild(\"bulkStatusTemplate\", { read: ViewContainerRef, static: true })\n  bulkStatusModalRef: ViewContainerRef;\n  @ViewChild(\"bulkConfirmTemplate\", { read: ViewContainerRef, static: true })\n  bulkConfirmModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRemoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkRemoveModalRef: ViewContainerRef;\n\n  userType = OrganizationUserType;\n  userStatusType = OrganizationUserStatusType;\n\n  organizationId: string;\n  status: OrganizationUserStatusType = null;\n  accessEvents = false;\n  accessGroups = false;\n  canResetPassword = false; // User permission (admin/custom)\n  orgUseResetPassword = false; // Org plan ability\n  orgHasKeys = false; // Org public/private keys\n  orgResetPasswordPolicyEnabled = false;\n  callingUserType: OrganizationUserType = null;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    i18nService: I18nService,\n    modalService: ModalService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    searchService: SearchService,\n    validationService: ValidationService,\n    private policyService: PolicyService,\n    logService: LogService,\n    searchPipe: SearchPipe,\n    userNamePipe: UserNamePipe,\n    private syncService: SyncService,\n    stateService: StateService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      apiService,\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      validationService,\n      modalService,\n      logService,\n      searchPipe,\n      userNamePipe,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    combineLatest([this.route.params, this.route.queryParams, this.policyService.policies$])\n      .pipe(\n        concatMap(async ([params, qParams, policies]) => {\n          this.organizationId = params.organizationId;\n          const organization = await this.organizationService.get(this.organizationId);\n          this.accessEvents = organization.useEvents;\n          this.accessGroups = organization.useGroups;\n          this.canResetPassword = organization.canManageUsersPassword;\n          this.orgUseResetPassword = organization.useResetPassword;\n          this.callingUserType = organization.type;\n          this.orgHasKeys = organization.hasPublicAndPrivateKeys;\n\n          // Backfill pub/priv key if necessary\n          if (this.canResetPassword && !this.orgHasKeys) {\n            const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n            const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n            const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n            const response = await this.organizationApiService.updateKeys(\n              this.organizationId,\n              request\n            );\n            if (response != null) {\n              this.orgHasKeys = response.publicKey != null && response.privateKey != null;\n              await this.syncService.fullSync(true); // Replace oganizations with new data\n            } else {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n          }\n\n          const resetPasswordPolicy = policies\n            .filter((policy) => policy.type === PolicyType.ResetPassword)\n            .find((p) => p.organizationId === this.organizationId);\n          this.orgResetPasswordPolicyEnabled = resetPasswordPolicy?.enabled;\n\n          await this.load();\n\n          this.searchText = qParams.search;\n          if (qParams.viewEvents != null) {\n            const user = this.users.filter((u) => u.id === qParams.viewEvents);\n            if (user.length > 0 && user[0].status === OrganizationUserStatusType.Confirmed) {\n              this.events(user[0]);\n            }\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load() {\n    super.load();\n    await super.load();\n  }\n\n  getUsers(): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    return this.apiService.getOrganizationUsers(this.organizationId);\n  }\n\n  deleteUser(id: string): Promise<void> {\n    return this.apiService.deleteOrganizationUser(this.organizationId, id);\n  }\n\n  revokeUser(id: string): Promise<void> {\n    return this.apiService.revokeOrganizationUser(this.organizationId, id);\n  }\n\n  restoreUser(id: string): Promise<void> {\n    return this.apiService.restoreOrganizationUser(this.organizationId, id);\n  }\n\n  reinviteUser(id: string): Promise<void> {\n    return this.apiService.postOrganizationUserReinvite(this.organizationId, id);\n  }\n\n  async confirmUser(\n    user: OrganizationUserUserDetailsResponse,\n    publicKey: Uint8Array\n  ): Promise<void> {\n    const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n    const key = await this.cryptoService.rsaEncrypt(orgKey.key, publicKey.buffer);\n    const request = new OrganizationUserConfirmRequest();\n    request.key = key.encryptedString;\n    await this.apiService.postOrganizationUserConfirm(this.organizationId, user.id, request);\n  }\n\n  allowResetPassword(orgUser: OrganizationUserUserDetailsResponse): boolean {\n    // Hierarchy check\n    let callingUserHasPermission = false;\n\n    switch (this.callingUserType) {\n      case OrganizationUserType.Owner:\n        callingUserHasPermission = true;\n        break;\n      case OrganizationUserType.Admin:\n        callingUserHasPermission = orgUser.type !== OrganizationUserType.Owner;\n        break;\n      case OrganizationUserType.Custom:\n        callingUserHasPermission =\n          orgUser.type !== OrganizationUserType.Owner &&\n          orgUser.type !== OrganizationUserType.Admin;\n        break;\n    }\n\n    // Final\n    return (\n      this.canResetPassword &&\n      callingUserHasPermission &&\n      this.orgUseResetPassword &&\n      this.orgHasKeys &&\n      orgUser.resetPasswordEnrolled &&\n      this.orgResetPasswordPolicyEnabled &&\n      orgUser.status === OrganizationUserStatusType.Confirmed\n    );\n  }\n\n  showEnrolledStatus(orgUser: OrganizationUserUserDetailsResponse): boolean {\n    return (\n      this.orgUseResetPassword &&\n      orgUser.resetPasswordEnrolled &&\n      this.orgResetPasswordPolicyEnabled\n    );\n  }\n\n  async edit(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.organizationId = this.organizationId;\n        comp.organizationUserId = user != null ? user.id : null;\n        comp.usesKeyConnector = user?.usesKeyConnector;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedUser.subscribe(() => {\n          modal.close();\n          this.removeUser(user);\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onRevokedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onRestoredUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n\n  async groups(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserGroupsComponent,\n      this.groupsModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.organizationId = this.organizationId;\n        comp.organizationUserId = user != null ? user.id : null;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async bulkRemove() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRemoveComponent,\n      this.bulkRemoveModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkRevoke() {\n    await this.bulkRevokeOrRestore(true);\n  }\n\n  async bulkRestore() {\n    await this.bulkRevokeOrRestore(false);\n  }\n\n  async bulkRevokeOrRestore(isRevoking: boolean) {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const ref = this.modalService.open(BulkRestoreRevokeComponent, {\n      allowMultipleModals: true,\n      data: {\n        organizationId: this.organizationId,\n        users: this.getCheckedUsers(),\n        isRevoking: isRevoking,\n      },\n    });\n\n    await ref.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkReinvite() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const users = this.getCheckedUsers();\n    const filteredUsers = users.filter((u) => u.status === OrganizationUserStatusType.Invited);\n\n    if (filteredUsers.length <= 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"noSelectedUsersApplicable\")\n      );\n      return;\n    }\n\n    try {\n      const request = new OrganizationUserBulkRequest(filteredUsers.map((user) => user.id));\n      const response = this.apiService.postManyOrganizationUserReinvite(\n        this.organizationId,\n        request\n      );\n      this.showBulkStatus(\n        users,\n        filteredUsers,\n        response,\n        this.i18nService.t(\"bulkReinviteMessage\")\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkConfirm() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkConfirmComponent,\n      this.bulkConfirmModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async events(user: OrganizationUserUserDetailsResponse) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = this.userNamePipe.transform(user);\n      comp.organizationId = this.organizationId;\n      comp.entityId = user.id;\n      comp.showUser = false;\n      comp.entity = \"user\";\n    });\n  }\n\n  async resetPassword(user: OrganizationUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      ResetPasswordComponent,\n      this.resetPasswordModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.email = user != null ? user.email : null;\n        comp.organizationId = this.organizationId;\n        comp.id = user != null ? user.id : null;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onPasswordReset.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n\n  protected async removeUserConfirmationDialog(user: OrganizationUserUserDetailsResponse) {\n    const warningMessage = user.usesKeyConnector\n      ? this.i18nService.t(\"removeUserConfirmationKeyConnector\")\n      : this.i18nService.t(\"removeOrgUserConfirmation\");\n\n    return this.platformUtilsService.showDialog(\n      warningMessage,\n      this.i18nService.t(\"removeUserIdAccess\", this.userNamePipe.transform(user)),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n  }\n\n  private async showBulkStatus(\n    users: OrganizationUserUserDetailsResponse[],\n    filteredUsers: OrganizationUserUserDetailsResponse[],\n    request: Promise<ListResponse<OrganizationUserBulkResponse>>,\n    successfullMessage: string\n  ) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      BulkStatusComponent,\n      this.bulkStatusModalRef,\n      (comp) => {\n        comp.loading = true;\n      }\n    );\n\n    // Workaround to handle closing the modal shortly after it has been opened\n    let close = false;\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    modal.onShown.subscribe(() => {\n      if (close) {\n        modal.close();\n      }\n    });\n\n    try {\n      const response = await request;\n\n      if (modal) {\n        const keyedErrors: any = response.data\n          .filter((r) => r.error !== \"\")\n          .reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n        const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n        childComponent.users = users.map((user) => {\n          let message = keyedErrors[user.id] ?? successfullMessage;\n          // eslint-disable-next-line\n          if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n            message = this.i18nService.t(\"bulkFilteredMessage\");\n          }\n\n          return {\n            user: user,\n            error: keyedErrors.hasOwnProperty(user.id), // eslint-disable-line\n            message: message,\n          };\n        });\n        childComponent.loading = false;\n      }\n    } catch {\n      close = true;\n      modal.close();\n    }\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nexport class PolicyRequest {\n  type: PolicyType;\n  enabled: boolean;\n  data: any;\n}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\nexport abstract class BasePolicy {\n  abstract name: string;\n  abstract description: string;\n  abstract type: PolicyType;\n  abstract component: any;\n\n  display(organization: Organization) {\n    return true;\n  }\n}\n\n@Directive()\nexport abstract class BasePolicyComponent implements OnInit {\n  @Input() policyResponse: PolicyResponse;\n  @Input() policy: BasePolicy;\n\n  enabled = new UntypedFormControl(false);\n  data: UntypedFormGroup = null;\n\n  ngOnInit(): void {\n    this.enabled.setValue(this.policyResponse.enabled);\n\n    if (this.policyResponse.data != null) {\n      this.loadData();\n    }\n  }\n\n  loadData() {\n    this.data.patchValue(this.policyResponse.data ?? {});\n  }\n\n  buildRequestData() {\n    if (this.data != null) {\n      return this.data.value;\n    }\n\n    return null;\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>) {\n    const request = new PolicyRequest();\n    request.enabled = this.enabled.value;\n    request.type = this.policy.type;\n    request.data = this.buildRequestData();\n\n    return Promise.resolve(request);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"policiesEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"policiesEditTitle\">\n          {{ \"editPolicy\" | i18n }} - {{ policy.name | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n\n      <div class=\"modal-body\">\n        <div class=\"modal-body\" *ngIf=\"loading\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div [hidden]=\"loading\">\n          <p>{{ policy.description | i18n }}</p>\n          <ng-template #policyForm></ng-template>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\nimport { BasePolicy, BasePolicyComponent } from \"../policies/base-policy.component\";\n\n@Component({\n  selector: \"app-policy-edit\",\n  templateUrl: \"policy-edit.component.html\",\n})\nexport class PolicyEditComponent {\n  @Input() policy: BasePolicy;\n  @Input() organizationId: string;\n  @Input() policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n  @Output() onSavedPolicy = new EventEmitter();\n\n  @ViewChild(\"policyForm\", { read: ViewContainerRef, static: true })\n  policyFormRef: ViewContainerRef;\n\n  policyType = PolicyType;\n  loading = true;\n  enabled = false;\n  formPromise: Promise<any>;\n  defaultTypes: any[];\n  policyComponent: BasePolicyComponent;\n\n  private policyResponse: PolicyResponse;\n\n  constructor(\n    private policyApiService: PolicyApiServiceAbstraction,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private cdr: ChangeDetectorRef,\n    private logService: LogService\n  ) {}\n\n  async ngAfterViewInit() {\n    await this.load();\n    this.loading = false;\n\n    const factory = this.componentFactoryResolver.resolveComponentFactory(this.policy.component);\n    this.policyComponent = this.policyFormRef.createComponent(factory)\n      .instance as BasePolicyComponent;\n    this.policyComponent.policy = this.policy;\n    this.policyComponent.policyResponse = this.policyResponse;\n\n    this.cdr.detectChanges();\n  }\n\n  async load() {\n    try {\n      this.policyResponse = await this.policyApiService.getPolicy(\n        this.organizationId,\n        this.policy.type\n      );\n    } catch (e) {\n      if (e.statusCode === 404) {\n        this.policyResponse = new PolicyResponse({ Enabled: false });\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  async submit() {\n    let request: PolicyRequest;\n    try {\n      request = await this.policyComponent.buildRequest(this.policiesEnabledMap);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, e.message);\n      return;\n    }\n\n    try {\n      this.formPromise = this.policyApiService.putPolicy(\n        this.organizationId,\n        this.policy.type,\n        request\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedPolicyId\", this.i18nService.t(this.policy.name))\n      );\n      this.onSavedPolicy.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"policies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n  <tbody>\n    <tr *ngFor=\"let p of policies\">\n      <td *ngIf=\"p.display(organization)\">\n        <a href=\"#\" appStopClick (click)=\"edit(p)\">{{ p.name | i18n }}</a>\n        <span bitBadge badgeType=\"success\" *ngIf=\"policiesEnabledMap.get(p.type)\">{{\n          \"on\" | i18n\n        }}</span>\n        <small class=\"text-muted d-block\">{{ p.description | i18n }}</small>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<ng-template #editTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\nimport { PolicyListService } from \"../../core\";\nimport { BasePolicy } from \"../policies/base-policy.component\";\n\nimport { PolicyEditComponent } from \"./policy-edit.component\";\n\n@Component({\n  selector: \"app-org-policies\",\n  templateUrl: \"policies.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PoliciesComponent implements OnInit {\n  @ViewChild(\"editTemplate\", { read: ViewContainerRef, static: true })\n  editModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  policies: BasePolicy[];\n  organization: Organization;\n\n  private orgPolicies: PolicyResponse[];\n  private policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n\n  constructor(\n    private route: ActivatedRoute,\n    private modalService: ModalService,\n    private organizationService: OrganizationService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyListService: PolicyListService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.organization = await this.organizationService.get(this.organizationId);\n      this.policies = this.policyListService.getPolicies();\n\n      await this.load();\n\n      // Handle policies component launch from Event message\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        if (qParams.policyId != null) {\n          const policyIdFromEvents: string = qParams.policyId;\n          for (const orgPolicy of this.orgPolicies) {\n            if (orgPolicy.id === policyIdFromEvents) {\n              for (let i = 0; i < this.policies.length; i++) {\n                if (this.policies[i].type === orgPolicy.type) {\n                  this.edit(this.policies[i]);\n                  break;\n                }\n              }\n              break;\n            }\n          }\n        }\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.policyApiService.getPolicies(this.organizationId);\n    this.orgPolicies = response.data != null && response.data.length > 0 ? response.data : [];\n    this.orgPolicies.forEach((op) => {\n      this.policiesEnabledMap.set(op.type, op.enabled);\n    });\n\n    this.loading = false;\n  }\n\n  async edit(policy: BasePolicy) {\n    const [modal] = await this.modalService.openViewRef(\n      PolicyEditComponent,\n      this.editModalRef,\n      (comp) => {\n        comp.policy = policy;\n        comp.organizationId = this.organizationId;\n        comp.policiesEnabledMap = this.policiesEnabledMap;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedPolicy.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n}\n","import { OrganizationKeysRequest } from \"./organization-keys.request\";\n\nexport class OrganizationUpdateRequest {\n  name: string;\n  identifier: string;\n  businessName: string;\n  billingEmail: string;\n  keys: OrganizationKeysRequest;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"apiKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"apiKeyTitle\">{{ apiKeyTitle | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ apiKeyDescription | i18n }}</p>\n        <app-user-verification\n          [(ngModel)]=\"masterPassword\"\n          ngDefaultControl\n          name=\"secret\"\n          *ngIf=\"!clientSecret\"\n        >\n        </app-user-verification>\n\n        <app-callout type=\"warning\" *ngIf=\"clientSecret\">{{ apiKeyWarning | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          title=\"{{ 'oauth2ClientCredentials' | i18n }}\"\n          icon=\"bwi bwi-key\"\n          *ngIf=\"clientSecret\"\n        >\n          <p class=\"mb-1\">\n            <strong>client_id:</strong><br />\n            <code>{{ clientId }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>client_secret:</strong><br />\n            <code>{{ clientSecret }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>scope:</strong><br />\n            <code>{{ scope }}</code>\n          </p>\n          <p class=\"mb-0\">\n            <strong>grant_type:</strong><br />\n            <code>{{ grantType }}</code>\n          </p>\n        </app-callout>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!clientSecret\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (isRotation ? \"rotateApiKey\" : \"viewApiKey\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/api-key.response\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-api-key\",\n  templateUrl: \"api-key.component.html\",\n})\nexport class ApiKeyComponent {\n  keyType: string;\n  isRotation: boolean;\n  postKey: (entityId: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  entityId: string;\n  scope: string;\n  grantType: string;\n  apiKeyTitle: string;\n  apiKeyWarning: string;\n  apiKeyDescription: string;\n\n  masterPassword: Verification;\n  formPromise: Promise<ApiKeyResponse>;\n  clientId: string;\n  clientSecret: string;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.postKey(this.entityId, request));\n      const response = await this.formPromise;\n      this.clientSecret = response.apiKey;\n      this.clientId = `${this.keyType}.${this.entityId}`;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-purge-vault\",\n  templateUrl: \"purge-vault.component.html\",\n})\nexport class PurgeVaultComponent {\n  @Input() organizationId?: string = null;\n\n  masterPassword: Verification;\n  formPromise: Promise<unknown>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private router: Router,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postPurgeCiphers(request, this.organizationId));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"vaultPurged\"));\n      if (this.organizationId != null) {\n        this.router.navigate([\"organizations\", this.organizationId, \"vault\"]);\n      } else {\n        this.router.navigate([\"vault\"]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"purgeVaultTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"purgeVaultTitle\">{{ \"purgeVault\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ (organizationId ? \"purgeOrgVaultDesc\" : \"purgeVaultDesc\") | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"purgeVaultWarning\" | i18n }}</app-callout>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"purgeVault\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteOrganizationTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      *ngIf=\"loaded\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"deleteOrganizationTitle\">{{ \"deleteOrganization\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{\n          \"deletingOrganizationIsPermanentWarning\" | i18n: organizationName\n        }}</app-callout>\n        <p id=\"organizationDeleteDescription\">\n          <ng-container\n            *ngIf=\"\n              deleteOrganizationRequestType === 'InvalidFamiliesForEnterprise';\n              else regularDelete\n            \"\n          >\n            {{ \"orgCreatedSponsorshipInvalid\" | i18n }}\n          </ng-container>\n          <ng-template #regularDelete>\n            <ng-container *ngIf=\"organizationContentSummary.totalItemCount > 0\">\n              {{ \"deletingOrganizationContentWarning\" | i18n: organizationName }}\n              <ul>\n                <li *ngFor=\"let type of organizationContentSummary.itemCountByType\">\n                  {{ type.count }} {{ type.localizationKey | i18n }}\n                </li>\n              </ul>\n              {{ \"deletingOrganizationActiveUserAccountsWarning\" | i18n }}\n            </ng-container>\n          </ng-template>\n        </p>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteOrganization\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\nclass CountBasedLocalizationKey {\n  singular: string;\n  plural: string;\n\n  getKey(count: number) {\n    return count == 1 ? this.singular : this.plural;\n  }\n\n  constructor(singular: string, plural: string) {\n    this.singular = singular;\n    this.plural = plural;\n  }\n}\n\nclass OrganizationContentSummaryItem {\n  count: number;\n  get localizationKey(): string {\n    return this.localizationKeyOptions.getKey(this.count);\n  }\n  private localizationKeyOptions: CountBasedLocalizationKey;\n  constructor(count: number, localizationKeyOptions: CountBasedLocalizationKey) {\n    this.count = count;\n    this.localizationKeyOptions = localizationKeyOptions;\n  }\n}\n\nclass OrganizationContentSummary {\n  totalItemCount = 0;\n  itemCountByType: OrganizationContentSummaryItem[] = [];\n}\n\n@Component({\n  selector: \"app-delete-organization\",\n  templateUrl: \"delete-organization.component.html\",\n})\nexport class DeleteOrganizationComponent implements OnInit {\n  organizationId: string;\n  loaded: boolean;\n  deleteOrganizationRequestType: \"InvalidFamiliesForEnterprise\" | \"RegularDelete\" = \"RegularDelete\";\n  organizationName: string;\n  organizationContentSummary: OrganizationContentSummary = new OrganizationContentSummary();\n  @Output() onSuccess: EventEmitter<void> = new EventEmitter();\n\n  masterPassword: Verification;\n  formPromise: Promise<void>;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService,\n    private cipherService: CipherService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    await this.load();\n  }\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.organizationApiService.delete(this.organizationId, request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"organizationDeleted\"),\n        this.i18nService.t(\"organizationDeletedDesc\")\n      );\n      this.onSuccess.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async load() {\n    this.organizationName = (await this.organizationService.get(this.organizationId)).name;\n    this.organizationContentSummary = await this.buildOrganizationContentSummary();\n    this.loaded = true;\n  }\n\n  private async buildOrganizationContentSummary(): Promise<OrganizationContentSummary> {\n    const organizationContentSummary = new OrganizationContentSummary();\n    const organizationItems = (\n      await this.cipherService.getAllFromApiForOrganization(this.organizationId)\n    ).filter((item) => item.deletedDate == null);\n\n    if (organizationItems.length < 1) {\n      return organizationContentSummary;\n    }\n\n    organizationContentSummary.totalItemCount = organizationItems.length;\n    for (const cipherType of Utils.iterateEnum(CipherType)) {\n      const count = this.getOrganizationItemCountByType(organizationItems, cipherType);\n      if (count > 0) {\n        organizationContentSummary.itemCountByType.push(\n          new OrganizationContentSummaryItem(\n            count,\n            this.getOrganizationItemLocalizationKeysByType(CipherType[cipherType])\n          )\n        );\n      }\n    }\n\n    return organizationContentSummary;\n  }\n\n  private getOrganizationItemCountByType(items: CipherView[], type: CipherType) {\n    return items.filter((item) => item.type == type).length;\n  }\n\n  private getOrganizationItemLocalizationKeysByType(type: string): CountBasedLocalizationKey {\n    return new CountBasedLocalizationKey(`type${type}`, `type${type}Plural`);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myOrganization\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"org && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"organizationName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"org.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"org.billingEmail\"\n          [disabled]=\"selfHosted || !canManageBilling\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"businessName\">{{ \"businessName\" | i18n }}</label>\n        <input\n          id=\"businessName\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BusinessName\"\n          [(ngModel)]=\"org.businessName\"\n          [disabled]=\"selfHosted || !canManageBilling\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"identifier\">{{ \"identifier\" | i18n }}</label>\n        <input\n          id=\"identifier\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Identifier\"\n          [(ngModel)]=\"org.identifier\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <bit-avatar [text]=\"org.name\" [id]=\"org.id\" size=\"large\"></bit-avatar>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n<ng-container *ngIf=\"canUseApi\">\n  <div class=\"secondary-header border-0 mb-0\">\n    <h1>{{ \"apiKey\" | i18n }}</h1>\n  </div>\n  <p>\n    {{ \"apiKeyDesc\" | i18n }}\n    <a href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noopener\">\n      {{ \"learnMore\" | i18n }}\n    </a>\n  </p>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewApiKey()\">\n    {{ \"viewApiKey\" | i18n }}\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateApiKey()\">\n    {{ \"rotateApiKey\" | i18n }}\n  </button>\n</ng-container>\n<div class=\"secondary-header border-0 mb-0\">\n  <h1>{{ \"taxInformation\" | i18n }}</h1>\n</div>\n<p>{{ \"taxInformationDesc\" | i18n }}</p>\n<div *ngIf=\"!org || loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"org && !loading\"\n  #formTax\n  (ngSubmit)=\"submitTaxInfo()\"\n  [appApiAction]=\"taxFormPromise\"\n  ngNativeValidate\n>\n  <app-tax-info></app-tax-info>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"formTax.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteOrganization()\">\n      {{ \"deleteOrganization\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n<ng-template #purgeOrganizationTemplate></ng-template>\n<ng-template #apiKeyTemplate></ng-template>\n<ng-template #rotateApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organization-keys.request\";\nimport { OrganizationUpdateRequest } from \"@bitwarden/common/models/request/organization-update.request\";\nimport { OrganizationResponse } from \"@bitwarden/common/models/response/organization.response\";\n\nimport { ApiKeyComponent } from \"../../settings/api-key.component\";\nimport { PurgeVaultComponent } from \"../../settings/purge-vault.component\";\nimport { TaxInfoComponent } from \"../../settings/tax-info.component\";\n\nimport { DeleteOrganizationComponent } from \"./delete-organization.component\";\n\n@Component({\n  selector: \"app-org-account\",\n  templateUrl: \"account.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccountComponent {\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n  @ViewChild(\"purgeOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"apiKeyTemplate\", { read: ViewContainerRef, static: true })\n  apiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateApiKeyModalRef: ViewContainerRef;\n  @ViewChild(TaxInfoComponent) taxInfo: TaxInfoComponent;\n\n  selfHosted = false;\n  canManageBilling = true;\n  loading = true;\n  canUseApi = false;\n  org: OrganizationResponse;\n  formPromise: Promise<OrganizationResponse>;\n  taxFormPromise: Promise<unknown>;\n\n  private organizationId: string;\n\n  constructor(\n    private modalService: ModalService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private router: Router,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.canManageBilling = this.organizationService.get(this.organizationId).canManageBilling;\n      try {\n        this.org = await this.organizationApiService.get(this.organizationId);\n        this.canUseApi = this.org.useApi;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationUpdateRequest();\n      request.name = this.org.name;\n      request.businessName = this.org.businessName;\n      request.billingEmail = this.org.billingEmail;\n      request.identifier = this.org.identifier;\n\n      // Backfill pub/priv key if necessary\n      if (!this.org.hasPublicAndPrivateKeys) {\n        const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n        request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n      }\n\n      this.formPromise = this.organizationApiService.save(this.organizationId, request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"organizationUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async submitTaxInfo() {\n    this.taxFormPromise = this.taxInfo.submitTaxInfo();\n    await this.taxFormPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"taxInfoUpdated\"));\n  }\n\n  async deleteOrganization() {\n    await this.modalService.openViewRef(\n      DeleteOrganizationComponent,\n      this.deleteModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSuccess.subscribe(() => {\n          this.router.navigate([\"/\"]);\n        });\n      }\n    );\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef, (comp) => {\n      comp.organizationId = this.organizationId;\n    });\n  }\n\n  async viewApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.apiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.getOrCreateApiKey.bind(\n        this.organizationApiService\n      );\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyDesc\";\n    });\n  }\n\n  async rotateApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateApiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.isRotation = true;\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.rotateApiKey.bind(this.organizationApiService);\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","export enum TransactionType {\n  Charge = 0,\n  Credit = 1,\n  PromotionalCredit = 2,\n  ReferralCredit = 3,\n  Refund = 4,\n}\n","export class VerifyBankRequest {\n  amount1: number;\n  amount2: number;\n}\n","export class BitPayInvoiceRequest {\n  userId: string;\n  organizationId: string;\n  credit: boolean;\n  amount: number;\n  returnUrl: string;\n  name: string;\n  email: string;\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ \"addCredit\" | i18n }}</h3>\n    <div class=\"mb-4 text-lg\" *ngIf=\"showOptions\">\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-paypal\"\n          [value]=\"paymentMethodType.PayPal\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-paypal\">\n          <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n        >\n      </div>\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-bitcoin\"\n          [value]=\"paymentMethodType.BitPay\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-bitcoin\">\n          <i class=\"bwi bwi-fw bwi-bitcoin\" aria-hidden=\"true\"></i> Bitcoin</label\n        >\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"row\">\n        <div class=\"col-4\">\n          <label for=\"creditAmount\">{{ \"amount\" | i18n }}</label>\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\"><span class=\"input-group-text\">$USD</span></div>\n            <input\n              id=\"creditAmount\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"CreditAmount\"\n              [(ngModel)]=\"creditAmount\"\n              (blur)=\"formatAmount()\"\n              required\n            />\n          </div>\n        </div>\n      </div>\n      <small class=\"form-text text-muted\">{{ \"creditDelayed\" | i18n }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading || ppLoading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n<form #ppButtonForm action=\"{{ ppButtonFormAction }}\" method=\"post\" target=\"_top\">\n  <input type=\"hidden\" name=\"cmd\" value=\"_xclick\" />\n  <input type=\"hidden\" name=\"business\" value=\"{{ ppButtonBusinessId }}\" />\n  <input type=\"hidden\" name=\"button_subtype\" value=\"services\" />\n  <input type=\"hidden\" name=\"no_note\" value=\"1\" />\n  <input type=\"hidden\" name=\"no_shipping\" value=\"1\" />\n  <input type=\"hidden\" name=\"rm\" value=\"1\" />\n  <input type=\"hidden\" name=\"return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"cancel_return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\n  <input type=\"hidden\" name=\"image_url\" value=\"https://bitwarden.com/images/paypal-banner.png\" />\n  <input type=\"hidden\" name=\"bn\" value=\"PP-BuyNowBF:btn_buynow_LG.gif:NonHosted\" />\n  <input type=\"hidden\" name=\"amount\" value=\"{{ creditAmount }}\" />\n  <input type=\"hidden\" name=\"custom\" value=\"{{ ppButtonCustomField }}\" />\n  <input type=\"hidden\" name=\"item_name\" value=\"Bitwarden Account Credit\" />\n  <input type=\"hidden\" name=\"item_number\" value=\"{{ subject }}\" />\n</form>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { PayPalConfig } from \"@bitwarden/common/abstractions/environment.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { BitPayInvoiceRequest } from \"@bitwarden/common/models/request/bit-pay-invoice.request\";\n\n@Component({\n  selector: \"app-add-credit\",\n  templateUrl: \"add-credit.component.html\",\n})\nexport class AddCreditComponent implements OnInit {\n  @Input() creditAmount: string;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.PayPal;\n  @Input() organizationId: string;\n  @Output() onAdded = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(\"ppButtonForm\", { read: ElementRef, static: true }) ppButtonFormRef: ElementRef;\n\n  paymentMethodType = PaymentMethodType;\n  ppButtonFormAction: string;\n  ppButtonBusinessId: string;\n  ppButtonCustomField: string;\n  ppLoading = false;\n  subject: string;\n  returnUrl: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private name: string;\n  private email: string;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {\n    const payPalConfig = process.env.PAYPAL_CONFIG as PayPalConfig;\n    this.ppButtonFormAction = payPalConfig.buttonAction;\n    this.ppButtonBusinessId = payPalConfig.businessId;\n  }\n\n  async ngOnInit() {\n    if (this.organizationId != null) {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"20.00\";\n      }\n      this.ppButtonCustomField = \"organization_id:\" + this.organizationId;\n      const org = await this.organizationService.get(this.organizationId);\n      if (org != null) {\n        this.subject = org.name;\n        this.name = org.name;\n      }\n    } else {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"10.00\";\n      }\n      this.userId = await this.stateService.getUserId();\n      this.subject = await this.stateService.getEmail();\n      this.email = this.subject;\n      this.ppButtonCustomField = \"user_id:\" + this.userId;\n    }\n    this.ppButtonCustomField += \",account_credit:1\";\n    this.returnUrl = window.location.href;\n  }\n\n  async submit() {\n    if (this.creditAmount == null || this.creditAmount === \"\") {\n      return;\n    }\n\n    if (this.method === PaymentMethodType.PayPal) {\n      this.ppButtonFormRef.nativeElement.submit();\n      this.ppLoading = true;\n      return;\n    }\n    if (this.method === PaymentMethodType.BitPay) {\n      try {\n        const req = new BitPayInvoiceRequest();\n        req.email = this.email;\n        req.name = this.name;\n        req.credit = true;\n        req.amount = this.creditAmountNumber;\n        req.organizationId = this.organizationId;\n        req.userId = this.userId;\n        req.returnUrl = this.returnUrl;\n        this.formPromise = this.apiService.postBitPayInvoice(req);\n        const bitPayUrl: string = await this.formPromise;\n        this.platformUtilsService.launchUri(bitPayUrl);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      return;\n    }\n    try {\n      this.onAdded.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  formatAmount() {\n    try {\n      if (this.creditAmount != null && this.creditAmount !== \"\") {\n        const floatAmount = Math.abs(parseFloat(this.creditAmount));\n        if (floatAmount > 0) {\n          this.creditAmount = parseFloat((Math.round(floatAmount * 100) / 100).toString())\n            .toFixed(2)\n            .toString();\n          return;\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.creditAmount = \"\";\n  }\n\n  get creditAmountNumber(): number {\n    if (this.creditAmount != null && this.creditAmount !== \"\") {\n      try {\n        return parseFloat(this.creditAmount);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return null;\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\n\nimport { OrganizationTaxInfoUpdateRequest } from \"./organization-tax-info-update.request\";\n\nexport class PaymentRequest extends OrganizationTaxInfoUpdateRequest {\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n}\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { PaymentRequest } from \"@bitwarden/common/models/request/payment.request\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-adjust-payment\",\n  templateUrl: \"adjust-payment.component.html\",\n})\nexport class AdjustPaymentComponent {\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent, { static: true }) taxInfoComponent: TaxInfoComponent;\n\n  @Input() currentType?: PaymentMethodType;\n  @Input() organizationId: string;\n  @Output() onAdjusted = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  paymentMethodType = PaymentMethodType;\n  formPromise: Promise<void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    try {\n      const request = new PaymentRequest();\n      this.formPromise = this.paymentComponent.createPaymentToken().then((result) => {\n        request.paymentToken = result[0];\n        request.paymentMethodType = result[1];\n        request.postalCode = this.taxInfoComponent.taxInfo.postalCode;\n        request.country = this.taxInfoComponent.taxInfo.country;\n        if (this.organizationId == null) {\n          return this.apiService.postAccountPayment(request);\n        } else {\n          request.taxId = this.taxInfoComponent.taxInfo.taxId;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          request.line1 = this.taxInfoComponent.taxInfo.line1;\n          request.line2 = this.taxInfoComponent.taxInfo.line2;\n          request.city = this.taxInfoComponent.taxInfo.city;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          return this.organizationApiService.updatePayment(this.organizationId, request);\n        }\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedPaymentMethod\")\n      );\n      this.onAdjusted.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  changeCountry() {\n    if (this.taxInfoComponent.taxInfo.country === \"US\") {\n      this.paymentComponent.hideBank = !this.organizationId;\n    } else {\n      this.paymentComponent.hideBank = true;\n      if (this.paymentComponent.method === PaymentMethodType.BankAccount) {\n        this.paymentComponent.method = PaymentMethodType.Card;\n        this.paymentComponent.changeMethod();\n      }\n    }\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">\n      {{ (currentType != null ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n    </h3>\n    <app-payment [hideBank]=\"!organizationId\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changeCountry()\"></app-tax-info>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","<div class=\"page-header d-flex\">\n  <h1>\n    {{ \"billing\" | i18n }}\n  </h1>\n  <button\n    (click)=\"load()\"\n    class=\"btn btn-sm btn-outline-primary ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ (isCreditBalance ? \"accountCredit\" : \"accountBalance\") | i18n }}</h2>\n  <p class=\"text-lg\">\n    <strong>{{ creditOrBalance | currency: \"$\" }}</strong>\n  </p>\n  <p>{{ \"creditAppliedDesc\" | i18n }}</p>\n  <button\n    type=\"button\"\n    class=\"btn btn-outline-secondary\"\n    (click)=\"addCredit()\"\n    *ngIf=\"!showAddCredit\"\n  >\n    {{ \"addCredit\" | i18n }}\n  </button>\n  <app-add-credit\n    [organizationId]=\"organizationId\"\n    (onAdded)=\"closeAddCredit(true)\"\n    (onCanceled)=\"closeAddCredit(false)\"\n    *ngIf=\"showAddCredit\"\n  >\n  </app-add-credit>\n  <h2 class=\"spaced-header\">{{ \"paymentMethod\" | i18n }}</h2>\n  <p *ngIf=\"!paymentSource\">{{ \"noPaymentMethod\" | i18n }}</p>\n  <ng-container *ngIf=\"paymentSource\">\n    <app-callout\n      type=\"warning\"\n      title=\"{{ 'verifyBankAccount' | i18n }}\"\n      *ngIf=\"\n        paymentSource.type === paymentMethodType.BankAccount && paymentSource.needsVerification\n      \"\n    >\n      <p>{{ \"verifyBankAccountDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}</p>\n      <form\n        #verifyForm\n        class=\"form-inline\"\n        (ngSubmit)=\"verifyBank()\"\n        [appApiAction]=\"verifyBankPromise\"\n        ngNativeValidate\n      >\n        <label class=\"sr-only\" for=\"verifyAmount1\">{{ \"amount\" | i18n: \"1\" }}</label>\n        <div class=\"input-group mr-2\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">$0.</div>\n          </div>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"verifyAmount1\"\n            placeholder=\"xx\"\n            name=\"Amount1\"\n            [(ngModel)]=\"verifyAmount1\"\n            min=\"1\"\n            max=\"99\"\n            step=\"1\"\n            required\n          />\n        </div>\n        <label class=\"sr-only\" for=\"verifyAmount2\">{{ \"amount\" | i18n: \"2\" }}</label>\n        <div class=\"input-group mr-2\">\n          <div class=\"input-group-prepend\">\n            <div class=\"input-group-text\">$0.</div>\n          </div>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            id=\"verifyAmount2\"\n            placeholder=\"xx\"\n            name=\"Amount2\"\n            [(ngModel)]=\"verifyAmount2\"\n            min=\"1\"\n            max=\"99\"\n            step=\"1\"\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          class=\"btn btn-outline-primary btn-submit\"\n          [disabled]=\"verifyForm.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"verifyBankAccount\" | i18n }}</span>\n        </button>\n      </form>\n    </app-callout>\n    <p>\n      <i\n        class=\"bwi bwi-fw\"\n        [ngClass]=\"{\n          'bwi-credit-card': paymentSource.type === paymentMethodType.Card,\n          'bwi-bank': paymentSource.type === paymentMethodType.BankAccount,\n          'bwi-money': paymentSource.type === paymentMethodType.Check,\n          'bwi-paypal text-primary': paymentSource.type === paymentMethodType.PayPal,\n          'bwi-apple text-muted': paymentSource.type === paymentMethodType.AppleInApp,\n          'bwi-google text-muted': paymentSource.type === paymentMethodType.GoogleInApp\n        }\"\n      ></i>\n      <span *ngIf=\"paymentSourceInApp\">{{ \"inAppPurchase\" | i18n }}</span>\n      {{ paymentSource.description }}\n    </p>\n  </ng-container>\n  <button\n    type=\"button\"\n    class=\"btn btn-outline-secondary\"\n    (click)=\"changePayment()\"\n    *ngIf=\"!showAdjustPayment\"\n  >\n    {{ (paymentSource ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n  </button>\n  <app-adjust-payment\n    [currentType]=\"paymentSource != null ? paymentSource.type : null\"\n    [organizationId]=\"organizationId\"\n    (onAdjusted)=\"closePayment(true)\"\n    (onCanceled)=\"closePayment(false)\"\n    *ngIf=\"showAdjustPayment\"\n  >\n  </app-adjust-payment>\n  <h2 class=\"spaced-header\">{{ \"invoices\" | i18n }}</h2>\n  <p *ngIf=\"!invoices || !invoices.length\">{{ \"noInvoices\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\">\n    <tbody>\n      <tr *ngFor=\"let i of invoices\">\n        <td>{{ i.date | date: \"mediumDate\" }}</td>\n        <td>\n          <a\n            href=\"{{ i.pdfUrl }}\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            class=\"mr-2\"\n            appA11yTitle=\"{{ 'downloadInvoice' | i18n }}\"\n          >\n            <i class=\"bwi bwi-file-pdf\" aria-hidden=\"true\"></i\n          ></a>\n          <a href=\"{{ i.url }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ 'viewInvoice' | i18n }}\">\n            {{ \"invoiceNumber\" | i18n: i.number }}</a\n          >\n        </td>\n        <td>{{ i.amount | currency: \"$\" }}</td>\n        <td>\n          <span *ngIf=\"i.paid\">\n            <i class=\"bwi bwi-check text-success\" aria-hidden=\"true\"></i>\n            {{ \"paid\" | i18n }}\n          </span>\n          <span *ngIf=\"!i.paid\">\n            <i class=\"bwi bwi-exclamation-circle text-muted\" aria-hidden=\"true\"></i>\n            {{ \"unpaid\" | i18n }}\n          </span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <h2 class=\"spaced-header\">{{ \"transactions\" | i18n }}</h2>\n  <p *ngIf=\"!transactions || !transactions.length\">{{ \"noTransactions\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\">\n    <tbody>\n      <tr *ngFor=\"let t of transactions\">\n        <td>{{ t.createdDate | date: \"mediumDate\" }}</td>\n        <td>\n          <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n            {{ \"chargeNoun\" | i18n }}\n          </span>\n          <span *ngIf=\"t.type === transactionType.Refund\">{{ \"refundNoun\" | i18n }}</span>\n        </td>\n        <td>\n          <i\n            class=\"bwi bwi-fw\"\n            *ngIf=\"t.paymentMethodType\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-credit-card': t.paymentMethodType === paymentMethodType.Card,\n              'bwi-bank':\n                t.paymentMethodType === paymentMethodType.BankAccount ||\n                t.paymentMethodType === paymentMethodType.WireTransfer,\n              'bwi-bitcoin text-warning': t.paymentMethodType === paymentMethodType.BitPay,\n              'bwi-paypal text-primary': t.paymentMethodType === paymentMethodType.PayPal\n            }\"\n          ></i>\n          {{ t.details }}\n        </td>\n        <td\n          [ngClass]=\"{ 'text-strike': t.refunded }\"\n          title=\"{{ (t.refunded ? 'refunded' : '') | i18n }}\"\n        >\n          {{ t.amount | currency: \"$\" }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <small class=\"text-muted\">* {{ \"chargesStatement\" | i18n: \"BITWARDEN\" }}</small>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { TransactionType } from \"@bitwarden/common/enums/transactionType\";\nimport { VerifyBankRequest } from \"@bitwarden/common/models/request/verify-bank.request\";\nimport { BillingResponse } from \"@bitwarden/common/models/response/billing.response\";\n\n@Component({\n  selector: \"app-org-billing\",\n  templateUrl: \"./organization-billing.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class OrganizationBillingComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  showAdjustPayment = false;\n  showAddCredit = false;\n  billing: BillingResponse;\n  paymentMethodType = PaymentMethodType;\n  transactionType = TransactionType;\n  organizationId: string;\n  verifyAmount1: number;\n  verifyAmount2: number;\n\n  verifyBankPromise: Promise<void>;\n\n  // TODO - Make sure to properly split out the billing/invoice and payment method/account during org admin refresh\n\n  constructor(\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      this.firstLoaded = true;\n    });\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    if (this.organizationId != null) {\n      this.billing = await this.organizationApiService.getBilling(this.organizationId);\n    }\n    this.loading = false;\n  }\n\n  async verifyBank() {\n    if (this.loading) {\n      return;\n    }\n\n    try {\n      const request = new VerifyBankRequest();\n      request.amount1 = this.verifyAmount1;\n      request.amount2 = this.verifyAmount2;\n      this.verifyBankPromise = this.organizationApiService.verifyBank(this.organizationId, request);\n      await this.verifyBankPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"verifiedBankAccount\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  addCredit() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"addCredit\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAddCredit = true;\n  }\n\n  closeAddCredit(load: boolean) {\n    this.showAddCredit = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  changePayment() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"changePaymentMethod\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAdjustPayment = true;\n  }\n\n  closePayment(load: boolean) {\n    this.showAdjustPayment = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get isCreditBalance() {\n    return this.billing == null || this.billing.balance <= 0;\n  }\n\n  get creditOrBalance() {\n    return Math.abs(this.billing != null ? this.billing.balance : 0);\n  }\n\n  get paymentSource() {\n    return this.billing != null ? this.billing.paymentSource : null;\n  }\n\n  get paymentSourceInApp() {\n    return (\n      this.paymentSource != null &&\n      (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n        this.paymentSource.type === PaymentMethodType.GoogleInApp)\n    );\n  }\n\n  get invoices() {\n    return this.billing != null ? this.billing.invoices : null;\n  }\n\n  get transactions() {\n    return this.billing != null ? this.billing.transactions : null;\n  }\n}\n","export enum OrganizationApiKeyType {\n  Default = 0,\n  BillingSync = 1,\n  Scim = 2,\n}\n","export enum OrganizationConnectionType {\n  CloudBillingSync = 1,\n  Scim = 2,\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class BillingSyncConfigApi extends BaseResponse {\n  billingSyncKey: string;\n\n  constructor(data: any) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.billingSyncKey = this.getResponseProperty(\"BillingSyncKey\");\n  }\n}\n","export class BillingSyncConfigRequest {\n  constructor(private billingSyncKey: string) {}\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\n\nimport { BillingSyncConfigRequest } from \"./billing-sync-config.request\";\nimport { ScimConfigRequest } from \"./scim-config.request\";\n\n/**API request config types for OrganizationConnectionRequest */\nexport type OrganizationConnectionRequestConfigs = BillingSyncConfigRequest | ScimConfigRequest;\n\nexport class OrganizationConnectionRequest {\n  constructor(\n    public organizationId: string,\n    public type: OrganizationConnectionType,\n    public enabled: boolean,\n    public config: OrganizationConnectionRequestConfigs\n  ) {}\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/enums/organizationConnectionType\";\nimport { BillingSyncConfigApi } from \"@bitwarden/common/models/api/billing-sync-config.api\";\nimport { BillingSyncConfigRequest } from \"@bitwarden/common/models/request/billing-sync-config.request\";\nimport { OrganizationConnectionRequest } from \"@bitwarden/common/models/request/organization-connection.request\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/models/response/organization-connection.response\";\n\n@Component({\n  selector: \"app-billing-sync-key\",\n  templateUrl: \"billing-sync-key.component.html\",\n})\nexport class BillingSyncKeyComponent {\n  entityId: string;\n  existingConnectionId: string;\n  billingSyncKey: string;\n  setParentConnection: (connection: OrganizationConnectionResponse<BillingSyncConfigApi>) => void;\n\n  formPromise: Promise<OrganizationConnectionResponse<BillingSyncConfigApi>> | Promise<void>;\n\n  constructor(private apiService: ApiService, private logService: LogService) {}\n\n  async submit() {\n    try {\n      const request = new OrganizationConnectionRequest(\n        this.entityId,\n        OrganizationConnectionType.CloudBillingSync,\n        true,\n        new BillingSyncConfigRequest(this.billingSyncKey)\n      );\n      if (this.existingConnectionId == null) {\n        this.formPromise = this.apiService.createOrganizationConnection(\n          request,\n          BillingSyncConfigApi\n        );\n      } else {\n        this.formPromise = this.apiService.updateOrganizationConnection(\n          request,\n          BillingSyncConfigApi,\n          this.existingConnectionId\n        );\n      }\n      const response = (await this\n        .formPromise) as OrganizationConnectionResponse<BillingSyncConfigApi>;\n      this.existingConnectionId = response?.id;\n      this.billingSyncKey = response?.config?.billingSyncKey;\n      this.setParentConnection(response);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async deleteConnection() {\n    this.formPromise = this.apiService.deleteOrganizationConnection(this.existingConnectionId);\n    await this.formPromise;\n    this.setParentConnection(null);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"billingSyncTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"billingSyncTitle\">{{ \"manageBillingSync\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"billingSyncKeyDesc\" | i18n }}</p>\n        <div class=\"form-group\">\n          <label for=\"billingSyncKey\"\n            >{{ \"billingSyncKey\" | i18n }} <small>(</small><small>{{ \"required\" | i18n }}</small\n            ><small>)</small></label\n          >\n          <input\n            id=\"billingSyncKey\"\n            type=\"input\"\n            name=\"billingSyncKey\"\n            class=\"form-control\"\n            [(ngModel)]=\"billingSyncKey\"\n            required\n            appAutofocus\n            appInputVerbatim\n          />\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"deleteConnection()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            [disabled]=\"form.loading\"\n          >\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\" [hidden]=\"form.loading\" aria-hidden=\"true\"></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class OrganizationApiKeyRequest extends SecretVerificationRequest {\n  type: OrganizationApiKeyType = OrganizationApiKeyType.Default;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"billingSyncApiKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"billingSyncApiKeyTitle\">\n          {{ (hasBillingToken ? \"viewBillingSyncToken\" : \"generateBillingSyncToken\") | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-user-verification\n          [(ngModel)]=\"masterPassword\"\n          ngDefaultControl\n          name=\"secret\"\n          *ngIf=\"!clientSecret\"\n        >\n        </app-user-verification>\n        <ng-container *ngIf=\"clientSecret && showRotateScreen\">\n          <p>{{ \"rotateBillingSyncTokenTitle\" | i18n }}</p>\n          <app-callout type=\"warning\">\n            {{ \"rotateBillingSyncTokenWarning\" | i18n }}\n          </app-callout>\n        </ng-container>\n\n        <div *ngIf=\"clientSecret && !showRotateScreen\">\n          <p>{{ \"copyPasteBillingSync\" | i18n }}</p>\n          <label for=\"clientSecret\">Billing Sync Key</label>\n          <div class=\"input-group\">\n            <input\n              id=\"clientSecret\"\n              class=\"form-control text-monospace\"\n              type=\"text\"\n              [(ngModel)]=\"clientSecret\"\n              name=\"clientSecret\"\n              disabled\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                (click)=\"copy()\"\n                [appA11yTitle]=\"'copy' | i18n\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"small text-muted mt-2\" *ngIf=\"showLastSyncText\">\n            <b class=\"font-weight-semibold\">{{ \"lastSync\" | i18n }}:</b>\n            {{ lastSyncDate | date: \"medium\" }}\n          </div>\n          <div class=\"small text-danger mt-2\" *ngIf=\"showAwaitingSyncText\">\n            <i class=\"bwi bwi-error\"></i>\n            {{\n              (daysBetween === 1 ? \"awaitingSyncSingular\" : \"awaitingSyncPlural\")\n                | i18n: daysBetween\n            }}\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!clientSecret || showRotateScreen\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            *ngIf=\"form.loading\"\n          ></i>\n          <span>\n            {{ submitButtonText }}\n          </span>\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary\"\n          data-dismiss=\"modal\"\n          *ngIf=\"!showRotateScreen\"\n        >\n          {{ \"close\" | i18n }}\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary\"\n          *ngIf=\"showRotateScreen\"\n          (click)=\"cancelRotate()\"\n        >\n          {{ \"cancel\" | i18n }}\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary\"\n          *ngIf=\"clientSecret && !showRotateScreen\"\n          (click)=\"rotateToken()\"\n        >\n          {{ \"rotateToken\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/enums/organizationApiKeyType\";\nimport { OrganizationApiKeyRequest } from \"@bitwarden/common/models/request/organization-api-key.request\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/api-key.response\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-billing-sync-api-key\",\n  templateUrl: \"billing-sync-api-key.component.html\",\n})\nexport class BillingSyncApiKeyComponent {\n  organizationId: string;\n  hasBillingToken: boolean;\n\n  showRotateScreen: boolean;\n  masterPassword: Verification;\n  formPromise: Promise<ApiKeyResponse>;\n  clientSecret?: string;\n  keyRevisionDate?: Date;\n  lastSyncDate?: Date = null;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  copy() {\n    this.platformUtilsService.copyToClipboard(this.clientSecret);\n  }\n\n  async submit() {\n    if (this.showRotateScreen) {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword, OrganizationApiKeyRequest)\n        .then((request) => {\n          request.type = OrganizationApiKeyType.BillingSync;\n          return this.organizationApiService.rotateApiKey(this.organizationId, request);\n        });\n      const response = await this.formPromise;\n      await this.load(response);\n      this.showRotateScreen = false;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"billingSyncApiKeyRotated\")\n      );\n    } else {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword, OrganizationApiKeyRequest)\n        .then((request) => {\n          request.type = OrganizationApiKeyType.BillingSync;\n          return this.organizationApiService.getOrCreateApiKey(this.organizationId, request);\n        });\n      const response = await this.formPromise;\n      await this.load(response);\n    }\n  }\n\n  async load(response: ApiKeyResponse) {\n    this.clientSecret = response.apiKey;\n    this.keyRevisionDate = response.revisionDate;\n    this.hasBillingToken = true;\n    const syncStatus = await this.apiService.getSponsorshipSyncStatus(this.organizationId);\n    this.lastSyncDate = syncStatus.lastSyncDate;\n  }\n\n  cancelRotate() {\n    this.showRotateScreen = false;\n  }\n\n  rotateToken() {\n    this.showRotateScreen = true;\n  }\n\n  private dayDiff(date1: Date, date2: Date): number {\n    const diffTime = Math.abs(date2.getTime() - date1.getTime());\n    return Math.round(diffTime / (1000 * 60 * 60 * 24));\n  }\n\n  get submitButtonText(): string {\n    if (this.showRotateScreen) {\n      return this.i18nService.t(\"rotateToken\");\n    }\n\n    return this.i18nService.t(this.hasBillingToken ? \"continue\" : \"generateToken\");\n  }\n\n  get showLastSyncText(): boolean {\n    // If the keyRevisionDate is later than the lastSyncDate we need to show\n    // a warning that they need to put the billing sync key in their self hosted install\n    return this.lastSyncDate && this.lastSyncDate > this.keyRevisionDate;\n  }\n\n  get showAwaitingSyncText(): boolean {\n    return this.lastSyncDate && this.lastSyncDate <= this.keyRevisionDate;\n  }\n\n  get daysBetween(): number {\n    return this.dayDiff(this.keyRevisionDate, new Date());\n  }\n}\n","class Icon {\n  constructor(readonly svg: string) {}\n}\n\n// We only export the type to prohibit the creation of Icons without using\n// the `svgIcon` template literal tag.\nexport type { Icon };\n\nexport function isIcon(icon: unknown): icon is Icon {\n  return icon instanceof Icon;\n}\n\nexport class DynamicContentNotAllowedError extends Error {\n  constructor() {\n    super(\"Dynamic content in icons is not allowed due to risk of user-injected XSS.\");\n  }\n}\n\nexport function svgIcon(strings: TemplateStringsArray, ...values: unknown[]): Icon {\n  if (values.length > 0) {\n    throw new DynamicContentNotAllowedError();\n  }\n\n  return new Icon(strings[0]);\n}\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const SubscriptionHiddenIcon = svgIcon`\n<svg width=\"216\" height=\"231\" viewBox=\"0 0 216 231\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M133.356 85.6618C133.136 85.43 132.871 85.2457 132.577 85.1198C132.283 84.9939 131.968 84.93 131.648 84.9318H87.8482C87.5289 84.93 87.2113 84.9939 86.9175 85.1198C86.6237 85.2457 86.359 85.43 86.14 85.6618C85.9083 85.8808 85.7239 86.1473 85.598 86.4411C85.4721 86.7349 85.4082 87.0506 85.41 87.37V116.57C85.4192 118.793 85.8499 120.994 86.6802 123.056C87.4705 125.091 88.5326 127.011 89.8375 128.761C91.1789 130.515 92.6808 132.137 94.3233 133.612C95.8472 135.01 97.4532 136.318 99.1304 137.528C100.59 138.565 102.123 139.547 103.729 140.474C105.335 141.401 106.469 142.027 107.131 142.354C107.799 142.682 108.339 142.941 108.741 143.113C109.055 143.264 109.4 143.339 109.748 143.332C110.091 143.337 110.431 143.257 110.737 143.102C111.146 142.923 111.679 142.671 112.354 142.343C113.03 142.014 114.179 141.386 115.756 140.463C117.333 139.539 118.884 138.554 120.355 137.517C122.034 136.306 123.642 134.999 125.169 133.601C126.814 132.128 128.316 130.504 129.655 128.75C130.958 126.998 132.021 125.08 132.813 123.045C133.645 120.983 134.075 118.782 134.083 116.559V87.3591C134.085 87.0415 134.021 86.7276 133.895 86.4356C133.769 86.1436 133.586 85.8808 133.356 85.6618ZM127.71 116.836C127.71 127.421 109.748 136.514 109.748 136.514V91.1879H127.71V116.836Z\" fill=\"rgb(var(--color-secondary-700))\"/>\n  <path d=\"M24.6216 122.3C24.7144 123.4 25.6819 124.217 26.7825 124.125C27.8832 124.032 28.7002 123.064 28.6074 121.964L24.6216 122.3ZM151.501 45.7445C152.57 45.4679 153.213 44.3768 152.936 43.3074L148.429 25.8809C148.152 24.8115 147.061 24.1688 145.992 24.4454C144.922 24.722 144.28 25.8131 144.556 26.8825L148.563 42.3728L133.073 46.3793C132.003 46.6559 131.361 47.747 131.637 48.8164C131.914 49.8858 133.005 50.5285 134.074 50.2519L151.501 45.7445ZM28.6074 121.964C26.6788 99.0874 34.4658 75.5543 51.9661 58.054L49.1377 55.2256C30.7695 73.5938 22.5982 98.2999 24.6216 122.3L28.6074 121.964ZM51.9661 58.054C78.5404 31.4797 119.036 27.3026 149.985 45.5315L152.015 42.0849C119.534 22.9534 77.0327 27.3306 49.1377 55.2256L51.9661 58.054Z\" fill=\"rgb(var(--color-secondary-700))\"/>\n  <path d=\"M67.4747 185.062C66.4089 185.352 65.7801 186.451 66.0701 187.517L70.797 204.885C71.0871 205.951 72.1862 206.58 73.252 206.29C74.3179 205.999 74.9467 204.9 74.6567 203.834L70.455 188.396L85.8934 184.194C86.9592 183.904 87.5881 182.805 87.298 181.739C87.008 180.674 85.9088 180.045 84.843 180.335L67.4747 185.062ZM192.478 100.283C192.286 99.1952 191.248 98.4697 190.16 98.6625C189.072 98.8552 188.347 99.8931 188.54 100.981L192.478 100.283ZM166.138 172.225C139.813 198.55 99.8271 202.897 68.9932 185.255L67.0068 188.727C99.3669 207.242 141.333 202.687 168.966 175.054L166.138 172.225ZM188.54 100.981C192.985 126.07 185.516 152.847 166.138 172.225L168.966 175.054C189.307 154.713 197.142 126.603 192.478 100.283L188.54 100.981Z\" fill=\"rgb(var(--color-secondary-700))\"/>\n  <path d=\"M37.726 108.132C39.283 92.1931 46.1655 76.6765 58.3734 64.4686C75.2893 47.5527 98.5583 40.8618 120.5 44.396\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n  <path d=\"M180.595 119.132C179.653 136.119 172.693 152.834 159.717 165.811C144.44 181.088 123.982 188.025 104 186.623\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"2\" stroke-linecap=\"round\"/>\n  <rect x=\"153.5\" y=\"56.1317\" width=\"49\" height=\"34\" rx=\"2.5\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <path d=\"M153.5 63.6317V63.6317C153.5 66.9454 156.186 69.6317 159.5 69.6317H172.509M202.5 63.6317V63.6317C202.5 66.9454 199.814 69.6317 196.5 69.6317H183.491\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <mask id=\"path-8-inside-1_1000_26057\" fill=\"white\">\n    <rect x=\"172\" y=\"65.6317\" width=\"12\" height=\"9\" rx=\"1.25\"/>\n  </mask>\n  <rect x=\"172\" y=\"65.6317\" width=\"12\" height=\"9\" rx=\"1.25\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"6\" mask=\"url(#path-8-inside-1_1000_26057)\"/>\n  <path d=\"M187 54.6317C187 54.6317 187 53.6317 187 52.6317C187 51.6317 186.053 50.6317 185.105 50.6317C184.158 50.6317 171.842 50.6317 170.895 50.6317C169.947 50.6317 169 51.6317 169 52.6317C169 53.6317 169 54.6317 169 54.6317\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <circle cx=\"48\" cy=\"141\" r=\"10.5\" fill=\"rgb(var(--color-background))\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <path d=\"M64.9935 168.5H64.9126H64.8318H64.7512H64.6708H64.5905H64.5104H64.4304H64.3506H64.2709H64.1914H64.1121H64.0329H63.9538H63.8749H63.7962H63.7176H63.6392H63.5609H63.4828H63.4048H63.3269H63.2492H63.1717H63.0943H63.017H62.9399H62.8629H62.7861H62.7094H62.6329H62.5565H62.4802H62.4041H62.3281H62.2523H62.1766H62.101H62.0256H61.9503H61.8751H61.8001H61.7252H61.6504H61.5758H61.5013H61.4269H61.3527H61.2786H61.2046H61.1308H61.0571H60.9835H60.91H60.8367H60.7635H60.6904H60.6175H60.5446H60.4719H60.3993H60.3269H60.2545H60.1823H60.1102H60.0382H59.9664H59.8946H59.823H59.7515H59.6801H59.6088H59.5376H59.4666H59.3956H59.3248H59.2541H59.1835H59.113H59.0426H58.9724H58.9022H58.8322H58.7622H58.6924H58.6226H58.553H58.4835H58.4141H58.3448H58.2756H58.2065H58.1375H58.0686H57.9998H57.9311H57.8625H57.794H57.7256H57.6572H57.589H57.5209H57.4529H57.385H57.3172H57.2494H57.1818H57.1142H57.0468H56.9794H56.9121H56.8449H56.7779H56.7108H56.6439H56.5771H56.5103H56.4437H56.3771H56.3106H56.2442H56.1779H56.1117H56.0455H55.9794H55.9134H55.8475H55.7817H55.7159H55.6502H55.5846H55.5191H55.4537H55.3883H55.323H55.2578H55.1926H55.1275H55.0625H54.9976H54.9328H54.868H54.8032H54.7386H54.674H54.6095H54.5451H54.4807H54.4164H54.3521H54.2879H54.2238H54.1598H54.0958H54.0318H53.968H53.9042H53.8404H53.7767H53.7131H53.6495H53.586H53.5226H53.4592H53.3958H53.3325H53.2693H53.2061H53.143H53.0799H53.0169H52.9539H52.891H52.8281H52.7653H52.7025H52.6398H52.5771H52.5145H52.4519H52.3894H52.3269H52.2645H52.202H52.1397H52.0774H52.0151H51.9528H51.8907H51.8285H51.7664H51.7043H51.6423H51.5803H51.5183H51.4564H51.3945H51.3326H51.2708H51.209H51.1472H51.0855H51.0238H50.9621H50.9005H50.8389H50.7773H50.7157H50.6542H50.5927H50.5312H50.4698H50.4084H50.347H50.2856H50.2243H50.1629H50.1016H50.0404H49.9791H49.9178H49.8566H49.7954H49.7342H49.6731H49.6119H49.5508H49.4896H49.4285H49.3674H49.3064H49.2453H49.1842H49.1232H49.0622H49.0011H48.9401H48.8791H48.8181H48.7571H48.6962H48.6352H48.5742H48.5133H48.4523H48.3913H48.3304H48.2694H48.2085H48.1475H48.0866H48.0257H47.9647H47.9038H47.8428H47.7819H47.7209H47.6599H47.599H47.538H47.477H47.416H47.3551H47.2941H47.2331H47.172H47.111H47.05H46.9889H46.9279H46.8668H46.8057H46.7446H46.6835H46.6224H46.5612H46.5001H46.4389H46.3777H46.3165H46.2553H46.194H46.1328H46.0715H46.0102H45.9489H45.8875H45.8261H45.7647H45.7033H45.6418H45.5804H45.5189H45.4573H45.3958H45.3342H45.2726H45.2109H45.1493H45.0876H45.0258H44.9641H44.9023H44.8404H44.7786H44.7166H44.6547H44.5927H44.5307H44.4687H44.4066H44.3445H44.2823H44.2201H44.1578H44.0956H44.0332H43.9709H43.9084H43.846H43.7835H43.7209H43.6583H43.5957H43.533H43.4703H43.4075H43.3447H43.2818H43.2189H43.1559H43.0929H43.0298H42.9666H42.9034H42.8402H42.7769H42.7135H42.6501H42.5867H42.5231H42.4596H42.3959H42.3322H42.2685H42.2046H42.1408H42.0768H42.0128H41.9487H41.8846H41.8204H41.7562H41.6918H41.6274H41.563H41.4985H41.4339H41.3692H41.3045H41.2397H41.1748H41.1098H41.0448H40.9797H40.9146H40.8493H40.784H40.7186H40.6532H40.5876H40.522H40.4563H40.3905H40.3247H40.2588H40.1928H40.1267H40.0605H39.9942H39.9279H39.8615H39.795H39.7284H39.6617H39.5949H39.5281H39.4611H39.3941H39.327H39.2598H39.1925H39.1251H39.0576H38.9901H38.9224H38.8547H38.7868H38.7189H38.6508H38.5827H38.5145H38.4461H38.3777H38.3092H38.2406H38.1719H38.103H38.0341H37.9651H37.896H37.8267H37.7574H37.688H37.6184H37.5488H37.479H37.4092H37.3392H37.2691H37.199H37.1287H37.0583H36.9878H36.9171H36.8464H36.7755H36.7046H36.6335H36.5623H36.491H36.4196H36.3481H36.2764H36.2046H36.1328H36.0607H35.9886H35.9164H35.844H35.7715H35.6989H35.6262H35.5533H35.4803H35.4072H35.334H35.2606H35.1872H35.1135H35.0398H34.9659H34.8919H34.8178H34.7436H34.6692H34.5947H34.52H34.4452H34.3703H34.2952H34.2201H34.1447H34.0693H33.9937H33.9179H33.8421H33.7661H33.6899H33.6136H33.5372H33.4606H33.3839H33.3071H33.2301H33.1529H33.0756H32.9982H32.9206H32.8429H32.765H32.687H32.6088H32.5305H32.452H32.3734H32.2946H32.2157H32.1367H32.0574H31.978H31.8985H31.8188H31.739H31.659H31.5788H31.4985H31.418H31.3374H31.2566H31.1757H31.0946H31.0133H30.9318H30.8503H30.7685H30.6866H30.6045H30.5222H30.4398H30.3572H30.2745H30.1915C30.0489 168.5 29.9693 168.466 29.9164 168.433C29.8553 168.394 29.7779 168.322 29.702 168.192C29.5361 167.906 29.4608 167.48 29.5197 167.111C30.9235 158.322 38.6474 151.574 47.9925 151.574C57.3375 151.574 65.0615 158.322 66.4652 167.111C66.5751 167.799 66.4037 168.054 66.3124 168.149C66.1888 168.278 65.8364 168.5 64.9935 168.5Z\" fill=\"rgb(var(--color-background))\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <circle cx=\"20\" cy=\"141\" r=\"10.5\" fill=\"rgb(var(--color-background))\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <path d=\"M36.9935 168.5H36.9126H36.8318H36.7512H36.6708H36.5905H36.5104H36.4304H36.3506H36.2709H36.1914H36.1121H36.0329H35.9538H35.8749H35.7962H35.7176H35.6392H35.5609H35.4828H35.4048H35.3269H35.2492H35.1717H35.0943H35.017H34.9399H34.8629H34.7861H34.7094H34.6329H34.5565H34.4802H34.4041H34.3281H34.2523H34.1766H34.101H34.0256H33.9503H33.8751H33.8001H33.7252H33.6504H33.5758H33.5013H33.4269H33.3527H33.2786H33.2046H33.1308H33.0571H32.9835H32.91H32.8367H32.7635H32.6904H32.6175H32.5446H32.4719H32.3993H32.3269H32.2545H32.1823H32.1102H32.0382H31.9664H31.8946H31.823H31.7515H31.6801H31.6088H31.5376H31.4666H31.3956H31.3248H31.2541H31.1835H31.113H31.0426H30.9724H30.9022H30.8322H30.7622H30.6924H30.6226H30.553H30.4835H30.4141H30.3448H30.2756H30.2065H30.1375H30.0686H29.9998H29.9311H29.8625H29.794H29.7256H29.6572H29.589H29.5209H29.4529H29.385H29.3172H29.2494H29.1818H29.1142H29.0468H28.9794H28.9121H28.8449H28.7779H28.7108H28.6439H28.5771H28.5103H28.4437H28.3771H28.3106H28.2442H28.1779H28.1117H28.0455H27.9794H27.9134H27.8475H27.7817H27.7159H27.6502H27.5846H27.5191H27.4537H27.3883H27.323H27.2578H27.1926H27.1275H27.0625H26.9976H26.9328H26.868H26.8032H26.7386H26.674H26.6095H26.5451H26.4807H26.4164H26.3521H26.2879H26.2238H26.1598H26.0958H26.0318H25.968H25.9042H25.8404H25.7767H25.7131H25.6495H25.586H25.5226H25.4592H25.3958H25.3325H25.2693H25.2061H25.143H25.0799H25.0169H24.9539H24.891H24.8281H24.7653H24.7025H24.6398H24.5771H24.5145H24.4519H24.3894H24.3269H24.2645H24.202H24.1397H24.0774H24.0151H23.9528H23.8907H23.8285H23.7664H23.7043H23.6423H23.5803H23.5183H23.4564H23.3945H23.3326H23.2708H23.209H23.1472H23.0855H23.0238H22.9621H22.9005H22.8389H22.7773H22.7157H22.6542H22.5927H22.5312H22.4698H22.4084H22.347H22.2856H22.2243H22.1629H22.1016H22.0404H21.9791H21.9178H21.8566H21.7954H21.7342H21.6731H21.6119H21.5508H21.4896H21.4285H21.3674H21.3064H21.2453H21.1842H21.1232H21.0622H21.0011H20.9401H20.8791H20.8181H20.7571H20.6962H20.6352H20.5742H20.5133H20.4523H20.3913H20.3304H20.2694H20.2085H20.1475H20.0866H20.0257H19.9647H19.9038H19.8428H19.7819H19.7209H19.6599H19.599H19.538H19.477H19.416H19.3551H19.2941H19.2331H19.172H19.111H19.05H18.9889H18.9279H18.8668H18.8057H18.7446H18.6835H18.6224H18.5612H18.5001H18.4389H18.3777H18.3165H18.2553H18.194H18.1328H18.0715H18.0102H17.9489H17.8875H17.8261H17.7647H17.7033H17.6418H17.5804H17.5189H17.4573H17.3958H17.3342H17.2726H17.2109H17.1493H17.0876H17.0258H16.9641H16.9023H16.8404H16.7786H16.7166H16.6547H16.5927H16.5307H16.4687H16.4066H16.3445H16.2823H16.2201H16.1578H16.0956H16.0332H15.9709H15.9084H15.846H15.7835H15.7209H15.6583H15.5957H15.533H15.4703H15.4075H15.3447H15.2818H15.2189H15.1559H15.0929H15.0298H14.9666H14.9034H14.8402H14.7769H14.7135H14.6501H14.5867H14.5231H14.4596H14.3959H14.3322H14.2685H14.2046H14.1408H14.0768H14.0128H13.9487H13.8846H13.8204H13.7562H13.6918H13.6274H13.563H13.4985H13.4339H13.3692H13.3045H13.2397H13.1748H13.1098H13.0448H12.9797H12.9146H12.8493H12.784H12.7186H12.6532H12.5876H12.522H12.4563H12.3905H12.3247H12.2588H12.1928H12.1267H12.0605H11.9942H11.9279H11.8615H11.795H11.7284H11.6617H11.5949H11.5281H11.4611H11.3941H11.327H11.2598H11.1925H11.1251H11.0576H10.9901H10.9224H10.8547H10.7868H10.7189H10.6508H10.5827H10.5145H10.4461H10.3777H10.3092H10.2406H10.1719H10.103H10.0341H9.9651H9.89597H9.82674H9.75741H9.68798H9.61843H9.54879H9.47904H9.40918H9.33921H9.26914H9.19896H9.12867H9.05826H8.98775H8.91713H8.8464H8.77555H8.70459H8.63351H8.56232H8.49102H8.4196H8.34807H8.27641H8.20464H8.13276H8.06075H7.98862H7.91638H7.84401H7.77152H7.69891H7.62617H7.55332H7.48034H7.40723H7.334H7.26064H7.18716H7.11355H7.03981H6.96594H6.89195H6.81782H6.74356H6.66918H6.59466H6.52H6.44522H6.3703H6.29525H6.22006H6.14474H6.06928H5.99368H5.91795H5.84208H5.76607H5.68992H5.61363H5.5372H5.46062H5.38391H5.30705H5.23005H5.15291H5.07562H4.99819H4.92061H4.84288H4.76501H4.68699H4.60882H4.5305H4.45203H4.37342H4.29465H4.21573H4.13665H4.05743H3.97805H3.89851H3.81882H3.73898H3.65898H3.57882H3.49851H3.41804H3.33741H3.25662H3.17566H3.09455H3.01328H2.93185H2.85025H2.76849H2.68657H2.60448H2.52223H2.43981H2.35722H2.27447H2.19155C2.04893 168.5 1.96927 168.466 1.91645 168.433C1.85532 168.394 1.77792 168.322 1.702 168.192C1.53613 167.906 1.46078 167.48 1.51975 167.111C2.92347 158.322 10.6474 151.574 19.9925 151.574C29.3375 151.574 37.0615 158.322 38.4652 167.111C38.5751 167.799 38.4037 168.054 38.3124 168.149C38.1888 168.278 37.8364 168.5 36.9935 168.5Z\" fill=\"rgb(var(--color-background))\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <circle cx=\"34\" cy=\"154\" r=\"10.5\" fill=\"rgb(var(--color-background))\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n  <path d=\"M50.9935 181.5H50.9126H50.8318H50.7512H50.6708H50.5905H50.5104H50.4304H50.3506H50.2709H50.1914H50.1121H50.0329H49.9538H49.8749H49.7962H49.7176H49.6392H49.5609H49.4828H49.4048H49.3269H49.2492H49.1717H49.0943H49.017H48.9399H48.8629H48.7861H48.7094H48.6329H48.5565H48.4802H48.4041H48.3281H48.2523H48.1766H48.101H48.0256H47.9503H47.8751H47.8001H47.7252H47.6504H47.5758H47.5013H47.4269H47.3527H47.2786H47.2046H47.1308H47.0571H46.9835H46.91H46.8367H46.7635H46.6904H46.6175H46.5446H46.4719H46.3993H46.3269H46.2545H46.1823H46.1102H46.0382H45.9664H45.8946H45.823H45.7515H45.6801H45.6088H45.5376H45.4666H45.3956H45.3248H45.2541H45.1835H45.113H45.0426H44.9724H44.9022H44.8322H44.7622H44.6924H44.6226H44.553H44.4835H44.4141H44.3448H44.2756H44.2065H44.1375H44.0686H43.9998H43.9311H43.8625H43.794H43.7256H43.6572H43.589H43.5209H43.4529H43.385H43.3172H43.2494H43.1818H43.1142H43.0468H42.9794H42.9121H42.8449H42.7779H42.7108H42.6439H42.5771H42.5103H42.4437H42.3771H42.3106H42.2442H42.1779H42.1117H42.0455H41.9794H41.9134H41.8475H41.7817H41.7159H41.6502H41.5846H41.5191H41.4537H41.3883H41.323H41.2578H41.1926H41.1275H41.0625H40.9976H40.9328H40.868H40.8032H40.7386H40.674H40.6095H40.5451H40.4807H40.4164H40.3521H40.2879H40.2238H40.1598H40.0958H40.0318H39.968H39.9042H39.8404H39.7767H39.7131H39.6495H39.586H39.5226H39.4592H39.3958H39.3325H39.2693H39.2061H39.143H39.0799H39.0169H38.9539H38.891H38.8281H38.7653H38.7025H38.6398H38.5771H38.5145H38.4519H38.3894H38.3269H38.2645H38.202H38.1397H38.0774H38.0151H37.9528H37.8907H37.8285H37.7664H37.7043H37.6423H37.5803H37.5183H37.4564H37.3945H37.3326H37.2708H37.209H37.1472H37.0855H37.0238H36.9621H36.9005H36.8389H36.7773H36.7157H36.6542H36.5927H36.5312H36.4698H36.4084H36.347H36.2856H36.2243H36.1629H36.1016H36.0404H35.9791H35.9178H35.8566H35.7954H35.7342H35.6731H35.6119H35.5508H35.4896H35.4285H35.3674H35.3064H35.2453H35.1842H35.1232H35.0622H35.0011H34.9401H34.8791H34.8181H34.7571H34.6962H34.6352H34.5742H34.5133H34.4523H34.3913H34.3304H34.2694H34.2085H34.1475H34.0866H34.0257H33.9647H33.9038H33.8428H33.7819H33.7209H33.6599H33.599H33.538H33.477H33.416H33.3551H33.2941H33.2331H33.172H33.111H33.05H32.9889H32.9279H32.8668H32.8057H32.7446H32.6835H32.6224H32.5612H32.5001H32.4389H32.3777H32.3165H32.2553H32.194H32.1328H32.0715H32.0102H31.9489H31.8875H31.8261H31.7647H31.7033H31.6418H31.5804H31.5189H31.4573H31.3958H31.3342H31.2726H31.2109H31.1493H31.0876H31.0258H30.9641H30.9023H30.8404H30.7786H30.7166H30.6547H30.5927H30.5307H30.4687H30.4066H30.3445H30.2823H30.2201H30.1578H30.0956H30.0332H29.9709H29.9084H29.846H29.7835H29.7209H29.6583H29.5957H29.533H29.4703H29.4075H29.3447H29.2818H29.2189H29.1559H29.0929H29.0298H28.9666H28.9034H28.8402H28.7769H28.7135H28.6501H28.5867H28.5231H28.4596H28.3959H28.3322H28.2685H28.2046H28.1408H28.0768H28.0128H27.9487H27.8846H27.8204H27.7562H27.6918H27.6274H27.563H27.4985H27.4339H27.3692H27.3045H27.2397H27.1748H27.1098H27.0448H26.9797H26.9146H26.8493H26.784H26.7186H26.6532H26.5876H26.522H26.4563H26.3905H26.3247H26.2588H26.1928H26.1267H26.0605H25.9942H25.9279H25.8615H25.795H25.7284H25.6617H25.5949H25.5281H25.4611H25.3941H25.327H25.2598H25.1925H25.1251H25.0576H24.9901H24.9224H24.8547H24.7868H24.7189H24.6508H24.5827H24.5145H24.4461H24.3777H24.3092H24.2406H24.1719H24.103H24.0341H23.9651H23.896H23.8267H23.7574H23.688H23.6184H23.5488H23.479H23.4092H23.3392H23.2691H23.199H23.1287H23.0583H22.9878H22.9171H22.8464H22.7755H22.7046H22.6335H22.5623H22.491H22.4196H22.3481H22.2764H22.2046H22.1328H22.0607H21.9886H21.9164H21.844H21.7715H21.6989H21.6262H21.5533H21.4803H21.4072H21.334H21.2606H21.1872H21.1135H21.0398H20.9659H20.8919H20.8178H20.7436H20.6692H20.5947H20.52H20.4452H20.3703H20.2952H20.2201H20.1447H20.0693H19.9937H19.9179H19.8421H19.7661H19.6899H19.6136H19.5372H19.4606H19.3839H19.3071H19.2301H19.1529H19.0756H18.9982H18.9206H18.8429H18.765H18.687H18.6088H18.5305H18.452H18.3734H18.2946H18.2157H18.1367H18.0574H17.978H17.8985H17.8188H17.739H17.659H17.5788H17.4985H17.418H17.3374H17.2566H17.1757H17.0946H17.0133H16.9318H16.8503H16.7685H16.6866H16.6045H16.5222H16.4398H16.3572H16.2745H16.1915C16.045 181.5 15.9628 181.465 15.9092 181.432C15.8479 181.394 15.772 181.324 15.6978 181.198C15.5354 180.922 15.4617 180.509 15.5193 180.153C16.9196 171.496 24.6325 164.823 33.9925 164.823C43.3524 164.823 51.0654 171.496 52.4657 180.153C52.574 180.823 52.4052 181.064 52.319 181.152C52.1962 181.279 51.8413 181.5 50.9935 181.5Z\" fill=\"rgb(var(--color-background))\" stroke=\"rgb(var(--color-secondary-700))\" stroke-width=\"3\"/>\n</svg>\n`;\n","import { Component, HostBinding, Input } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { Icon, isIcon } from \"./icon\";\n\n@Component({\n  selector: \"bit-icon\",\n  template: ``,\n})\nexport class BitIconComponent {\n  @Input() icon: Icon;\n\n  @HostBinding()\n  protected get innerHtml() {\n    if (!isIcon(this.icon)) {\n      return \"\";\n    }\n\n    const svg = this.icon.svg;\n    return this.domSanitizer.bypassSecurityTrustHtml(svg);\n  }\n\n  constructor(private domSanitizer: DomSanitizer) {}\n}\n","export class StorageRequest {\n  storageGbAdjustment: number;\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ (add ? \"addStorage\" : \"removeStorage\") | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"storageAdjustment\">{{\n          (add ? \"gbStorageAdd\" : \"gbStorageRemove\") | i18n\n        }}</label>\n        <input\n          id=\"storageAdjustment\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"StroageGbAdjustment\"\n          [(ngModel)]=\"storageAdjustment\"\n          min=\"0\"\n          max=\"99\"\n          step=\"1\"\n          required\n        />\n      </div>\n    </div>\n    <div *ngIf=\"add\" class=\"mb-3\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ storageAdjustment || 0 }} GB &times;\n      {{ storageGbPrice | currency: \"$\" }} = {{ adjustedStorageTotal | currency: \"$\" }} /{{\n        interval | i18n\n      }}\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n    <small class=\"d-block text-muted mt-3\">\n      {{ (add ? \"storageAddNote\" : \"storageRemoveNote\") | i18n }}\n    </small>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StorageRequest } from \"@bitwarden/common/models/request/storage.request\";\nimport { PaymentResponse } from \"@bitwarden/common/models/response/payment.response\";\n\nimport { PaymentComponent } from \"./payment.component\";\n\n@Component({\n  selector: \"app-adjust-storage\",\n  templateUrl: \"adjust-storage.component.html\",\n})\nexport class AdjustStorageComponent {\n  @Input() storageGbPrice = 0;\n  @Input() add = true;\n  @Input() organizationId: string;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter<number>();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n\n  storageAdjustment = 0;\n  formPromise: Promise<PaymentResponse | void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    try {\n      const request = new StorageRequest();\n      request.storageGbAdjustment = this.storageAdjustment;\n      if (!this.add) {\n        request.storageGbAdjustment *= -1;\n      }\n\n      let paymentFailed = false;\n      const action = async () => {\n        let response: Promise<PaymentResponse>;\n        if (this.organizationId == null) {\n          response = this.formPromise = this.apiService.postAccountStorage(request);\n        } else {\n          response = this.formPromise = this.organizationApiService.updateStorage(\n            this.organizationId,\n            request\n          );\n        }\n        const result = await response;\n        if (result != null && result.paymentIntentClientSecret != null) {\n          try {\n            await this.paymentComponent.handleStripeCardPayment(\n              result.paymentIntentClientSecret,\n              null\n            );\n          } catch {\n            paymentFailed = true;\n          }\n        }\n      };\n      this.formPromise = action();\n      await this.formPromise;\n      this.onAdjusted.emit(this.storageAdjustment);\n      if (paymentFailed) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          null,\n          this.i18nService.t(\"couldNotChargeCardPayInvoice\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"../billing\"], { relativeTo: this.activatedRoute });\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"adjustedStorage\", request.storageGbAdjustment.toString())\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  get adjustedStorageTotal(): number {\n    return this.storageGbPrice * this.storageAdjustment;\n  }\n}\n","export class OrganizationSubscriptionUpdateRequest {\n  constructor(public seatAdjustment: number, public maxAutoscaleSeats?: number) {}\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationSubscriptionUpdateRequest } from \"@bitwarden/common/models/request/organization-subscription-update.request\";\n\n@Component({\n  selector: \"app-adjust-subscription\",\n  templateUrl: \"adjust-subscription.component.html\",\n})\nexport class AdjustSubscription {\n  @Input() organizationId: string;\n  @Input() maxAutoscaleSeats: number;\n  @Input() currentSeatCount: number;\n  @Input() seatPrice = 0;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter();\n\n  formPromise: Promise<void>;\n  limitSubscription: boolean;\n  newSeatCount: number;\n  newMaxSeats: number;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  ngOnInit() {\n    this.limitSubscription = this.maxAutoscaleSeats != null;\n    this.newSeatCount = this.currentSeatCount;\n    this.newMaxSeats = this.maxAutoscaleSeats;\n  }\n\n  async submit() {\n    try {\n      const seatAdjustment = this.newSeatCount - this.currentSeatCount;\n      const request = new OrganizationSubscriptionUpdateRequest(seatAdjustment, this.newMaxSeats);\n      this.formPromise = this.organizationApiService.updateSubscription(\n        this.organizationId,\n        request\n      );\n\n      await this.formPromise;\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"subscriptionUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.onAdjusted.emit();\n  }\n\n  limitSubscriptionChanged() {\n    if (!this.limitSubscription) {\n      this.newMaxSeats = null;\n    }\n  }\n\n  get adjustedSeatTotal(): number {\n    return this.newSeatCount * this.seatPrice;\n  }\n\n  get maxSeatTotal(): number {\n    return this.newMaxSeats * this.seatPrice;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"newSeatCount\">{{ \"subscriptionSeats\" | i18n }}</label>\n        <input\n          id=\"newSeatCount\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"NewSeatCount\"\n          [(ngModel)]=\"newSeatCount\"\n          min=\"0\"\n          step=\"1\"\n          required\n        />\n        <small class=\"d-block text-muted mb-4\">\n          <strong>{{ \"total\" | i18n }}:</strong> {{ newSeatCount || 0 }} &times;\n          {{ seatPrice | currency: \"$\" }} = {{ adjustedSeatTotal | currency: \"$\" }} /\n          {{ interval | i18n }}\n        </small>\n      </div>\n    </div>\n    <div class=\"row mb-4\">\n      <div class=\"form-group col-sm\">\n        <div class=\"form-check\">\n          <input\n            id=\"limitSubscription\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"LimitSubscription\"\n            [(ngModel)]=\"limitSubscription\"\n            (change)=\"limitSubscriptionChanged()\"\n          />\n          <label for=\"limitSubscription\">{{ \"limitSubscription\" | i18n }}</label>\n        </div>\n        <small class=\"d-block text-muted\">{{ \"limitSubscriptionDesc\" | i18n }}</small>\n      </div>\n    </div>\n    <div class=\"row mb-4\" [hidden]=\"!limitSubscription\">\n      <div class=\"form-group col-sm\">\n        <label for=\"maxAutoscaleSeats\">{{ \"maxSeatLimit\" | i18n }}</label>\n        <input\n          id=\"maxAutoscaleSeats\"\n          class=\"form-control col-6\"\n          type=\"number\"\n          name=\"MaxAutoscaleSeats\"\n          [(ngModel)]=\"newMaxSeats\"\n          [min]=\"newSeatCount == null ? 1 : newSeatCount\"\n          step=\"1\"\n          [required]=\"limitSubscription\"\n        />\n        <small class=\"d-block text-muted\">\n          <strong>{{ \"maxSeatCost\" | i18n }}:</strong> {{ newMaxSeats || 0 }} &times;\n          {{ seatPrice | currency: \"$\" }} = {{ maxSeatTotal | currency: \"$\" }} /\n          {{ interval | i18n }}\n        </small>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"save\" | i18n }}</span>\n    </button>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\n@Component({\n  selector: \"app-change-plan\",\n  templateUrl: \"change-plan.component.html\",\n})\nexport class ChangePlanComponent {\n  @Input() organizationId: string;\n  @Output() onChanged = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<any>;\n  defaultUpgradePlan: PlanType = PlanType.FamiliesAnnually;\n  defaultUpgradeProduct: ProductType = ProductType.Families;\n\n  constructor(private logService: LogService) {}\n\n  async submit() {\n    try {\n      this.onChanged.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<div class=\"card card-org-plans\">\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h2 class=\"card-body-header\">{{ \"changeBillingPlan\" | i18n }}</h2>\n    <p class=\"mb-0\">{{ \"changeBillingPlanUpgrade\" | i18n }}</p>\n    <app-organization-plans\n      [showFree]=\"false\"\n      [showCancel]=\"true\"\n      [plan]=\"defaultUpgradePlan\"\n      [product]=\"defaultUpgradeProduct\"\n      [organizationId]=\"organizationId\"\n      (onCanceled)=\"cancel()\"\n    >\n    </app-organization-plans>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\n\n@Component({\n  selector: \"app-download-license\",\n  templateUrl: \"download-license.component.html\",\n})\nexport class DownloadLicenseComponent {\n  @Input() organizationId: string;\n  @Output() onDownloaded = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  installationId: string;\n  formPromise: Promise<unknown>;\n\n  constructor(\n    private fileDownloadService: FileDownloadService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    if (this.installationId == null || this.installationId === \"\") {\n      return;\n    }\n\n    try {\n      this.formPromise = this.organizationApiService.getLicense(\n        this.organizationId,\n        this.installationId\n      );\n      const license = await this.formPromise;\n      const licenseString = JSON.stringify(license, null, 2);\n      this.fileDownloadService.download({\n        fileName: \"bitwarden_organization_license.json\",\n        blobData: licenseString,\n      });\n      this.onDownloaded.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ \"downloadLicense\" | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <div class=\"d-flex\">\n          <label for=\"installationId\">{{ \"enterInstallationId\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/licensing-on-premise/#organization-account-sharing\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <input\n          id=\"installationId\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"InstallationId\"\n          [(ngModel)]=\"installationId\"\n          required\n        />\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-update-license\",\n  templateUrl: \"update-license.component.html\",\n})\nexport class UpdateLicenseComponent {\n  @Input() organizationId: string;\n  @Output() onUpdated = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    try {\n      const fd = new FormData();\n      fd.append(\"license\", files[0]);\n\n      let updatePromise: Promise<void | unknown> = null;\n      if (this.organizationId == null) {\n        updatePromise = this.apiService.postAccountLicense(fd);\n      } else {\n        updatePromise = this.organizationApiService.updateLicense(this.organizationId, fd);\n      }\n\n      this.formPromise = updatePromise.then(() => {\n        return this.apiService.refreshIdentityToken();\n      });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedLicense\"));\n      this.onUpdated.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"form-group\">\n    <label for=\"file\" class=\"sr-only\">{{ \"licenseFile\" | i18n }}</label>\n    <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n    <small class=\"form-text text-muted\">{{\n      \"licenseFileDesc\"\n        | i18n\n          : (!organizationId\n              ? \"bitwarden_premium_license.json\"\n              : \"bitwarden_organization_license.json\")\n    }}</small>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"submit\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","<div class=\"page-header\">\n  <h1>\n    {{ \"subscription\" | i18n }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<ng-container *ngIf=\"firstLoaded && !userOrg.canManageBilling\">\n  <div class=\"tw-flex tw-flex-col tw-items-center tw-text-info\">\n    <bit-icon [icon]=\"subscriptionHiddenIcon\"></bit-icon>\n    <p class=\"tw-font-bold\">{{ \"billingManagedByProvider\" | i18n: this.userOrg.providerName }}</p>\n    <p>{{ \"billingContactProviderForAssistance\" | i18n }}</p>\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"sub\">\n  <app-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</app-callout\n  >\n  <app-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button\n      #reinstateBtn\n      type=\"button\"\n      class=\"btn btn-outline-secondary btn-submit\"\n      (click)=\"reinstate()\"\n      [appApiAction]=\"reinstatePromise\"\n      [disabled]=\"reinstateBtn.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"reinstateSubscription\" | i18n }}</span>\n    </button>\n  </app-callout>\n  <ng-container *ngIf=\"!selfHosted\">\n    <div class=\"row\">\n      <div class=\"col-4\">\n        <dl>\n          <dt>{{ \"billingPlan\" | i18n }}</dt>\n          <dd>{{ sub.plan.name }}</dd>\n          <ng-container *ngIf=\"subscription\">\n            <dt>{{ \"status\" | i18n }}</dt>\n            <dd>\n              <span class=\"text-capitalize\">{{\n                isSponsoredSubscription ? \"sponsored\" : subscription.status || \"-\"\n              }}</span>\n              <span bitBadge badgeType=\"warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n                \"pendingCancellation\" | i18n\n              }}</span>\n            </dd>\n            <dt>{{ \"nextCharge\" | i18n }}</dt>\n            <dd>\n              {{\n                nextInvoice\n                  ? (nextInvoice.date | date: \"mediumDate\") +\n                    \", \" +\n                    (nextInvoice.amount | currency: \"$\")\n                  : \"-\"\n              }}\n            </dd>\n          </ng-container>\n        </dl>\n      </div>\n      <div class=\"col-8\" *ngIf=\"subscription\">\n        <strong class=\"d-block mb-1\">{{ \"details\" | i18n }}</strong>\n        <table class=\"table\">\n          <tbody>\n            <tr *ngFor=\"let i of subscription.items\">\n              <td>\n                {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} @\n                {{ i.amount | currency: \"$\" }}\n              </td>\n              <td>{{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <ng-container *ngIf=\"userOrg?.providerId != null\">\n        <div class=\"col-sm\">\n          <dl>\n            <dt>{{ \"provider\" | i18n }}</dt>\n            <dd>{{ \"yourProviderIs\" | i18n: userOrg.providerName }}</dd>\n          </dl>\n        </div>\n      </ng-container>\n    </div>\n    <ng-container>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"changePlan()\"\n        *ngIf=\"showChangePlanButton\"\n      >\n        {{ \"changeBillingPlan\" | i18n }}\n      </button>\n      <app-change-plan\n        [organizationId]=\"organizationId\"\n        (onChanged)=\"closeChangePlan(true)\"\n        (onCanceled)=\"closeChangePlan(false)\"\n        *ngIf=\"showChangePlan\"\n      ></app-change-plan>\n    </ng-container>\n    <h2 class=\"spaced-header\">{{ \"manageSubscription\" | i18n }}</h2>\n    <p class=\"mb-4\">{{ subscriptionDesc }}</p>\n    <ng-container\n      *ngIf=\"\n        subscription && canAdjustSeats && !subscription.cancelled && !subscriptionMarkedForCancel\n      \"\n    >\n      <div class=\"mt-3\">\n        <app-adjust-subscription\n          [seatPrice]=\"seatPrice\"\n          [organizationId]=\"organizationId\"\n          [interval]=\"billingInterval\"\n          [currentSeatCount]=\"seats\"\n          [maxAutoscaleSeats]=\"maxAutoscaleSeats\"\n          (onAdjusted)=\"subscriptionAdjusted()\"\n        >\n        </app-adjust-subscription>\n      </div>\n    </ng-container>\n    <button\n      #removeSponsorshipBtn\n      type=\"button\"\n      class=\"btn btn-outline-danger btn-submit\"\n      (click)=\"removeSponsorship()\"\n      [appApiAction]=\"removeSponsorshipPromise\"\n      [disabled]=\"removeSponsorshipBtn.loading\"\n      *ngIf=\"isSponsoredSubscription\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"removeSponsorship\" | i18n }}</span>\n    </button>\n    <h2 class=\"spaced-header\">{{ \"storage\" | i18n }}</h2>\n    <p>{{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0:sub.storageName || \"0 MB\" }}</p>\n    <div class=\"progress\">\n      <div\n        class=\"progress-bar bg-success\"\n        role=\"progressbar\"\n        [ngStyle]=\"{ width: storageProgressWidth + '%' }\"\n        [attr.aria-valuenow]=\"storagePercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        {{ storagePercentage / 100 | percent }}\n      </div>\n    </div>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"mt-3\">\n        <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n          <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary ml-1\"\n            (click)=\"adjustStorage(false)\"\n          >\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n        <app-adjust-storage\n          [storageGbPrice]=\"storageGbPrice\"\n          [add]=\"adjustStorageAdd\"\n          [organizationId]=\"organizationId\"\n          [interval]=\"billingInterval\"\n          (onAdjusted)=\"closeStorage(true)\"\n          (onCanceled)=\"closeStorage(false)\"\n          *ngIf=\"showAdjustStorage\"\n        ></app-adjust-storage>\n      </div>\n    </ng-container>\n    <!--Switch to i18n-->\n    <h2 class=\"spaced-header\">{{ \"selfHostingTitle\" | i18n }}</h2>\n    <p class=\"mb-4\">\n      {{ \"selfHostingEnterpriseOrganizationSectionCopy\" | i18n }}\n    </p>\n    <div class=\"d-flex\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"downloadLicense()\"\n        *ngIf=\"canDownloadLicense\"\n        [disabled]=\"showDownloadLicense\"\n      >\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary ml-1\"\n        (click)=\"manageBillingSync()\"\n        *ngIf=\"canManageBillingSync\"\n      >\n        {{ (hasBillingSyncToken ? \"manageBillingSync\" : \"setUpBillingSync\") | i18n }}\n      </button>\n    </div>\n    <div class=\"mt-3\" *ngIf=\"showDownloadLicense\">\n      <app-download-license\n        [organizationId]=\"organizationId\"\n        (onDownloaded)=\"closeDownloadLicense()\"\n        (onCanceled)=\"closeDownloadLicense()\"\n      ></app-download-license>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"additionalOptions\" | i18n }}</h2>\n    <p class=\"mb-4\">\n      {{ \"additionalOptionsDesc\" | i18n }}\n    </p>\n    <div class=\"d-flex\">\n      <button\n        #cancelBtn\n        type=\"button\"\n        class=\"btn btn-outline-danger btn-submit ml-1\"\n        (click)=\"cancel()\"\n        [appApiAction]=\"cancelPromise\"\n        [disabled]=\"cancelBtn.loading\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"cancelSubscription\" | i18n }}</span>\n      </button>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"selfHosted\">\n    <dl>\n      <dt>{{ \"billingPlan\" | i18n }}</dt>\n      <dd>{{ sub.plan.name }}</dd>\n      <dt>{{ \"expiration\" | i18n }}</dt>\n      <dd *ngIf=\"sub.expiration\">\n        {{ sub.expiration | date: \"mediumDate\" }}\n        <span *ngIf=\"isExpired\" class=\"text-danger ml-2\">\n          <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n          {{ \"licenseIsExpired\" | i18n }}\n        </span>\n      </dd>\n      <dd *ngIf=\"!sub.expiration\">{{ \"neverExpires\" | i18n }}</dd>\n    </dl>\n    <div>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\">\n        {{ \"updateLicense\" | i18n }}\n      </button>\n      <a\n        href=\"https://vault.bitwarden.com\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        class=\"btn btn-outline-secondary\"\n      >\n        {{ \"manageSubscription\" | i18n }}\n      </a>\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n      <div class=\"card-body\">\n        <button\n          type=\"button\"\n          class=\"close\"\n          appA11yTitle=\"{{ 'cancel' | i18n }}\"\n          (click)=\"closeUpdateLicense(false)\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h3 class=\"card-body-header\">{{ \"updateLicense\" | i18n }}</h3>\n        <app-update-license\n          [organizationId]=\"organizationId\"\n          (onUpdated)=\"closeUpdateLicense(true)\"\n          (onCanceled)=\"closeUpdateLicense(false)\"\n        ></app-update-license>\n      </div>\n    </div>\n    <div *ngIf=\"showBillingSyncKey\">\n      <h2 class=\"mt-5\">\n        {{ \"billingSync\" | i18n }}\n      </h2>\n      <p>\n        {{ \"billingSyncDesc\" | i18n }}\n      </p>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"manageBillingSyncSelfHosted()\"\n      >\n        {{ \"manageBillingSync\" | i18n }}\n      </button>\n      <small class=\"form-text text-muted\" *ngIf=\"billingSyncSetUp\">\n        {{ \"lastSync\" | i18n }}:\n        <span *ngIf=\"userOrg.familySponsorshipLastSyncDate != null\">\n          {{ userOrg.familySponsorshipLastSyncDate | date: \"medium\" }}\n        </span>\n        <span *ngIf=\"userOrg.familySponsorshipLastSyncDate == null\">\n          {{ \"never\" | i18n | lowercase }}\n        </span>\n      </small>\n    </div>\n  </ng-container>\n</ng-container>\n<ng-template #setupBillingSyncTemplate></ng-template>\n<ng-template #rotateBillingSyncKeyTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/enums/organizationApiKeyType\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/enums/organizationConnectionType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { BillingSyncConfigApi } from \"@bitwarden/common/models/api/billing-sync-config.api\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/models/response/organization-connection.response\";\nimport { OrganizationSubscriptionResponse } from \"@bitwarden/common/models/response/organization-subscription.response\";\n\nimport { BillingSyncKeyComponent } from \"../../settings/billing-sync-key.component\";\n\nimport { BillingSyncApiKeyComponent } from \"./billing-sync-api-key.component\";\nimport { SubscriptionHiddenIcon } from \"./subscription-hidden.icon\";\n\n@Component({\n  selector: \"app-org-subscription\",\n  templateUrl: \"organization-subscription.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class OrganizationSubscriptionComponent implements OnInit {\n  @ViewChild(\"setupBillingSyncTemplate\", { read: ViewContainerRef, static: true })\n  setupBillingSyncModalRef: ViewContainerRef;\n\n  loading = false;\n  firstLoaded = false;\n  organizationId: string;\n  adjustSeatsAdd = true;\n  showAdjustSeats = false;\n  showAdjustSeatAutoscale = false;\n  adjustStorageAdd = true;\n  showAdjustStorage = false;\n  showUpdateLicense = false;\n  showBillingSyncKey = false;\n  showDownloadLicense = false;\n  showChangePlan = false;\n  sub: OrganizationSubscriptionResponse;\n  selfHosted = false;\n  hasBillingSyncToken: boolean;\n\n  userOrg: Organization;\n  existingBillingSyncConnection: OrganizationConnectionResponse<BillingSyncConfigApi>;\n\n  removeSponsorshipPromise: Promise<void>;\n  cancelPromise: Promise<void>;\n  reinstatePromise: Promise<void>;\n\n  @ViewChild(\"rotateBillingSyncKeyTemplate\", { read: ViewContainerRef, static: true })\n  billingSyncKeyViewContainerRef: ViewContainerRef;\n  billingSyncKeyRef: [ModalRef, BillingSyncKeyComponent];\n\n  subscriptionHiddenIcon = SubscriptionHiddenIcon;\n\n  constructor(\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private logService: LogService,\n    private modalService: ModalService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      this.firstLoaded = true;\n    });\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    this.loading = true;\n    this.userOrg = this.organizationService.get(this.organizationId);\n    if (this.userOrg.canManageBilling) {\n      this.sub = await this.organizationApiService.getSubscription(this.organizationId);\n    }\n    const apiKeyResponse = await this.organizationApiService.getApiKeyInformation(\n      this.organizationId\n    );\n    this.hasBillingSyncToken = apiKeyResponse.data.some(\n      (i) => i.keyType === OrganizationApiKeyType.BillingSync\n    );\n\n    if (this.selfHosted) {\n      this.showBillingSyncKey = await this.apiService.getCloudCommunicationsEnabled();\n    }\n\n    if (this.showBillingSyncKey) {\n      this.existingBillingSyncConnection = await this.apiService.getOrganizationConnection(\n        this.organizationId,\n        OrganizationConnectionType.CloudBillingSync,\n        BillingSyncConfigApi\n      );\n    }\n\n    this.loading = false;\n  }\n\n  async reinstate() {\n    if (this.loading) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"reinstateConfirmation\"),\n      this.i18nService.t(\"reinstateSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.reinstatePromise = this.organizationApiService.reinstate(this.organizationId);\n      await this.reinstatePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reinstated\"));\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async cancel() {\n    if (this.loading) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"cancelConfirmation\"),\n      this.i18nService.t(\"cancelSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.cancelPromise = this.organizationApiService.cancel(this.organizationId);\n      await this.cancelPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"canceledSubscription\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async changePlan() {\n    this.showChangePlan = !this.showChangePlan;\n  }\n\n  closeChangePlan(changed: boolean) {\n    this.showChangePlan = false;\n  }\n\n  downloadLicense() {\n    this.showDownloadLicense = !this.showDownloadLicense;\n  }\n\n  async manageBillingSync() {\n    const [ref] = await this.modalService.openViewRef(\n      BillingSyncApiKeyComponent,\n      this.setupBillingSyncModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.hasBillingToken = this.hasBillingSyncToken;\n      }\n    );\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    ref.onClosed.subscribe(async () => {\n      await this.load();\n    });\n  }\n\n  closeDownloadLicense() {\n    this.showDownloadLicense = false;\n  }\n\n  updateLicense() {\n    if (this.loading) {\n      return;\n    }\n    this.showUpdateLicense = true;\n  }\n\n  closeUpdateLicense(updated: boolean) {\n    this.showUpdateLicense = false;\n    if (updated) {\n      this.load();\n      this.messagingService.send(\"updatedOrgLicense\");\n    }\n  }\n\n  subscriptionAdjusted() {\n    this.load();\n  }\n\n  adjustStorage(add: boolean) {\n    this.adjustStorageAdd = add;\n    this.showAdjustStorage = true;\n  }\n\n  closeStorage(load: boolean) {\n    this.showAdjustStorage = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  async removeSponsorship() {\n    const isConfirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeSponsorshipConfirmation\"),\n      this.i18nService.t(\"removeSponsorship\"),\n      this.i18nService.t(\"remove\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!isConfirmed) {\n      return;\n    }\n\n    try {\n      this.removeSponsorshipPromise = this.apiService.deleteRemoveSponsorship(this.organizationId);\n      await this.removeSponsorshipPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removeSponsorshipSuccess\")\n      );\n      await this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async manageBillingSyncSelfHosted() {\n    this.billingSyncKeyRef = await this.modalService.openViewRef(\n      BillingSyncKeyComponent,\n      this.billingSyncKeyViewContainerRef,\n      (comp) => {\n        comp.entityId = this.organizationId;\n        comp.existingConnectionId = this.existingBillingSyncConnection?.id;\n        comp.billingSyncKey = this.existingBillingSyncConnection?.config?.billingSyncKey;\n        comp.setParentConnection = (\n          connection: OrganizationConnectionResponse<BillingSyncConfigApi>\n        ) => {\n          this.existingBillingSyncConnection = connection;\n          this.billingSyncKeyRef[0].close();\n        };\n      }\n    );\n  }\n\n  get isExpired() {\n    return (\n      this.sub != null && this.sub.expiration != null && new Date(this.sub.expiration) < new Date()\n    );\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get storageProgressWidth() {\n    return this.storagePercentage < 5 ? 5 : 0;\n  }\n\n  get billingInterval() {\n    const monthly = !this.sub.plan.isAnnual;\n    return monthly ? \"month\" : \"year\";\n  }\n\n  get storageGbPrice() {\n    return this.sub.plan.additionalStoragePricePerGb;\n  }\n\n  get seatPrice() {\n    return this.sub.plan.seatPrice;\n  }\n\n  get seats() {\n    return this.sub.seats;\n  }\n\n  get maxAutoscaleSeats() {\n    return this.sub.maxAutoscaleSeats;\n  }\n\n  get canAdjustSeats() {\n    return this.sub.plan.hasAdditionalSeatsOption;\n  }\n\n  get isSponsoredSubscription(): boolean {\n    return this.sub.subscription?.items.some((i) => i.sponsoredSubscriptionItem);\n  }\n\n  get canDownloadLicense() {\n    return (\n      (this.sub.planType !== PlanType.Free && this.subscription == null) ||\n      (this.subscription != null && !this.subscription.cancelled)\n    );\n  }\n\n  get canManageBillingSync() {\n    return (\n      !this.selfHosted &&\n      (this.sub.planType === PlanType.EnterpriseAnnually ||\n        this.sub.planType === PlanType.EnterpriseMonthly ||\n        this.sub.planType === PlanType.EnterpriseAnnually2019 ||\n        this.sub.planType === PlanType.EnterpriseMonthly2019)\n    );\n  }\n\n  get subscriptionDesc() {\n    if (this.sub.planType === PlanType.Free) {\n      return this.i18nService.t(\"subscriptionFreePlan\", this.sub.seats.toString());\n    } else if (\n      this.sub.planType === PlanType.FamiliesAnnually ||\n      this.sub.planType === PlanType.FamiliesAnnually2019\n    ) {\n      if (this.isSponsoredSubscription) {\n        return this.i18nService.t(\"subscriptionSponsoredFamiliesPlan\", this.sub.seats.toString());\n      } else {\n        return this.i18nService.t(\"subscriptionFamiliesPlan\", this.sub.seats.toString());\n      }\n    } else if (this.sub.maxAutoscaleSeats === this.sub.seats && this.sub.seats != null) {\n      return this.i18nService.t(\"subscriptionMaxReached\", this.sub.seats.toString());\n    } else if (this.sub.maxAutoscaleSeats == null) {\n      return this.i18nService.t(\"subscriptionUserSeatsUnlimitedAutoscale\");\n    } else {\n      return this.i18nService.t(\n        \"subscriptionUserSeatsLimitedAutoscale\",\n        this.sub.maxAutoscaleSeats.toString()\n      );\n    }\n  }\n\n  get showChangePlanButton() {\n    return this.subscription == null && this.sub.planType === PlanType.Free && !this.showChangePlan;\n  }\n\n  get billingSyncSetUp() {\n    return this.existingBillingSyncConnection?.id != null;\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myOrganization\" | i18n }}\n          </a>\n          <a routerLink=\"subscription\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"subscription\" | i18n }}\n          </a>\n          <a\n            routerLink=\"billing\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"showBilling\"\n          >\n            {{ \"billing\" | i18n }}\n          </a>\n          <a\n            routerLink=\"two-factor\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"access2fa\"\n          >\n            {{ \"twoStepLogin\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-org-settings\",\n  templateUrl: \"settings.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SettingsComponent {\n  access2fa = false;\n  showBilling: boolean;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      const organization = await this.organizationService.get(params.organizationId);\n      this.showBilling = !this.platformUtilsService.isSelfHost() && organization.canManageBilling;\n      this.access2fa = organization.use2fa;\n    });\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorDuoRequest extends SecretVerificationRequest {\n  integrationKey: string;\n  secretKey: string;\n  host: string;\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class TwoFactorProviderRequest extends SecretVerificationRequest {\n  type: TwoFactorProviderType;\n}\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\nimport { TwoFactorProviderRequest } from \"@bitwarden/common/models/request/two-factor-provider.request\";\nimport { AuthResponseBase } from \"@bitwarden/common/types/authResponse\";\n\n@Directive()\nexport abstract class TwoFactorBaseComponent {\n  @Output() onUpdated = new EventEmitter<boolean>();\n\n  type: TwoFactorProviderType;\n  organizationId: string;\n  twoFactorProviderType = TwoFactorProviderType;\n  enabled = false;\n  authed = false;\n\n  protected hashedSecret: string;\n  protected verificationType: VerificationType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected userVerificationService: UserVerificationService\n  ) {}\n\n  protected auth(authResponse: AuthResponseBase) {\n    this.hashedSecret = authResponse.secret;\n    this.verificationType = authResponse.verificationType;\n    this.authed = true;\n  }\n\n  protected async enable(enableFunction: () => Promise<void>) {\n    try {\n      await enableFunction();\n      this.onUpdated.emit(true);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async disable(promise: Promise<unknown>) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"twoStepDisableDesc\"),\n      this.i18nService.t(\"disable\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      const request = await this.buildRequestModel(TwoFactorProviderRequest);\n      request.type = this.type;\n      if (this.organizationId != null) {\n        promise = this.apiService.putTwoFactorOrganizationDisable(this.organizationId, request);\n      } else {\n        promise = this.apiService.putTwoFactorDisable(request);\n      }\n      await promise;\n      this.enabled = false;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"twoStepDisabled\"));\n      this.onUpdated.emit(false);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async buildRequestModel<T extends SecretVerificationRequest>(\n    requestClass: new () => T\n  ) {\n    return this.userVerificationService.buildRequest(\n      {\n        secret: this.hashedSecret,\n        type: this.verificationType,\n      },\n      requestClass,\n      true\n    );\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\nimport { TwoFactorResponse } from \"@bitwarden/common/types/twoFactorResponse\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-two-factor-verify\",\n  templateUrl: \"two-factor-verify.component.html\",\n})\nexport class TwoFactorVerifyComponent {\n  @Input() type: TwoFactorProviderType;\n  @Input() organizationId: string;\n  @Output() onAuthed = new EventEmitter<AuthResponse<TwoFactorResponse>>();\n\n  secret: Verification;\n  formPromise: Promise<TwoFactorResponse>;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async submit() {\n    let hashedSecret: string;\n\n    try {\n      this.formPromise = this.userVerificationService.buildRequest(this.secret).then((request) => {\n        hashedSecret =\n          this.secret.type === VerificationType.MasterPassword\n            ? request.masterPasswordHash\n            : request.otp;\n        return this.apiCall(request);\n      });\n\n      const response = await this.formPromise;\n      this.onAuthed.emit({\n        response: response,\n        secret: hashedSecret,\n        verificationType: this.secret.type,\n      });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private apiCall(request: SecretVerificationRequest): Promise<TwoFactorResponse> {\n    switch (this.type) {\n      case -1 as TwoFactorProviderType:\n        return this.apiService.getTwoFactorRecover(request);\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        if (this.organizationId != null) {\n          return this.apiService.getTwoFactorOrganizationDuo(this.organizationId, request);\n        } else {\n          return this.apiService.getTwoFactorDuo(request);\n        }\n      case TwoFactorProviderType.Email:\n        return this.apiService.getTwoFactorEmail(request);\n      case TwoFactorProviderType.WebAuthn:\n        return this.apiService.getTwoFactorWebAuthn(request);\n      case TwoFactorProviderType.Authenticator:\n        return this.apiService.getTwoFactorAuthenticator(request);\n      case TwoFactorProviderType.Yubikey:\n        return this.apiService.getTwoFactorYubiKey(request);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"modal-body\">\n    <p>{{ \"twoStepLoginAuthDesc\" | i18n }}</p>\n    <app-user-verification [(ngModel)]=\"secret\" ngDefaultControl name=\"secret\">\n    </app-user-verification>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"continue\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n      {{ \"close\" | i18n }}\n    </button>\n  </div>\n</form>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faDuoTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faDuoTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>Duo</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <strong>{{ \"twoFactorDuoIntegrationKey\" | i18n }}:</strong> {{ ikey }}\n            <br />\n            <strong>{{ \"twoFactorDuoSecretKey\" | i18n }}:</strong> {{ skey }}\n            <br />\n            <strong>{{ \"twoFactorDuoApiHostname\" | i18n }}:</strong> {{ host }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <p>{{ \"twoFactorDuoDesc\" | i18n }}</p>\n            <div class=\"form-group\">\n              <label for=\"ikey\">{{ \"twoFactorDuoIntegrationKey\" | i18n }}</label>\n              <input\n                id=\"ikey\"\n                type=\"text\"\n                name=\"IntegrationKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"ikey\"\n                required\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"skey\">{{ \"twoFactorDuoSecretKey\" | i18n }}</label>\n              <input\n                id=\"skey\"\n                type=\"password\"\n                name=\"SecretKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"skey\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"host\">{{ \"twoFactorDuoApiHostname\" | i18n }}</label>\n              <input\n                id=\"host\"\n                type=\"text\"\n                name=\"Host\"\n                class=\"form-control\"\n                [(ngModel)]=\"host\"\n                placeholder=\"{{ 'ex' | i18n }} api-xxxxxxxx.duosecurity.com\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorDuoRequest } from \"@bitwarden/common/models/request/update-two-factor-duo.request\";\nimport { TwoFactorDuoResponse } from \"@bitwarden/common/models/response/two-factor-duo.response\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-duo\",\n  templateUrl: \"two-factor-duo.component.html\",\n})\nexport class TwoFactorDuoComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Duo;\n  ikey: string;\n  skey: string;\n  host: string;\n  formPromise: Promise<TwoFactorDuoResponse>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorDuoResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorDuoRequest);\n    request.integrationKey = this.ikey;\n    request.secretKey = this.skey;\n    request.host = this.host;\n\n    return super.enable(async () => {\n      if (this.organizationId != null) {\n        this.formPromise = this.apiService.putTwoFactorOrganizationDuo(\n          this.organizationId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.putTwoFactorDuo(request);\n      }\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private processResponse(response: TwoFactorDuoResponse) {\n    this.ikey = response.integrationKey;\n    this.skey = response.secretKey;\n    this.host = response.host;\n    this.enabled = response.enabled;\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorAuthenticatorRequest extends SecretVerificationRequest {\n  token: string;\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faAuthenticatorTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faAuthenticatorTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"authenticatorAppTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorDesc\" | i18n }}</p>\n            <p>\n              <strong>1. {{ \"twoStepAuthenticatorDownloadApp\" | i18n }}</strong>\n            </p>\n          </ng-container>\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              <p>{{ \"twoStepLoginProviderEnabled\" | i18n }}</p>\n              {{ \"twoStepAuthenticatorReaddDesc\" | i18n }}\n            </app-callout>\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorNeedApp\" | i18n }}</p>\n          </ng-container>\n          <ul class=\"bwi-ul\">\n            <li>\n              <i class=\"bwi bwi-li bwi-apple\"></i>{{ \"iosDevices\" | i18n }}:\n              <a\n                href=\"https://itunes.apple.com/us/app/authy/id494168017?mt=8\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-android\"></i>{{ \"androidDevices\" | i18n }}:\n              <a\n                href=\"https://play.google.com/store/apps/details?id=com.authy.authy\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-windows\"></i>{{ \"windowsDevices\" | i18n }}:\n              <a\n                href=\"https://www.microsoft.com/p/authenticator/9wzdncrfj3rj\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Microsoft Authenticator</a\n              >\n            </li>\n          </ul>\n          <p>{{ \"twoStepAuthenticatorAppsRecommended\" | i18n }}</p>\n          <p *ngIf=\"!enabled\">\n            <strong>2. {{ \"twoStepAuthenticatorScanCode\" | i18n }}</strong>\n          </p>\n          <hr *ngIf=\"enabled\" />\n          <p class=\"text-center\" [ngClass]=\"{ 'mb-0': enabled }\">\n            <canvas id=\"qr\"></canvas><br />\n            <code appA11yTitle=\"{{ 'key' | i18n }}\">{{ key }}</code>\n          </p>\n          <ng-container *ngIf=\"!enabled\">\n            <label for=\"token\">3. {{ \"twoStepAuthenticatorEnterCode\" | i18n }}</label>\n            <input\n              id=\"token\"\n              type=\"text\"\n              name=\"Token\"\n              class=\"form-control\"\n              [(ngModel)]=\"token\"\n              required\n              appInputVerbatim\n            />\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"@bitwarden/common/models/request/update-two-factor-authenticator.request\";\nimport { TwoFactorAuthenticatorResponse } from \"@bitwarden/common/models/response/two-factor-authenticator.response\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n// NOTE: There are additional options available but these are just the ones we are current using.\n// See: https://github.com/neocotic/qrious#examples\ninterface QRiousOptions {\n  element: HTMLElement;\n  value: string;\n  size: number;\n}\n\ndeclare global {\n  interface Window {\n    QRious: new (options: QRiousOptions) => unknown;\n  }\n}\n\n@Component({\n  selector: \"app-two-factor-authenticator\",\n  templateUrl: \"two-factor-authenticator.component.html\",\n})\nexport class TwoFactorAuthenticatorComponent\n  extends TwoFactorBaseComponent\n  implements OnInit, OnDestroy\n{\n  type = TwoFactorProviderType.Authenticator;\n  key: string;\n  token: string;\n  formPromise: Promise<TwoFactorAuthenticatorResponse>;\n\n  private qrScript: HTMLScriptElement;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    userVerificationService: UserVerificationService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n    this.qrScript = window.document.createElement(\"script\");\n    this.qrScript.src = \"scripts/qrious.min.js\";\n    this.qrScript.async = true;\n  }\n\n  ngOnInit() {\n    window.document.body.appendChild(this.qrScript);\n  }\n\n  ngOnDestroy() {\n    window.document.body.removeChild(this.qrScript);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorAuthenticatorResponse>) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorAuthenticatorRequest);\n    request.token = this.token;\n    request.key = this.key;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorAuthenticator(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorAuthenticatorResponse) {\n    this.token = null;\n    this.enabled = response.enabled;\n    this.key = response.key;\n    const email = await this.stateService.getEmail();\n    window.setTimeout(() => {\n      new window.QRious({\n        element: document.getElementById(\"qr\"),\n        value:\n          \"otpauth://totp/Bitwarden:\" +\n          encodeURIComponent(email) +\n          \"?secret=\" +\n          encodeURIComponent(this.key) +\n          \"&issuer=Bitwarden\",\n        size: 160,\n      });\n    }, 100);\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorEmailRequest extends SecretVerificationRequest {\n  token: string;\n  email: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faEmailTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faEmailTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"emailTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <strong>{{ \"email\" | i18n }}:</strong> {{ email }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <p class=\"d-flex\">\n              <span class=\"mr-3\">{{ \"twoFactorEmailDesc\" | i18n }}</span>\n              <img class=\"float-right ml-auto mfaType1\" alt=\"Email logo\" />\n            </p>\n            <div class=\"form-group\">\n              <label for=\"email\">1. {{ \"twoFactorEmailEnterEmail\" | i18n }}</label>\n              <input\n                id=\"email\"\n                type=\"text\"\n                name=\"Email\"\n                class=\"form-control\"\n                [(ngModel)]=\"email\"\n                required\n                inputmode=\"email\"\n                appInputVerbatim=\"false\"\n              />\n            </div>\n            <div class=\"mb-3 d-flex\">\n              <button\n                #sendBtn\n                type=\"button\"\n                class=\"btn btn-outline-primary btn-sm btn-submit align-self-start\"\n                (click)=\"sendEmail()\"\n                [appApiAction]=\"emailPromise\"\n                [disabled]=\"sendBtn.loading\"\n              >\n                <i\n                  class=\"bwi bwi-spinner bwi-spin\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span>{{ \"sendEmail\" | i18n }}</span>\n              </button>\n              <span class=\"text-success ml-3\" *ngIf=\"sentEmail\">\n                {{ \"verificationCodeEmailSent\" | i18n: sentEmail }}\n              </span>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"token\">2. {{ \"twoFactorEmailEnterCode\" | i18n }}</label>\n              <input\n                id=\"token\"\n                type=\"text\"\n                name=\"Token\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/two-factor-email.request\";\nimport { UpdateTwoFactorEmailRequest } from \"@bitwarden/common/models/request/update-two-factor-email.request\";\nimport { TwoFactorEmailResponse } from \"@bitwarden/common/models/response/two-factor-email.response\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-email\",\n  templateUrl: \"two-factor-email.component.html\",\n})\nexport class TwoFactorEmailComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Email;\n  email: string;\n  token: string;\n  sentEmail: string;\n  formPromise: Promise<TwoFactorEmailResponse>;\n  emailPromise: Promise<unknown>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorEmailResponse>) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  async sendEmail() {\n    try {\n      const request = await this.buildRequestModel(TwoFactorEmailRequest);\n      request.email = this.email;\n      this.emailPromise = this.apiService.postTwoFactorEmailSetup(request);\n      await this.emailPromise;\n      this.sentEmail = this.email;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorEmailRequest);\n    request.email = this.email;\n    request.token = this.token;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorEmail(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorEmailResponse) {\n    this.token = null;\n    this.email = response.email;\n    this.enabled = response.enabled;\n    if (!this.enabled && (this.email == null || this.email === \"\")) {\n      this.email = await this.stateService.getEmail();\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faRecoveryTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faRecoveryTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"recoveryCodeTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <ng-container *ngIf=\"authed\">\n        <div class=\"modal-body text-center\">\n          <ng-container *ngIf=\"code\">\n            <p>{{ \"twoFactorRecoveryYourCode\" | i18n }}:</p>\n            <code class=\"text-lg\">{{ code }}</code>\n          </ng-container>\n          <ng-container *ngIf=\"!code\">\n            {{ \"twoFactorRecoveryNoCode\" | i18n }}\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"print()\" *ngIf=\"code\">\n            {{ \"printCode\" | i18n }}\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorRecoverResponse } from \"@bitwarden/common/models/response/two-factor-recover.response\";\n\n@Component({\n  selector: \"app-two-factor-recovery\",\n  templateUrl: \"two-factor-recovery.component.html\",\n})\nexport class TwoFactorRecoveryComponent {\n  type = -1;\n  code: string;\n  authed: boolean;\n  twoFactorProviderType = TwoFactorProviderType;\n\n  constructor(private i18nService: I18nService) {}\n\n  auth(authResponse: any) {\n    this.authed = true;\n    this.processResponse(authResponse.response);\n  }\n\n  print() {\n    const w = window.open();\n    w.document.write(\n      '<div style=\"font-size: 18px; text-align: center;\">' +\n        \"<p>\" +\n        this.i18nService.t(\"twoFactorRecoveryYourCode\") +\n        \":</p>\" +\n        \"<code style=\\\"font-family: Menlo, Monaco, Consolas, 'Courier New', monospace;\\\">\" +\n        this.code +\n        \"</code></div>\" +\n        '<p style=\"text-align: center;\">' +\n        new Date() +\n        \"</p>\"\n    );\n    w.onafterprint = () => w.close();\n    w.print();\n  }\n\n  private formatString(s: string) {\n    if (s == null) {\n      return null;\n    }\n    return s\n      .replace(/(.{4})/g, \"$1 \")\n      .trim()\n      .toUpperCase();\n  }\n\n  private processResponse(response: TwoFactorRecoverResponse) {\n    this.code = this.formatString(response.code);\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorWebAuthnDeleteRequest extends SecretVerificationRequest {\n  id: number;\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorWebAuthnRequest extends SecretVerificationRequest {\n  deviceResponse: PublicKeyCredential;\n  name: string;\n  id: number;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faU2fTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faU2fTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"webAuthnTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorWebAuthnWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorWebAuthnSupportWeb\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right ml-5 mfaType7\" alt=\"FIDO2 WebAuthn logo'\" />\n          <ul class=\"bwi-ul\">\n            <li\n              *ngFor=\"let k of keys; let i = index\"\n              #removeKeyBtn\n              [appApiAction]=\"k.removePromise\"\n            >\n              <i class=\"bwi bwi-li bwi-key\"></i>\n              <strong *ngIf=\"!k.configured || !k.name\">{{ \"webAuthnkeyX\" | i18n: i + 1 }}</strong>\n              <strong *ngIf=\"k.configured && k.name\">{{ k.name }}</strong>\n              <ng-container *ngIf=\"k.configured && !removeKeyBtn.loading\">\n                <ng-container *ngIf=\"k.migrated\">\n                  <span>{{ \"webAuthnMigrated\" | i18n }}</span>\n                </ng-container>\n              </ng-container>\n              <ng-container *ngIf=\"keysConfiguredCount > 1 && k.configured\">\n                <i\n                  class=\"bwi bwi-spin bwi-spinner text-muted bwi-fw\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  *ngIf=\"removeKeyBtn.loading\"\n                  aria-hidden=\"true\"\n                ></i>\n                -\n                <a href=\"#\" appStopClick (click)=\"remove(k)\">{{ \"remove\" | i18n }}</a>\n              </ng-container>\n            </li>\n          </ul>\n          <hr />\n          <p>{{ \"twoFactorWebAuthnAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorU2fGiveName\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fPlugInReadKey\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fSaveForm\" | i18n }}</li>\n          </ol>\n          <div class=\"row\">\n            <div class=\"form-group col-6\">\n              <label for=\"name\">{{ \"name\" | i18n }}</label>\n              <input\n                id=\"name\"\n                type=\"text\"\n                name=\"Name\"\n                class=\"form-control\"\n                [(ngModel)]=\"name\"\n                [disabled]=\"!keyIdAvailable\"\n              />\n            </div>\n          </div>\n          <button\n            type=\"button\"\n            (click)=\"readKey()\"\n            class=\"btn btn-outline-secondary mr-2\"\n            [disabled]=\"readKeyBtn.loading || webAuthnListening || !keyIdAvailable\"\n            #readKeyBtn\n            [appApiAction]=\"challengePromise\"\n          >\n            {{ \"readKey\" | i18n }}\n          </button>\n          <ng-container *ngIf=\"readKeyBtn.loading\">\n            <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n          </ng-container>\n          <ng-container *ngIf=\"!readKeyBtn.loading\">\n            <ng-container *ngIf=\"webAuthnListening\">\n              <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fWaiting\" | i18n }}...\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnResponse\">\n              <i class=\"bwi bwi-check-circle text-success\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fClickSave\" | i18n }}\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnError\">\n              <i class=\"bwi bwi-exclamation-triangle text-danger\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fProblemReadingTryAgain\" | i18n }}\n            </ng-container>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            [disabled]=\"form.loading || !webAuthnResponse\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              *ngIf=\"form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!form.loading\">{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [appApiAction]=\"disablePromise\"\n            [disabled]=\"disableBtn.loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, NgZone } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"@bitwarden/common/models/request/update-two-factor-web-authn-delete.request\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"@bitwarden/common/models/request/update-two-factor-web-authn.request\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"@bitwarden/common/models/response/two-factor-web-authn.response\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\ninterface Key {\n  id: number;\n  name: string;\n  configured: boolean;\n  migrated?: boolean;\n  removePromise: Promise<TwoFactorWebAuthnResponse> | null;\n}\n\n@Component({\n  selector: \"app-two-factor-webauthn\",\n  templateUrl: \"two-factor-webauthn.component.html\",\n})\nexport class TwoFactorWebAuthnComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.WebAuthn;\n  name: string;\n  keys: Key[];\n  keyIdAvailable: number = null;\n  keysConfiguredCount = 0;\n  webAuthnError: boolean;\n  webAuthnListening: boolean;\n  webAuthnResponse: PublicKeyCredential;\n  challengePromise: Promise<ChallengeResponse>;\n  formPromise: Promise<TwoFactorWebAuthnResponse>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorWebAuthnResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    if (this.webAuthnResponse == null || this.keyIdAvailable == null) {\n      // Should never happen.\n      return Promise.reject();\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnRequest);\n    request.deviceResponse = this.webAuthnResponse;\n    request.id = this.keyIdAvailable;\n    request.name = this.name;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorWebAuthn(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  disable() {\n    return super.disable(this.formPromise);\n  }\n\n  async remove(key: Key) {\n    if (this.keysConfiguredCount <= 1 || key.removePromise != null) {\n      return;\n    }\n    const name = key.name != null ? key.name : this.i18nService.t(\"webAuthnkeyX\", key.id as any);\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeU2fConfirmation\"),\n      name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnDeleteRequest);\n    request.id = key.id;\n    try {\n      key.removePromise = this.apiService.deleteTwoFactorWebAuthn(request);\n      const response = await key.removePromise;\n      key.removePromise = null;\n      await this.processResponse(response);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async readKey() {\n    if (this.keyIdAvailable == null) {\n      return;\n    }\n    const request = await this.buildRequestModel(SecretVerificationRequest);\n    try {\n      this.challengePromise = this.apiService.getTwoFactorWebAuthnChallenge(request);\n      const challenge = await this.challengePromise;\n      this.readDevice(challenge);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private readDevice(webAuthnChallenge: ChallengeResponse) {\n    // eslint-disable-next-line\n    console.log(\"listening for key...\");\n    this.resetWebAuthn(true);\n\n    navigator.credentials\n      .create({\n        publicKey: webAuthnChallenge,\n      })\n      .then((data: PublicKeyCredential) => {\n        this.ngZone.run(() => {\n          this.webAuthnListening = false;\n          this.webAuthnResponse = data;\n        });\n      })\n      .catch((err) => {\n        // eslint-disable-next-line\n        console.error(err);\n        this.resetWebAuthn(false);\n        // TODO: Should we display the actual error?\n        this.webAuthnError = true;\n      });\n  }\n\n  private resetWebAuthn(listening = false) {\n    this.webAuthnResponse = null;\n    this.webAuthnError = false;\n    this.webAuthnListening = listening;\n  }\n\n  private processResponse(response: TwoFactorWebAuthnResponse) {\n    this.resetWebAuthn();\n    this.keys = [];\n    this.keyIdAvailable = null;\n    this.name = null;\n    this.keysConfiguredCount = 0;\n    for (let i = 1; i <= 5; i++) {\n      if (response.keys != null) {\n        const key = response.keys.filter((k) => k.id === i);\n        if (key.length > 0) {\n          this.keysConfiguredCount++;\n          this.keys.push({\n            id: i,\n            name: key[0].name,\n            configured: true,\n            migrated: key[0].migrated,\n            removePromise: null,\n          });\n          continue;\n        }\n      }\n      this.keys.push({ id: i, name: null, configured: false, removePromise: null });\n      if (this.keyIdAvailable == null) {\n        this.keyIdAvailable = i;\n      }\n    }\n    this.enabled = response.enabled;\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorYubioOtpRequest extends SecretVerificationRequest {\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faYubiKeyTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faYubiKeyTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>YubiKey</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($event)\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorYubikeyWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorYubikeySupportUsb\" | i18n }}</li>\n              <li>{{ \"twoFactorYubikeySupportMobile\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right mfaType3\" alt=\"YubiKey OTP security key logo\" />\n          <p>{{ \"twoFactorYubikeyAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorYubikeyPlugIn\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySelectKey\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeyTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySaveForm\" | i18n }}</li>\n          </ol>\n          <hr />\n          <div class=\"row\">\n            <div class=\"form-group col-6\" *ngFor=\"let k of keys; let i = index\">\n              <label for=\"key{{ i + 1 }}\">{{ \"yubikeyX\" | i18n: i + 1 }}</label>\n              <input\n                id=\"key{{ i + 1 }}\"\n                type=\"password\"\n                name=\"Key{{ i + 1 }}\"\n                class=\"form-control\"\n                [(ngModel)]=\"k.key\"\n                *ngIf=\"!k.existingKey\"\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <div class=\"d-flex\" *ngIf=\"k.existingKey\">\n                <span class=\"mr-2\">{{ k.existingKey }}</span>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-link text-danger ml-auto\"\n                  (click)=\"remove(k)\"\n                  appA11yTitle=\"{{ 'remove' | i18n }}\"\n                >\n                  <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <strong class=\"d-block mb-2\">{{ \"nfcSupport\" | i18n }}</strong>\n          <div class=\"form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"nfc\" name=\"Nfc\" [(ngModel)]=\"nfc\" />\n            <label class=\"form-check-label\" for=\"nfc\">{{\n              \"twoFactorYubikeySupportsNfc\" | i18n\n            }}</label>\n          </div>\n          <small class=\"form-text text-muted\">{{ \"twoFactorYubikeySupportsNfcDesc\" | i18n }}</small>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [appApiAction]=\"disablePromise\"\n            [disabled]=\"disableBtn.loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"@bitwarden/common/models/request/update-two-factor-yubio-otp.request\";\nimport { TwoFactorYubiKeyResponse } from \"@bitwarden/common/models/response/two-factor-yubi-key.response\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\ninterface Key {\n  key: string;\n  existingKey: string;\n}\n\n@Component({\n  selector: \"app-two-factor-yubikey\",\n  templateUrl: \"two-factor-yubikey.component.html\",\n})\nexport class TwoFactorYubiKeyComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Yubikey;\n  keys: Key[];\n  nfc = false;\n\n  formPromise: Promise<TwoFactorYubiKeyResponse>;\n  disablePromise: Promise<unknown>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorYubiKeyResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    const request = await this.buildRequestModel(UpdateTwoFactorYubioOtpRequest);\n    request.key1 = this.keys != null && this.keys.length > 0 ? this.keys[0].key : null;\n    request.key2 = this.keys != null && this.keys.length > 1 ? this.keys[1].key : null;\n    request.key3 = this.keys != null && this.keys.length > 2 ? this.keys[2].key : null;\n    request.key4 = this.keys != null && this.keys.length > 3 ? this.keys[3].key : null;\n    request.key5 = this.keys != null && this.keys.length > 4 ? this.keys[4].key : null;\n    request.nfc = this.nfc;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorYubiKey(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"yubikeysUpdated\"));\n    });\n  }\n\n  disable() {\n    return super.disable(this.disablePromise);\n  }\n\n  remove(key: Key) {\n    key.existingKey = null;\n    key.key = null;\n  }\n\n  private processResponse(response: TwoFactorYubiKeyResponse) {\n    this.enabled = response.enabled;\n    this.keys = [\n      { key: response.key1, existingKey: this.padRight(response.key1) },\n      { key: response.key2, existingKey: this.padRight(response.key2) },\n      { key: response.key3, existingKey: this.padRight(response.key3) },\n      { key: response.key4, existingKey: this.padRight(response.key4) },\n      { key: response.key5, existingKey: this.padRight(response.key5) },\n    ];\n    this.nfc = response.nfc || !response.enabled;\n  }\n\n  private padRight(str: string, character = \"•\", size = 44) {\n    if (str == null || character == null || str.length >= size) {\n      return str;\n    }\n    const max = (size - str.length) / character.length;\n    for (let i = 0; i < max; i++) {\n      str += character;\n    }\n    return str;\n  }\n}\n","import { Directive, OnInit, TemplateRef, ViewContainerRef } from \"@angular/core\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n/**\n * Hides the element if the user has premium.\n */\n@Directive({\n  selector: \"[appNotPremium]\",\n})\nexport class NotPremiumDirective implements OnInit {\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    const premium = await this.stateService.getCanAccessPremium();\n\n    if (premium) {\n      this.viewContainer.clear();\n    } else {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\n@Component({\n  selector: \"app-premium-badge\",\n  template: `\n    <button type=\"button\" *appNotPremium bitBadge badgeType=\"success\" (click)=\"premiumRequired()\">\n      {{ \"premium\" | i18n }}\n    </button>\n  `,\n})\nexport class PremiumBadgeComponent {\n  constructor(private messagingService: MessagingService) {}\n\n  premiumRequired() {\n    this.messagingService.send(\"premiumRequired\");\n  }\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"twoStepLogin\" | i18n }}</h1>\n</div>\n<p *ngIf=\"!organizationId\">{{ \"twoStepLoginDesc\" | i18n }}</p>\n<p *ngIf=\"organizationId\">{{ \"twoStepLoginOrganizationDesc\" | i18n }}</p>\n<bit-callout type=\"warning\" *ngIf=\"!organizationId\">\n  <p>{{ \"twoStepLoginRecoveryWarning\" | i18n }}</p>\n  <button bitButton buttonType=\"secondary\" (click)=\"recoveryCode()\">\n    {{ \"viewRecoveryCode\" | i18n }}\n  </button>\n</bit-callout>\n<h2 [ngClass]=\"{ 'mt-5': !organizationId }\">\n  {{ \"providers\" | i18n }}\n  <small *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-fw text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </small>\n</h2>\n<bit-callout type=\"warning\" *ngIf=\"showPolicyWarning\">\n  {{ \"twoStepLoginPolicyUserWarning\" | i18n }}\n</bit-callout>\n<ul class=\"list-group list-group-2fa\">\n  <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\">\n    <div class=\"logo-2fa d-flex justify-content-center\">\n      <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n    </div>\n    <div class=\"mx-4\">\n      <h3 class=\"mb-0\">\n        {{ p.name }}\n        <ng-container *ngIf=\"p.enabled\">\n          <i\n            class=\"bwi bwi-check text-success bwi-fw\"\n            title=\"{{ 'enabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"enabled\" | i18n }}</span>\n        </ng-container>\n        <app-premium-badge *ngIf=\"p.premium\"></app-premium-badge>\n      </h3>\n      {{ p.description }}\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        bitButton\n        buttonType=\"secondary\"\n        [disabled]=\"!canAccessPremium && p.premium\"\n        (click)=\"manage(p.type)\"\n      >\n        {{ \"manage\" | i18n }}\n      </button>\n    </div>\n  </li>\n</ul>\n\n<ng-template #authenticatorTemplate></ng-template>\n<ng-template #recoveryTemplate></ng-template>\n<ng-template #duoTemplate></ng-template>\n<ng-template #emailTemplate></ng-template>\n<ng-template #yubikeyTemplate></ng-template>\n<ng-template #webAuthnTemplate></ng-template>\n","import { Component, OnDestroy, OnInit, Type, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { TwoFactorAuthenticatorComponent } from \"./two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"./two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"./two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"./two-factor-recovery.component\";\nimport { TwoFactorWebAuthnComponent } from \"./two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"./two-factor-yubikey.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"two-factor-setup.component.html\",\n})\nexport class TwoFactorSetupComponent implements OnInit, OnDestroy {\n  @ViewChild(\"recoveryTemplate\", { read: ViewContainerRef, static: true })\n  recoveryModalRef: ViewContainerRef;\n  @ViewChild(\"authenticatorTemplate\", { read: ViewContainerRef, static: true })\n  authenticatorModalRef: ViewContainerRef;\n  @ViewChild(\"yubikeyTemplate\", { read: ViewContainerRef, static: true })\n  yubikeyModalRef: ViewContainerRef;\n  @ViewChild(\"duoTemplate\", { read: ViewContainerRef, static: true }) duoModalRef: ViewContainerRef;\n  @ViewChild(\"emailTemplate\", { read: ViewContainerRef, static: true })\n  emailModalRef: ViewContainerRef;\n  @ViewChild(\"webAuthnTemplate\", { read: ViewContainerRef, static: true })\n  webAuthnModalRef: ViewContainerRef;\n\n  organizationId: string;\n  providers: any[] = [];\n  canAccessPremium: boolean;\n  showPolicyWarning = false;\n  loading = true;\n  modal: ModalRef;\n  formPromise: Promise<any>;\n\n  private destroy$ = new Subject<void>();\n  private twoFactorAuthPolicyAppliesToActiveUser: boolean;\n\n  constructor(\n    protected apiService: ApiService,\n    protected modalService: ModalService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n\n    for (const key in TwoFactorProviders) {\n      // eslint-disable-next-line\n      if (!TwoFactorProviders.hasOwnProperty(key)) {\n        continue;\n      }\n\n      const p = (TwoFactorProviders as any)[key];\n      if (this.filterProvider(p.type)) {\n        continue;\n      }\n\n      this.providers.push({\n        type: p.type,\n        name: p.name,\n        description: p.description,\n        enabled: false,\n        premium: p.premium,\n        sort: p.sort,\n      });\n    }\n\n    this.providers.sort((a: any, b: any) => a.sort - b.sort);\n\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.TwoFactorAuthentication)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.twoFactorAuthPolicyAppliesToActiveUser = policyAppliesToActiveUser;\n      });\n\n    await this.load();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load() {\n    this.loading = true;\n    const providerList = await this.getTwoFactorProviders();\n    providerList.data.forEach((p) => {\n      this.providers.forEach((p2) => {\n        if (p.type === p2.type) {\n          p2.enabled = p.enabled;\n        }\n      });\n    });\n    this.evaluatePolicies();\n    this.loading = false;\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.Authenticator: {\n        const authComp = await this.openModal(\n          this.authenticatorModalRef,\n          TwoFactorAuthenticatorComponent\n        );\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        authComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Authenticator);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Yubikey: {\n        const yubiComp = await this.openModal(this.yubikeyModalRef, TwoFactorYubiKeyComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        yubiComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Yubikey);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Duo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Duo);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Email: {\n        const emailComp = await this.openModal(this.emailModalRef, TwoFactorEmailComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        emailComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Email);\n        });\n        break;\n      }\n      case TwoFactorProviderType.WebAuthn: {\n        const webAuthnComp = await this.openModal(\n          this.webAuthnModalRef,\n          TwoFactorWebAuthnComponent\n        );\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        webAuthnComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.WebAuthn);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  recoveryCode() {\n    this.openModal(this.recoveryModalRef, TwoFactorRecoveryComponent);\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorProviders();\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type === TwoFactorProviderType.OrganizationDuo;\n  }\n\n  protected async openModal<T>(ref: ViewContainerRef, type: Type<T>): Promise<T> {\n    const [modal, childComponent] = await this.modalService.openViewRef(type, ref);\n    this.modal = modal;\n\n    return childComponent;\n  }\n\n  protected updateStatus(enabled: boolean, type: TwoFactorProviderType) {\n    if (!enabled && this.modal != null) {\n      this.modal.close();\n    }\n    this.providers.forEach((p) => {\n      if (p.type === type) {\n        p.enabled = enabled;\n      }\n    });\n    this.evaluatePolicies();\n  }\n\n  private async evaluatePolicies() {\n    if (this.organizationId == null && this.providers.filter((p) => p.enabled).length === 1) {\n      this.showPolicyWarning = this.twoFactorAuthPolicyAppliesToActiveUser;\n    } else {\n      this.showPolicyWarning = false;\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { TwoFactorDuoComponent } from \"../../settings/two-factor-duo.component\";\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from \"../../settings/two-factor-setup.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"../../settings/two-factor-setup.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\n  constructor(\n    apiService: ApiService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    private route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(apiService, modalService, messagingService, policyService, stateService);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await super.ngOnInit();\n    });\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.OrganizationDuo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        duoComp.type = TwoFactorProviderType.OrganizationDuo;\n        duoComp.organizationId = this.organizationId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type !== TwoFactorProviderType.OrganizationDuo;\n  }\n}\n","import { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { Observable, Subject, takeUntil, concatMap } from \"rxjs\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SecureNoteType } from \"@bitwarden/common/enums/secureNoteType\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CardView } from \"@bitwarden/common/models/view/card.view\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\nimport { IdentityView } from \"@bitwarden/common/models/view/identity.view\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/login-uri.view\";\nimport { LoginView } from \"@bitwarden/common/models/view/login.view\";\nimport { SecureNoteView } from \"@bitwarden/common/models/view/secure-note.view\";\n\n@Directive()\nexport class AddEditComponent implements OnInit, OnDestroy {\n  @Input() cloneMode = false;\n  @Input() folderId: string = null;\n  @Input() cipherId: string;\n  @Input() type: CipherType;\n  @Input() collectionIds: string[];\n  @Input() organizationId: string = null;\n  @Output() onSavedCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n  @Output() onCancelled = new EventEmitter<CipherView>();\n  @Output() onEditAttachments = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onEditCollections = new EventEmitter<CipherView>();\n  @Output() onGeneratePassword = new EventEmitter();\n  @Output() onGenerateUsername = new EventEmitter();\n\n  editMode = false;\n  cipher: CipherView;\n  folders$: Observable<FolderView[]>;\n  collections: CollectionView[] = [];\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  restorePromise: Promise<any>;\n  checkPasswordPromise: Promise<number>;\n  showPassword = false;\n  showCardNumber = false;\n  showCardCode = false;\n  cipherType = CipherType;\n  typeOptions: any[];\n  cardBrandOptions: any[];\n  cardExpMonthOptions: any[];\n  identityTitleOptions: any[];\n  uriMatchOptions: any[];\n  ownershipOptions: any[] = [];\n  autofillOnPageLoadOptions: any[];\n  currentDate = new Date();\n  allowPersonal = true;\n  reprompt = false;\n  canUseReprompt = true;\n\n  protected destroy$ = new Subject<void>();\n  protected writeableCollections: CollectionView[];\n  private personalOwnershipPolicyAppliesToActiveUser: boolean;\n  private previousCipherId: string;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected stateService: StateService,\n    protected collectionService: CollectionService,\n    protected messagingService: MessagingService,\n    protected eventService: EventService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"typeLogin\"), value: CipherType.Login },\n      { name: i18nService.t(\"typeCard\"), value: CipherType.Card },\n      { name: i18nService.t(\"typeIdentity\"), value: CipherType.Identity },\n      { name: i18nService.t(\"typeSecureNote\"), value: CipherType.SecureNote },\n    ];\n    this.cardBrandOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"Visa\", value: \"Visa\" },\n      { name: \"Mastercard\", value: \"Mastercard\" },\n      { name: \"American Express\", value: \"Amex\" },\n      { name: \"Discover\", value: \"Discover\" },\n      { name: \"Diners Club\", value: \"Diners Club\" },\n      { name: \"JCB\", value: \"JCB\" },\n      { name: \"Maestro\", value: \"Maestro\" },\n      { name: \"UnionPay\", value: \"UnionPay\" },\n      { name: \"RuPay\", value: \"RuPay\" },\n      { name: i18nService.t(\"cardBrandMir\"), value: \"Mir\" },\n      { name: i18nService.t(\"other\"), value: \"Other\" },\n    ];\n    this.cardExpMonthOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"01 - \" + i18nService.t(\"january\"), value: \"1\" },\n      { name: \"02 - \" + i18nService.t(\"february\"), value: \"2\" },\n      { name: \"03 - \" + i18nService.t(\"march\"), value: \"3\" },\n      { name: \"04 - \" + i18nService.t(\"april\"), value: \"4\" },\n      { name: \"05 - \" + i18nService.t(\"may\"), value: \"5\" },\n      { name: \"06 - \" + i18nService.t(\"june\"), value: \"6\" },\n      { name: \"07 - \" + i18nService.t(\"july\"), value: \"7\" },\n      { name: \"08 - \" + i18nService.t(\"august\"), value: \"8\" },\n      { name: \"09 - \" + i18nService.t(\"september\"), value: \"9\" },\n      { name: \"10 - \" + i18nService.t(\"october\"), value: \"10\" },\n      { name: \"11 - \" + i18nService.t(\"november\"), value: \"11\" },\n      { name: \"12 - \" + i18nService.t(\"december\"), value: \"12\" },\n    ];\n    this.identityTitleOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"mr\"), value: i18nService.t(\"mr\") },\n      { name: i18nService.t(\"mrs\"), value: i18nService.t(\"mrs\") },\n      { name: i18nService.t(\"ms\"), value: i18nService.t(\"ms\") },\n      { name: i18nService.t(\"dr\"), value: i18nService.t(\"dr\") },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"defaultMatchDetection\"), value: null },\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.autofillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadUseDefault\"), value: null },\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.PersonalOwnership)\n      .pipe(\n        concatMap(async (policyAppliesToActiveUser) => {\n          this.personalOwnershipPolicyAppliesToActiveUser = policyAppliesToActiveUser;\n          await this.init();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async init() {\n    if (this.ownershipOptions.length) {\n      this.ownershipOptions = [];\n    }\n    if (this.personalOwnershipPolicyAppliesToActiveUser) {\n      this.allowPersonal = false;\n    } else {\n      const myEmail = await this.stateService.getEmail();\n      this.ownershipOptions.push({ name: myEmail, value: null });\n    }\n\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")).forEach((o) => {\n      if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n        this.ownershipOptions.push({ name: o.name, value: o.id });\n      }\n    });\n    if (!this.allowPersonal) {\n      this.organizationId = this.ownershipOptions[0].value;\n    }\n\n    this.writeableCollections = await this.loadCollections();\n\n    this.canUseReprompt = await this.passwordRepromptService.enabled();\n  }\n\n  async load() {\n    this.editMode = this.cipherId != null;\n    if (this.editMode) {\n      this.editMode = true;\n      if (this.cloneMode) {\n        this.cloneMode = true;\n        this.title = this.i18nService.t(\"addItem\");\n      } else {\n        this.title = this.i18nService.t(\"editItem\");\n      }\n    } else {\n      this.title = this.i18nService.t(\"addItem\");\n    }\n\n    const addEditCipherInfo: any = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipher = addEditCipherInfo.cipher;\n      this.collectionIds = addEditCipherInfo.collectionIds;\n    }\n    await this.stateService.setAddEditCipherInfo(null);\n\n    if (this.cipher == null) {\n      if (this.editMode) {\n        const cipher = await this.loadCipher();\n        this.cipher = await cipher.decrypt();\n\n        // Adjust Cipher Name if Cloning\n        if (this.cloneMode) {\n          this.cipher.name += \" - \" + this.i18nService.t(\"clone\");\n          // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n          if (this.cipher.organizationId == null && !this.allowPersonal) {\n            this.cipher.organizationId = this.organizationId;\n          }\n        }\n      } else {\n        this.cipher = new CipherView();\n        this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n        this.cipher.folderId = this.folderId;\n        this.cipher.type = this.type == null ? CipherType.Login : this.type;\n        this.cipher.login = new LoginView();\n        this.cipher.login.uris = [new LoginUriView()];\n        this.cipher.card = new CardView();\n        this.cipher.identity = new IdentityView();\n        this.cipher.secureNote = new SecureNoteView();\n        this.cipher.secureNote.type = SecureNoteType.Generic;\n        this.cipher.reprompt = CipherRepromptType.None;\n      }\n    }\n\n    if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n      await this.organizationChanged();\n      if (\n        this.collectionIds != null &&\n        this.collectionIds.length > 0 &&\n        this.collections.length > 0\n      ) {\n        this.collections.forEach((c) => {\n          if (this.collectionIds.indexOf(c.id) > -1) {\n            (c as any).checked = true;\n          }\n        });\n      }\n    }\n\n    this.folders$ = this.folderService.folderViews$;\n\n    if (this.editMode && this.previousCipherId !== this.cipherId) {\n      this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n    this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.cipher.isDeleted) {\n      return this.restore();\n    }\n\n    if (this.cipher.name == null || this.cipher.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      !this.allowPersonal &&\n      this.cipher.organizationId == null\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"personalOwnershipSubmitError\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.uris != null &&\n      this.cipher.login.uris.length === 1 &&\n      (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n    ) {\n      this.cipher.login.uris = null;\n    }\n\n    // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n    if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n      this.cipher.collectionIds =\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n    }\n\n    // Clear current Cipher Id to trigger \"Add\" cipher flow\n    if (this.cloneMode) {\n      this.cipher.id = null;\n    }\n\n    const cipher = await this.encryptCipher();\n    try {\n      this.formPromise = this.saveCipher(cipher);\n      await this.formPromise;\n      this.cipher.id = cipher.id;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode && !this.cloneMode ? \"editedItem\" : \"addedItem\")\n      );\n      this.onSavedCipher.emit(this.cipher);\n      this.messagingService.send(this.editMode && !this.cloneMode ? \"editedCipher\" : \"addedCipher\");\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  addUri() {\n    if (this.cipher.type !== CipherType.Login) {\n      return;\n    }\n\n    if (this.cipher.login.uris == null) {\n      this.cipher.login.uris = [];\n    }\n\n    this.cipher.login.uris.push(new LoginUriView());\n  }\n\n  removeUri(uri: LoginUriView) {\n    if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n      return;\n    }\n\n    const i = this.cipher.login.uris.indexOf(uri);\n    if (i > -1) {\n      this.cipher.login.uris.splice(i, 1);\n    }\n  }\n\n  getCardExpMonthDisplay() {\n    return this.cardExpMonthOptions.find((x) => x.value == this.cipher.card.expMonth)?.name;\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  cancel() {\n    this.onCancelled.emit(this.cipher);\n  }\n\n  attachments() {\n    this.onEditAttachments.emit(this.cipher);\n  }\n\n  share() {\n    this.onShareCipher.emit(this.cipher);\n  }\n\n  editCollections() {\n    this.onEditCollections.emit(this.cipher);\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.deleteCipher();\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n      this.messagingService.send(\n        this.cipher.isDeleted ? \"permanentlyDeletedCipher\" : \"deletedCipher\"\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.restorePromise = this.restoreCipher();\n      await this.restorePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n      this.messagingService.send(\"restoredCipher\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async generateUsername(): Promise<boolean> {\n    if (this.cipher.login?.username?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwriteUsernameConfirmation\"),\n        this.i18nService.t(\"overwriteUsername\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGenerateUsername.emit();\n    return true;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    if (this.cipher.login?.password?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwritePasswordConfirmation\"),\n        this.i18nService.t(\"overwritePassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGeneratePassword.emit();\n    return true;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"loginPassword\").focus();\n    if (this.editMode && this.showPassword) {\n      this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n    }\n  }\n\n  async toggleCardNumber() {\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardNumberVisible, this.cipherId);\n    }\n  }\n\n  toggleCardCode() {\n    this.showCardCode = !this.showCardCode;\n    document.getElementById(\"cardCode\").focus();\n    if (this.editMode && this.showCardCode) {\n      this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n    }\n  }\n\n  toggleUriOptions(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n  }\n\n  loginUriMatchChanged(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null ? true : u.showOptions;\n  }\n\n  async organizationChanged() {\n    if (this.writeableCollections != null) {\n      this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    }\n    if (this.cipher.organizationId != null) {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.cipher.organizationId\n      );\n      const org = await this.organizationService.get(this.cipher.organizationId);\n      if (org != null) {\n        this.cipher.organizationUseTotp = org.useTotp;\n      }\n    } else {\n      this.collections = [];\n    }\n  }\n\n  async checkPassword() {\n    if (this.checkPasswordPromise != null) {\n      return;\n    }\n\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n    this.checkPasswordPromise = null;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  repromptChanged() {\n    this.reprompt = !this.reprompt;\n    if (this.reprompt) {\n      this.cipher.reprompt = CipherRepromptType.Password;\n    } else {\n      this.cipher.reprompt = CipherRepromptType.None;\n    }\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter((c) => !c.readOnly);\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected encryptCipher() {\n    return this.cipherService.encrypt(this.cipher);\n  }\n\n  protected saveCipher(cipher: Cipher) {\n    return this.cipher.id == null\n      ? this.cipherService.createWithServer(cipher)\n      : this.cipherService.updateWithServer(cipher);\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n}\n","import { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { FieldView } from \"@bitwarden/common/models/view/field.view\";\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  @Input() thisCipherType: CipherType;\n  @Input() editMode: boolean;\n\n  addFieldType: FieldType = FieldType.Text;\n  addFieldTypeOptions: any[];\n  addFieldLinkedTypeOption: any;\n  linkedFieldOptions: any[] = [];\n\n  cipherType = CipherType;\n  fieldType = FieldType;\n  eventType = EventType;\n\n  constructor(private i18nService: I18nService, private eventService: EventService) {\n    this.addFieldTypeOptions = [\n      { name: i18nService.t(\"cfTypeText\"), value: FieldType.Text },\n      { name: i18nService.t(\"cfTypeHidden\"), value: FieldType.Hidden },\n      { name: i18nService.t(\"cfTypeBoolean\"), value: FieldType.Boolean },\n    ];\n    this.addFieldLinkedTypeOption = {\n      name: this.i18nService.t(\"cfTypeLinked\"),\n      value: FieldType.Linked,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.thisCipherType != null) {\n      this.setLinkedFieldOptions();\n\n      if (!changes.thisCipherType.firstChange) {\n        this.resetCipherLinkedFields();\n      }\n    }\n  }\n\n  addField() {\n    if (this.cipher.fields == null) {\n      this.cipher.fields = [];\n    }\n\n    const f = new FieldView();\n    f.type = this.addFieldType;\n    f.newField = true;\n\n    if (f.type === FieldType.Linked) {\n      f.linkedId = this.linkedFieldOptions[0].value;\n    }\n\n    this.cipher.fields.push(f);\n  }\n\n  removeField(field: FieldView) {\n    const i = this.cipher.fields.indexOf(field);\n    if (i > -1) {\n      this.cipher.fields.splice(i, 1);\n    }\n  }\n\n  toggleFieldValue(field: FieldView) {\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (this.editMode && f.showValue) {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipher.id);\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n  }\n\n  private setLinkedFieldOptions() {\n    if (this.cipher.linkedFieldOptions == null) {\n      return;\n    }\n\n    const options: any = [];\n    this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n      options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id })\n    );\n    this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  private resetCipherLinkedFields() {\n    if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n      return;\n    }\n\n    // Delete any Linked custom fields if the item type does not support them\n    if (this.cipher.linkedFieldOptions == null) {\n      this.cipher.fields = this.cipher.fields.filter((f) => f.type !== FieldType.Linked);\n      return;\n    }\n\n    this.cipher.fields\n      .filter((f) => f.type === FieldType.Linked)\n      .forEach((f) => (f.linkedId = this.linkedFieldOptions[0].value));\n  }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n  selector: \"input[type=checkbox][appTrueFalseValue]\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TrueFalseValueDirective),\n      multi: true,\n    },\n  ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n  @Input() trueValue = true;\n  @Input() falseValue = false;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener(\"change\", [\"$event\"])\n  onHostChange(ev: any) {\n    this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  writeValue(obj: any): void {\n    if (obj === this.trueValue) {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", true);\n    } else {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", false);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    /* nothing */\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    /* nothing */\n  }\n\n  private propagateChange = (_: any) => {\n    /* nothing */\n  };\n}\n","<ng-container>\n  <h3 class=\"mt-4\">{{ \"customFields\" | i18n }}</h3>\n  <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n    <div\n      role=\"group\"\n      class=\"row\"\n      cdkDrag\n      *ngFor=\"let f of cipher.fields; let i = index; trackBy: trackByFunction\"\n      attr.aria-label=\"{{ f.name }}\"\n    >\n      <div class=\"col-5 form-group\">\n        <div class=\"d-flex\">\n          <label for=\"fieldName{{ i }}\">{{ \"name\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/custom-fields/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <input\n          id=\"fieldName{{ i }}\"\n          type=\"text\"\n          name=\"Field.Name{{ i }}\"\n          [(ngModel)]=\"f.name\"\n          class=\"form-control\"\n          appInputVerbatim\n          [disabled]=\"cipher.isDeleted || viewOnly\"\n          [readonly]=\"!cipher.edit && editMode\"\n        />\n      </div>\n      <div class=\"col-7 form-group\">\n        <label for=\"fieldValue{{ i }}\">{{ \"value\" | i18n }}</label>\n        <div class=\"d-flex align-items-center\">\n          <!-- Text -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Text\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              appInputVerbatim\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              [readonly]=\"!cipher.edit && editMode\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', 'Field')\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Hidden -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Hidden\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              type=\"{{ f.showValue ? 'text' : 'password' }}\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              class=\"form-control text-monospace\"\n              appInputVerbatim\n              autocomplete=\"new-password\"\n              [disabled]=\"cipher.isDeleted || viewOnly || (!cipher.viewPassword && !f.newField)\"\n              [readonly]=\"!cipher.edit && editMode\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleFieldValue(f)\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !f.showValue, 'bwi-eye-slash': f.showValue }\"\n                >\n                </i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', f.type === fieldType.Hidden ? 'H_Field' : 'Field')\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Linked -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Linked\">\n            <select\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              class=\"form-control\"\n              [(ngModel)]=\"f.linkedId\"\n              *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            >\n              <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"flex-fill\">\n            <!-- Boolean -->\n            <input\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              type=\"checkbox\"\n              [(ngModel)]=\"f.value\"\n              *ngIf=\"f.type === fieldType.Boolean\"\n              appTrueFalseValue\n              trueValue=\"true\"\n              falseValue=\"false\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n          </div>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-danger ml-2\"\n            (click)=\"removeField(f)\"\n            appA11yTitle=\"{{ 'remove' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\"\n          >\n            <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-muted cursor-move\"\n            appA11yTitle=\"{{ 'dragToSort' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\"\n          >\n            <i class=\"bwi bwi-hamburger bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Add new custom field -->\n  <a\n    href=\"#\"\n    appStopClick\n    (click)=\"addField()\"\n    class=\"d-inline-block mb-2\"\n    *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\"\n  >\n    <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomField\" | i18n }}\n  </a>\n  <div class=\"row\" *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\">\n    <div class=\"col-5\">\n      <label for=\"addFieldType\" class=\"sr-only\">{{ \"type\" | i18n }}</label>\n      <select id=\"addFieldType\" class=\"form-control\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\">\n        <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        <option\n          *ngIf=\"cipher.linkedFieldOptions != null\"\n          [ngValue]=\"addFieldLinkedTypeOption.value\"\n        >\n          {{ addFieldLinkedTypeOption.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n","import { Component, Input } from \"@angular/core\";\n\nimport { AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent } from \"@bitwarden/angular/components/add-edit-custom-fields.component\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-vault-add-edit-custom-fields\",\n  templateUrl: \"add-edit-custom-fields.component.html\",\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n  @Input() viewOnly: boolean;\n  @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n  constructor(i18nService: I18nService, eventService: EventService) {\n    super(i18nService, eventService);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"cipherAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"cipherAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"cipher\">\n        <app-callout type=\"info\" *ngIf=\"allowOwnershipAssignment() && !allowPersonal\">\n          {{ \"personalOwnershipPolicyInEffect\" | i18n }}\n        </app-callout>\n        <div class=\"row\" *ngIf=\"!editMode && !viewOnly\">\n          <div class=\"col-6 form-group\">\n            <label for=\"type\">{{ \"whatTypeOfItem\" | i18n }}</label>\n            <select\n              id=\"type\"\n              name=\"Type\"\n              [(ngModel)]=\"cipher.type\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted\"\n              appAutofocus\n            >\n              <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"cipher.name\"\n              required\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"col-6 form-group\" *ngIf=\"!organization\">\n            <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n            <select\n              id=\"folder\"\n              name=\"FolderId\"\n              [(ngModel)]=\"cipher.folderId\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            >\n              <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n            </select>\n          </div>\n        </div>\n        <!-- Login -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Login\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"loginUsername\">{{ \"username\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginUsername\"\n                  class=\"form-control\"\n                  type=\"text\"\n                  name=\"Login.Username\"\n                  [(ngModel)]=\"cipher.login.username\"\n                  appInputVerbatim\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                  [readonly]=\"!cipher.edit && editMode\"\n                />\n                <div class=\"input-group-append\" *ngIf=\"!cipher.isDeleted\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n                    (click)=\"copy(cipher.login.username, 'username', 'Username')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-6 form-group\">\n              <div class=\"d-flex\">\n                <label for=\"loginPassword\">{{ \"password\" | i18n }}</label>\n                <div class=\"ml-auto d-flex\" *ngIf=\"!cipher.isDeleted && !viewOnly\">\n                  <a\n                    href=\"#\"\n                    class=\"d-block mr-2 bwi-icon-above-input\"\n                    appStopClick\n                    appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                    (click)=\"generatePassword()\"\n                    *ngIf=\"cipher.viewPassword && !(!cipher.edit && editMode)\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-fw bwi-generate\" aria-hidden=\"true\"></i>\n                  </a>\n                  <a\n                    href=\"#\"\n                    class=\"d-block bwi-icon-above-input\"\n                    #checkPasswordBtn\n                    appStopClick\n                    appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n                    (click)=\"checkPassword()\"\n                    [appApiAction]=\"checkPasswordPromise\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-check-circle\"\n                      [hidden]=\"checkPasswordBtn.loading\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-spinner bwi-spin\"\n                      aria-hidden=\"true\"\n                      [hidden]=\"!checkPasswordBtn.loading\"\n                      title=\"{{ 'loading' | i18n }}\"\n                    ></i>\n                  </a>\n                </div>\n              </div>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginPassword\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Login.Password\"\n                  [(ngModel)]=\"cipher.login.password\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n                  [readonly]=\"!cipher.edit && editMode\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePassword()\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                    (click)=\"copy(cipher.login.password, 'password', 'Password')\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"tw-flex tw-flex-row\">\n            <div class=\"tw-mb-4 tw-w-1/2\">\n              <label for=\"loginTotp\">{{ \"authenticatorKeyTotp\" | i18n }}</label>\n              <input\n                id=\"loginTotp\"\n                type=\"{{ cipher.viewPassword ? 'text' : 'password' }}\"\n                name=\"Login.Totp\"\n                class=\"form-control text-monospace\"\n                [(ngModel)]=\"cipher.login.totp\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"tw-mb-4 tw-ml-4 tw-flex tw-w-1/2 tw-items-end\" [ngClass]=\"{ low: totpLow }\">\n              <div\n                class=\"totp tw-flex tw-flex-row tw-items-center\"\n                *ngIf=\"!cipher.login.totp || !totpCode\"\n              >\n                <span class=\"totp-countdown\">\n                  <span class=\"totp-sec tw-text-muted\">15</span>\n                  <svg>\n                    <g>\n                      <circle\n                        class=\"totp-circle-muted inner\"\n                        r=\"12.6\"\n                        cy=\"16\"\n                        cx=\"16\"\n                        opacity=\"0.25\"\n                        [ngStyle]=\"{ 'stroke-dashoffset.px': 40 }\"\n                      ></circle>\n                      <circle\n                        class=\"totp-circle-muted outer\"\n                        opacity=\"0.25\"\n                        r=\"14\"\n                        cy=\"16\"\n                        cx=\"16\"\n                      ></circle>\n                    </g>\n                  </svg>\n                </span>\n                <span\n                  class=\"totp-code tw-mr-3 tw-ml-2 tw-text-muted\"\n                  title=\"{{ 'verificationCodeTotp' | i18n }}\"\n                  >--- ---</span\n                >\n                <i class=\"bwi bwi-lg bwi-clone tw-text-muted\" aria-hidden=\"true\"></i>\n              </div>\n              <div class=\"tw-pb-2\" *ngIf=\"!cipher.login.totp || !totpCode\">\n                <app-premium-badge\n                  *ngIf=\"!organization && !cipher.organizationId\"\n                  class=\"ml-3\"\n                ></app-premium-badge>\n                <a\n                  href=\"#\"\n                  appStopClick\n                  bitBadge\n                  badgeType=\"primary\"\n                  class=\"tw-ml-4\"\n                  (click)=\"upgradeOrganization()\"\n                  *ngIf=\"\n                    (organization && !organization.useTotp) ||\n                    (!organization &&\n                      !canAccessPremium &&\n                      cipher.organizationId &&\n                      !cipher.organizationUseTotp)\n                  \"\n                >\n                  {{ \"upgrade\" | i18n }}\n                </a>\n              </div>\n              <div\n                *ngIf=\"cipher.login.totp && totpCode\"\n                class=\"totp tw-flex tw-flex-row tw-items-center\"\n              >\n                <span class=\"totp-countdown\">\n                  <span class=\"totp-sec\">{{ totpSec }}</span>\n                  <svg>\n                    <g>\n                      <circle\n                        class=\"totp-circle inner\"\n                        r=\"12.6\"\n                        cy=\"16\"\n                        cx=\"16\"\n                        [ngStyle]=\"{ 'stroke-dashoffset.px': totpDash }\"\n                      ></circle>\n                      <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n                    </g>\n                  </svg>\n                </span>\n                <span\n                  class=\"totp-code tw-mr-2 tw-ml-2 tw-mt-1\"\n                  title=\"{{ 'verificationCodeTotp' | i18n }}\"\n                  >{{ totpCodeFormatted }}</span\n                >\n                <button\n                  type=\"button\"\n                  class=\"tw-items-center tw-border-none tw-bg-transparent tw-text-primary-500\"\n                  appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n                  (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"\n                >\n                  <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <ng-container *ngIf=\"cipher.login.hasUris\">\n            <div\n              role=\"group\"\n              class=\"row\"\n              *ngFor=\"let u of cipher.login.uris; let i = index; trackBy: trackByFunction\"\n              attr.aria-label=\"{{ 'uriPosition' | i18n: i + 1 }}\"\n            >\n              <div class=\"col-7 form-group\">\n                <label for=\"loginUri{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n                <div class=\"input-group\">\n                  <input\n                    class=\"form-control\"\n                    id=\"loginUri{{ i }}\"\n                    type=\"text\"\n                    name=\"Login.Uris[{{ i }}].Uri\"\n                    [(ngModel)]=\"u.uri\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                    placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                    appInputVerbatim\n                  />\n                  <div class=\"input-group-append\">\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'launch' | i18n }}\"\n                      (click)=\"launch(u)\"\n                      [disabled]=\"!u.canLaunch\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n                    </button>\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'copyUri' | i18n }}\"\n                      (click)=\"copy(u.uri, 'uri', 'URI')\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-5 form-group\">\n                <div class=\"d-flex\">\n                  <label for=\"loginUriMatch{{ i }}\">\n                    {{ \"matchDetection\" | i18n }}\n                  </label>\n                  <a\n                    class=\"ml-auto\"\n                    href=\"https://bitwarden.com/help/uri-match-detection/\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n                  >\n                    <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n                  </a>\n                </div>\n                <div class=\"d-flex\">\n                  <select\n                    class=\"form-control overflow-hidden\"\n                    id=\"loginUriMatch{{ i }}\"\n                    name=\"Login.Uris[{{ i }}].Match\"\n                    [(ngModel)]=\"u.match\"\n                    (change)=\"loginUriMatchChanged(u)\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                  >\n                    <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">\n                      {{ o.name }}\n                    </option>\n                  </select>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-link text-danger ml-2\"\n                    (click)=\"removeUri(u)\"\n                    appA11yTitle=\"{{ 'remove' | i18n }}\"\n                    *ngIf=\"!cipher.isDeleted && !viewOnly\"\n                  >\n                    <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </ng-container>\n          <a\n            href=\"#\"\n            appStopClick\n            (click)=\"addUri()\"\n            class=\"d-inline-block mb-3\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\"\n          >\n            <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n          </a>\n        </ng-container>\n        <!-- Card -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Card\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCardholderName\">{{ \"cardholderName\" | i18n }}</label>\n              <input\n                id=\"cardCardholderName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.CardCardholderName\"\n                [(ngModel)]=\"cipher.card.cardholderName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"cardBrand\">{{ \"brand\" | i18n }}</label>\n              <span *ngIf=\"!(!cipher.edit && editMode); else readonlyCardBrand\">\n                <select\n                  id=\"cardBrand\"\n                  class=\"form-control\"\n                  name=\"Card.Brand\"\n                  [(ngModel)]=\"cipher.card.brand\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                >\n                  <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">\n                    {{ o.name }}\n                  </option>\n                </select>\n              </span>\n              <ng-template #readonlyCardBrand>\n                <input\n                  id=\"cardBrand\"\n                  class=\"form-control\"\n                  name=\"Card.Brand\"\n                  type=\"text\"\n                  [readonly]=\"true\"\n                  [value]=\"cipher.card.brand\"\n                />\n              </ng-template>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardNumber\">{{ \"number\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardNumber\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardNumber ? 'text' : 'password' }}\"\n                  name=\"Card.Number\"\n                  [(ngModel)]=\"cipher.card.number\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                  [readonly]=\"!cipher.edit && editMode\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardNumber()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{\n                        'bwi-eye': !showCardNumber,\n                        'bwi-eye-slash': showCardNumber\n                      }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n                    (click)=\"copy(cipher.card.number, 'number', 'Number')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpMonth\">{{ \"expirationMonth\" | i18n }}</label>\n              <span *ngIf=\"!(!cipher.edit && editMode); else readonlyCardExpMonth\">\n                <select\n                  id=\"cardExpMonth\"\n                  class=\"form-control\"\n                  name=\"Card.ExpMonth\"\n                  [(ngModel)]=\"cipher.card.expMonth\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                >\n                  <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">\n                    {{ o.name }}\n                  </option>\n                </select>\n              </span>\n              <ng-template #readonlyCardExpMonth>\n                <input\n                  id=\"cardExpMonth\"\n                  class=\"form-control\"\n                  type=\"text\"\n                  name=\"Card.ExpMonth\"\n                  [readonly]=\"true\"\n                  [value]=\"getCardExpMonthDisplay()\"\n                />\n              </ng-template>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpYear\">{{ \"expirationYear\" | i18n }}</label>\n              <input\n                id=\"cardExpYear\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.ExpYear\"\n                [(ngModel)]=\"cipher.card.expYear\"\n                placeholder=\"{{ 'ex' | i18n }} 2019\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCode\">{{ \"securityCode\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardCode\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardCode ? 'text' : 'password' }}\"\n                  name=\"Card.Code\"\n                  [(ngModel)]=\"cipher.card.code\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                  [readonly]=\"!cipher.edit && editMode\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardCode()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'securityCode' | i18n }}\"\n                    (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <!-- Identity -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Identity\">\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idTitle\">{{ \"title\" | i18n }}</label>\n              <span *ngIf=\"!(!cipher.edit && editMode); else readonlyIdTitle\">\n                <select\n                  id=\"idTitle\"\n                  class=\"form-control\"\n                  name=\"Identity.Title\"\n                  [(ngModel)]=\"cipher.identity.title\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                >\n                  <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">\n                    {{ o.name }}\n                  </option>\n                </select>\n              </span>\n              <ng-template #readonlyIdTitle>\n                <input\n                  id=\"idTitle\"\n                  class=\"form-control\"\n                  name=\"Identity.Title\"\n                  type=\"text\"\n                  [readonly]=\"true\"\n                  [value]=\"cipher.identity.title\"\n                />\n              </ng-template>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idFirstName\">{{ \"firstName\" | i18n }}</label>\n              <input\n                id=\"idFirstName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.FirstName\"\n                [(ngModel)]=\"cipher.identity.firstName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idMiddleName\">{{ \"middleName\" | i18n }}</label>\n              <input\n                id=\"idMiddleName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.MiddleName\"\n                [(ngModel)]=\"cipher.identity.middleName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLastName\">{{ \"lastName\" | i18n }}</label>\n              <input\n                id=\"idLastName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LastName\"\n                [(ngModel)]=\"cipher.identity.lastName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idUsername\">{{ \"username\" | i18n }}</label>\n              <input\n                id=\"idUsername\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Username\"\n                [(ngModel)]=\"cipher.identity.username\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idCompany\">{{ \"company\" | i18n }}</label>\n              <input\n                id=\"idCompany\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Company\"\n                [(ngModel)]=\"cipher.identity.company\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idSsn\">{{ \"ssn\" | i18n }}</label>\n              <input\n                id=\"idSsn\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.SSN\"\n                [(ngModel)]=\"cipher.identity.ssn\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idPassportNumber\">{{ \"passportNumber\" | i18n }}</label>\n              <input\n                id=\"idPassportNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PassportNumber\"\n                [(ngModel)]=\"cipher.identity.passportNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLicenseNumber\">{{ \"licenseNumber\" | i18n }}</label>\n              <input\n                id=\"idLicenseNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LicenseNumber\"\n                [(ngModel)]=\"cipher.identity.licenseNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idEmail\">{{ \"email\" | i18n }}</label>\n              <input\n                id=\"idEmail\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"email\"\n                name=\"Identity.Email\"\n                [(ngModel)]=\"cipher.identity.email\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPhone\">{{ \"phone\" | i18n }}</label>\n              <input\n                id=\"idPhone\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"tel\"\n                name=\"Identity.Phone\"\n                [(ngModel)]=\"cipher.identity.phone\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress1\">{{ \"address1\" | i18n }}</label>\n              <input\n                id=\"idAddress1\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address1\"\n                [(ngModel)]=\"cipher.identity.address1\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress2\">{{ \"address2\" | i18n }}</label>\n              <input\n                id=\"idAddress2\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address2\"\n                [(ngModel)]=\"cipher.identity.address2\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress3\">{{ \"address3\" | i18n }}</label>\n              <input\n                id=\"idAddress3\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address3\"\n                [(ngModel)]=\"cipher.identity.address3\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idCity\">{{ \"cityTown\" | i18n }}</label>\n              <input\n                id=\"idCity\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.City\"\n                [(ngModel)]=\"cipher.identity.city\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idState\">{{ \"stateProvince\" | i18n }}</label>\n              <input\n                id=\"idState\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.State\"\n                [(ngModel)]=\"cipher.identity.state\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n              <input\n                id=\"idPostalCode\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PostalCode\"\n                [(ngModel)]=\"cipher.identity.postalCode\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idCountry\">{{ \"country\" | i18n }}</label>\n              <input\n                id=\"idCountry\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Country\"\n                [(ngModel)]=\"cipher.identity.country\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n        </ng-container>\n        <div class=\"form-group\">\n          <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n          <textarea\n            id=\"notes\"\n            name=\"Notes\"\n            rows=\"6\"\n            [(ngModel)]=\"cipher.notes\"\n            [disabled]=\"cipher.isDeleted || viewOnly\"\n            [readonly]=\"!cipher.edit && editMode\"\n            class=\"form-control\"\n          ></textarea>\n        </div>\n        <app-vault-add-edit-custom-fields\n          *ngIf=\"!(!cipher.hasFields && !cipher.edit && editMode)\"\n          [cipher]=\"cipher\"\n          [thisCipherType]=\"cipher.type\"\n          [viewOnly]=\"viewOnly\"\n          [copy]=\"copy.bind(this)\"\n          [editMode]=\"editMode\"\n        ></app-vault-add-edit-custom-fields>\n        <ng-container *ngIf=\"allowOwnershipAssignment()\">\n          <h3 class=\"mt-4\">{{ \"ownership\" | i18n }}</h3>\n          <div class=\"row\">\n            <div class=\"col-5\">\n              <label for=\"organizationId\">{{ \"whoOwnsThisItem\" | i18n }}</label>\n              <select\n                id=\"organizationId\"\n                class=\"form-control\"\n                name=\"OrganizationId\"\n                [(ngModel)]=\"cipher.organizationId\"\n                (change)=\"organizationChanged()\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n          <h3 class=\"mt-4\">{{ \"collections\" | i18n }}</h3>\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <ng-container *ngIf=\"collections && collections.length\">\n            <div class=\"form-check\" *ngFor=\"let c of collections; let i = index\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"c.checked\"\n                id=\"collection-{{ i }}\"\n                name=\"Collection[{{ i }}].Checked\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n              <label class=\"form-check-label\" for=\"collection-{{ i }}\">{{ c.name }}</label>\n            </div>\n          </ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"editMode\">\n          <div class=\"small text-muted mt-4\">\n            <div>\n              <b class=\"font-weight-semibold\">{{ \"dateUpdated\" | i18n }}:</b>\n              {{ cipher.revisionDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"cipher.creationDate\">\n              <b class=\"font-weight-semibold\">{{ \"dateCreated\" | i18n }}:</b>\n              {{ cipher.creationDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"showRevisionDate\">\n              <b class=\"font-weight-semibold\">{{ \"datePasswordUpdated\" | i18n }}:</b>\n              {{ cipher.passwordRevisionDisplayDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"hasPasswordHistory\">\n              <b class=\"font-weight-semibold\">{{ \"passwordHistory\" | i18n }}:</b>\n              <a href=\"#\" appStopClick (click)=\"viewHistory()\" title=\"{{ 'view' | i18n }}\">\n                {{ cipher.passwordHistory.length }}\n              </a>\n            </div>\n            <div class=\"ml-3\" *ngIf=\"viewingPasswordHistory\">\n              <div *ngFor=\"let ph of cipher.passwordHistory\">\n                {{ ph.lastUsedDate | date: \"short\" }} -\n                <span class=\"generated-wrapper text-monospace ml-2\">{{ ph.password }}</span>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"canUseReprompt\">\n          <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [ngModel]=\"reprompt\"\n              (change)=\"repromptChanged()\"\n              id=\"passwordPrompt\"\n              name=\"passwordPrompt\"\n              [disabled]=\"cipher.isDeleted || viewOnly || (!cipher.edit && editMode)\"\n            />\n            <label class=\"form-check-label\" for=\"passwordPrompt\">{{\n              \"passwordPrompt\" | i18n\n            }}</label>\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/managing-items/#protect-individual-items\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (cipher?.isDeleted ? \"restore\" : \"save\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ (viewOnly ? \"close\" : \"cancel\") | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"cipher && !viewOnly\">\n          <button\n            *ngIf=\"!organization && !cipher.isDeleted\"\n            type=\"button\"\n            (click)=\"toggleFavorite()\"\n            class=\"btn btn-link\"\n            appA11yTitle=\"{{ (cipher.favorite ? 'unfavorite' : 'favorite') | i18n }}\"\n          >\n            <i\n              class=\"bwi bwi-lg\"\n              [ngClass]=\"{ 'bwi-star-f': cipher.favorite, 'bwi-star': !cipher.favorite }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ (cipher.isDeleted ? 'permanentlyDelete' : 'delete') | i18n }}\"\n            *ngIf=\"editMode && !cloneMode && !(!cipher.edit && editMode)\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/add-edit.component\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/login-uri.view\";\n\n@Component({\n  selector: \"app-vault-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent implements OnInit, OnDestroy {\n  canAccessPremium: boolean;\n  totpCode: string;\n  totpCodeFormatted: string;\n  totpDash: number;\n  totpSec: number;\n  totpLow: boolean;\n  showRevisionDate = false;\n  hasPasswordHistory = false;\n  viewingPasswordHistory = false;\n  viewOnly = false;\n\n  protected totpInterval: number;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    protected totpService: TotpService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected messagingService: MessagingService,\n    eventService: EventService,\n    protected policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      messagingService,\n      eventService,\n      policyService,\n      logService,\n      passwordRepromptService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n    this.showRevisionDate = this.cipher.passwordRevisionDisplayDate != null;\n    this.hasPasswordHistory = this.cipher.hasPasswordHistory;\n    this.cleanUp();\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.totp &&\n      (this.cipher.organizationUseTotp || this.canAccessPremium)\n    ) {\n      await this.totpUpdateCode();\n      const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n      await this.totpTick(interval);\n\n      this.totpInterval = window.setInterval(async () => {\n        await this.totpTick(interval);\n      }, 1000);\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n\n  toggleFavorite() {\n    this.cipher.favorite = !this.cipher.favorite;\n  }\n\n  launch(uri: LoginUriView) {\n    if (!uri.canLaunch) {\n      return;\n    }\n\n    this.platformUtilsService.launchUri(uri.launchUri);\n  }\n\n  copy(value: string, typeI18nKey: string, aType: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (this.editMode) {\n      if (typeI18nKey === \"password\") {\n        this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n      } else if (typeI18nKey === \"securityCode\") {\n        this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n      } else if (aType === \"H_Field\") {\n        this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n      }\n    }\n  }\n\n  async generatePassword(): Promise<boolean> {\n    const confirmed = await super.generatePassword();\n    if (confirmed) {\n      const options = (await this.passwordGenerationService.getOptions())?.[0] ?? {};\n      this.cipher.login.password = await this.passwordGenerationService.generatePassword(options);\n    }\n    return confirmed;\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  upgradeOrganization() {\n    this.messagingService.send(\"upgradeOrganization\", {\n      organizationId: this.cipher.organizationId,\n    });\n  }\n\n  showGetPremium() {\n    if (this.canAccessPremium) {\n      return;\n    }\n    if (this.cipher.organizationUseTotp) {\n      this.upgradeOrganization();\n    } else {\n      this.premiumRequired();\n    }\n  }\n\n  viewHistory() {\n    this.viewingPasswordHistory = !this.viewingPasswordHistory;\n  }\n\n  protected cleanUp() {\n    if (this.totpInterval) {\n      window.clearInterval(this.totpInterval);\n    }\n  }\n\n  protected async totpUpdateCode() {\n    if (\n      this.cipher == null ||\n      this.cipher.type !== CipherType.Login ||\n      this.cipher.login.totp == null\n    ) {\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n      return;\n    }\n\n    this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n    if (this.totpCode != null) {\n      if (this.totpCode.length > 4) {\n        const half = Math.floor(this.totpCode.length / 2);\n        this.totpCodeFormatted =\n          this.totpCode.substring(0, half) + \" \" + this.totpCode.substring(half);\n      } else {\n        this.totpCodeFormatted = this.totpCode;\n      }\n    } else {\n      this.totpCodeFormatted = null;\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n    }\n  }\n\n  protected allowOwnershipAssignment() {\n    return (\n      (!this.editMode || this.cloneMode) &&\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    );\n  }\n\n  private async totpTick(intervalSeconds: number) {\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const mod = epoch % intervalSeconds;\n\n    this.totpSec = intervalSeconds - mod;\n    this.totpDash = +(Math.round(((78.6 / intervalSeconds) * mod + \"e+2\") as any) + \"e-2\");\n    this.totpLow = this.totpSec <= 7;\n    if (mod === 0) {\n      await this.totpUpdateCode();\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipher.data\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherCreateRequest } from \"@bitwarden/common/models/request/cipher-create.request\";\nimport { CipherRequest } from \"@bitwarden/common/models/request/cipher.request\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../../vault/add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  organization: Organization;\n  originalCipher: Cipher = null;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    private apiService: ApiService,\n    messagingService: MessagingService,\n    eventService: EventService,\n    policyService: PolicyService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  protected allowOwnershipAssignment() {\n    if (\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    ) {\n      if (this.organization != null) {\n        return this.cloneMode && this.organization.canEditAnyCollection;\n      } else {\n        return !this.editMode || this.cloneMode;\n      }\n    }\n    return false;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    const data = new CipherData(response);\n    this.originalCipher = new Cipher(data);\n    return new Cipher(data);\n  }\n\n  protected encryptCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.encryptCipher();\n    }\n    return this.cipherService.encrypt(this.cipher, null, this.originalCipher);\n  }\n\n  protected async saveCipher(cipher: Cipher) {\n    if (!this.organization.canEditAnyCollection || cipher.organizationId == null) {\n      return super.saveCipher(cipher);\n    }\n    if (this.editMode && !this.cloneMode) {\n      const request = new CipherRequest(cipher);\n      return this.apiService.putCipherAdmin(this.cipherId, request);\n    } else {\n      const request = new CipherCreateRequest(cipher);\n      return this.apiService.postCipherAdmin(request);\n    }\n  }\n\n  protected async deleteCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher();\n    }\n    return this.cipher.isDeleted\n      ? this.apiService.deleteCipherAdmin(this.cipherId)\n      : this.apiService.putDeleteCipherAdmin(this.cipherId);\n  }\n}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { AddEditComponent as OrgAddEditComponent } from \"../../organizations/vault/add-edit.component\";\nimport { AddEditComponent } from \"../../vault/add-edit.component\";\n\n@Directive()\nexport class CipherReportComponent {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n\n  loading = false;\n  hasLoaded = false;\n  ciphers: CipherView[] = [];\n  organization: Organization;\n\n  constructor(\n    private modalService: ModalService,\n    protected messagingService: MessagingService,\n    public requiresPaid: boolean,\n    private stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async load() {\n    this.loading = true;\n    await this.setCiphers();\n    this.loading = false;\n    this.hasLoaded = true;\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (!(await this.repromptCipher(cipher))) {\n      return;\n    }\n\n    const type = this.organization != null ? OrgAddEditComponent : AddEditComponent;\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      type,\n      this.cipherAddEditModalRef,\n      (comp: OrgAddEditComponent | AddEditComponent) => {\n        if (this.organization != null) {\n          (comp as OrgAddEditComponent).organization = this.organization;\n          comp.organizationId = this.organization.id;\n        }\n\n        comp.cipherId = cipher == null ? null : cipher.id;\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n\n  protected async checkAccess(): Promise<boolean> {\n    if (this.organization != null) {\n      // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n      // since all paid plans include useTotp\n      if (this.requiresPaid && !this.organization.useTotp) {\n        this.messagingService.send(\"upgradeOrganization\", { organizationId: this.organization.id });\n        return false;\n      }\n    }\n    return true;\n  }\n\n  protected async setCiphers() {\n    this.ciphers = [];\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appFallbackSrc]\",\n})\nexport class FallbackSrcDirective {\n  @Input(\"appFallbackSrc\") appFallbackSrc: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"error\") onError() {\n    this.el.nativeElement.src = this.appFallbackSrc;\n  }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n  <img\n    [src]=\"image\"\n    appFallbackSrc=\"{{ fallbackImage }}\"\n    *ngIf=\"imageEnabled && image\"\n    alt=\"\"\n    decoding=\"async\"\n    loading=\"lazy\"\n  />\n  <i class=\"bwi bwi-fw bwi-lg {{ icon }}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n/**\n * Provides a mapping from supported card brands to\n * the filenames of icon that should be present in images/cards folder of clients.\n */\nconst cardIcons: Record<string, string> = {\n  Visa: \"card-visa\",\n  Mastercard: \"card-mastercard\",\n  Amex: \"card-amex\",\n  Discover: \"card-discover\",\n  \"Diners Club\": \"card-diners-club\",\n  JCB: \"card-jcb\",\n  Maestro: \"card-maestro\",\n  UnionPay: \"card-union-pay\",\n  RuPay: \"card-ru-pay\",\n  Mir: \"card-mir\",\n};\n\n@Component({\n  selector: \"app-vault-icon\",\n  templateUrl: \"icon.component.html\",\n})\nexport class IconComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  icon: string;\n  image: string;\n  fallbackImage: string;\n  imageEnabled: boolean;\n\n  private iconsUrl: string;\n\n  constructor(environmentService: EnvironmentService, private stateService: StateService) {\n    this.iconsUrl = environmentService.getIconsUrl();\n  }\n\n  async ngOnChanges() {\n    // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n    // to avoid this we reset all state variables.\n    this.image = null;\n    this.fallbackImage = null;\n    this.imageEnabled = !(await this.stateService.getDisableFavicon());\n    this.load();\n  }\n\n  protected load() {\n    switch (this.cipher.type) {\n      case CipherType.Login:\n        this.icon = \"bwi-globe\";\n        this.setLoginIcon();\n        break;\n      case CipherType.SecureNote:\n        this.icon = \"bwi-sticky-note\";\n        break;\n      case CipherType.Card:\n        this.icon = \"bwi-credit-card\";\n        this.setCardIcon();\n        break;\n      case CipherType.Identity:\n        this.icon = \"bwi-id-card\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  private setLoginIcon() {\n    if (this.cipher.login.uri) {\n      let hostnameUri = this.cipher.login.uri;\n      let isWebsite = false;\n\n      if (hostnameUri.indexOf(\"androidapp://\") === 0) {\n        this.icon = \"bwi-android\";\n        this.image = null;\n      } else if (hostnameUri.indexOf(\"iosapp://\") === 0) {\n        this.icon = \"bwi-apple\";\n        this.image = null;\n      } else if (\n        this.imageEnabled &&\n        hostnameUri.indexOf(\"://\") === -1 &&\n        hostnameUri.indexOf(\".\") > -1\n      ) {\n        hostnameUri = \"http://\" + hostnameUri;\n        isWebsite = true;\n      } else if (this.imageEnabled) {\n        isWebsite = hostnameUri.indexOf(\"http\") === 0 && hostnameUri.indexOf(\".\") > -1;\n      }\n\n      if (this.imageEnabled && isWebsite) {\n        try {\n          this.image = this.iconsUrl + \"/\" + Utils.getHostname(hostnameUri) + \"/icon.png\";\n          this.fallbackImage = \"images/bwi-globe.png\";\n        } catch (e) {\n          // Ignore error since the fallback icon will be shown if image is null.\n        }\n      }\n    } else {\n      this.image = null;\n    }\n  }\n\n  private setCardIcon() {\n    const brand = this.cipher.card.brand;\n    if (this.imageEnabled && brand in cardIcons) {\n      this.icon = \"credit-card-icon \" + cardIcons[brand];\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"exposedPasswordsReport\" | i18n }}</h1>\n</div>\n<p>{{ \"exposedPasswordsReportDesc\" | i18n }}</p>\n<button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"loading\" (click)=\"load()\">\n  {{ \"checkExposedPasswords\" | i18n }}\n</button>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noExposedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'exposedPasswordsFound' | i18n }}\" [useAlertRole]=\"true\">\n      {{ \"exposedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"exposedXTimes\" | i18n: (exposedPasswordMap.get(c.id) | number) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-exposed-passwords-report\",\n  templateUrl: \"exposed-passwords-report.component.html\",\n})\nexport class ExposedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  exposedPasswordMap = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected auditService: AuditService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  ngOnInit() {\n    this.checkAccess();\n  }\n\n  async load() {\n    if (await this.checkAccess()) {\n      super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const exposedPasswordCiphers: CipherView[] = [];\n    const promises: Promise<void>[] = [];\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const promise = this.auditService.passwordLeaked(c.login.password).then((exposedCount) => {\n        if (exposedCount > 0) {\n          exposedPasswordCiphers.push(c);\n          this.exposedPasswordMap.set(c.id, exposedCount);\n        }\n      });\n      promises.push(promise);\n    });\n    await Promise.all(promises);\n    this.ciphers = exposedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { ExposedPasswordsReportComponent as BaseExposedPasswordsReportComponent } from \"../../reports/pages/exposed-passwords-report.component\";\n\n@Component({\n  selector: \"app-org-exposed-passwords-report\",\n  templateUrl: \"../../reports/pages/exposed-passwords-report.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ExposedPasswordsReportComponent extends BaseExposedPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    auditService: AuditService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private organizationService: OrganizationService,\n    private route: ActivatedRoute,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      auditService,\n      modalService,\n      messagingService,\n      stateService,\n      passwordRepromptService\n    );\n  }\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await this.checkAccess();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"inactive2faReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"inactive2faReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noInactive2fa\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'inactive2faFound' | i18n }}\">\n      {{ \"inactive2faFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <a\n              bitBadge\n              href=\"{{ cipherDocs.get(c.id) }}\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              *ngIf=\"cipherDocs.has(c.id)\"\n            >\n              {{ \"instructions\" | i18n }}</a\n            >\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"inactive-two-factor-report.component.html\",\n})\nexport class InactiveTwoFactorReportComponent extends CipherReportComponent implements OnInit {\n  services = new Map<string, string>();\n  cipherDocs = new Map<string, string>();\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    try {\n      await this.load2fa();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (this.services.size > 0) {\n      const allCiphers = await this.getAllCiphers();\n      const inactive2faCiphers: CipherView[] = [];\n      const promises: Promise<void>[] = [];\n      const docs = new Map<string, string>();\n      allCiphers.forEach((c) => {\n        if (\n          c.type !== CipherType.Login ||\n          (c.login.totp != null && c.login.totp !== \"\") ||\n          !c.login.hasUris ||\n          c.isDeleted\n        ) {\n          return;\n        }\n        for (let i = 0; i < c.login.uris.length; i++) {\n          const u = c.login.uris[i];\n          if (u.uri != null && u.uri !== \"\") {\n            const uri = u.uri.replace(\"www.\", \"\");\n            const domain = Utils.getDomain(uri);\n            if (domain != null && this.services.has(domain)) {\n              if (this.services.get(domain) != null) {\n                docs.set(c.id, this.services.get(domain));\n              }\n              inactive2faCiphers.push(c);\n            }\n          }\n        }\n      });\n      await Promise.all(promises);\n      this.ciphers = inactive2faCiphers;\n      this.cipherDocs = docs;\n    }\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  private async load2fa() {\n    if (this.services.size > 0) {\n      return;\n    }\n    const response = await fetch(new Request(\"https://2fa.directory/api/v3/totp.json\"));\n    if (response.status !== 200) {\n      throw new Error();\n    }\n    const responseJson = await response.json();\n    for (const service of responseJson) {\n      const serviceData = service[1];\n      if (serviceData.domain == null) {\n        continue;\n      }\n      if (serviceData.documentation == null) {\n        continue;\n      }\n      if (serviceData[\"additional-domains\"] != null) {\n        for (const additionalDomain of serviceData[\"additional-domains\"]) {\n          this.services.set(additionalDomain, serviceData.documentation);\n        }\n      }\n      this.services.set(serviceData.domain, serviceData.documentation);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { InactiveTwoFactorReportComponent as BaseInactiveTwoFactorReportComponent } from \"../../reports/pages/inactive-two-factor-report.component\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"../../reports/pages/inactive-two-factor-report.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class InactiveTwoFactorReportComponent extends BaseInactiveTwoFactorReportComponent {\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    super(\n      cipherService,\n      modalService,\n      messagingService,\n      stateService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"reusedPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"reusedPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noReusedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'reusedPasswordsFound' | i18n }}\">\n      {{ \"reusedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"reusedXTimes\" | i18n: passwordUseMap.get(c.login.password) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"reused-passwords-report.component.html\",\n})\nexport class ReusedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordUseMap: Map<string, number>;\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const ciphersWithPasswords: CipherView[] = [];\n    this.passwordUseMap = new Map<string, number>();\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      ciphersWithPasswords.push(c);\n      if (this.passwordUseMap.has(c.login.password)) {\n        this.passwordUseMap.set(c.login.password, this.passwordUseMap.get(c.login.password) + 1);\n      } else {\n        this.passwordUseMap.set(c.login.password, 1);\n      }\n    });\n    const reusedPasswordCiphers = ciphersWithPasswords.filter(\n      (c) =>\n        this.passwordUseMap.has(c.login.password) && this.passwordUseMap.get(c.login.password) > 1\n    );\n    this.ciphers = reusedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from an organization view\n    return true;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { ReusedPasswordsReportComponent as BaseReusedPasswordsReportComponent } from \"../../reports/pages/reused-passwords-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"../../reports/pages/reused-passwords-report.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ReusedPasswordsReportComponent extends BaseReusedPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(cipherService, modalService, messagingService, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","<div class=\"container page-content\">\n  <ng-container *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n  <ng-container *ngIf=\"!loading\">\n    <div class=\"row\">\n      <div class=\"col-3\">\n        <div class=\"card mb-4\" *ngIf=\"organization.canAccessImportExport\">\n          <div class=\"card-header\">{{ \"tools\" | i18n }}</div>\n          <div class=\"list-group list-group-flush\">\n            <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"importData\" | i18n }}\n            </a>\n            <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"exportVault\" | i18n }}\n            </a>\n          </div>\n        </div>\n        <div class=\"card\" *ngIf=\"organization.canAccessReports\">\n          <div class=\"card-header d-flex\">\n            {{ \"reports\" | i18n }}\n            <div class=\"ml-auto\">\n              <a\n                href=\"#\"\n                appStopClick\n                bitBadge\n                *ngIf=\"!accessReports\"\n                (click)=\"upgradeOrganization()\"\n              >\n                {{ \"upgrade\" | i18n }}\n              </a>\n            </div>\n          </div>\n          <div class=\"list-group list-group-flush\">\n            <a\n              routerLink=\"exposed-passwords-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"exposedPasswordsReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"reused-passwords-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"reusedPasswordsReport\" | i18n }}\n            </a>\n            <a routerLink=\"weak-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n              {{ \"weakPasswordsReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"unsecured-websites-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"unsecuredWebsitesReport\" | i18n }}\n            </a>\n            <a\n              routerLink=\"inactive-two-factor-report\"\n              class=\"list-group-item\"\n              routerLinkActive=\"active\"\n            >\n              {{ \"inactive2faReport\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-9\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </ng-container>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-tools\",\n  templateUrl: \"tools.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ToolsComponent {\n  organization: Organization;\n  accessReports = false;\n  loading = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private messagingService: MessagingService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n      // since all paid plans include useTotp\n      this.accessReports = this.organization.useTotp;\n      this.loading = false;\n    });\n  }\n\n  upgradeOrganization() {\n    this.messagingService.send(\"upgradeOrganization\", { organizationId: this.organization.id });\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"unsecuredWebsitesReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"unsecuredWebsitesReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noUnsecuredWebsites\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'unsecuredWebsitesFound' | i18n }}\">\n      {{ \"unsecuredWebsitesFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"unsecured-websites-report.component.html\",\n})\nexport class UnsecuredWebsitesReportComponent extends CipherReportComponent implements OnInit {\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const unsecuredCiphers = allCiphers.filter((c) => {\n      if (c.type !== CipherType.Login || !c.login.hasUris || c.isDeleted) {\n        return false;\n      }\n      return c.login.uris.some((u) => u.uri != null && u.uri.indexOf(\"http://\") === 0);\n    });\n    this.ciphers = unsecuredCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { UnsecuredWebsitesReportComponent as BaseUnsecuredWebsitesReportComponent } from \"../../reports/pages/unsecured-websites-report.component\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"../../reports/pages/unsecured-websites-report.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class UnsecuredWebsitesReportComponent extends BaseUnsecuredWebsitesReportComponent {\n  constructor(\n    cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(cipherService, modalService, messagingService, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"weakPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"weakPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noWeakPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'weakPasswordsFound' | i18n }}\">\n      {{ \"weakPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge [badgeType]=\"passwordStrengthMap.get(c.id)[1]\">\n              {{ passwordStrengthMap.get(c.id)[0] | i18n }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"weak-passwords-report.component.html\",\n})\nexport class WeakPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordStrengthMap = new Map<string, [string, string]>();\n\n  private passwordStrengthCache = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected passwordGenerationService: PasswordGenerationService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const weakPasswordCiphers: CipherView[] = [];\n    const isUserNameNotEmpty = (c: CipherView): boolean => {\n      return c.login.username != null && c.login.username.trim() !== \"\";\n    };\n    const getCacheKey = (c: CipherView): string => {\n      return c.login.password + \"_____\" + (isUserNameNotEmpty(c) ? c.login.username : \"\");\n    };\n\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const hasUserName = isUserNameNotEmpty(c);\n      const cacheKey = getCacheKey(c);\n      if (!this.passwordStrengthCache.has(cacheKey)) {\n        let userInput: string[] = [];\n        if (hasUserName) {\n          const atPosition = c.login.username.indexOf(\"@\");\n          if (atPosition > -1) {\n            userInput = userInput\n              .concat(\n                c.login.username\n                  .substr(0, atPosition)\n                  .trim()\n                  .toLowerCase()\n                  .split(/[^A-Za-z0-9]/)\n              )\n              .filter((i) => i.length >= 3);\n          } else {\n            userInput = c.login.username\n              .trim()\n              .toLowerCase()\n              .split(/[^A-Za-z0-9]/)\n              .filter((i) => i.length >= 3);\n          }\n        }\n        const result = this.passwordGenerationService.passwordStrength(\n          c.login.password,\n          userInput.length > 0 ? userInput : null\n        );\n        this.passwordStrengthCache.set(cacheKey, result.score);\n      }\n      const score = this.passwordStrengthCache.get(cacheKey);\n      if (score != null && score <= 2) {\n        this.passwordStrengthMap.set(c.id, this.scoreKey(score));\n        weakPasswordCiphers.push(c);\n      }\n    });\n    weakPasswordCiphers.sort((a, b) => {\n      return (\n        this.passwordStrengthCache.get(getCacheKey(a)) -\n        this.passwordStrengthCache.get(getCacheKey(b))\n      );\n    });\n    this.ciphers = weakPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n\n  private scoreKey(score: number): [string, string] {\n    switch (score) {\n      case 4:\n        return [\"strong\", \"success\"];\n      case 3:\n        return [\"good\", \"primary\"];\n      case 2:\n        return [\"weak\", \"warning\"];\n      default:\n        return [\"veryWeak\", \"danger\"];\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n// eslint-disable-next-line no-restricted-imports\nimport { WeakPasswordsReportComponent as BaseWeakPasswordsReportComponent } from \"../../reports/pages/weak-passwords-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"../../reports/pages/weak-passwords-report.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class WeakPasswordsReportComponent extends BaseWeakPasswordsReportComponent {\n  manageableCiphers: Cipher[];\n\n  constructor(\n    cipherService: CipherService,\n    passwordGenerationService: PasswordGenerationService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      passwordGenerationService,\n      modalService,\n      messagingService,\n      stateService,\n      passwordRepromptService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.manageableCiphers = await this.cipherService.getAll();\n      await super.ngOnInit();\n    });\n  }\n\n  getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n  }\n\n  canManageCipher(c: CipherView): boolean {\n    return this.manageableCiphers.some((x) => x.id === c.id);\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { GetOrgNameFromIdPipe } from \"./get-organization-name.pipe\";\n\n@NgModule({\n  declarations: [GetOrgNameFromIdPipe],\n  exports: [GetOrgNameFromIdPipe],\n})\nexport class PipesModule {}\n","import { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\n\nexport class VaultService {\n  calculateSearchBarLocalizationString(vaultFilter: VaultFilter): string {\n    if (vaultFilter.status === \"favorites\") {\n      return \"searchFavorites\";\n    }\n    if (vaultFilter.status === \"trash\") {\n      return \"searchTrash\";\n    }\n    if (vaultFilter.cipherType != null) {\n      return \"searchType\";\n    }\n    if (vaultFilter.selectedFolderId != null && vaultFilter.selectedFolderId != \"none\") {\n      return \"searchFolder\";\n    }\n    if (vaultFilter.selectedCollection) {\n      return \"searchCollection\";\n    }\n    if (vaultFilter.selectedOrganizationId != null) {\n      return \"searchOrganization\";\n    }\n    if (vaultFilter.myVaultOnly) {\n      return \"searchMyVault\";\n    }\n\n    return \"searchVault\";\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\nimport { LooseComponentsModule } from \"../../shared/loose-components.module\";\nimport { VaultFilterModule } from \"../vault-filter/vault-filter.module\";\n\nimport { PipesModule } from \"./pipes/pipes.module\";\nimport { VaultService } from \"./vault.service\";\n\n@NgModule({\n  imports: [SharedModule, VaultFilterModule, LooseComponentsModule, PipesModule],\n  exports: [SharedModule, VaultFilterModule, LooseComponentsModule, PipesModule],\n  providers: [\n    {\n      provide: VaultService,\n      useClass: VaultService,\n    },\n  ],\n})\nexport class VaultSharedModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { VaultFilterSharedModule } from \"../../../vault/vault-filter/shared/vault-filter-shared.module\";\n\nimport { VaultFilterComponent } from \"./vault-filter.component\";\n\n@NgModule({\n  imports: [VaultFilterSharedModule],\n  declarations: [VaultFilterComponent],\n  exports: [VaultFilterComponent],\n})\nexport class VaultFilterModule {}\n","import { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherStatus } from \"./cipher-status.model\";\n\nexport type VaultFilterFunction = (cipher: CipherView) => boolean;\n\nexport class VaultFilter {\n  cipherType?: CipherType;\n  selectedCollection = false; // This is needed because of how the \"Unassigned\" collection works. It has a null id.\n  selectedCollectionId?: string;\n  status?: CipherStatus;\n  selectedFolder = false; // This is needed because of how the \"No Folder\" folder works. It has a null id.\n  selectedFolderId?: string;\n  selectedOrganizationId?: string;\n  myVaultOnly = false;\n  refreshCollectionsAndFolders = false;\n\n  constructor(init?: Partial<VaultFilter>) {\n    Object.assign(this, init);\n  }\n\n  resetFilter() {\n    this.cipherType = null;\n    this.status = null;\n    this.selectedCollection = false;\n    this.selectedCollectionId = null;\n    this.selectedFolder = false;\n    this.selectedFolderId = null;\n  }\n\n  resetOrganization() {\n    this.myVaultOnly = false;\n    this.selectedOrganizationId = null;\n    this.resetFilter();\n  }\n\n  buildFilter(): VaultFilterFunction {\n    return (cipher) => {\n      let cipherPassesFilter = true;\n      if (this.status === \"favorites\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.favorite;\n      }\n      if (this.status === \"trash\" && cipherPassesFilter) {\n        cipherPassesFilter = cipher.isDeleted;\n      }\n      if (this.cipherType != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.type === this.cipherType;\n      }\n      if (this.selectedFolder && this.selectedFolderId == null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId == null;\n      }\n      if (this.selectedFolder && this.selectedFolderId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.folderId === this.selectedFolderId;\n      }\n      if (this.selectedCollection && this.selectedCollectionId == null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.organizationId != null &&\n          (cipher.collectionIds == null || cipher.collectionIds.length === 0);\n      }\n      if (this.selectedCollection && this.selectedCollectionId != null && cipherPassesFilter) {\n        cipherPassesFilter =\n          cipher.collectionIds != null && cipher.collectionIds.includes(this.selectedCollectionId);\n      }\n      if (this.selectedOrganizationId != null && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === this.selectedOrganizationId;\n      }\n      if (this.myVaultOnly && cipherPassesFilter) {\n        cipherPassesFilter = cipher.organizationId === null;\n      }\n      return cipherPassesFilter;\n    };\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/enc-array-buffer\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachment.view\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Output() onUploadedAttachment = new EventEmitter();\n  @Output() onDeletedAttachment = new EventEmitter();\n  @Output() onReuploadedAttachment = new EventEmitter();\n\n  cipher: CipherView;\n  cipherDomain: Cipher;\n  hasUpdatedKey: boolean;\n  canAccessAttachments: boolean;\n  formPromise: Promise<any>;\n  deletePromises: { [id: string]: Promise<any> } = {};\n  reuploadPromises: { [id: string]: Promise<any> } = {};\n  emergencyAccessId?: string = null;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected win: Window,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit() {\n    if (!this.hasUpdatedKey) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"updateKey\")\n      );\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    if (files[0].size > 524288000) {\n      // 500 MB\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"maxFileSize\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.saveCipherAttachment(files[0]);\n      this.cipherDomain = await this.formPromise;\n      this.cipher = await this.cipherDomain.decrypt();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"attachmentSaved\"));\n      this.onUploadedAttachment.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    // reset file input\n    // ref: https://stackoverflow.com/a/20552042\n    fileEl.type = \"\";\n    fileEl.type = \"file\";\n    fileEl.value = \"\";\n  }\n\n  async delete(attachment: AttachmentView) {\n    if (this.deletePromises[attachment.id] != null) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteAttachmentConfirmation\"),\n      this.i18nService.t(\"deleteAttachment\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n      await this.deletePromises[attachment.id];\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedAttachment\"));\n      const i = this.cipher.attachments.indexOf(attachment);\n      if (i > -1) {\n        this.cipher.attachments.splice(i, 1);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.deletePromises[attachment.id] = null;\n    this.onDeletedAttachment.emit();\n  }\n\n  async download(attachment: AttachmentView) {\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (!this.canAccessAttachments) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id,\n        this.emergencyAccessId\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n      this.fileDownloadService.download({\n        fileName: attachment.fileName,\n        blobData: decBuf,\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected async init() {\n    this.cipherDomain = await this.loadCipher();\n    this.cipher = await this.cipherDomain.decrypt();\n\n    this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n    if (!this.canAccessAttachments) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"premiumRequiredDesc\"),\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\")\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n      }\n    } else if (!this.hasUpdatedKey) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateKey\"),\n        this.i18nService.t(\"featureUnavailable\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\n          \"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        );\n      }\n    }\n  }\n\n  protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n    const a = attachment as any;\n    if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n      return;\n    }\n\n    try {\n      this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n        // 1. Download\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: \"no-store\" }));\n        if (response.status !== 200) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n          a.downloading = false;\n          return;\n        }\n\n        try {\n          // 2. Resave\n          const encBuf = await EncArrayBuffer.fromResponse(response);\n          const key =\n            attachment.key != null\n              ? attachment.key\n              : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n          const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n          this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n            this.cipherDomain,\n            attachment.fileName,\n            decBuf,\n            admin\n          );\n          this.cipher = await this.cipherDomain.decrypt();\n\n          // 3. Delete old\n          this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n          await this.deletePromises[attachment.id];\n          const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n          if (foundAttachment.length > 0) {\n            const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n            if (i > -1) {\n              this.cipher.attachments.splice(i, 1);\n            }\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"attachmentSaved\")\n          );\n          this.onReuploadedAttachment.emit();\n        } catch (e) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n        }\n\n        a.downloading = false;\n      });\n      await this.reuploadPromises[attachment.id];\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"attachmentsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"attachmentsTitle\">\n          {{ \"attachments\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <table class=\"table table-hover table-list\" *ngIf=\"cipher && cipher.hasAttachments\">\n          <tbody>\n            <tr *ngFor=\"let a of cipher.attachments\">\n              <td class=\"table-list-icon\">\n                <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"!a.downloading\" aria-hidden=\"true\"></i>\n                <i\n                  class=\"bwi bwi-spinner bwi-lg bwi-fw bwi-spin\"\n                  *ngIf=\"a.downloading\"\n                  aria-hidden=\"true\"\n                ></i>\n              </td>\n              <td class=\"wrap\">\n                <div class=\"d-flex\">\n                  <a href=\"#\" appStopClick (click)=\"download(a)\">{{ a.fileName }}</a>\n                  <div *ngIf=\"showFixOldAttachments(a)\" class=\"ml-2\">\n                    <a\n                      href=\"https://bitwarden.com/help/attachments/#fixing-old-attachments\"\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                    >\n                      <i\n                        class=\"bwi bwi-exclamation-triangle text-warning\"\n                        title=\"{{ 'attachmentFixDesc' | i18n }}\"\n                        aria-hidden=\"true\"\n                      ></i>\n                      <span class=\"sr-only\">{{ \"attachmentFixDesc\" | i18n }}</span></a\n                    >\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-primary btn-sm m-0 py-0 px-2\"\n                      (click)=\"reupload(a)\"\n                      #reuploadBtn\n                      [appApiAction]=\"reuploadPromises[a.id]\"\n                      [disabled]=\"reuploadBtn.loading\"\n                    >\n                      {{ \"fix\" | i18n }}\n                    </button>\n                  </div>\n                </div>\n                <small>{{ a.sizeName }}</small>\n              </td>\n              <td class=\"table-list-options\" *ngIf=\"!viewOnly\">\n                <button\n                  class=\"btn btn-outline-danger\"\n                  type=\"button\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'delete' | i18n }}\"\n                  (click)=\"delete(a)\"\n                  #deleteBtn\n                  [appApiAction]=\"deletePromises[a.id]\"\n                  [disabled]=\"deleteBtn.loading\"\n                >\n                  <i\n                    class=\"bwi bwi-trash bwi-lg bwi-fw\"\n                    [hidden]=\"deleteBtn.loading\"\n                    aria-hidden=\"true\"\n                  ></i>\n                  <i\n                    class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                    [hidden]=\"!deleteBtn.loading\"\n                    title=\"{{ 'loading' | i18n }}\"\n                    aria-hidden=\"true\"\n                  ></i>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div *ngIf=\"!viewOnly\">\n          <h3>{{ \"newAttachment\" | i18n }}</h3>\n          <label for=\"file\" class=\"sr-only\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n          <small class=\"form-text text-muted\">{{ \"maxFileSize\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachment.view\";\n\n@Component({\n  selector: \"app-vault-attachments\",\n  templateUrl: \"attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.showFixOldAttachments(attachment)) {\n      await this.reuploadCipherAttachment(attachment, false);\n    }\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.cipher.organizationId == null;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipher.data\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachment.view\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"../../vault/attachments.component\";\n\n@Component({\n  selector: \"app-org-vault-attachments\",\n  templateUrl: \"../../vault/attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n  organization: Organization;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      stateService,\n      platformUtilsService,\n      apiService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.organization.canEditAnyCollection && this.showFixOldAttachments(attachment)) {\n      await super.reuploadCipherAttachment(attachment, true);\n    }\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(\n      this.cipherDomain,\n      file,\n      this.organization.canEditAnyCollection\n    );\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipherAttachment(attachmentId);\n    }\n    return this.apiService.deleteCipherAttachmentAdmin(this.cipherId, attachmentId);\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.organization.canEditAnyCollection;\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n@Directive()\nexport class CiphersComponent {\n  @Input() activeCipherId: string = null;\n  @Output() onCipherClicked = new EventEmitter<CipherView>();\n  @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n  @Output() onAddCipher = new EventEmitter();\n  @Output() onAddCipherOptions = new EventEmitter();\n\n  loaded = false;\n  ciphers: CipherView[] = [];\n  searchText: string;\n  searchPlaceholder: string = null;\n  filter: (cipher: CipherView) => boolean = null;\n  deleted = false;\n\n  protected searchPending = false;\n\n  private searchTimeout: any = null;\n\n  constructor(protected searchService: SearchService) {}\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async reload(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.loaded = false;\n    await this.load(filter, deleted);\n  }\n\n  async refresh() {\n    await this.reload(this.filter, this.deleted);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      await this.doSearch(indexedCiphers);\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      await this.doSearch(indexedCiphers);\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.onCipherClicked.emit(cipher);\n  }\n\n  rightClickCipher(cipher: CipherView) {\n    this.onCipherRightClicked.emit(cipher);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  addCipherOptions() {\n    this.onAddCipherOptions.emit();\n  }\n\n  isSearching() {\n    return !this.searchPending && this.searchService.isSearchable(this.searchText);\n  }\n\n  protected deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n\n  protected async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n  }\n}\n","import { svgIcon } from \"../icon\";\n\nexport const Search = svgIcon`\n<svg width=\"120\" height=\"120\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <g opacity=\".49\">\n    <path class=\"tw-fill-secondary-300\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M40.36 73.256a30.004 30.004 0 0 0 10.346 1.826c16.282 0 29.482-12.912 29.482-28.84 0-.384-.008-.766-.023-1.145h28.726v39.57H40.36v-11.41Z\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M21.546 46.241c0 15.929 13.2 28.841 29.482 28.841S80.51 62.17 80.51 46.241c0-15.928-13.2-28.841-29.482-28.841S21.546 30.313 21.546 46.241Z\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path class=\"tw-fill-secondary-500\" d=\"M35.36 70.595a1.2 1.2 0 0 0-2.4 0h2.4Zm77.475-30.356a2.343 2.343 0 0 1 2.365 2.33h2.4c0-2.593-2.107-4.73-4.765-4.73v2.4Zm2.365 2.33v46.047h2.4V42.57h-2.4Zm0 46.047c0 1.293-1.058 2.33-2.365 2.33v2.4c2.59 0 4.765-2.069 4.765-4.73h-2.4Zm-2.365 2.33h-75.11v2.4h75.11v-2.4Zm-75.11 0a2.343 2.343 0 0 1-2.365-2.33h-2.4c0 2.594 2.107 4.73 4.766 4.73v-2.4Zm-2.365-2.33v-18.02h-2.4v18.02h2.4Zm44.508-48.377h32.967v-2.4H79.868v2.4Z\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M79.907 45.287h29.114v39.57H40.487V73.051\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M57.356 102.56h35.849\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M68.954 92.147v10.413m11.599-10.413v10.413\" stroke-width=\"4\" stroke-linejoin=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"m27.44 64.945-4.51 4.51L5.72 86.663a3 3 0 0 0 0 4.243l1.238 1.238a3 3 0 0 0 4.243 0L28.41 74.936l4.51-4.51\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M101.293 53.154H85.178m16.115 6.043H90.214m-5.036 0h-7.553m23.668 6.043h-7.05m-5.54 0h-15.61m28.2 6.042H85.178m-5.538 0h-8.562m30.215 6.043H78.632m-5.539 0H60m-5.54 0h-8.057\" stroke-width=\"2\" stroke-linecap=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M29.164 33.01h41.529a2.4 2.4 0 0 1 2.4 2.4v6.28a2.4 2.4 0 0 1-2.4 2.4h-41.53a2.4 2.4 0 0 1-2.4-2.4v-6.28a2.4 2.4 0 0 1 2.4-2.4Z\" stroke-width=\"4\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M22.735 54.16h34.361a2.4 2.4 0 0 1 2.4 2.4v6.28a2.4 2.4 0 0 1-2.4 2.4H28.778m50.358-11.08h-6.161a2.4 2.4 0 0 0-2.4 2.4v6.414a2.266 2.266 0 0 0 2.266 2.265\" stroke-width=\"4\" stroke-linecap=\"round\" />\n  </g>\n</svg>\n`;\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"ellipsis\",\n})\nexport class EllipsisPipe implements PipeTransform {\n  transform(value: string, limit = 25, completeWords = false, ellipsis = \"...\") {\n    if (value.length <= limit) {\n      return value;\n    }\n    limit -= ellipsis.length;\n    if (completeWords && value.length > limit && value.indexOf(\" \") > 0) {\n      limit = value.substring(0, limit).lastIndexOf(\" \");\n    }\n    return value.substring(0, limit) + ellipsis;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-org-badge\",\n  templateUrl: \"organization-name-badge.component.html\",\n})\nexport class OrganizationNameBadgeComponent implements OnInit {\n  @Input() organizationName: string;\n  @Input() profileName: string;\n\n  @Output() onOrganizationClicked = new EventEmitter<string>();\n\n  color: string;\n  textColor: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit(): void {\n    if (this.organizationName == null || this.organizationName === \"\") {\n      this.organizationName = this.i18nService.t(\"me\");\n      this.color = Utils.stringToColor(this.profileName.toUpperCase());\n    }\n    if (this.color == null) {\n      this.color = Utils.stringToColor(this.organizationName.toUpperCase());\n    }\n    this.textColor = Utils.pickTextColorBasedOnBgColor(this.color);\n  }\n\n  emitOnOrganizationClicked() {\n    this.onOrganizationClicked.emit();\n  }\n}\n","<button\n  bitBadge\n  [style.color]=\"textColor\"\n  [style.background-color]=\"color\"\n  appA11yTitle=\"{{ organizationName }}\"\n  (click)=\"emitOnOrganizationClicked()\"\n>\n  {{ organizationName | ellipsis: 13 }}\n</button>\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Pipe({\n  name: \"orgNameFromId\",\n  pure: true,\n})\nexport class GetOrgNameFromIdPipe implements PipeTransform {\n  transform(value: string, organizations: Organization[]) {\n    const orgName = organizations.find((o) => o.id === value)?.name;\n    return orgName;\n  }\n}\n","<ng-container *ngIf=\"isPaging() ? pagedCiphers : ciphers as filteredCiphers\">\n  <table\n    class=\"table table-hover table-list table-ciphers\"\n    *ngIf=\"filteredCiphers.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of filteredCiphers\">\n        <td (click)=\"checkCipher(c)\" class=\"table-list-checkbox\">\n          <input type=\"checkbox\" [(ngModel)]=\"c.checked\" appStopProp />\n        </td>\n        <td (click)=\"checkCipher(c)\" class=\"table-list-icon\">\n          <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n        </td>\n        <td (click)=\"checkCipher(c)\" class=\"reduced-lh wrap\">\n          <a\n            appStopProp\n            [routerLink]=\"[]\"\n            [queryParams]=\"{ itemId: c.id }\"\n            queryParamsHandling=\"merge\"\n            title=\"{{ 'editItem' | i18n }}\"\n            >{{ c.name }}</a\n          >\n          <ng-container *ngIf=\"c.hasAttachments\">\n            <i\n              class=\"bwi bwi-paperclip\"\n              appStopProp\n              title=\"{{ 'attachments' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            <ng-container *ngIf=\"showFixOldAttachments(c)\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-warning\"\n                appStopProp\n                title=\"{{ 'attachmentsNeedFix' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachmentsNeedFix\" | i18n }}</span>\n            </ng-container>\n          </ng-container>\n          <br />\n          <small appStopProp>{{ c.subTitle }}</small>\n        </td>\n        <td *ngIf=\"organizations.length > 0 && !organization\" class=\"tw-w-28\">\n          <app-org-badge\n            organizationName=\"{{ c.organizationId | orgNameFromId: organizations }}\"\n            profileName=\"{{ profileName }}\"\n            (onOrganizationClicked)=\"onOrganizationClicked(c.organizationId)\"\n          >\n          </app-org-badge>\n        </td>\n        <td class=\"table-list-options\">\n          <button\n            [bitMenuTriggerFor]=\"cipherOptions\"\n            class=\"tw-border-none tw-bg-transparent tw-text-main\"\n            type=\"button\"\n            appA11yTitle=\"{{ 'options' | i18n }}\"\n          >\n            <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <bit-menu #cipherOptions>\n            <ng-container *ngIf=\"c.type === cipherType.Login && !c.isDeleted\">\n              <button bitMenuItem (click)=\"copy(c, c.login.username, 'username', 'Username')\">\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyUsername\" | i18n }}\n              </button>\n              <button\n                bitMenuItem\n                (click)=\"copy(c, c.login.password, 'password', 'Password')\"\n                *ngIf=\"c.viewPassword\"\n              >\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyPassword\" | i18n }}\n              </button>\n              <button\n                bitMenuItem\n                (click)=\"copy(c, c.login.totp, 'verificationCodeTotp', 'TOTP')\"\n                *ngIf=\"displayTotpCopyButton(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyVerificationCode\" | i18n }}\n              </button>\n              <button bitMenuItem *ngIf=\"c.login.canLaunch\" (click)=\"launch(c.login.launchUri)\">\n                <i class=\"bwi bwi-fw bwi-share-square\" aria-hidden=\"true\"></i>\n                {{ \"launch\" | i18n }}\n              </button>\n            </ng-container>\n            <button bitMenuItem (click)=\"attachments(c)\">\n              <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n              {{ \"attachments\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"((!organization && !c.organizationId) || organization) && !c.isDeleted\"\n              (click)=\"clone(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-files\" aria-hidden=\"true\"></i>\n              {{ \"clone\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"!organization && !c.organizationId && !c.isDeleted\"\n              (click)=\"share(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n              {{ \"moveToOrganization\" | i18n }}\n            </button>\n            <button bitMenuItem *ngIf=\"c.organizationId && !c.isDeleted\" (click)=\"collections(c)\">\n              <i class=\"bwi bwi-fw bwi-collection\" aria-hidden=\"true\"></i>\n              {{ \"collections\" | i18n }}\n            </button>\n            <button bitMenuItem *ngIf=\"c.organizationId && accessEvents\" (click)=\"events(c)\">\n              <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n              {{ \"eventLogs\" | i18n }}\n            </button>\n            <button bitMenuItem (click)=\"restore(c)\" *ngIf=\"c.isDeleted\">\n              <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n              {{ \"restore\" | i18n }}\n            </button>\n            <button bitMenuItem (click)=\"delete(c)\">\n              <span class=\"tw-text-danger\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ (c.isDeleted ? \"permanentlyDelete\" : \"delete\") | i18n }}\n              </span>\n            </button>\n          </bit-menu>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <div class=\"no-items\" *ngIf=\"!filteredCiphers.length\">\n    <ng-container *ngIf=\"!loaded\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </ng-container>\n    <ng-container *ngIf=\"loaded\">\n      <bit-icon [icon]=\"noItemIcon\" aria-hidden=\"true\"></bit-icon>\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button (click)=\"addCipher()\" class=\"btn btn-outline-primary\" *ngIf=\"showAddNew\">\n        <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"addItem\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n</ng-container>\n","import { Component, EventEmitter, Input, OnDestroy, Output } from \"@angular/core\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"@bitwarden/angular/components/ciphers.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { Icons } from \"@bitwarden/components\";\n\nconst MaxCheckedCount = 500;\n\n@Component({\n  selector: \"app-vault-ciphers\",\n  templateUrl: \"ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnDestroy {\n  @Input() showAddNew = true;\n  @Output() onAttachmentsClicked = new EventEmitter<CipherView>();\n  @Output() onShareClicked = new EventEmitter<CipherView>();\n  @Output() onCollectionsClicked = new EventEmitter<CipherView>();\n  @Output() onCloneClicked = new EventEmitter<CipherView>();\n  @Output() onOrganzationBadgeClicked = new EventEmitter<string>();\n\n  pagedCiphers: CipherView[] = [];\n  pageSize = 200;\n  cipherType = CipherType;\n  actionPromise: Promise<any>;\n  userHasPremiumAccess = false;\n  organizations: Organization[] = [];\n  profileName: string;\n  noItemIcon = Icons.Search;\n\n  private didScroll = false;\n  private pagedCiphersCount = 0;\n  private refreshing = false;\n\n  constructor(\n    searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cipherService: CipherService,\n    protected eventService: EventService,\n    protected totpService: TotpService,\n    protected stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private tokenService: TokenService\n  ) {\n    super(searchService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  // load() is called after the page loads and the first sync has completed.\n  // Do not use ngOnInit() for anything that requires sync data.\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    await super.load(filter, deleted);\n    this.profileName = await this.tokenService.getName();\n    this.organizations = await this.organizationService.getAll();\n    this.userHasPremiumAccess = await this.stateService.getCanAccessPremium();\n  }\n\n  loadMore() {\n    if (this.ciphers.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCiphers.length;\n    let pagedSize = this.pageSize;\n    if (this.refreshing && pagedLength === 0 && this.pagedCiphersCount > this.pageSize) {\n      pagedSize = this.pagedCiphersCount;\n    }\n    if (this.ciphers.length > pagedLength) {\n      this.pagedCiphers = this.pagedCiphers.concat(\n        this.ciphers.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCiphersCount = this.pagedCiphers.length;\n    this.didScroll = this.pagedCiphers.length > this.pageSize;\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter, this.deleted);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.ciphers.length > this.pageSize;\n  }\n\n  async resetPaging() {\n    this.pagedCiphers = [];\n    this.loadMore();\n  }\n\n  async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n    this.resetPaging();\n  }\n\n  launch(uri: string) {\n    this.platformUtilsService.launchUri(uri);\n  }\n\n  async attachments(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onAttachmentsClicked.emit(c);\n  }\n\n  async share(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onShareClicked.emit(c);\n  }\n\n  collections(c: CipherView) {\n    this.onCollectionsClicked.emit(c);\n  }\n\n  async clone(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onCloneClicked.emit(c);\n  }\n\n  async delete(c: CipherView): Promise<boolean> {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    if (this.actionPromise != null) {\n      return;\n    }\n    const permanent = c.isDeleted;\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        permanent ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(permanent ? \"permanentlyDeleteItem\" : \"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.deleteCipher(c.id, permanent);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(permanent ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async restore(c: CipherView): Promise<boolean> {\n    if (this.actionPromise != null || !c.isDeleted) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.cipherService.restoreWithServer(c.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n    if (\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.repromptCipher(cipher))\n    ) {\n      return;\n    }\n\n    if (value == null || (aType === \"TOTP\" && !this.displayTotpCopyButton(cipher))) {\n      return;\n    } else if (value === cipher.login.totp) {\n      value = await this.totpService.getCode(value);\n    }\n\n    if (!cipher.viewPassword) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\" || typeI18nKey === \"verificationCodeTotp\") {\n      this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n    }\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n    const selectCount =\n      select && this.ciphers.length > MaxCheckedCount ? MaxCheckedCount : this.ciphers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkCipher(this.ciphers[i], select);\n    }\n  }\n\n  checkCipher(c: CipherView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  getSelected(): CipherView[] {\n    if (this.ciphers == null) {\n      return [];\n    }\n    return this.ciphers.filter((c) => !!(c as any).checked);\n  }\n\n  getSelectedIds(): string[] {\n    return this.getSelected().map((c) => c.id);\n  }\n\n  displayTotpCopyButton(cipher: CipherView) {\n    return (\n      (cipher?.login?.hasTotp ?? false) && (cipher.organizationUseTotp || this.userHasPremiumAccess)\n    );\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (await this.repromptCipher(cipher)) {\n      super.selectCipher(cipher);\n    }\n  }\n\n  onOrganizationClicked(organizationId: string) {\n    this.onOrganzationBadgeClicked.emit(organizationId);\n  }\n\n  protected deleteCipher(id: string, permanent: boolean) {\n    return permanent\n      ? this.cipherService.deleteWithServer(id)\n      : this.cipherService.softDeleteWithServer(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return c.hasOldAttachments && c.organizationId == null;\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CiphersComponent as BaseCiphersComponent } from \"../../vault/ciphers.component\";\n\n@Component({\n  selector: \"app-org-vault-ciphers\",\n  templateUrl: \"../../vault/ciphers.component.html\",\n})\nexport class CiphersComponent extends BaseCiphersComponent {\n  @Output() onEventsClicked = new EventEmitter<CipherView>();\n\n  organization: Organization;\n  accessEvents = false;\n\n  protected allCiphers: CipherView[] = [];\n\n  constructor(\n    searchService: SearchService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cipherService: CipherService,\n    eventService: EventService,\n    totpService: TotpService,\n    passwordRepromptService: PasswordRepromptService,\n    logService: LogService,\n    stateService: StateService,\n    organizationService: OrganizationService,\n    tokenService: TokenService,\n    private apiService: ApiService\n  ) {\n    super(\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cipherService,\n      eventService,\n      totpService,\n      stateService,\n      passwordRepromptService,\n      logService,\n      organizationService,\n      tokenService\n    );\n  }\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted || false;\n    if (this.organization.canEditAnyCollection) {\n      this.accessEvents = this.organization.useEvents;\n      this.allCiphers = await this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    } else {\n      this.allCiphers = (await this.cipherService.getAllDecrypted()).filter(\n        (c) => c.organizationId === this.organization.id\n      );\n    }\n    await this.searchService.indexCiphers(this.organization.id, this.allCiphers);\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    if (this.organization.canViewAllCollections) {\n      await super.applyFilter(filter);\n    } else {\n      const f = (c: CipherView) =>\n        c.organizationId === this.organization.id && (filter == null || filter(c));\n      await super.applyFilter(f);\n    }\n  }\n\n  async search(timeout: number = null) {\n    await super.search(timeout, this.allCiphers);\n  }\n  events(c: CipherView) {\n    this.onEventsClicked.emit(c);\n  }\n\n  protected deleteCipher(id: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher(id, this.deleted);\n    }\n    return this.deleted\n      ? this.apiService.deleteCipherAdmin(id)\n      : this.apiService.putDeleteCipherAdmin(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return this.organization.canEditAnyCollection && c.hasOldAttachments;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() allowSelectNone = false;\n  @Output() onSavedCollections = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collectionIds: string[];\n  collections: CollectionView[] = [];\n\n  protected cipherDomain: Cipher;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.cipherDomain = await this.loadCipher();\n    this.collectionIds = this.loadCipherCollections();\n    this.cipher = await this.cipherDomain.decrypt();\n    this.collections = await this.loadCollections();\n\n    this.collections.forEach((c) => ((c as any).checked = false));\n    if (this.collectionIds != null) {\n      this.collections.forEach((c) => {\n        (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n      });\n    }\n  }\n\n  async submit() {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n    this.cipherDomain.collectionIds = selectedCollectionIds;\n    try {\n      this.formPromise = this.saveCollections();\n      await this.formPromise;\n      this.onSavedCollections.emit();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"editedItem\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected loadCipherCollections() {\n    return this.cipherDomain.collectionIds;\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter(\n      (c) => !c.readOnly && c.organizationId === this.cipher.organizationId\n    );\n  }\n\n  protected saveCollections() {\n    return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"collectionsTitle\">\n          {{ \"collections\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"collectionsDesc\" | i18n }}</p>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"@bitwarden/angular/components/collections.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Component({\n  selector: \"app-vault-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipher.data\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherCollectionsRequest } from \"@bitwarden/common/models/request/cipher-collections.request\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"../../vault/collections.component\";\n\n@Component({\n  selector: \"app-org-vault-collections\",\n  templateUrl: \"../../vault/collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n  organization: Organization;\n\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    private apiService: ApiService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n    this.allowSelectNone = true;\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canViewAllCollections) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected loadCipherCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCipherCollections();\n    }\n    return this.collectionIds;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected saveCollections() {\n    if (this.organization.canEditAnyCollection) {\n      const request = new CipherCollectionsRequest(this.cipherDomain.collectionIds);\n      return this.apiService.putCipherCollectionsAdmin(this.cipherId, request);\n    } else {\n      return super.saveCollections();\n    }\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, Observable } from \"rxjs\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\nimport { VaultFilterService } from \"../services/vault-filter.service\";\n\n@Directive()\nexport class VaultFilterComponent implements OnInit {\n  @Input() activeFilter: VaultFilter = new VaultFilter();\n  @Input() hideFolders = false;\n  @Input() hideCollections = false;\n  @Input() hideFavorites = false;\n  @Input() hideTrash = false;\n  @Input() hideOrganizations = false;\n\n  @Output() onFilterChange = new EventEmitter<VaultFilter>();\n  @Output() onAddFolder = new EventEmitter<never>();\n  @Output() onEditFolder = new EventEmitter<FolderView>();\n\n  isLoaded = false;\n  collapsedFilterNodes: Set<string>;\n  organizations: Organization[];\n  activePersonalOwnershipPolicy: boolean;\n  activeSingleOrganizationPolicy: boolean;\n  collections: DynamicTreeNode<CollectionView>;\n  folders$: Observable<DynamicTreeNode<FolderView>>;\n\n  constructor(protected vaultFilterService: VaultFilterService) {}\n\n  get displayCollections() {\n    return this.collections?.fullList != null && this.collections.fullList.length > 0;\n  }\n\n  async ngOnInit(): Promise<void> {\n    this.collapsedFilterNodes = await this.vaultFilterService.buildCollapsedFilterNodes();\n    this.organizations = await this.vaultFilterService.buildOrganizations();\n    if (this.organizations != null && this.organizations.length > 0) {\n      this.activePersonalOwnershipPolicy =\n        await this.vaultFilterService.checkForPersonalOwnershipPolicy();\n      this.activeSingleOrganizationPolicy =\n        await this.vaultFilterService.checkForSingleOrganizationPolicy();\n    }\n    this.folders$ = await this.vaultFilterService.buildNestedFolders();\n    this.collections = await this.initCollections();\n    this.isLoaded = true;\n  }\n\n  // overwritten in web for organization vaults\n  async initCollections() {\n    return await this.vaultFilterService.buildCollections();\n  }\n\n  async toggleFilterNodeCollapseState(node: ITreeNodeObject) {\n    if (this.collapsedFilterNodes.has(node.id)) {\n      this.collapsedFilterNodes.delete(node.id);\n    } else {\n      this.collapsedFilterNodes.add(node.id);\n    }\n    await this.vaultFilterService.storeCollapsedFilterNodes(this.collapsedFilterNodes);\n  }\n\n  async applyFilter(filter: VaultFilter) {\n    if (filter.refreshCollectionsAndFolders) {\n      await this.reloadCollectionsAndFolders(filter);\n      filter = await this.pruneInvalidatedFilterSelections(filter);\n    }\n    this.onFilterChange.emit(filter);\n  }\n\n  async reloadCollectionsAndFolders(filter: VaultFilter) {\n    this.folders$ = await this.vaultFilterService.buildNestedFolders(filter.selectedOrganizationId);\n    this.collections = filter.myVaultOnly\n      ? null\n      : await this.vaultFilterService.buildCollections(filter.selectedOrganizationId);\n  }\n\n  async reloadOrganizations() {\n    this.organizations = await this.vaultFilterService.buildOrganizations();\n    this.activePersonalOwnershipPolicy =\n      await this.vaultFilterService.checkForPersonalOwnershipPolicy();\n    this.activeSingleOrganizationPolicy =\n      await this.vaultFilterService.checkForSingleOrganizationPolicy();\n  }\n\n  addFolder() {\n    this.onAddFolder.emit();\n  }\n\n  editFolder(folder: FolderView) {\n    this.onEditFolder.emit(folder);\n  }\n\n  protected async pruneInvalidatedFilterSelections(filter: VaultFilter): Promise<VaultFilter> {\n    filter = await this.pruneInvalidFolderSelection(filter);\n    filter = this.pruneInvalidCollectionSelection(filter);\n    return filter;\n  }\n\n  protected async pruneInvalidFolderSelection(filter: VaultFilter): Promise<VaultFilter> {\n    if (\n      filter.selectedFolder &&\n      !(await firstValueFrom(this.folders$))?.hasId(filter.selectedFolderId)\n    ) {\n      filter.selectedFolder = false;\n      filter.selectedFolderId = null;\n    }\n    return filter;\n  }\n\n  protected pruneInvalidCollectionSelection(filter: VaultFilter): VaultFilter {\n    if (\n      filter.myVaultOnly ||\n      (filter.selectedCollection &&\n        filter.selectedCollectionId != null &&\n        !this.collections?.hasId(filter.selectedCollectionId))\n    ) {\n      filter.selectedCollection = false;\n      filter.selectedCollectionId = null;\n    }\n    return filter;\n  }\n}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class CollectionFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() collectionNodes: DynamicTreeNode<CollectionView>;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  readonly collectionsGrouping: TopLevelTreeNode = {\n    id: \"collections\",\n    name: \"collections\",\n  };\n\n  get collections() {\n    return this.collectionNodes?.fullList;\n  }\n\n  get nestedCollections() {\n    return this.collectionNodes?.nestedList;\n  }\n\n  get show() {\n    return !this.hide && this.collections != null && this.collections.length > 0;\n  }\n\n  isCollapsed(node: ITreeNodeObject) {\n    return this.collapsedFilterNodes.has(node.id);\n  }\n\n  applyFilter(collection: CollectionView) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.selectedCollection = true;\n    this.activeFilter.selectedCollectionId = collection.id;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  async toggleCollapse(node: ITreeNodeObject) {\n    this.onNodeCollapseStateChange.emit(node);\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <div class=\"filter-heading\">\n    <button\n      (click)=\"toggleCollapse(collectionsGrouping)\"\n      [attr.aria-expanded]=\"!isCollapsed(collectionsGrouping)\"\n      aria-controls=\"collection-filters\"\n      title=\"{{ 'toggleCollapse' | i18n }}\"\n      class=\"toggle-button\"\n    >\n      <i\n        class=\"bwi bwi-fw\"\n        [ngClass]=\"{\n          'bwi-angle-right': isCollapsed(collectionsGrouping),\n          'bwi-angle-down': !isCollapsed(collectionsGrouping)\n        }\"\n        aria-hidden=\"true\"\n      ></i>\n    </button>\n    <h3 class=\"filter-title\">&nbsp;{{ collectionsGrouping.name | i18n }}</h3>\n  </div>\n  <ul id=\"collection-filters\" *ngIf=\"!isCollapsed(collectionsGrouping)\" class=\"filter-options\">\n    <ng-template #recursiveCollections let-collections>\n      <li\n        *ngFor=\"let c of collections\"\n        [ngClass]=\"{\n          active: c.node.id === activeFilter.selectedCollectionId && activeFilter.selectedCollection\n        }\"\n        class=\"filter-option\"\n      >\n        <span class=\"filter-buttons\">\n          <button\n            class=\"toggle-button\"\n            *ngIf=\"c.children.length\"\n            (click)=\"toggleCollapse(c.node)\"\n            title=\"{{ 'toggleCollapse' | i18n }}\"\n            [attr.aria-expanded]=\"!isCollapsed(c.node)\"\n            [attr.aria-controls]=\"c.node.name + '_children'\"\n          >\n            <i\n              class=\"bwi bwi-fw\"\n              [ngClass]=\"{\n                'bwi-angle-right': isCollapsed(c.node),\n                'bwi-angle-down': !isCollapsed(c.node)\n              }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button class=\"filter-button\" (click)=\"applyFilter(c.node)\">\n            <i\n              *ngIf=\"c.children.length === 0\"\n              class=\"bwi bwi-collection bwi-fw\"\n              aria-hidden=\"true\"\n            ></i\n            >&nbsp;{{ c.node.name }}\n          </button>\n        </span>\n        <ul\n          [id]=\"c.node.name + '_children'\"\n          class=\"nested-filter-options\"\n          *ngIf=\"c.children.length && !isCollapsed(c.node)\"\n        >\n          <ng-container\n            *ngTemplateOutlet=\"recursiveCollections; context: { $implicit: c.children }\"\n          >\n          </ng-container>\n        </ul>\n      </li>\n    </ng-template>\n    <ng-container\n      *ngTemplateOutlet=\"recursiveCollections; context: { $implicit: nestedCollections }\"\n    >\n    </ng-container>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { CollectionFilterComponent as BaseCollectionFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/collection-filter.component\";\n\n@Component({\n  selector: \"app-collection-filter\",\n  templateUrl: \"collection-filter.component.html\",\n})\nexport class CollectionFilterComponent extends BaseCollectionFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/tree-node\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class FolderFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() folderNodes: DynamicTreeNode<FolderView>;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n  @Output() onAddFolder = new EventEmitter();\n  @Output() onEditFolder = new EventEmitter<FolderView>();\n\n  get folders() {\n    return this.folderNodes?.fullList;\n  }\n\n  get nestedFolders() {\n    return this.folderNodes?.nestedList;\n  }\n\n  readonly foldersGrouping: TopLevelTreeNode = {\n    id: \"folders\",\n    name: \"folders\",\n  };\n\n  applyFilter(folder: FolderView) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.selectedFolder = true;\n    this.activeFilter.selectedFolderId = folder.id;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  addFolder() {\n    this.onAddFolder.emit();\n  }\n\n  editFolder(folder: FolderView) {\n    this.onEditFolder.emit(folder);\n  }\n\n  isCollapsed(node: ITreeNodeObject) {\n    return this.collapsedFilterNodes.has(node.id);\n  }\n\n  async toggleCollapse(node: ITreeNodeObject) {\n    this.onNodeCollapseStateChange.emit(node);\n  }\n}\n","<ng-container *ngIf=\"!hide\">\n  <div class=\"filter-heading\">\n    <button\n      class=\"toggle-button\"\n      (click)=\"toggleCollapse(foldersGrouping)\"\n      [attr.aria-expanded]=\"!isCollapsed(foldersGrouping)\"\n      aria-controls=\"folder-filters\"\n      title=\"{{ 'toggleCollapse' | i18n }}\"\n    >\n      <i\n        class=\"bwi bwi-fw\"\n        aria-hidden=\"true\"\n        [ngClass]=\"{\n          'bwi-angle-right': isCollapsed(foldersGrouping),\n          'bwi-angle-down': !isCollapsed(foldersGrouping)\n        }\"\n      ></i>\n    </button>\n    <h3 class=\"filter-title\">&nbsp;{{ \"folders\" | i18n }}</h3>\n    <button\n      class=\"text-muted ml-auto add-button\"\n      (click)=\"addFolder()\"\n      appA11yTitle=\"{{ 'addFolder' | i18n }}\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n  <ul id=\"folder-filters\" *ngIf=\"!isCollapsed(foldersGrouping)\" class=\"filter-options\">\n    <ng-template #recursiveFolders let-folders>\n      <li\n        *ngFor=\"let f of folders\"\n        [ngClass]=\"{\n          active: f.node.id === activeFilter.selectedFolderId && activeFilter.selectedFolder\n        }\"\n        class=\"filter-option\"\n      >\n        <span class=\"filter-buttons\">\n          <button\n            *ngIf=\"f.children.length\"\n            title=\"{{ 'toggleCollapse' | i18n }}\"\n            (click)=\"toggleCollapse(f.node)\"\n            [attr.aria-expanded]=\"!isCollapsed(f.node)\"\n            [attr.aria-controls]=\"f.node.name + '_children'\"\n            class=\"toggle-button\"\n          >\n            <i\n              class=\"bwi bwi-fw\"\n              [ngClass]=\"{\n                'bwi-angle-right': isCollapsed(f.node),\n                'bwi-angle-down': !isCollapsed(f.node)\n              }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button class=\"filter-button\" (click)=\"applyFilter(f.node)\">\n            <i *ngIf=\"f.children.length === 0\" class=\"bwi bwi-fw bwi-folder\" aria-hidden=\"true\"></i\n            >&nbsp;{{ f.node.name }}\n          </button>\n          <button\n            class=\"edit-button\"\n            (click)=\"editFolder(f.node)\"\n            appA11yTitle=\"{{ 'editFolder' | i18n }}\"\n            *ngIf=\"f.node.id\"\n          >\n            <i class=\"bwi bwi-pencil bwi-fw\" aria-hidden=\"true\"></i>\n          </button>\n        </span>\n        <ul\n          [id]=\"f.node.name + '_children'\"\n          class=\"nested-filter-options\"\n          *ngIf=\"f.children.length && !isCollapsed(f.node)\"\n        >\n          <ng-container *ngTemplateOutlet=\"recursiveFolders; context: { $implicit: f.children }\">\n          </ng-container>\n        </ul>\n      </li>\n    </ng-template>\n    <ng-container\n      *ngTemplateOutlet=\"recursiveFolders; context: { $implicit: nestedFolders }\"\n    ></ng-container>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { FolderFilterComponent as BaseFolderFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/folder-filter.component\";\n\n@Component({\n  selector: \"app-folder-filter\",\n  templateUrl: \"folder-filter.component.html\",\n})\nexport class FolderFilterComponent extends BaseFolderFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherStatus } from \"../models/cipher-status.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class StatusFilterComponent {\n  @Input() hideFavorites = false;\n  @Input() hideTrash = false;\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n  @Input() activeFilter: VaultFilter;\n\n  get show() {\n    return !(this.hideFavorites && this.hideTrash);\n  }\n\n  applyFilter(cipherStatus: CipherStatus) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.status = cipherStatus;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n}\n","<ng-container *ngIf=\"show\">\n  <ul class=\"filter-options\">\n    <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.status === 'all' }\">\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('all')\">\n          <i class=\"bwi bwi-fw bwi-filter\" aria-hidden=\"true\"></i>&nbsp;{{ \"allItems\" | i18n }}\n        </button>\n      </span>\n    </li>\n    <li\n      *ngIf=\"!hideFavorites\"\n      class=\"filter-option\"\n      [ngClass]=\"{ active: activeFilter.status === 'favorites' }\"\n    >\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('favorites')\">\n          <i class=\"bwi bwi-fw bwi-star\" aria-hidden=\"true\"></i>&nbsp;{{ \"favorites\" | i18n }}\n        </button>\n      </span>\n    </li>\n    <li\n      *ngIf=\"!hideTrash\"\n      class=\"filter-option\"\n      [ngClass]=\"{ active: activeFilter.status === 'trash' }\"\n    >\n      <span class=\"filter-buttons\">\n        <button class=\"filter-button\" (click)=\"applyFilter('trash')\">\n          <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>&nbsp;{{ \"trash\" | i18n }}\n        </button>\n      </span>\n    </li>\n  </ul>\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { StatusFilterComponent as BaseStatusFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/status-filter.component\";\n\n@Component({\n  selector: \"app-status-filter\",\n  templateUrl: \"status-filter.component.html\",\n})\nexport class StatusFilterComponent extends BaseStatusFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/tree-node\";\n\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class TypeFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() selectedCipherType: CipherType = null;\n  @Input() activeFilter: VaultFilter;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  readonly typesNode: TopLevelTreeNode = {\n    id: \"types\",\n    name: \"types\",\n  };\n\n  cipherTypeEnum = CipherType; // used in the template\n\n  get isCollapsed() {\n    return this.collapsedFilterNodes.has(this.typesNode.id);\n  }\n\n  applyFilter(cipherType: CipherType) {\n    this.activeFilter.resetFilter();\n    this.activeFilter.cipherType = cipherType;\n    this.onFilterChange.emit(this.activeFilter);\n  }\n\n  async toggleCollapse() {\n    this.onNodeCollapseStateChange.emit(this.typesNode);\n  }\n}\n","<div class=\"filter-heading\">\n  <button\n    class=\"toggle-button\"\n    [attr.aria-expanded]=\"!isCollapsed\"\n    aria-controls=\"type-filters\"\n    (click)=\"toggleCollapse()\"\n    title=\"{{ 'toggleCollapse' | i18n }}\"\n  >\n    <i\n      class=\"bwi bwi-fw\"\n      aria-hidden=\"true\"\n      [ngClass]=\"{\n        'bwi-angle-right': isCollapsed,\n        'bwi-angle-down': !isCollapsed\n      }\"\n    ></i>\n  </button>\n  <h3>&nbsp;{{ \"types\" | i18n }}</h3>\n</div>\n<ul id=\"type-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Login }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Login)\">\n        <i class=\"bwi bwi-fw bwi-globe\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeLogin\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Card }\">\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Card)\">\n        <i class=\"bwi bwi-fw bwi-credit-card\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeCard\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.Identity }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.Identity)\">\n        <i class=\"bwi bwi-fw bwi-id-card\" aria-hidden=\"true\"></i>&nbsp;{{ \"typeIdentity\" | i18n }}\n      </button>\n    </span>\n  </li>\n  <li\n    class=\"filter-option\"\n    [ngClass]=\"{ active: activeFilter.cipherType === cipherTypeEnum.SecureNote }\"\n  >\n    <span class=\"filter-buttons\">\n      <button class=\"filter-button\" (click)=\"applyFilter(cipherTypeEnum.SecureNote)\">\n        <i class=\"bwi bwi-fw bwi-sticky-note\" aria-hidden=\"true\"></i>&nbsp;{{\n          \"typeSecureNote\" | i18n\n        }}\n      </button>\n    </span>\n  </li>\n</ul>\n","import { Component } from \"@angular/core\";\n\nimport { TypeFilterComponent as BaseTypeFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/type-filter.component\";\n\n@Component({\n  selector: \"app-type-filter\",\n  templateUrl: \"type-filter.component.html\",\n})\nexport class TypeFilterComponent extends BaseTypeFilterComponent {}\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ITreeNodeObject } from \"@bitwarden/common/models/domain/tree-node\";\n\nimport { DisplayMode } from \"../models/display-mode\";\nimport { TopLevelTreeNode } from \"../models/top-level-tree-node.model\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Directive()\nexport class OrganizationFilterComponent {\n  @Input() hide = false;\n  @Input() collapsedFilterNodes: Set<string>;\n  @Input() organizations: Organization[];\n  @Input() activeFilter: VaultFilter;\n  @Input() activePersonalOwnershipPolicy: boolean;\n  @Input() activeSingleOrganizationPolicy: boolean;\n\n  @Output() onNodeCollapseStateChange: EventEmitter<ITreeNodeObject> =\n    new EventEmitter<ITreeNodeObject>();\n  @Output() onFilterChange: EventEmitter<VaultFilter> = new EventEmitter<VaultFilter>();\n\n  get displayMode(): DisplayMode {\n    let displayMode: DisplayMode = \"organizationMember\";\n    if (this.organizations == null || this.organizations.length < 1) {\n      displayMode = \"noOrganizations\";\n    } else if (this.activePersonalOwnershipPolicy && !this.activeSingleOrganizationPolicy) {\n      displayMode = \"personalOwnershipPolicy\";\n    } else if (!this.activePersonalOwnershipPolicy && this.activeSingleOrganizationPolicy) {\n      displayMode = \"singleOrganizationPolicy\";\n    } else if (this.activePersonalOwnershipPolicy && this.activeSingleOrganizationPolicy) {\n      displayMode = \"singleOrganizationAndPersonalOwnershipPolicies\";\n    }\n\n    return displayMode;\n  }\n\n  get hasActiveFilter() {\n    return this.activeFilter.myVaultOnly || this.activeFilter.selectedOrganizationId != null;\n  }\n\n  readonly organizationGrouping: TopLevelTreeNode = {\n    id: \"vaults\",\n    name: \"allVaults\",\n  };\n\n  async applyOrganizationFilter(organization: Organization) {\n    this.activeFilter.selectedOrganizationId = organization.id;\n    this.activeFilter.myVaultOnly = false;\n    this.activeFilter.refreshCollectionsAndFolders = true;\n    this.applyFilter(this.activeFilter);\n  }\n\n  async applyMyVaultFilter() {\n    this.activeFilter.selectedOrganizationId = null;\n    this.activeFilter.myVaultOnly = true;\n    this.activeFilter.refreshCollectionsAndFolders = true;\n    this.applyFilter(this.activeFilter);\n  }\n\n  clearFilter() {\n    this.activeFilter.myVaultOnly = false;\n    this.activeFilter.selectedOrganizationId = null;\n    this.applyFilter(new VaultFilter(this.activeFilter));\n  }\n\n  private applyFilter(filter: VaultFilter) {\n    this.onFilterChange.emit(filter);\n  }\n\n  async toggleCollapse() {\n    this.onNodeCollapseStateChange.emit(this.organizationGrouping);\n  }\n\n  get isCollapsed() {\n    return this.collapsedFilterNodes.has(this.organizationGrouping.id);\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalConfig } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organization-user-reset-password-enrollment.request\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-enroll-master-password-reset\",\n  templateUrl: \"enroll-master-password-reset.component.html\",\n})\nexport class EnrollMasterPasswordReset {\n  organization: Organization;\n\n  verification: Verification;\n  formPromise: Promise<void>;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private modalRef: ModalRef,\n    config: ModalConfig,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    this.organization = config.data.organization;\n  }\n\n  async submit() {\n    let toastStringRef = \"withdrawPasswordResetSuccess\";\n\n    this.formPromise = this.userVerificationService\n      .buildRequest(this.verification, OrganizationUserResetPasswordEnrollmentRequest)\n      .then(async (request) => {\n        // Set variables\n        let keyString: string = null;\n\n        // Retrieve Public Key\n        const orgKeys = await this.organizationApiService.getKeys(this.organization.id);\n        if (orgKeys == null) {\n          throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n        }\n\n        const publicKey = Utils.fromB64ToArray(orgKeys.publicKey);\n\n        // RSA Encrypt user's encKey.key with organization public key\n        const encKey = await this.cryptoService.getEncKey();\n        const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n        keyString = encryptedKey.encryptedString;\n        toastStringRef = \"enrollPasswordResetSuccess\";\n\n        // Create request and execute enrollment\n        request.resetPasswordKey = keyString;\n        await this.apiService.putOrganizationUserResetPasswordEnrollment(\n          this.organization.id,\n          this.organization.userId,\n          request\n        );\n\n        await this.syncService.fullSync(true);\n      });\n    try {\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(toastStringRef));\n      this.modalRef.close();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div\n  class=\"modal fade\"\n  role=\"dialog\"\n  aria-modal=\"true\"\n  aria-labelledby=\"enrollMasterPasswordResetTitle\"\n>\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"enrollMasterPasswordResetTitle\">\n          {{ \"enrollPasswordReset\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">\n          {{ \"resetPasswordEnrollmentWarning\" | i18n }}\n        </app-callout>\n        <app-user-verification [(ngModel)]=\"verification\" name=\"secret\"> </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n          {{ \"submit\" | i18n }}\n        </button>\n        <button\n          bitButton\n          buttonType=\"secondary\"\n          type=\"button\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span>\n            {{ \"cancel\" | i18n }}\n          </span>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { AfterContentInit, Component, Input } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-link-sso\",\n  templateUrl: \"link-sso.component.html\",\n})\nexport class LinkSsoComponent extends SsoComponent implements AfterContentInit {\n  @Input() organization: Organization;\n  returnUri = \"/settings/organizations\";\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    apiService: ApiService,\n    authService: AuthService,\n    router: Router,\n    route: ActivatedRoute,\n    cryptoFunctionService: CryptoFunctionService,\n    passwordGenerationService: PasswordGenerationService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n\n    this.returnUri = \"/settings/organizations\";\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngAfterContentInit() {\n    this.identifier = this.organization.identifier;\n  }\n}\n","<a\n  class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main tw-no-underline hover:tw-bg-secondary-100 hover:tw-no-underline focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n  href=\"#\"\n  appStopClick\n  (click)=\"submit(returnUri, true)\"\n>\n  <i class=\"bwi bwi-fw bwi-link\" aria-hidden=\"true\"></i>\n  {{ \"linkSso\" | i18n }}\n</a>\n","<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted tw-m-2\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<div\n  *ngIf=\"loaded\"\n  class=\"tw-flex tw-min-w-[200px] tw-max-w-[300px] tw-flex-col\"\n  [appApiAction]=\"actionPromise\"\n>\n  <button\n    *ngIf=\"allowEnrollmentChanges(organization) && !organization.resetPasswordEnrolled\"\n    class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"toggleResetPasswordEnrollment(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n    {{ \"enrollPasswordReset\" | i18n }}\n  </button>\n  <button\n    *ngIf=\"allowEnrollmentChanges(organization) && organization.resetPasswordEnrolled\"\n    class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"toggleResetPasswordEnrollment(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n    {{ \"withdrawPasswordReset\" | i18n }}\n  </button>\n  <ng-container *ngIf=\"organization.useSso && organization.identifier\">\n    <button\n      *ngIf=\"organization.ssoBound; else linkSso\"\n      class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n      (click)=\"unlinkSso(organization)\"\n    >\n      <i class=\"bwi bwi-fw bwi-chain-broken\" aria-hidden=\"true\"></i>\n      {{ \"unlinkSso\" | i18n }}\n    </button>\n    <ng-template #linkSso>\n      <app-link-sso [organization]=\"organization\"> </app-link-sso>\n    </ng-template>\n  </ng-container>\n  <button\n    class=\"text-danger tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"leave(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n    {{ \"leave\" | i18n }}\n  </button>\n</div>\n","import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { map, Subject, takeUntil } from \"rxjs\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organization-user-reset-password-enrollment.request\";\n\nimport { EnrollMasterPasswordReset } from \"../../../organizations/users/enroll-master-password-reset.component\";\n\n@Component({\n  selector: \"app-organization-options\",\n  templateUrl: \"organization-options.component.html\",\n})\nexport class OrganizationOptionsComponent implements OnInit, OnDestroy {\n  actionPromise: Promise<void | boolean>;\n  policies: Policy[];\n  loaded = false;\n\n  @Input() organization: Organization;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private modalService: ModalService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.policyService.policies$\n      .pipe(\n        map((policies) => policies.filter((policy) => policy.type === PolicyType.ResetPassword)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((policies) => {\n        this.policies = policies;\n        this.loaded = true;\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  allowEnrollmentChanges(org: Organization): boolean {\n    if (org.usePolicies && org.useResetPassword && org.hasPublicAndPrivateKeys) {\n      const policy = this.policies.find((p) => p.organizationId === org.id);\n      if (policy != null && policy.enabled) {\n        return org.resetPasswordEnrolled && policy.data.autoEnrollEnabled ? false : true;\n      }\n    }\n\n    return false;\n  }\n\n  showEnrolledStatus(org: Organization): boolean {\n    return (\n      org.useResetPassword &&\n      org.resetPasswordEnrolled &&\n      this.policies.some((p) => p.organizationId === org.id && p.enabled)\n    );\n  }\n\n  async unlinkSso(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"unlinkSsoConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.apiService.deleteSsoUser(org.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, \"Unlinked SSO\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async leave(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.organizationApiService.leave(org.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async toggleResetPasswordEnrollment(org: Organization) {\n    if (!this.organization.resetPasswordEnrolled) {\n      this.modalService.open(EnrollMasterPasswordReset, {\n        allowMultipleModals: true,\n        data: {\n          organization: org,\n        },\n      });\n    } else {\n      // Remove reset password\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.masterPasswordHash = \"ignored\";\n      request.resetPasswordKey = null;\n      this.actionPromise = this.apiService.putOrganizationUserResetPasswordEnrollment(\n        this.organization.id,\n        this.organization.userId,\n        request\n      );\n      try {\n        await this.actionPromise;\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"withdrawPasswordResetSuccess\")\n        );\n        this.syncService.fullSync(true);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n}\n","<ng-container *ngIf=\"!hide\">\n  <ng-container [ngSwitch]=\"displayMode\">\n    <ng-container *ngSwitchCase=\"'noOrganizations'\">\n      <ul class=\"filter-options\">\n        <li class=\"filter-option active\">\n          <span class=\"filter-buttons\">\n            <button\n              class=\"filter-button\"\n              [attr.aria-pressed]=\"activeFilter.myVaultOnly\"\n              appA11yTitle=\"{{ 'vault' | i18n }}: {{ 'myVault' | i18n }}\"\n            >\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"myVault\" | i18n }}\n            </button>\n          </span>\n        </li>\n        <li class=\"filter-option\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'personalOwnershipPolicy'\">\n      <div class=\"filter-heading\">\n        <button\n          (click)=\"toggleCollapse()\"\n          title=\"{{ 'toggleCollapse' | i18n }}\"\n          class=\"toggle-button\"\n          [attr.aria-expanded]=\"!isCollapsed\"\n          aria-controls=\"organization-filters\"\n        >\n          <i\n            class=\"bwi bwi-fw\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-right': isCollapsed,\n              'bwi-angle-down': !isCollapsed\n            }\"\n          ></i>\n        </button>\n        <button\n          class=\"filter-button\"\n          (click)=\"clearFilter()\"\n          [ngClass]=\"{ active: !hasActiveFilter }\"\n          appA11yTitle=\"{{ 'vault' | i18n }}: {{ organizationGrouping.name | i18n }}\"\n        >\n          &nbsp;{{ organizationGrouping.name | i18n }}\n        </button>\n      </div>\n      <ul id=\"organization-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n        <li\n          class=\"filter-option\"\n          *ngFor=\"let organization of organizations\"\n          [ngClass]=\"{ active: organization.id === activeFilter.selectedOrganizationId }\"\n        >\n          <span class=\"filter-buttons\">\n            <button\n              class=\"filter-button\"\n              (click)=\"applyOrganizationFilter(organization)\"\n              [attr.aria-pressed]=\"activeFilter.selectedOrganizationId === organization.id\"\n              appA11yTitle=\"{{ 'vault' | i18n }}: {{ organization.name }}\"\n            >\n              <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n              {{ organization.name }}\n            </button>\n            <ng-container *ngIf=\"organization.id === activeFilter.selectedOrganizationId\">\n              <button [bitMenuTriggerFor]=\"orgMenu\" class=\"org-options ml-auto\">\n                <i class=\"bwi bwi-ellipsis-v\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu class=\"filter-organization-options\" #orgMenu>\n                <app-organization-options [organization]=\"organization\"></app-organization-options>\n              </bit-menu>\n            </ng-container>\n          </span>\n        </li>\n        <li class=\"filter-option\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'singleOrganizationAndPersonalOwnershipPolicies'\">\n      <div class=\"filter-heading\">\n        <button\n          class=\"filter-button active\"\n          [attr.aria-pressed]=\"activeFilter.selectedOrganizationId === organizations[0].id\"\n          appA11yTitle=\"{{ 'vault' | i18n }}: {{ organizations[0].name }}\"\n        >\n          <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n          {{ organizations[0].name }}\n        </button>\n        <span class=\"tw-ml-auto\">\n          <button [bitMenuTriggerFor]=\"orgMenu\" class=\"org-options\">\n            <i class=\"bwi bwi-ellipsis-v\" aria-hidden=\"true\"></i>\n          </button>\n          <bit-menu class=\"filter-organization-options\" #orgMenu>\n            <app-organization-options [organization]=\"organizations[0]\"></app-organization-options>\n          </bit-menu>\n        </span>\n      </div>\n    </ng-container>\n    <ng-container *ngSwitchDefault>\n      <div class=\"filter-heading\">\n        <button\n          class=\"toggle-button\"\n          title=\"{{ 'toggleCollapse' | i18n }}\"\n          (click)=\"toggleCollapse()\"\n          [attr.aria-expanded]=\"!isCollapsed\"\n          aria-controls=\"organization-filters\"\n        >\n          <i\n            class=\"bwi bwi-fw\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-right': isCollapsed,\n              'bwi-angle-down': !isCollapsed\n            }\"\n          ></i>\n        </button>\n        <button\n          class=\"filter-button\"\n          (click)=\"clearFilter()\"\n          [ngClass]=\"{ active: !hasActiveFilter }\"\n          appA11yTitle=\"{{ 'vault' | i18n }}: {{ organizationGrouping.name | i18n }}\"\n        >\n          &nbsp;{{ organizationGrouping.name | i18n }}\n        </button>\n      </div>\n      <ul id=\"organization-filters\" *ngIf=\"!isCollapsed\" class=\"filter-options\">\n        <li class=\"filter-option\" [ngClass]=\"{ active: activeFilter.myVaultOnly }\">\n          <span class=\"filter-buttons\">\n            <button\n              class=\"filter-button\"\n              (click)=\"applyMyVaultFilter()\"\n              appA11yTitle=\"{{ 'vault' | i18n }}: {{ 'myVault' | i18n }}\"\n              [attr.aria-pressed]=\"activeFilter.myVaultOnly\"\n            >\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"myVault\" | i18n }}\n            </button>\n          </span>\n        </li>\n        <li\n          class=\"filter-option\"\n          *ngFor=\"let organization of organizations\"\n          [ngClass]=\"{ active: organization.id === activeFilter.selectedOrganizationId }\"\n        >\n          <span class=\"filter-buttons\">\n            <button\n              class=\"filter-button\"\n              [ngClass]=\"{ 'disabled-organization': !organization.enabled }\"\n              (click)=\"applyOrganizationFilter(organization)\"\n              appA11yTitle=\"{{ 'vault' | i18n }}: {{ organization.name }}\"\n            >\n              <i class=\"bwi bwi-fw bwi-business\" aria-hidden=\"true\"></i>\n              {{ organization.name }}\n            </button>\n            <span class=\"ml-auto\">\n              <i\n                *ngIf=\"!organization.enabled\"\n                class=\"org-options bwi bwi-fw bwi-exclamation-triangle text-danger\"\n                aria-label=\"{{ 'organizationIsDisabled' | i18n }}\"\n                appA11yTitle=\"{{ 'organizationIsDisabled' | i18n }}\"\n              ></i\n              ><button [bitMenuTriggerFor]=\"orgMenu\" class=\"org-options\">\n                <i class=\"bwi bwi-ellipsis-v\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu class=\"filter-organization-options\" #orgMenu>\n                <app-organization-options [organization]=\"organization\"></app-organization-options>\n              </bit-menu>\n            </span>\n          </span>\n        </li>\n        <li class=\"filter-option\" *ngIf=\"!(displayMode === 'singleOrganizationPolicy')\">\n          <span class=\"filter-buttons\">\n            <a href=\"#\" routerLink=\"/create-organization\" class=\"filter-button\">\n              <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n              &nbsp;{{ \"newOrganization\" | i18n }}\n            </a>\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n  </ng-container>\n  <hr />\n</ng-container>\n","import { Component } from \"@angular/core\";\n\nimport { OrganizationFilterComponent as BaseOrganizationFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/organization-filter.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-organization-filter\",\n  templateUrl: \"organization-filter.component.html\",\n})\nexport class OrganizationFilterComponent extends BaseOrganizationFilterComponent {\n  displayText = \"allVaults\";\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {\n    super();\n  }\n\n  async applyOrganizationFilter(organization: Organization) {\n    if (organization.enabled) {\n      //proceed with default behaviour for enabled organizations\n      super.applyOrganizationFilter(organization);\n    } else {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"disabledOrganizationFilterError\")\n      );\n    }\n  }\n}\n","<div class=\"card vault-filters\">\n  <div class=\"container loading-spinner\" *ngIf=\"!isLoaded\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n  </div>\n  <div *ngIf=\"isLoaded\">\n    <div class=\"card-header d-flex\">\n      {{ \"filters\" | i18n }}\n      <a\n        class=\"ml-auto\"\n        href=\"https://bitwarden.com/help/searching-vault/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <div class=\"card-body\">\n      <input\n        type=\"search\"\n        placeholder=\"{{ (searchPlaceholder | i18n) || ('searchVault' | i18n) }}\"\n        id=\"search\"\n        class=\"form-control\"\n        [(ngModel)]=\"searchText\"\n        (input)=\"searchTextChanged()\"\n        autocomplete=\"off\"\n        appAutofocus\n      />\n      <app-organization-filter\n        [hide]=\"hideOrganizations\"\n        [activeFilter]=\"activeFilter\"\n        [collapsedFilterNodes]=\"collapsedFilterNodes\"\n        [organizations]=\"organizations\"\n        [activePersonalOwnershipPolicy]=\"activePersonalOwnershipPolicy\"\n        [activeSingleOrganizationPolicy]=\"activeSingleOrganizationPolicy\"\n        (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n        (onFilterChange)=\"applyFilter($event)\"\n      ></app-organization-filter>\n      <div class=\"filter\">\n        <app-status-filter\n          [hideFavorites]=\"hideFavorites\"\n          [hideTrash]=\"hideTrash\"\n          [activeFilter]=\"activeFilter\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-status-filter>\n      </div>\n      <div class=\"filter\">\n        <app-type-filter\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-type-filter>\n      </div>\n      <div class=\"filter\">\n        <app-folder-filter\n          [hide]=\"hideFolders\"\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          [folderNodes]=\"folders$ | async\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n          (onAddFolder)=\"addFolder()\"\n          (onEditFolder)=\"editFolder($event)\"\n        ></app-folder-filter>\n      </div>\n      <div class=\"filter\">\n        <app-collection-filter\n          [hide]=\"hideCollections\"\n          [activeFilter]=\"activeFilter\"\n          [collapsedFilterNodes]=\"collapsedFilterNodes\"\n          [collectionNodes]=\"collections\"\n          (onNodeCollapseStateChange)=\"toggleFilterNodeCollapseState($event)\"\n          (onFilterChange)=\"applyFilter($event)\"\n        ></app-collection-filter>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { VaultFilterComponent as BaseVaultFilterComponent } from \"@bitwarden/angular/vault/vault-filter/components/vault-filter.component\";\n\nimport { VaultFilterService } from \"./shared/vault-filter.service\";\n\n@Component({\n  selector: \"./app-vault-filter\",\n  templateUrl: \"vault-filter.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class VaultFilterComponent extends BaseVaultFilterComponent {\n  @Output() onSearchTextChanged = new EventEmitter<string>();\n\n  searchPlaceholder: string;\n  searchText = \"\";\n\n  constructor(protected vaultFilterService: VaultFilterService) {\n    // This empty constructor is required to provide the web vaultFilterService subclass to super()\n    // TODO: refactor this to use proper dependency injection\n    super(vaultFilterService);\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.vaultFilterService.collapsedFilterNodes$.subscribe((nodes) => {\n      this.collapsedFilterNodes = nodes;\n    });\n  }\n\n  searchTextChanged() {\n    this.onSearchTextChanged.emit(this.searchText);\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { VaultFilterComponent as BaseVaultFilterComponent } from \"../../../vault/vault-filter/vault-filter.component\";\n\n@Component({\n  selector: \"app-organization-vault-filter\",\n  templateUrl: \"../../../vault/vault-filter/vault-filter.component.html\",\n})\nexport class VaultFilterComponent extends BaseVaultFilterComponent {\n  hideOrganizations = true;\n  hideFavorites = true;\n  hideFolders = true;\n\n  organization: Organization;\n\n  async initCollections() {\n    if (this.organization.canEditAnyCollection) {\n      return await this.vaultFilterService.buildAdminCollections(this.organization.id);\n    }\n    return await this.vaultFilterService.buildCollections(this.organization.id);\n  }\n\n  async reloadCollectionsAndFolders() {\n    this.collections = await this.initCollections();\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherBulkDeleteRequest } from \"@bitwarden/common/models/request/cipher-bulk-delete.request\";\n\n@Component({\n  selector: \"app-vault-bulk-delete\",\n  templateUrl: \"bulk-delete.component.html\",\n})\nexport class BulkDeleteComponent {\n  @Input() cipherIds: string[] = [];\n  @Input() permanent = false;\n  @Input() organization: Organization;\n  @Output() onDeleted = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {}\n\n  async submit() {\n    if (!this.organization || !this.organization.canEditAnyCollection) {\n      await this.deleteCiphers();\n    } else {\n      await this.deleteCiphersAdmin();\n    }\n\n    await this.formPromise;\n\n    this.onDeleted.emit();\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(this.permanent ? \"permanentlyDeletedItems\" : \"deletedItems\")\n    );\n  }\n\n  private async deleteCiphers() {\n    if (this.permanent) {\n      this.formPromise = await this.cipherService.deleteManyWithServer(this.cipherIds);\n    } else {\n      this.formPromise = await this.cipherService.softDeleteManyWithServer(this.cipherIds);\n    }\n  }\n\n  private async deleteCiphersAdmin() {\n    const deleteRequest = new CipherBulkDeleteRequest(this.cipherIds, this.organization.id);\n    if (this.permanent) {\n      this.formPromise = await this.apiService.deleteManyCiphersAdmin(deleteRequest);\n    } else {\n      this.formPromise = await this.apiService.putDeleteManyCiphersAdmin(deleteRequest);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"deleteSelectedTitle\">\n          {{ (permanent ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{\n          (permanent ? \"permanentlyDeleteSelectedItemsDesc\" : \"deleteSelectedItemsDesc\")\n            | i18n: cipherIds.length\n        }}\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          appAutoFocus\n          type=\"submit\"\n          class=\"btn btn-danger btn-submit\"\n          [disabled]=\"form.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (permanent ? \"permanentlyDelete\" : \"delete\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"moveSelectedTitle\">\n          {{ \"moveSelected\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"moveSelectedItemsDesc\" | i18n: cipherIds.length }}</p>\n        <div class=\"form-group\">\n          <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n          <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"folderId\" class=\"form-control\">\n            <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n          </select>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, Observable } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\n@Component({\n  selector: \"app-vault-bulk-move\",\n  templateUrl: \"bulk-move.component.html\",\n})\nexport class BulkMoveComponent implements OnInit {\n  @Input() cipherIds: string[] = [];\n  @Output() onMoved = new EventEmitter();\n\n  folderId: string = null;\n  folders$: Observable<FolderView[]>;\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private folderService: FolderService\n  ) {}\n\n  async ngOnInit() {\n    this.folders$ = this.folderService.folderViews$;\n    this.folderId = (await firstValueFrom(this.folders$))[0].id;\n  }\n\n  async submit() {\n    this.formPromise = this.cipherService.moveManyWithServer(this.cipherIds, this.folderId);\n    await this.formPromise;\n    this.onMoved.emit();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"movedItems\"));\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-vault-bulk-restore\",\n  templateUrl: \"bulk-restore.component.html\",\n})\nexport class BulkRestoreComponent {\n  @Input() cipherIds: string[] = [];\n  @Output() onRestored = new EventEmitter();\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async submit() {\n    this.formPromise = this.cipherService.restoreManyWithServer(this.cipherIds);\n    await this.formPromise;\n    this.onRestored.emit();\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItems\"));\n  }\n}\n","type CheckableBase = {\n  checked?: boolean;\n};\n\nexport type Checkable<T> = T & CheckableBase;\n\nexport function isChecked(item: CheckableBase): boolean {\n  return !!item.checked;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"restoreSelectedTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"restoreSelectedTitle\">\n          {{ \"restoreSelected\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"restoreSelectedItemsDesc\" | i18n: cipherIds.length }}\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          appAutoFocus\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"restore\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedToOrgTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"moveSelectedToOrgTitle\">\n          {{ \"moveSelectedToOrg\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"moveManyToOrgDesc\" | i18n }}</p>\n        <p>\n          {{\n            \"moveSelectedItemsCountDesc\"\n              | i18n: this.ciphers.length:shareableCiphers.length:nonShareableCount\n          }}\n        </p>\n        <div class=\"form-group\">\n          <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n          <select\n            id=\"organization\"\n            name=\"OrganizationId\"\n            [(ngModel)]=\"organizationId\"\n            class=\"form-control\"\n            (change)=\"filterCollections()\"\n          >\n            <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n          </select>\n        </div>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"c.checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [disabled]=\"form.loading || !canSave\"\n          [ngClass]=\"{ loading: form.loading }\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { Checkable, isChecked } from \"@bitwarden/common/types/checkable\";\n\n@Component({\n  selector: \"app-vault-bulk-share\",\n  templateUrl: \"bulk-share.component.html\",\n})\nexport class BulkShareComponent implements OnInit {\n  @Input() ciphers: CipherView[] = [];\n  @Input() organizationId: string;\n  @Output() onShared = new EventEmitter();\n\n  nonShareableCount = 0;\n  collections: Checkable<CollectionView>[] = [];\n  organizations: Organization[] = [];\n  shareableCiphers: CipherView[] = [];\n  formPromise: Promise<void>;\n\n  private writeableCollections: CollectionView[] = [];\n\n  constructor(\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.shareableCiphers = this.ciphers.filter(\n      (c) => !c.hasOldAttachments && c.organizationId == null\n    );\n    this.nonShareableCount = this.ciphers.length - this.shareableCiphers.length;\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.filter((c) => !c.readOnly);\n    this.organizations = await this.organizationService.getAll();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  filterCollections() {\n    this.selectAll(false);\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit() {\n    const checkedCollectionIds = this.collections.filter(isChecked).map((c) => c.id);\n    try {\n      this.formPromise = this.cipherService.shareManyWithServer(\n        this.shareableCiphers,\n        this.organizationId,\n        checkedCollectionIds\n      );\n      await this.formPromise;\n      this.onShared.emit();\n      const orgName =\n        this.organizations.find((o) => o.id === this.organizationId)?.name ??\n        this.i18nService.t(\"organization\");\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"movedItemsToOrg\", orgName)\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  check(c: Checkable<CollectionView>, select?: boolean) {\n    c.checked = select == null ? !c.checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n\n  get canSave() {\n    if (\n      this.shareableCiphers != null &&\n      this.shareableCiphers.length > 0 &&\n      this.collections != null\n    ) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if (this.collections[i].checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"dropdown mr-2\" appListDropdown>\n  <button\n    class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n    type=\"button\"\n    id=\"bulkActionsButton\"\n    data-toggle=\"dropdown\"\n    aria-haspopup=\"true\"\n    aria-expanded=\"false\"\n    appA11yTitle=\"{{ 'options' | i18n }}\"\n  >\n    <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n  </button>\n  <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n    <button\n      class=\"dropdown-item\"\n      appStopClick\n      (click)=\"bulkMove()\"\n      *ngIf=\"!deleted && !organization\"\n    >\n      <i class=\"bwi bwi-fw bwi-folder\" aria-hidden=\"true\"></i>\n      {{ \"moveSelected\" | i18n }}\n    </button>\n    <button\n      class=\"dropdown-item\"\n      appStopClick\n      (click)=\"bulkShare()\"\n      *ngIf=\"!deleted && !organization\"\n    >\n      <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n      {{ \"moveSelectedToOrg\" | i18n }}\n    </button>\n    <button class=\"dropdown-item\" (click)=\"bulkRestore()\" *ngIf=\"deleted && !organization\">\n      <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n      {{ \"restoreSelected\" | i18n }}\n    </button>\n    <button class=\"dropdown-item text-danger\" (click)=\"bulkDelete()\">\n      <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n      {{ (deleted ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n    </button>\n    <div class=\"dropdown-divider\"></div>\n    <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n      <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n      {{ \"selectAll\" | i18n }}\n    </button>\n    <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n      <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n      {{ \"unselectAll\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<ng-template #bulkDeleteTemplate></ng-template>\n<ng-template #bulkRestoreTemplate></ng-template>\n<ng-template #bulkMoveTemplate></ng-template>\n<ng-template #bulkShareTemplate></ng-template>\n","import { Component, Input, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { BulkDeleteComponent } from \"./bulk-delete.component\";\nimport { BulkMoveComponent } from \"./bulk-move.component\";\nimport { BulkRestoreComponent } from \"./bulk-restore.component\";\nimport { BulkShareComponent } from \"./bulk-share.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\n\n@Component({\n  selector: \"app-vault-bulk-actions\",\n  templateUrl: \"bulk-actions.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class BulkActionsComponent {\n  @Input() ciphersComponent: CiphersComponent;\n  @Input() deleted: boolean;\n  @Input() organization: Organization;\n\n  @ViewChild(\"bulkDeleteTemplate\", { read: ViewContainerRef, static: true })\n  bulkDeleteModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRestoreTemplate\", { read: ViewContainerRef, static: true })\n  bulkRestoreModalRef: ViewContainerRef;\n  @ViewChild(\"bulkMoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkMoveModalRef: ViewContainerRef;\n  @ViewChild(\"bulkShareTemplate\", { read: ViewContainerRef, static: true })\n  bulkShareModalRef: ViewContainerRef;\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async bulkDelete() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkDeleteComponent,\n      this.bulkDeleteModalRef,\n      (comp) => {\n        comp.permanent = this.deleted;\n        comp.cipherIds = selectedIds;\n        comp.organization = this.organization;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeleted.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkRestore() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRestoreComponent,\n      this.bulkRestoreModalRef,\n      (comp) => {\n        comp.cipherIds = selectedIds;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onRestored.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkShare() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedCiphers = this.ciphersComponent.getSelected();\n    if (selectedCiphers.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkShareComponent,\n      this.bulkShareModalRef,\n      (comp) => {\n        comp.ciphers = selectedCiphers;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onShared.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async bulkMove() {\n    if (!(await this.promptPassword())) {\n      return;\n    }\n\n    const selectedIds = this.ciphersComponent.getSelectedIds();\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkMoveComponent,\n      this.bulkMoveModalRef,\n      (comp) => {\n        comp.cipherIds = selectedIds;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onMoved.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  selectAll(select: boolean) {\n    this.ciphersComponent.selectAll(select);\n  }\n\n  private async promptPassword() {\n    const selectedCiphers = this.ciphersComponent.getSelected();\n    const notProtected = !selectedCiphers.find(\n      (cipher) => cipher.reprompt !== CipherRepromptType.None\n    );\n\n    return notProtected || (await this.passwordRepromptService.showPasswordPrompt());\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"groupings\">\n        <div class=\"content\">\n          <div class=\"inner-content\">\n            <app-organization-vault-filter\n              #vaultFilter\n              [activeFilter]=\"activeFilter\"\n              (onFilterChange)=\"applyVaultFilter($event)\"\n              (onSearchTextChanged)=\"filterSearchText($event)\"\n            ></app-organization-vault-filter>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"vaultItems\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <app-vault-bulk-actions\n            [ciphersComponent]=\"ciphersComponent\"\n            [deleted]=\"deleted\"\n            [organization]=\"organization\"\n          >\n          </app-vault-bulk-actions>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm ml-auto\"\n            (click)=\"addCipher()\"\n            *ngIf=\"!deleted\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"addItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout type=\"warning\" *ngIf=\"deleted\" icon=\"bwi bwi-exclamation-triangle\">\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-org-vault-ciphers\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onCollectionsClicked)=\"editCipherCollections($event)\"\n        (onEventsClicked)=\"viewEvents($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n      >\n      </app-org-vault-ciphers>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #eventsTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { VaultService } from \"../../vault/shared/vault.service\";\nimport { EntityEventsComponent } from \"../manage/entity-events.component\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { VaultFilterComponent } from \"./vault-filter/vault-filter.component\";\n\nconst BroadcasterSubscriptionId = \"OrgVaultComponent\";\n\n@Component({\n  selector: \"app-org-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(\"vaultFilter\", { static: true })\n  vaultFilterComponent: VaultFilterComponent;\n  @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n\n  organization: Organization;\n  collectionId: string = null;\n  type: CipherType = null;\n  trashCleanupWarning: string = null;\n  activeFilter: VaultFilter = new VaultFilter();\n\n  // This is a hack to avoid redundant api calls that fetch OrganizationVaultFilterComponent collections\n  // When it makes sense to do so we should leverage some other communication method for change events that isn't directly tied to the query param for organizationId\n  // i.e. exposing the VaultFiltersService to the OrganizationSwitcherComponent to make relevant updates from a change event instead of just depending on the router\n  firstLoaded = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private syncService: SyncService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private messagingService: MessagingService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private vaultService: VaultService,\n    private cipherService: CipherService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  ngOnInit() {\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params: any) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n      this.vaultFilterComponent.organization = this.organization;\n      this.ciphersComponent.organization = this.organization;\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.ciphersComponent.searchText = this.vaultFilterComponent.searchText = qParams.search;\n        if (!this.organization.canViewAllCollections) {\n          await this.syncService.fullSync(false);\n          this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n            this.ngZone.run(async () => {\n              switch (message.command) {\n                case \"syncCompleted\":\n                  if (message.successfully) {\n                    await Promise.all([\n                      this.vaultFilterComponent.reloadCollectionsAndFolders(),\n                      this.ciphersComponent.refresh(),\n                    ]);\n                    this.changeDetectorRef.detectChanges();\n                  }\n                  break;\n              }\n            });\n          });\n        }\n\n        if (this.firstLoaded) {\n          await this.vaultFilterComponent.reloadCollectionsAndFolders();\n        }\n        this.firstLoaded = true;\n\n        await this.ciphersComponent.reload();\n\n        if (qParams.viewEvents != null) {\n          const cipher = this.ciphersComponent.ciphers.filter((c) => c.id === qParams.viewEvents);\n          if (cipher.length > 0) {\n            this.viewEvents(cipher[0]);\n          }\n        }\n\n        /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n        this.route.queryParams.subscribe(async (params) => {\n          const cipherId = getCipherIdFromParams(params);\n          if (cipherId) {\n            if (\n              // Handle users with implicit collection access since they use the admin endpoint\n              this.organization.canEditAnyCollection ||\n              (await this.cipherService.get(cipherId)) != null\n            ) {\n              this.editCipherId(cipherId);\n            } else {\n              this.platformUtilsService.showToast(\n                \"error\",\n                this.i18nService.t(\"errorOccurred\"),\n                this.i18nService.t(\"unknownCipher\")\n              );\n              this.router.navigate([], {\n                queryParams: { cipherId: null, itemId: null },\n                queryParamsHandling: \"merge\",\n              });\n            }\n          }\n        });\n      });\n    });\n  }\n\n  get deleted(): boolean {\n    return this.activeFilter.status === \"trash\";\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async applyVaultFilter(vaultFilter: VaultFilter) {\n    this.ciphersComponent.showAddNew = vaultFilter.status !== \"trash\";\n    this.activeFilter = vaultFilter;\n\n    // Hack to avoid calling cipherService.getAllFromApiForOrganization every time the vault filter changes.\n    // Call CiphersComponent.applyFilter directly instead of going through CiphersComponent.reload, which\n    // reloads all the ciphers unnecessarily. Will be fixed properly by EC-14.\n    this.ciphersComponent.loaded = false;\n    this.ciphersComponent.deleted = vaultFilter.status === \"trash\" || false;\n    await this.ciphersComponent.applyFilter(this.activeFilter.buildFilter());\n    this.ciphersComponent.loaded = true;\n    // End hack\n\n    this.vaultFilterComponent.searchPlaceholder =\n      this.vaultService.calculateSearchBarLocalizationString(this.activeFilter);\n    this.go();\n  }\n\n  filterSearchText(searchText: string) {\n    this.ciphersComponent.searchText = searchText;\n    this.ciphersComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    if (this.organization.maxStorageGb == null || this.organization.maxStorageGb === 0) {\n      this.messagingService.send(\"upgradeOrganization\", { organizationId: cipher.organizationId });\n      return;\n    }\n\n    let madeAttachmentChanges = false;\n\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.ciphersComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        if (this.organization.canEditAnyCollection) {\n          comp.collectionIds = cipher.collectionIds;\n          comp.collections = this.vaultFilterComponent.collections.fullList.filter(\n            (c) => !c.readOnly && c.id != null\n          );\n        }\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.organizationId = this.organization.id;\n    component.type = this.type;\n    if (this.organization.canEditAnyCollection) {\n      component.collections = this.vaultFilterComponent.collections.fullList.filter(\n        (c) => !c.readOnly && c.id != null\n      );\n    }\n    if (this.collectionId != null) {\n      component.collectionIds = [this.collectionId];\n    }\n  }\n\n  async editCipher(cipher: CipherView) {\n    return this.editCipherId(cipher?.id);\n  }\n\n  async editCipherId(cipherId: string) {\n    const cipher = await this.cipherService.get(cipherId);\n    if (cipher != null && cipher.reprompt != 0) {\n      if (!(await this.passwordRepromptService.showPasswordPrompt())) {\n        this.go({ cipherId: null, itemId: null });\n        return;\n      }\n    }\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipherId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n\n    modal.onClosedPromise().then(() => {\n      this.go({ cipherId: null, itemId: null });\n    });\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n    component.organizationId = this.organization.id;\n    if (this.organization.canEditAnyCollection) {\n      component.collections = this.vaultFilterComponent.collections.fullList.filter(\n        (c) => !c.readOnly && c.id != null\n      );\n    }\n    // Regardless of Admin state, the collection Ids need to passed manually as they are not assigned value\n    // in the add-edit componenet\n    component.collectionIds = cipher.collectionIds;\n  }\n\n  async viewEvents(cipher: CipherView) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = cipher.name;\n      comp.organizationId = this.organization.id;\n      comp.entityId = cipher.id;\n      comp.showUser = true;\n      comp.entity = \"cipher\";\n    });\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        type: this.activeFilter.cipherType,\n        collectionId: this.activeFilter.selectedCollectionId,\n        deleted: this.deleted ? true : null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      queryParamsHandling: \"merge\",\n      replaceUrl: true,\n    });\n  }\n}\n\n/**\n * Allows backwards compatibility with\n * old links that used the original `cipherId` param\n */\nconst getCipherIdFromParams = (params: Params): string => {\n  return params[\"itemId\"] || params[\"cipherId\"];\n};\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { VaultComponent } from \"./vault.component\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: VaultComponent,\n    data: { titleId: \"vaults\" },\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VaultRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { VaultSharedModule } from \"../../vault/shared/vault-shared.module\";\n\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { VaultFilterModule } from \"./vault-filter/vault-filter.module\";\nimport { VaultRoutingModule } from \"./vault-routing.module\";\nimport { VaultComponent } from \"./vault.component\";\n\n@NgModule({\n  imports: [VaultSharedModule, VaultRoutingModule, VaultFilterModule],\n  declarations: [VaultComponent, CiphersComponent],\n  exports: [VaultComponent],\n})\nexport class VaultModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport {\n  canAccessOrgAdmin,\n  canAccessManageTab,\n  canAccessSettingsTab,\n  canAccessToolsTab,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { OrganizationPermissionsGuard } from \"./guards/org-permissions.guard\";\nimport { OrganizationLayoutComponent } from \"./layouts/organization-layout.component\";\nimport { CollectionsComponent } from \"./manage/collections.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { GroupsComponent } from \"./manage/groups.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { PoliciesComponent } from \"./manage/policies.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { OrganizationBillingComponent } from \"./settings/organization-billing.component\";\nimport { OrganizationSubscriptionComponent } from \"./settings/organization-subscription.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { TwoFactorSetupComponent } from \"./settings/two-factor-setup.component\";\nimport { ExposedPasswordsReportComponent } from \"./tools/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent } from \"./tools/reused-passwords-report.component\";\nimport { ToolsComponent } from \"./tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./tools/weak-passwords-report.component\";\nimport { VaultModule } from \"./vault/vault.module\";\n\nconst routes: Routes = [\n  {\n    path: \":organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuard, OrganizationPermissionsGuard],\n    data: {\n      organizationPermissions: canAccessOrgAdmin,\n    },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"vault\" },\n      {\n        path: \"vault\",\n        loadChildren: () => VaultModule,\n      },\n      {\n        path: \"tools\",\n        component: ToolsComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: canAccessToolsTab,\n        },\n        children: [\n          {\n            path: \"\",\n            pathMatch: \"full\",\n            redirectTo: \"import\",\n          },\n          {\n            path: \"\",\n            loadChildren: () =>\n              import(\"./tools/import-export/org-import-export.module\").then(\n                (m) => m.OrganizationImportExportModule\n              ),\n          },\n          {\n            path: \"exposed-passwords-report\",\n            component: ExposedPasswordsReportComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"exposedPasswordsReport\",\n              organizationPermissions: (org: Organization) => org.canAccessReports,\n            },\n          },\n          {\n            path: \"inactive-two-factor-report\",\n            component: InactiveTwoFactorReportComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"inactive2faReport\",\n              organizationPermissions: (org: Organization) => org.canAccessReports,\n            },\n          },\n          {\n            path: \"reused-passwords-report\",\n            component: ReusedPasswordsReportComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"reusedPasswordsReport\",\n              organizationPermissions: (org: Organization) => org.canAccessReports,\n            },\n          },\n          {\n            path: \"unsecured-websites-report\",\n            component: UnsecuredWebsitesReportComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"unsecuredWebsitesReport\",\n              organizationPermissions: (org: Organization) => org.canAccessReports,\n            },\n          },\n          {\n            path: \"weak-passwords-report\",\n            component: WeakPasswordsReportComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"weakPasswordsReport\",\n              organizationPermissions: (org: Organization) => org.canAccessReports,\n            },\n          },\n        ],\n      },\n      {\n        path: \"manage\",\n        component: ManageComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: canAccessManageTab,\n        },\n        children: [\n          {\n            path: \"\",\n            pathMatch: \"full\",\n            redirectTo: \"people\",\n          },\n          {\n            path: \"collections\",\n            component: CollectionsComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"collections\",\n              organizationPermissions: (org: Organization) =>\n                org.canCreateNewCollections ||\n                org.canEditAnyCollection ||\n                org.canDeleteAnyCollection ||\n                org.canEditAssignedCollections ||\n                org.canDeleteAssignedCollections,\n            },\n          },\n          {\n            path: \"events\",\n            component: EventsComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"eventLogs\",\n              organizationPermissions: (org: Organization) => org.canAccessEventLogs,\n            },\n          },\n          {\n            path: \"groups\",\n            component: GroupsComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"groups\",\n              organizationPermissions: (org: Organization) => org.canManageGroups,\n            },\n          },\n          {\n            path: \"people\",\n            component: PeopleComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"people\",\n              organizationPermissions: (org: Organization) =>\n                org.canManageUsers || org.canManageUsersPassword,\n            },\n          },\n          {\n            path: \"policies\",\n            component: PoliciesComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"policies\",\n              organizationPermissions: (org: Organization) => org.canManagePolicies,\n            },\n          },\n        ],\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: { organizationPermissions: canAccessSettingsTab },\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"account\" },\n          { path: \"account\", component: AccountComponent, data: { titleId: \"myOrganization\" } },\n          {\n            path: \"two-factor\",\n            component: TwoFactorSetupComponent,\n            data: { titleId: \"twoStepLogin\" },\n          },\n          {\n            path: \"billing\",\n            component: OrganizationBillingComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              titleId: \"billing\",\n              organizationPermissions: (org: Organization) => org.canManageBilling,\n            },\n          },\n          {\n            path: \"subscription\",\n            component: OrganizationSubscriptionComponent,\n            data: { titleId: \"subscription\" },\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule {}\n","export enum PlanSponsorshipType {\n  FamiliesForEnterprise = 0,\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Params } from \"@angular/router\";\n\nimport { BaseAcceptComponent } from \"../../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-family-sponsorship\",\n  templateUrl: \"accept-family-sponsorship.component.html\",\n})\nexport class AcceptFamilySponsorshipComponent extends BaseAcceptComponent {\n  failedShortMessage = \"inviteAcceptFailedShort\";\n  failedMessage = \"inviteAcceptFailed\";\n\n  requiredParameters = [\"email\", \"token\"];\n\n  async authedHandler(qParams: Params) {\n    this.router.navigate([\"/setup/families-for-enterprise\"], { queryParams: qParams });\n  }\n\n  async unauthedHandler(qParams: Params) {\n    if (!qParams.register) {\n      this.router.navigate([\"/login\"], { queryParams: { email: qParams.email } });\n    } else {\n      this.router.navigate([\"/register\"], { queryParams: { email: qParams.email } });\n    }\n  }\n}\n","import { PlanSponsorshipType } from \"../../../enums/planSponsorshipType\";\n\nexport class OrganizationSponsorshipRedeemRequest {\n  planSponsorshipType: PlanSponsorshipType;\n  sponsoredOrganizationId: string;\n}\n","<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"sponsoredFamiliesOffer\" | i18n }}</h1>\n  </div>\n  <div *ngIf=\"loading\" class=\"mt-5 d-flex justify-content-center\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </div>\n  <div *ngIf=\"!loading && badToken\" class=\"mt-5 d-flex justify-content-center\">\n    <span>{{ \"badToken\" | i18n }}</span>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    ngNativeValidate\n    *ngIf=\"!loading && !badToken\"\n  >\n    <p>\n      <span>{{ \"acceptBitwardenFamiliesHelp\" | i18n }}</span>\n    </p>\n    <div class=\"form-group col-6\">\n      <label for=\"availableSponsorshipOrg\">{{ \"sponsoredFamiliesSelectOffer\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        [(ngModel)]=\"selectedFamilyOrganizationId\"\n        class=\"form-control\"\n        required\n      >\n        <option value=\"\" disabled>-- {{ \"select\" | i18n }} --</option>\n        <option value=\"createNew\">{{ \"newFamiliesOrganization\" | i18n }}</option>\n        <option *ngFor=\"let o of existingFamilyOrganizations$ | async\" [ngValue]=\"o.id\">\n          {{ o.name }}\n        </option>\n      </select>\n    </div>\n    <div *ngIf=\"showNewOrganization\" class=\"col-12\">\n      <app-organization-plans></app-organization-plans>\n    </div>\n    <div class=\"form-group col-6\" *ngIf=\"!showNewOrganization\">\n      <button class=\"btn btn-primary mt-2 btn-submit\" [disabled]=\"form.loading\" type=\"submit\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"acceptOffer\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n","import { Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Observable, Subject } from \"rxjs\";\nimport { first, map, takeUntil } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { PlanSponsorshipType } from \"@bitwarden/common/enums/planSponsorshipType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationSponsorshipRedeemRequest } from \"@bitwarden/common/models/request/organization/organization-sponsorship-redeem.request\";\n\nimport { OrganizationPlansComponent } from \"../../settings/organization-plans.component\";\nimport { DeleteOrganizationComponent } from \"../settings/delete-organization.component\";\n\n@Component({\n  selector: \"families-for-enterprise-setup\",\n  templateUrl: \"families-for-enterprise-setup.component.html\",\n})\nexport class FamiliesForEnterpriseSetupComponent implements OnInit, OnDestroy {\n  @ViewChild(OrganizationPlansComponent, { static: false })\n  set organizationPlansComponent(value: OrganizationPlansComponent) {\n    if (!value) {\n      return;\n    }\n\n    value.plan = PlanType.FamiliesAnnually;\n    value.product = ProductType.Families;\n    value.acceptingSponsorship = true;\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    value.onSuccess.subscribe(this.onOrganizationCreateSuccess.bind(this));\n  }\n\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  loading = true;\n  badToken = false;\n  formPromise: Promise<any>;\n\n  token: string;\n  existingFamilyOrganizations: Organization[];\n  existingFamilyOrganizations$: Observable<Organization[]>;\n\n  showNewOrganization = false;\n  _organizationPlansComponent: OrganizationPlansComponent;\n  _selectedFamilyOrganizationId = \"\";\n\n  private _destroy = new Subject<void>();\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService,\n    private organizationService: OrganizationService,\n    private modalService: ModalService\n  ) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.token == null;\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"sponsoredFamiliesAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.token = qParams.token;\n\n      await this.syncService.fullSync(true);\n      this.badToken = !(await this.apiService.postPreValidateSponsorshipToken(this.token));\n      this.loading = false;\n    });\n\n    this.existingFamilyOrganizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter((o) => o.planProductType === ProductType.Families))\n    );\n\n    this.existingFamilyOrganizations$.pipe(takeUntil(this._destroy)).subscribe((orgs) => {\n      if (orgs.length === 0) {\n        this.selectedFamilyOrganizationId = \"createNew\";\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit(this._selectedFamilyOrganizationId);\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  get selectedFamilyOrganizationId() {\n    return this._selectedFamilyOrganizationId;\n  }\n\n  set selectedFamilyOrganizationId(value: string) {\n    this._selectedFamilyOrganizationId = value;\n    this.showNewOrganization = value === \"createNew\";\n  }\n\n  private async doSubmit(organizationId: string) {\n    try {\n      const request = new OrganizationSponsorshipRedeemRequest();\n      request.planSponsorshipType = PlanSponsorshipType.FamiliesForEnterprise;\n      request.sponsoredOrganizationId = organizationId;\n\n      await this.apiService.postRedeemSponsorship(this.token, request);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"sponsoredFamiliesOfferRedeemed\")\n      );\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      if (this.showNewOrganization) {\n        await this.modalService.openViewRef(\n          DeleteOrganizationComponent,\n          this.deleteModalRef,\n          (comp) => {\n            comp.organizationId = organizationId;\n            comp.deleteOrganizationRequestType = \"InvalidFamiliesForEnterprise\";\n            // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n            comp.onSuccess.subscribe(() => {\n              this.router.navigate([\"/\"]);\n            });\n          }\n        );\n      }\n      this.validationService.showError(this.i18nService.t(\"sponsorshipTokenHasExpired\"));\n    }\n  }\n\n  private async onOrganizationCreateSuccess(value: any) {\n    // Use newly created organization id\n    await this.doSubmit(value.organizationId);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from \"@angular/router\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HasPremiumGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private messagingService: MessagingService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const userHasPremium = await this.stateService.getCanAccessPremium();\n\n    if (!userHasPremium) {\n      this.messagingService.send(\"premiumRequired\");\n    }\n\n    // Prevent trapping the user on the login page, since that's an awful UX flow\n    if (!userHasPremium && this.router.url === \"/login\") {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    return userHasPremium;\n  }\n}\n","export enum ReportVariant {\n  Enabled = \"Enabled\",\n  RequiresPremium = \"RequiresPremium\",\n  RequiresUpgrade = \"RequiresUpgrade\",\n}\n","<div class=\"page-header\">\n  <h1>{{ \"dataBreachReport\" | i18n }}</h1>\n</div>\n<p>{{ \"breachDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"username\">{{ \"username\" | i18n }}</label>\n      <input\n        id=\"username\"\n        type=\"text\"\n        name=\"Username\"\n        class=\"form-control\"\n        [(ngModel)]=\"username\"\n        required\n      />\n      <small class=\"form-text text-muted\">{{ \"breachCheckUsernameEmail\" | i18n }}</small>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"checkBreaches\" | i18n }}\n  </button>\n</form>\n<div class=\"mt-4\" *ngIf=\"!form.loading && checkedUsername\">\n  <p *ngIf=\"error\">{{ \"reportError\" | i18n }}...</p>\n  <ng-container *ngIf=\"!error\">\n    <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!breachedAccounts.length\">\n      {{ \"breachUsernameNotFound\" | i18n: checkedUsername }}\n    </app-callout>\n    <app-callout type=\"danger\" title=\"{{ 'breachFound' | i18n }}\" *ngIf=\"breachedAccounts.length\">\n      {{ \"breachUsernameFound\" | i18n: checkedUsername:breachedAccounts.length }}\n    </app-callout>\n    <ul class=\"list-group list-group-breach\" *ngIf=\"breachedAccounts.length\">\n      <li *ngFor=\"let a of breachedAccounts\" class=\"list-group-item min-height-fix\">\n        <div class=\"row\">\n          <div class=\"col-2 text-center\">\n            <img [src]=\"a.logoPath\" alt=\"\" class=\"img-fluid\" />\n          </div>\n          <div class=\"col-7\">\n            <h3 class=\"text-lg\">{{ a.title }}</h3>\n            <p [innerHTML]=\"a.description\"></p>\n            <p class=\"mb-1\">{{ \"compromisedData\" | i18n }}:</p>\n            <ul>\n              <li *ngFor=\"let d of a.dataClasses\">{{ d }}</li>\n            </ul>\n          </div>\n          <div class=\"col-3\">\n            <dl>\n              <dt>{{ \"website\" | i18n }}</dt>\n              <dd>{{ a.domain }}</dd>\n              <dt>{{ \"affectedUsers\" | i18n }}</dt>\n              <dd>{{ a.pwnCount | number }}</dd>\n              <dt>{{ \"breachOccurred\" | i18n }}</dt>\n              <dd>{{ a.breachDate | date: \"mediumDate\" }}</dd>\n              <dt>{{ \"breachReported\" | i18n }}</dt>\n              <dd>{{ a.addedDate | date: \"mediumDate\" }}</dd>\n            </dl>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </ng-container>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { BreachAccountResponse } from \"@bitwarden/common/models/response/breach-account.response\";\n\n@Component({\n  selector: \"app-breach-report\",\n  templateUrl: \"breach-report.component.html\",\n})\nexport class BreachReportComponent implements OnInit {\n  error = false;\n  username: string;\n  checkedUsername: string;\n  breachedAccounts: BreachAccountResponse[] = [];\n  formPromise: Promise<BreachAccountResponse[]>;\n\n  constructor(private auditService: AuditService, private stateService: StateService) {}\n\n  async ngOnInit() {\n    this.username = await this.stateService.getEmail();\n  }\n\n  async submit() {\n    this.error = false;\n    this.username = this.username.toLowerCase();\n    try {\n      this.formPromise = this.auditService.breachedAccounts(this.username);\n      this.breachedAccounts = await this.formPromise;\n    } catch {\n      this.error = true;\n    }\n    this.checkedUsername = this.username;\n  }\n}\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportBreach = svgIcon`\n  <svg width=\"58\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.569 74H13.007a7 7 0 0 1-7-7V31.077a7 7 0 0 1 7-7h19.101a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.912V67a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M44.576 69.055H18.015a7 7 0 0 1-7-7V26.132a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.911v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M50 63.698H23.439a7 7 0 0 1-7-7V20.775a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.575A7 7 0 0 1 57 28.35v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M44.648 13.599v3.95a8 8 0 0 0 8 8h4.518\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M23.533 37.736H49.49M23.533 46.802H49.49M23.533 42.269H49.49M23.533 55.456H49.49M23.533 50.923H49.49\" />\n    <path d=\"M1 16.483C1 7.944 8.013 1 16.69 1c8.678 0 15.691 6.944 15.691 15.483 0 8.54-7.013 15.484-15.69 15.484C8.012 31.967 1 25.023 1 16.484Z\" fill=\"#518FFF\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"m16.562 7.979.1 11.538\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n    <ellipse rx=\"1.252\" ry=\"1.236\" transform=\"rotate(-.479 2802.219 -1964.476) skewX(.012)\" fill=\"#fff\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportExposedPasswords = svgIcon`\n  <svg width=\"101\" height=\"77\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.374 50.192a26.42 26.42 0 0 0 9.111 1.608c14.34 0 25.965-11.372 25.965-25.4 0-.337-.007-.673-.02-1.008h25.299v34.85H32.374v-10.05Z\" fill=\"currentColor\" />\n    <path d=\"M15.805 26.4c0 14.028 11.625 25.4 25.965 25.4s25.964-11.372 25.964-25.4C67.734 12.372 56.11 1 41.77 1 27.43 1 15.805 12.372 15.805 26.4Z\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M27.914 47.849a1 1 0 0 0-2 0h2Zm68.288-26.792a2.12 2.12 0 0 1 2.14 2.11h2c0-2.253-1.83-4.11-4.14-4.11v2Zm2.14 2.11v40.552h2V23.167h-2Zm0 40.552c0 1.172-.958 2.11-2.14 2.11v2c2.25 0 4.14-1.798 4.14-4.11h-2Zm-2.14 2.11H30.054v2h66.148v-2Zm-66.148 0a2.12 2.12 0 0 1-2.14-2.11h-2a4.12 4.12 0 0 0 4.14 4.11v-2Zm-2.14-2.11V47.85h-2v15.87h2Zm39.254-42.662h29.034v-2H67.168v2Z\" fill=\"#fff\" />\n    <path d=\"M67.203 25.56h25.64v34.85H32.487V50.011\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"M47.343 76h31.571\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M57.557 66.83V76M67.771 66.83V76\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"m20.995 42.873-3.972 3.972-14.61 14.61a3.413 3.413 0 0 0 0 4.826v0a3.413 3.413 0 0 0 4.827 0l14.61-14.61 3.972-3.972\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M86.037 32.488H71.845M86.037 37.81H76.28M71.845 37.81h-6.652M86.037 43.132h-6.209M74.95 43.132H61.2M86.037 48.454H71.845M66.967 48.454h-7.54M86.037 53.776H66.08M61.201 53.776h-11.53M44.793 53.776h-7.096\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n    <rect width=\"40.801\" height=\"9.757\" rx=\"4\" transform=\"matrix(-1 0 0 1 61.201 14.748)\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M16.852 33.375h28.375a4 4 0 0 1 4 4v1.757a4 4 0 0 1-4 4H22.174M66.523 33.375h-3.539a4 4 0 0 0-4 4v3.761c0 1.102.894 1.996 1.996 1.996v0\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportInactiveTwoFactor = svgIcon`\n  <svg width=\"42\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" d=\"M1 13.121h39.595v48.758H1z\" />\n    <rect x=\"1\" y=\"1\" width=\"39.595\" height=\"73\" rx=\"8\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M12.344 8.091h16.907M18.907 67.424h3.025M31.503 32.515c-2.047-4.337-6.717-7.061-11.73-6.414a11.356 11.356 0 0 0-9.125 7.126M10.816 42.016c2.047 4.337 6.718 7.062 11.73 6.414 4.346-.562 7.8-3.51 9.213-7.358\" />\n    <path d=\"m33.584 29.293-1.295 4.625-4.625-1.295M8.523 44.725l1.441-4.581 4.582 1.441\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportReusedPasswords = svgIcon`\n  <svg width=\"102\" height=\"102\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M57.983 15.06a35.664 35.664 0 0 1 14.531 6.27c16.164 11.78 19.585 34.613 7.643 51a37.227 37.227 0 0 1-6.81 7.138m-32.842 6.697a35.708 35.708 0 0 1-11.239-5.495c-16.163-11.78-19.585-34.613-7.642-51a37.55 37.55 0 0 1 3.295-3.929\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M93.909 64.598H7.72c-.708 0-1.275-.662-1.275-1.49V40.273c0-.828.567-1.49 1.275-1.49H93.91c.708 0 1.275.663 1.275 1.49v22.837c.047.827-.567 1.49-1.275 1.49Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M21.532 52.186v-5.965M21.532 52.187l5.748-1.844M21.532 52.186l3.524 4.881M21.531 52.186l-3.47 4.881M21.532 52.187l-5.694-1.844M40.944 52.186v-5.965M40.944 52.187l5.694-1.844M40.944 52.187l3.525 4.88M40.944 52.187l-3.525 4.88M40.944 52.187l-5.694-1.844M54.849 57.337h11.294M74.21 57.337h11.295M41.75 83l.71 4.75-4.75.71M58.664 18.66 56 14.665 59.996 12\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportUnsecuredWebsites = svgIcon`\n  <svg width=\"113\" height=\"76\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1.71 12.983h110.362v55.11a6 6 0 0 1-6 6H7.711a6 6 0 0 1-6-6v-55.11Z\" fill=\"currentColor\" />\n    <rect x=\"1\" y=\"1.073\" width=\"110.5\" height=\"73.454\" rx=\"9\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M89.48 8.048V7.47M96.363 8.048V7.47M103.246 8.048V7.47\" stroke=\"#fff\" stroke-width=\"4\" stroke-linecap=\"round\" />\n    <path d=\"M0 12.983h111.217\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"m93.236 44.384-18.42-11.026 2.93 21.266 5.582-5.237 4.27 6.46 2.98-1.971-4.26-6.446 6.918-3.046Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <rect width=\"96.673\" height=\"6.886\" rx=\"3.443\" transform=\"matrix(-1 0 0 1 104.373 18.721)\" stroke=\"#fff\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportWeakPasswords = svgIcon`\n  <svg width=\"78\" height=\"78\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M66.493 64.415V77H9.979V64.324M9.979 44.065V32.106h56.514v12.148\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"M75.44 64.852H2.085c-.603 0-1.085-.555-1.085-1.25V44.448c0-.694.482-1.25 1.085-1.25H75.44c.603 0 1.085.556 1.085 1.25v19.156c.04.694-.482 1.25-1.085 1.25Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M13.84 54.56v-5.077M13.84 54.56l4.893-1.57M13.84 54.56l3 4.153M13.84 54.56l-2.954 4.153M13.84 54.56l-4.846-1.57M30.363 54.56v-5.077M30.363 54.56l4.846-1.57M30.363 54.56l3 4.153M30.363 54.56l-3 4.153M30.363 54.56l-4.846-1.57M42.197 59.042h9.506M58.57 59.042h9.507\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M20.863 31.364c-.274-5.285 0-15.817 1.093-18.863 1.276-3.554 6.233-10.826 15.856-11.482 4.83-.273 15.2 2.296 18.043 14.763\" stroke=\"#fff\" stroke-width=\"2\" />\n  </svg>\n`;\n","import { ReportBreach } from \"./icons/report-breach.icon\";\nimport { ReportExposedPasswords } from \"./icons/report-exposed-passwords.icon\";\nimport { ReportInactiveTwoFactor } from \"./icons/report-inactive-two-factor.icon\";\nimport { ReportReusedPasswords } from \"./icons/report-reused-passwords.icon\";\nimport { ReportUnsecuredWebsites } from \"./icons/report-unsecured-websites.icon\";\nimport { ReportWeakPasswords } from \"./icons/report-weak-passwords.icon\";\nimport { ReportEntry } from \"./models/report-entry\";\n\nexport enum ReportType {\n  ExposedPasswords = \"exposedPasswords\",\n  ReusedPasswords = \"reusedPasswords\",\n  WeakPasswords = \"weakPasswords\",\n  UnsecuredWebsites = \"unsecuredWebsites\",\n  Inactive2fa = \"inactive2fa\",\n  DataBreach = \"dataBreach\",\n}\n\ntype ReportWithoutVariant = Omit<ReportEntry, \"variant\">;\n\nexport const reports: Record<ReportType, ReportWithoutVariant> = {\n  [ReportType.ExposedPasswords]: {\n    title: \"exposedPasswordsReport\",\n    description: \"exposedPasswordsReportDesc\",\n    route: \"exposed-passwords-report\",\n    icon: ReportExposedPasswords,\n  },\n  [ReportType.ReusedPasswords]: {\n    title: \"reusedPasswordsReport\",\n    description: \"reusedPasswordsReportDesc\",\n    route: \"reused-passwords-report\",\n    icon: ReportReusedPasswords,\n  },\n  [ReportType.WeakPasswords]: {\n    title: \"weakPasswordsReport\",\n    description: \"weakPasswordsReportDesc\",\n    route: \"weak-passwords-report\",\n    icon: ReportWeakPasswords,\n  },\n  [ReportType.UnsecuredWebsites]: {\n    title: \"unsecuredWebsitesReport\",\n    description: \"unsecuredWebsitesReportDesc\",\n    route: \"unsecured-websites-report\",\n    icon: ReportUnsecuredWebsites,\n  },\n  [ReportType.Inactive2fa]: {\n    title: \"inactive2faReport\",\n    description: \"inactive2faReportDesc\",\n    route: \"inactive-two-factor-report\",\n    icon: ReportInactiveTwoFactor,\n  },\n  [ReportType.DataBreach]: {\n    title: \"dataBreachReport\",\n    description: \"breachDesc\",\n    route: \"breach-report\",\n    icon: ReportBreach,\n  },\n};\n","<a\n  class=\"tw-block tw-h-full tw-w-72 tw-overflow-hidden tw-rounded tw-border tw-border-solid tw-border-secondary-300 !tw-text-main tw-transition-all hover:tw-scale-105 hover:tw-no-underline focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2\"\n  [routerLink]=\"route\"\n>\n  <div class=\"tw-relative\">\n    <div\n      class=\"tw-flex tw-h-28 tw-bg-background-alt2 tw-text-center tw-text-primary-300\"\n      [ngClass]=\"{ 'tw-grayscale': disabled }\"\n    >\n      <div class=\"tw-m-auto\"><bit-icon [icon]=\"icon\" aria-hidden=\"true\"></bit-icon></div>\n    </div>\n    <div class=\"tw-p-5\" [ngClass]=\"{ 'tw-grayscale': disabled }\">\n      <h3 class=\"tw-mb-4 tw-text-xl tw-font-bold\">{{ title }}</h3>\n      <p class=\"tw-mb-0\">{{ description }}</p>\n    </div>\n    <span\n      bitBadge\n      badgeType=\"success\"\n      class=\"tw-absolute tw-left-2 tw-top-2 tw-leading-none\"\n      *ngIf=\"disabled\"\n    >\n      <ng-container *ngIf=\"requiresPremium\">{{ \"premium\" | i18n }}</ng-container>\n      <ng-container *ngIf=\"!requiresPremium\">{{ \"upgrade\" | i18n }}</ng-container>\n    </span>\n  </div>\n</a>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ReportVariant } from \"../models/report-variant\";\n\n@Component({\n  selector: \"app-report-card\",\n  templateUrl: \"report-card.component.html\",\n})\nexport class ReportCardComponent {\n  @Input() title: string;\n  @Input() description: string;\n  @Input() route: string;\n  @Input() icon: string;\n  @Input() variant: ReportVariant;\n\n  protected get disabled() {\n    return this.variant != ReportVariant.Enabled;\n  }\n\n  protected get requiresPremium() {\n    return this.variant == ReportVariant.RequiresPremium;\n  }\n}\n","<div class=\"tw-inline-grid tw-grid-cols-3 tw-gap-4\">\n  <div *ngFor=\"let report of reports\">\n    <app-report-card\n      [title]=\"report.title | i18n\"\n      [description]=\"report.description | i18n\"\n      [route]=\"report.route\"\n      [variant]=\"report.variant\"\n      [icon]=\"report.icon\"\n    ></app-report-card>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ReportEntry } from \"../models/report-entry\";\n\n@Component({\n  selector: \"app-report-list\",\n  templateUrl: \"report-list.component.html\",\n})\nexport class ReportListComponent {\n  @Input() reports: ReportEntry[];\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { ReportEntry } from \"../models/report-entry\";\nimport { ReportVariant } from \"../models/report-variant\";\nimport { reports, ReportType } from \"../reports\";\n\n@Component({\n  selector: \"app-reports-home\",\n  templateUrl: \"reports-home.component.html\",\n})\nexport class ReportsHomeComponent implements OnInit {\n  reports: ReportEntry[];\n\n  constructor(private stateService: StateService) {}\n\n  async ngOnInit(): Promise<void> {\n    const userHasPremium = await this.stateService.getCanAccessPremium();\n\n    const reportRequiresPremium = userHasPremium\n      ? ReportVariant.Enabled\n      : ReportVariant.RequiresPremium;\n\n    this.reports = [\n      {\n        ...reports[ReportType.ExposedPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.ReusedPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.WeakPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.UnsecuredWebsites],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.Inactive2fa],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.DataBreach],\n        variant: ReportVariant.Enabled,\n      },\n    ];\n  }\n}\n","<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n\n  <div class=\"row mt-4\">\n    <div class=\"col\">\n      <a bitButton routerLink=\"./\" *ngIf=\"!homepage\">\n        <i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i>\n        {{ \"backToReports\" | i18n }}\n      </a>\n    </div>\n  </div>\n</div>\n","<div class=\"page-header\">\n  <h1>{{ \"reports\" | i18n }}</h1>\n</div>\n\n<p>{{ \"reportsDesc\" | i18n }}</p>\n\n<app-report-list [reports]=\"reports\"></app-report-list>\n","import { Component, OnDestroy } from \"@angular/core\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { filter } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-reports-layout\",\n  templateUrl: \"reports-layout.component.html\",\n})\nexport class ReportsLayoutComponent implements OnDestroy {\n  homepage = true;\n  subscription: Subscription;\n\n  constructor(router: Router) {\n    this.subscription = router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n      .subscribe((event) => {\n        this.homepage = (event as NavigationEnd).url == \"/reports\";\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\n\nimport { HasPremiumGuard } from \"../shared/guards/has-premium.guard\";\n\nimport { BreachReportComponent } from \"./pages/breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"./pages/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./pages/inactive-two-factor-report.component\";\nimport { ReportsHomeComponent } from \"./pages/reports-home.component\";\nimport { ReusedPasswordsReportComponent } from \"./pages/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./pages/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./pages/weak-passwords-report.component\";\nimport { ReportsLayoutComponent } from \"./reports-layout.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ReportsLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: \"\", pathMatch: \"full\", component: ReportsHomeComponent, data: { homepage: true } },\n      {\n        path: \"breach-report\",\n        component: BreachReportComponent,\n        data: { titleId: \"dataBreachReport\" },\n      },\n      {\n        path: \"reused-passwords-report\",\n        component: ReusedPasswordsReportComponent,\n        data: { titleId: \"reusedPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"unsecured-websites-report\",\n        component: UnsecuredWebsitesReportComponent,\n        data: { titleId: \"unsecuredWebsitesReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"weak-passwords-report\",\n        component: WeakPasswordsReportComponent,\n        data: { titleId: \"weakPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"exposed-passwords-report\",\n        component: ExposedPasswordsReportComponent,\n        data: { titleId: \"exposedPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"inactive-two-factor-report\",\n        component: InactiveTwoFactorReportComponent,\n        data: { titleId: \"inactive2faReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReportsRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared\";\n\nimport { BreachReportComponent } from \"./pages/breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"./pages/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./pages/inactive-two-factor-report.component\";\nimport { ReportsHomeComponent } from \"./pages/reports-home.component\";\nimport { ReusedPasswordsReportComponent } from \"./pages/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./pages/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./pages/weak-passwords-report.component\";\nimport { ReportCardComponent } from \"./report-card/report-card.component\";\nimport { ReportListComponent } from \"./report-list/report-list.component\";\nimport { ReportsLayoutComponent } from \"./reports-layout.component\";\nimport { ReportsRoutingModule } from \"./reports-routing.module\";\n\n@NgModule({\n  imports: [CommonModule, SharedModule, ReportsRoutingModule],\n  declarations: [\n    BreachReportComponent,\n    ExposedPasswordsReportComponent,\n    InactiveTwoFactorReportComponent,\n    ReportCardComponent,\n    ReportListComponent,\n    ReportsLayoutComponent,\n    ReportsHomeComponent,\n    ReusedPasswordsReportComponent,\n    UnsecuredWebsitesReportComponent,\n    WeakPasswordsReportComponent,\n    WeakPasswordsReportComponent,\n  ],\n})\nexport class ReportsModule {}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccess } from \"../domain/send-access\";\n\nimport { SendFileView } from \"./send-file.view\";\nimport { SendTextView } from \"./send-text.view\";\nimport { View } from \"./view\";\n\nexport class SendAccessView implements View {\n  id: string = null;\n  name: string = null;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  expirationDate: Date = null;\n  creatorIdentifier: string = null;\n\n  constructor(s?: SendAccess) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.type = s.type;\n    this.expirationDate = s.expirationDate;\n    this.creatorIdentifier = s.creatorIdentifier;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccessResponse } from \"../response/send-access.response\";\nimport { SendAccessView } from \"../view/send-access.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SendFile } from \"./send-file\";\nimport { SendText } from \"./send-text\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SendAccess extends Domain {\n  id: string;\n  type: SendType;\n  name: EncString;\n  file: SendFile;\n  text: SendText;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(obj?: SendAccessResponse) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n        expirationDate: null,\n        creatorIdentifier: null,\n      },\n      [\"id\", \"expirationDate\", \"creatorIdentifier\"]\n    );\n\n    this.type = obj.type;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendAccessView> {\n    const model = new SendAccessView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n      },\n      null,\n      key\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(key);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(key);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","export class SendAccessRequest {\n  password: string;\n}\n","<form #form (ngSubmit)=\"load()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-center mt-5\">\n    <div class=\"col-12\">\n      <h1 class=\"lead text-center mb-4\">Bitwarden Send</h1>\n    </div>\n    <div class=\"col-12 text-center\" *ngIf=\"creatorIdentifier != null\">\n      <p>{{ \"sendCreatorIdentifier\" | i18n: creatorIdentifier }}</p>\n    </div>\n    <div class=\"col-8\" *ngIf=\"hideEmail\">\n      <app-callout type=\"warning\" title=\"{{ 'warning' | i18n }}\">\n        {{ \"viewSendHiddenEmailWarning\" | i18n }}\n        <a href=\"https://bitwarden.com/help/receive-send/\" target=\"_blank\">{{\n          \"learnMore\" | i18n\n        }}</a\n        >.\n      </app-callout>\n    </div>\n  </div>\n  <div class=\"row justify-content-center\">\n    <div class=\"col-5\">\n      <div class=\"card d-block\">\n        <div class=\"card-body\" *ngIf=\"loading\" class=\"text-center\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && passwordRequired\">\n          <p>{{ \"sendProtectedPassword\" | i18n }}</p>\n          <p>{{ \"sendProtectedPasswordDontKnow\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"password\">{{ \"password\" | i18n }}</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              name=\"Password\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"password\"\n              required\n              appInputVerbatim\n              appAutofocus\n            />\n          </div>\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && unavailable\">\n          {{ \"sendAccessUnavailable\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && error\">\n          {{ \"unexpectedError\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && !passwordRequired && send\">\n          <p class=\"text-center\">\n            <b>{{ send.name }}</b>\n          </p>\n          <hr />\n          <!-- Text -->\n          <ng-container *ngIf=\"send.type === sendType.Text\">\n            <app-callout *ngIf=\"send.text.hidden\" type=\"tip\">{{\n              \"sendHiddenByDefault\" | i18n\n            }}</app-callout>\n            <div class=\"form-group\">\n              <textarea\n                id=\"text\"\n                rows=\"8\"\n                name=\"Text\"\n                [(ngModel)]=\"sendText\"\n                class=\"form-control\"\n                readonly\n              ></textarea>\n            </div>\n            <button\n              class=\"btn btn-block btn-link\"\n              type=\"button\"\n              (click)=\"toggleText()\"\n              *ngIf=\"send.text.hidden\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showText, 'bwi-eye-slash': showText }\"\n              ></i>\n              {{ \"toggleVisibility\" | i18n }}\n            </button>\n            <button class=\"btn btn-block btn-link\" type=\"button\" (click)=\"copyText()\">\n              <i class=\"bwi bwi-copy\" aria-hidden=\"true\"></i> {{ \"copyValue\" | i18n }}\n            </button>\n          </ng-container>\n          <!-- File -->\n          <ng-container *ngIf=\"send.type === sendType.File\">\n            <p>{{ send.file.fileName }}</p>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              (click)=\"download()\"\n              *ngIf=\"!downloading\"\n            >\n              <i class=\"bwi bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"downloadFile\" | i18n }} ({{ send.file.sizeName }})\n            </button>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              *ngIf=\"downloading\"\n              disabled=\"true\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </ng-container>\n          <p *ngIf=\"expirationDate\" class=\"text-center text-muted\">\n            Expires: {{ expirationDate | date: \"medium\" }}\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 text-center mt-5 text-muted\">\n      <p class=\"mb-0\">\n        {{ \"sendAccessTaglineProductDesc\" | i18n }}<br />\n        {{ \"sendAccessTaglineLearnMore\" | i18n }}\n        <a href=\"https://www.bitwarden.com/products/send?source=web-vault\" target=\"_blank\"\n          >Bitwarden Send</a\n        >\n        {{ \"sendAccessTaglineOr\" | i18n }}\n        <a href=\"https://vault.bitwarden.com/#/register\" target=\"_blank\">{{\n          \"sendAccessTaglineSignUp\" | i18n\n        }}</a>\n        {{ \"sendAccessTaglineTryToday\" | i18n }}\n      </p>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SEND_KDF_ITERATIONS } from \"@bitwarden/common/enums/kdfType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/enc-array-buffer\";\nimport { SendAccess } from \"@bitwarden/common/models/domain/send-access\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { SendAccessRequest } from \"@bitwarden/common/models/request/send-access.request\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\nimport { SendAccessResponse } from \"@bitwarden/common/models/response/send-access.response\";\nimport { SendAccessView } from \"@bitwarden/common/models/view/send-access.view\";\n\n@Component({\n  selector: \"app-send-access\",\n  templateUrl: \"access.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccessComponent implements OnInit {\n  send: SendAccessView;\n  sendType = SendType;\n  downloading = false;\n  loading = true;\n  passwordRequired = false;\n  formPromise: Promise<SendAccessResponse>;\n  password: string;\n  showText = false;\n  unavailable = false;\n  error = false;\n  hideEmail = false;\n\n  private id: string;\n  private key: string;\n  private decKey: SymmetricCryptoKey;\n  private accessRequest: SendAccessRequest;\n\n  constructor(\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService,\n    private fileDownloadService: FileDownloadService\n  ) {}\n\n  get sendText() {\n    if (this.send == null || this.send.text == null) {\n      return null;\n    }\n    return this.showText ? this.send.text.text : this.send.text.maskedText;\n  }\n\n  get expirationDate() {\n    if (this.send == null || this.send.expirationDate == null) {\n      return null;\n    }\n    return this.send.expirationDate;\n  }\n\n  get creatorIdentifier() {\n    if (this.send == null || this.send.creatorIdentifier == null) {\n      return null;\n    }\n    return this.send.creatorIdentifier;\n  }\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.params.subscribe(async (params) => {\n      this.id = params.sendId;\n      this.key = params.key;\n      if (this.key == null || this.id == null) {\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async download() {\n    if (this.send == null || this.decKey == null) {\n      return;\n    }\n\n    if (this.downloading) {\n      return;\n    }\n\n    const downloadData = await this.apiService.getSendFileDownloadData(\n      this.send,\n      this.accessRequest\n    );\n\n    if (Utils.isNullOrWhitespace(downloadData.url)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingSendFile\"));\n      return;\n    }\n\n    this.downloading = true;\n    const response = await fetch(new Request(downloadData.url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      this.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, this.decKey);\n      this.fileDownloadService.download({\n        fileName: this.send.file.fileName,\n        blobData: decBuf,\n        downloadMethod: \"save\",\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    this.downloading = false;\n  }\n\n  copyText() {\n    this.platformUtilsService.copyToClipboard(this.send.text.text);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendTypeText\"))\n    );\n  }\n\n  toggleText() {\n    this.showText = !this.showText;\n  }\n\n  async load() {\n    this.unavailable = false;\n    this.error = false;\n    this.hideEmail = false;\n    const keyArray = Utils.fromUrlB64ToArray(this.key);\n    this.accessRequest = new SendAccessRequest();\n    if (this.password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        this.password,\n        keyArray,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      this.accessRequest.password = Utils.fromBufferToB64(passwordHash);\n    }\n    try {\n      let sendResponse: SendAccessResponse = null;\n      if (this.loading) {\n        sendResponse = await this.apiService.postSendAccess(this.id, this.accessRequest);\n      } else {\n        this.formPromise = this.apiService.postSendAccess(this.id, this.accessRequest);\n        sendResponse = await this.formPromise;\n      }\n      this.passwordRequired = false;\n      const sendAccess = new SendAccess(sendResponse);\n      this.decKey = await this.cryptoService.makeSendKey(keyArray);\n      this.send = await sendAccess.decrypt(this.decKey);\n      this.showText = this.send.text != null ? !this.send.text.hidden : true;\n    } catch (e) {\n      if (e instanceof ErrorResponse) {\n        if (e.statusCode === 401) {\n          this.passwordRequired = true;\n        } else if (e.statusCode === 404) {\n          this.unavailable = true;\n        } else {\n          this.error = true;\n        }\n      }\n    }\n    this.loading = false;\n    this.hideEmail =\n      this.creatorIdentifier == null &&\n      !this.passwordRequired &&\n      !this.loading &&\n      !this.unavailable;\n  }\n}\n","import { Directive, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\n\n@Directive()\nexport class SendComponent implements OnInit, OnDestroy {\n  disableSend = false;\n  sendType = SendType;\n  loaded = false;\n  loading = true;\n  refreshing = false;\n  expired = false;\n  type: SendType = null;\n  sends: SendView[] = [];\n  filteredSends: SendView[] = [];\n  searchText: string;\n  selectedType: SendType;\n  selectedAll: boolean;\n  searchPlaceholder: string;\n  filter: (cipher: SendView) => boolean;\n  searchPending = false;\n  hasSearched = false; // search() function called - returns true if text qualifies for search\n\n  actionPromise: any;\n  onSuccessfulRemovePassword: () => Promise<any>;\n  onSuccessfulDelete: () => Promise<any>;\n  onSuccessfulLoad: () => Promise<any>;\n\n  private searchTimeout: any;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected sendService: SendService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected ngZone: NgZone,\n    protected searchService: SearchService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.DisableSend)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableSend = policyAppliesToActiveUser;\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load(filter: (send: SendView) => boolean = null) {\n    this.loading = true;\n    const sends = await this.sendService.getAllDecrypted();\n    this.sends = sends;\n    if (this.onSuccessfulLoad != null) {\n      await this.onSuccessfulLoad();\n    } else {\n      // Default action\n      this.selectAll();\n    }\n    this.loading = false;\n    this.loaded = true;\n  }\n\n  async reload(filter: (send: SendView) => boolean = null) {\n    this.loaded = false;\n    this.sends = [];\n    await this.load(filter);\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  async applyFilter(filter: (send: SendView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null || s.password == null) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removePasswordConfirmation\"),\n      this.i18nService.t(\"removePassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n      await this.actionPromise;\n      if (this.onSuccessfulRemovePassword != null) {\n        this.onSuccessfulRemovePassword();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"removedPassword\"));\n        await this.load();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async delete(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.deleteWithServer(s.id);\n      await this.actionPromise;\n\n      if (this.onSuccessfulDelete != null) {\n        this.onSuccessfulDelete();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n        await this.refresh();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n    return true;\n  }\n\n  copy(s: SendView) {\n    const sendLinkBaseUrl = this.environmentService.getSendUrl();\n    const link = sendLinkBaseUrl + s.accessId + \"/\" + s.urlB64Key;\n    this.platformUtilsService.copyToClipboard(link);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendLink\"))\n    );\n  }\n\n  searchTextChanged() {\n    this.search(200);\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.applyFilter(null);\n  }\n\n  selectType(type: SendType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.applyFilter((s) => s.type === type);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedType = null;\n  }\n\n  private applyTextSearch() {\n    if (this.searchText != null) {\n      this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n  // Native datetime-locale.\n  // We are happy.\n  Default = \"default\",\n\n  // Native date and time inputs, but no datetime-locale.\n  // We use individual date and time inputs and create a datetime programatically on submit.\n  Firefox = \"firefox\",\n\n  // No native date, time, or datetime-locale inputs.\n  // We use a polyfill for dates and a dropdown for times.\n  Safari = \"safari\",\n}\n\nenum DateField {\n  DeletionDate = \"deletion\",\n  ExpriationDate = \"expiration\",\n}\n\n// Value = hours\nenum DatePreset {\n  OneHour = 1,\n  OneDay = 24,\n  TwoDays = 48,\n  ThreeDays = 72,\n  SevenDays = 168,\n  ThirtyDays = 720,\n  Custom = 0,\n  Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n  twelveHour: string;\n  twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n  @Input() readonly initialDeletionDate: Date;\n  @Input() readonly initialExpirationDate: Date;\n  @Input() readonly editMode: boolean;\n  @Input() readonly disabled: boolean;\n\n  @Output() datesChanged = new EventEmitter<{ deletionDate: string; expirationDate: string }>();\n\n  get browserPath(): BrowserPath {\n    if (this.platformUtilsService.isFirefox()) {\n      return BrowserPath.Firefox;\n    } else if (this.platformUtilsService.isSafari()) {\n      return BrowserPath.Safari;\n    }\n    return BrowserPath.Default;\n  }\n\n  datesForm = new UntypedFormGroup({\n    selectedDeletionDatePreset: new UntypedFormControl(),\n    selectedExpirationDatePreset: new UntypedFormControl(),\n    defaultDeletionDateTime: new UntypedFormControl(),\n    defaultExpirationDateTime: new UntypedFormControl(),\n    fallbackDeletionDate: new UntypedFormControl(),\n    fallbackDeletionTime: new UntypedFormControl(),\n    fallbackExpirationDate: new UntypedFormControl(),\n    fallbackExpirationTime: new UntypedFormControl(),\n  });\n\n  deletionDatePresets: any[] = [\n    { name: this.i18nService.t(\"oneHour\"), value: DatePreset.OneHour },\n    { name: this.i18nService.t(\"oneDay\"), value: DatePreset.OneDay },\n    { name: this.i18nService.t(\"days\", \"2\"), value: DatePreset.TwoDays },\n    { name: this.i18nService.t(\"days\", \"3\"), value: DatePreset.ThreeDays },\n    { name: this.i18nService.t(\"days\", \"7\"), value: DatePreset.SevenDays },\n    { name: this.i18nService.t(\"days\", \"30\"), value: DatePreset.ThirtyDays },\n    { name: this.i18nService.t(\"custom\"), value: DatePreset.Custom },\n  ];\n\n  expirationDatePresets: any[] = [\n    { name: this.i18nService.t(\"never\"), value: DatePreset.Never },\n  ].concat([...this.deletionDatePresets]);\n\n  get selectedDeletionDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedDeletionDatePreset\") as UntypedFormControl;\n  }\n\n  get selectedExpirationDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedExpirationDatePreset\") as UntypedFormControl;\n  }\n\n  get defaultDeletionDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultDeletionDateTime\") as UntypedFormControl;\n  }\n\n  get defaultExpirationDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultExpirationDateTime\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionDate\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionTime\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationDate\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationTime\") as UntypedFormControl;\n  }\n\n  // Should be able to call these at any time and compute a submitable value\n  get formattedDeletionDate(): string {\n    switch (this.selectedDeletionDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n        return this.formattedDeletionDate;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            return this.fallbackDeletionDate.value + \"T\" + this.fallbackDeletionTime.value;\n          default:\n            return this.defaultDeletionDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedDeletionDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n\n  get formattedExpirationDate(): string {\n    switch (this.selectedExpirationDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        return null;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            if (\n              (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n              this.editMode\n            ) {\n              return null;\n            }\n            return this.fallbackExpirationDate.value + \"T\" + this.fallbackExpirationTime.value;\n          default:\n            if (!this.defaultExpirationDateTime.value) {\n              return null;\n            }\n            return this.defaultExpirationDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedExpirationDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n  //\n\n  get safariDeletionTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.DeletionDate);\n  }\n\n  get safariExpirationTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.ExpriationDate);\n  }\n\n  private get nextWeek(): Date {\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    return nextWeek;\n  }\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.setInitialFormValues();\n    this.emitDates();\n    this.datesForm.valueChanges.subscribe(() => {\n      this.emitDates();\n    });\n  }\n\n  onDeletionDatePresetSelect(value: DatePreset) {\n    this.selectedDeletionDatePreset.setValue(value);\n  }\n\n  clearExpiration() {\n    switch (this.browserPath) {\n      case BrowserPath.Safari:\n      case BrowserPath.Firefox:\n        this.fallbackExpirationDate.setValue(null);\n        this.fallbackExpirationTime.setValue(null);\n        break;\n      case BrowserPath.Default:\n        this.defaultExpirationDateTime.setValue(null);\n        break;\n    }\n  }\n\n  protected emitDates() {\n    this.datesChanged.emit({\n      deletionDate: this.formattedDeletionDate,\n      expirationDate: this.formattedExpirationDate,\n    });\n  }\n\n  protected setInitialFormValues() {\n    if (this.editMode) {\n      this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n        case BrowserPath.Firefox:\n          this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n          if (this.initialExpirationDate != null) {\n            this.fallbackExpirationDate.setValue(\n              this.initialExpirationDate.toISOString().slice(0, 10)\n            );\n            this.fallbackExpirationTime.setValue(\n              this.initialExpirationDate.toTimeString().slice(0, 5)\n            );\n          }\n          break;\n        case BrowserPath.Default:\n          if (this.initialExpirationDate) {\n            this.defaultExpirationDateTime.setValue(\n              this.datePipe.transform(new Date(this.initialExpirationDate), \"yyyy-MM-ddTHH:mm\")\n            );\n          }\n          this.defaultDeletionDateTime.setValue(\n            this.datePipe.transform(new Date(this.initialDeletionDate), \"yyyy-MM-ddTHH:mm\")\n          );\n          break;\n      }\n    } else {\n      this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n          this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(\n            this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected safariTimePresetOptions(field: DateField): TimeOption[] {\n    // init individual arrays for major sort groups\n    const noon: TimeOption[] = [];\n    const midnight: TimeOption[] = [];\n    const ams: TimeOption[] = [];\n    const pms: TimeOption[] = [];\n\n    // determine minute skip (5 min, 10 min, 15 min, etc.)\n    const minuteIncrementer = 15;\n\n    // loop through each hour on a 12 hour system\n    for (let h = 1; h <= 12; h++) {\n      // loop through each minute in the hour using the skip to incriment\n      for (let m = 0; m < 60; m += minuteIncrementer) {\n        // init the final strings that will be added to the lists\n        let hour = h.toString();\n        let minutes = m.toString();\n\n        // add prepending 0s to single digit hours/minutes\n        if (h < 10) {\n          hour = \"0\" + hour;\n        }\n        if (m < 10) {\n          minutes = \"0\" + minutes;\n        }\n\n        // build time strings and push to relevant sort groups\n        if (h === 12) {\n          const midnightOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `00:${minutes}`,\n          };\n          midnight.push(midnightOption);\n\n          const noonOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          noon.push(noonOption);\n        } else {\n          const amOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          ams.push(amOption);\n\n          const pmOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${h + 12}:${minutes}`,\n          };\n          pms.push(pmOption);\n        }\n      }\n    }\n\n    // bring all the arrays together in the right order\n    const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n    // determine if an unsupported value already exists on the send & add that to the top of the option list\n    // example: if the Send was created with a different client\n    if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialExpirationDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialExpirationDate, \"HH:mm\"),\n      };\n      return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n    } else if (\n      field === DateField.DeletionDate &&\n      this.initialDeletionDate != null &&\n      this.editMode\n    ) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialDeletionDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialDeletionDate, \"HH:mm\"),\n      };\n      return [previousValue, ...validTimes];\n    } else {\n      return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/enc-array-buffer\";\nimport { Send } from \"@bitwarden/common/models/domain/send\";\nimport { SendFileView } from \"@bitwarden/common/models/view/send-file.view\";\nimport { SendTextView } from \"@bitwarden/common/models/view/send-text.view\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\n\n@Directive()\nexport class AddEditComponent implements OnInit, OnDestroy {\n  @Input() sendId: string;\n  @Input() type: SendType;\n\n  @Output() onSavedSend = new EventEmitter<SendView>();\n  @Output() onDeletedSend = new EventEmitter<SendView>();\n  @Output() onCancelled = new EventEmitter<SendView>();\n\n  copyLink = false;\n  disableSend = false;\n  disableHideEmail = false;\n  send: SendView;\n  deletionDate: string;\n  expirationDate: string;\n  hasPassword: boolean;\n  password: string;\n  showPassword = false;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  sendType = SendType;\n  typeOptions: any[];\n  canAccessPremium = true;\n  emailVerified = true;\n  alertShown = false;\n  showOptions = false;\n\n  private sendLinkBaseUrl: string;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected datePipe: DatePipe,\n    protected sendService: SendService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"sendTypeFile\"), value: SendType.File },\n      { name: i18nService.t(\"sendTypeText\"), value: SendType.Text },\n    ];\n    this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n  }\n\n  get link(): string {\n    if (this.send.id != null && this.send.accessId != null) {\n      return this.sendLinkBaseUrl + this.send.accessId + \"/\" + this.send.urlB64Key;\n    }\n    return null;\n  }\n\n  get isSafari() {\n    return this.platformUtilsService.isSafari();\n  }\n\n  get isDateTimeLocalSupported(): boolean {\n    return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n  }\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.DisableSend)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableSend = policyAppliesToActiveUser;\n      });\n\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.SendOptions, (p) => p.data.disableHideEmail)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableHideEmail = policyAppliesToActiveUser;\n      });\n\n    await this.load();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get editMode(): boolean {\n    return this.sendId != null;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.editMode ? \"editSend\" : \"createSend\");\n  }\n\n  setDates(event: { deletionDate: string; expirationDate: string }) {\n    this.deletionDate = event.deletionDate;\n    this.expirationDate = event.expirationDate;\n  }\n\n  async load() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.emailVerified = await this.stateService.getEmailVerified();\n    if (!this.canAccessPremium || !this.emailVerified) {\n      this.type = SendType.Text;\n    }\n\n    if (this.send == null) {\n      if (this.editMode) {\n        const send = await this.loadSend();\n        this.send = await send.decrypt();\n      } else {\n        this.send = new SendView();\n        this.send.type = this.type == null ? SendType.File : this.type;\n        this.send.file = new SendFileView();\n        this.send.text = new SendTextView();\n        this.send.deletionDate = new Date();\n        this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n      }\n    }\n\n    this.hasPassword = this.send.password != null && this.send.password.trim() !== \"\";\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.disableSend) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"sendDisabledWarning\")\n      );\n      return false;\n    }\n\n    if (this.send.name == null || this.send.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    let file: File = null;\n    if (this.send.type === SendType.File && !this.editMode) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      const files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n\n      file = files[0];\n      if (files[0].size > 524288000) {\n        // 500 MB\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"maxFileSize\")\n        );\n        return;\n      }\n    }\n\n    if (this.password != null && this.password.trim() === \"\") {\n      this.password = null;\n    }\n\n    this.formPromise = this.encryptSend(file).then(async (encSend) => {\n      const uploadPromise = this.sendService.saveWithServer(encSend);\n      await uploadPromise;\n      if (this.send.id == null) {\n        this.send.id = encSend[0].id;\n      }\n      if (this.send.accessId == null) {\n        this.send.accessId = encSend[0].accessId;\n      }\n      this.onSavedSend.emit(this.send);\n      if (this.copyLink && this.link != null) {\n        const copySuccess = await this.copyLinkToClipboard(this.link);\n        if (copySuccess ?? true) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n          );\n        } else {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\"),\n            null,\n            this.i18nService.t(\"ok\"),\n            null,\n            \"success\",\n            null\n          );\n          await this.copyLinkToClipboard(this.link);\n        }\n      }\n    });\n    try {\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n  }\n\n  async delete(): Promise<boolean> {\n    if (this.deletePromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n      await this.load();\n      this.onDeletedSend.emit(this.send);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  typeChanged() {\n    if (this.send.type === SendType.File && !this.alertShown) {\n      if (!this.canAccessPremium) {\n        this.alertShown = true;\n        this.messagingService.send(\"premiumRequired\");\n      } else if (!this.emailVerified) {\n        this.alertShown = true;\n        this.messagingService.send(\"emailVerificationRequired\");\n      }\n    }\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  protected async loadSend(): Promise<Send> {\n    return this.sendService.get(this.sendId);\n  }\n\n  protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n    const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n    // Parse dates\n    try {\n      sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n    } catch {\n      sendData[0].deletionDate = null;\n    }\n    try {\n      sendData[0].expirationDate =\n        this.expirationDate == null ? null : new Date(this.expirationDate);\n    } catch {\n      sendData[0].expirationDate = null;\n    }\n\n    return sendData;\n  }\n\n  protected togglePasswordVisible() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"password\").focus();\n  }\n}\n","<div class=\"row\" [formGroup]=\"datesForm\">\n  <div class=\"col-6 form-group\">\n    <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n    <ng-template #deletionDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <ng-container *ngSwitchCase=\"'firefox'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              [readOnly]=\"disableSend\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <input\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              type=\"time\"\n              name=\"DeletionTimeDate\"\n              formControlName=\"fallbackDeletionTime\"\n              required\n              placeholder=\"HH:MM AM/PM\"\n              [readOnly]=\"disableSend\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'safari'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              [readOnly]=\"disableSend\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <select\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              [required]=\"!editMode\"\n              formControlName=\"fallbackDeletionTime\"\n              name=\"SafariDeletionTime\"\n            >\n              <option\n                *ngFor=\"let o of safariDeletionTimePresetOptions\"\n                [ngValue]=\"o.twentyFourHour\"\n              >\n                {{ o.twelveHour }}\n              </option>\n            </select>\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"deletionDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"DeletionDate\"\n            formControlName=\"defaultDeletionDateTime\"\n            required\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"deletionDate\"\n        name=\"SelectedDeletionDatePreset\"\n        formControlName=\"selectedDeletionDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedDeletionDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"deletionDateDesc\" | i18n }}</div>\n  </div>\n  <div class=\"col-6 form-group\">\n    <div class=\"d-flex\">\n      <label for=\"expirationDate\">{{ \"expirationDate\" | i18n }}</label>\n      <a\n        href=\"#\"\n        appStopClick\n        (click)=\"clearExpiration()\"\n        class=\"ml-auto\"\n        *ngIf=\"editMode && !disabled\"\n      >\n        {{ \"clear\" | i18n }}\n      </a>\n    </div>\n    <ng-template #expirationDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <div *ngSwitchCase=\"'firefox'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            type=\"time\"\n            name=\"ExpirationTimeFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            [required]=\"!editMode\"\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n        <!-- non-default cases are not showing up -->\n        <div *ngSwitchCase=\"'safari'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            [required]=\"!editMode\"\n            formControlName=\"fallbackExpirationTime\"\n            name=\"SafariExpirationTime\"\n          >\n            <option\n              *ngFor=\"let o of safariExpirationTimePresetOptions\"\n              [ngValue]=\"o.twentyFourHour\"\n            >\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"expirationDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"ExpirationDate\"\n            formControlName=\"defaultExpirationDateTime\"\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"expirationDate\"\n        name=\"SelectedExpirationDatePreset\"\n        formControlName=\"selectedExpirationDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedExpirationDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"expirationDateDesc\" | i18n }}</div>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ControlContainer, NgForm } from \"@angular/forms\";\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from \"@bitwarden/angular/components/send/efflux-dates.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-send-efflux-dates\",\n  templateUrl: \"efflux-dates.component.html\",\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {\n    super(i18nService, platformUtilsService, datePipe);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"sendAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"sendAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"send\">\n        <app-callout *ngIf=\"disableSend\">\n          <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n        </app-callout>\n        <app-callout *ngIf=\"!disableSend && disableHideEmail\">\n          <span>{{ \"sendOptionsPolicyInEffect\" | i18n }}</span>\n          <ul class=\"mb-0\">\n            <li>{{ \"sendDisableHideEmailInEffect\" | i18n }}</li>\n          </ul>\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"send.name\"\n              required\n              [readOnly]=\"disableSend\"\n            />\n            <small class=\"form-text text-muted\">{{ \"sendNameDesc\" | i18n }}</small>\n          </div>\n        </div>\n        <div class=\"row\" *ngIf=\"!editMode\">\n          <div class=\"col-6 form-group\">\n            <label>{{ \"whatTypeOfSend\" | i18n }}</label>\n            <div class=\"form-check\" *ngFor=\"let o of typeOptions\">\n              <input\n                class=\"form-check-input\"\n                type=\"radio\"\n                [(ngModel)]=\"send.type\"\n                name=\"Type_{{ o.value }}\"\n                id=\"type_{{ o.value }}\"\n                [value]=\"o.value\"\n                (change)=\"typeChanged(o)\"\n                [checked]=\"send.type === o.value\"\n              />\n              <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n                {{ o.name }}\n              </label>\n            </div>\n          </div>\n        </div>\n        <!-- Text -->\n        <ng-container *ngIf=\"send.type === sendType.Text\">\n          <div class=\"form-group\">\n            <label for=\"text\">{{ \"sendTypeText\" | i18n }}</label>\n            <textarea\n              id=\"text\"\n              name=\"Text.Text\"\n              rows=\"6\"\n              [(ngModel)]=\"send.text.text\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <small class=\"form-text text-muted\">{{ \"sendTextDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.text.hidden\"\n                id=\"text-hidden\"\n                name=\"Text.Hidden\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"text-hidden\">{{\n                \"textHiddenByDefault\" | i18n\n              }}</label>\n            </div>\n          </div>\n        </ng-container>\n        <!-- File -->\n        <ng-container *ngIf=\"send.type === sendType.File\">\n          <div class=\"form-group\">\n            <div *ngIf=\"editMode\">\n              <strong class=\"d-block\">{{ \"file\" | i18n }}</strong>\n              {{ send.file.fileName }} ({{ send.file.sizeName }})\n            </div>\n            <div *ngIf=\"!editMode\">\n              <label for=\"file\">{{ \"file\" | i18n }}</label>\n              <input\n                type=\"file\"\n                id=\"file\"\n                class=\"form-control-file\"\n                name=\"file\"\n                required\n                [disabled]=\"disableSend\"\n              />\n              <small class=\"form-text text-muted\"\n                >{{ \"sendFileDesc\" | i18n }} {{ \"maxFileSize\" | i18n }}</small\n              >\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-5\">{{ \"share\" | i18n }}</h3>\n        <div class=\"form-group\" *ngIf=\"link\">\n          <label for=\"link\">{{ \"sendLinkLabel\" | i18n }}</label>\n          <input\n            type=\"text\"\n            readonly\n            id=\"link\"\n            name=\"Link\"\n            [(ngModel)]=\"link\"\n            class=\"form-control\"\n          />\n        </div>\n        <div class=\"form-group\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [(ngModel)]=\"copyLink\"\n              id=\"copy-link\"\n              name=\"CopyLink\"\n            />\n            <label class=\"form-check-label\" for=\"copy-link\">{{\n              \"copySendLinkOnSave\" | i18n\n            }}</label>\n          </div>\n        </div>\n        <div\n          id=\"options-header\"\n          class=\"section-header d-flex flex-row align-items-center mt-5\"\n          (click)=\"toggleOptions()\"\n        >\n          <h3 class=\"mb-0 mr-2\">{{ \"options\" | i18n }}</h3>\n          <a class=\"mb-1\" href=\"#\" appStopClick role=\"button\">\n            <i\n              class=\"bwi\"\n              aria-hidden=\"true\"\n              [ngClass]=\"{ 'bwi-angle-down': !showOptions, 'bwi-chevron-up': showOptions }\"\n            ></i>\n          </a>\n        </div>\n        <div id=\"options\" [hidden]=\"!showOptions\">\n          <app-send-efflux-dates\n            [initialDeletionDate]=\"send.deletionDate\"\n            [initialExpirationDate]=\"send.expirationDate\"\n            [editMode]=\"editMode\"\n            [disabled]=\"disableSend\"\n            (datesChanged)=\"setDates($event)\"\n          >\n          </app-send-efflux-dates>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"maxAccessCount\">{{ \"maxAccessCount\" | i18n }}</label>\n              <input\n                id=\"maxAccessCount\"\n                class=\"form-control\"\n                type=\"number\"\n                name=\"MaxAccessCount\"\n                [(ngModel)]=\"send.maxAccessCount\"\n                min=\"1\"\n                [readOnly]=\"disableSend\"\n              />\n              <div class=\"form-text text-muted small\">{{ \"maxAccessCountDesc\" | i18n }}</div>\n            </div>\n            <div class=\"col-6 form-group\" *ngIf=\"editMode\">\n              <label for=\"accessCount\">{{ \"currentAccessCount\" | i18n }}</label>\n              <input\n                id=\"accessCount\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"AccessCount\"\n                readonly\n                [(ngModel)]=\"send.accessCount\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"password\" *ngIf=\"!hasPassword\">{{ \"password\" | i18n }}</label>\n              <label for=\"password\" *ngIf=\"hasPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"password\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Password\"\n                  [(ngModel)]=\"password\"\n                  [readOnly]=\"disableSend\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePasswordVisible()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                </div>\n              </div>\n              <div class=\"form-text text-muted small\">{{ \"sendPasswordDesc\" | i18n }}</div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n            <textarea\n              id=\"notes\"\n              name=\"Notes\"\n              rows=\"6\"\n              [(ngModel)]=\"send.notes\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <div class=\"form-text text-muted small\">{{ \"sendNotesDesc\" | i18n }}</div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.hideEmail\"\n                id=\"hideEmail\"\n                name=\"HideEmail\"\n                [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"hideEmail\">\n                {{ \"hideEmail\" | i18n }}\n              </label>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.disabled\"\n                id=\"disabled\"\n                name=\"Disabled\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"disabled\">{{ \"disableThisSend\" | i18n }}</label>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [ngClass]=\"{ loading: form.loading }\"\n          [disabled]=\"form.loading || disableSend\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"send\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/send/add-edit.component\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-send-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    datePipe: DatePipe,\n    sendService: SendService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      datePipe,\n      sendService,\n      messagingService,\n      policyService,\n      logService,\n      stateService\n    );\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    // Copy function on web depends on the modal being open or not. Since this event occurs during a transition\n    // of the modal closing we need to add a small delay to make sure state of the DOM is consistent.\n    return new Promise((resolve) => {\n      window.setTimeout(() => resolve(super.copyLinkToClipboard(link)), 500);\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-3 groupings\">\n      <div class=\"card vault-filters\">\n        <div class=\"card-header d-flex\">\n          {{ \"filters\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <input\n            type=\"search\"\n            placeholder=\"{{ searchPlaceholder || ('searchSends' | i18n) }}\"\n            id=\"search\"\n            class=\"form-control\"\n            [(ngModel)]=\"searchText\"\n            (input)=\"searchTextChanged()\"\n            autocomplete=\"off\"\n            appAutofocus\n          />\n          <div class=\"filter\">\n            <ul class=\"filter-options\">\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedAll }\">\n                <span class=\"filter-buttons\">\n                  <button class=\"filter-button\" appStopClick (click)=\"selectAll()\">\n                    <i class=\"bwi bwi-fw bwi-filter\"></i>{{ \"allSends\" | i18n }}\n                  </button>\n                </span>\n              </li>\n            </ul>\n          </div>\n          <div class=\"filter\">\n            <div class=\"filter-heading\">\n              <h3>{{ \"types\" | i18n }}</h3>\n            </div>\n            <ul class=\"filter-options\">\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedType === sendType.Text }\">\n                <span class=\"filter-buttons\">\n                  <button class=\"filter-button\" appStopClick (click)=\"selectType(sendType.Text)\">\n                    <i class=\"bwi bwi-fw bwi-file-text\"></i>{{ \"sendTypeText\" | i18n }}\n                  </button>\n                </span>\n              </li>\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedType === sendType.File }\">\n                <span class=\"filter-buttons\">\n                  <button class=\"filter-button\" appStopClick (click)=\"selectType(sendType.File)\">\n                    <i class=\"bwi bwi-fw bwi-file\"></i>{{ \"sendTypeFile\" | i18n }}\n                  </button>\n                </span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"send\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addSend()\"\n            [disabled]=\"disableSend\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <!--Listing Table-->\n      <table class=\"table table-hover table-list\" *ngIf=\"filteredSends && filteredSends.length\">\n        <tbody>\n          <tr *ngFor=\"let s of filteredSends\">\n            <td class=\"table-list-icon\">\n              <div class=\"icon\" aria-hidden=\"true\">\n                <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"s.type == sendType.File\"></i>\n                <i class=\"bwi bwi-fw bwi-lg bwi-file-text\" *ngIf=\"s.type == sendType.Text\"></i>\n              </div>\n            </td>\n            <td class=\"reduced-lh wrap\">\n              <a href=\"#\" appStopClick appStopProp (click)=\"editSend(s)\">{{ s.name }}</a>\n              <ng-container *ngIf=\"s.disabled\">\n                <i\n                  class=\"bwi bwi-exclamation-triangle\"\n                  appStopProp\n                  title=\"{{ 'disabled' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"disabled\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.password\">\n                <i\n                  class=\"bwi bwi-key\"\n                  appStopProp\n                  title=\"{{ 'password' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"password\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.maxAccessCountReached\">\n                <i\n                  class=\"bwi bwi-ban\"\n                  appStopProp\n                  title=\"{{ 'maxAccessCountReached' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"maxAccessCountReached\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.expired\">\n                <i\n                  class=\"bwi bwi-clock\"\n                  appStopProp\n                  title=\"{{ 'expired' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"expired\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.pendingDelete\">\n                <i\n                  class=\"bwi bwi-trash\"\n                  appStopProp\n                  title=\"{{ 'pendingDeletion' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"pendingDeletion\" | i18n }}</span>\n              </ng-container>\n              <br />\n              <small appStopProp>{{ s.deletionDate | date: \"medium\" }}</small>\n            </td>\n            <td class=\"table-list-options\">\n              <button\n                [bitMenuTriggerFor]=\"sendOptions\"\n                class=\"tw-border-none tw-bg-transparent tw-text-main\"\n                type=\"button\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu #sendOptions>\n                <button bitMenuItem (click)=\"copy(s)\">\n                  <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                  {{ \"copySendLink\" | i18n }}\n                </button>\n                <button bitMenuItem (click)=\"removePassword(s)\" *ngIf=\"s.password && !disableSend\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"removePassword\" | i18n }}\n                </button>\n                <button bitMenuItem (click)=\"delete(s)\">\n                  <span class=\"tw-text-danger\">\n                    <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                    {{ \"delete\" | i18n }}\n                  </span>\n                </button>\n              </bit-menu>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div class=\"no-items\" *ngIf=\"filteredSends && !filteredSends.length\">\n        <ng-container *ngIf=\"!loaded\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"loaded\">\n          <bit-icon [icon]=\"noItemIcon\" aria-hidden=\"true\"></bit-icon>\n          <p>{{ \"noSendsInList\" | i18n }}</p>\n          <button (click)=\"addSend()\" class=\"btn btn-outline-primary\" [disabled]=\"disableSend\">\n            <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #sendAddEdit></ng-template>\n","import { Component, NgZone, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SendComponent as BaseSendComponent } from \"@bitwarden/angular/components/send/send.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\nimport { Icons } from \"@bitwarden/components\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\n\nconst BroadcasterSubscriptionId = \"SendComponent\";\n\n@Component({\n  selector: \"app-send\",\n  templateUrl: \"send.component.html\",\n})\nexport class SendComponent extends BaseSendComponent {\n  @ViewChild(\"sendAddEdit\", { read: ViewContainerRef, static: true })\n  sendAddEditModalRef: ViewContainerRef;\n  noItemIcon = Icons.Search;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    searchService: SearchService,\n    policyService: PolicyService,\n    private modalService: ModalService,\n    private broadcasterService: BroadcasterService,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n\n    // Broadcaster subscription - load if sync completes in the background\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await this.load();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n\n    const component = await this.editSend(null);\n    component.type = this.type;\n  }\n\n  async editSend(send: SendView) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.sendAddEditModalRef,\n      (comp) => {\n        comp.sendId = send == null ? null : send.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-deauthorize-sessions\",\n  templateUrl: \"deauthorize-sessions.component.html\",\n})\nexport class DeauthorizeSessionsComponent {\n  masterPassword: Verification;\n  formPromise: Promise<unknown>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postSecurityStamp(request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"sessionsDeauthorized\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deAuthTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"deAuthTitle\">{{ \"deauthorizeSessions\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deauthorizeSessionsDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deauthorizeSessionsWarning\" | i18n }}</app-callout>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deauthorizeSessions\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { AccountApiService } from \"@bitwarden/common/abstractions/account/account-api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-delete-account\",\n  templateUrl: \"delete-account.component.html\",\n})\nexport class DeleteAccountComponent {\n  formPromise: Promise<void>;\n\n  deleteForm = this.formBuilder.group({\n    verification: undefined as Verification | undefined,\n  });\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private formBuilder: FormBuilder,\n    private accountApiService: AccountApiService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const verification = this.deleteForm.get(\"verification\").value;\n      this.formPromise = this.accountApiService.deleteAccount(verification);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteAccountTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      [formGroup]=\"deleteForm\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"deleteAccountTitle\">{{ \"deleteAccount\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deleteAccountDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n        <app-user-verification ngDefaultControl formControlName=\"verification\" name=\"verification\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteAccount\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class EmailTokenRequest extends SecretVerificationRequest {\n  newEmail: string;\n  masterPasswordHash: string;\n}\n","import { EmailTokenRequest } from \"./email-token.request\";\n\nexport class EmailRequest extends EmailTokenRequest {\n  newMasterPasswordHash: string;\n  token: string;\n  key: string;\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <app-callout type=\"warning\" *ngIf=\"showTwoFactorEmailWarning\">\n    {{ \"changeEmailTwoFactorWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          [readonly]=\"tokenSent\"\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"newEmail\">{{ \"newEmail\" | i18n }}</label>\n        <input\n          id=\"newEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"NewEmail\"\n          [(ngModel)]=\"newEmail\"\n          required\n          [readonly]=\"tokenSent\"\n          inputmode=\"email\"\n          appInputVerbatim=\"false\"\n        />\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"tokenSent\">\n    <hr />\n    <p>{{ \"changeEmailDesc\" | i18n: newEmail }}</p>\n    <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"token\">{{ \"code\" | i18n }}</label>\n          <input\n            id=\"token\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Token\"\n            [(ngModel)]=\"token\"\n            required\n            appInputVerbatim\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span *ngIf=\"!tokenSent\">{{ \"continue\" | i18n }}</span>\n    <span *ngIf=\"tokenSent\">{{ \"changeEmail\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" *ngIf=\"tokenSent\" (click)=\"reset()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { EmailTokenRequest } from \"@bitwarden/common/models/request/email-token.request\";\nimport { EmailRequest } from \"@bitwarden/common/models/request/email.request\";\n\n@Component({\n  selector: \"app-change-email\",\n  templateUrl: \"change-email.component.html\",\n})\nexport class ChangeEmailComponent implements OnInit {\n  masterPassword: string;\n  newEmail: string;\n  token: string;\n  tokenSent = false;\n  showTwoFactorEmailWarning = false;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    const twoFactorProviders = await this.apiService.getTwoFactorProviders();\n    this.showTwoFactorEmailWarning = twoFactorProviders.data.some(\n      (p) => p.type === TwoFactorProviderType.Email && p.enabled\n    );\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    this.newEmail = this.newEmail.trim().toLowerCase();\n    if (!this.tokenSent) {\n      const request = new EmailTokenRequest();\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      try {\n        this.formPromise = this.apiService.postEmailToken(request);\n        await this.formPromise;\n        this.tokenSent = true;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const request = new EmailRequest();\n      request.token = this.token;\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      const kdf = await this.stateService.getKdfType();\n      const kdfIterations = await this.stateService.getKdfIterations();\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.newEmail,\n        kdf,\n        kdfIterations\n      );\n      request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        newKey\n      );\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n      request.key = newEncKey[1].encryptedString;\n      try {\n        this.formPromise = this.apiService.postEmail(request);\n        await this.formPromise;\n        this.reset();\n        this.platformUtilsService.showToast(\n          \"success\",\n          this.i18nService.t(\"emailChanged\"),\n          this.i18nService.t(\"logBackIn\")\n        );\n        this.messagingService.send(\"logout\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n\n  reset() {\n    this.token = this.newEmail = this.masterPassword = null;\n    this.tokenSent = false;\n  }\n}\n","export class UpdateProfileRequest {\n  name: string;\n  masterPasswordHint: string;\n  culture = \"en-US\"; // deprecated\n\n  constructor(name: string, masterPasswordHint: string) {\n    this.name = name;\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"profile && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"profile.name\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">{{ \"email\" | i18n }}</label>\n        <input\n          id=\"email\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Email\"\n          [(ngModel)]=\"profile.email\"\n          readonly\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"mb-3\">\n        <bit-avatar [text]=\"profile | userName\" [id]=\"profile.id\" size=\"large\"></bit-avatar>\n      </div>\n      <hr />\n      <p *ngIf=\"fingerprint\">\n        {{ \"yourAccountsFingerprint\" | i18n }}:\n        <a\n          href=\"https://bitwarden.com/help/fingerprint-phrase/\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i></a\n        ><br />\n        <code>{{ fingerprint }}</code>\n      </p>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UpdateProfileRequest } from \"@bitwarden/common/models/request/update-profile.request\";\nimport { ProfileResponse } from \"@bitwarden/common/models/response/profile.response\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"profile.component.html\",\n})\nexport class ProfileComponent implements OnInit {\n  loading = true;\n  profile: ProfileResponse;\n  fingerprint: string;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.profile = await this.apiService.getProfile();\n    this.loading = false;\n    const fingerprint = await this.cryptoService.getFingerprint(\n      await this.stateService.getUserId()\n    );\n    if (fingerprint != null) {\n      this.fingerprint = fingerprint.join(\"-\");\n    }\n  }\n\n  async submit() {\n    try {\n      const request = new UpdateProfileRequest(this.profile.name, this.profile.masterPasswordHint);\n      this.formPromise = this.apiService.putProfile(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"accountUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myAccount\" | i18n }}</h1>\n</div>\n<app-profile></app-profile>\n<ng-container *ngIf=\"showChangeEmail\">\n  <div class=\"secondary-header\">\n    <h1>{{ \"changeEmail\" | i18n }}</h1>\n  </div>\n  <app-change-email></app-change-email>\n</ng-container>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button bitButton buttonType=\"danger\" (click)=\"deauthorizeSessions()\">\n      {{ \"deauthorizeSessions\" | i18n }}\n    </button>\n    <button bitButton buttonType=\"danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n    <button bitButton buttonType=\"danger\" (click)=\"deleteAccount()\">\n      {{ \"deleteAccount\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deauthorizeSessionsTemplate></ng-template>\n<ng-template #purgeVaultTemplate></ng-template>\n<ng-template #deleteAccountTemplate></ng-template>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { DeauthorizeSessionsComponent } from \"./deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"./delete-account.component\";\nimport { PurgeVaultComponent } from \"./purge-vault.component\";\n\n@Component({\n  selector: \"app-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  @ViewChild(\"deauthorizeSessionsTemplate\", { read: ViewContainerRef, static: true })\n  deauthModalRef: ViewContainerRef;\n  @ViewChild(\"purgeVaultTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"deleteAccountTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  showChangeEmail = true;\n\n  constructor(\n    private modalService: ModalService,\n    private apiService: ApiService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeEmail = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async deauthorizeSessions() {\n    await this.modalService.openViewRef(DeauthorizeSessionsComponent, this.deauthModalRef);\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef);\n  }\n\n  async deleteAccount() {\n    await this.modalService.openViewRef(DeleteAccountComponent, this.deleteModalRef);\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\nimport { OrganizationPlansComponent } from \"./organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.plan === \"families\") {\n        this.orgPlansComponent.plan = PlanType.FamiliesAnnually;\n        this.orgPlansComponent.product = ProductType.Families;\n      } else if (qParams.plan === \"teams\") {\n        this.orgPlansComponent.plan = PlanType.TeamsAnnually;\n        this.orgPlansComponent.product = ProductType.Teams;\n      } else if (qParams.plan === \"enterprise\") {\n        this.orgPlansComponent.plan = PlanType.EnterpriseAnnually;\n        this.orgPlansComponent.product = ProductType.Enterprise;\n      }\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"page-header\">\n        <h1>{{ \"newOrganization\" | i18n }}</h1>\n      </div>\n      <p>{{ \"newOrganizationDesc\" | i18n }}</p>\n      <app-organization-plans></app-organization-plans>\n    </div>\n  </div>\n</div>\n","export class UpdateDomainsRequest {\n  equivalentDomains: string[][];\n  excludedGlobalEquivalentDomains: number[];\n}\n","<div class=\"page-header\">\n  <h1>{{ \"domainRules\" | i18n }}</h1>\n</div>\n<p>{{ \"domainRulesDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <h2>{{ \"customEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"!loading\">\n    <div class=\"form-group d-flex\" *ngFor=\"let d of custom; let i = index; trackBy: indexTrackBy\">\n      <div class=\"flex-fill\">\n        <label for=\"customDomain_{{ i }}\" class=\"sr-only\">{{\n          \"customDomainX\" | i18n: i + 1\n        }}</label>\n        <textarea\n          class=\"form-control\"\n          name=\"CustomDomain[{{ i }}]\"\n          id=\"customDomain_{{ i }}\"\n          [(ngModel)]=\"custom[i]\"\n          placeholder=\"{{ 'ex' | i18n }} google.com, gmail.com\"\n          required\n        ></textarea>\n      </div>\n      <button\n        type=\"button\"\n        class=\"btn btn-link text-danger ml-2\"\n        (click)=\"remove(i)\"\n        appA11yTitle=\"{{ 'remove' | i18n }}\"\n      >\n        <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <button type=\"button\" (click)=\"add()\" class=\"btn btn-outline-secondary btn-sm mb-2\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomDomain\" | i18n }}\n    </button>\n    <small class=\"text-muted d-block mb-3\">{{ \"newCustomDomainDesc\" | i18n }}</small>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n  <h2 class=\"spaced-header\">{{ \"globalEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <table class=\"table table-hover table-list\" *ngIf=\"!loading && global.length > 0\">\n    <tbody>\n      <tr *ngFor=\"let d of global\">\n        <td [ngClass]=\"{ 'table-list-strike': d.excluded }\">{{ d.domains }}</td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"!d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                {{ \"exclude\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-plus\" aria-hidden=\"true\"></i>\n                {{ \"include\" | i18n }}\n              </a>\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"customize(d)\">\n                <i class=\"bwi bwi-fw bwi-cut\" aria-hidden=\"true\"></i>\n                {{ \"customize\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UpdateDomainsRequest } from \"@bitwarden/common/models/request/update-domains.request\";\n\n@Component({\n  selector: \"app-domain-rules\",\n  templateUrl: \"domain-rules.component.html\",\n})\nexport class DomainRulesComponent implements OnInit {\n  loading = true;\n  custom: string[] = [];\n  global: any[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const response = await this.apiService.getSettingsDomains();\n    this.loading = false;\n    if (response.equivalentDomains != null) {\n      this.custom = response.equivalentDomains.map((d) => d.join(\", \"));\n    }\n    if (response.globalEquivalentDomains != null) {\n      this.global = response.globalEquivalentDomains.map((d) => {\n        return {\n          domains: d.domains.join(\", \"),\n          excluded: d.excluded,\n          key: d.type,\n        };\n      });\n    }\n  }\n\n  toggleExcluded(globalDomain: any) {\n    globalDomain.excluded = !globalDomain.excluded;\n  }\n\n  customize(globalDomain: any) {\n    globalDomain.excluded = true;\n    this.custom.push(globalDomain.domains);\n  }\n\n  remove(index: number) {\n    this.custom.splice(index, 1);\n  }\n\n  add() {\n    this.custom.push(\"\");\n  }\n\n  async submit() {\n    const request = new UpdateDomainsRequest();\n    request.excludedGlobalEquivalentDomains = this.global\n      .filter((d) => d.excluded)\n      .map((d) => d.key);\n    if (request.excludedGlobalEquivalentDomains.length === 0) {\n      request.excludedGlobalEquivalentDomains = null;\n    }\n    request.equivalentDomains = this.custom\n      .filter((d) => d != null && d.trim() !== \"\")\n      .map((d) => d.split(\",\").map((d2) => d2.trim()));\n    if (request.equivalentDomains.length === 0) {\n      request.equivalentDomains = null;\n    }\n\n    try {\n      this.formPromise = this.apiService.putSettingsDomains(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"domainsUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  indexTrackBy(index: number, obj: any): any {\n    return index;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachment.view\";\n\n@Component({\n  selector: \"emergency-access-attachments\",\n  templateUrl: \"../vault/attachments.component.html\",\n})\nexport class EmergencyAccessAttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = true;\n  canAccessAttachments = true;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  protected async init() {\n    // Do nothing since cipher is already decoded\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return false;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../vault/add-edit.component.html\",\n})\nexport class EmergencyAddEditComponent extends BaseAddEditComponent {\n  originalCipher: Cipher = null;\n  viewOnly = true;\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    messagingService: MessagingService,\n    eventService: EventService,\n    policyService: PolicyService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  async load() {\n    this.title = this.i18nService.t(\"viewItem\");\n  }\n\n  protected async loadCipher() {\n    return Promise.resolve(this.originalCipher);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"vault\" | i18n }}</h1>\n</div>\n<div class=\"mt-4\">\n  <ng-container *ngIf=\"ciphers.length\">\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown *ngIf=\"c.hasAttachments\">\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"viewAttachments(c)\">\n                  <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n                  {{ \"attachments\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #attachments></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipher.data\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { EmergencyAccessViewResponse } from \"@bitwarden/common/models/response/emergency-access.response\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { EmergencyAccessAttachmentsComponent } from \"./emergency-access-attachments.component\";\nimport { EmergencyAddEditComponent } from \"./emergency-add-edit.component\";\n\n@Component({\n  selector: \"emergency-access-view\",\n  templateUrl: \"emergency-access-view.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EmergencyAccessViewComponent implements OnInit {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n\n  id: string;\n  ciphers: CipherView[] = [];\n  loaded = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private modalService: ModalService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private apiService: ApiService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.route.params.subscribe((qParams) => {\n      if (qParams.id == null) {\n        return this.router.navigate([\"settings/emergency-access\"]);\n      }\n\n      this.id = qParams.id;\n\n      this.load();\n    });\n  }\n\n  async selectCipher(cipher: CipherView) {\n    // eslint-disable-next-line\n    const [_, childComponent] = await this.modalService.openViewRef(\n      EmergencyAddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.cipher = cipher;\n      }\n    );\n\n    return childComponent;\n  }\n\n  async load() {\n    const response = await this.apiService.postEmergencyAccessView(this.id);\n    this.ciphers = await this.getAllCiphers(response);\n    this.loaded = true;\n  }\n\n  async viewAttachments(cipher: CipherView) {\n    await this.modalService.openViewRef(\n      EmergencyAccessAttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipher = cipher;\n        comp.emergencyAccessId = this.id;\n      }\n    );\n  }\n\n  protected async getAllCiphers(response: EmergencyAccessViewResponse): Promise<CipherView[]> {\n    const ciphers = response.ciphers;\n\n    const decCiphers: CipherView[] = [];\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(response.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    const promises: any[] = [];\n    ciphers.forEach((cipherResponse) => {\n      const cipherData = new CipherData(cipherResponse);\n      const cipher = new Cipher(cipherData);\n      promises.push(cipher.decrypt(oldEncKey).then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.cipherService.getLocaleSortingFunction());\n\n    return decCiphers;\n  }\n}\n","export enum EmergencyAccessStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  RecoveryInitiated = 3,\n  RecoveryApproved = 4,\n}\n","export enum EmergencyAccessType {\n  View = 0,\n  Takeover = 1,\n}\n","export class EmergencyAccessConfirmRequest {\n  key: string;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessInviteRequest {\n  email: string;\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessUpdateRequest {\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n  keyEncrypted?: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"userAddEditTitle\">\n          <app-premium-badge *ngIf=\"readOnly\"></app-premium-badge>\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteEmergencyContactDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"email\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n            />\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userAccess\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/emergency-access/#user-access\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeView\"\n            [value]=\"emergencyAccessType.View\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeView\">\n            {{ \"view\" | i18n }}\n            <small>{{ \"viewDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeTakeover\"\n            [value]=\"emergencyAccessType.Takeover\"\n            [(ngModel)]=\"type\"\n            [disabled]=\"readOnly\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeTakeover\">\n            {{ \"takeover\" | i18n }}\n            <small>{{ \"takeoverDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-group col-6 mt-4\">\n          <label for=\"waitTime\">{{ \"waitTime\" | i18n }}</label>\n          <select\n            id=\"waitTime\"\n            name=\"waitTime\"\n            [(ngModel)]=\"waitTime\"\n            class=\"form-control\"\n            [disabled]=\"readOnly\"\n          >\n            <option *ngFor=\"let o of waitTimes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n          <small class=\"text-muted\">{{ \"waitTimeDesc\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          buttonType=\"primary\"\n          bitButton\n          [loading]=\"loading || form.loading\"\n          [disabled]=\"readOnly\"\n        >\n          {{ \"save\" | i18n }}\n        </button>\n        <button bitButton buttonType=\"secondary\" type=\"button\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            bitButton\n            buttonType=\"danger\"\n            type=\"button\"\n            (click)=\"delete()\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EmergencyAccessType } from \"@bitwarden/common/enums/emergencyAccessType\";\nimport { EmergencyAccessInviteRequest } from \"@bitwarden/common/models/request/emergency-access-invite.request\";\nimport { EmergencyAccessUpdateRequest } from \"@bitwarden/common/models/request/emergency-access-update.request\";\n\n@Component({\n  selector: \"emergency-access-add-edit\",\n  templateUrl: \"emergency-access-add-edit.component.html\",\n})\nexport class EmergencyAccessAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() emergencyAccessId: string;\n  @Output() onSaved = new EventEmitter();\n  @Output() onDeleted = new EventEmitter();\n\n  loading = true;\n  readOnly = false;\n  editMode = false;\n  title: string;\n  email: string;\n  type: EmergencyAccessType = EmergencyAccessType.View;\n\n  formPromise: Promise<any>;\n\n  emergencyAccessType = EmergencyAccessType;\n  waitTimes: { name: string; value: number }[];\n  waitTime: number;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.emergencyAccessId != null;\n\n    this.waitTimes = [\n      { name: this.i18nService.t(\"oneDay\"), value: 1 },\n      { name: this.i18nService.t(\"days\", \"2\"), value: 2 },\n      { name: this.i18nService.t(\"days\", \"7\"), value: 7 },\n      { name: this.i18nService.t(\"days\", \"14\"), value: 14 },\n      { name: this.i18nService.t(\"days\", \"30\"), value: 30 },\n      { name: this.i18nService.t(\"days\", \"90\"), value: 90 },\n    ];\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editEmergencyContact\");\n      try {\n        const emergencyAccess = await this.apiService.getEmergencyAccess(this.emergencyAccessId);\n        this.type = emergencyAccess.type;\n        this.waitTime = emergencyAccess.waitTimeDays;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteEmergencyContact\");\n      this.waitTime = this.waitTimes[2].value;\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new EmergencyAccessUpdateRequest();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.putEmergencyAccess(this.emergencyAccessId, request);\n      } else {\n        const request = new EmergencyAccessInviteRequest();\n        request.email = this.email.trim();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.postEmergencyAccessInvite(request);\n      }\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSaved.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    this.onDeleted.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"emergency-access-confirm\",\n  templateUrl: \"emergency-access-confirm.component.html\",\n})\nexport class EmergencyAccessConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() emergencyAccessId: string;\n  @Input() formPromise: Promise<any>;\n  @Output() onConfirmed = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n\n  constructor(\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(this.userId);\n      if (publicKeyResponse != null) {\n        const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n        const fingerprint = await this.cryptoService.getFingerprint(this.userId, publicKey.buffer);\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    try {\n      this.onConfirmed.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export class EmergencyAccessPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ \"takeover\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPassword\"\n                type=\"password\"\n                name=\"NewMasterPasswordHash\"\n                class=\"form-control mb-1\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <app-password-strength\n                [password]=\"masterPassword\"\n                [email]=\"email\"\n                [showText]=\"true\"\n                (passwordStrengthResult)=\"getStrengthResult($event)\"\n              >\n              </app-password-strength>\n            </div>\n          </div>\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"password\"\n                name=\"MasterPasswordRetype\"\n                class=\"form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { takeUntil } from \"rxjs\";\n\nimport { ChangePasswordComponent } from \"@bitwarden/angular/components/change-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policy.data\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { EmergencyAccessPasswordRequest } from \"@bitwarden/common/models/request/emergency-access-password.request\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\n@Component({\n  selector: \"emergency-access-takeover\",\n  templateUrl: \"emergency-access-takeover.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EmergencyAccessTakeoverComponent\n  extends ChangePasswordComponent\n  implements OnInit, OnDestroy\n{\n  @Output() onDone = new EventEmitter();\n  @Input() emergencyAccessId: string;\n  @Input() name: string;\n  @Input() email: string;\n  @Input() kdf: KdfType;\n  @Input() kdfIterations: number;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private apiService: ApiService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    const response = await this.apiService.getEmergencyGrantorPolicies(this.emergencyAccessId);\n    if (response.data != null && response.data.length > 0) {\n      const policies = response.data.map(\n        (policyResponse: PolicyResponse) => new Policy(new PolicyData(policyResponse))\n      );\n\n      this.policyService\n        .masterPasswordPolicyOptions$(policies)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((enforcedPolicyOptions) => (this.enforcedPolicyOptions = enforcedPolicyOptions));\n    }\n  }\n\n  // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    const takeoverResponse = await this.apiService.postEmergencyAccessTakeover(\n      this.emergencyAccessId\n    );\n\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(takeoverResponse.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    if (oldEncKey == null) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"unexpectedError\")\n      );\n      return;\n    }\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      takeoverResponse.kdf,\n      takeoverResponse.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    const encKey = await this.cryptoService.remakeEncKey(key, oldEncKey);\n\n    const request = new EmergencyAccessPasswordRequest();\n    request.newMasterPasswordHash = masterPasswordHash;\n    request.key = encKey[1].encryptedString;\n\n    this.apiService.postEmergencyAccessPassword(this.emergencyAccessId, request);\n\n    try {\n      this.onDone.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"emergencyAccess\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"emergencyAccessDesc\" | i18n }}\n  <a href=\"https://bitwarden.com/help/emergency-access/\" target=\"_blank\" rel=\"noopener\">\n    {{ \"learnMore\" | i18n }}.\n  </a>\n</p>\n\n<p *ngIf=\"isOrganizationOwner\">\n  <b>{{ \"warning\" | i18n }}:</b> {{ \"emergencyAccessOwnerWarning\" | i18n }}\n</p>\n\n<div class=\"page-header d-flex\">\n  <h2>\n    {{ \"trustedEmergencyContacts\" | i18n }}\n    <app-premium-badge></app-premium-badge>\n  </h2>\n  <div class=\"ml-auto d-flex\">\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      type=\"button\"\n      (click)=\"invite()\"\n      [disabled]=\"!canAccessPremium\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-plus bwi-fw\"></i>\n      {{ \"addEmergencyContact\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"trustedContacts && trustedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of trustedContacts; let i = index\">\n      <td width=\"30\">\n        <bit-avatar [text]=\"c | userName\" [id]=\"c.granteeId\" size=\"small\"></bit-avatar>\n      </td>\n      <td>\n        <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.email }}</a>\n        <span\n          bitBadge\n          badgeType=\"secondary\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n          >{{ \"invited\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n          >{{ \"accepted\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span bitBadge *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\">{{\n          \"emergencyAccessRecoveryApproved\" | i18n\n        }}</span>\n\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.View\">{{ \"view\" | i18n }}</span>\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <button\n          [bitMenuTriggerFor]=\"trustedContactOptions\"\n          class=\"tw-border-none tw-bg-transparent tw-text-main\"\n          type=\"button\"\n          appA11yTitle=\"{{ 'options' | i18n }}\"\n        >\n          <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu #trustedContactOptions>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n            (click)=\"reinvite(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n            {{ \"resendInvitation\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n            (click)=\"confirm(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n            {{ \"confirm\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n            (click)=\"approve(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n            {{ \"approve\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryInitiated ||\n              c.status === emergencyAccessStatusType.RecoveryApproved\n            \"\n            (click)=\"reject(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"reject\" | i18n }}\n          </button>\n          <button bitMenuItem (click)=\"remove(c)\">\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"remove\" | i18n }}\n          </button>\n        </bit-menu>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-container *ngIf=\"!trustedContacts || !trustedContacts.length\">\n  <p *ngIf=\"loaded\">{{ \"noTrustedContacts\" | i18n }}</p>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</ng-container>\n\n<div class=\"page-header spaced-header\">\n  <h2>{{ \"designatedEmergencyContacts\" | i18n }}</h2>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"grantedContacts && grantedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of grantedContacts; let i = index\">\n      <td width=\"30\">\n        <bit-avatar [text]=\"c | userName\" [id]=\"c.grantorId\" size=\"small\"></bit-avatar>\n      </td>\n      <td>\n        <span>{{ c.email }}</span>\n        <span bitBadge *ngIf=\"c.status === emergencyAccessStatusType.Invited\">{{\n          \"invited\" | i18n\n        }}</span>\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n          >{{ \"accepted\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"success\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\"\n          >{{ \"emergencyAccessRecoveryApproved\" | i18n }}</span\n        >\n\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.View\">{{ \"view\" | i18n }}</span>\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <button\n          [bitMenuTriggerFor]=\"grantedContactOptions\"\n          class=\"tw-border-none tw-bg-transparent tw-text-main\"\n          type=\"button\"\n          appA11yTitle=\"{{ 'options' | i18n }}\"\n        >\n          <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu #grantedContactOptions>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Confirmed\"\n            (click)=\"requestAccess(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n            {{ \"requestAccess\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryApproved &&\n              c.type === emergencyAccessType.Takeover\n            \"\n            (click)=\"takeover(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n            {{ \"takeover\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryApproved &&\n              c.type === emergencyAccessType.View\n            \"\n            [routerLink]=\"c.id\"\n          >\n            <i class=\"bwi bwi-fw bwi-eye\" aria-hidden=\"true\"></i>\n            {{ \"view\" | i18n }}\n          </button>\n          <button bitMenuItem (click)=\"remove(c)\">\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"remove\" | i18n }}\n          </button>\n        </bit-menu>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-container *ngIf=\"!grantedContacts || !grantedContacts.length\">\n  <p *ngIf=\"loaded\">{{ \"noGrantedAccess\" | i18n }}</p>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</ng-container>\n\n<ng-template #addEdit></ng-template>\n<ng-template #takeoverTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EmergencyAccessStatusType } from \"@bitwarden/common/enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"@bitwarden/common/enums/emergencyAccessType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EmergencyAccessConfirmRequest } from \"@bitwarden/common/models/request/emergency-access-confirm.request\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n} from \"@bitwarden/common/models/response/emergency-access.response\";\n\nimport { EmergencyAccessAddEditComponent } from \"./emergency-access-add-edit.component\";\nimport { EmergencyAccessConfirmComponent } from \"./emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"./emergency-access-takeover.component\";\n\n@Component({\n  selector: \"emergency-access\",\n  templateUrl: \"emergency-access.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EmergencyAccessComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"takeoverTemplate\", { read: ViewContainerRef, static: true })\n  takeoverModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  loaded = false;\n  canAccessPremium: boolean;\n  trustedContacts: EmergencyAccessGranteeDetailsResponse[];\n  grantedContacts: EmergencyAccessGrantorDetailsResponse[];\n  emergencyAccessType = EmergencyAccessType;\n  emergencyAccessStatusType = EmergencyAccessStatusType;\n  actionPromise: Promise<any>;\n  isOrganizationOwner: boolean;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const orgs = await this.organizationService.getAll();\n    this.isOrganizationOwner = orgs.some((o) => o.isOwner);\n    this.load();\n  }\n\n  async load() {\n    this.trustedContacts = (await this.apiService.getEmergencyAccessTrusted()).data;\n    this.grantedContacts = (await this.apiService.getEmergencyAccessGranted()).data;\n    this.loaded = true;\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  async edit(details: EmergencyAccessGranteeDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.emergencyAccessId = details?.id;\n        comp.readOnly = !this.canAccessPremium;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSaved.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeleted.subscribe(() => {\n          modal.close();\n          this.remove(details);\n        });\n      }\n    );\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  async reinvite(contact: EmergencyAccessGranteeDetailsResponse) {\n    if (this.actionPromise != null) {\n      return;\n    }\n    this.actionPromise = this.apiService.postEmergencyAccessReinvite(contact.id);\n    await this.actionPromise;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenReinvited\", contact.email)\n    );\n    this.actionPromise = null;\n  }\n\n  async confirm(contact: EmergencyAccessGranteeDetailsResponse) {\n    function updateUser() {\n      contact.status = EmergencyAccessStatusType.Confirmed;\n    }\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n    if (autoConfirm == null || !autoConfirm) {\n      const [modal] = await this.modalService.openViewRef(\n        EmergencyAccessConfirmComponent,\n        this.confirmModalRef,\n        (comp) => {\n          comp.name = this.userNamePipe.transform(contact);\n          comp.emergencyAccessId = contact.id;\n          comp.userId = contact?.granteeId;\n          // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n          comp.onConfirmed.subscribe(async () => {\n            modal.close();\n\n            comp.formPromise = this.doConfirmation(contact);\n            await comp.formPromise;\n\n            updateUser();\n            this.platformUtilsService.showToast(\n              \"success\",\n              null,\n              this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n            );\n          });\n        }\n      );\n      return;\n    }\n\n    this.actionPromise = this.doConfirmation(contact);\n    await this.actionPromise;\n    updateUser();\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n    );\n    this.actionPromise = null;\n  }\n\n  async remove(\n    details: EmergencyAccessGranteeDetailsResponse | EmergencyAccessGrantorDetailsResponse\n  ) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteEmergencyAccess(details.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(details))\n      );\n\n      if (details instanceof EmergencyAccessGranteeDetailsResponse) {\n        this.removeGrantee(details);\n      } else {\n        this.removeGrantor(details);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async requestAccess(details: EmergencyAccessGrantorDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"requestAccessConfirmation\", details.waitTimeDays.toString()),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"requestAccess\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessInitiate(details.id);\n\n    details.status = EmergencyAccessStatusType.RecoveryInitiated;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"requestSent\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async approve(details: EmergencyAccessGranteeDetailsResponse) {\n    const type = this.i18nService.t(\n      details.type === EmergencyAccessType.View ? \"view\" : \"takeover\"\n    );\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"approveAccessConfirmation\", this.userNamePipe.transform(details), type),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"approve\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessApprove(details.id);\n    details.status = EmergencyAccessStatusType.RecoveryApproved;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyApproved\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async reject(details: EmergencyAccessGranteeDetailsResponse) {\n    await this.apiService.postEmergencyAccessReject(details.id);\n    details.status = EmergencyAccessStatusType.Confirmed;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyRejected\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async takeover(details: EmergencyAccessGrantorDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessTakeoverComponent,\n      this.takeoverModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.email = details.email;\n        comp.emergencyAccessId = details != null ? details.id : null;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDone.subscribe(() => {\n          modal.close();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"passwordResetFor\", this.userNamePipe.transform(details))\n          );\n        });\n      }\n    );\n  }\n\n  private removeGrantee(details: EmergencyAccessGranteeDetailsResponse) {\n    const index = this.trustedContacts.indexOf(details);\n    if (index > -1) {\n      this.trustedContacts.splice(index, 1);\n    }\n  }\n\n  private removeGrantor(details: EmergencyAccessGrantorDetailsResponse) {\n    const index = this.grantedContacts.indexOf(details);\n    if (index > -1) {\n      this.grantedContacts.splice(index, 1);\n    }\n  }\n\n  // Encrypt the master password hash using the grantees public key, and send it to bitwarden for escrow.\n  private async doConfirmation(details: EmergencyAccessGranteeDetailsResponse) {\n    const encKey = await this.cryptoService.getEncKey();\n    const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n    const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n    try {\n      this.logService.debug(\n        \"User's fingerprint: \" +\n          (await this.cryptoService.getFingerprint(details.granteeId, publicKey.buffer)).join(\"-\")\n      );\n    } catch {\n      // Ignore errors since it's just a debug message\n    }\n\n    const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n    const request = new EmergencyAccessConfirmRequest();\n    request.key = encryptedKey.encryptedString;\n    await this.apiService.postEmergencyAccessConfirm(details.id, request);\n  }\n}\n","import { Directive, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormBuilder,\n  ValidationErrors,\n  Validator,\n} from \"@angular/forms\";\nimport { combineLatestWith, Subject, takeUntil } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\n@Directive()\nexport class VaultTimeoutInputComponent\n  implements ControlValueAccessor, Validator, OnInit, OnDestroy\n{\n  get showCustom() {\n    return this.form.get(\"vaultTimeout\").value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n  }\n\n  get exceedsMinimumTimout(): boolean {\n    return (\n      !this.showCustom || this.customTimeInMinutes() > VaultTimeoutInputComponent.MIN_CUSTOM_MINUTES\n    );\n  }\n\n  static CUSTOM_VALUE = -100;\n  static MIN_CUSTOM_MINUTES = 0;\n\n  form = this.formBuilder.group({\n    vaultTimeout: [null],\n    custom: this.formBuilder.group({\n      hours: [null],\n      minutes: [null],\n    }),\n  });\n\n  @Input() vaultTimeouts: { name: string; value: number }[];\n  vaultTimeoutPolicy: Policy;\n  vaultTimeoutPolicyHours: number;\n  vaultTimeoutPolicyMinutes: number;\n\n  private onChange: (vaultTimeout: number) => void;\n  private validatorChange: () => void;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.MaximumVaultTimeout)\n      .pipe(combineLatestWith(this.policyService.policies$), takeUntil(this.destroy$))\n      .subscribe(([policyAppliesToActiveUser, policies]) => {\n        if (policyAppliesToActiveUser) {\n          const vaultTimeoutPolicy = policies.find(\n            (policy) => policy.type === PolicyType.MaximumVaultTimeout && policy.enabled\n          );\n\n          this.vaultTimeoutPolicy = vaultTimeoutPolicy;\n          this.applyVaultTimeoutPolicy();\n        }\n      });\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.form.valueChanges.subscribe(async (value) => {\n      this.onChange(this.getVaultTimeout(value));\n    });\n\n    // Assign the previous value to the custom fields\n    this.form.get(\"vaultTimeout\").valueChanges.subscribe((value) => {\n      if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n        return;\n      }\n\n      const current = Math.max(this.form.value.vaultTimeout, 0);\n      this.form.patchValue({\n        custom: {\n          hours: Math.floor(current / 60),\n          minutes: current % 60,\n        },\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngOnChanges() {\n    this.vaultTimeouts.push({\n      name: this.i18nService.t(\"custom\"),\n      value: VaultTimeoutInputComponent.CUSTOM_VALUE,\n    });\n  }\n\n  getVaultTimeout(value: any) {\n    if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n      return value.vaultTimeout;\n    }\n\n    return value.custom.hours * 60 + value.custom.minutes;\n  }\n\n  writeValue(value: number): void {\n    if (value == null) {\n      return;\n    }\n\n    if (this.vaultTimeouts.every((p) => p.value !== value)) {\n      this.form.setValue({\n        vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n        custom: {\n          hours: Math.floor(value / 60),\n          minutes: value % 60,\n        },\n      });\n      return;\n    }\n\n    this.form.patchValue({\n      vaultTimeout: value,\n    });\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: any): void {\n    // Empty\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Empty\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n      return { policyError: true };\n    }\n\n    if (!this.exceedsMinimumTimout) {\n      return { minTimeoutError: true };\n    }\n\n    return null;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n\n  private customTimeInMinutes() {\n    return this.form.value.custom.hours * 60 + this.form.value.custom.minutes;\n  }\n\n  private applyVaultTimeoutPolicy() {\n    this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n    this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n    this.vaultTimeouts = this.vaultTimeouts.filter(\n      (t) =>\n        t.value <= this.vaultTimeoutPolicy.data.minutes &&\n        (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n        t.value != null\n    );\n    this.validatorChange();\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\">\n  {{ \"vaultTimeoutPolicyInEffect\" | i18n: vaultTimeoutPolicyHours:vaultTimeoutPolicyMinutes }}\n</app-callout>\n\n<div [formGroup]=\"form\">\n  <div class=\"form-group\">\n    <label for=\"vaultTimeout\">{{ \"vaultTimeout\" | i18n }}</label>\n    <select\n      id=\"vaultTimeout\"\n      name=\"VaultTimeout\"\n      formControlName=\"vaultTimeout\"\n      class=\"form-control\"\n    >\n      <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{ o.name }}</option>\n    </select>\n    <small class=\"form-text text-muted\">{{ \"vaultTimeoutDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\" *ngIf=\"showCustom\" formGroupName=\"custom\">\n    <label for=\"customVaultTimeout\">{{ \"customVaultTimeout\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n\n    <small *ngIf=\"!exceedsMinimumTimout\" class=\"tw-text-danger\">\n      <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i> {{ \"vaultCustomTimeoutMinimum\" | i18n }}\n    </small>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VaultTimeoutInputComponent as VaultTimeoutInputComponentBase } from \"@bitwarden/angular/components/settings/vault-timeout-input.component\";\n\n@Component({\n  selector: \"app-vault-timeout-input\",\n  templateUrl: \"vault-timeout-input.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n  ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {}\n","<div class=\"page-header\">\n  <h1>{{ \"preferences\" | i18n }}</h1>\n</div>\n<p>{{ \"preferencesDesc\" | i18n }}</p>\n<form (ngSubmit)=\"submit()\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <app-vault-timeout-input\n        [vaultTimeouts]=\"vaultTimeouts\"\n        [formControl]=\"vaultTimeout\"\n        ngDefaultControl\n      >\n      </app-vault-timeout-input>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label>{{ \"vaultTimeoutAction\" | i18n }}</label>\n    <div class=\"form-check form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLock\"\n        value=\"lock\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLock\">\n        {{ \"lock\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLockDesc\" | i18n }}</small>\n      </label>\n    </div>\n    <div class=\"form-check mt-2 form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLogOut\"\n        value=\"logOut\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n        (ngModelChange)=\"vaultTimeoutActionChanged($event)\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLogOut\">\n        {{ \"logOut\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLogOutDesc\" | i18n }}</small>\n      </label>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <div class=\"d-flex\">\n          <label for=\"locale\">{{ \"language\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/localization/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <select id=\"locale\" name=\"Locale\" [(ngModel)]=\"locale\" class=\"form-control\">\n          <option *ngFor=\"let o of localeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"languageDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFavicons\"\n        name=\"enableFavicons\"\n        [(ngModel)]=\"enableFavicons\"\n      />\n      <label class=\"form-check-label\" for=\"enableFavicons\">\n        {{ \"enableFavicon\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/website-icons/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"faviconDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFullWidth\"\n        name=\"enableFullWidth\"\n        [(ngModel)]=\"enableFullWidth\"\n      />\n      <label class=\"form-check-label\" for=\"enableFullWidth\">\n        {{ \"enableFullWidth\" | i18n }}\n      </label>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"enableFullWidthDesc\" | i18n }}</small>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"theme\">{{ \"theme\" | i18n }}</label>\n        <select id=\"theme\" name=\"theme\" [(ngModel)]=\"theme\" class=\"form-control\">\n          <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"themeDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormControl } from \"@angular/forms\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-preferences\",\n  templateUrl: \"preferences.component.html\",\n})\nexport class PreferencesComponent implements OnInit {\n  vaultTimeoutAction = \"lock\";\n  enableFavicons: boolean;\n  enableFullWidth: boolean;\n  theme: ThemeType;\n  locale: string;\n  vaultTimeouts: { name: string; value: number }[];\n  localeOptions: any[];\n  themeOptions: any[];\n\n  vaultTimeout: UntypedFormControl = new UntypedFormControl(null);\n\n  private startingLocale: string;\n  private startingTheme: ThemeType;\n\n  constructor(\n    private stateService: StateService,\n    private i18nService: I18nService,\n    private vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    private platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private themingService: AbstractThemingService\n  ) {\n    this.vaultTimeouts = [\n      { name: i18nService.t(\"oneMinute\"), value: 1 },\n      { name: i18nService.t(\"fiveMinutes\"), value: 5 },\n      { name: i18nService.t(\"fifteenMinutes\"), value: 15 },\n      { name: i18nService.t(\"thirtyMinutes\"), value: 30 },\n      { name: i18nService.t(\"oneHour\"), value: 60 },\n      { name: i18nService.t(\"fourHours\"), value: 240 },\n      { name: i18nService.t(\"onRefresh\"), value: -1 },\n    ];\n    if (this.platformUtilsService.isDev()) {\n      this.vaultTimeouts.push({ name: i18nService.t(\"never\"), value: null });\n    }\n\n    const localeOptions: any[] = [];\n    i18nService.supportedTranslationLocales.forEach((locale) => {\n      let name = locale;\n      if (i18nService.localeNames.has(locale)) {\n        name += \" - \" + i18nService.localeNames.get(locale);\n      }\n      localeOptions.push({ name: name, value: locale });\n    });\n    localeOptions.sort(Utils.getSortFunction(i18nService, \"name\"));\n    localeOptions.splice(0, 0, { name: i18nService.t(\"default\"), value: null });\n    this.localeOptions = localeOptions;\n    this.themeOptions = [\n      { name: i18nService.t(\"themeLight\"), value: ThemeType.Light },\n      { name: i18nService.t(\"themeDark\"), value: ThemeType.Dark },\n      { name: i18nService.t(\"themeSystem\"), value: ThemeType.System },\n    ];\n  }\n\n  async ngOnInit() {\n    this.vaultTimeout.setValue(await this.vaultTimeoutSettingsService.getVaultTimeout());\n    this.vaultTimeoutAction = await this.stateService.getVaultTimeoutAction();\n    this.enableFavicons = !(await this.stateService.getDisableFavicon());\n    this.enableFullWidth = await this.stateService.getEnableFullWidth();\n\n    this.locale = (await this.stateService.getLocale()) ?? null;\n    this.startingLocale = this.locale;\n\n    this.theme = await this.stateService.getTheme();\n    this.startingTheme = this.theme;\n  }\n\n  async submit() {\n    if (!this.vaultTimeout.valid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"vaultTimeoutRangeError\")\n      );\n      return;\n    }\n\n    await this.vaultTimeoutSettingsService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n    await this.stateService.setDisableFavicon(!this.enableFavicons);\n    await this.stateService.setEnableFullWidth(this.enableFullWidth);\n    this.messagingService.send(\"setFullWidth\");\n    if (this.theme !== this.startingTheme) {\n      await this.themingService.updateConfiguredTheme(this.theme);\n      this.startingTheme = this.theme;\n    }\n    await this.stateService.setLocale(this.locale);\n    if (this.locale !== this.startingLocale) {\n      window.location.reload();\n    } else {\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"preferencesUpdated\")\n      );\n    }\n  }\n\n  async vaultTimeoutActionChanged(newValue: string) {\n    if (newValue === \"logOut\") {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmation\"),\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmationTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeoutAction = \"lock\";\n        return;\n      }\n    }\n    this.vaultTimeoutAction = newValue;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nimport { FolderRequest } from \"./folder.request\";\n\nexport class FolderWithIdRequest extends FolderRequest {\n  id: string;\n\n  constructor(folder: Folder) {\n    super(folder);\n    this.id = folder.id;\n  }\n}\n","import { Send } from \"../domain/send\";\n\nimport { SendRequest } from \"./send.request\";\n\nexport class SendWithIdRequest extends SendRequest {\n  id: string;\n\n  constructor(send: Send) {\n    super(send);\n    this.id = send.id;\n  }\n}\n","import { CipherWithIdRequest } from \"./cipher-with-id.request\";\nimport { FolderWithIdRequest } from \"./folder-with-id.request\";\nimport { SendWithIdRequest } from \"./send-with-id.request\";\n\nexport class UpdateKeyRequest {\n  ciphers: CipherWithIdRequest[] = [];\n  folders: FolderWithIdRequest[] = [];\n  sends: SendWithIdRequest[] = [];\n  masterPasswordHash: string;\n  privateKey: string;\n  key: string;\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"changeMasterPassword\" | i18n }}</h1>\n</div>\n\n<bit-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</bit-callout>\n<app-callout\n  type=\"info\"\n  [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n  *ngIf=\"enforcedPolicyOptions\"\n>\n</app-callout>\n\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n        <input\n          id=\"currentMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"currentMasterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n        <input\n          id=\"newMasterPassword\"\n          type=\"password\"\n          name=\"NewMasterPasswordHash\"\n          class=\"form-control mb-1\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n        <app-password-strength\n          [password]=\"masterPassword\"\n          [email]=\"email\"\n          [showText]=\"true\"\n          (passwordStrengthResult)=\"getStrengthResult($event)\"\n        >\n        </app-password-strength>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n        <input\n          id=\"masterPasswordRetype\"\n          type=\"password\"\n          name=\"MasterPasswordRetype\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPasswordRetype\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"masterPasswordHint\">{{ \"masterPassHintLabel\" | i18n }}</label>\n    <input\n      id=\"masterPasswordHint\"\n      class=\"form-control\"\n      maxlength=\"50\"\n      type=\"text\"\n      name=\"MasterPasswordHint\"\n      [(ngModel)]=\"masterPasswordHint\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"rotateEncKey\"\n        name=\"RotateEncKey\"\n        [(ngModel)]=\"rotateEncKey\"\n        (change)=\"rotateEncKeyClicked()\"\n      />\n      <label class=\"form-check-label\" for=\"rotateEncKey\">\n        {{ \"rotateAccountEncKey\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"changeMasterPassword\" | i18n }}\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"@bitwarden/angular/components/change-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EmergencyAccessStatusType } from \"@bitwarden/common/enums/emergencyAccessStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { CipherWithIdRequest } from \"@bitwarden/common/models/request/cipher-with-id.request\";\nimport { EmergencyAccessUpdateRequest } from \"@bitwarden/common/models/request/emergency-access-update.request\";\nimport { FolderWithIdRequest } from \"@bitwarden/common/models/request/folder-with-id.request\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/models/request/organization-user-reset-password-enrollment.request\";\nimport { PasswordRequest } from \"@bitwarden/common/models/request/password.request\";\nimport { SendWithIdRequest } from \"@bitwarden/common/models/request/send-with-id.request\";\nimport { UpdateKeyRequest } from \"@bitwarden/common/models/request/update-key.request\";\n\n@Component({\n  selector: \"app-change-password\",\n  templateUrl: \"change-password.component.html\",\n})\nexport class ChangePasswordComponent extends BaseChangePasswordComponent {\n  rotateEncKey = false;\n  currentMasterPassword: string;\n  masterPasswordHint: string;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private syncService: SyncService,\n    private apiService: ApiService,\n    private sendService: SendService,\n    private organizationService: OrganizationService,\n    private keyConnectorService: KeyConnectorService,\n    private router: Router,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      this.router.navigate([\"/settings/security/two-factor\"]);\n    }\n\n    this.masterPasswordHint = (await this.apiService.getProfile()).masterPasswordHint;\n    await super.ngOnInit();\n  }\n\n  async rotateEncKeyClicked() {\n    if (this.rotateEncKey) {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      let hasOldAttachments = false;\n      if (ciphers != null) {\n        for (let i = 0; i < ciphers.length; i++) {\n          if (ciphers[i].organizationId == null && ciphers[i].hasOldAttachments) {\n            hasOldAttachments = true;\n            break;\n          }\n        }\n      }\n\n      if (hasOldAttachments) {\n        const learnMore = await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"oldAttachmentsNeedFixDesc\"),\n          null,\n          this.i18nService.t(\"learnMore\"),\n          this.i18nService.t(\"close\"),\n          \"warning\"\n        );\n        if (learnMore) {\n          this.platformUtilsService.launchUri(\n            \"https://bitwarden.com/help/attachments/#add-storage-space\"\n          );\n        }\n        this.rotateEncKey = false;\n        return;\n      }\n\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateEncryptionKeyWarning\") +\n          \" \" +\n          this.i18nService.t(\"updateEncryptionKeyExportWarning\") +\n          \" \" +\n          this.i18nService.t(\"rotateEncKeyConfirmation\"),\n        this.i18nService.t(\"rotateEncKeyTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        this.rotateEncKey = false;\n      }\n    }\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    await super.submit();\n  }\n\n  async setupSubmitActions() {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n\n    if (this.rotateEncKey) {\n      await this.syncService.fullSync(true);\n    }\n\n    return super.setupSubmitActions();\n  }\n\n  async performSubmitActions(\n    newMasterPasswordHash: string,\n    newKey: SymmetricCryptoKey,\n    newEncKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const request = new PasswordRequest();\n    request.masterPasswordHash = await this.cryptoService.hashPassword(\n      this.currentMasterPassword,\n      null\n    );\n    request.masterPasswordHint = this.masterPasswordHint;\n    request.newMasterPasswordHash = newMasterPasswordHash;\n    request.key = newEncKey[1].encryptedString;\n\n    try {\n      if (this.rotateEncKey) {\n        this.formPromise = this.apiService.postPassword(request).then(() => {\n          return this.updateKey(newKey, request.newMasterPasswordHash);\n        });\n      } else {\n        this.formPromise = this.apiService.postPassword(request);\n      }\n\n      await this.formPromise;\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  private async updateKey(key: SymmetricCryptoKey, masterPasswordHash: string) {\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = masterPasswordHash;\n\n    const folders = await firstValueFrom(this.folderService.folderViews$);\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    const sends = await this.sendService.getAll();\n    await Promise.all(\n      sends.map(async (send) => {\n        const cryptoKey = await this.cryptoService.decryptToBytes(send.key, null);\n        send.key = (await this.cryptoService.encrypt(cryptoKey, encKey[0])) ?? send.key;\n        request.sends.push(new SendWithIdRequest(send));\n      })\n    );\n\n    await this.apiService.postAccountKey(request);\n\n    await this.updateEmergencyAccesses(encKey[0]);\n\n    await this.updateAllResetPasswordKeys(encKey[0], masterPasswordHash);\n  }\n\n  private async updateEmergencyAccesses(encKey: SymmetricCryptoKey) {\n    const emergencyAccess = await this.apiService.getEmergencyAccessTrusted();\n    const allowedStatuses = [\n      EmergencyAccessStatusType.Confirmed,\n      EmergencyAccessStatusType.RecoveryInitiated,\n      EmergencyAccessStatusType.RecoveryApproved,\n    ];\n\n    const filteredAccesses = emergencyAccess.data.filter((d) => allowedStatuses.includes(d.status));\n\n    for (const details of filteredAccesses) {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      const updateRequest = new EmergencyAccessUpdateRequest();\n      updateRequest.type = details.type;\n      updateRequest.waitTimeDays = details.waitTimeDays;\n      updateRequest.keyEncrypted = encryptedKey.encryptedString;\n\n      await this.apiService.putEmergencyAccess(details.id, updateRequest);\n    }\n  }\n\n  private async updateAllResetPasswordKeys(encKey: SymmetricCryptoKey, masterPasswordHash: string) {\n    const orgs = await this.organizationService.getAll();\n\n    for (const org of orgs) {\n      // If not already enrolled, skip\n      if (!org.resetPasswordEnrolled) {\n        continue;\n      }\n\n      // Retrieve public key\n      const response = await this.organizationApiService.getKeys(org.id);\n      const publicKey = Utils.fromB64ToArray(response?.publicKey);\n\n      // Re-enroll - encrpyt user's encKey.key with organization public key\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Create/Execute request\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.masterPasswordHash = masterPasswordHash;\n      request.resetPasswordKey = encryptedKey.encryptedString;\n\n      await this.apiService.putOrganizationUserResetPasswordEnrollment(org.id, org.userId, request);\n    }\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { PasswordRequest } from \"./password.request\";\n\nexport class KdfRequest extends PasswordRequest {\n  kdf: KdfType;\n  kdfIterations: number;\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"encKeySettings\" | i18n }}</h1>\n</div>\n<bit-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</bit-callout>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"kdfMasterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"kdfMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdf\">{{ \"kdfAlgorithm\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://en.wikipedia.org/wiki/Key_derivation_function\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <select id=\"kdf\" name=\"Kdf\" [(ngModel)]=\"kdf\" class=\"form-control\" required>\n          <option *ngFor=\"let o of kdfOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdfIterations\">{{ \"kdfIterations\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://bitwarden.com/help/what-encryption-is-used/#pbkdf2\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <input\n          id=\"kdfIterations\"\n          type=\"number\"\n          min=\"5000\"\n          max=\"2000000\"\n          name=\"KdfIterations\"\n          class=\"form-control\"\n          [(ngModel)]=\"kdfIterations\"\n          required\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <div class=\"small form-text text-muted\">\n          <p>{{ \"kdfIterationsDesc\" | i18n: (recommendedKdfIterations | number) }}</p>\n          <strong>{{ \"warning\" | i18n }}</strong\n          >: {{ \"kdfIterationsWarning\" | i18n: (50000 | number) }}\n        </div>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"changeKdf\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { KdfRequest } from \"@bitwarden/common/models/request/kdf.request\";\n\n@Component({\n  selector: \"app-change-kdf\",\n  templateUrl: \"change-kdf.component.html\",\n})\nexport class ChangeKdfComponent implements OnInit {\n  masterPassword: string;\n  kdfIterations: number;\n  kdf = KdfType.PBKDF2_SHA256;\n  kdfOptions: any[] = [];\n  formPromise: Promise<any>;\n  recommendedKdfIterations = DEFAULT_KDF_ITERATIONS;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.kdfOptions = [{ name: \"PBKDF2 SHA-256\", value: KdfType.PBKDF2_SHA256 }];\n  }\n\n  async ngOnInit() {\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    const request = new KdfRequest();\n    request.kdf = this.kdf;\n    request.kdfIterations = this.kdfIterations;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n    const email = await this.stateService.getEmail();\n    const newKey = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email,\n      this.kdf,\n      this.kdfIterations\n    );\n    request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      newKey\n    );\n    const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n    request.key = newEncKey[1].encryptedString;\n    try {\n      this.formPromise = this.apiService.postAccountKdf(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"encKeySettingsChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<app-change-kdf *ngIf=\"showChangeKdf\"></app-change-kdf>\n<div\n  [ngClass]=\"{ 'tabbed-header': !showChangeKdf, 'secondary-header': showChangeKdf }\"\n  class=\"border-0 mb-0\"\n>\n  <h1>{{ \"apiKey\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"userApiKeyDesc\" | i18n }}\n</p>\n<button bitButton buttonType=\"secondary\" (click)=\"viewUserApiKey()\">\n  {{ \"viewApiKey\" | i18n }}\n</button>\n<button bitButton buttonType=\"secondary\" (click)=\"rotateUserApiKey()\">\n  {{ \"rotateApiKey\" | i18n }}\n</button>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { ApiKeyComponent } from \"./api-key.component\";\n\n@Component({\n  selector: \"app-security-keys\",\n  templateUrl: \"security-keys.component.html\",\n})\nexport class SecurityKeysComponent implements OnInit {\n  @ViewChild(\"viewUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  viewUserApiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateUserApiKeyModalRef: ViewContainerRef;\n\n  showChangeKdf = true;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private modalService: ModalService,\n    private apiService: ApiService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeKdf = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async viewUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.viewUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"userApiKeyDesc\";\n    });\n  }\n\n  async rotateUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.isRotation = true;\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserRotateApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div class=\"tabbed-nav d-flex flex-column\">\n  <ul class=\"nav nav-tabs\">\n    <ng-container *ngIf=\"showChangePassword\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"change-password\" routerLinkActive=\"active\">\n          {{ \"masterPassword\" | i18n }}\n        </a>\n      </li>\n    </ng-container>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"two-factor\" routerLinkActive=\"active\">\n        {{ \"twoStepLogin\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"security-keys\" routerLinkActive=\"active\">\n        {{ \"keys\" | i18n }}\n      </a>\n    </li>\n  </ul>\n</div>\n<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\n\n@Component({\n  selector: \"app-security\",\n  templateUrl: \"security.component.html\",\n})\nexport class SecurityComponent {\n  showChangePassword = true;\n\n  constructor(private keyConnectorService: KeyConnectorService) {}\n\n  async ngOnInit() {\n    this.showChangePassword = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { ChangePasswordComponent } from \"./change-password.component\";\nimport { SecurityKeysComponent } from \"./security-keys.component\";\nimport { SecurityComponent } from \"./security.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SecurityComponent,\n    data: { titleId: \"security\" },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"change-password\" },\n      {\n        path: \"change-password\",\n        component: ChangePasswordComponent,\n        data: { titleId: \"masterPassword\" },\n      },\n      {\n        path: \"two-factor\",\n        component: TwoFactorSetupComponent,\n        data: { titleId: \"twoStepLogin\" },\n      },\n      {\n        path: \"security-keys\",\n        component: SecurityKeysComponent,\n        data: { titleId: \"keys\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SecurityRoutingModule {}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"accountSettings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myAccount\" | i18n }}\n          </a>\n          <a routerLink=\"security\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"security\" | i18n }}\n          </a>\n          <a routerLink=\"preferences\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"preferences\" | i18n }}\n          </a>\n          <a\n            routerLink=\"subscription\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"!hideSubscription\"\n          >\n            {{ \"subscription\" | i18n }}\n          </a>\n          <a routerLink=\"domain-rules\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"domainRules\" | i18n }}\n          </a>\n          <a routerLink=\"emergency-access\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"emergencyAccess\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sponsored-families\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"hasFamilySponsorshipAvailable\"\n          >\n            {{ \"sponsoredFamilies\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\nimport { StateService } from \"../core\";\n\nconst BroadcasterSubscriptionId = \"SettingsComponent\";\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  premium: boolean;\n  selfHosted: boolean;\n  hasFamilySponsorshipAvailable: boolean;\n  hideSubscription: boolean;\n\n  constructor(\n    private tokenService: TokenService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  async ngOnInit() {\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"purchasedPremium\":\n            await this.load();\n            break;\n          default:\n        }\n      });\n    });\n\n    this.selfHosted = await this.platformUtilsService.isSelfHost();\n    await this.load();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    this.premium = await this.stateService.getHasPremiumPersonally();\n    this.hasFamilySponsorshipAvailable = await this.organizationService.canManageSponsorships();\n    const hasPremiumFromOrg = await this.stateService.getHasPremiumFromOrganization();\n    let billing = null;\n    if (!this.selfHosted) {\n      billing = await this.apiService.getUserBillingHistory();\n    }\n    this.hideSubscription =\n      !this.premium && hasPremiumFromOrg && (this.selfHosted || billing?.hasNoHistory);\n  }\n}\n","import { AbstractControl, AsyncValidatorFn, ValidationErrors } from \"@angular/forms\";\n\nexport function notAllowedValueAsync(\n  valueGetter: () => Promise<string>,\n  caseInsensitive = false\n): AsyncValidatorFn {\n  return async (control: AbstractControl): Promise<ValidationErrors | null> => {\n    let notAllowedValue = await valueGetter();\n    let controlValue = control.value;\n    if (caseInsensitive) {\n      notAllowedValue = notAllowedValue.toLowerCase();\n      controlValue = controlValue.toLowerCase();\n    }\n\n    if (controlValue === notAllowedValue) {\n      return {\n        notAllowedValue: true,\n      };\n    }\n  };\n}\n","<td>\n  {{ sponsoringOrg.familySponsorshipFriendlyName }}\n</td>\n<td>{{ sponsoringOrg.name }}</td>\n<td>\n  <span [ngClass]=\"statusClass\">{{ statusMessage }}</span>\n</td>\n<td class=\"table-action-right\">\n  <div class=\"dropdown\" appListDropdown>\n    <button\n      *ngIf=\"!sponsoringOrg.familySponsorshipToDelete\"\n      class=\"btn btn-outline-secondary dropdown-toggle\"\n      type=\"button\"\n      id=\"dropdownMenuButton\"\n      data-toggle=\"dropdown\"\n      aria-haspopup=\"true\"\n      aria-expanded=\"false\"\n      appA11yTitle=\"{{ 'options' | i18n }}\"\n    >\n      <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n    </button>\n    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n      <button\n        #resendEmailBtn\n        *ngIf=\"!isSelfHosted && !sponsoringOrg.familySponsorshipValidUntil\"\n        [appApiAction]=\"resendEmailPromise\"\n        class=\"dropdown-item btn-submit\"\n        [disabled]=\"resendEmailBtn.loading\"\n        (click)=\"resendEmail()\"\n        [attr.aria-label]=\"'resendEmailLabel' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"resendEmail\" | i18n }}</span>\n      </button>\n      <button\n        #revokeSponsorshipBtn\n        [appApiAction]=\"revokeSponsorshipPromise\"\n        class=\"dropdown-item text-danger btn-submit\"\n        [disabled]=\"revokeSponsorshipBtn.loading\"\n        (click)=\"revokeSponsorship()\"\n        [attr.aria-label]=\"'revokeAccount' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"remove\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</td>\n","import { formatDate } from \"@angular/common\";\nimport { Component, EventEmitter, Input, Output, OnInit } from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"[sponsoring-org-row]\",\n  templateUrl: \"sponsoring-org-row.component.html\",\n})\nexport class SponsoringOrgRowComponent implements OnInit {\n  @Input() sponsoringOrg: Organization = null;\n  @Input() isSelfHosted = false;\n\n  @Output() sponsorshipRemoved = new EventEmitter();\n\n  statusMessage = \"loading\";\n  statusClass: \"text-success\" | \"text-danger\" = \"text-success\";\n\n  revokeSponsorshipPromise: Promise<any>;\n  resendEmailPromise: Promise<any>;\n\n  private locale = \"\";\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private logService: LogService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    this.locale = await firstValueFrom(this.i18nService.locale$);\n\n    this.setStatus(\n      this.isSelfHosted,\n      this.sponsoringOrg.familySponsorshipToDelete,\n      this.sponsoringOrg.familySponsorshipValidUntil,\n      this.sponsoringOrg.familySponsorshipLastSyncDate\n    );\n  }\n\n  async revokeSponsorship() {\n    try {\n      this.revokeSponsorshipPromise = this.doRevokeSponsorship();\n      await this.revokeSponsorshipPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.revokeSponsorshipPromise = null;\n  }\n\n  async resendEmail() {\n    this.resendEmailPromise = this.apiService.postResendSponsorshipOffer(this.sponsoringOrg.id);\n    await this.resendEmailPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailSent\"));\n    this.resendEmailPromise = null;\n  }\n\n  get isSentAwaitingSync() {\n    return this.isSelfHosted && !this.sponsoringOrg.familySponsorshipLastSyncDate;\n  }\n\n  private async doRevokeSponsorship() {\n    const isConfirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"revokeSponsorshipConfirmation\"),\n      `${this.i18nService.t(\"remove\")} ${this.sponsoringOrg.familySponsorshipFriendlyName}?`,\n      this.i18nService.t(\"remove\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!isConfirmed) {\n      return;\n    }\n\n    await this.apiService.deleteRevokeSponsorship(this.sponsoringOrg.id);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reclaimedFreePlan\"));\n    this.sponsorshipRemoved.emit();\n  }\n\n  private setStatus(\n    selfHosted: boolean,\n    toDelete?: boolean,\n    validUntil?: Date,\n    lastSyncDate?: Date\n  ) {\n    /*\n     * Possible Statuses:\n     * Requested (self-hosted only)\n     * Sent\n     * Active\n     * RequestRevoke\n     * RevokeWhenExpired\n     */\n\n    if (toDelete && validUntil) {\n      // They want to delete but there is a valid until date which means there is an active sponsorship\n      this.statusMessage = this.i18nService.t(\n        \"revokeWhenExpired\",\n        formatDate(validUntil, \"MM/dd/yyyy\", this.locale)\n      );\n      this.statusClass = \"text-danger\";\n    } else if (toDelete) {\n      // They want to delete and we don't have a valid until date so we can\n      // this should only happen on a self-hosted install\n      this.statusMessage = this.i18nService.t(\"requestRemoved\");\n      this.statusClass = \"text-danger\";\n    } else if (validUntil) {\n      // They don't want to delete and they have a valid until date\n      // that means they are actively sponsoring someone\n      this.statusMessage = this.i18nService.t(\"active\");\n      this.statusClass = \"text-success\";\n    } else if (selfHosted && lastSyncDate) {\n      // We are on a self-hosted install and it has been synced but we have not gotten\n      // a valid until date so we can't know if they are actively sponsoring someone\n      this.statusMessage = this.i18nService.t(\"sent\");\n      this.statusClass = \"text-success\";\n    } else if (!selfHosted) {\n      // We are in cloud and all other status checks have been false therefore we have\n      // sent the request but it hasn't been accepted yet\n      this.statusMessage = this.i18nService.t(\"sent\");\n      this.statusClass = \"text-success\";\n    } else {\n      // We are on a self-hosted install and we have not synced yet\n      this.statusMessage = this.i18nService.t(\"requested\");\n      this.statusClass = \"text-success\";\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"sponsoredFamilies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"!loading\">\n  <p>\n    {{ \"sponsoredFamiliesEligible\" | i18n }}\n  </p>\n  <div>\n    {{ \"sponsoredFamiliesInclude\" | i18n }}:\n    <ul class=\"inset-list\">\n      <li>{{ \"sponsoredFamiliesPremiumAccess\" | i18n }}</li>\n      <li>{{ \"sponsoredFamiliesSharedCollections\" | i18n }}</li>\n    </ul>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    [formGroup]=\"sponsorshipForm\"\n    ngNativeValidate\n    *ngIf=\"anyOrgsAvailable$ | async\"\n  >\n    <div class=\"form-group col-7\">\n      <label for=\"availableSponsorshipOrg\">{{ \"familiesSponsoringOrgSelect\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        formControlName=\"selectedSponsorshipOrgId\"\n        class=\"form-control\"\n        required\n      >\n        <option disabled=\"true\" value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option *ngFor=\"let o of availableSponsorshipOrgs$ | async\" [ngValue]=\"o.id\">\n          {{ o.name }}\n        </option>\n      </select>\n    </div>\n    <div class=\"form-group col-7\">\n      <label for=\"sponsorshipEmail\">{{ \"sponsoredFamiliesEmail\" | i18n }}:</label>\n      <input\n        id=\"sponsorshipEmail\"\n        class=\"form-control\"\n        inputmode=\"email\"\n        formControlName=\"sponsorshipEmail\"\n        name=\"sponsorshipEmail\"\n        required\n        [attr.aria-invalid]=\"sponsorshipEmailControl.invalid\"\n      />\n      <small\n        aria-errormessage=\"sponsorshipEmail\"\n        *ngIf=\"sponsorshipEmailControl.errors?.notAllowedValue\"\n        class=\"error-inline\"\n        role=\"alert\"\n      >\n        <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i>\n        {{ \"cannotSponsorSelf\" | i18n }}\n      </small>\n      <small\n        aria-errormessage=\"sponsorshipEmail\"\n        *ngIf=\"sponsorshipEmailControl.errors?.email\"\n        class=\"error-inline\"\n        role=\"alert\"\n      >\n        <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i>\n        {{ \"invalidEmail\" | i18n }}\n      </small>\n    </div>\n    <div class=\"form-group col-7\">\n      <button class=\"btn btn-primary btn-submit mt-2\" type=\"submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"redeem\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n  <ng-container *ngIf=\"anyActiveSponsorships$ | async\">\n    <div class=\"border-bottom\">\n      <table class=\"table table-hover table-list\">\n        <thead>\n          <tr>\n            <th>{{ \"recipient\" | i18n }}</th>\n            <th>{{ \"sponsoringOrg\" | i18n }}</th>\n            <th>{{ \"status\" | i18n }}</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <ng-container *ngFor=\"let o of activeSponsorshipOrgs$ | async\">\n            <tr\n              sponsoring-org-row\n              [sponsoringOrg]=\"o\"\n              [isSelfHosted]=\"isSelfHosted\"\n              (sponsorshipRemoved)=\"forceReload()\"\n            ></tr>\n          </ng-container>\n        </tbody>\n      </table>\n    </div>\n    <small>{{ \"sponsoredFamiliesLeaveCopy\" | i18n }}</small>\n  </ng-container>\n</ng-container>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { map, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport { notAllowedValueAsync } from \"@bitwarden/angular/validators/notAllowedValueAsync.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PlanSponsorshipType } from \"@bitwarden/common/enums/planSponsorshipType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\ninterface RequestSponsorshipForm {\n  selectedSponsorshipOrgId: FormControl<string>;\n  sponsorshipEmail: FormControl<string>;\n}\n\n@Component({\n  selector: \"app-sponsored-families\",\n  templateUrl: \"sponsored-families.component.html\",\n})\nexport class SponsoredFamiliesComponent implements OnInit, OnDestroy {\n  loading = false;\n\n  availableSponsorshipOrgs$: Observable<Organization[]>;\n  activeSponsorshipOrgs$: Observable<Organization[]>;\n  anyOrgsAvailable$: Observable<boolean>;\n  anyActiveSponsorships$: Observable<boolean>;\n\n  // Conditional display properties\n  formPromise: Promise<void>;\n\n  sponsorshipForm: FormGroup<RequestSponsorshipForm>;\n\n  private _destroy = new Subject<void>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService,\n    private formBuilder: FormBuilder,\n    private stateService: StateService\n  ) {\n    this.sponsorshipForm = this.formBuilder.group<RequestSponsorshipForm>({\n      selectedSponsorshipOrgId: new FormControl(\"\", {\n        validators: [Validators.required],\n      }),\n      sponsorshipEmail: new FormControl(\"\", {\n        validators: [Validators.email],\n        asyncValidators: [\n          notAllowedValueAsync(async () => await this.stateService.getEmail(), true),\n        ],\n        updateOn: \"blur\",\n      }),\n    });\n  }\n\n  async ngOnInit() {\n    this.availableSponsorshipOrgs$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter((o) => o.familySponsorshipAvailable))\n    );\n\n    this.availableSponsorshipOrgs$.pipe(takeUntil(this._destroy)).subscribe((orgs) => {\n      if (orgs.length === 1) {\n        this.sponsorshipForm.patchValue({\n          selectedSponsorshipOrgId: orgs[0].id,\n        });\n      }\n    });\n\n    this.anyOrgsAvailable$ = this.availableSponsorshipOrgs$.pipe(map((orgs) => orgs.length > 0));\n\n    this.activeSponsorshipOrgs$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter((o) => o.familySponsorshipFriendlyName !== null))\n    );\n\n    this.anyActiveSponsorships$ = this.activeSponsorshipOrgs$.pipe(map((orgs) => orgs.length > 0));\n\n    this.loading = false;\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  async submit() {\n    this.formPromise = this.apiService.postCreateSponsorship(\n      this.sponsorshipForm.value.selectedSponsorshipOrgId,\n      {\n        sponsoredEmail: this.sponsorshipForm.value.sponsorshipEmail,\n        planSponsorshipType: PlanSponsorshipType.FamiliesForEnterprise,\n        friendlyName: this.sponsorshipForm.value.sponsorshipEmail,\n      }\n    );\n\n    await this.formPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"sponsorshipCreated\"));\n    this.formPromise = null;\n    this.resetForm();\n    await this.forceReload();\n  }\n\n  async forceReload() {\n    this.loading = true;\n    await this.syncService.fullSync(true);\n    this.loading = false;\n  }\n\n  get sponsorshipEmailControl() {\n    return this.sponsorshipForm.controls.sponsorshipEmail;\n  }\n\n  private async resetForm() {\n    this.sponsorshipForm.reset();\n  }\n\n  get isSelfHosted(): boolean {\n    return this.platformUtilsService.isSelfHost();\n  }\n}\n","<div class=\"tabbed-header d-flex\">\n  <h1>\n    {{ \"paymentMethod\" | i18n }}\n  </h1>\n  <button\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    class=\"tw-ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ (isCreditBalance ? \"accountCredit\" : \"accountBalance\") | i18n }}</h2>\n  <p class=\"text-lg\">\n    <strong>{{ creditOrBalance | currency: \"$\" }}</strong>\n  </p>\n  <p>{{ \"creditAppliedDesc\" | i18n }}</p>\n  <button bitButton buttonType=\"secondary\" (click)=\"addCredit()\" *ngIf=\"!showAddCredit\">\n    {{ \"addCredit\" | i18n }}\n  </button>\n  <app-add-credit\n    (onAdded)=\"closeAddCredit(true)\"\n    (onCanceled)=\"closeAddCredit(false)\"\n    *ngIf=\"showAddCredit\"\n  >\n  </app-add-credit>\n  <h2 class=\"spaced-header\">{{ \"paymentMethod\" | i18n }}</h2>\n  <p *ngIf=\"!paymentSource\">{{ \"noPaymentMethod\" | i18n }}</p>\n  <ng-container *ngIf=\"paymentSource\">\n    <p>\n      <i\n        class=\"bwi bwi-fw\"\n        [ngClass]=\"{\n          'bwi-credit-card': paymentSource.type === paymentMethodType.Card,\n          'bwi-bank': paymentSource.type === paymentMethodType.BankAccount,\n          'bwi-money': paymentSource.type === paymentMethodType.Check,\n          'bwi-paypal text-primary': paymentSource.type === paymentMethodType.PayPal,\n          'bwi-apple text-muted': paymentSource.type === paymentMethodType.AppleInApp,\n          'bwi-google text-muted': paymentSource.type === paymentMethodType.GoogleInApp\n        }\"\n      ></i>\n      <span *ngIf=\"paymentSourceInApp\">{{ \"inAppPurchase\" | i18n }}</span>\n      {{ paymentSource.description }}\n    </p>\n  </ng-container>\n  <button bitButton buttonType=\"secondary\" (click)=\"changePayment()\" *ngIf=\"!showAdjustPayment\">\n    {{ (paymentSource ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n  </button>\n  <app-adjust-payment\n    [currentType]=\"paymentSource != null ? paymentSource.type : null\"\n    (onAdjusted)=\"closePayment(true)\"\n    (onCanceled)=\"closePayment(false)\"\n    *ngIf=\"showAdjustPayment\"\n  >\n  </app-adjust-payment>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { BillingPaymentResponse } from \"@bitwarden/common/models/response/billing-payment.response\";\n\n@Component({\n  selector: \"app-payment-method\",\n  templateUrl: \"payment-method.component.html\",\n})\nexport class PaymentMethodComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  showAdjustPayment = false;\n  showAddCredit = false;\n  billing: BillingPaymentResponse;\n  paymentMethodType = PaymentMethodType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    if (this.platformUtilsService.isSelfHost()) {\n      this.router.navigate([\"/settings/subscription\"]);\n    }\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    this.billing = await this.apiService.getUserBillingPayment();\n    this.loading = false;\n  }\n\n  addCredit() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"addCredit\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAddCredit = true;\n  }\n\n  closeAddCredit(load: boolean) {\n    this.showAddCredit = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  changePayment() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"changePaymentMethod\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAdjustPayment = true;\n  }\n\n  closePayment(load: boolean) {\n    this.showAdjustPayment = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get isCreditBalance() {\n    return this.billing == null || this.billing.balance <= 0;\n  }\n\n  get creditOrBalance() {\n    return Math.abs(this.billing != null ? this.billing.balance : 0);\n  }\n\n  get paymentSource() {\n    return this.billing != null ? this.billing.paymentSource : null;\n  }\n\n  get paymentSourceInApp() {\n    return (\n      this.paymentSource != null &&\n      (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n        this.paymentSource.type === PaymentMethodType.GoogleInApp)\n    );\n  }\n}\n","<div *ngIf=\"selfHosted\" class=\"page-header\">\n  <h1>{{ \"subscription\" | i18n }}</h1>\n</div>\n<div *ngIf=\"!selfHosted\" class=\"tabbed-header\">\n  <h1>{{ \"goPremium\" | i18n }}</h1>\n</div>\n<bit-callout\n  type=\"info\"\n  *ngIf=\"canAccessPremium\"\n  title=\"{{ 'youHavePremiumAccess' | i18n }}\"\n  icon=\"bwi bwi-star-f\"\n>\n  {{ \"alreadyPremiumFromOrg\" | i18n }}\n</bit-callout>\n<bit-callout type=\"success\">\n  <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n  <ul class=\"bwi-ul\">\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpStorage\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTwoStep\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpEmergency\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpReports\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTotp\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpSupport\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpFuture\" | i18n }}\n    </li>\n  </ul>\n  <p class=\"text-lg\" [ngClass]=\"{ 'mb-0': !selfHosted }\">\n    {{ \"premiumPrice\" | i18n: (premiumPrice | currency: \"$\") }}\n  </p>\n  <a\n    bitButton\n    href=\"https://vault.bitwarden.com/#/settings/premium\"\n    target=\"_blank\"\n    rel=\"noopener\"\n    buttonType=\"secondary\"\n    *ngIf=\"selfHosted\"\n  >\n    {{ \"purchasePremium\" | i18n }}\n  </a>\n</bit-callout>\n<ng-container *ngIf=\"selfHosted\">\n  <p>{{ \"uploadLicenseFilePremium\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_premium_license.json\"\n      }}</small>\n    </div>\n    <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n      {{ \"submit\" | i18n }}\n    </button>\n  </form>\n</ng-container>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!selfHosted\">\n  <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n      <input\n        id=\"additionalStorage\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"AdditionalStorageGb\"\n        [(ngModel)]=\"additionalStorage\"\n        min=\"0\"\n        max=\"99\"\n        step=\"1\"\n        placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n      />\n      <small class=\"text-muted form-text\">{{\n        \"additionalStorageIntervalDesc\"\n          | i18n: \"1 GB\":(storageGbPrice | currency: \"$\"):(\"year\" | i18n)\n      }}</small>\n    </div>\n  </div>\n  <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n  {{ \"premiumMembership\" | i18n }}: {{ premiumPrice | currency: \"$\" }} <br />\n  {{ \"additionalStorageGb\" | i18n }}: {{ additionalStorage || 0 }} GB &times;\n  {{ storageGbPrice | currency: \"$\" }} =\n  {{ additionalStorageTotal | currency: \"$\" }}\n  <hr class=\"my-3\" />\n  <h2 class=\"spaced-header mb-4\">{{ \"paymentInformation\" | i18n }}</h2>\n  <app-payment [hideBank]=\"true\"></app-payment>\n  <app-tax-info></app-tax-info>\n  <div id=\"price\" class=\"my-4\">\n    <div class=\"text-muted text-sm\">\n      {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n      <br />\n      <ng-container>\n        {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n      </ng-container>\n    </div>\n    <hr class=\"my-1 col-3 ml-0\" />\n    <p class=\"text-lg\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{ \"year\" | i18n }}\n    </p>\n  </div>\n  <small class=\"text-muted font-italic\">{{ \"paymentChargedAnnually\" | i18n }}</small>\n  <button type=\"submit\" bitButton [loading]=\"form.loading\">\n    {{ \"submit\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-premium\",\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent implements OnInit {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxInfoComponent: TaxInfoComponent;\n\n  canAccessPremium = false;\n  selfHosted = false;\n  premiumPrice = 10;\n  storageGbPrice = 4;\n  additionalStorage = 0;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const premiumPersonally = await this.stateService.getHasPremiumPersonally();\n    if (premiumPersonally) {\n      this.router.navigate([\"/settings/subscription/user-subscription\"]);\n      return;\n    }\n  }\n\n  async submit() {\n    let files: FileList = null;\n    if (this.selfHosted) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n    }\n\n    try {\n      if (this.selfHosted) {\n        if (!this.tokenService.getEmailVerified()) {\n          this.platformUtilsService.showToast(\n            \"error\",\n            this.i18nService.t(\"errorOccurred\"),\n            this.i18nService.t(\"verifyEmailFirst\")\n          );\n          return;\n        }\n\n        const fd = new FormData();\n        fd.append(\"license\", files[0]);\n        this.formPromise = this.apiService.postAccountLicense(fd).then(() => {\n          return this.finalizePremium();\n        });\n      } else {\n        this.formPromise = this.paymentComponent\n          .createPaymentToken()\n          .then((result) => {\n            const fd = new FormData();\n            fd.append(\"paymentMethodType\", result[1].toString());\n            if (result[0] != null) {\n              fd.append(\"paymentToken\", result[0]);\n            }\n            fd.append(\"additionalStorageGb\", (this.additionalStorage || 0).toString());\n            fd.append(\"country\", this.taxInfoComponent.taxInfo.country);\n            fd.append(\"postalCode\", this.taxInfoComponent.taxInfo.postalCode);\n            return this.apiService.postPremium(fd);\n          })\n          .then((paymentResponse) => {\n            if (!paymentResponse.success && paymentResponse.paymentIntentClientSecret != null) {\n              return this.paymentComponent.handleStripeCardPayment(\n                paymentResponse.paymentIntentClientSecret,\n                () => this.finalizePremium()\n              );\n            } else {\n              return this.finalizePremium();\n            }\n          });\n      }\n      await this.formPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async finalizePremium() {\n    await this.apiService.refreshIdentityToken();\n    await this.syncService.fullSync(true);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"premiumUpdated\"));\n    this.messagingService.send(\"purchasedPremium\");\n    this.router.navigate([\"/settings/subscription/user-subscription\"]);\n  }\n\n  get additionalStorageTotal(): number {\n    return this.storageGbPrice * Math.abs(this.additionalStorage || 0);\n  }\n\n  get subtotal(): number {\n    return this.premiumPrice + this.additionalStorageTotal;\n  }\n\n  get taxCharges(): number {\n    return this.taxInfoComponent != null && this.taxInfoComponent.taxRate != null\n      ? (this.taxInfoComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total(): number {\n    return this.subtotal + this.taxCharges || 0;\n  }\n}\n","<div class=\"tabbed-nav d-flex flex-column\" *ngIf=\"!selfHosted\">\n  <ul class=\"nav nav-tabs\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [routerLink]=\"subscriptionRoute\" routerLinkActive=\"active\">\n        {{ \"subscription\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"payment-method\" routerLinkActive=\"active\">\n        {{ \"paymentMethod\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"billing-history\" routerLinkActive=\"active\">\n        {{ \"billingHistory\" | i18n }}\n      </a>\n    </li>\n  </ul>\n</div>\n<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-subscription\",\n  templateUrl: \"subscription.component.html\",\n})\nexport class SubscriptionComponent {\n  hasPremium: boolean;\n  selfHosted: boolean;\n\n  constructor(\n    private stateService: StateService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    this.hasPremium = await this.stateService.getHasPremiumPersonally();\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  get subscriptionRoute(): string {\n    return this.hasPremium ? \"user-subscription\" : \"premium\";\n  }\n}\n","<div class=\"tabbed-header d-flex\">\n  <h1>\n    {{ \"billingHistory\" | i18n }}\n  </h1>\n  <button\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    class=\"tw-ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ \"invoices\" | i18n }}</h2>\n  <p *ngIf=\"!invoices || !invoices.length\">{{ \"noInvoices\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\">\n    <tbody>\n      <tr *ngFor=\"let i of invoices\">\n        <td>{{ i.date | date: \"mediumDate\" }}</td>\n        <td>\n          <a\n            href=\"{{ i.pdfUrl }}\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            class=\"mr-2\"\n            appA11yTitle=\"{{ 'downloadInvoice' | i18n }}\"\n          >\n            <i class=\"bwi bwi-file-pdf\" aria-hidden=\"true\"></i\n          ></a>\n          <a href=\"{{ i.url }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ 'viewInvoice' | i18n }}\">\n            {{ \"invoiceNumber\" | i18n: i.number }}</a\n          >\n        </td>\n        <td>{{ i.amount | currency: \"$\" }}</td>\n        <td>\n          <span *ngIf=\"i.paid\">\n            <i class=\"bwi bwi-check text-success\" aria-hidden=\"true\"></i>\n            {{ \"paid\" | i18n }}\n          </span>\n          <span *ngIf=\"!i.paid\">\n            <i class=\"bwi bwi-exclamation-circle text-muted\" aria-hidden=\"true\"></i>\n            {{ \"unpaid\" | i18n }}\n          </span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <h2 class=\"spaced-header\">{{ \"transactions\" | i18n }}</h2>\n  <p *ngIf=\"!transactions || !transactions.length\">{{ \"noTransactions\" | i18n }}</p>\n  <table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\">\n    <tbody>\n      <tr *ngFor=\"let t of transactions\">\n        <td>{{ t.createdDate | date: \"mediumDate\" }}</td>\n        <td>\n          <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n            {{ \"chargeNoun\" | i18n }}\n          </span>\n          <span *ngIf=\"t.type === transactionType.Refund\">{{ \"refundNoun\" | i18n }}</span>\n        </td>\n        <td>\n          <i\n            class=\"bwi bwi-fw\"\n            *ngIf=\"t.paymentMethodType\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-credit-card': t.paymentMethodType === paymentMethodType.Card,\n              'bwi-bank':\n                t.paymentMethodType === paymentMethodType.BankAccount ||\n                t.paymentMethodType === paymentMethodType.WireTransfer,\n              'bwi-bitcoin text-warning': t.paymentMethodType === paymentMethodType.BitPay,\n              'bwi-paypal text-primary': t.paymentMethodType === paymentMethodType.PayPal\n            }\"\n          ></i>\n          {{ t.details }}\n        </td>\n        <td\n          [ngClass]=\"{ 'text-strike': t.refunded }\"\n          title=\"{{ (t.refunded ? 'refunded' : '') | i18n }}\"\n        >\n          {{ t.amount | currency: \"$\" }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <small class=\"text-muted\">* {{ \"chargesStatement\" | i18n: \"BITWARDEN\" }}</small>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { TransactionType } from \"@bitwarden/common/enums/transactionType\";\nimport { BillingHistoryResponse } from \"@bitwarden/common/models/response/billing-history.response\";\n\n@Component({\n  selector: \"app-user-billing\",\n  templateUrl: \"user-billing-history.component.html\",\n})\nexport class UserBillingHistoryComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  billing: BillingHistoryResponse;\n  paymentMethodType = PaymentMethodType;\n  transactionType = TransactionType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    if (this.platformUtilsService.isSelfHost()) {\n      this.router.navigate([\"/settings/subscription\"]);\n    }\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    this.billing = await this.apiService.getUserBillingHistory();\n    this.loading = false;\n  }\n\n  get invoices() {\n    return this.billing != null ? this.billing.invoices : null;\n  }\n\n  get transactions() {\n    return this.billing != null ? this.billing.transactions : null;\n  }\n}\n","<div\n  [ngClass]=\"{\n    'page-header': selfHosted,\n    'tabbed-header': !selfHosted\n  }\"\n>\n  <h1>\n    {{ title }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"sub\">\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</bit-callout\n  >\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button\n      bitButton\n      type=\"button\"\n      buttonType=\"secondary\"\n      #reinstateBtn\n      class=\"btn-submit\"\n      (click)=\"reinstate()\"\n      [appApiAction]=\"reinstatePromise\"\n      [disabled]=\"reinstateBtn.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"reinstateSubscription\" | i18n }}</span>\n    </button>\n  </bit-callout>\n  <dl *ngIf=\"selfHosted\">\n    <dt>{{ \"expiration\" | i18n }}</dt>\n    <dd *ngIf=\"sub.expiration\">{{ sub.expiration | date: \"mediumDate\" }}</dd>\n    <dd *ngIf=\"!sub.expiration\">{{ \"neverExpires\" | i18n }}</dd>\n  </dl>\n  <div class=\"row\" *ngIf=\"!selfHosted\">\n    <div class=\"col-4\">\n      <dl>\n        <dt>{{ \"status\" | i18n }}</dt>\n        <dd>\n          <span class=\"text-capitalize\">{{ (subscription && subscription.status) || \"-\" }}</span>\n          <span bitBadge badgeType=\"warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n            \"pendingCancellation\" | i18n\n          }}</span>\n        </dd>\n        <dt>{{ \"nextCharge\" | i18n }}</dt>\n        <dd>\n          {{\n            nextInvoice\n              ? (nextInvoice.date | date: \"mediumDate\") +\n                \", \" +\n                (nextInvoice.amount | currency: \"$\")\n              : \"-\"\n          }}\n        </dd>\n      </dl>\n    </div>\n    <div class=\"col-8\" *ngIf=\"subscription\">\n      <strong class=\"d-block mb-1\">{{ \"details\" | i18n }}</strong>\n      <table class=\"table\">\n        <tbody>\n          <tr *ngFor=\"let i of subscription.items\">\n            <td>\n              {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} @\n              {{ i.amount | currency: \"$\" }}\n            </td>\n            <td>{{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <ng-container *ngIf=\"selfHosted\">\n    <div>\n      <button type=\"button\" bitButton buttonType=\"secondary\" (click)=\"updateLicense()\">\n        {{ \"updateLicense\" | i18n }}\n      </button>\n      <a\n        bitButton\n        buttonType=\"secondary\"\n        href=\"https://vault.bitwarden.com/#/settings/subscription\"\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        {{ \"manageSubscription\" | i18n }}\n      </a>\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n      <div class=\"card-body\">\n        <button\n          type=\"button\"\n          class=\"close\"\n          appA11yTitle=\"{{ 'cancel' | i18n }}\"\n          (click)=\"closeUpdateLicense(false)\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h3 class=\"card-body-header\">{{ \"updateLicense\" | i18n }}</h3>\n        <app-update-license\n          (onUpdated)=\"closeUpdateLicense(true)\"\n          (onCanceled)=\"closeUpdateLicense(false)\"\n        >\n        </app-update-license>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"!selfHosted\">\n    <div class=\"d-flex\">\n      <button\n        bitButton\n        type=\"button\"\n        buttonType=\"secondary\"\n        (click)=\"downloadLicense()\"\n        *ngIf=\"!subscription || !subscription.cancelled\"\n      >\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        bitButton\n        #cancelBtn\n        type=\"button\"\n        buttonType=\"danger\"\n        class=\"btn-submit tw-ml-auto\"\n        (click)=\"cancel()\"\n        [appApiAction]=\"cancelPromise\"\n        [disabled]=\"cancelBtn.loading\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"cancelSubscription\" | i18n }}</span>\n      </button>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"storage\" | i18n }}</h2>\n    <p>{{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0:sub.storageName || \"0 MB\" }}</p>\n    <div class=\"progress\">\n      <div\n        class=\"progress-bar bg-success\"\n        role=\"progressbar\"\n        [ngStyle]=\"{ width: storageProgressWidth + '%' }\"\n        [attr.aria-valuenow]=\"storagePercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        {{ storagePercentage / 100 | percent }}\n      </div>\n    </div>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"mt-3\">\n        <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n          <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button\n            bitButton\n            type=\"button\"\n            buttonType=\"secondary\"\n            class=\"tw-ml-1\"\n            (click)=\"adjustStorage(false)\"\n          >\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n        <app-adjust-storage\n          [storageGbPrice]=\"4\"\n          [add]=\"adjustStorageAdd\"\n          (onAdjusted)=\"closeStorage(true)\"\n          (onCanceled)=\"closeStorage(false)\"\n          *ngIf=\"showAdjustStorage\"\n        ></app-adjust-storage>\n      </div>\n    </ng-container>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SubscriptionResponse } from \"@bitwarden/common/models/response/subscription.response\";\n\n@Component({\n  selector: \"app-user-subscription\",\n  templateUrl: \"user-subscription.component.html\",\n})\nexport class UserSubscriptionComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  adjustStorageAdd = true;\n  showAdjustStorage = false;\n  showUpdateLicense = false;\n  sub: SubscriptionResponse;\n  selfHosted = false;\n\n  cancelPromise: Promise<any>;\n  reinstatePromise: Promise<any>;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private router: Router,\n    private logService: LogService,\n    private fileDownloadService: FileDownloadService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.stateService.getHasPremiumPersonally()) {\n      this.loading = true;\n      this.sub = await this.apiService.getUserSubscription();\n    } else {\n      this.router.navigate([\"/settings/subscription/premium\"]);\n      return;\n    }\n\n    this.loading = false;\n  }\n\n  async reinstate() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"reinstateConfirmation\"),\n      this.i18nService.t(\"reinstateSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.reinstatePromise = this.apiService.postReinstatePremium();\n      await this.reinstatePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reinstated\"));\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async cancel() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"cancelConfirmation\"),\n      this.i18nService.t(\"cancelSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.cancelPromise = this.apiService.postCancelPremium();\n      await this.cancelPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"canceledSubscription\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  downloadLicense() {\n    if (this.loading) {\n      return;\n    }\n\n    const licenseString = JSON.stringify(this.sub.license, null, 2);\n    this.fileDownloadService.download({\n      fileName: \"bitwarden_premium_license.json\",\n      blobData: licenseString,\n    });\n  }\n\n  updateLicense() {\n    if (this.loading) {\n      return;\n    }\n    this.showUpdateLicense = true;\n  }\n\n  closeUpdateLicense(load: boolean) {\n    this.showUpdateLicense = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  adjustStorage(add: boolean) {\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(add ? \"addStorage\" : \"removeStorage\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.adjustStorageAdd = add;\n    this.showAdjustStorage = true;\n  }\n\n  closeStorage(load: boolean) {\n    this.showAdjustStorage = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get storageProgressWidth() {\n    return this.storagePercentage < 5 ? 5 : 0;\n  }\n\n  get usingInAppPurchase() {\n    return this.sub != null ? this.sub.usingInAppPurchase : false;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.selfHosted ? \"subscription\" : \"premiumMembership\");\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { PaymentMethodComponent } from \"./payment-method.component\";\nimport { PremiumComponent } from \"./premium.component\";\nimport { SubscriptionComponent } from \"./subscription.component\";\nimport { UserBillingHistoryComponent } from \"./user-billing-history.component\";\nimport { UserSubscriptionComponent } from \"./user-subscription.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SubscriptionComponent,\n    data: { titleId: \"subscription\" },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"premium\" },\n      {\n        path: \"user-subscription\",\n        component: UserSubscriptionComponent,\n        data: { titleId: \"premiumMembership\" },\n      },\n      {\n        path: \"premium\",\n        component: PremiumComponent,\n        data: { titleId: \"goPremium\" },\n      },\n      {\n        path: \"payment-method\",\n        component: PaymentMethodComponent,\n        data: { titleId: \"paymentMethod\" },\n      },\n      {\n        path: \"billing-history\",\n        component: UserBillingHistoryComponent,\n        data: { titleId: \"billingHistory\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SubscriptionRoutingModule {}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { PasswordGeneratorPolicyOptions } from \"@bitwarden/common/models/domain/password-generator-policy-options\";\n\n@Directive()\nexport class GeneratorComponent implements OnInit {\n  @Input() comingFromAddEdit = false;\n  @Input() type: string;\n  @Output() onSelected = new EventEmitter<string>();\n\n  usernameGeneratingPromise: Promise<string>;\n  typeOptions: any[];\n  passTypeOptions: any[];\n  usernameTypeOptions: any[];\n  subaddressOptions: any[];\n  catchallOptions: any[];\n  forwardOptions: any[];\n  usernameOptions: any = {};\n  passwordOptions: any = {};\n  username = \"-\";\n  password = \"-\";\n  showOptions = false;\n  avoidAmbiguous = false;\n  enforcedPasswordPolicyOptions: PasswordGeneratorPolicyOptions;\n  usernameWebsite: string = null;\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected usernameGenerationService: UsernameGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected stateService: StateService,\n    protected i18nService: I18nService,\n    protected logService: LogService,\n    protected route: ActivatedRoute,\n    private win: Window\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"username\"), value: \"username\" },\n    ];\n    this.passTypeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n    this.usernameTypeOptions = [\n      {\n        name: i18nService.t(\"plusAddressedEmail\"),\n        value: \"subaddress\",\n        desc: i18nService.t(\"plusAddressedEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"catchallEmail\"),\n        value: \"catchall\",\n        desc: i18nService.t(\"catchallEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"forwardedEmail\"),\n        value: \"forwarded\",\n        desc: i18nService.t(\"forwardedEmailDesc\"),\n      },\n      { name: i18nService.t(\"randomWord\"), value: \"word\" },\n    ];\n    this.subaddressOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.catchallOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.forwardOptions = [\n      { name: \"SimpleLogin\", value: \"simplelogin\" },\n      { name: \"AnonAddy\", value: \"anonaddy\" },\n      { name: \"Firefox Relay\", value: \"firefoxrelay\" },\n      { name: \"Fastmail\", value: \"fastmail\" },\n      { name: \"DuckDuckGo\", value: \"duckduckgo\" },\n    ];\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const passwordOptionsResponse = await this.passwordGenerationService.getOptions();\n      this.passwordOptions = passwordOptionsResponse[0];\n      this.enforcedPasswordPolicyOptions = passwordOptionsResponse[1];\n      this.avoidAmbiguous = !this.passwordOptions.ambiguous;\n      this.passwordOptions.type =\n        this.passwordOptions.type === \"passphrase\" ? \"passphrase\" : \"password\";\n\n      this.usernameOptions = await this.usernameGenerationService.getOptions();\n      if (this.usernameOptions.type == null) {\n        this.usernameOptions.type = \"word\";\n      }\n      if (\n        this.usernameOptions.subaddressEmail == null ||\n        this.usernameOptions.subaddressEmail === \"\"\n      ) {\n        this.usernameOptions.subaddressEmail = await this.stateService.getEmail();\n      }\n      if (this.usernameWebsite == null) {\n        this.usernameOptions.subaddressType = this.usernameOptions.catchallType = \"random\";\n      } else {\n        this.usernameOptions.website = this.usernameWebsite;\n        const websiteOption = { name: this.i18nService.t(\"websiteName\"), value: \"website-name\" };\n        this.subaddressOptions.push(websiteOption);\n        this.catchallOptions.push(websiteOption);\n      }\n\n      if (this.type !== \"username\" && this.type !== \"password\") {\n        if (qParams.type === \"username\" || qParams.type === \"password\") {\n          this.type = qParams.type;\n        } else {\n          const generatorOptions = await this.stateService.getGeneratorOptions();\n          this.type = generatorOptions?.type ?? \"password\";\n        }\n      }\n      if (this.regenerateWithoutButtonPress()) {\n        await this.regenerate();\n      }\n    });\n  }\n\n  async typeChanged() {\n    await this.stateService.setGeneratorOptions({ type: this.type });\n    if (this.regenerateWithoutButtonPress()) {\n      await this.regenerate();\n    }\n  }\n\n  async regenerate() {\n    if (this.type === \"password\") {\n      await this.regeneratePassword();\n    } else if (this.type === \"username\") {\n      await this.regenerateUsername();\n    }\n  }\n\n  async sliderChanged() {\n    this.savePasswordOptions(false);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderInput() {\n    this.normalizePasswordOptions();\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n  }\n\n  async savePasswordOptions(regenerate = true) {\n    this.normalizePasswordOptions();\n    await this.passwordGenerationService.saveOptions(this.passwordOptions);\n\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regeneratePassword();\n    }\n  }\n\n  async saveUsernameOptions(regenerate = true) {\n    await this.usernameGenerationService.saveOptions(this.usernameOptions);\n    if (this.usernameOptions.type === \"forwarded\") {\n      this.username = \"-\";\n    }\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regenerateUsername();\n    }\n  }\n\n  async regeneratePassword() {\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  regenerateUsername() {\n    return this.generateUsername();\n  }\n\n  async generateUsername() {\n    try {\n      this.usernameGeneratingPromise = this.usernameGenerationService.generateUsername(\n        this.usernameOptions\n      );\n      this.username = await this.usernameGeneratingPromise;\n      if (this.username === \"\" || this.username === null) {\n        this.username = \"-\";\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  copy() {\n    const password = this.type === \"password\";\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(\n      password ? this.password : this.username,\n      copyOptions\n    );\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(password ? \"password\" : \"username\"))\n    );\n  }\n\n  select() {\n    this.onSelected.emit(this.type === \"password\" ? this.password : this.username);\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  regenerateWithoutButtonPress() {\n    return this.type !== \"username\" || this.usernameOptions.type !== \"forwarded\";\n  }\n\n  private normalizePasswordOptions() {\n    // Application level normalize options depedent on class variables\n    this.passwordOptions.ambiguous = !this.avoidAmbiguous;\n\n    if (\n      !this.passwordOptions.uppercase &&\n      !this.passwordOptions.lowercase &&\n      !this.passwordOptions.number &&\n      !this.passwordOptions.special\n    ) {\n      this.passwordOptions.lowercase = true;\n      if (this.win != null) {\n        const lowercase = this.win.document.querySelector(\"#lowercase\") as HTMLInputElement;\n        if (lowercase) {\n          lowercase.checked = true;\n        }\n      }\n    }\n\n    this.passwordGenerationService.normalizeOptions(\n      this.passwordOptions,\n      this.enforcedPasswordPolicyOptions\n    );\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { GeneratedPasswordHistory } from \"@bitwarden/common/models/domain/generated-password-history\";\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n  history: GeneratedPasswordHistory[] = [];\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    this.history = await this.passwordGenerationService.getHistory();\n  }\n\n  clear() {\n    this.history = [];\n    this.passwordGenerationService.clear();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appSelectCopy]\",\n})\nexport class SelectCopyDirective {\n  constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) {}\n\n  @HostListener(\"copy\") onCopy() {\n    if (window == null) {\n      return;\n    }\n    let copyText = \"\";\n    const selection = window.getSelection();\n    for (let i = 0; i < selection.rangeCount; i++) {\n      const range = selection.getRangeAt(i);\n      const text = range.toString();\n\n      // The selection should only contain one line of text. In some cases however, the\n      // selection contains newlines and space characters from the indentation of following\n      // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n      // that aren't part of the password, the selection has to be trimmed.\n      let stringEndPos = text.length;\n      const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n      if (newLinePos > -1) {\n        const otherPart = text.substr(newLinePos).trim();\n        if (otherPart === \"\") {\n          stringEndPos = newLinePos;\n        }\n      }\n      copyText += text.substring(0, stringEndPos);\n    }\n    this.platformUtilsService.copyToClipboard(copyText, { window: window });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n/*\n An updated pipe that sanitizes HTML, highlights numbers and special characters (in different colors each)\n and handles Unicode / Emoji characters correctly.\n*/\n@Pipe({ name: \"colorPassword\" })\nexport class ColorPasswordPipe implements PipeTransform {\n  transform(password: string) {\n    const template = (character: string, type: string) =>\n      `<span class=\"password-${type}\">${character}</span>`;\n    const colorizedPassword = this.generateTemplate(password, template);\n    return colorizedPassword;\n  }\n\n  protected generateTemplate(\n    password: string,\n    templateGenerator: (chararacter: string, type: string, index?: number) => string\n  ) {\n    // Convert to an array to handle cases that stings have special characters, ie: emoji.\n    const passwordArray = Array.from(password);\n    let colorizedPassword = \"\";\n    for (let i = 0; i < passwordArray.length; i++) {\n      let character = passwordArray[i];\n      let isSpecial = false;\n      // Sanitize HTML first.\n      switch (character) {\n        case \"&\":\n          character = \"&amp;\";\n          isSpecial = true;\n          break;\n        case \"<\":\n          character = \"&lt;\";\n          isSpecial = true;\n          break;\n        case \">\":\n          character = \"&gt;\";\n          isSpecial = true;\n          break;\n        case \" \":\n          character = \"&nbsp;\";\n          isSpecial = true;\n          break;\n        default:\n          break;\n      }\n      let type = \"letter\";\n      if (character.match(Utils.regexpEmojiPresentation)) {\n        type = \"emoji\";\n      } else if (isSpecial || character.match(/[^\\w ]/)) {\n        type = \"special\";\n      } else if (character.match(/\\d/)) {\n        type = \"number\";\n      }\n      colorizedPassword += templateGenerator(character, type, i);\n    }\n    return colorizedPassword;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"passHistoryTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"passHistoryTitle\">{{ \"passwordHistory\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"history.length\">\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item d-flex\" *ngFor=\"let h of history\">\n            <div class=\"password-row\">\n              <div\n                class=\"text-monospace generated-wrapper\"\n                [innerHTML]=\"h.password | colorPassword\"\n                appSelectCopy\n              ></div>\n              <small class=\"text-muted\">{{ h.date | date: \"medium\" }}</small>\n            </div>\n            <div class=\"ml-auto\">\n              <button\n                class=\"btn btn-link\"\n                appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                (click)=\"copy(h.password)\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!history.length\">\n        {{ \"noPasswordsInList\" | i18n }}\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            type=\"button\"\n            (click)=\"clear()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'clear' | i18n }}\"\n          >\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent } from \"@bitwarden/angular/components/password-generator-history.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-generator-history\",\n  templateUrl: \"password-generator-history.component.html\",\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"generator\" | i18n }}</h1>\n</div>\n<app-callout type=\"info\" *ngIf=\"enforcedPasswordPolicyOptions?.inEffect() && type === 'password'\">\n  {{ \"passwordGeneratorPolicyInEffect\" | i18n }}\n</app-callout>\n<div class=\"card card-generated bg-light my-4\">\n  <div class=\"card-body\">\n    <div\n      *ngIf=\"type === 'password'\"\n      class=\"generated-wrapper\"\n      [innerHTML]=\"password | colorPassword\"\n      appSelectCopy\n    ></div>\n    <div\n      *ngIf=\"type === 'username'\"\n      class=\"generated-wrapper\"\n      [innerHTML]=\"username | colorPassword\"\n      appSelectCopy\n    ></div>\n  </div>\n</div>\n<div class=\"form-group\" role=\"radiogroup\" aria-labelledby=\"typeHeading\">\n  <label id=\"typeHeading\" class=\"d-block\">{{ \"whatWouldYouLikeToGenerate\" | i18n }}</label>\n  <div class=\"form-check form-check-inline\" *ngFor=\"let o of typeOptions\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      [(ngModel)]=\"type\"\n      name=\"Type\"\n      id=\"type_{{ o.value }}\"\n      [value]=\"o.value\"\n      (change)=\"typeChanged()\"\n      [checked]=\"type === o.value\"\n    />\n    <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n      {{ o.name }}\n    </label>\n  </div>\n</div>\n<ng-container *ngIf=\"type === 'password'\">\n  <div aria-labelledby=\"passwordTypeHeading\" class=\"form-group\" role=\"radiogroup\">\n    <label id=\"passwordTypeHeading\" class=\"d-block\">{{ \"passwordType\" | i18n }}</label>\n    <div class=\"form-check form-check-inline\" *ngFor=\"let o of passTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"passwordOptions.type\"\n        name=\"PasswordType\"\n        id=\"passwordType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"savePasswordOptions()\"\n        [checked]=\"passwordOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"passwordType_{{ o.value }}\">\n        {{ o.name }}\n      </label>\n    </div>\n  </div>\n  <ng-container *ngIf=\"passwordOptions.type === 'passphrase'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"num-words\">{{ \"numWords\" | i18n }}</label>\n        <input\n          id=\"num-words\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"3\"\n          max=\"20\"\n          [(ngModel)]=\"passwordOptions.numWords\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"word-separator\">{{ \"wordSeparator\" | i18n }}</label>\n        <input\n          id=\"word-separator\"\n          class=\"form-control\"\n          type=\"text\"\n          maxlength=\"1\"\n          [(ngModel)]=\"passwordOptions.wordSeparator\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"capitalize\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.capitalize\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.capitalize\"\n        />\n        <label for=\"capitalize\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"include-number\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.includeNumber\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.includeNumber\"\n        />\n        <label for=\"include-number\" class=\"form-check-label\">{{ \"includeNumber\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"passwordOptions.type === 'password'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"length\">{{ \"length\" | i18n }}</label>\n        <input\n          id=\"length\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"5\"\n          max=\"128\"\n          [(ngModel)]=\"passwordOptions.length\"\n          (blur)=\"savePasswordOptions()\"\n          (change)=\"lengthChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-number\">{{ \"minNumbers\" | i18n }}</label>\n        <input\n          id=\"min-number\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minNumber\"\n          (change)=\"minNumberChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-special\">{{ \"minSpecial\" | i18n }}</label>\n        <input\n          id=\"min-special\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minSpecial\"\n          (change)=\"minSpecialChanged()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"uppercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.uppercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useUppercase\"\n          attr.aria-label=\"{{ 'uppercase' | i18n }}\"\n        />\n        <label for=\"uppercase\" class=\"form-check-label\">A-Z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"lowercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.lowercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useLowercase\"\n          attr.aria-label=\"{{ 'lowercase' | i18n }}\"\n        />\n        <label for=\"lowercase\" class=\"form-check-label\">a-z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"numbers\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.number\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useNumbers\"\n          attr.aria-label=\"{{ 'numbers' | i18n }}\"\n        />\n        <label for=\"numbers\" class=\"form-check-label\">0-9</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"special\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.special\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useSpecial\"\n          attr.aria-label=\"{{ 'specialCharacters' | i18n }}\"\n        />\n        <label for=\"special\" class=\"form-check-label\">!@#$%^&amp;*</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"ambiguous\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"avoidAmbiguous\"\n        />\n        <label for=\"ambiguous\" class=\"form-check-label\">{{ \"ambiguous\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"d-flex\">\n    <div>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"regenerate()\">\n        {{ \"regeneratePassword\" | i18n }}\n      </button>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n        {{ \"copyPassword\" | i18n }}\n      </button>\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"history()\"\n        appA11yTitle=\"{{ 'passwordHistory' | i18n }}\"\n      >\n        <i class=\"bwi bwi-clock bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'username'\">\n  <div aria-labelledby=\"usernameTypeHeading\" class=\"form-group\" role=\"radiogroup\">\n    <div class=\"d-block\">\n      <label id=\"usernameTypeHeading\">{{ \"usernameType\" | i18n }}</label>\n      <a\n        class=\"ml-auto\"\n        href=\"https://bitwarden.com/help/generator/#username-types\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <div class=\"form-check\" *ngFor=\"let o of usernameTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"usernameOptions.type\"\n        name=\"UsernameType\"\n        id=\"usernameType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"saveUsernameOptions()\"\n        [checked]=\"usernameOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"usernameType_{{ o.value }}\">\n        {{ o.name }}\n        <div class=\"small text-muted\">{{ o.desc }}</div>\n      </label>\n    </div>\n  </div>\n  <ng-container *ngIf=\"usernameOptions.type === 'forwarded'\">\n    <div class=\"form-group\">\n      <label class=\"d-block\">{{ \"service\" | i18n }}</label>\n      <div class=\"form-check\" *ngFor=\"let o of forwardOptions\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          [(ngModel)]=\"usernameOptions.forwardedService\"\n          name=\"ForwardType\"\n          id=\"forwardtype_{{ o.value }}\"\n          [value]=\"o.value\"\n          (change)=\"saveUsernameOptions()\"\n          [checked]=\"usernameOptions.forwardedService === o.value\"\n        />\n        <label class=\"form-check-label\" for=\"forwardtype_{{ o.value }}\">\n          {{ o.name }}\n        </label>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'simplelogin'\">\n      <div class=\"form-group col-4\">\n        <label for=\"simplelogin-apikey\">{{ \"apiKey\" | i18n }}</label>\n        <input\n          id=\"simplelogin-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedSimpleLoginApiKey\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'duckduckgo'\">\n      <div class=\"form-group col-4\">\n        <label for=\"duckduckgo-apikey\">{{ \"apiKey\" | i18n }}</label>\n        <input\n          id=\"duckduckgo-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          name=\"DuckDudkGoApiKey\"\n          [(ngModel)]=\"usernameOptions.forwardedDuckDuckGoToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'anonaddy'\">\n      <div class=\"form-group col-4\">\n        <label for=\"anonaddy-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"anonaddy-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedAnonAddyApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"anonaddy-domain\">{{ \"domainName\" | i18n }}</label>\n        <input\n          id=\"anonaddy-domain\"\n          class=\"form-control\"\n          type=\"text\"\n          [(ngModel)]=\"usernameOptions.forwardedAnonAddyDomain\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'firefoxrelay'\">\n      <div class=\"form-group col-4\">\n        <label for=\"firefox-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"firefox-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedFirefoxApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'fastmail'\">\n      <div class=\"form-group col-4\">\n        <label for=\"fastmail-apiToken\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"fastmail-apiToken\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedFastmailApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'subaddress'\">\n    <div class=\"form-group col-4\">\n      <label for=\"subaddress-email\">{{ \"emailAddress\" | i18n }}</label>\n      <input\n        id=\"subaddress-email\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.subaddressEmail\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'catchall'\">\n    <div class=\"form-group col-4\">\n      <label for=\"catchall-domain\">{{ \"domainName\" | i18n }}</label>\n      <input\n        id=\"catchall-domain\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.catchallDomain\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <ng-container *ngIf=\"usernameOptions.type === 'word'\">\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"form-group\">\n        <div class=\"form-check\">\n          <input\n            id=\"capitalizeUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordCapitalize\"\n          />\n          <label for=\"capitalizeUsername\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n        </div>\n        <div class=\"form-check\">\n          <input\n            id=\"includeNumberUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordIncludeNumber\"\n          />\n          <label for=\"includeNumberUsername\" class=\"form-check-label\">{{\n            \"includeNumber\" | i18n\n          }}</label>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <div #form [appApiAction]=\"usernameGeneratingPromise\">\n    <button\n      type=\"button\"\n      class=\"btn btn-submit btn-primary\"\n      (click)=\"regenerate()\"\n      [disabled]=\"form.loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"regenerateUsername\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n      {{ \"copyUsername\" | i18n }}\n    </button>\n  </div>\n</ng-container>\n<ng-template #historyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { GeneratorComponent as BaseGeneratorComponent } from \"@bitwarden/angular/components/generator.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\n\nimport { PasswordGeneratorHistoryComponent } from \"./password-generator-history.component\";\n\n@Component({\n  selector: \"app-generator\",\n  templateUrl: \"generator.component.html\",\n})\nexport class GeneratorComponent extends BaseGeneratorComponent {\n  @ViewChild(\"historyTemplate\", { read: ViewContainerRef, static: true })\n  historyModalRef: ViewContainerRef;\n\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    usernameGenerationService: UsernameGenerationService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService,\n    route: ActivatedRoute,\n    private modalService: ModalService\n  ) {\n    super(\n      passwordGenerationService,\n      usernameGenerationService,\n      platformUtilsService,\n      stateService,\n      i18nService,\n      logService,\n      route,\n      window\n    );\n    if (platformUtilsService.isSelfHost()) {\n      // Cannot use Firefox Relay on self hosted web vaults due to CORS issues with Firefox Relay API\n      this.forwardOptions.splice(\n        this.forwardOptions.findIndex((o) => o.value === \"firefoxrelay\"),\n        1\n      );\n      // Also cannot use Duck Duck Go on self hosted web vaults due to CORS issues\n      this.forwardOptions.splice(\n        this.forwardOptions.findIndex((o) => o.value === \"duckduckgo\"),\n        1\n      );\n    }\n  }\n\n  async history() {\n    await this.modalService.openViewRef(PasswordGeneratorHistoryComponent, this.historyModalRef);\n  }\n\n  lengthChanged() {\n    document.getElementById(\"length\").focus();\n  }\n\n  minNumberChanged() {\n    document.getElementById(\"min-number\").focus();\n  }\n\n  minSpecialChanged() {\n    document.getElementById(\"min-special\").focus();\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-tools\",\n  templateUrl: \"tools.component.html\",\n})\nexport class ToolsComponent implements OnInit {\n  canAccessPremium = false;\n\n  constructor(private stateService: StateService, private messagingService: MessagingService) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card mb-4\">\n        <div class=\"card-header\">{{ \"tools\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"generator\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"generator\" | i18n }}\n          </a>\n          <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"importData\" | i18n }}\n          </a>\n          <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"exportVault\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { CipherWithIdRequest } from \"@bitwarden/common/models/request/cipher-with-id.request\";\nimport { FolderWithIdRequest } from \"@bitwarden/common/models/request/folder-with-id.request\";\nimport { UpdateKeyRequest } from \"@bitwarden/common/models/request/update-key.request\";\n\n@Component({\n  selector: \"app-update-key\",\n  templateUrl: \"update-key.component.html\",\n})\nexport class UpdateKeyComponent {\n  masterPassword: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (hasEncKey) {\n      return;\n    }\n\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.makeRequest().then((request) => {\n        return this.apiService.postAccountKey(request);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"keyUpdated\"),\n        this.i18nService.t(\"logBackInOthersToo\"),\n        { timeout: 15000 }\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async makeRequest(): Promise<UpdateKeyRequest> {\n    const key = await this.cryptoService.getKey();\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n\n    await this.syncService.fullSync(true);\n\n    const folders = await firstValueFrom(this.folderService.folderViews$);\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    return request;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"updateEncKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"updateEncKeyTitle\">{{ \"updateEncryptionKey\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"updateEncryptionKeyShortDesc\" | i18n }} {{ \"updateEncryptionKeyDesc\" | i18n }}\n          <a\n            href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            >{{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <app-callout type=\"warning\">{{ \"updateEncryptionKeyWarning\" | i18n }}</app-callout>\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appAutofocus\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"updateEncryptionKey\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n  @Input() folderId: string;\n  @Output() onSavedFolder = new EventEmitter<FolderView>();\n  @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n  editMode = false;\n  folder: FolderView = new FolderView();\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n\n  constructor(\n    protected folderService: FolderService,\n    protected folderApiService: FolderApiServiceAbstraction,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.folder.name == null || this.folder.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    try {\n      const folder = await this.folderService.encrypt(this.folder);\n      this.formPromise = this.folderApiService.save(folder);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedFolder\" : \"addedFolder\")\n      );\n      this.onSavedFolder.emit(this.folder);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteFolderConfirmation\"),\n      this.i18nService.t(\"deleteFolder\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.folderApiService.delete(this.folder.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedFolder\"));\n      this.onDeletedFolder.emit(this.folder);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  protected async init() {\n    this.editMode = this.folderId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editFolder\");\n      const folder = await this.folderService.get(this.folderId);\n      this.folder = await folder.decrypt();\n    } else {\n      this.title = this.i18nService.t(\"addFolder\");\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"folderAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"folderAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"folder.name\"\n          required\n          appAutofocus\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { FolderAddEditComponent as BaseFolderAddEditComponent } from \"@bitwarden/angular/components/folder-add-edit.component\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-folder-add-edit\",\n  templateUrl: \"folder-add-edit.component.html\",\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n  constructor(\n    folderService: FolderService,\n    folderApiService: FolderApiServiceAbstraction,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(folderService, folderApiService, i18nService, platformUtilsService, logService);\n  }\n}\n","import { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, map, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { Checkable, isChecked } from \"@bitwarden/common/types/checkable\";\n\n@Directive()\nexport class ShareComponent implements OnInit, OnDestroy {\n  @Input() cipherId: string;\n  @Input() organizationId: string;\n  @Output() onSharedCipher = new EventEmitter();\n\n  formPromise: Promise<void>;\n  cipher: CipherView;\n  collections: Checkable<CollectionView>[] = [];\n  organizations$: Observable<Organization[]>;\n\n  protected writeableCollections: Checkable<CollectionView>[] = [];\n\n  private _destroy = new Subject<void>();\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService,\n    protected organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  async load() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n\n    this.organizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => {\n        return orgs\n          .filter((o) => o.enabled && o.status === OrganizationUserStatusType.Confirmed)\n          .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n      })\n    );\n\n    this.organizations$.pipe(takeUntil(this._destroy)).subscribe((orgs) => {\n      if (this.organizationId == null && orgs.length > 0) {\n        this.organizationId = orgs[0].id;\n      }\n    });\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipherDomain.decrypt();\n\n    this.filterCollections();\n  }\n\n  filterCollections() {\n    this.writeableCollections.forEach((c) => (c.checked = false));\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    const selectedCollectionIds = this.collections.filter(isChecked).map((c) => c.id);\n    if (selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    const cipherView = await cipherDomain.decrypt();\n    const orgs = await firstValueFrom(this.organizations$);\n    const orgName =\n      orgs.find((o) => o.id === this.organizationId)?.name ?? this.i18nService.t(\"organization\");\n\n    try {\n      this.formPromise = this.cipherService\n        .shareWithServer(cipherView, this.organizationId, selectedCollectionIds)\n        .then(async () => {\n          this.onSharedCipher.emit();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"movedItemToOrg\", cipherView.name, orgName)\n          );\n        });\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  get canSave() {\n    if (this.collections != null) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if (this.collections[i].checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"shareTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"shareTitle\">\n          {{ \"moveToOrganization\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <ng-container *ngIf=\"organizations$ | async as organizations\">\n        <div class=\"modal-body\" *ngIf=\"!organizations || !organizations.length\">\n          {{ \"noOrganizationsList\" | i18n }}\n        </div>\n        <div class=\"modal-body\" *ngIf=\"organizations && organizations.length\">\n          <p>{{ \"moveToOrgDesc\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n            <select\n              id=\"organization\"\n              name=\"OrganizationId\"\n              [(ngModel)]=\"organizationId\"\n              class=\"form-control\"\n              (change)=\"filterCollections()\"\n            >\n              <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"d-flex\">\n            <h3>{{ \"collections\" | i18n }}</h3>\n            <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n              <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"selectAll\" | i18n }}\n              </button>\n              <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"unselectAll\" | i18n }}\n              </button>\n            </div>\n          </div>\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n                <td class=\"table-list-checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td>\n                  {{ c.name }}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary btn-submit manual\"\n            [disabled]=\"form.loading || !canSave\"\n            [ngClass]=\"{ loading: form.loading }\"\n            *ngIf=\"organizations && organizations.length\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"save\" | i18n }}</span>\n          </button>\n          <a\n            href=\"#\"\n            routerLink=\"/create-organization\"\n            class=\"btn btn-primary\"\n            *ngIf=\"!organizations || !organizations.length\"\n          >\n            {{ \"newOrganization\" | i18n }}\n          </a>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"cancel\" | i18n }}\n          </button>\n        </div>\n      </ng-container>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { ShareComponent as BaseShareComponent } from \"@bitwarden/angular/components/share.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Component({\n  selector: \"app-vault-share\",\n  templateUrl: \"share.component.html\",\n})\nexport class ShareComponent extends BaseShareComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      collectionService,\n      platformUtilsService,\n      i18nService,\n      cipherService,\n      logService,\n      organizationService\n    );\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\n@Component({\n  selector: \"app-verify-email\",\n  templateUrl: \"verify-email.component.html\",\n})\nexport class VerifyEmailComponent {\n  actionPromise: Promise<unknown>;\n\n  @Output() onVerified = new EventEmitter<boolean>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private tokenService: TokenService\n  ) {}\n\n  async verifyEmail(): Promise<void> {\n    await this.apiService.refreshIdentityToken();\n    if (await this.tokenService.getEmailVerified()) {\n      this.onVerified.emit(true);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailVerified\"));\n      return;\n    }\n\n    await this.apiService.postAccountVerifyEmail();\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"checkInboxForVerification\")\n    );\n  }\n\n  async send() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    try {\n      this.actionPromise = this.verifyEmail();\n      await this.actionPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n}\n","<div class=\"card border-warning\">\n  <div class=\"card-header bg-warning text-white\">\n    <i class=\"bwi bwi-envelope bwi-fw\" aria-hidden=\"true\"></i> {{ \"verifyEmail\" | i18n }}\n  </div>\n  <div class=\"card-body\">\n    <p>{{ \"verifyEmailDesc\" | i18n }}</p>\n    <button\n      type=\"button\"\n      class=\"btn btn-block btn-outline-secondary btn-submit\"\n      #sendBtn\n      [appApiAction]=\"actionPromise\"\n      [disabled]=\"sendBtn.loading\"\n      (click)=\"send()\"\n    >\n      <i class=\"bwi bwi-spin bwi-spinner\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>\n        {{ \"sendEmail\" | i18n }}\n      </span>\n    </button>\n  </div>\n</div>\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"groupings\">\n        <div class=\"content\">\n          <div class=\"inner-content\">\n            <app-vault-filter\n              #vaultFilter\n              [activeFilter]=\"activeFilter\"\n              (onFilterChange)=\"applyVaultFilter($event)\"\n              (onAddFolder)=\"addFolder()\"\n              (onEditFolder)=\"editFolder($event.id)\"\n              (onSearchTextChanged)=\"filterSearchText($event)\"\n            ></app-vault-filter>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div [ngClass]=\"{ 'col-6': isShowingCards, 'col-9': !isShowingCards }\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"vaultItems\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\n            <ng-container *ngIf=\"actionSpinner.loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <app-vault-bulk-actions\n            [ciphersComponent]=\"ciphersComponent\"\n            [deleted]=\"activeFilter.status === 'trash'\"\n          >\n          </app-vault-bulk-actions>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addCipher()\"\n            *ngIf=\"activeFilter.status !== 'trash'\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"addItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout\n        type=\"warning\"\n        *ngIf=\"activeFilter.status === 'trash'\"\n        icon=\"bwi-exclamation-triangle\"\n      >\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-vault-ciphers\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onShareClicked)=\"shareCipher($event)\"\n        (onCollectionsClicked)=\"editCipherCollections($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n        (onOrganzationBadgeClicked)=\"applyOrganizationFilter($event)\"\n      >\n      </app-vault-ciphers>\n    </div>\n    <div class=\"col-3\">\n      <div class=\"card border-warning mb-4\" *ngIf=\"showUpdateKey\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateKeyTitle\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateEncryptionKeyShortDesc\" | i18n }}</p>\n          <button class=\"btn btn-block btn-outline-secondary\" type=\"button\" (click)=\"updateKey()\">\n            {{ \"updateEncryptionKey\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-verify-email\n        *ngIf=\"showVerifyEmail\"\n        class=\"d-block mb-4\"\n        (onVerified)=\"emailVerified($event)\"\n      ></app-verify-email>\n\n      <div class=\"card border-warning mb-4\" *ngIf=\"showBrowserOutdated\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateBrowser\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateBrowserDesc\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            target=\"_blank\"\n            href=\"https://browser-update.org/update-browser.html\"\n            rel=\"noopener\"\n          >\n            {{ \"updateBrowser\" | i18n }}\n          </a>\n        </div>\n      </div>\n      <div class=\"card border-success mb-4\" *ngIf=\"showPremiumCallout\">\n        <div class=\"card-header bg-success text-white\">\n          <i class=\"bwi bwi-star-f bwi-fw\" aria-hidden=\"true\"></i> {{ \"goPremium\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            routerLink=\"/settings/subscription/premium\"\n          >\n            {{ \"goPremium\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #folderAddEdit></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #share></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #updateKeyTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { VaultFilter } from \"@bitwarden/angular/vault/vault-filter/models/vault-filter.model\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { UpdateKeyComponent } from \"../settings/update-key.component\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { FolderAddEditComponent } from \"./folder-add-edit.component\";\nimport { ShareComponent } from \"./share.component\";\nimport { VaultService } from \"./shared/vault.service\";\nimport { VaultFilterService } from \"./vault-filter/shared/vault-filter.service\";\nimport { VaultFilterComponent } from \"./vault-filter/vault-filter.component\";\n\nconst BroadcasterSubscriptionId = \"VaultComponent\";\n\n@Component({\n  selector: \"app-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(\"vaultFilter\", { static: true }) filterComponent: VaultFilterComponent;\n  @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"folderAddEdit\", { read: ViewContainerRef, static: true })\n  folderAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"share\", { read: ViewContainerRef, static: true }) shareModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"updateKeyTemplate\", { read: ViewContainerRef, static: true })\n  updateKeyModalRef: ViewContainerRef;\n\n  folderId: string = null;\n  myVaultOnly = false;\n  showVerifyEmail = false;\n  showBrowserOutdated = false;\n  showUpdateKey = false;\n  showPremiumCallout = false;\n  trashCleanupWarning: string = null;\n  activeFilter: VaultFilter = new VaultFilter();\n\n  constructor(\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private tokenService: TokenService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private vaultService: VaultService,\n    private cipherService: CipherService,\n    private passwordRepromptService: PasswordRepromptService,\n    private vaultFilterService: VaultFilterService\n  ) {}\n\n  async ngOnInit() {\n    this.showVerifyEmail = !(await this.tokenService.getEmailVerified());\n    this.showBrowserOutdated = window.navigator.userAgent.indexOf(\"MSIE\") !== -1;\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (params) => {\n      await this.syncService.fullSync(false);\n      const canAccessPremium = await this.stateService.getCanAccessPremium();\n      this.showPremiumCallout =\n        !this.showVerifyEmail && !canAccessPremium && !this.platformUtilsService.isSelfHost();\n\n      this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n      this.filterComponent.reloadOrganizations();\n      this.showUpdateKey = !(await this.cryptoService.hasEncKey());\n\n      const cipherId = getCipherIdFromParams(params);\n\n      if (cipherId) {\n        const cipherView = new CipherView();\n        cipherView.id = cipherId;\n        if (params.action === \"clone\") {\n          await this.cloneCipher(cipherView);\n        } else if (params.action === \"edit\") {\n          await this.editCipher(cipherView);\n        }\n      }\n      await this.ciphersComponent.reload();\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.subscribe(async (params) => {\n        const cipherId = getCipherIdFromParams(params);\n        if (cipherId) {\n          if ((await this.cipherService.get(cipherId)) != null) {\n            this.editCipherId(cipherId);\n          } else {\n            this.platformUtilsService.showToast(\n              \"error\",\n              this.i18nService.t(\"errorOccurred\"),\n              this.i18nService.t(\"unknownCipher\")\n            );\n            this.router.navigate([], {\n              queryParams: { itemId: null, cipherId: null },\n              queryParamsHandling: \"merge\",\n            });\n          }\n        }\n      });\n\n      this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n        this.ngZone.run(async () => {\n          switch (message.command) {\n            case \"syncCompleted\":\n              if (message.successfully) {\n                await Promise.all([\n                  this.filterComponent.reloadCollectionsAndFolders(this.activeFilter),\n                  this.filterComponent.reloadOrganizations(),\n                  this.ciphersComponent.load(this.ciphersComponent.filter),\n                ]);\n                this.changeDetectorRef.detectChanges();\n              }\n              break;\n          }\n        });\n      });\n    });\n  }\n\n  get isShowingCards() {\n    return (\n      this.showBrowserOutdated ||\n      this.showPremiumCallout ||\n      this.showUpdateKey ||\n      this.showVerifyEmail\n    );\n  }\n\n  emailVerified(verified: boolean) {\n    this.showVerifyEmail = !verified;\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async applyVaultFilter(vaultFilter: VaultFilter) {\n    this.ciphersComponent.showAddNew = vaultFilter.status !== \"trash\";\n    this.activeFilter = vaultFilter;\n    await this.ciphersComponent.reload(\n      this.activeFilter.buildFilter(),\n      vaultFilter.status === \"trash\"\n    );\n    this.filterComponent.searchPlaceholder = this.vaultService.calculateSearchBarLocalizationString(\n      this.activeFilter\n    );\n    this.go();\n  }\n\n  async applyOrganizationFilter(orgId: string) {\n    if (orgId == null) {\n      this.activeFilter.resetOrganization();\n      this.activeFilter.myVaultOnly = true;\n    } else {\n      this.activeFilter.selectedOrganizationId = orgId;\n    }\n    await this.vaultFilterService.ensureVaultFiltersAreExpanded();\n    await this.applyVaultFilter(this.activeFilter);\n  }\n\n  filterSearchText(searchText: string) {\n    this.ciphersComponent.searchText = searchText;\n    this.ciphersComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (cipher.organizationId == null && !canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    } else if (cipher.organizationId != null) {\n      const org = await this.organizationService.get(cipher.organizationId);\n      if (org != null && (org.maxStorageGb == null || org.maxStorageGb === 0)) {\n        this.messagingService.send(\"upgradeOrganization\", {\n          organizationId: cipher.organizationId,\n        });\n        return;\n      }\n    }\n\n    let madeAttachmentChanges = false;\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onReuploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.ciphersComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async shareCipher(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      ShareComponent,\n      this.shareModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSharedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addFolder() {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = null;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n      }\n    );\n  }\n\n  async editFolder(folderId: string) {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = folderId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedFolder.subscribe(async () => {\n          modal.close();\n          await this.filterComponent.reloadCollectionsAndFolders(this.activeFilter);\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.type = this.activeFilter.cipherType;\n    component.folderId = this.folderId === \"none\" ? null : this.folderId;\n    if (this.activeFilter.selectedCollectionId != null) {\n      const collection = this.filterComponent.collections.fullList.filter(\n        (c) => c.id === this.activeFilter.selectedCollectionId\n      );\n      if (collection.length > 0) {\n        component.organizationId = collection[0].organizationId;\n        component.collectionIds = [this.activeFilter.selectedCollectionId];\n      }\n    }\n    if (this.activeFilter.selectedFolderId && this.activeFilter.selectedFolder) {\n      component.folderId = this.activeFilter.selectedFolderId;\n    }\n    if (this.activeFilter.selectedOrganizationId) {\n      component.organizationId = this.activeFilter.selectedOrganizationId;\n    }\n  }\n\n  async editCipher(cipher: CipherView) {\n    return this.editCipherId(cipher?.id);\n  }\n\n  async editCipherId(id: string) {\n    const cipher = await this.cipherService.get(id);\n    if (cipher != null && cipher.reprompt != 0) {\n      if (!(await this.passwordRepromptService.showPasswordPrompt())) {\n        this.go({ cipherId: null, itemId: null });\n        return;\n      }\n    }\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.ciphersComponent.refresh();\n        });\n      }\n    );\n\n    modal.onClosedPromise().then(() => {\n      this.go({ cipherId: null, itemId: null });\n    });\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n  }\n\n  async updateKey() {\n    await this.modalService.openViewRef(UpdateKeyComponent, this.updateKeyModalRef);\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        favorites: this.activeFilter.status === \"favorites\" ? true : null,\n        type: this.activeFilter.cipherType,\n        folderId: this.activeFilter.selectedFolderId,\n        collectionId: this.activeFilter.selectedCollectionId,\n        deleted: this.activeFilter.status === \"trash\" ? true : null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      queryParamsHandling: \"merge\",\n      replaceUrl: true,\n    });\n  }\n}\n\n/**\n * Allows backwards compatibility with\n * old links that used the original `cipherId` param\n */\nconst getCipherIdFromParams = (params: Params): string => {\n  return params[\"itemId\"] || params[\"cipherId\"];\n};\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { VaultComponent } from \"./vault.component\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: VaultComponent,\n    data: { titleId: \"vaults\" },\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VaultRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { CiphersComponent } from \"./ciphers.component\";\nimport { OrganizationBadgeModule } from \"./organization-badge/organization-badge.module\";\nimport { VaultSharedModule } from \"./shared/vault-shared.module\";\nimport { VaultRoutingModule } from \"./vault-routing.module\";\nimport { VaultComponent } from \"./vault.component\";\n\n@NgModule({\n  imports: [VaultSharedModule, VaultRoutingModule, OrganizationBadgeModule],\n  declarations: [VaultComponent, CiphersComponent],\n  exports: [VaultComponent],\n})\nexport class VaultModule {}\n","import { NgModule } from \"@angular/core\";\nimport { Route, RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { LockGuard } from \"@bitwarden/angular/guards/lock.guard\";\nimport { UnauthGuard } from \"@bitwarden/angular/guards/unauth.guard\";\n\nimport { flagEnabled, Flags } from \"../utils/flags\";\n\nimport { AcceptEmergencyComponent } from \"./accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"./accounts/accept-organization.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginWithDeviceComponent } from \"./accounts/login/login-with-device.component\";\nimport { LoginComponent } from \"./accounts/login/login.component\";\nimport { RecoverDeleteComponent } from \"./accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"./accounts/recover-two-factor.component\";\nimport { RegisterComponent } from \"./accounts/register.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TrialInitiationComponent } from \"./accounts/trial-initiation/trial-initiation.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"./accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"./accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"./accounts/verify-recover-delete.component\";\nimport { HomeGuard } from \"./guards/home.guard\";\nimport { FrontendLayoutComponent } from \"./layouts/frontend-layout.component\";\nimport { UserLayoutComponent } from \"./layouts/user-layout.component\";\nimport { OrganizationsRoutingModule } from \"./organizations/organization-routing.module\";\nimport { AcceptFamilySponsorshipComponent } from \"./organizations/sponsorships/accept-family-sponsorship.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"./organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ReportsModule } from \"./reports\";\nimport { AccessComponent } from \"./send/access.component\";\nimport { SendComponent } from \"./send/send.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { CreateOrganizationComponent } from \"./settings/create-organization.component\";\nimport { DomainRulesComponent } from \"./settings/domain-rules.component\";\nimport { EmergencyAccessViewComponent } from \"./settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"./settings/emergency-access.component\";\nimport { PreferencesComponent } from \"./settings/preferences.component\";\nimport { SecurityRoutingModule } from \"./settings/security-routing.module\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"./settings/sponsored-families.component\";\nimport { SubscriptionRoutingModule } from \"./settings/subscription-routing.module\";\nimport { GeneratorComponent } from \"./tools/generator.component\";\nimport { ToolsComponent } from \"./tools/tools.component\";\nimport { VaultModule } from \"./vault/vault.module\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    data: { doNotSaveUrl: true },\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        children: [], // Children lets us have an empty component.\n        canActivate: [HomeGuard], // Redirects either to vault, login or lock page.\n      },\n      { path: \"login\", component: LoginComponent, canActivate: [UnauthGuard] },\n      {\n        path: \"login-with-device\",\n        component: LoginWithDeviceComponent,\n        data: { titleId: \"loginWithDevice\" },\n      },\n      { path: \"2fa\", component: TwoFactorComponent, canActivate: [UnauthGuard] },\n      {\n        path: \"register\",\n        component: RegisterComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"createAccount\" },\n      },\n      buildFlaggedRoute(\"showTrial\", {\n        path: \"trial\",\n        component: TrialInitiationComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"startTrial\" },\n      }),\n      {\n        path: \"sso\",\n        component: SsoComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"enterpriseSingleSignOn\" },\n      },\n      {\n        path: \"set-password\",\n        component: SetPasswordComponent,\n        data: { titleId: \"setMasterPassword\" },\n      },\n      {\n        path: \"hint\",\n        component: HintComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"passwordHint\" },\n      },\n      {\n        path: \"lock\",\n        component: LockComponent,\n        canActivate: [LockGuard],\n      },\n      { path: \"verify-email\", component: VerifyEmailTokenComponent },\n      {\n        path: \"accept-organization\",\n        component: AcceptOrganizationComponent,\n        data: { titleId: \"joinOrganization\", doNotSaveUrl: false },\n      },\n      {\n        path: \"accept-emergency\",\n        component: AcceptEmergencyComponent,\n        data: { titleId: \"acceptEmergency\", doNotSaveUrl: false },\n      },\n      {\n        path: \"accept-families-for-enterprise\",\n        component: AcceptFamilySponsorshipComponent,\n        data: { titleId: \"acceptFamilySponsorship\", doNotSaveUrl: false },\n      },\n      { path: \"recover\", pathMatch: \"full\", redirectTo: \"recover-2fa\" },\n      {\n        path: \"recover-2fa\",\n        component: RecoverTwoFactorComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"recoverAccountTwoStep\" },\n      },\n      {\n        path: \"recover-delete\",\n        component: RecoverDeleteComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"verify-recover-delete\",\n        component: VerifyRecoverDeleteComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"send/:sendId/:key\",\n        component: AccessComponent,\n        data: { title: \"Bitwarden Send\" },\n      },\n      {\n        path: \"update-temp-password\",\n        component: UpdateTempPasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"updateTempPassword\" },\n      },\n      {\n        path: \"update-password\",\n        component: UpdatePasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"updatePassword\" },\n      },\n      {\n        path: \"remove-password\",\n        component: RemovePasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"removeMasterPassword\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    component: UserLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: \"vault\",\n        loadChildren: () => VaultModule,\n      },\n      { path: \"sends\", component: SendComponent, data: { title: \"Send\" } },\n      {\n        path: \"create-organization\",\n        component: CreateOrganizationComponent,\n        data: { titleId: \"newOrganization\" },\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"account\" },\n          { path: \"account\", component: AccountComponent, data: { titleId: \"myAccount\" } },\n          {\n            path: \"preferences\",\n            component: PreferencesComponent,\n            data: { titleId: \"preferences\" },\n          },\n          {\n            path: \"security\",\n            loadChildren: () => SecurityRoutingModule,\n          },\n          {\n            path: \"domain-rules\",\n            component: DomainRulesComponent,\n            data: { titleId: \"domainRules\" },\n          },\n          {\n            path: \"subscription\",\n            loadChildren: () => SubscriptionRoutingModule,\n          },\n          {\n            path: \"emergency-access\",\n            children: [\n              {\n                path: \"\",\n                component: EmergencyAccessComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n              {\n                path: \":id\",\n                component: EmergencyAccessViewComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n            ],\n          },\n          {\n            path: \"sponsored-families\",\n            component: SponsoredFamiliesComponent,\n            data: { titleId: \"sponsoredFamilies\" },\n          },\n        ],\n      },\n      {\n        path: \"tools\",\n        component: ToolsComponent,\n        canActivate: [AuthGuard],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"generator\" },\n          {\n            path: \"\",\n            loadChildren: () =>\n              import(\"./tools/import-export/import-export.module\").then(\n                (m) => m.ImportExportModule\n              ),\n          },\n          {\n            path: \"generator\",\n            component: GeneratorComponent,\n            data: { titleId: \"generator\" },\n          },\n        ],\n      },\n      {\n        path: \"reports\",\n        loadChildren: () => ReportsModule,\n      },\n      { path: \"setup/families-for-enterprise\", component: FamiliesForEnterpriseSetupComponent },\n    ],\n  },\n  {\n    path: \"organizations\",\n    loadChildren: () => OrganizationsRoutingModule,\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      paramsInheritanceStrategy: \"always\",\n      // enableTracing: true,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class OssRoutingModule {}\n\nexport function buildFlaggedRoute(flagName: keyof Flags, route: Route): Route {\n  return flagEnabled(flagName)\n    ? route\n    : {\n        path: route.path,\n        redirectTo: \"/\",\n      };\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { LoginWithDeviceComponent } from \"./login-with-device.component\";\nimport { LoginComponent } from \"./login.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [LoginComponent, LoginWithDeviceComponent],\n  exports: [LoginComponent, LoginWithDeviceComponent],\n})\nexport class LoginModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\n\nimport { VerticalStepContentComponent } from \"./vertical-step-content.component\";\nimport { VerticalStep } from \"./vertical-step.component\";\nimport { VerticalStepperComponent } from \"./vertical-stepper.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [VerticalStepperComponent, VerticalStep, VerticalStepContentComponent],\n  exports: [VerticalStepperComponent, VerticalStep],\n})\nexport class VerticalStepperModule {}\n","import { CdkStepperModule } from \"@angular/cdk/stepper\";\nimport { TitleCasePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { FormFieldModule } from \"@bitwarden/components\";\n\nimport { OrganizationCreateModule } from \"../../organizations/create/organization-create.module\";\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\nimport { RegisterFormModule } from \"../register-form/register-form.module\";\n\nimport { BillingComponent } from \"./billing.component\";\nimport { ConfirmationDetailsComponent } from \"./confirmation-details.component\";\nimport { AbmEnterpriseContentComponent } from \"./content/abm-enterprise-content.component\";\nimport { AbmTeamsContentComponent } from \"./content/abm-teams-content.component\";\nimport { CnetEnterpriseContentComponent } from \"./content/cnet-enterprise-content.component\";\nimport { CnetIndividualContentComponent } from \"./content/cnet-individual-content.component\";\nimport { CnetTeamsContentComponent } from \"./content/cnet-teams-content.component\";\nimport { DefaultContentComponent } from \"./content/default-content.component\";\nimport { EnterpriseContentComponent } from \"./content/enterprise-content.component\";\nimport { Enterprise1ContentComponent } from \"./content/enterprise1-content.component\";\nimport { Enterprise2ContentComponent } from \"./content/enterprise2-content.component\";\nimport { LogoCnetComponent } from \"./content/logo-cnet.component\";\nimport { LogoForbesComponent } from \"./content/logo-forbes.component\";\nimport { LogoUSNewsComponent } from \"./content/logo-us-news.component\";\nimport { TeamsContentComponent } from \"./content/teams-content.component\";\nimport { Teams1ContentComponent } from \"./content/teams1-content.component\";\nimport { Teams2ContentComponent } from \"./content/teams2-content.component\";\nimport { TrialInitiationComponent } from \"./trial-initiation.component\";\nimport { VerticalStepperModule } from \"./vertical-stepper/vertical-stepper.module\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    CdkStepperModule,\n    VerticalStepperModule,\n    FormFieldModule,\n    RegisterFormModule,\n    OrganizationCreateModule,\n    LooseComponentsModule,\n  ],\n  declarations: [\n    TrialInitiationComponent,\n    EnterpriseContentComponent,\n    TeamsContentComponent,\n    ConfirmationDetailsComponent,\n    BillingComponent,\n    DefaultContentComponent,\n    EnterpriseContentComponent,\n    Enterprise1ContentComponent,\n    Enterprise2ContentComponent,\n    TeamsContentComponent,\n    Teams1ContentComponent,\n    Teams2ContentComponent,\n    CnetEnterpriseContentComponent,\n    CnetIndividualContentComponent,\n    CnetTeamsContentComponent,\n    AbmEnterpriseContentComponent,\n    AbmTeamsContentComponent,\n    LogoCnetComponent,\n    LogoForbesComponent,\n    LogoUSNewsComponent,\n  ],\n  exports: [TrialInitiationComponent],\n  providers: [TitleCasePipe],\n})\nexport class TrialInitiationModule {}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\n\n@NgModule({\n  imports: [SharedModule, ScrollingModule],\n  declarations: [EntityUsersComponent],\n  exports: [EntityUsersComponent],\n})\nexport class OrganizationManageModule {}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\n\nimport { EnrollMasterPasswordReset } from \"./enroll-master-password-reset.component\";\n\n@NgModule({\n  imports: [SharedModule, ScrollingModule, LooseComponentsModule],\n  declarations: [EnrollMasterPasswordReset],\n  exports: [EnrollMasterPasswordReset],\n})\nexport class OrganizationUserModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { LoginModule } from \"./accounts/login/login.module\";\nimport { TrialInitiationModule } from \"./accounts/trial-initiation/trial-initiation.module\";\nimport { OrganizationCreateModule } from \"./organizations/create/organization-create.module\";\nimport { OrganizationManageModule } from \"./organizations/manage/organization-manage.module\";\nimport { OrganizationUserModule } from \"./organizations/users/organization-user.module\";\nimport { LooseComponentsModule, SharedModule } from \"./shared\";\nimport { OrganizationBadgeModule } from \"./vault/organization-badge/organization-badge.module\";\nimport { VaultFilterModule } from \"./vault/vault-filter/vault-filter.module\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    LooseComponentsModule,\n    TrialInitiationModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    OrganizationManageModule,\n    OrganizationUserModule,\n    OrganizationCreateModule,\n    LoginModule,\n  ],\n  exports: [\n    SharedModule,\n    LooseComponentsModule,\n    TrialInitiationModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    LoginModule,\n  ],\n  bootstrap: [],\n})\nexport class OssModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nconst routes: Routes = [{ path: \"**\", redirectTo: \"\" }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WildcardRoutingModule {}\n","export class ProviderAddOrganizationRequest {\n  organizationId: string;\n  key: string;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProviderAddOrganizationRequest } from \"@bitwarden/common/models/request/provider/provider-add-organization.request\";\n\n@Injectable()\nexport class WebProviderService {\n  constructor(\n    private cryptoService: CryptoService,\n    private syncService: SyncService,\n    private apiService: ApiService\n  ) {}\n\n  async addOrganizationToProvider(providerId: string, organizationId: string) {\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const providerKey = await this.cryptoService.getProviderKey(providerId);\n\n    const encryptedOrgKey = await this.cryptoService.encrypt(orgKey.key, providerKey);\n\n    const request = new ProviderAddOrganizationRequest();\n    request.organizationId = organizationId;\n    request.key = encryptedOrgKey.encryptedString;\n\n    const response = await this.apiService.postProviderAddOrganization(providerId, request);\n    await this.syncService.fullSync(true);\n    return response;\n  }\n\n  async detachOrganizastion(providerId: string, organizationId: string): Promise<any> {\n    await this.apiService.deleteProviderOrganization(providerId, organizationId);\n    await this.syncService.fullSync(true);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"addTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"addTitle\">\n          {{ \"addExistingOrganization\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <ng-container *ngIf=\"!loading\">\n          <table class=\"table table-hover table-list\">\n            <tr *ngFor=\"let o of organizations\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"o.name\" [id]=\"o.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ o.name }}\n              </td>\n              <td>\n                <button\n                  class=\"btn btn-outline-secondary pull-right\"\n                  (click)=\"add(o)\"\n                  [disabled]=\"formPromise\"\n                >\n                  Add\n                </button>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\n@Component({\n  selector: \"provider-add-organization\",\n  templateUrl: \"add-organization.component.html\",\n})\nexport class AddOrganizationComponent implements OnInit {\n  @Input() providerId: string;\n  @Input() organizations: Organization[];\n  @Output() onAddedOrganization = new EventEmitter();\n\n  provider: Provider;\n  formPromise: Promise<any>;\n  loading = true;\n\n  constructor(\n    private providerService: ProviderService,\n    private webProviderService: WebProviderService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private validationService: ValidationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    if (this.providerId == null) {\n      return;\n    }\n\n    this.provider = await this.providerService.get(this.providerId);\n\n    this.loading = false;\n  }\n\n  async add(organization: Organization) {\n    if (this.formPromise) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"addOrganizationConfirmation\", organization.name, this.provider.name),\n      organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.formPromise = this.webProviderService.addOrganizationToProvider(\n        this.providerId,\n        organization.id\n      );\n      await this.formPromise;\n    } catch (e) {\n      this.validationService.showError(e);\n      return;\n    } finally {\n      this.formPromise = null;\n    }\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"organizationJoinedProvider\")\n    );\n    this.onAddedOrganization.emit();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Injectable()\nexport class ProviderPermissionsGuard implements CanActivate {\n  constructor(\n    private providerService: ProviderService,\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const provider = await this.providerService.get(route.params.providerId);\n    if (provider == null) {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    if (!provider.isProviderAdmin && !provider.enabled) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"providerIsDisabled\"));\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    const permissionsCallback: (provider: Provider) => boolean = route.data?.providerPermissions;\n    const hasSpecifiedPermissions = permissionsCallback == null || permissionsCallback(provider);\n\n    if (!hasSpecifiedPermissions) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"accessDenied\"));\n      return this.router.createUrlTree([\"/providers\", provider.id]);\n    }\n\n    return true;\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"container page-content\">\n  <div class=\"page-header d-flex\">\n    <h1>{{ \"providers\" | i18n }}</h1>\n  </div>\n  <p *ngIf=\"!loaded\" class=\"text-muted\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"loaded\">\n    <table class=\"table table-hover table-list\" *ngIf=\"providers && providers.length\">\n      <tbody>\n        <tr *ngFor=\"let p of providers\">\n          <td width=\"30\">\n            <bit-avatar [text]=\"p.name\" [id]=\"p.id\" size=\"small\"></bit-avatar>\n          </td>\n          <td>\n            <a href=\"#\" [routerLink]=\"['/providers', p.id]\">{{ p.name }}</a>\n            <ng-container *ngIf=\"!p.enabled\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-danger\"\n                title=\"{{ 'providerIsDisabled' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"providerIsDisabled\" | i18n }}</span>\n            </ng-container>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"app-providers\",\n  templateUrl: \"providers.component.html\",\n})\nexport class ProvidersComponent implements OnInit {\n  providers: Provider[];\n  loaded = false;\n  actionPromise: Promise<any>;\n\n  constructor(private providerService: ProviderService, private i18nService: I18nService) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    await this.load();\n  }\n\n  async load() {\n    const providers = await this.providerService.getAll();\n    providers.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.providers = providers;\n    this.loaded = true;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"clients\" | i18n }}</h1>\n\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <a class=\"btn btn-sm btn-outline-primary ml-3\" routerLink=\"create\" *ngIf=\"manageOrganizations\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newClientOrganization\" | i18n }}\n    </a>\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"addExistingOrganization()\"\n      *ngIf=\"manageOrganizations && showAddExisting\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"addExistingOrganization\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<ng-container\n  *ngIf=\"!loading && (clients | search: searchText:'organizationName':'id') as searchedClients\"\n>\n  <p *ngIf=\"!searchedClients.length\">{{ \"noClientsInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedClients.length\">\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <thead>\n        <tr>\n          <th colspan=\"2\">{{ \"name\" | i18n }}</th>\n          <th>{{ \"numberOfUsers\" | i18n }}</th>\n          <th>{{ \"billingPlan\" | i18n }}</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let o of searchedClients\">\n          <td width=\"30\">\n            <bit-avatar [text]=\"o.organizationName\" [id]=\"o.id\" size=\"small\"></bit-avatar>\n          </td>\n          <td>\n            <a [routerLink]=\"['/organizations', o.organizationId]\">{{ o.organizationName }}</a>\n          </td>\n          <td>\n            <span>{{ o.userCount }}</span>\n            <span *ngIf=\"o.seats != null\"> / {{ o.seats }}</span>\n          </td>\n          <td>\n            <span>{{ o.plan }}</span>\n          </td>\n          <td class=\"table-list-options\" *ngIf=\"manageOrganizations\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(o)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n\n<ng-template #add></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ProviderOrganizationOrganizationDetailsResponse } from \"@bitwarden/common/models/response/provider/provider-organization.response\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\nimport { AddOrganizationComponent } from \"./add-organization.component\";\n\nconst DisallowedPlanTypes = [\n  PlanType.Free,\n  PlanType.FamiliesAnnually2019,\n  PlanType.FamiliesAnnually,\n];\n\n@Component({\n  templateUrl: \"clients.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ClientsComponent implements OnInit {\n  @ViewChild(\"add\", { read: ViewContainerRef, static: true }) addModalRef: ViewContainerRef;\n\n  providerId: string;\n  searchText: string;\n  addableOrganizations: Organization[];\n  loading = true;\n  manageOrganizations = false;\n  showAddExisting = false;\n\n  clients: ProviderOrganizationOrganizationDetailsResponse[];\n  pagedClients: ProviderOrganizationOrganizationDetailsResponse[];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n  protected actionPromise: Promise<unknown>;\n  private pagedClientsCount = 0;\n\n  constructor(\n    private route: ActivatedRoute,\n    private providerService: ProviderService,\n    private apiService: ApiService,\n    private searchService: SearchService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private validationService: ValidationService,\n    private webProviderService: WebProviderService,\n    private logService: LogService,\n    private modalService: ModalService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n\n      await this.load();\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderClients(this.providerId);\n    this.clients = response.data != null && response.data.length > 0 ? response.data : [];\n    this.manageOrganizations =\n      (await this.providerService.get(this.providerId)).type === ProviderUserType.ProviderAdmin;\n    const candidateOrgs = (await this.organizationService.getAll()).filter(\n      (o) => o.isOwner && o.providerId == null\n    );\n    const allowedOrgsIds = await Promise.all(\n      candidateOrgs.map((o) => this.organizationApiService.get(o.id))\n    ).then((orgs) =>\n      orgs.filter((o) => !DisallowedPlanTypes.includes(o.planType)).map((o) => o.id)\n    );\n    this.addableOrganizations = candidateOrgs.filter((o) => allowedOrgsIds.includes(o.id));\n\n    this.showAddExisting = this.addableOrganizations.length !== 0;\n    this.loading = false;\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.clients && this.clients.length > this.pageSize;\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  async resetPaging() {\n    this.pagedClients = [];\n    this.loadMore();\n  }\n\n  loadMore() {\n    if (!this.clients || this.clients.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedClients.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedClientsCount > this.pageSize) {\n      pagedSize = this.pagedClientsCount;\n    }\n    if (this.clients.length > pagedLength) {\n      this.pagedClients = this.pagedClients.concat(\n        this.clients.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedClientsCount = this.pagedClients.length;\n    this.didScroll = this.pagedClients.length > this.pageSize;\n  }\n\n  async addExistingOrganization() {\n    const [modal] = await this.modalService.openViewRef(\n      AddOrganizationComponent,\n      this.addModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.organizations = this.addableOrganizations;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onAddedOrganization.subscribe(async () => {\n          try {\n            await this.load();\n            modal.close();\n          } catch (e) {\n            this.logService.error(`Handled exception: ${e}`);\n          }\n        });\n      }\n    );\n  }\n\n  async remove(organization: ProviderOrganizationOrganizationDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"detachOrganizationConfirmation\"),\n      organization.organizationName,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.webProviderService.detachOrganizastion(\n      this.providerId,\n      organization.id\n    );\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"detachedOrganization\", organization.organizationName)\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationPlansComponent } from \"@bitwarden/web-vault/app/settings/organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  providerId: string;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n    });\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"newClientOrganization\" | i18n }}</h1>\n</div>\n<p>{{ \"newClientOrganizationDesc\" | i18n }}</p>\n<app-organization-plans [providerId]=\"providerId\"></app-organization-plans>\n","export class ProviderUserAcceptRequest {\n  token: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ providerName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinProviderDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ProviderUserAcceptRequest } from \"@bitwarden/common/models/request/provider/provider-user-accept.request\";\nimport { BaseAcceptComponent } from \"@bitwarden/web-vault/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-provider\",\n  templateUrl: \"accept-provider.component.html\",\n})\nexport class AcceptProviderComponent extends BaseAcceptComponent {\n  providerName: string;\n\n  failedMessage = \"providerInviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"providerUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    private apiService: ApiService,\n    platformUtilService: PlatformUtilsService\n  ) {\n    super(router, platformUtilService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params) {\n    const request = new ProviderUserAcceptRequest();\n    request.token = qParams.token;\n\n    await this.apiService.postProviderUserAccept(\n      qParams.providerId,\n      qParams.providerUserId,\n      request\n    );\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"providerInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params) {\n    this.providerName = qParams.providerName;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"eventLogs\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"form-inline\">\n      <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"start\"\n        placeholder=\"{{ 'startDate' | i18n }}\"\n        [(ngModel)]=\"start\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n      <span class=\"mx-2\">-</span>\n      <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"end\"\n        placeholder=\"{{ 'endDate' | i18n }}\"\n        [(ngModel)]=\"end\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n    </div>\n    <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary ml-3\"\n        (click)=\"loadEvents(true)\"\n        [disabled]=\"loaded && refreshForm.loading\"\n      >\n        <i\n          class=\"bwi bwi-refresh bwi-fw\"\n          aria-hidden=\"true\"\n          [ngClass]=\"{ 'bwi-spin': loaded && refreshForm.loading }\"\n        ></i>\n        {{ \"refresh\" | i18n }}\n      </button>\n    </form>\n    <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\"\n        [ngClass]=\"{ loading: exportForm.loading }\"\n        (click)=\"exportEvents()\"\n        [disabled]=\"(loaded && exportForm.loading) || dirtyDates\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i>\n        <span>{{ \"export\" | i18n }}</span>\n      </button>\n    </form>\n  </div>\n</div>\n<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"loaded\">\n  <p *ngIf=\"!events || !events.length\">{{ \"noEventsInList\" | i18n }}</p>\n  <table class=\"table table-hover\" *ngIf=\"events && events.length\">\n    <thead>\n      <tr>\n        <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n        <th class=\"border-top-0\" width=\"40\">\n          <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n        </th>\n        <th class=\"border-top-0\" width=\"150\">{{ \"user\" | i18n }}</th>\n        <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let e of events\">\n        <td>{{ e.date | date: \"medium\" }}</td>\n        <td>\n          <i\n            class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n            title=\"{{ e.appName }}, {{ e.ip }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n        </td>\n        <td>\n          <span title=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n        </td>\n        <td [innerHTML]=\"e.message\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <button\n    #moreBtn\n    [appApiAction]=\"morePromise\"\n    type=\"button\"\n    class=\"btn btn-block btn-link btn-submit\"\n    (click)=\"loadEvents(false)\"\n    [disabled]=\"loaded && moreBtn.loading\"\n    *ngIf=\"continuationToken\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"loadMore\" | i18n }}</span>\n  </button>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/event.response\";\nimport { BaseEventsComponent } from \"@bitwarden/web-vault/app/common/base.events.component\";\nimport { EventService } from \"@bitwarden/web-vault/app/core\";\n\n@Component({\n  selector: \"provider-events\",\n  templateUrl: \"events.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n  exportFileName = \"provider-events\";\n  providerId: string;\n\n  private providerUsersUserIdMap = new Map<string, any>();\n  private providerUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    eventService: EventService,\n    i18nService: I18nService,\n    private providerService: ProviderService,\n    exportService: ExportService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    logService: LogService,\n    private userNamePipe: UserNamePipe,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      eventService,\n      i18nService,\n      exportService,\n      platformUtilsService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n      if (provider == null || !provider.useEvents) {\n        this.router.navigate([\"/providers\", this.providerId]);\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderUsers(this.providerId);\n    response.data.forEach((u) => {\n      const name = this.userNamePipe.transform(u);\n      this.providerUsersIdMap.set(u.id, { name: name, email: u.email });\n      this.providerUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n    });\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n    return this.apiService.getEventsProvider(\n      this.providerId,\n      startDate,\n      endDate,\n      continuationToken\n    );\n  }\n\n  protected getUserName(r: EventResponse, userId: string) {\n    return userId != null && this.providerUsersUserIdMap.has(userId)\n      ? this.providerUsersUserIdMap.get(userId)\n      : null;\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"provider\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"people\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canManageUsers\"\n          >\n            {{ \"people\" | i18n }}\n          </a>\n          <a\n            routerLink=\"events\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canAccessEventLogs && accessEvents\"\n          >\n            {{ \"eventLogs\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"provider-manage\",\n  templateUrl: \"manage.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ManageComponent implements OnInit {\n  provider: Provider;\n  accessEvents = false;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.provider = await this.providerService.get(params.providerId);\n      this.accessEvents = this.provider.useEvents;\n    });\n  }\n}\n","export class ProviderUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class ProviderUserConfirmRequest {\n  key: string;\n}\n","type ProviderUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class ProviderUserBulkConfirmRequest {\n  keys: ProviderUserBulkRequestEntry[];\n\n  constructor(keys: ProviderUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserBulkConfirmRequest } from \"@bitwarden/common/models/request/provider/provider-user-bulk-confirm.request\";\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/provider-user-bulk.request\";\nimport { BulkConfirmComponent as OrganizationBulkConfirmComponent } from \"@bitwarden/web-vault/app/organizations/manage/bulk/bulk-confirm.component\";\nimport { BulkUserDetails } from \"@bitwarden/web-vault/app/organizations/manage/bulk/bulk-status.component\";\n\n@Component({\n  templateUrl:\n    \"../../../../../../../apps/web/src/app/organizations/manage/bulk/bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent extends OrganizationBulkConfirmComponent {\n  @Input() providerId: string;\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === ProviderUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    const request = new ProviderUserBulkRequest(this.filteredUsers.map((user) => user.id));\n    return await this.apiService.postProviderUsersPublicKey(this.providerId, request);\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getProviderKey(this.providerId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new ProviderUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.apiService.postProviderUserBulkConfirm(this.providerId, request);\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/provider-user-bulk.request\";\nimport { BulkRemoveComponent as OrganizationBulkRemoveComponent } from \"@bitwarden/web-vault/app/organizations/manage/bulk/bulk-remove.component\";\n\n@Component({\n  templateUrl:\n    \"../../../../../../../apps/web/src/app/organizations/manage/bulk/bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent extends OrganizationBulkRemoveComponent {\n  @Input() providerId: string;\n\n  async deleteUsers() {\n    const request = new ProviderUserBulkRequest(this.users.map((user) => user.id));\n    return await this.apiService.deleteManyProviderUsers(this.providerId, request);\n  }\n\n  protected get removeUsersWarning() {\n    return this.i18nService.t(\"removeUsersWarning\");\n  }\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserInviteRequest {\n  emails: string[] = [];\n  type: ProviderUserType;\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserUpdateRequest {\n  type: ProviderUserType;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"providerInviteUserDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"emails\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"emails\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Emails\"\n              [(ngModel)]=\"emails\"\n              required\n              appAutoFocus\n            />\n            <small class=\"text-muted\">{{ \"inviteMultipleEmailDesc\" | i18n: \"20\" }}</small>\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userType\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/provider-users/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeServiceUser\"\n            [value]=\"userType.ServiceUser\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeServiceUser\">\n            {{ \"serviceUser\" | i18n }}\n            <small>{{ \"serviceUserDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeProviderAdmin\"\n            [value]=\"userType.ProviderAdmin\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeProviderAdmin\">\n            {{ \"providerAdmin\" | i18n }}\n            <small>{{ \"providerAdminDesc\" | i18n }}</small>\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"deleteBtn.loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"deleteBtn.loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!deleteBtn.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { PermissionsApi } from \"@bitwarden/common/models/api/permissions.api\";\nimport { ProviderUserInviteRequest } from \"@bitwarden/common/models/request/provider/provider-user-invite.request\";\nimport { ProviderUserUpdateRequest } from \"@bitwarden/common/models/request/provider/provider-user-update.request\";\n\n@Component({\n  selector: \"provider-user-add-edit\",\n  templateUrl: \"user-add-edit.component.html\",\n})\nexport class UserAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() providerUserId: string;\n  @Input() providerId: string;\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  title: string;\n  emails: string;\n  type: ProviderUserType = ProviderUserType.ServiceUser;\n  permissions = new PermissionsApi();\n  showCustom = false;\n  access: \"all\" | \"selected\" = \"selected\";\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  userType = ProviderUserType;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.providerUserId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editUser\");\n      try {\n        const user = await this.apiService.getProviderUser(this.providerId, this.providerUserId);\n        this.type = user.type;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteUser\");\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new ProviderUserUpdateRequest();\n        request.type = this.type;\n        this.formPromise = this.apiService.putProviderUser(\n          this.providerId,\n          this.providerUserId,\n          request\n        );\n      } else {\n        const request = new ProviderUserInviteRequest();\n        request.emails = this.emails.trim().split(/\\s*,\\s*/);\n        request.type = this.type;\n        this.formPromise = this.apiService.postProviderUserInvite(this.providerId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteProviderUser(this.providerId, this.providerUserId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.name)\n      );\n      this.onDeletedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"people\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == null }\"\n        (click)=\"filter(null)\"\n      >\n        {{ \"all\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"allCount\">{{ allCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Invited }\"\n        (click)=\"filter(userStatusType.Invited)\"\n      >\n        {{ \"invited\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"invitedCount\">{{ invitedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Accepted }\"\n        (click)=\"filter(userStatusType.Accepted)\"\n      >\n        {{ \"accepted\" | i18n }}\n        <span bitBadge badgeType=\"warning\" *ngIf=\"acceptedCount\">{{ acceptedCount }}</span>\n      </button>\n    </div>\n    <div class=\"ml-3\">\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <div class=\"dropdown ml-3\" appListDropdown>\n      <button\n        class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"bulkActionsButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        appA11yTitle=\"{{ 'options' | i18n }}\"\n      >\n        <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\">\n          <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n          {{ \"reinviteSelected\" | i18n }}\n        </button>\n        <button\n          class=\"dropdown-item text-success\"\n          appStopClick\n          (click)=\"bulkConfirm()\"\n          *ngIf=\"showBulkConfirmUsers\"\n        >\n          <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n          {{ \"confirmSelected\" | i18n }}\n        </button>\n        <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\">\n          <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n          {{ \"remove\" | i18n }}\n        </button>\n        <div class=\"dropdown-divider\"></div>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n          <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n          <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"inviteUser\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedUsers : (users | search: searchText:'name':'email':'id')) as searchedUsers\n  \"\n>\n  <p *ngIf=\"!searchedUsers.length\">{{ \"noUsersInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedUsers.length\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'confirmUsers' | i18n }}\"\n      icon=\"bwi bwi-check-circle\"\n      *ngIf=\"showConfirmUsers\"\n    >\n      {{ \"providerUsersNeedConfirmed\" | i18n }}\n    </app-callout>\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let u of searchedUsers\">\n          <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\">\n            <input type=\"checkbox\" [(ngModel)]=\"u.checked\" appStopProp />\n          </td>\n          <td width=\"30\">\n            <bit-avatar [text]=\"u | userName\" [id]=\"u.userId\" size=\"small\"></bit-avatar>\n          </td>\n          <td>\n            <a href=\"#\" appStopClick (click)=\"edit(u)\">{{ u.email }}</a>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{\n              \"invited\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{\n              \"accepted\" | i18n\n            }}</span>\n            <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n          </td>\n          <td>\n            <ng-container *ngIf=\"u.twoFactorEnabled\">\n              <i\n                class=\"bwi bwi-lock\"\n                title=\"{{ 'userUsingTwoStep' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"userUsingTwoStep\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td>\n            <span *ngIf=\"u.type === userType.ProviderAdmin\">{{ \"providerAdmin\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.ServiceUser\">{{ \"serviceUser\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.Custom\">{{ \"custom\" | i18n }}</span>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"reinvite(u)\"\n                  *ngIf=\"u.status === userStatusType.Invited\"\n                >\n                  <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n                  {{ \"resendInvitation\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item text-success\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"confirm(u)\"\n                  *ngIf=\"u.status === userStatusType.Accepted\"\n                >\n                  <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n                  {{ \"confirm\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"groups(u)\"\n                  *ngIf=\"accessGroups\"\n                >\n                  <i class=\"bwi bwi-fw bwi-sitemap\" aria-hidden=\"true\"></i>\n                  {{ \"groups\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"events(u)\"\n                  *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"\n                >\n                  <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                  {{ \"eventLogs\" | i18n }}\n                </a>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n<ng-template #bulkStatusTemplate></ng-template>\n<ng-template #bulkConfirmTemplate></ng-template>\n<ng-template #bulkRemoveTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/provider-user-bulk.request\";\nimport { ProviderUserConfirmRequest } from \"@bitwarden/common/models/request/provider/provider-user-confirm.request\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { ProviderUserBulkResponse } from \"@bitwarden/common/models/response/provider/provider-user-bulk.response\";\nimport { ProviderUserUserDetailsResponse } from \"@bitwarden/common/models/response/provider/provider-user.response\";\nimport { BasePeopleComponent } from \"@bitwarden/web-vault/app/common/base.people.component\";\nimport { BulkStatusComponent } from \"@bitwarden/web-vault/app/organizations/manage/bulk/bulk-status.component\";\nimport { EntityEventsComponent } from \"@bitwarden/web-vault/app/organizations/manage/entity-events.component\";\n\nimport { BulkConfirmComponent } from \"./bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./bulk/bulk-remove.component\";\nimport { UserAddEditComponent } from \"./user-add-edit.component\";\n\n@Component({\n  selector: \"provider-people\",\n  templateUrl: \"people.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PeopleComponent\n  extends BasePeopleComponent<ProviderUserUserDetailsResponse>\n  implements OnInit\n{\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"groupsTemplate\", { read: ViewContainerRef, static: true })\n  groupsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n  @ViewChild(\"bulkStatusTemplate\", { read: ViewContainerRef, static: true })\n  bulkStatusModalRef: ViewContainerRef;\n  @ViewChild(\"bulkConfirmTemplate\", { read: ViewContainerRef, static: true })\n  bulkConfirmModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRemoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkRemoveModalRef: ViewContainerRef;\n\n  userType = ProviderUserType;\n  userStatusType = ProviderUserStatusType;\n  providerId: string;\n  accessEvents = false;\n\n  constructor(\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    i18nService: I18nService,\n    modalService: ModalService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    private router: Router,\n    searchService: SearchService,\n    validationService: ValidationService,\n    logService: LogService,\n    searchPipe: SearchPipe,\n    userNamePipe: UserNamePipe,\n    stateService: StateService,\n    private providerService: ProviderService\n  ) {\n    super(\n      apiService,\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      validationService,\n      modalService,\n      logService,\n      searchPipe,\n      userNamePipe,\n      stateService\n    );\n  }\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n\n      if (!provider.canManageUsers) {\n        this.router.navigate([\"../\"], { relativeTo: this.route });\n        return;\n      }\n\n      this.accessEvents = provider.useEvents;\n\n      await this.load();\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n        if (qParams.viewEvents != null) {\n          const user = this.users.filter((u) => u.id === qParams.viewEvents);\n          if (user.length > 0 && user[0].status === ProviderUserStatusType.Confirmed) {\n            this.events(user[0]);\n          }\n        }\n      });\n    });\n  }\n\n  getUsers(): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    return this.apiService.getProviderUsers(this.providerId);\n  }\n\n  deleteUser(id: string): Promise<any> {\n    return this.apiService.deleteProviderUser(this.providerId, id);\n  }\n\n  revokeUser(id: string): Promise<any> {\n    // Not implemented.\n    return null;\n  }\n\n  restoreUser(id: string): Promise<any> {\n    // Not implemented.\n    return null;\n  }\n\n  reinviteUser(id: string): Promise<any> {\n    return this.apiService.postProviderUserReinvite(this.providerId, id);\n  }\n\n  async confirmUser(user: ProviderUserUserDetailsResponse, publicKey: Uint8Array): Promise<any> {\n    const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n    const key = await this.cryptoService.rsaEncrypt(providerKey.key, publicKey.buffer);\n    const request = new ProviderUserConfirmRequest();\n    request.key = key.encryptedString;\n    await this.apiService.postProviderUserConfirm(this.providerId, user.id, request);\n  }\n\n  async edit(user: ProviderUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.providerId = this.providerId;\n        comp.providerUserId = user != null ? user.id : null;\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedUser.subscribe(() => {\n          modal.close();\n          this.removeUser(user);\n        });\n      }\n    );\n  }\n\n  async events(user: ProviderUserUserDetailsResponse) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = this.userNamePipe.transform(user);\n      comp.providerId = this.providerId;\n      comp.entityId = user.id;\n      comp.showUser = false;\n      comp.entity = \"user\";\n    });\n  }\n\n  async bulkRemove() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRemoveComponent,\n      this.bulkRemoveModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkReinvite() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const users = this.getCheckedUsers();\n    const filteredUsers = users.filter((u) => u.status === ProviderUserStatusType.Invited);\n\n    if (filteredUsers.length <= 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"noSelectedUsersApplicable\")\n      );\n      return;\n    }\n\n    try {\n      const request = new ProviderUserBulkRequest(filteredUsers.map((user) => user.id));\n      const response = this.apiService.postManyProviderUserReinvite(this.providerId, request);\n      this.showBulkStatus(\n        users,\n        filteredUsers,\n        response,\n        this.i18nService.t(\"bulkReinviteMessage\")\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkConfirm() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkConfirmComponent,\n      this.bulkConfirmModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  private async showBulkStatus(\n    users: ProviderUserUserDetailsResponse[],\n    filteredUsers: ProviderUserUserDetailsResponse[],\n    request: Promise<ListResponse<ProviderUserBulkResponse>>,\n    successfullMessage: string\n  ) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      BulkStatusComponent,\n      this.bulkStatusModalRef,\n      (comp) => {\n        comp.loading = true;\n      }\n    );\n\n    // Workaround to handle closing the modal shortly after it has been opened\n    let close = false;\n    modal.onShown.subscribe(() => {\n      if (close) {\n        modal.close();\n      }\n    });\n\n    try {\n      const response = await request;\n\n      if (modal) {\n        const keyedErrors: any = response.data\n          .filter((r) => r.error !== \"\")\n          .reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n        const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n        childComponent.users = users.map((user) => {\n          let message = keyedErrors[user.id] ?? successfullMessage;\n          // eslint-disable-next-line\n          if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n            message = this.i18nService.t(\"bulkFilteredMessage\");\n          }\n\n          return {\n            user: user,\n            error: keyedErrors.hasOwnProperty(user.id), // eslint-disable-line\n            message: message,\n          };\n        });\n        childComponent.loading = false;\n      }\n    } catch {\n      close = true;\n      modal.close();\n    }\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav\" *ngIf=\"provider\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <div class=\"my-auto d-flex align-items-center pl-1\">\n        <bit-avatar [text]=\"provider.name\" [id]=\"provider.id\"></bit-avatar>\n        <div class=\"org-name ml-3\">\n          <span>{{ provider.name }}</span>\n          <small class=\"text-muted\">{{ \"provider\" | i18n }}</small>\n        </div>\n        <div class=\"ml-3 card border-danger text-danger bg-transparent\" *ngIf=\"!provider.enabled\">\n          <div class=\"card-body py-2\">\n            <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n            {{ \"providerIsDisabled\" | i18n }}\n          </div>\n        </div>\n      </div>\n      <ul class=\"nav nav-tabs\" *ngIf=\"showMenuBar\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"clients\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i>\n            {{ \"clients\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showManageTab\">\n          <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-sliders\" aria-hidden=\"true\"></i>\n            {{ \"manage\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showSettingsTab\">\n          <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-cogs\" aria-hidden=\"true\"></i>\n            {{ \"settings\" | i18n }}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n</div>\n<app-footer></app-footer>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"providers-layout\",\n  templateUrl: \"providers-layout.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ProvidersLayoutComponent {\n  provider: Provider;\n  private providerId: string;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    this.provider = await this.providerService.get(this.providerId);\n  }\n\n  get showMenuBar() {\n    return this.showManageTab || this.showSettingsTab;\n  }\n\n  get showManageTab() {\n    return this.provider.canManageUsers || this.provider.canAccessEventLogs;\n  }\n\n  get showSettingsTab() {\n    return this.provider.isProviderAdmin;\n  }\n\n  get manageRoute(): string {\n    switch (true) {\n      case this.provider.canManageUsers:\n        return \"manage/people\";\n      case this.provider.canAccessEventLogs:\n        return \"manage/events\";\n    }\n  }\n}\n","export class ProviderUpdateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myProvider\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"provider && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"provider.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"provider.billingEmail\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <bit-avatar [text]=\"provider.name\" [id]=\"provider.id\" size=\"large\"></bit-avatar>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProviderUpdateRequest } from \"@bitwarden/common/models/request/provider/provider-update.request\";\nimport { ProviderResponse } from \"@bitwarden/common/models/response/provider/provider.response\";\n\n@Component({\n  selector: \"provider-account\",\n  templateUrl: \"account.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccountComponent {\n  selfHosted = false;\n  loading = true;\n  provider: ProviderResponse;\n  formPromise: Promise<any>;\n  taxFormPromise: Promise<any>;\n\n  private providerId: string;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      try {\n        this.provider = await this.apiService.getProvider(this.providerId);\n      } catch (e) {\n        this.logService.error(`Handled exception: ${e}`);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new ProviderUpdateRequest();\n      request.name = this.provider.name;\n      request.businessName = this.provider.businessName;\n      request.billingEmail = this.provider.billingEmail;\n\n      this.formPromise = this.apiService.putProvider(this.providerId, request).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerUpdated\"));\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\n\n@Component({\n  selector: \"provider-settings\",\n  templateUrl: \"settings.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SettingsComponent {\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      await this.providerService.get(params.providerId);\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myProvider\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setupProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"setupProviderLoginDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Params } from \"@angular/router\";\n\nimport { BaseAcceptComponent } from \"@bitwarden/web-vault/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-setup-provider\",\n  templateUrl: \"setup-provider.component.html\",\n})\nexport class SetupProviderComponent extends BaseAcceptComponent {\n  failedShortMessage = \"inviteAcceptFailedShort\";\n  failedMessage = \"inviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"email\", \"token\"];\n\n  async authedHandler(qParams: Params) {\n    this.router.navigate([\"/providers/setup\"], { queryParams: qParams });\n  }\n\n  async unauthedHandler(qParams: Params) {\n    // Empty\n  }\n}\n","export class ProviderSetupRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  token: string;\n  key: string;\n}\n","<app-navbar></app-navbar>\n<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"setupProvider\" | i18n }}</h1>\n  </div>\n  <p>{{ \"setupProviderDesc\" | i18n }}</p>\n\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"loading\">\n    <h2 class=\"mt-5\">{{ \"generalInformation\" | i18n }}</h2>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required />\n      </div>\n      <div class=\"form-group col-6\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"billingEmail\"\n          required\n        />\n      </div>\n    </div>\n\n    <div class=\"mt-4\">\n      <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"submit\" | i18n }}</span>\n      </button>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n        {{ \"cancel\" | i18n }}\n      </button>\n    </div>\n  </form>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { ProviderSetupRequest } from \"@bitwarden/common/models/request/provider/provider-setup.request\";\n\n@Component({\n  selector: \"provider-setup\",\n  templateUrl: \"setup.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SetupComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  formPromise: Promise<any>;\n\n  providerId: string;\n  token: string;\n  name: string;\n  billingEmail: string;\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService\n  ) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.providerId == null || qParams.email == null || qParams.token == null;\n\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"emergencyInviteAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.providerId = qParams.providerId;\n      this.token = qParams.token;\n\n      // Check if provider exists, redirect if it does\n      try {\n        const provider = await this.apiService.getProvider(this.providerId);\n        if (provider.name != null) {\n          this.router.navigate([\"/providers\", provider.id], { replaceUrl: true });\n        }\n      } catch (e) {\n        this.validationService.showError(e);\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit();\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  async doSubmit() {\n    try {\n      const shareKey = await this.cryptoService.makeShareKey();\n      const key = shareKey[0].encryptedString;\n\n      const request = new ProviderSetupRequest();\n      request.name = this.name;\n      request.billingEmail = this.billingEmail;\n      request.token = this.token;\n      request.key = key;\n\n      const provider = await this.apiService.postProviderSetup(this.providerId, request);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerSetup\"));\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/providers\", provider.id]);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\nimport { FrontendLayoutComponent } from \"@bitwarden/web-vault/app/layouts/frontend-layout.component\";\nimport { ProvidersComponent } from \"@bitwarden/web-vault/app/providers/providers.component\";\n\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\nimport { ProviderPermissionsGuard } from \"./guards/provider-permissions.guard\";\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    component: ProvidersComponent,\n  },\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    children: [\n      {\n        path: \"setup-provider\",\n        component: SetupProviderComponent,\n        data: { titleId: \"setupProvider\" },\n      },\n      {\n        path: \"accept-provider\",\n        component: AcceptProviderComponent,\n        data: { titleId: \"acceptProvider\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: \"setup\",\n        component: SetupComponent,\n      },\n      {\n        path: \":providerId\",\n        component: ProvidersLayoutComponent,\n        canActivate: [ProviderPermissionsGuard],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"clients\" },\n          { path: \"clients/create\", component: CreateOrganizationComponent },\n          { path: \"clients\", component: ClientsComponent, data: { titleId: \"clients\" } },\n          {\n            path: \"manage\",\n            component: ManageComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"people\",\n              },\n              {\n                path: \"people\",\n                component: PeopleComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"people\",\n                  providerPermissions: (provider: Provider) => provider.canManageUsers,\n                },\n              },\n              {\n                path: \"events\",\n                component: EventsComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"eventLogs\",\n                  providerPermissions: (provider: Provider) => provider.canAccessEventLogs,\n                },\n              },\n            ],\n          },\n          {\n            path: \"settings\",\n            component: SettingsComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"account\",\n              },\n              {\n                path: \"account\",\n                component: AccountComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"myProvider\",\n                  providerPermissions: (provider: Provider) => provider.isProviderAdmin,\n                },\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProvidersRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { ComponentFactoryResolver, NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { OssModule } from \"@bitwarden/web-vault/app/oss.module\";\n\nimport { AddOrganizationComponent } from \"./clients/add-organization.component\";\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\nimport { ProviderPermissionsGuard } from \"./guards/provider-permissions.guard\";\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { BulkConfirmComponent } from \"./manage/bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./manage/bulk/bulk-remove.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { UserAddEditComponent } from \"./manage/user-add-edit.component\";\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { ProvidersRoutingModule } from \"./providers-routing.module\";\nimport { WebProviderService } from \"./services/webProvider.service\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, OssModule, JslibModule, ProvidersRoutingModule],\n  declarations: [\n    AcceptProviderComponent,\n    AccountComponent,\n    AddOrganizationComponent,\n    BulkConfirmComponent,\n    BulkRemoveComponent,\n    ClientsComponent,\n    CreateOrganizationComponent,\n    EventsComponent,\n    ManageComponent,\n    PeopleComponent,\n    ProvidersLayoutComponent,\n    SettingsComponent,\n    SetupComponent,\n    SetupProviderComponent,\n    UserAddEditComponent,\n  ],\n  providers: [WebProviderService, ProviderPermissionsGuard],\n})\nexport class ProvidersModule {\n  constructor(modalService: ModalService, componentFactoryResolver: ComponentFactoryResolver) {\n    modalService.registerComponentFactoryResolver(\n      AddOrganizationComponent,\n      componentFactoryResolver\n    );\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { ProvidersModule } from \"./providers/providers.module\";\n\nconst routes: Routes = [\n  {\n    path: \"providers\",\n    loadChildren: () => ProvidersModule,\n  },\n  {\n    path: \"sm\",\n    loadChildren: async () => (await import(\"./sm/sm.module\")).SecretsManagerModule,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class DisableSendPolicy extends BasePolicy {\n  name = \"disableSend\";\n  description = \"disableSendPolicyDesc\";\n  type = PolicyType.DisableSend;\n  component = DisableSendPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-send\",\n  templateUrl: \"disable-send.component.html\",\n})\nexport class DisableSendPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"disableSendExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minComplexity\">{{ \"minComplexityScore\" | i18n }}</label>\n      <select\n        id=\"minComplexity\"\n        name=\"minComplexity\"\n        formControlName=\"minComplexity\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of passwordScores\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        min=\"8\"\n        name=\"minLength\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireUpper\"\n      name=\"requireUpper\"\n      formControlName=\"requireUpper\"\n    />\n    <label class=\"form-check-label\" for=\"requireUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireLower\"\n      name=\"requireLower\"\n      formControlName=\"requireLower\"\n    />\n    <label class=\"form-check-label\" for=\"requireLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireNumbers\"\n      name=\"requireNumbers\"\n      formControlName=\"requireNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"requireNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireSpecial\"\n      name=\"requireSpecial\"\n      formControlName=\"requireSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"requireSpecial\">!@#$%^&amp;*</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class MasterPasswordPolicy extends BasePolicy {\n  name = \"masterPassPolicyTitle\";\n  description = \"masterPassPolicyDesc\";\n  type = PolicyType.MasterPassword;\n  component = MasterPasswordPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-master-password\",\n  templateUrl: \"master-password.component.html\",\n})\nexport class MasterPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    minComplexity: [null],\n    minLength: [null],\n    requireUpper: [null],\n    requireLower: [null],\n    requireNumbers: [null],\n    requireSpecial: [null],\n  });\n\n  passwordScores: { name: string; value: number }[];\n  showKeyConnectorInfo = false;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    i18nService: I18nService,\n    private organizationService: OrganizationService\n  ) {\n    super();\n\n    this.passwordScores = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"weak\") + \" (0)\", value: 0 },\n      { name: i18nService.t(\"weak\") + \" (1)\", value: 1 },\n      { name: i18nService.t(\"weak\") + \" (2)\", value: 2 },\n      { name: i18nService.t(\"good\") + \" (3)\", value: 3 },\n      { name: i18nService.t(\"strong\") + \" (4)\", value: 4 },\n    ];\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group mb-0\">\n      <label for=\"defaultType\">{{ \"defaultType\" | i18n }}</label>\n      <select\n        id=\"defaultType\"\n        name=\"defaultType\"\n        formControlName=\"defaultType\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of defaultTypes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n  </div>\n  <h3 class=\"mt-4\">{{ \"password\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minLength\"\n        min=\"5\"\n        max=\"128\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumbers\">{{ \"minNumbers\" | i18n }}</label>\n      <input\n        id=\"minNumbers\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumbers\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minNumbers\"\n      />\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minSpecial\">{{ \"minSpecial\" | i18n }}</label>\n      <input\n        id=\"minSpecial\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minSpecial\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minSpecial\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useUpper\"\n      formControlName=\"useUpper\"\n      name=\"useUpper\"\n    />\n    <label class=\"form-check-label\" for=\"useUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useLower\"\n      name=\"useLower\"\n      formControlName=\"useLower\"\n    />\n    <label class=\"form-check-label\" for=\"useLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useNumbers\"\n      name=\"useNumbers\"\n      formControlName=\"useNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"useNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useSpecial\"\n      name=\"useSpecial\"\n      formControlName=\"useSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"useSpecial\">!@#$%^&amp;*</label>\n  </div>\n  <h3 class=\"mt-4\">{{ \"passphrase\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumberWords\">{{ \"minimumNumberOfWords\" | i18n }}</label>\n      <input\n        id=\"minNumberWords\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumberWords\"\n        min=\"3\"\n        max=\"20\"\n        formControlName=\"minNumberWords\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"capitalize\"\n      name=\"capitalize\"\n      formControlName=\"capitalize\"\n    />\n    <label class=\"form-check-label\" for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"includeNumber\"\n      name=\"includeNumber\"\n      formControlName=\"includeNumber\"\n    />\n    <label class=\"form-check-label\" for=\"includeNumber\">{{ \"includeNumber\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PasswordGeneratorPolicy extends BasePolicy {\n  name = \"passwordGenerator\";\n  description = \"passwordGeneratorPolicyDesc\";\n  type = PolicyType.PasswordGenerator;\n  component = PasswordGeneratorPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-password-generator\",\n  templateUrl: \"password-generator.component.html\",\n})\nexport class PasswordGeneratorPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    defaultType: [null],\n    minLength: [null],\n    useUpper: [null],\n    useLower: [null],\n    useNumbers: [null],\n    useSpecial: [null],\n    minNumbers: [null],\n    minSpecial: [null],\n    minNumberWords: [null],\n    capitalize: [null],\n    includeNumber: [null],\n  });\n\n  defaultTypes: { name: string; value: string }[];\n\n  constructor(private formBuilder: UntypedFormBuilder, i18nService: I18nService) {\n    super();\n\n    this.defaultTypes = [\n      { name: i18nService.t(\"userPreference\"), value: null },\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PersonalOwnershipPolicy extends BasePolicy {\n  name = \"personalOwnership\";\n  description = \"personalOwnershipPolicyDesc\";\n  type = PolicyType.PersonalOwnership;\n  component = PersonalOwnershipPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-personal-ownership\",\n  templateUrl: \"personal-ownership.component.html\",\n})\nexport class PersonalOwnershipPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"personalOwnershipExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class RequireSsoPolicy extends BasePolicy {\n  name = \"requireSso\";\n  description = \"requireSsoPolicyDesc\";\n  type = PolicyType.RequireSso;\n  component = RequireSsoPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useSso;\n  }\n}\n\n@Component({\n  selector: \"policy-require-sso\",\n  templateUrl: \"require-sso.component.html\",\n})\nexport class RequireSsoPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n<app-callout type=\"warning\">\n  {{ \"requireSsoExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<app-callout type=\"warning\">\n  {{ \"resetPasswordPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"resetPasswordPolicyAutoEnroll\" | i18n }}</h3>\n  <p>{{ \"resetPasswordPolicyAutoEnrollDescription\" | i18n }}</p>\n  <app-callout type=\"warning\">\n    {{ \"resetPasswordPolicyAutoEnrollWarning\" | i18n }}\n  </app-callout>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"autoEnrollEnabled\"\n      name=\"AutoEnrollEnabled\"\n      formControlName=\"autoEnrollEnabled\"\n    />\n    <label class=\"form-check-label\" for=\"autoEnrollEnabled\">\n      {{ \"resetPasswordPolicyAutoEnrollCheckbox\" | i18n }}\n    </label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class ResetPasswordPolicy extends BasePolicy {\n  name = \"resetPasswordPolicy\";\n  description = \"resetPasswordPolicyDescription\";\n  type = PolicyType.ResetPassword;\n  component = ResetPasswordPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useResetPassword;\n  }\n}\n\n@Component({\n  selector: \"policy-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    autoEnrollEnabled: false,\n  });\n\n  defaultTypes: { name: string; value: string }[];\n  showKeyConnectorInfo = false;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private organizationService: OrganizationService\n  ) {\n    super();\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SendOptionsPolicy extends BasePolicy {\n  name = \"sendOptions\";\n  description = \"sendOptionsPolicyDesc\";\n  type = PolicyType.SendOptions;\n  component = SendOptionsPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-send-options\",\n  templateUrl: \"send-options.component.html\",\n})\nexport class SendOptionsPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    disableHideEmail: false,\n  });\n\n  constructor(private formBuilder: UntypedFormBuilder) {\n    super();\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"sendOptionsExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"disableHideEmail\"\n      name=\"DisableHideEmail\"\n      formControlName=\"disableHideEmail\"\n    />\n    <label class=\"form-check-label\" for=\"disableHideEmail\">{{ \"disableHideEmail\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SingleOrgPolicy extends BasePolicy {\n  name = \"singleOrg\";\n  description = \"singleOrgDesc\";\n  type = PolicyType.SingleOrg;\n  component = SingleOrgPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-single-org\",\n  templateUrl: \"single-org.component.html\",\n})\nexport class SingleOrgPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    if (!this.enabled.value) {\n      if (policiesEnabledMap.get(PolicyType.RequireSso) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"requireSso\"))\n        );\n      }\n\n      if (policiesEnabledMap.get(PolicyType.MaximumVaultTimeout) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"maximumVaultTimeoutLabel\"))\n        );\n      }\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"singleOrgPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class TwoFactorAuthenticationPolicy extends BasePolicy {\n  name = \"twoStepLoginPolicyTitle\";\n  description = \"twoStepLoginPolicyDesc\";\n  type = PolicyType.TwoFactorAuthentication;\n  component = TwoFactorAuthenticationPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-two-factor-authentication\",\n  templateUrl: \"two-factor-authentication.component.html\",\n})\nexport class TwoFactorAuthenticationPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"twoStepLoginPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { DOCUMENT } from \"@angular/common\";\nimport { Component, Inject, NgZone, OnDestroy, OnInit, SecurityContext } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport * as jq from \"jquery\";\nimport { IndividualConfig, ToastrService } from \"ngx-toastr\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport Swal from \"sweetalert2\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventService } from \"@bitwarden/common/abstractions/event.service\";\nimport { InternalFolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SettingsService } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\n\nimport { PolicyListService, RouterService } from \"./core\";\nimport { DisableSendPolicy } from \"./organizations/policies/disable-send.component\";\nimport { MasterPasswordPolicy } from \"./organizations/policies/master-password.component\";\nimport { PasswordGeneratorPolicy } from \"./organizations/policies/password-generator.component\";\nimport { PersonalOwnershipPolicy } from \"./organizations/policies/personal-ownership.component\";\nimport { RequireSsoPolicy } from \"./organizations/policies/require-sso.component\";\nimport { ResetPasswordPolicy } from \"./organizations/policies/reset-password.component\";\nimport { SendOptionsPolicy } from \"./organizations/policies/send-options.component\";\nimport { SingleOrgPolicy } from \"./organizations/policies/single-org.component\";\nimport { TwoFactorAuthenticationPolicy } from \"./organizations/policies/two-factor-authentication.component\";\n\nconst BroadcasterSubscriptionId = \"AppComponent\";\nconst IdleTimeout = 60000 * 10; // 10 minutes\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"app.component.html\",\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  private lastActivity: number = null;\n  private idleTimer: number = null;\n  private isIdle = false;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private broadcasterService: BroadcasterService,\n    private folderService: InternalFolderService,\n    private settingsService: SettingsService,\n    private syncService: SyncService,\n    private passwordGenerationService: PasswordGenerationService,\n    private cipherService: CipherService,\n    private authService: AuthService,\n    private router: Router,\n    private toastrService: ToastrService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    private vaultTimeoutService: VaultTimeoutService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private sanitizer: DomSanitizer,\n    private searchService: SearchService,\n    private notificationsService: NotificationsService,\n    private routerService: RouterService,\n    private stateService: StateService,\n    private eventService: EventService,\n    private policyService: InternalPolicyService,\n    protected policyListService: PolicyListService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  ngOnInit() {\n    this.i18nService.locale$.pipe(takeUntil(this.destroy$)).subscribe((locale) => {\n      this.document.documentElement.lang = locale;\n    });\n\n    this.ngZone.runOutsideAngular(() => {\n      window.onmousemove = () => this.recordActivity();\n      window.onmousedown = () => this.recordActivity();\n      window.ontouchstart = () => this.recordActivity();\n      window.onclick = () => this.recordActivity();\n      window.onscroll = () => this.recordActivity();\n      window.onkeypress = () => this.recordActivity();\n    });\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"loggedIn\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"loggedOut\":\n            this.routerService.setPreviousUrl(null);\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"unlocked\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"authBlocked\":\n            this.routerService.setPreviousUrl(message.url);\n            this.router.navigate([\"/\"]);\n            break;\n          case \"logout\":\n            this.logOut(!!message.expired);\n            break;\n          case \"lockVault\":\n            await this.vaultTimeoutService.lock();\n            break;\n          case \"locked\":\n            this.notificationsService.updateConnection(false);\n            this.router.navigate([\"lock\"]);\n            break;\n          case \"lockedUrl\":\n            this.routerService.setPreviousUrl(message.url);\n            break;\n          case \"syncStarted\":\n            break;\n          case \"syncCompleted\":\n            break;\n          case \"upgradeOrganization\": {\n            const upgradeConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"upgradeOrganizationDesc\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (upgradeConfirmed) {\n              this.router.navigate([\n                \"organizations\",\n                message.organizationId,\n                \"settings\",\n                \"billing\",\n              ]);\n            }\n            break;\n          }\n          case \"premiumRequired\": {\n            const premiumConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"premiumRequiredDesc\"),\n              this.i18nService.t(\"premiumRequired\"),\n              this.i18nService.t(\"upgrade\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (premiumConfirmed) {\n              this.router.navigate([\"settings/subscription/premium\"]);\n            }\n            break;\n          }\n          case \"emailVerificationRequired\": {\n            const emailVerificationConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"emailVerificationRequiredDesc\"),\n              this.i18nService.t(\"emailVerificationRequired\"),\n              this.i18nService.t(\"learnMore\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (emailVerificationConfirmed) {\n              this.platformUtilsService.launchUri(\n                \"https://bitwarden.com/help/create-bitwarden-account/\"\n              );\n            }\n            break;\n          }\n          case \"showToast\":\n            this.showToast(message);\n            break;\n          case \"setFullWidth\":\n            this.setFullWidth();\n            break;\n          case \"convertAccountToKeyConnector\":\n            this.router.navigate([\"/remove-password\"]);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n\n    this.router.events.pipe(takeUntil(this.destroy$)).subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        const modals = Array.from(document.querySelectorAll(\".modal\"));\n        for (const modal of modals) {\n          (jq(modal) as any).modal(\"hide\");\n        }\n\n        if (document.querySelector(\".swal-modal\") != null) {\n          Swal.close(undefined);\n        }\n      }\n    });\n\n    this.policyListService.addPolicies([\n      new TwoFactorAuthenticationPolicy(),\n      new MasterPasswordPolicy(),\n      new ResetPasswordPolicy(),\n      new PasswordGeneratorPolicy(),\n      new SingleOrgPolicy(),\n      new RequireSsoPolicy(),\n      new PersonalOwnershipPolicy(),\n      new DisableSendPolicy(),\n      new SendOptionsPolicy(),\n    ]);\n\n    this.setFullWidth();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private async logOut(expired: boolean) {\n    await this.eventService.uploadEvents();\n    const userId = await this.stateService.getUserId();\n    await Promise.all([\n      this.eventService.clearEvents(),\n      this.syncService.setLastSync(new Date(0)),\n      this.cryptoService.clearKeys(),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(),\n      this.keyConnectorService.clear(),\n    ]);\n\n    this.searchService.clearIndex();\n    this.authService.logOut(async () => {\n      if (expired) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          this.i18nService.t(\"loggedOut\"),\n          this.i18nService.t(\"loginExpired\")\n        );\n      }\n\n      await this.stateService.clean({ userId: userId });\n      Swal.close();\n      this.router.navigate([\"/\"]);\n    });\n  }\n\n  private async recordActivity() {\n    const now = new Date().getTime();\n    if (this.lastActivity != null && now - this.lastActivity < 250) {\n      return;\n    }\n\n    this.lastActivity = now;\n    this.stateService.setLastActive(now);\n    // Idle states\n    if (this.isIdle) {\n      this.isIdle = false;\n      this.idleStateChanged();\n    }\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idleTimer = window.setTimeout(() => {\n      if (!this.isIdle) {\n        this.isIdle = true;\n        this.idleStateChanged();\n      }\n    }, IdleTimeout);\n  }\n\n  private showToast(msg: any) {\n    let message = \"\";\n\n    const options: Partial<IndividualConfig> = {};\n\n    if (typeof msg.text === \"string\") {\n      message = msg.text;\n    } else if (msg.text.length === 1) {\n      message = msg.text[0];\n    } else {\n      msg.text.forEach(\n        (t: string) =>\n          (message += \"<p>\" + this.sanitizer.sanitize(SecurityContext.HTML, t) + \"</p>\")\n      );\n      options.enableHtml = true;\n    }\n    if (msg.options != null) {\n      if (msg.options.trustedHtml === true) {\n        options.enableHtml = true;\n      }\n      if (msg.options.timeout != null && msg.options.timeout > 0) {\n        options.timeOut = msg.options.timeout;\n      }\n    }\n\n    this.toastrService.show(message, msg.title, options, \"toast-\" + msg.type);\n  }\n\n  private idleStateChanged() {\n    if (this.isIdle) {\n      this.notificationsService.disconnectFromInactivity();\n    } else {\n      this.notificationsService.reconnectFromActivity();\n    }\n  }\n\n  private async setFullWidth() {\n    const enableFullWidth = await this.stateService.getEnableFullWidth();\n    if (enableFullWidth) {\n      document.body.classList.add(\"full-width\");\n    } else {\n      document.body.classList.remove(\"full-width\");\n    }\n  }\n}\n","<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport {\n  BasePolicy,\n  BasePolicyComponent,\n} from \"@bitwarden/web-vault/app/organizations/policies/base-policy.component\";\n\nexport class DisablePersonalVaultExportPolicy extends BasePolicy {\n  name = \"disablePersonalVaultExport\";\n  description = \"disablePersonalVaultExportDesc\";\n  type = PolicyType.DisablePersonalVaultExport;\n  component = DisablePersonalVaultExportPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-personal-vault-export\",\n  templateUrl: \"disable-personal-vault-export.component.html\",\n})\nexport class DisablePersonalVaultExportPolicyComponent extends BasePolicyComponent {}\n","<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\nimport {\n  BasePolicy,\n  BasePolicyComponent,\n} from \"@bitwarden/web-vault/app/organizations/policies/base-policy.component\";\n\nexport class MaximumVaultTimeoutPolicy extends BasePolicy {\n  name = \"maximumVaultTimeout\";\n  description = \"maximumVaultTimeoutDesc\";\n  type = PolicyType.MaximumVaultTimeout;\n  component = MaximumVaultTimeoutPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-maximum-timeout\",\n  templateUrl: \"maximum-vault-timeout.component.html\",\n})\nexport class MaximumVaultTimeoutPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    hours: [null],\n    minutes: [null],\n  });\n\n  constructor(private formBuilder: UntypedFormBuilder, private i18nService: I18nService) {\n    super();\n  }\n\n  loadData() {\n    const minutes = this.policyResponse.data?.minutes;\n\n    if (minutes == null) {\n      return;\n    }\n\n    this.data.patchValue({\n      hours: Math.floor(minutes / 60),\n      minutes: minutes % 60,\n    });\n  }\n\n  buildRequestData() {\n    if (this.data.value.hours == null && this.data.value.minutes == null) {\n      return null;\n    }\n\n    return {\n      minutes: this.data.value.hours * 60 + this.data.value.minutes,\n    };\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    const data = this.buildRequestData();\n    if (data?.minutes == null || data?.minutes <= 0) {\n      throw new Error(this.i18nService.t(\"invalidMaximumVaultTimeout\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <label for=\"hours\">{{ \"maximumVaultTimeoutLabel\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AppComponent as BaseAppComponent } from \"@bitwarden/web-vault/app/app.component\";\n\nimport { DisablePersonalVaultExportPolicy } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicy } from \"./policies/maximum-vault-timeout.component\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"../../../../apps/web/src/app/app.component.html\",\n})\nexport class AppComponent extends BaseAppComponent {\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.policyListService.addPolicies([\n      new MaximumVaultTimeoutPolicy(),\n      new DisablePersonalVaultExportPolicy(),\n    ]);\n  }\n}\n","import { ScimProviderType } from \"../../enums/scimProviderType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class ScimConfigApi extends BaseResponse {\n  enabled: boolean;\n  scimProvider: ScimProviderType;\n\n  constructor(data: any) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.scimProvider = this.getResponseProperty(\"ScimProvider\");\n  }\n}\n","import { ScimProviderType } from \"../../enums/scimProviderType\";\n\nexport class ScimConfigRequest {\n  constructor(private enabled: boolean, private scimProvider: ScimProviderType = null) {}\n}\n","<div class=\"page-header\">\n  <h1>{{ \"scim\" | i18n }}</h1>\n</div>\n\n<p>{{ \"scimDescription\" | i18n }}</p>\n\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  [formGroup]=\"formData\"\n  *ngIf=\"!loading\"\n>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n        aria-describedby=\"scimEnabledCheckboxDescHelpText\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"scimEnabledCheckboxDesc\" | i18n }}</label>\n      <div id=\"scimEnabledCheckboxDescHelpText\">\n        <small class=\"form-text text-muted\">{{ \"scimEnabledCheckboxDescHelpText\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n\n  <bit-form-field *ngIf=\"showScimSettings\">\n    <bit-label>{{ \"scimUrl\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"endpointUrl\" />\n    <button\n      type=\"button\"\n      bitSuffix\n      bitButton\n      (click)=\"copyScimUrl()\"\n      [appA11yTitle]=\"'copyScimUrl' | i18n\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-clone\"></i>\n    </button>\n  </bit-form-field>\n\n  <bit-form-field *ngIf=\"showScimSettings\">\n    <bit-label>{{ \"scimApiKey\" | i18n }}</bit-label>\n    <input\n      bitInput\n      type=\"{{ showScimKey ? 'text' : 'password' }}\"\n      formControlName=\"clientSecret\"\n      id=\"clientSecret\"\n    />\n    <ng-container>\n      <button type=\"button\" bitSuffix bitButton (click)=\"toggleScimKey()\">\n        <i\n          aria-hidden=\"true\"\n          class=\"bwi bwi-lg bwi-eye\"\n          [ngClass]=\"{ 'bwi-eye': !showScimKey, 'bwi-eye-slash': showScimKey }\"\n          [appA11yTitle]=\"'toggleVisibility' | i18n\"\n        ></i>\n      </button>\n    </ng-container>\n    <ng-container #rotateButton [appApiAction]=\"rotatePromise\">\n      <button\n        [disabled]=\"rotateButton.loading\"\n        type=\"button\"\n        bitSuffix\n        bitButton\n        (click)=\"rotateScimKey()\"\n        [appA11yTitle]=\"'rotateScimKey' | i18n\"\n      >\n        <i\n          aria-hidden=\"true\"\n          class=\"bwi bwi-lg bwi-generate\"\n          [ngClass]=\"{ 'bwi-spin': rotateButton.loading }\"\n        ></i>\n      </button>\n    </ng-container>\n    <button\n      type=\"button\"\n      bitSuffix\n      bitButton\n      (click)=\"copyScimKey()\"\n      [appA11yTitle]=\"'copyScimKey' | i18n\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-lg bwi-clone\"></i>\n    </button>\n    <bit-hint>{{ \"scimApiKeyHelperText\" | i18n }}</bit-hint>\n  </bit-form-field>\n\n  <button\n    type=\"submit\"\n    buttonType=\"primary\"\n    bitButton\n    [loading]=\"form.loading\"\n    [disabled]=\"form.loading\"\n  >\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormBuilder, FormControl } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/enums/organizationApiKeyType\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/enums/organizationConnectionType\";\nimport { ScimConfigApi } from \"@bitwarden/common/models/api/scim-config.api\";\nimport { OrganizationApiKeyRequest } from \"@bitwarden/common/models/request/organization-api-key.request\";\nimport { OrganizationConnectionRequest } from \"@bitwarden/common/models/request/organization-connection.request\";\nimport { ScimConfigRequest } from \"@bitwarden/common/models/request/scim-config.request\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/api-key.response\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/models/response/organization-connection.response\";\n\n@Component({\n  selector: \"app-org-manage-scim\",\n  templateUrl: \"scim.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ScimComponent implements OnInit {\n  loading = true;\n  organizationId: string;\n  existingConnectionId: string;\n  formPromise: Promise<OrganizationConnectionResponse<ScimConfigApi>>;\n  rotatePromise: Promise<ApiKeyResponse>;\n  enabled = new FormControl(false);\n  showScimSettings = false;\n  showScimKey = false;\n\n  formData = this.formBuilder.group({\n    endpointUrl: new FormControl({ value: \"\", disabled: true }),\n    clientSecret: new FormControl({ value: \"\", disabled: true }),\n  });\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private environmentService: EnvironmentService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    const connection = await this.apiService.getOrganizationConnection(\n      this.organizationId,\n      OrganizationConnectionType.Scim,\n      ScimConfigApi\n    );\n    await this.setConnectionFormValues(connection);\n  }\n\n  async loadApiKey() {\n    const apiKeyRequest = new OrganizationApiKeyRequest();\n    apiKeyRequest.type = OrganizationApiKeyType.Scim;\n    apiKeyRequest.masterPasswordHash = \"N/A\";\n    const apiKeyResponse = await this.organizationApiService.getOrCreateApiKey(\n      this.organizationId,\n      apiKeyRequest\n    );\n    this.formData.setValue({\n      endpointUrl: this.getScimEndpointUrl(),\n      clientSecret: apiKeyResponse.apiKey,\n    });\n  }\n\n  async copyScimUrl() {\n    this.platformUtilsService.copyToClipboard(this.getScimEndpointUrl());\n  }\n\n  async rotateScimKey() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"rotateScimKeyWarning\"),\n      this.i18nService.t(\"rotateScimKey\"),\n      this.i18nService.t(\"rotateKey\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    const request = new OrganizationApiKeyRequest();\n    request.type = OrganizationApiKeyType.Scim;\n    request.masterPasswordHash = \"N/A\";\n\n    this.rotatePromise = this.organizationApiService.rotateApiKey(this.organizationId, request);\n\n    try {\n      const response = await this.rotatePromise;\n      this.formData.setValue({\n        endpointUrl: this.getScimEndpointUrl(),\n        clientSecret: response.apiKey,\n      });\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"scimApiKeyRotated\"));\n    } catch {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.rotatePromise = null;\n  }\n\n  async copyScimKey() {\n    this.platformUtilsService.copyToClipboard(this.formData.get(\"clientSecret\").value);\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationConnectionRequest(\n        this.organizationId,\n        OrganizationConnectionType.Scim,\n        true,\n        new ScimConfigRequest(this.enabled.value)\n      );\n      if (this.existingConnectionId == null) {\n        this.formPromise = this.apiService.createOrganizationConnection(request, ScimConfigApi);\n      } else {\n        this.formPromise = this.apiService.updateOrganizationConnection(\n          request,\n          ScimConfigApi,\n          this.existingConnectionId\n        );\n      }\n      const response = (await this.formPromise) as OrganizationConnectionResponse<ScimConfigApi>;\n      await this.setConnectionFormValues(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"scimSettingsSaved\"));\n    } catch (e) {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.formPromise = null;\n  }\n\n  getScimEndpointUrl() {\n    return this.environmentService.getScimUrl() + \"/\" + this.organizationId;\n  }\n\n  toggleScimKey() {\n    this.showScimKey = !this.showScimKey;\n    document.getElementById(\"clientSecret\").focus();\n  }\n\n  private async setConnectionFormValues(connection: OrganizationConnectionResponse<ScimConfigApi>) {\n    this.existingConnectionId = connection?.id;\n    if (connection !== null && connection.config?.enabled) {\n      this.showScimSettings = true;\n      this.enabled.setValue(true);\n      this.formData.setValue({\n        endpointUrl: this.getScimEndpointUrl(),\n        clientSecret: \"\",\n      });\n      await this.loadApiKey();\n    } else {\n      this.showScimSettings = false;\n      this.enabled.setValue(false);\n    }\n    this.loading = false;\n  }\n}\n","import { AbstractControl, ValidationErrors, Validators } from \"@angular/forms\";\n\n/**\n * Runs Validators.required on a field only if it's dirty. This prevents error messages from being displayed\n * to the user prematurely.\n */\nexport function dirtyRequired(control: AbstractControl): ValidationErrors | null {\n  return control.dirty ? Validators.required(control) : null;\n}\n","import { SsoConfigApi } from \"../../api/sso-config.api\";\n\nexport class OrganizationSsoRequest {\n  enabled = false;\n  data: SsoConfigApi;\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { SsoConfigApi } from \"../api/sso-config.api\";\n\nimport { View } from \"./view\";\n\nexport class SsoConfigView extends View {\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  openId: {\n    authority: string;\n    clientId: string;\n    clientSecret: string;\n    metadataAddress: string;\n    redirectBehavior: OpenIdConnectRedirectBehavior;\n    getClaimsFromUserInfoEndpoint: boolean;\n    additionalScopes: string;\n    additionalUserIdClaimTypes: string;\n    additionalEmailClaimTypes: string;\n    additionalNameClaimTypes: string;\n    acrValues: string;\n    expectedReturnAcrValue: string;\n  };\n\n  saml: {\n    spNameIdFormat: Saml2NameIdFormat;\n    spOutboundSigningAlgorithm: string;\n    spSigningBehavior: Saml2SigningBehavior;\n    spMinIncomingSigningAlgorithm: boolean;\n    spWantAssertionsSigned: boolean;\n    spValidateCertificates: boolean;\n\n    idpEntityId: string;\n    idpBindingType: Saml2BindingType;\n    idpSingleSignOnServiceUrl: string;\n    idpSingleLogoutServiceUrl: string;\n    idpX509PublicCert: string;\n    idpOutboundSigningAlgorithm: string;\n    idpAllowUnsolicitedAuthnResponse: boolean;\n    idpAllowOutboundLogoutRequests: boolean;\n    idpWantAuthnRequestsSigned: boolean;\n  };\n\n  constructor(api: SsoConfigApi) {\n    super();\n    if (api == null) {\n      return;\n    }\n\n    this.configType = api.configType;\n\n    this.keyConnectorEnabled = api.keyConnectorEnabled;\n    this.keyConnectorUrl = api.keyConnectorUrl;\n\n    if (this.configType === SsoType.OpenIdConnect) {\n      this.openId = {\n        authority: api.authority,\n        clientId: api.clientId,\n        clientSecret: api.clientSecret,\n        metadataAddress: api.metadataAddress,\n        redirectBehavior: api.redirectBehavior,\n        getClaimsFromUserInfoEndpoint: api.getClaimsFromUserInfoEndpoint,\n        additionalScopes: api.additionalScopes,\n        additionalUserIdClaimTypes: api.additionalUserIdClaimTypes,\n        additionalEmailClaimTypes: api.additionalEmailClaimTypes,\n        additionalNameClaimTypes: api.additionalNameClaimTypes,\n        acrValues: api.acrValues,\n        expectedReturnAcrValue: api.expectedReturnAcrValue,\n      };\n    } else if (this.configType === SsoType.Saml2) {\n      this.saml = {\n        spNameIdFormat: api.spNameIdFormat,\n        spOutboundSigningAlgorithm: api.spOutboundSigningAlgorithm,\n        spSigningBehavior: api.spSigningBehavior,\n        spMinIncomingSigningAlgorithm: api.spMinIncomingSigningAlgorithm,\n        spWantAssertionsSigned: api.spWantAssertionsSigned,\n        spValidateCertificates: api.spValidateCertificates,\n\n        idpEntityId: api.idpEntityId,\n        idpBindingType: api.idpBindingType,\n        idpSingleSignOnServiceUrl: api.idpSingleSignOnServiceUrl,\n        idpSingleLogoutServiceUrl: api.idpSingleLogoutServiceUrl,\n        idpX509PublicCert: api.idpX509PublicCert,\n        idpOutboundSigningAlgorithm: api.idpOutboundSigningAlgorithm,\n        idpAllowUnsolicitedAuthnResponse: api.idpAllowUnsolicitedAuthnResponse,\n        idpWantAuthnRequestsSigned: api.idpWantAuthnRequestsSigned,\n\n        // Value is inverted in the view model (allow instead of disable)\n        idpAllowOutboundLogoutRequests:\n          api.idpDisableOutboundLogoutRequests == null\n            ? null\n            : !api.idpDisableOutboundLogoutRequests,\n      };\n    }\n  }\n}\n","export class View {}\n","import { Directive, ElementRef, OnDestroy, OnInit } from \"@angular/core\";\nimport { NgControl } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\n\n@Directive({\n  selector: \"[appA11yInvalid]\",\n})\nexport class A11yInvalidDirective implements OnDestroy, OnInit {\n  private sub: Subscription;\n\n  constructor(private el: ElementRef<HTMLInputElement>, private formControlDirective: NgControl) {}\n\n  ngOnInit() {\n    this.sub = this.formControlDirective.control.statusChanges.subscribe((status) => {\n      if (status === \"INVALID\") {\n        this.el.nativeElement.setAttribute(\"aria-invalid\", \"true\");\n      } else if (status === \"VALID\") {\n        this.el.nativeElement.setAttribute(\"aria-invalid\", \"false\");\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub?.unsubscribe();\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"input[appInputStripSpaces]\",\n})\nexport class InputStripSpacesDirective {\n  constructor(private el: ElementRef<HTMLInputElement>) {}\n\n  @HostListener(\"input\") onInput() {\n    this.el.nativeElement.value = this.el.nativeElement.value.replace(/ /g, \"\");\n  }\n}\n","import { Directive, Input, OnInit, Self } from \"@angular/core\";\nimport { ControlValueAccessor, UntypedFormControl, NgControl, Validators } from \"@angular/forms\";\n\nimport { dirtyRequired } from \"@bitwarden/angular/validators/dirty.validator\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Directive()\nexport abstract class BaseCvaComponent implements ControlValueAccessor, OnInit {\n  get describedById() {\n    return this.showDescribedBy ? this.controlId + \"Desc\" : null;\n  }\n\n  get showDescribedBy() {\n    return this.helperText != null || this.controlDir.control.hasError(\"required\");\n  }\n\n  get isRequired() {\n    return (\n      this.controlDir.control.hasValidator(Validators.required) ||\n      this.controlDir.control.hasValidator(dirtyRequired)\n    );\n  }\n\n  @Input() label: string;\n  @Input() controlId: string;\n  @Input() helperText: string;\n\n  internalControl = new UntypedFormControl(\"\");\n\n  protected onChange: any;\n  protected onTouched: any;\n\n  constructor(@Self() public controlDir: NgControl) {\n    this.controlDir.valueAccessor = this;\n  }\n\n  ngOnInit() {\n    this.internalControl.valueChanges.subscribe(this.onValueChangesInternal);\n  }\n\n  onBlurInternal() {\n    this.onTouched();\n  }\n\n  // CVA interfaces\n  writeValue(value: string) {\n    this.internalControl.setValue(value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    if (isDisabled) {\n      this.internalControl.disable();\n    } else {\n      this.internalControl.enable();\n    }\n  }\n\n  protected onValueChangesInternal: any = (value: string) => this.onChange(value);\n  // End CVA interfaces\n}\n","<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      [attr.id]=\"controlId\"\n      [attr.aria-describedby]=\"describedById\"\n      [formControl]=\"internalControl\"\n      (blur)=\"onBlurInternal()\"\n    />\n    <label class=\"form-check-label\" [attr.for]=\"controlId\">{{ label }}</label>\n  </div>\n  <small *ngIf=\"showDescribedBy\" [attr.id]=\"describedById\" class=\"form-text text-muted\">{{\n    helperText\n  }}</small>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-checkbox\",\n  templateUrl: \"input-checkbox.component.html\",\n})\nexport class InputCheckboxComponent extends BaseCvaComponent {}\n","<div class=\"form-group\">\n  <label [attr.for]=\"controlId\">\n    {{ label }}\n    <small *ngIf=\"isRequired\" class=\"text-muted form-text d-inline\"\n      >({{ \"required\" | i18n }})</small\n    >\n  </label>\n  <input\n    [formControl]=\"internalControl\"\n    class=\"form-control\"\n    [attr.id]=\"controlId\"\n    [attr.aria-describedby]=\"describedById\"\n    [attr.aria-invalid]=\"controlDir.control.invalid\"\n    (blur)=\"onBlurInternal()\"\n  />\n  <div *ngIf=\"showDescribedBy\" [attr.id]=\"describedById\">\n    <small\n      *ngIf=\"helperText != null && !controlDir.control.hasError(helperTextSameAsError)\"\n      class=\"form-text text-muted\"\n    >\n      {{ helperText }}\n    </small>\n    <small class=\"error-inline\" *ngIf=\"controlDir.control.hasError('required')\" role=\"alert\">\n      <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n      <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n      {{\n        controlDir.control.hasError(helperTextSameAsError)\n          ? helperText\n          : (\"fieldRequiredError\" | i18n: label)\n      }}\n    </small>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-text[label][controlId]\",\n  templateUrl: \"input-text.component.html\",\n})\nexport class InputTextComponent extends BaseCvaComponent implements OnInit {\n  @Input() helperTextSameAsError: string;\n  @Input() requiredErrorMessage: string;\n  @Input() stripSpaces = false;\n\n  transformValue: (value: string) => string = null;\n\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.stripSpaces) {\n      this.transformValue = this.doStripSpaces;\n    }\n  }\n\n  writeValue(value: string) {\n    this.internalControl.setValue(value == null ? \"\" : value);\n  }\n\n  protected onValueChangesInternal: any = (value: string) => {\n    let newValue = value;\n    if (this.transformValue != null) {\n      newValue = this.transformValue(value);\n      this.internalControl.setValue(newValue, { emitEvent: false });\n    }\n    this.onChange(newValue);\n  };\n\n  protected onValueChangeInternal(value: string) {\n    let newValue = value;\n    if (this.transformValue != null) {\n      newValue = this.transformValue(value);\n      this.internalControl.setValue(newValue, { emitEvent: false });\n    }\n  }\n\n  private doStripSpaces(value: string) {\n    return value.replace(/ /g, \"\");\n  }\n}\n","<div class=\"form-group\">\n  <label>{{ label }}</label>\n  <div class=\"input-group\">\n    <input class=\"form-control\" readonly [value]=\"controlValue\" />\n    <div class=\"input-group-append\" *ngIf=\"showLaunch\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        appA11yTitle=\"{{ 'launch' | i18n }}\"\n        (click)=\"launchUri(controlValue)\"\n      >\n        <i class=\"bwi bwi-lg bwi-external-link\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <div class=\"input-group-append\" *ngIf=\"showCopy\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n        (click)=\"copy(controlValue)\"\n      >\n        <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-text-readonly\",\n  templateUrl: \"input-text-readonly.component.html\",\n})\nexport class InputTextReadOnlyComponent {\n  @Input() controlValue: string;\n  @Input() label: string;\n  @Input() showCopy = true;\n  @Input() showLaunch = false;\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  copy(value: string) {\n    this.platformUtilsService.copyToClipboard(value);\n  }\n\n  launchUri(url: string) {\n    this.platformUtilsService.launchUri(url);\n  }\n}\n","<div class=\"form-group\">\n  <label [attr.for]=\"controlId\">\n    {{ label }}\n    <small *ngIf=\"isRequired\" class=\"text-muted form-text d-inline\"\n      >({{ \"required\" | i18n }})</small\n    >\n  </label>\n  <select\n    class=\"form-control\"\n    [attr.id]=\"controlId\"\n    [attr.aria-invalid]=\"controlDir.control.invalid\"\n    [formControl]=\"internalControl\"\n    (blur)=\"onBlurInternal()\"\n  >\n    <option *ngFor=\"let o of selectOptions\" [ngValue]=\"o.value\" disabled=\"{{ o.disabled }}\">\n      {{ o.name }}\n    </option>\n  </select>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { SelectOptions } from \"@bitwarden/angular/interfaces/selectOptions\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-select\",\n  templateUrl: \"select.component.html\",\n})\nexport class SelectComponent extends BaseCvaComponent {\n  @Input() selectOptions: SelectOptions[];\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"singleSignOn\" | i18n }}</h1>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [formGroup]=\"ssoConfigForm\"\n  [appApiAction]=\"formPromise\"\n  *ngIf=\"!loading\"\n>\n  <p>\n    {{ \"ssoPolicyHelpStart\" | i18n }}\n    <a routerLink=\"../policies\">{{ \"ssoPolicyHelpLink\" | i18n }}</a>\n    {{ \"ssoPolicyHelpEnd\" | i18n }}\n    <br />\n    {{ \"ssoPolicyHelpKeyConnector\" | i18n }}\n  </p>\n\n  <!-- Root form -->\n  <ng-container>\n    <app-input-checkbox\n      controlId=\"enabled\"\n      [formControl]=\"enabled\"\n      [label]=\"'allowSso' | i18n\"\n      [helperText]=\"'allowSsoDesc' | i18n\"\n    ></app-input-checkbox>\n\n    <div class=\"form-group\">\n      <label>{{ \"memberDecryptionOption\" | i18n }}</label>\n      <div class=\"form-check form-check-block\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"memberDecryptionPass\"\n          [value]=\"false\"\n          formControlName=\"keyConnectorEnabled\"\n        />\n        <label class=\"form-check-label\" for=\"memberDecryptionPass\">\n          {{ \"masterPass\" | i18n }}\n          <small>{{ \"memberDecryptionPassDesc\" | i18n }}</small>\n        </label>\n      </div>\n      <div class=\"form-check mt-2 form-check-block\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"memberDecryptionKey\"\n          [value]=\"true\"\n          formControlName=\"keyConnectorEnabled\"\n          [attr.disabled]=\"!organization.useKeyConnector || null\"\n        />\n        <label class=\"form-check-label\" for=\"memberDecryptionKey\">\n          {{ \"keyConnector\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/about-key-connector/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n          <small>{{ \"memberDecryptionKeyConnectorDesc\" | i18n }}</small>\n        </label>\n      </div>\n    </div>\n\n    <!-- Key Connector -->\n    <ng-container *ngIf=\"ssoConfigForm.get('keyConnectorEnabled').value\">\n      <app-callout type=\"warning\" [useAlertRole]=\"true\">\n        {{ \"keyConnectorWarning\" | i18n }}\n      </app-callout>\n\n      <div class=\"form-group\">\n        <label for=\"keyConnectorUrl\">\n          {{ \"keyConnectorUrl\" | i18n }}\n          <small class=\"text-muted form-text d-inline\">({{ \"required\" | i18n }})</small>\n        </label>\n        <div class=\"input-group\">\n          <input\n            class=\"form-control\"\n            formControlName=\"keyConnectorUrl\"\n            id=\"keyConnectorUrl\"\n            aria-describedby=\"keyConnectorUrlDesc\"\n            (change)=\"haveTestedKeyConnector = false\"\n            appInputStripSpaces\n            appA11yInvalid\n          />\n          <div class=\"input-group-append\">\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary\"\n              (click)=\"validateKeyConnectorUrl()\"\n              [disabled]=\"!enableTestKeyConnector\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n                *ngIf=\"keyConnectorUrl.pending\"\n              ></i>\n              <span *ngIf=\"!keyConnectorUrl.pending\">\n                {{ \"keyConnectorTest\" | i18n }}\n              </span>\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"haveTestedKeyConnector\" id=\"keyConnectorUrlDesc\" aria-live=\"polite\">\n          <small\n            class=\"error-inline\"\n            *ngIf=\"keyConnectorUrl.hasError('invalidUrl'); else keyConnectorSuccess\"\n          >\n            <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n            <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n            {{ \"keyConnectorTestFail\" | i18n }}\n          </small>\n          <ng-template #keyConnectorSuccess>\n            <small class=\"text-success\">\n              <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n              {{ \"keyConnectorTestSuccess\" | i18n }}\n            </small>\n          </ng-template>\n        </div>\n      </div>\n    </ng-container>\n\n    <app-select\n      controlId=\"type\"\n      [label]=\"'type' | i18n\"\n      [selectOptions]=\"ssoTypeOptions\"\n      formControlName=\"configType\"\n    >\n    </app-select>\n  </ng-container>\n\n  <!-- OIDC -->\n  <div\n    *ngIf=\"ssoConfigForm.get('configType').value === ssoType.OpenIdConnect\"\n    [formGroup]=\"openIdForm\"\n  >\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"openIdConnectConfig\" | i18n }}</h2>\n\n      <app-input-text-readonly\n        [label]=\"'callbackPath' | i18n\"\n        [controlValue]=\"callbackPath\"\n      ></app-input-text-readonly>\n\n      <app-input-text-readonly\n        [label]=\"'signedOutCallbackPath' | i18n\"\n        [controlValue]=\"signedOutCallbackPath\"\n      ></app-input-text-readonly>\n\n      <app-input-text\n        [label]=\"'authority' | i18n\"\n        controlId=\"authority\"\n        [stripSpaces]=\"true\"\n        formControlName=\"authority\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'clientId' | i18n\"\n        controlId=\"clientId\"\n        [stripSpaces]=\"true\"\n        formControlName=\"clientId\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'clientSecret' | i18n\"\n        controlId=\"clientSecret\"\n        [stripSpaces]=\"true\"\n        formControlName=\"clientSecret\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'metadataAddress' | i18n\"\n        controlId=\"metadataAddress\"\n        [stripSpaces]=\"true\"\n        [helperText]=\"'openIdAuthorityRequired' | i18n\"\n        formControlName=\"metadataAddress\"\n      ></app-input-text>\n\n      <app-select\n        controlId=\"redirectBehavior\"\n        [label]=\"'oidcRedirectBehavior' | i18n\"\n        [selectOptions]=\"connectRedirectOptions\"\n        formControlName=\"redirectBehavior\"\n      >\n      </app-select>\n\n      <app-input-checkbox\n        controlId=\"getClaimsFromUserInfoEndpoint\"\n        formControlName=\"getClaimsFromUserInfoEndpoint\"\n        [label]=\"'getClaimsFromUserInfoEndpoint' | i18n\"\n      ></app-input-checkbox>\n\n      <!-- Optional customizations -->\n      <div\n        class=\"section-header d-flex flex-row align-items-center mt-3 mb-3\"\n        (click)=\"toggleOpenIdCustomizations()\"\n      >\n        <h3 class=\"mb-0 mr-2\" id=\"customizations-header\">\n          {{ \"openIdOptionalCustomizations\" | i18n }}\n        </h3>\n        <button\n          class=\"mb-1 btn btn-link\"\n          type=\"button\"\n          appStopClick\n          role=\"button\"\n          aria-controls=\"customizations\"\n          [attr.aria-expanded]=\"showOpenIdCustomizations\"\n          aria-labelledby=\"customizations-header\"\n        >\n          <i\n            class=\"bwi\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-down': !showOpenIdCustomizations,\n              'bwi-chevron-up': showOpenIdCustomizations\n            }\"\n          ></i>\n        </button>\n      </div>\n      <div id=\"customizations\" [hidden]=\"!showOpenIdCustomizations\">\n        <app-input-text\n          [label]=\"'additionalScopes' | i18n\"\n          controlId=\"additionalScopes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalScopes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'additionalUserIdClaimTypes' | i18n\"\n          controlId=\"additionalUserIdClaimTypes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalUserIdClaimTypes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'additionalEmailClaimTypes' | i18n\"\n          controlId=\"additionalEmailClaimTypes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalEmailClaimTypes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'additionalNameClaimTypes' | i18n\"\n          controlId=\"additionalNameClaimTypes\"\n          [helperText]=\"'separateMultipleWithComma' | i18n\"\n          formControlName=\"additionalNameClaimTypes\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'acrValues' | i18n\"\n          controlId=\"acrValues\"\n          helperText=\"acr_values\"\n          formControlName=\"acrValues\"\n        ></app-input-text>\n\n        <app-input-text\n          [label]=\"'expectedReturnAcrValue' | i18n\"\n          controlId=\"expectedReturnAcrValue\"\n          helperText=\"acr_validation\"\n          formControlName=\"expectedReturnAcrValue\"\n        ></app-input-text>\n      </div>\n    </div>\n  </div>\n\n  <!-- SAML2 SP -->\n  <div *ngIf=\"ssoConfigForm.get('configType').value === ssoType.Saml2\" [formGroup]=\"samlForm\">\n    <!-- SAML2 SP -->\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"samlSpConfig\" | i18n }}</h2>\n\n      <app-input-text-readonly\n        [label]=\"'spEntityId' | i18n\"\n        [controlValue]=\"spEntityId\"\n      ></app-input-text-readonly>\n\n      <app-input-text-readonly\n        [label]=\"'spMetadataUrl' | i18n\"\n        [controlValue]=\"spMetadataUrl\"\n        [showLaunch]=\"true\"\n      ></app-input-text-readonly>\n\n      <app-input-text-readonly\n        [label]=\"'spAcsUrl' | i18n\"\n        [controlValue]=\"spAcsUrl\"\n      ></app-input-text-readonly>\n\n      <app-select\n        controlId=\"spNameIdFormat\"\n        [label]=\"'spNameIdFormat' | i18n\"\n        [selectOptions]=\"saml2NameIdFormatOptions\"\n        formControlName=\"spNameIdFormat\"\n      >\n      </app-select>\n\n      <app-select\n        controlId=\"spOutboundSigningAlgorithm\"\n        [label]=\"'spOutboundSigningAlgorithm' | i18n\"\n        [selectOptions]=\"samlSigningAlgorithmOptions\"\n        formControlName=\"spOutboundSigningAlgorithm\"\n      >\n      </app-select>\n\n      <app-select\n        controlId=\"spSigningBehavior\"\n        [label]=\"'spSigningBehavior' | i18n\"\n        [selectOptions]=\"saml2SigningBehaviourOptions\"\n        formControlName=\"spSigningBehavior\"\n      >\n      </app-select>\n\n      <app-select\n        controlId=\"spMinIncomingSigningAlgorithm\"\n        [label]=\"'spMinIncomingSigningAlgorithm' | i18n\"\n        [selectOptions]=\"samlSigningAlgorithmOptions\"\n        formControlName=\"spMinIncomingSigningAlgorithm\"\n      >\n      </app-select>\n\n      <app-input-checkbox\n        controlId=\"spWantAssertionsSigned\"\n        formControlName=\"spWantAssertionsSigned\"\n        [label]=\"'spWantAssertionsSigned' | i18n\"\n      ></app-input-checkbox>\n\n      <app-input-checkbox\n        controlId=\"spValidateCertificates\"\n        formControlName=\"spValidateCertificates\"\n        [label]=\"'spValidateCertificates' | i18n\"\n      ></app-input-checkbox>\n    </div>\n\n    <!-- SAML2 IDP -->\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"samlIdpConfig\" | i18n }}</h2>\n\n      <app-input-text\n        [label]=\"'idpEntityId' | i18n\"\n        controlId=\"idpEntityId\"\n        formControlName=\"idpEntityId\"\n      ></app-input-text>\n\n      <app-select\n        controlId=\"idpBindingType\"\n        [label]=\"'idpBindingType' | i18n\"\n        [selectOptions]=\"saml2BindingTypeOptions\"\n        formControlName=\"idpBindingType\"\n      >\n      </app-select>\n\n      <app-input-text\n        [label]=\"'idpSingleSignOnServiceUrl' | i18n\"\n        controlId=\"idpSingleSignOnServiceUrl\"\n        [helperText]=\"'idpSingleSignOnServiceUrlRequired' | i18n\"\n        [stripSpaces]=\"true\"\n        formControlName=\"idpSingleSignOnServiceUrl\"\n      ></app-input-text>\n\n      <app-input-text\n        [label]=\"'idpSingleLogoutServiceUrl' | i18n\"\n        controlId=\"idpSingleLogoutServiceUrl\"\n        [stripSpaces]=\"true\"\n        formControlName=\"idpSingleLogoutServiceUrl\"\n      ></app-input-text>\n\n      <div class=\"form-group\">\n        <label for=\"idpX509PublicCert\">\n          {{ \"idpX509PublicCert\" | i18n }}\n          <small class=\"text-muted form-text d-inline\">({{ \"required\" | i18n }})</small>\n        </label>\n        <textarea\n          formControlName=\"idpX509PublicCert\"\n          class=\"form-control form-control-sm text-monospace\"\n          rows=\"6\"\n          id=\"idpX509PublicCert\"\n          appA11yInvalid\n          aria-describedby=\"idpX509PublicCertDesc\"\n        ></textarea>\n        <small\n          id=\"idpX509PublicCertDesc\"\n          class=\"error-inline\"\n          role=\"alert\"\n          *ngIf=\"samlForm.get('idpX509PublicCert').hasError('required')\"\n        >\n          <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n          <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n          {{ \"fieldRequiredError\" | i18n: (\"idpX509PublicCert\" | i18n) }}\n        </small>\n      </div>\n\n      <app-select\n        controlId=\"idpOutboundSigningAlgorithm\"\n        [label]=\"'idpOutboundSigningAlgorithm' | i18n\"\n        [selectOptions]=\"samlSigningAlgorithmOptions\"\n        formControlName=\"idpOutboundSigningAlgorithm\"\n      >\n      </app-select>\n\n      <!--TODO: Uncomment once Unsolicited IdP Response is supported-->\n      <!-- <app-input-checkbox\n        controlId=\"idpAllowUnsolicitedAuthnResponse\"\n        formControlName=\"idpAllowUnsolicitedAuthnResponse\"\n        [label]=\"'idpAllowUnsolicitedAuthnResponse' | i18n\"\n      ></app-input-checkbox> -->\n\n      <app-input-checkbox\n        controlId=\"idpAllowOutboundLogoutRequests\"\n        formControlName=\"idpAllowOutboundLogoutRequests\"\n        [label]=\"'idpAllowOutboundLogoutRequests' | i18n\"\n      ></app-input-checkbox>\n\n      <app-input-checkbox\n        controlId=\"idpWantAuthnRequestsSigned\"\n        formControlName=\"idpWantAuthnRequestsSigned\"\n        [label]=\"'idpSignAuthenticationRequests' | i18n\"\n      ></app-input-checkbox>\n    </div>\n  </div>\n\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n  <div\n    id=\"errorSummary\"\n    class=\"error-summary text-danger\"\n    *ngIf=\"this.getErrorCount(ssoConfigForm) as errorCount\"\n  >\n    <i class=\"bwi bwi-exclamation-circle\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{ \"error\" | i18n }}:</span>\n    {{\n      (errorCount === 1 ? \"formErrorSummarySingle\" : \"formErrorSummaryPlural\") | i18n: errorCount\n    }}\n  </div>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { AbstractControl, UntypedFormBuilder, UntypedFormGroup } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { SelectOptions } from \"@bitwarden/angular/interfaces/selectOptions\";\nimport { dirtyRequired } from \"@bitwarden/angular/validators/dirty.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"@bitwarden/common/enums/ssoEnums\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SsoConfigApi } from \"@bitwarden/common/models/api/sso-config.api\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationSsoRequest } from \"@bitwarden/common/models/request/organization/organization-sso.request\";\nimport { OrganizationSsoResponse } from \"@bitwarden/common/models/response/organization/organization-sso.response\";\nimport { SsoConfigView } from \"@bitwarden/common/models/view/sso-config.view\";\n\nconst defaultSigningAlgorithm = \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\";\n\n@Component({\n  selector: \"app-org-manage-sso\",\n  templateUrl: \"sso.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SsoComponent implements OnInit {\n  readonly ssoType = SsoType;\n\n  readonly ssoTypeOptions: SelectOptions[] = [\n    { name: this.i18nService.t(\"selectType\"), value: SsoType.None, disabled: true },\n    { name: \"OpenID Connect\", value: SsoType.OpenIdConnect },\n    { name: \"SAML 2.0\", value: SsoType.Saml2 },\n  ];\n\n  readonly samlSigningAlgorithms = [\n    \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha384\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha512\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\",\n  ];\n\n  readonly saml2SigningBehaviourOptions: SelectOptions[] = [\n    {\n      name: \"If IdP Wants Authn Requests Signed\",\n      value: Saml2SigningBehavior.IfIdpWantAuthnRequestsSigned,\n    },\n    { name: \"Always\", value: Saml2SigningBehavior.Always },\n    { name: \"Never\", value: Saml2SigningBehavior.Never },\n  ];\n  readonly saml2BindingTypeOptions: SelectOptions[] = [\n    { name: \"Redirect\", value: Saml2BindingType.HttpRedirect },\n    { name: \"HTTP POST\", value: Saml2BindingType.HttpPost },\n  ];\n  readonly saml2NameIdFormatOptions: SelectOptions[] = [\n    { name: \"Not Configured\", value: Saml2NameIdFormat.NotConfigured },\n    { name: \"Unspecified\", value: Saml2NameIdFormat.Unspecified },\n    { name: \"Email Address\", value: Saml2NameIdFormat.EmailAddress },\n    { name: \"X.509 Subject Name\", value: Saml2NameIdFormat.X509SubjectName },\n    { name: \"Windows Domain Qualified Name\", value: Saml2NameIdFormat.WindowsDomainQualifiedName },\n    { name: \"Kerberos Principal Name\", value: Saml2NameIdFormat.KerberosPrincipalName },\n    { name: \"Entity Identifier\", value: Saml2NameIdFormat.EntityIdentifier },\n    { name: \"Persistent\", value: Saml2NameIdFormat.Persistent },\n    { name: \"Transient\", value: Saml2NameIdFormat.Transient },\n  ];\n\n  readonly connectRedirectOptions: SelectOptions[] = [\n    { name: \"Redirect GET\", value: OpenIdConnectRedirectBehavior.RedirectGet },\n    { name: \"Form POST\", value: OpenIdConnectRedirectBehavior.FormPost },\n  ];\n\n  showOpenIdCustomizations = false;\n\n  loading = true;\n  haveTestedKeyConnector = false;\n  organizationId: string;\n  organization: Organization;\n  formPromise: Promise<OrganizationSsoResponse>;\n\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  enabled = this.formBuilder.control(false);\n\n  openIdForm = this.formBuilder.group(\n    {\n      authority: [\"\", dirtyRequired],\n      clientId: [\"\", dirtyRequired],\n      clientSecret: [\"\", dirtyRequired],\n      metadataAddress: [],\n      redirectBehavior: [OpenIdConnectRedirectBehavior.RedirectGet, dirtyRequired],\n      getClaimsFromUserInfoEndpoint: [],\n      additionalScopes: [],\n      additionalUserIdClaimTypes: [],\n      additionalEmailClaimTypes: [],\n      additionalNameClaimTypes: [],\n      acrValues: [],\n      expectedReturnAcrValue: [],\n    },\n    {\n      updateOn: \"blur\",\n    }\n  );\n\n  samlForm = this.formBuilder.group(\n    {\n      spNameIdFormat: [Saml2NameIdFormat.NotConfigured],\n      spOutboundSigningAlgorithm: [defaultSigningAlgorithm],\n      spSigningBehavior: [Saml2SigningBehavior.IfIdpWantAuthnRequestsSigned],\n      spMinIncomingSigningAlgorithm: [defaultSigningAlgorithm],\n      spWantAssertionsSigned: [],\n      spValidateCertificates: [],\n\n      idpEntityId: [\"\", dirtyRequired],\n      idpBindingType: [Saml2BindingType.HttpRedirect],\n      idpSingleSignOnServiceUrl: [],\n      idpSingleLogoutServiceUrl: [],\n      idpX509PublicCert: [\"\", dirtyRequired],\n      idpOutboundSigningAlgorithm: [defaultSigningAlgorithm],\n      idpAllowUnsolicitedAuthnResponse: [],\n      idpAllowOutboundLogoutRequests: [true],\n      idpWantAuthnRequestsSigned: [],\n    },\n    {\n      updateOn: \"blur\",\n    }\n  );\n\n  ssoConfigForm = this.formBuilder.group({\n    configType: [SsoType.None],\n    keyConnectorEnabled: [false],\n    keyConnectorUrl: [\"\"],\n    openId: this.openIdForm,\n    saml: this.samlForm,\n  });\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.ssoConfigForm.get(\"configType\").valueChanges.subscribe((newType: SsoType) => {\n      if (newType === SsoType.OpenIdConnect) {\n        this.openIdForm.enable();\n        this.samlForm.disable();\n      } else if (newType === SsoType.Saml2) {\n        this.openIdForm.disable();\n        this.samlForm.enable();\n      } else {\n        this.openIdForm.disable();\n        this.samlForm.disable();\n      }\n    });\n\n    this.samlForm\n      .get(\"spSigningBehavior\")\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n      .valueChanges.subscribe(() =>\n        this.samlForm.get(\"idpX509PublicCert\").updateValueAndValidity()\n      );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    const ssoSettings = await this.organizationApiService.getSso(this.organizationId);\n    this.populateForm(ssoSettings);\n\n    this.callbackPath = ssoSettings.urls.callbackPath;\n    this.signedOutCallbackPath = ssoSettings.urls.signedOutCallbackPath;\n    this.spEntityId = ssoSettings.urls.spEntityId;\n    this.spMetadataUrl = ssoSettings.urls.spMetadataUrl;\n    this.spAcsUrl = ssoSettings.urls.spAcsUrl;\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.validateForm(this.ssoConfigForm);\n\n    if (this.ssoConfigForm.get(\"keyConnectorEnabled\").value) {\n      await this.validateKeyConnectorUrl();\n    }\n\n    if (!this.ssoConfigForm.valid) {\n      this.readOutErrors();\n      return;\n    }\n\n    const request = new OrganizationSsoRequest();\n    request.enabled = this.enabled.value;\n    request.data = SsoConfigApi.fromView(this.ssoConfigForm.value as SsoConfigView);\n\n    this.formPromise = this.organizationApiService.updateSso(this.organizationId, request);\n\n    try {\n      const response = await this.formPromise;\n      this.populateForm(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"ssoSettingsSaved\"));\n    } catch {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.formPromise = null;\n  }\n\n  async validateKeyConnectorUrl() {\n    if (this.haveTestedKeyConnector) {\n      return;\n    }\n\n    this.keyConnectorUrl.markAsPending();\n\n    try {\n      await this.apiService.getKeyConnectorAlive(this.keyConnectorUrl.value);\n      this.keyConnectorUrl.updateValueAndValidity();\n    } catch {\n      this.keyConnectorUrl.setErrors({\n        invalidUrl: true,\n      });\n    }\n\n    this.haveTestedKeyConnector = true;\n  }\n\n  toggleOpenIdCustomizations() {\n    this.showOpenIdCustomizations = !this.showOpenIdCustomizations;\n  }\n\n  getErrorCount(form: UntypedFormGroup): number {\n    return Object.values(form.controls).reduce((acc: number, control: AbstractControl) => {\n      if (control instanceof UntypedFormGroup) {\n        return acc + this.getErrorCount(control);\n      }\n\n      if (control.errors == null) {\n        return acc;\n      }\n      return acc + Object.keys(control.errors).length;\n    }, 0);\n  }\n\n  get enableTestKeyConnector() {\n    return (\n      this.ssoConfigForm.get(\"keyConnectorEnabled\").value &&\n      !Utils.isNullOrWhitespace(this.keyConnectorUrl?.value)\n    );\n  }\n\n  get keyConnectorUrl() {\n    return this.ssoConfigForm.get(\"keyConnectorUrl\");\n  }\n\n  get samlSigningAlgorithmOptions(): SelectOptions[] {\n    return this.samlSigningAlgorithms.map((algorithm) => ({ name: algorithm, value: algorithm }));\n  }\n\n  private validateForm(form: UntypedFormGroup) {\n    Object.values(form.controls).forEach((control: AbstractControl) => {\n      if (control.disabled) {\n        return;\n      }\n\n      if (control instanceof UntypedFormGroup) {\n        this.validateForm(control);\n      } else {\n        control.markAsDirty();\n        control.markAsTouched();\n        control.updateValueAndValidity();\n      }\n    });\n  }\n\n  private populateForm(ssoSettings: OrganizationSsoResponse) {\n    this.enabled.setValue(ssoSettings.enabled);\n    if (ssoSettings.data != null) {\n      const ssoConfigView = new SsoConfigView(ssoSettings.data);\n      this.ssoConfigForm.patchValue(ssoConfigView);\n    }\n  }\n\n  private readOutErrors() {\n    const errorText = this.i18nService.t(\"error\");\n    const errorCount = this.getErrorCount(this.ssoConfigForm);\n    const errorCountText = this.i18nService.t(\n      errorCount === 1 ? \"formErrorSummarySingle\" : \"formErrorSummaryPlural\",\n      errorCount.toString()\n    );\n\n    const div = document.createElement(\"div\");\n    div.className = \"sr-only\";\n    div.id = \"srErrorCount\";\n    div.setAttribute(\"aria-live\", \"polite\");\n    div.innerText = errorText + \": \" + errorCountText;\n\n    const existing = document.getElementById(\"srErrorCount\");\n    if (existing != null) {\n      existing.remove();\n    }\n\n    document.body.append(div);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { canAccessManageTab } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationPermissionsGuard } from \"@bitwarden/web-vault/app/organizations/guards/org-permissions.guard\";\nimport { OrganizationLayoutComponent } from \"@bitwarden/web-vault/app/organizations/layouts/organization-layout.component\";\nimport { ManageComponent } from \"@bitwarden/web-vault/app/organizations/manage/manage.component\";\n\nimport { ScimComponent } from \"./manage/scim.component\";\nimport { SsoComponent } from \"./manage/sso.component\";\n\nconst routes: Routes = [\n  {\n    path: \"organizations/:organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuard, OrganizationPermissionsGuard],\n    children: [\n      {\n        path: \"manage\",\n        component: ManageComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: canAccessManageTab,\n        },\n        children: [\n          {\n            path: \"sso\",\n            component: SsoComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              organizationPermissions: (org: Organization) => org.canManageSso,\n            },\n          },\n          {\n            path: \"scim\",\n            component: ScimComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              organizationPermissions: (org: Organization) => org.canManageScim,\n            },\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"@bitwarden/web-vault/app/shared/shared.module\";\n\nimport { InputCheckboxComponent } from \"./components/input-checkbox.component\";\nimport { InputTextReadOnlyComponent } from \"./components/input-text-readonly.component\";\nimport { InputTextComponent } from \"./components/input-text.component\";\nimport { SelectComponent } from \"./components/select.component\";\nimport { ScimComponent } from \"./manage/scim.component\";\nimport { SsoComponent } from \"./manage/sso.component\";\nimport { OrganizationsRoutingModule } from \"./organizations-routing.module\";\n\n// Form components are for use in the SSO Configuration Form only and should not be exported for use elsewhere.\n// They will be deprecated by the Component Library.\n@NgModule({\n  imports: [SharedModule, OrganizationsRoutingModule],\n  declarations: [\n    InputCheckboxComponent,\n    InputTextComponent,\n    InputTextReadOnlyComponent,\n    SelectComponent,\n    SsoComponent,\n    ScimComponent,\n  ],\n})\nexport class OrganizationsModule {}\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport { CoreModule } from \"@bitwarden/web-vault/app/core/core.module\";\nimport { OssRoutingModule } from \"@bitwarden/web-vault/app/oss-routing.module\";\nimport { OssModule } from \"@bitwarden/web-vault/app/oss.module\";\nimport { WildcardRoutingModule } from \"@bitwarden/web-vault/app/wildcard-routing.module\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { OrganizationsModule } from \"./organizations/organizations.module\";\nimport { DisablePersonalVaultExportPolicyComponent } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicyComponent } from \"./policies/maximum-vault-timeout.component\";\n\n@NgModule({\n  imports: [\n    OverlayModule,\n    OssModule,\n    JslibModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CoreModule,\n    InfiniteScrollModule,\n    DragDropModule,\n    AppRoutingModule,\n    OssRoutingModule,\n    OrganizationsModule, // Must be after OssRoutingModule for competing routes to resolve properly\n    RouterModule,\n    WildcardRoutingModule, // Needs to be last to catch all non-existing routes\n  ],\n  declarations: [\n    AppComponent,\n    DisablePersonalVaultExportPolicyComponent,\n    MaximumVaultTimeoutPolicyComponent,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport \"bootstrap\";\nimport \"jquery\";\nimport \"popper.js\";\n\nrequire(\"@bitwarden/web-vault/scss/styles.scss\");\nrequire(\"@bitwarden/web-vault/scss/tailwind.css\");\n\nimport { AppModule } from \"./app/app.module\";\n\nif (process.env.NODE_ENV === \"production\") {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n","<div\n  #callout\n  class=\"callout callout-{{ calloutStyle }}\"\n  [ngClass]=\"{ clickable: clickable }\"\n  [attr.role]=\"useAlertRole ? 'alert' : null\"\n>\n  <h3 class=\"callout-heading\" *ngIf=\"title\">\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\">\n    {{ enforcedPolicyMessage }}\n    <ul>\n      <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n        {{ \"policyInEffectMinComplexity\" | i18n: getPasswordScoreAlertDisplay() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n        {{ \"policyInEffectMinLength\" | i18n: enforcedPolicyOptions?.minLength.toString() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n        {{ \"policyInEffectUppercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n        {{ \"policyInEffectLowercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n        {{ \"policyInEffectNumbers\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n        {{ \"policyInEffectSpecial\" | i18n: \"!@#$%^&*\" }}\n      </li>\n    </ul>\n  </div>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\n\n@Component({\n  selector: \"app-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() clickable: boolean;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() enforcedPolicyMessage: string;\n  @Input() useAlertRole = false;\n\n  calloutStyle: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.calloutStyle = this.type;\n\n    if (this.enforcedPolicyMessage === undefined) {\n      this.enforcedPolicyMessage = this.i18nService.t(\"masterPasswordPolicyInEffect\");\n    }\n\n    if (this.type === \"warning\" || this.type === \"danger\") {\n      if (this.type === \"danger\") {\n        this.calloutStyle = \"danger\";\n      }\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"warning\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-exclamation-triangle\";\n      }\n    } else if (this.type === \"error\") {\n      this.calloutStyle = \"danger\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"error\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-error\";\n      }\n    } else if (this.type === \"tip\") {\n      this.calloutStyle = \"success\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"tip\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-lightbulb\";\n      }\n    }\n  }\n\n  getPasswordScoreAlertDisplay() {\n    if (this.enforcedPolicyOptions == null) {\n      return \"\";\n    }\n\n    let str: string;\n    switch (this.enforcedPolicyOptions.minComplexity) {\n      case 4:\n        str = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        str = this.i18nService.t(\"good\");\n        break;\n      default:\n        str = this.i18nService.t(\"weak\");\n        break;\n    }\n    return str + \" (\" + this.enforcedPolicyOptions.minComplexity + \")\";\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nexport class ModalRef {\n  onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n  onClose: Observable<any>; // Initiated close.\n  onClosed: Observable<any>; // Modal was closed (Remove element from DOM)\n  onShow: Observable<void>; // Start showing modal\n  onShown: Observable<void>; // Modal is fully visible\n\n  private readonly _onCreated = new Subject<HTMLElement>();\n  private readonly _onClose = new Subject<any>();\n  private readonly _onClosed = new Subject<any>();\n  private readonly _onShow = new Subject<void>();\n  private readonly _onShown = new Subject<void>();\n  private lastResult: any;\n\n  constructor() {\n    this.onCreated = this._onCreated.asObservable();\n    this.onClose = this._onClose.asObservable();\n    this.onClosed = this._onClosed.asObservable();\n    this.onShow = this._onShow.asObservable();\n    this.onShown = this._onShow.asObservable();\n  }\n\n  show() {\n    this._onShow.next();\n  }\n\n  shown() {\n    this._onShown.next();\n  }\n\n  close(result?: any) {\n    this.lastResult = result;\n    this._onClose.next(result);\n  }\n\n  closed() {\n    this._onClosed.next(this.lastResult);\n  }\n\n  created(el: HTMLElement) {\n    this._onCreated.next(el);\n  }\n\n  onClosedPromise(): Promise<any> {\n    return this.onClosed.pipe(first()).toPromise();\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n  <input\n    id=\"masterPassword\"\n    type=\"password\"\n    name=\"MasterPasswordHash\"\n    class=\"form-control\"\n    [formControl]=\"secret\"\n    required\n    appAutofocus\n    appInputVerbatim\n  />\n  <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"form-group\">\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n    <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from \"@angular/forms\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Collects the user's master password, or if they are using Key Connector, prompts for an OTP via email.\n * This is exposed to the parent component via the ControlValueAccessor interface (e.g. bind it to a FormControl).\n * Use UserVerificationService to verify the user's input.\n */\n@Component({\n  selector: \"app-user-verification\",\n  templateUrl: \"user-verification.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UserVerificationComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class UserVerificationComponent implements ControlValueAccessor, OnInit {\n  usesKeyConnector = false;\n  disableRequestOTP = false;\n  sentCode = false;\n\n  secret = new FormControl(\"\");\n\n  private onChange: (value: Verification) => void;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async ngOnInit() {\n    this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.processChanges(this.secret.value);\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.secret.valueChanges.subscribe((secret: string) => this.processChanges(secret));\n  }\n\n  async requestOTP() {\n    if (this.usesKeyConnector) {\n      this.disableRequestOTP = true;\n      try {\n        await this.userVerificationService.requestOTP();\n        this.sentCode = true;\n      } finally {\n        this.disableRequestOTP = false;\n      }\n    }\n  }\n\n  writeValue(obj: any): void {\n    this.secret.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Not implemented\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disableRequestOTP = isDisabled;\n    if (isDisabled) {\n      this.secret.disable();\n    } else {\n      this.secret.enable();\n    }\n  }\n\n  private processChanges(secret: string) {\n    if (this.onChange == null) {\n      return;\n    }\n\n    this.onChange({\n      type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n      secret: Utils.isNullOrWhitespace(secret) ? null : secret,\n    });\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appA11yTitle]\",\n})\nexport class A11yTitleDirective {\n  @Input() set appA11yTitle(title: string) {\n    this.title = title;\n  }\n\n  private title: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (!this.el.nativeElement.hasAttribute(\"title\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"title\", this.title);\n    }\n    if (!this.el.nativeElement.hasAttribute(\"aria-label\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"aria-label\", this.title);\n    }\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\n\n/**\n * Provides error handling, in particular for any error returned by the server in an api call.\n * Attach it to a <form> element and provide the name of the class property that will hold the api call promise.\n * e.g. <form [appApiAction]=\"this.formPromise\">\n * Any errors/rejections that occur will be intercepted and displayed as error toasts.\n */\n@Directive({\n  selector: \"[appApiAction]\",\n})\nexport class ApiActionDirective implements OnChanges {\n  @Input() appApiAction: Promise<any>;\n\n  constructor(\n    private el: ElementRef,\n    private validationService: ValidationService,\n    private logService: LogService\n  ) {}\n\n  ngOnChanges(changes: any) {\n    if (this.appApiAction == null || this.appApiAction.then == null) {\n      return;\n    }\n\n    this.el.nativeElement.loading = true;\n\n    this.appApiAction.then(\n      (response: any) => {\n        this.el.nativeElement.loading = false;\n      },\n      (e: any) => {\n        this.el.nativeElement.loading = false;\n\n        if ((e as ErrorResponse).captchaRequired) {\n          this.logService.error(\"Captcha required error response: \" + e.getSingleMessage());\n          return;\n        }\n        this.logService?.error(`Received API exception: ${e}`);\n        this.validationService.showError(e);\n      }\n    );\n  }\n}\n","import { Directive, ElementRef, Input, NgZone } from \"@angular/core\";\nimport { take } from \"rxjs/operators\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective {\n  @Input() set appAutofocus(condition: boolean | string) {\n    this.autofocus = condition === \"\" || condition === true;\n  }\n\n  private autofocus: boolean;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!Utils.isMobileBrowser && this.autofocus) {\n      if (this.ngZone.isStable) {\n        this.el.nativeElement.focus();\n      } else {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n      }\n    }\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInputVerbatim]\",\n})\nexport class InputVerbatimDirective {\n  @Input() set appInputVerbatim(condition: boolean | string) {\n    this.disableComplete = condition === \"\" || condition === true;\n  }\n\n  private disableComplete: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.disableComplete && !this.el.nativeElement.hasAttribute(\"autocomplete\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocomplete\", \"off\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocapitalize\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocapitalize\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocorrect\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocorrect\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"spellcheck\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"spellcheck\", \"false\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"inputmode\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"inputmode\", \"verbatim\");\n    }\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopClick]\",\n})\nexport class StopClickDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, ModuleWithProviders, NgModule } from \"@angular/core\";\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  Toast as BaseToast,\n  ToastPackage,\n  ToastrService,\n  TOAST_CONFIG,\n} from \"ngx-toastr\";\n\n@Component({\n  selector: \"[toast-component2]\",\n  template: `\n    <button\n      *ngIf=\"options.closeButton\"\n      (click)=\"remove()\"\n      type=\"button\"\n      class=\"toast-close-button\"\n      aria-label=\"Close\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"icon\">\n      <i></i>\n    </div>\n    <div>\n      <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n        {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n      </div>\n      <div\n        *ngIf=\"message && options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [innerHTML]=\"message\"\n      ></div>\n      <div\n        *ngIf=\"message && !options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    </div>\n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n  `,\n  animations: [\n    trigger(\"flyInOut\", [\n      state(\"inactive\", style({ opacity: 0 })),\n      state(\"active\", style({ opacity: 1 })),\n      state(\"removed\", style({ opacity: 0 })),\n      transition(\"inactive => active\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n      transition(\"active => removed\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class BitwardenToast extends BaseToast {\n  constructor(protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n    super(toastrService, toastPackage);\n  }\n}\n\nexport const BitwardenToastGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: BitwardenToast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitwardenToast],\n  exports: [BitwardenToast],\n})\nexport class BitwardenToastModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<BitwardenToastModule> {\n    return {\n      ngModule: BitwardenToastModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: BitwardenToastGlobalConfig,\n            config: config,\n          },\n        },\n      ],\n    };\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface CardRuleEntry {\n  cardLength: number;\n  blocks: number[];\n}\n\n// See https://baymard.com/checkout-usability/credit-card-patterns for\n// all possible credit card spacing patterns. For now, we just handle\n// the below.\nconst numberFormats: Record<string, CardRuleEntry[]> = {\n  Visa: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Mastercard: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Maestro: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 13, blocks: [4, 4, 5] },\n    { cardLength: 15, blocks: [4, 6, 5] },\n    { cardLength: 19, blocks: [4, 4, 4, 4, 3] },\n  ],\n  Discover: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  \"Diners Club\": [{ cardLength: 14, blocks: [4, 6, 4] }],\n  JCB: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  UnionPay: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 19, blocks: [6, 13] },\n  ],\n  Amex: [{ cardLength: 15, blocks: [4, 6, 5] }],\n  Mir: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 17, blocks: [5, 4, 4, 4] },\n    { cardLength: 18, blocks: [6, 4, 4, 4] },\n    { cardLength: 19, blocks: [7, 4, 4, 4] },\n  ],\n  Other: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n};\n\n@Pipe({ name: \"creditCardNumber\" })\nexport class CreditCardNumberPipe implements PipeTransform {\n  transform(creditCardNumber: string, brand: string): string {\n    let rules = numberFormats[brand];\n\n    if (rules == null) {\n      rules = numberFormats[\"Other\"];\n    }\n\n    const cardLength = creditCardNumber.length;\n\n    let matchingRule = rules.find((r) => r.cardLength == cardLength);\n    if (matchingRule == null) {\n      matchingRule = rules[0];\n    }\n\n    const blocks = matchingRule.blocks;\n\n    const chunks: string[] = [];\n    let total = 0;\n\n    blocks.forEach((c) => {\n      chunks.push(creditCardNumber.slice(total, total + c));\n      total += c;\n    });\n\n    // Append the remaining part\n    if (cardLength > total) {\n      chunks.push(creditCardNumber.slice(total));\n    }\n\n    return chunks.join(\" \");\n  }\n}\n","import { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { CalloutComponent } from \"./components/callout.component\";\nimport { ExportScopeCalloutComponent } from \"./components/export-scope-callout.component\";\nimport { IconComponent } from \"./components/icon.component\";\nimport { BitwardenToastModule } from \"./components/toastr.component\";\nimport { A11yInvalidDirective } from \"./directives/a11y-invalid.directive\";\nimport { A11yTitleDirective } from \"./directives/a11y-title.directive\";\nimport { ApiActionDirective } from \"./directives/api-action.directive\";\nimport { AutofocusDirective } from \"./directives/autofocus.directive\";\nimport { BoxRowDirective } from \"./directives/box-row.directive\";\nimport { FallbackSrcDirective } from \"./directives/fallback-src.directive\";\nimport { InputStripSpacesDirective } from \"./directives/input-strip-spaces.directive\";\nimport { InputVerbatimDirective } from \"./directives/input-verbatim.directive\";\nimport { NotPremiumDirective } from \"./directives/not-premium.directive\";\nimport { SelectCopyDirective } from \"./directives/select-copy.directive\";\nimport { StopClickDirective } from \"./directives/stop-click.directive\";\nimport { StopPropDirective } from \"./directives/stop-prop.directive\";\nimport { TrueFalseValueDirective } from \"./directives/true-false-value.directive\";\nimport { ColorPasswordCountPipe } from \"./pipes/color-password-count.pipe\";\nimport { ColorPasswordPipe } from \"./pipes/color-password.pipe\";\nimport { CreditCardNumberPipe } from \"./pipes/credit-card-number.pipe\";\nimport { EllipsisPipe } from \"./pipes/ellipsis.pipe\";\nimport { I18nPipe } from \"./pipes/i18n.pipe\";\nimport { SearchCiphersPipe } from \"./pipes/search-ciphers.pipe\";\nimport { SearchPipe } from \"./pipes/search.pipe\";\nimport { UserNamePipe } from \"./pipes/user-name.pipe\";\nimport { PasswordStrengthComponent } from \"./shared/components/password-strength/password-strength.component\";\n\n@NgModule({\n  imports: [\n    BitwardenToastModule.forRoot({\n      maxOpened: 5,\n      autoDismiss: true,\n      closeButton: true,\n    }),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n  ],\n  exports: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    BitwardenToastModule,\n    BoxRowDirective,\n    CalloutComponent,\n    ColorPasswordCountPipe,\n    ColorPasswordPipe,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n  ],\n  providers: [CreditCardNumberPipe, DatePipe, I18nPipe, SearchPipe, UserNamePipe],\n})\nexport class JslibModule {}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"search\",\n})\nexport class SearchPipe implements PipeTransform {\n  transform(\n    items: any[],\n    searchText: string,\n    prop1?: string,\n    prop2?: string,\n    prop3?: string\n  ): any[] {\n    if (items == null || items.length === 0) {\n      return [];\n    }\n\n    if (searchText == null || searchText.length < 2) {\n      return items;\n    }\n\n    searchText = searchText.trim().toLowerCase();\n    return items.filter((i) => {\n      if (\n        prop1 != null &&\n        i[prop1] != null &&\n        i[prop1].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop2 != null &&\n        i[prop2] != null &&\n        i[prop2].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      if (\n        prop3 != null &&\n        i[prop3] != null &&\n        i[prop3].toString().toLowerCase().indexOf(searchText) > -1\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface User {\n  name?: string;\n  email: string;\n}\n\n@Pipe({\n  name: \"userName\",\n})\nexport class UserNamePipe implements PipeTransform {\n  transform(user?: User): string {\n    if (user == null) {\n      return null;\n    }\n\n    return user.name == null || user.name.trim() === \"\" ? user.email : user.name;\n  }\n}\n","import { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from \"@angular/cdk/a11y\";\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ModalService } from \"../../services/modal.service\";\n\nimport { ModalRef } from \"./modal.ref\";\n\n@Component({\n  selector: \"app-modal\",\n  template: \"<ng-template #modalContent></ng-template>\",\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n  componentRef: ComponentRef<any>;\n\n  @ViewChild(\"modalContent\", { read: ViewContainerRef, static: true })\n  modalContentRef: ViewContainerRef;\n\n  childComponentType: Type<any>;\n  setComponentParameters: (component: any) => void;\n\n  private focusTrap: ConfigurableFocusTrap;\n\n  constructor(\n    private modalService: ModalService,\n    private cd: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    public modalRef: ModalRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    if (this.setComponentParameters != null) {\n      this.setComponentParameters(this.componentRef.instance);\n    }\n    this.cd.detectChanges();\n\n    this.modalRef.created(this.el.nativeElement);\n    this.focusTrap = this.focusTrapFactory.create(\n      this.el.nativeElement.querySelector(\".modal-dialog\")\n    );\n    if (this.el.nativeElement.querySelector(\"[appAutoFocus]\") == null) {\n      this.focusTrap.focusFirstTabbableElementWhenReady();\n    }\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n    this.modalContentRef.clear();\n    this.componentRef = this.modalContentRef.createComponent(componentFactory);\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n    this.focusTrap.destroy();\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  getFocus() {\n    const autoFocusEl = this.el.nativeElement.querySelector(\"[appAutoFocus]\") as HTMLElement;\n    autoFocusEl?.focus();\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class ModalInjector implements Injector {\n  constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any, flags?: any) {\n    return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\nimport { DynamicModalComponent } from \"../components/modal/dynamic-modal.component\";\nimport { ModalInjector } from \"../components/modal/modal-injector\";\nimport { ModalRef } from \"../components/modal/modal.ref\";\n\nexport class ModalConfig<D = any> {\n  data?: D;\n  allowMultipleModals?: boolean;\n  replaceTopModal?: boolean;\n}\n\n@Injectable()\nexport class ModalService {\n  protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n  // Lazy loaded modules are not available in componentFactoryResolver,\n  // therefore modules needs to manually initialize their resolvers.\n  private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === \"Escape\" && this.modalCount > 0) {\n        this.topModal.instance.close();\n      }\n    });\n  }\n\n  get modalCount() {\n    return this.modalList.length;\n  }\n\n  private get topModal() {\n    return this.modalList[this.modalCount - 1];\n  }\n\n  /**\n   * @deprecated Use `dialogService.open` (in web) or `modalService.open` (in desktop/browser) instead.\n   * If replacing an existing call to this method, also remove any `@ViewChild` and `<ng-template>` associated with the\n   * existing usage.\n   */\n  async openViewRef<T>(\n    componentType: Type<T>,\n    viewContainerRef: ViewContainerRef,\n    setComponentParameters: (component: T) => void = null\n  ): Promise<[ModalRef, T]> {\n    const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n    modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n    viewContainerRef.insert(modalComponentRef.hostView);\n\n    await modalRef.onCreated.pipe(first()).toPromise();\n\n    return [modalRef, modalComponentRef.instance.componentRef.instance];\n  }\n\n  open(componentType: Type<any>, config: ModalConfig = {}) {\n    const { replaceTopModal = false, allowMultipleModals = false } = config;\n\n    if (this.modalCount > 0 && replaceTopModal) {\n      this.topModal.instance.close();\n    }\n\n    if (this.modalCount > 0 && !allowMultipleModals) {\n      return;\n    }\n\n    const [modalRef] = this.openInternal(componentType, config, true);\n\n    return modalRef;\n  }\n\n  registerComponentFactoryResolver<T>(\n    componentType: Type<T>,\n    componentFactoryResolver: ComponentFactoryResolver\n  ): void {\n    this.factoryResolvers.set(componentType, componentFactoryResolver);\n  }\n\n  resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n    if (this.factoryResolvers.has(componentType)) {\n      return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n    }\n\n    return this.componentFactoryResolver.resolveComponentFactory(componentType);\n  }\n\n  closeAll(): void {\n    this.modalList.forEach((modal) => modal.instance.close());\n  }\n\n  protected openInternal(\n    componentType: Type<any>,\n    config?: ModalConfig,\n    attachToDom?: boolean\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const [modalRef, componentRef] = this.createModalComponent(config);\n    componentRef.instance.childComponentType = componentType;\n\n    if (attachToDom) {\n      this.applicationRef.attachView(componentRef.hostView);\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      document.body.appendChild(domElem);\n    }\n\n    modalRef.onClosed.pipe(first()).subscribe(() => {\n      if (attachToDom) {\n        this.applicationRef.detachView(componentRef.hostView);\n      }\n      componentRef.destroy();\n\n      this.modalList.pop();\n      if (this.modalCount > 0) {\n        this.topModal.instance.getFocus();\n      }\n    });\n\n    this.setupHandlers(modalRef);\n\n    this.modalList.push(componentRef);\n\n    return [modalRef, componentRef];\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    let backdrop: HTMLElement = null;\n\n    // Add backdrop, setup [data-dismiss] handler.\n    modalRef.onCreated.pipe(first()).subscribe((el) => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalEl: HTMLElement = el.querySelector(\".modal\");\n      const dialogEl = modalEl.querySelector(\".modal-dialog\") as HTMLElement;\n\n      backdrop = document.createElement(\"div\");\n      backdrop.className = \"modal-backdrop fade\";\n      backdrop.style.zIndex = `${this.modalCount}040`;\n      modalEl.prepend(backdrop);\n\n      dialogEl.addEventListener(\"click\", (e: Event) => {\n        e.stopPropagation();\n      });\n      dialogEl.style.zIndex = `${this.modalCount}050`;\n\n      const modals = Array.from(\n        el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]')\n      );\n      for (const closeElement of modals) {\n        closeElement.addEventListener(\"click\", () => {\n          modalRef.close();\n        });\n      }\n    });\n\n    // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      modalRef.closed();\n\n      if (this.modalCount === 0) {\n        document.body.classList.remove(\"modal-open\");\n      }\n    });\n  }\n\n  protected createModalComponent(\n    config: ModalConfig\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const modalRef = new ModalRef();\n\n    const map = new WeakMap();\n    map.set(ModalConfig, config);\n    map.set(ModalRef, modalRef);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n    const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n    return [modalRef, componentRef];\n  }\n}\n","import { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\nexport class DynamicTreeNode<T extends CollectionView | FolderView> {\n  fullList: T[];\n  nestedList: TreeNode<T>[];\n\n  hasId(id: string): boolean {\n    return this.fullList != null && this.fullList.filter((i: T) => i.id === id).length > 0;\n  }\n\n  constructor(init?: Partial<DynamicTreeNode<T>>) {\n    Object.assign(this, init);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { firstValueFrom, from, mergeMap, Observable } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ServiceUtils } from \"@bitwarden/common/misc/serviceUtils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\nimport { DynamicTreeNode } from \"../models/dynamic-tree-node.model\";\n\nconst NestingDelimiter = \"/\";\n\n@Injectable()\nexport class VaultFilterService {\n  constructor(\n    protected stateService: StateService,\n    protected organizationService: OrganizationService,\n    protected folderService: FolderService,\n    protected cipherService: CipherService,\n    protected collectionService: CollectionService,\n    protected policyService: PolicyService\n  ) {}\n\n  async storeCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await this.stateService.setCollapsedGroupings(Array.from(collapsedFilterNodes));\n  }\n\n  async buildCollapsedFilterNodes(): Promise<Set<string>> {\n    return new Set(await this.stateService.getCollapsedGroupings());\n  }\n\n  buildOrganizations(): Promise<Organization[]> {\n    return this.organizationService.getAll();\n  }\n\n  buildNestedFolders(organizationId?: string): Observable<DynamicTreeNode<FolderView>> {\n    const transformation = async (storedFolders: FolderView[]) => {\n      let folders: FolderView[];\n      if (organizationId != null) {\n        const ciphers = await this.cipherService.getAllDecrypted();\n        const orgCiphers = ciphers.filter((c) => c.organizationId == organizationId);\n        folders = storedFolders.filter(\n          (f) =>\n            orgCiphers.filter((oc) => oc.folderId == f.id).length > 0 ||\n            ciphers.filter((c) => c.folderId == f.id).length < 1\n        );\n      } else {\n        folders = storedFolders;\n      }\n      const nestedFolders = await this.getAllFoldersNested(folders);\n      return new DynamicTreeNode<FolderView>({\n        fullList: folders,\n        nestedList: nestedFolders,\n      });\n    };\n\n    return this.folderService.folderViews$.pipe(\n      mergeMap((folders) => from(transformation(folders)))\n    );\n  }\n\n  async buildCollections(organizationId?: string): Promise<DynamicTreeNode<CollectionView>> {\n    const storedCollections = await this.collectionService.getAllDecrypted();\n    let collections: CollectionView[];\n    if (organizationId != null) {\n      collections = storedCollections.filter((c) => c.organizationId === organizationId);\n    } else {\n      collections = storedCollections;\n    }\n    const nestedCollections = await this.collectionService.getAllNested(collections);\n    return new DynamicTreeNode<CollectionView>({\n      fullList: collections,\n      nestedList: nestedCollections,\n    });\n  }\n\n  async checkForSingleOrganizationPolicy(): Promise<boolean> {\n    return await firstValueFrom(\n      this.policyService.policyAppliesToActiveUser$(PolicyType.SingleOrg)\n    );\n  }\n\n  async checkForPersonalOwnershipPolicy(): Promise<boolean> {\n    return await firstValueFrom(\n      this.policyService.policyAppliesToActiveUser$(PolicyType.PersonalOwnership)\n    );\n  }\n\n  protected async getAllFoldersNested(folders: FolderView[]): Promise<TreeNode<FolderView>[]> {\n    const nodes: TreeNode<FolderView>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView();\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  async getFolderNested(id: string): Promise<TreeNode<FolderView>> {\n    const folders = await this.getAllFoldersNested(\n      await firstValueFrom(this.folderService.folderViews$)\n    );\n    return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n  }\n}\n","import { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/set-key-connector-key.request\";\nimport { AttachmentRequest } from \"../models/request/attachment.request\";\nimport { BitPayInvoiceRequest } from \"../models/request/bit-pay-invoice.request\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipher-bulk-delete.request\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipher-bulk-move.request\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipher-bulk-restore.request\";\nimport { CipherBulkShareRequest } from \"../models/request/cipher-bulk-share.request\";\nimport { CipherCollectionsRequest } from \"../models/request/cipher-collections.request\";\nimport { CipherCreateRequest } from \"../models/request/cipher-create.request\";\nimport { CipherPartialRequest } from \"../models/request/cipher-partial.request\";\nimport { CipherShareRequest } from \"../models/request/cipher-share.request\";\nimport { CipherRequest } from \"../models/request/cipher.request\";\nimport { CollectionRequest } from \"../models/request/collection.request\";\nimport { DeleteRecoverRequest } from \"../models/request/delete-recover.request\";\nimport { DeviceVerificationRequest } from \"../models/request/device-verification.request\";\nimport { EmailTokenRequest } from \"../models/request/email-token.request\";\nimport { EmailRequest } from \"../models/request/email.request\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergency-access-accept.request\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergency-access-confirm.request\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergency-access-invite.request\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergency-access-password.request\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergency-access-update.request\";\nimport { EventRequest } from \"../models/request/event.request\";\nimport { GroupRequest } from \"../models/request/group.request\";\nimport { IapCheckRequest } from \"../models/request/iap-check.request\";\nimport { ApiTokenRequest } from \"../models/request/identity-token/api-token.request\";\nimport { PasswordTokenRequest } from \"../models/request/identity-token/password-token.request\";\nimport { SsoTokenRequest } from \"../models/request/identity-token/sso-token.request\";\nimport { ImportCiphersRequest } from \"../models/request/import-ciphers.request\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/import-organization-ciphers.request\";\nimport { KdfRequest } from \"../models/request/kdf.request\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/key-connector-user-key.request\";\nimport { KeysRequest } from \"../models/request/keys.request\";\nimport { OrganizationConnectionRequest } from \"../models/request/organization-connection.request\";\nimport { OrganizationImportRequest } from \"../models/request/organization-import.request\";\nimport { OrganizationUserAcceptRequest } from \"../models/request/organization-user-accept.request\";\nimport { OrganizationUserBulkConfirmRequest } from \"../models/request/organization-user-bulk-confirm.request\";\nimport { OrganizationUserBulkRequest } from \"../models/request/organization-user-bulk.request\";\nimport { OrganizationUserConfirmRequest } from \"../models/request/organization-user-confirm.request\";\nimport { OrganizationUserInviteRequest } from \"../models/request/organization-user-invite.request\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"../models/request/organization-user-reset-password-enrollment.request\";\nimport { OrganizationUserResetPasswordRequest } from \"../models/request/organization-user-reset-password.request\";\nimport { OrganizationUserUpdateGroupsRequest } from \"../models/request/organization-user-update-groups.request\";\nimport { OrganizationUserUpdateRequest } from \"../models/request/organization-user-update.request\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organization-sponsorship-create.request\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organization-sponsorship-redeem.request\";\nimport { PasswordHintRequest } from \"../models/request/password-hint.request\";\nimport { PasswordRequest } from \"../models/request/password.request\";\nimport { PasswordlessCreateAuthRequest } from \"../models/request/passwordless-create-auth.request\";\nimport { PaymentRequest } from \"../models/request/payment.request\";\nimport { PreloginRequest } from \"../models/request/prelogin.request\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/provider-add-organization.request\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/provider-organization-create.request\";\nimport { ProviderSetupRequest } from \"../models/request/provider/provider-setup.request\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/provider-update.request\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/provider-user-accept.request\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/provider-user-bulk-confirm.request\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/provider-user-bulk.request\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/provider-user-confirm.request\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/provider-user-invite.request\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/provider-user-update.request\";\nimport { RegisterRequest } from \"../models/request/register.request\";\nimport { SecretVerificationRequest } from \"../models/request/secret-verification.request\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selection-read-only.request\";\nimport { SendAccessRequest } from \"../models/request/send-access.request\";\nimport { SendRequest } from \"../models/request/send.request\";\nimport { SetPasswordRequest } from \"../models/request/set-password.request\";\nimport { StorageRequest } from \"../models/request/storage.request\";\nimport { TaxInfoUpdateRequest } from \"../models/request/tax-info-update.request\";\nimport { TwoFactorEmailRequest } from \"../models/request/two-factor-email.request\";\nimport { TwoFactorProviderRequest } from \"../models/request/two-factor-provider.request\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/two-factor-recovery.request\";\nimport { UpdateDomainsRequest } from \"../models/request/update-domains.request\";\nimport { UpdateKeyRequest } from \"../models/request/update-key.request\";\nimport { UpdateProfileRequest } from \"../models/request/update-profile.request\";\nimport { UpdateTempPasswordRequest } from \"../models/request/update-temp-password.request\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/update-two-factor-authenticator.request\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/update-two-factor-duo.request\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/update-two-factor-email.request\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/update-two-factor-web-authn-delete.request\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/update-two-factor-web-authn.request\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/update-two-factor-yubio-otp.request\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verify-delete-recover.request\";\nimport { VerifyEmailRequest } from \"../models/request/verify-email.request\";\nimport { ApiKeyResponse } from \"../models/response/api-key.response\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { AttachmentResponse } from \"../models/response/attachment.response\";\nimport { AuthRequestResponse } from \"../models/response/auth-request.response\";\nimport { RegisterResponse } from \"../models/response/authentication/register.response\";\nimport { BillingHistoryResponse } from \"../models/response/billing-history.response\";\nimport { BillingPaymentResponse } from \"../models/response/billing-payment.response\";\nimport { BreachAccountResponse } from \"../models/response/breach-account.response\";\nimport { CipherResponse } from \"../models/response/cipher.response\";\nimport {\n  CollectionGroupDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collection.response\";\nimport { DeviceVerificationResponse } from \"../models/response/device-verification.response\";\nimport { DomainsResponse } from \"../models/response/domains.response\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergency-access.response\";\nimport { EventResponse } from \"../models/response/event.response\";\nimport { GroupDetailsResponse, GroupResponse } from \"../models/response/group.response\";\nimport { IdentityCaptchaResponse } from \"../models/response/identity-captcha.response\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/key-connector-user-key.response\";\nimport { ListResponse } from \"../models/response/list.response\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organization-connection.response\";\nimport { OrganizationExportResponse } from \"../models/response/organization-export.response\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organization-sponsorship-sync-status.response\";\nimport { OrganizationUserBulkPublicKeyResponse } from \"../models/response/organization-user-bulk-public-key.response\";\nimport { OrganizationUserBulkResponse } from \"../models/response/organization-user-bulk.response\";\nimport {\n  OrganizationUserDetailsResponse,\n  OrganizationUserUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n} from \"../models/response/organization-user.response\";\nimport { PaymentResponse } from \"../models/response/payment.response\";\nimport { PlanResponse } from \"../models/response/plan.response\";\nimport { PolicyResponse } from \"../models/response/policy.response\";\nimport { PreloginResponse } from \"../models/response/prelogin.response\";\nimport { ProfileResponse } from \"../models/response/profile.response\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/provider-organization.response\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/provider-user-bulk-public-key.response\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/provider-user-bulk.response\";\nimport {\n  ProviderUserUserDetailsResponse,\n  ProviderUserResponse,\n} from \"../models/response/provider/provider-user.response\";\nimport { ProviderResponse } from \"../models/response/provider/provider.response\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selection-read-only.response\";\nimport { SendAccessResponse } from \"../models/response/send-access.response\";\nimport { SendFileDownloadDataResponse } from \"../models/response/send-file-download-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\nimport { SendResponse } from \"../models/response/send.response\";\nimport { SsoPreValidateResponse } from \"../models/response/sso-pre-validate.response\";\nimport { SubscriptionResponse } from \"../models/response/subscription.response\";\nimport { SyncResponse } from \"../models/response/sync.response\";\nimport { TaxInfoResponse } from \"../models/response/tax-info.response\";\nimport { TaxRateResponse } from \"../models/response/tax-rate.response\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/two-factor-authenticator.response\";\nimport { TwoFactorDuoResponse } from \"../models/response/two-factor-duo.response\";\nimport { TwoFactorEmailResponse } from \"../models/response/two-factor-email.response\";\nimport { TwoFactorProviderResponse } from \"../models/response/two-factor-provider.response\";\nimport { TwoFactorRecoverResponse } from \"../models/response/two-factor-recover.response\";\nimport {\n  TwoFactorWebAuthnResponse,\n  ChallengeResponse,\n} from \"../models/response/two-factor-web-authn.response\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/two-factor-yubi-key.response\";\nimport { UserKeyResponse } from \"../models/response/user-key.response\";\nimport { SendAccessView } from \"../models/view/send-access.view\";\n\nexport abstract class ApiService {\n  send: (\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ) => Promise<any>;\n\n  postIdentityToken: (\n    request: PasswordTokenRequest | SsoTokenRequest | ApiTokenRequest\n  ) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n  refreshIdentityToken: () => Promise<any>;\n\n  getProfile: () => Promise<ProfileResponse>;\n  getUserSubscription: () => Promise<SubscriptionResponse>;\n  getTaxInfo: () => Promise<TaxInfoResponse>;\n  putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n  putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n  postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n  postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n  postEmail: (request: EmailRequest) => Promise<any>;\n  postPassword: (request: PasswordRequest) => Promise<any>;\n  setPassword: (request: SetPasswordRequest) => Promise<any>;\n  postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n  postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n  getAccountRevisionDate: () => Promise<number>;\n  postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n  postRegister: (request: RegisterRequest) => Promise<RegisterResponse>;\n  postPremium: (data: FormData) => Promise<PaymentResponse>;\n  postIapCheck: (request: IapCheckRequest) => Promise<any>;\n  postReinstatePremium: () => Promise<any>;\n  postCancelPremium: () => Promise<any>;\n  postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n  postAccountPayment: (request: PaymentRequest) => Promise<void>;\n  postAccountLicense: (data: FormData) => Promise<any>;\n  postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n  postAccountKeys: (request: KeysRequest) => Promise<any>;\n  postAccountVerifyEmail: () => Promise<any>;\n  postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n  postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n  postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n  postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n  postAccountKdf: (request: KdfRequest) => Promise<any>;\n  postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n  postConvertToKeyConnector: () => Promise<void>;\n  //passwordless\n  postAuthRequest: (request: PasswordlessCreateAuthRequest) => Promise<AuthRequestResponse>;\n  getAuthResponse: (id: string, accessCode: string) => Promise<AuthRequestResponse>;\n\n  getUserBillingHistory: () => Promise<BillingHistoryResponse>;\n  getUserBillingPayment: () => Promise<BillingPaymentResponse>;\n\n  getSend: (id: string) => Promise<SendResponse>;\n  postSendAccess: (\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendAccessResponse>;\n  getSends: () => Promise<ListResponse<SendResponse>>;\n  postSend: (request: SendRequest) => Promise<SendResponse>;\n  postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n  postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n  putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n  putSendRemovePassword: (id: string) => Promise<SendResponse>;\n  deleteSend: (id: string) => Promise<any>;\n  getSendFileDownloadData: (\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendFileDownloadDataResponse>;\n  renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n  getCipher: (id: string) => Promise<CipherResponse>;\n  getFullCipherDetails: (id: string) => Promise<CipherResponse>;\n  getCipherAdmin: (id: string) => Promise<CipherResponse>;\n  getAttachmentData: (\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ) => Promise<AttachmentResponse>;\n  getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n  postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n  postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  putPartialCipher: (id: string, request: CipherPartialRequest) => Promise<CipherResponse>;\n  putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  deleteCipher: (id: string) => Promise<any>;\n  deleteCipherAdmin: (id: string) => Promise<any>;\n  deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n  putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n  putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n  putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n  postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n  postImportOrganizationCiphers: (\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ) => Promise<any>;\n  putDeleteCipher: (id: string) => Promise<any>;\n  putDeleteCipherAdmin: (id: string) => Promise<any>;\n  putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putRestoreCipher: (id: string) => Promise<CipherResponse>;\n  putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n  putRestoreManyCiphers: (\n    request: CipherBulkRestoreRequest\n  ) => Promise<ListResponse<CipherResponse>>;\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  postCipherAttachment: (\n    id: string,\n    request: AttachmentRequest\n  ) => Promise<AttachmentUploadDataResponse>;\n  deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n  deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n  postShareCipherAttachment: (\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ) => Promise<any>;\n  renewAttachmentUploadUrl: (\n    id: string,\n    attachmentId: string\n  ) => Promise<AttachmentUploadDataResponse>;\n  postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n  getCollectionDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<CollectionGroupDetailsResponse>;\n  getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n  getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n  getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n  postCollection: (\n    organizationId: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  putCollectionUsers: (\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ) => Promise<any>;\n  putCollection: (\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  deleteCollection: (organizationId: string, id: string) => Promise<any>;\n  deleteCollectionUser: (\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ) => Promise<any>;\n\n  getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n  getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n  getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n  postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n  putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n  deleteGroup: (organizationId: string, id: string) => Promise<any>;\n  deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n  getOrganizationUser: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserDetailsResponse>;\n  getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n  getOrganizationUsers: (\n    organizationId: string\n  ) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n  getOrganizationUserResetPasswordDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<OrganizationUserResetPasswordDetailsReponse>;\n  postOrganizationUserInvite: (\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ) => Promise<any>;\n  postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n  postManyOrganizationUserReinvite: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  postOrganizationUserAccept: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ) => Promise<any>;\n  postOrganizationUserConfirm: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ) => Promise<any>;\n  postOrganizationUsersPublicKey: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n  postOrganizationUserBulkConfirm: (\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  putOrganizationUser: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ) => Promise<any>;\n  putOrganizationUserGroups: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ) => Promise<any>;\n  putOrganizationUserResetPasswordEnrollment: (\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ) => Promise<void>;\n  putOrganizationUserResetPassword: (\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ) => Promise<any>;\n  deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  revokeOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  revokeManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n  restoreOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n  restoreManyOrganizationUsers: (\n    organizationId: string,\n    request: OrganizationUserBulkRequest\n  ) => Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  getSync: () => Promise<SyncResponse>;\n  postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n  getSettingsDomains: () => Promise<DomainsResponse>;\n  putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n  getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorOrganizationProviders: (\n    organizationId: string\n  ) => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorAuthenticator: (\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n  getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n  getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n  getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n  getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n  putTwoFactorAuthenticator: (\n    request: UpdateTwoFactorAuthenticatorRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n  putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorYubiKey: (\n    request: UpdateTwoFactorYubioOtpRequest\n  ) => Promise<TwoFactorYubiKeyResponse>;\n  putTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  deleteTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n  putTwoFactorOrganizationDisable: (\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ) => Promise<TwoFactorProviderResponse>;\n  postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n  postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n  postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n  getDeviceVerificationSettings: () => Promise<DeviceVerificationResponse>;\n  putDeviceVerificationSettings: (\n    request: DeviceVerificationRequest\n  ) => Promise<DeviceVerificationResponse>;\n\n  getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n  getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n  getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n  getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n  putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n  deleteEmergencyAccess: (id: string) => Promise<any>;\n  postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n  postEmergencyAccessReinvite: (id: string) => Promise<any>;\n  postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n  postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n  postEmergencyAccessInitiate: (id: string) => Promise<any>;\n  postEmergencyAccessApprove: (id: string) => Promise<any>;\n  postEmergencyAccessReject: (id: string) => Promise<any>;\n  postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n  postEmergencyAccessPassword: (\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ) => Promise<any>;\n  postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n  getCloudCommunicationsEnabled: () => Promise<boolean>;\n  abstract getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId: string\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  deleteOrganizationConnection: (id: string) => Promise<void>;\n  getPlans: () => Promise<ListResponse<PlanResponse>>;\n  getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n\n  postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n  getProvider: (id: string) => Promise<ProviderResponse>;\n  putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n  getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n  getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n  postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n  postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n  postManyProviderUserReinvite: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  postProviderUserAccept: (\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ) => Promise<any>;\n  postProviderUserConfirm: (\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ) => Promise<any>;\n  postProviderUsersPublicKey: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n  postProviderUserBulkConfirm: (\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  putProviderUser: (\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ) => Promise<any>;\n  deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyProviderUsers: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  getProviderClients: (\n    providerId: string\n  ) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n  postProviderAddOrganization: (\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ) => Promise<any>;\n  postProviderCreateOrganization: (\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ) => Promise<ProviderOrganizationResponse>;\n  deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n  getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n  getEventsCipher: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganization: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganizationUser: (\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProvider: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProviderUser: (\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n  deleteSsoUser: (organizationId: string) => Promise<void>;\n  getSsoUserIdentifier: () => Promise<string>;\n\n  getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n  getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n  postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n  postSetupPayment: () => Promise<string>;\n\n  getActiveBearerToken: () => Promise<string>;\n  fetch: (request: Request) => Promise<Response>;\n  nativeFetch: (request: Request) => Promise<Response>;\n\n  preValidateSso: (identifier: string) => Promise<SsoPreValidateResponse>;\n\n  postCreateSponsorship: (\n    sponsorshipOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ) => Promise<void>;\n  getSponsorshipSyncStatus: (\n    sponsoredOrgId: string\n  ) => Promise<OrganizationSponsorshipSyncStatusResponse>;\n  deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n  deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n  postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n  postRedeemSponsorship: (\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ) => Promise<void>;\n  postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n  getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n  postUserKeyToKeyConnector: (\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ) => Promise<void>;\n  getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n  getOrganizationExport: (organizationId: string) => Promise<OrganizationExportResponse>;\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { FieldView } from \"../models/view/field.view\";\n\nexport abstract class CipherService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher?: Cipher\n  ) => Promise<Cipher>;\n  encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n  encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n  get: (id: string) => Promise<Cipher>;\n  getAll: () => Promise<Cipher[]>;\n  getAllDecrypted: () => Promise<CipherView[]>;\n  getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n  getAllDecryptedForUrl: (\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch?: UriMatchType\n  ) => Promise<CipherView[]>;\n  getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n  getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getNextCipherForUrl: (url: string) => Promise<CipherView>;\n  updateLastUsedIndexForUrl: (url: string) => void;\n  updateLastUsedDate: (id: string) => Promise<void>;\n  updateLastLaunchedDate: (id: string) => Promise<void>;\n  saveNeverDomain: (domain: string) => Promise<void>;\n  createWithServer: (cipher: Cipher) => Promise<any>;\n  updateWithServer: (cipher: Cipher) => Promise<any>;\n  shareWithServer: (\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  shareManyWithServer: (\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  saveAttachmentWithServer: (\n    cipher: Cipher,\n    unencryptedFile: any,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveAttachmentRawWithServer: (\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n  upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n  replace: (ciphers: { [id: string]: CipherData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  deleteManyWithServer: (ids: string[]) => Promise<any>;\n  deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n  deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n  sortCiphersByLastUsed: (a: any, b: any) => number;\n  sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n  getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n  softDelete: (id: string | string[]) => Promise<any>;\n  softDeleteWithServer: (id: string) => Promise<any>;\n  softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n  restore: (\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) => Promise<any>;\n  restoreWithServer: (id: string) => Promise<any>;\n  restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { CollectionData } from \"../models/data/collection.data\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/tree-node\";\nimport { CollectionView } from \"../models/view/collection.view\";\n\nexport abstract class CollectionService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: CollectionView) => Promise<Collection>;\n  decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n  get: (id: string) => Promise<Collection>;\n  getAll: () => Promise<Collection[]>;\n  getAllDecrypted: () => Promise<CollectionView[]>;\n  getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n  getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n  upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n  replace: (collections: { [id: string]: CollectionData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { ProfileOrganizationResponse } from \"../models/response/profile-organization.response\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profile-provider-organization.response\";\nimport { ProfileProviderResponse } from \"../models/response/profile-provider.response\";\n\nexport abstract class CryptoService {\n  setKey: (key: SymmetricCryptoKey) => Promise<any>;\n  setKeyHash: (keyHash: string) => Promise<void>;\n  setEncKey: (encKey: string) => Promise<void>;\n  setEncPrivateKey: (encPrivateKey: string) => Promise<void>;\n  setOrgKeys: (\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ) => Promise<void>;\n  setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<void>;\n  getKey: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyFromStorage: (keySuffix: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyHash: () => Promise<string>;\n  compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n  getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  getPublicKey: () => Promise<ArrayBuffer>;\n  getPrivateKey: () => Promise<ArrayBuffer>;\n  getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n  getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n  getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n  getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n  getKeyForUserEncryption: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  hasKey: () => Promise<boolean>;\n  hasKeyInMemory: (userId?: string) => Promise<boolean>;\n  hasKeyStored: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<boolean>;\n  hasEncKey: () => Promise<boolean>;\n  clearKey: (clearSecretStorage?: boolean, userId?: string) => Promise<any>;\n  clearKeyHash: () => Promise<any>;\n  clearEncKey: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearKeyPair: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearOrgKeys: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n  clearPinProtectedKey: () => Promise<any>;\n  clearKeys: (userId?: string) => Promise<any>;\n  toggleKey: () => Promise<any>;\n  makeKey: (\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeKeyFromPin: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs?: EncString\n  ) => Promise<SymmetricCryptoKey>;\n  makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n  makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n  makePinKey: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n  hashPassword: (\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ) => Promise<string>;\n  makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n  remakeEncKey: (\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ) => Promise<[SymmetricCryptoKey, EncString]>;\n  encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n  encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n  rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n  rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n  decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n  decryptFromBytes: (encBuffer: EncArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  randomNumber: (min: number, max: number) => Promise<number>;\n  validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","import { EventType } from \"../enums/eventType\";\n\nexport abstract class EventService {\n  collect: (\n    eventType: EventType,\n    cipherId?: string,\n    uploadImmediately?: boolean,\n    organizationId?: string\n  ) => Promise<any>;\n  uploadEvents: (userId?: string) => Promise<any>;\n  clearEvents: (userId?: string) => Promise<any>;\n}\n","import { EventView } from \"../models/view/event.view\";\n\nexport type ExportFormat = \"csv\" | \"json\" | \"encrypted_json\";\n\nexport abstract class ExportService {\n  getExport: (format?: ExportFormat, organizationId?: string) => Promise<string>;\n  getPasswordProtectedExport: (password: string, organizationId?: string) => Promise<string>;\n  getOrganizationExport: (organizationId: string, format?: ExportFormat) => Promise<string>;\n  getEventExport: (events: EventView[]) => Promise<string>;\n  getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport abstract class FileDownloadService {\n  download: (request: FileDownloadRequest) => void;\n}\n","import { Observable } from \"rxjs\";\n\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { FolderView } from \"../../models/view/folder.view\";\n\nexport abstract class FolderService {\n  folders$: Observable<Folder[]>;\n  folderViews$: Observable<FolderView[]>;\n\n  clearCache: () => Promise<void>;\n  encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n  get: (id: string) => Promise<Folder>;\n  /**\n   * @deprecated Only use in CLI!\n   */\n  getAllDecryptedFromState: () => Promise<FolderView[]>;\n}\n\nexport abstract class InternalFolderService extends FolderService {\n  upsert: (folder: FolderData | FolderData[]) => Promise<void>;\n  replace: (folders: { [id: string]: FolderData }) => Promise<void>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nexport abstract class I18nService {\n  locale$: Observable<string>;\n  supportedTranslationLocales: string[];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames: Map<string, string>;\n  t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n  translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { Organization } from \"../models/domain/organization\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport abstract class KeyConnectorService {\n  getAndSetKey: (url?: string) => Promise<void>;\n  getManagingOrganization: () => Promise<Organization>;\n  getUsesKeyConnector: () => Promise<boolean>;\n  migrateUser: () => Promise<void>;\n  userNeedsMigration: () => Promise<boolean>;\n  convertNewSsoUserToKeyConnector: (\n    tokenResponse: IdentityTokenResponse,\n    orgId: string\n  ) => Promise<void>;\n  setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n  setConvertAccountRequired: (status: boolean) => Promise<void>;\n  getConvertAccountRequired: () => Promise<boolean>;\n  removeConvertAccountRequired: () => Promise<void>;\n  clear: () => Promise<void>;\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nexport abstract class LogService {\n  debug: (message: string) => void;\n  info: (message: string) => void;\n  warning: (message: string) => void;\n  error: (message: string) => void;\n  write: (level: LogLevelType, message: string) => void;\n}\n","import { map, Observable } from \"rxjs\";\n\nimport { Utils } from \"../../misc/utils\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { I18nService } from \"../i18n.service\";\n\nexport function canAccessToolsTab(org: Organization): boolean {\n  return org.canAccessImportExport || org.canAccessReports;\n}\n\nexport function canAccessSettingsTab(org: Organization): boolean {\n  return org.isOwner;\n}\n\nexport function canAccessManageTab(org: Organization): boolean {\n  return (\n    org.canCreateNewCollections ||\n    org.canEditAnyCollection ||\n    org.canDeleteAnyCollection ||\n    org.canEditAssignedCollections ||\n    org.canDeleteAssignedCollections ||\n    org.canAccessEventLogs ||\n    org.canManageGroups ||\n    org.canManageUsers ||\n    org.canManagePolicies ||\n    org.canManageSso ||\n    org.canManageScim\n  );\n}\n\nexport function canAccessOrgAdmin(org: Organization): boolean {\n  return canAccessToolsTab(org) || canAccessSettingsTab(org) || canAccessManageTab(org);\n}\n\nexport function getOrganizationById(id: string) {\n  return map<Organization[], Organization | undefined>((orgs) => orgs.find((o) => o.id === id));\n}\n\nexport function canAccessAdmin(i18nService: I18nService) {\n  return map<Organization[], Organization[]>((orgs) =>\n    orgs.filter(canAccessOrgAdmin).sort(Utils.getSortFunction(i18nService, \"name\"))\n  );\n}\n\nexport abstract class OrganizationService {\n  organizations$: Observable<Organization[]>;\n\n  get: (id: string) => Organization;\n  getByIdentifier: (identifier: string) => Organization;\n  getAll: (userId?: string) => Promise<Organization[]>;\n  canManageSponsorships: () => Promise<boolean>;\n  hasOrganizations: () => boolean;\n}\n","import { ClientType } from \"../enums/clientType\";\nimport { DeviceType } from \"../enums/deviceType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  getClientType: () => ClientType;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  getApplicationVersion: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  supportsSecureStorage: () => boolean;\n}\n","import { Observable } from \"rxjs\";\n\nimport { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/reset-password-policy-options\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport abstract class PolicyService {\n  policies$: Observable<Policy[]>;\n  masterPasswordPolicyOptions$: (policies?: Policy[]) => Observable<MasterPasswordPolicyOptions>;\n  policyAppliesToActiveUser$: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean\n  ) => Observable<boolean>;\n\n  /**\n   * @deprecated Do not call this, use the policies$ observable collection\n   */\n  getAll: (type?: PolicyType, userId?: string) => Promise<Policy[]>;\n  evaluateMasterPassword: (\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions?: MasterPasswordPolicyOptions\n  ) => boolean;\n  getResetPasswordPolicyOptions: (\n    policies: Policy[],\n    orgId: string\n  ) => [ResetPasswordPolicyOptions, boolean];\n  mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n  policyAppliesToUser: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) => Promise<boolean>;\n}\n\nexport abstract class InternalPolicyService extends PolicyService {\n  upsert: (policy: PolicyData) => Promise<any>;\n  replace: (policies: { [id: string]: PolicyData }) => Promise<void>;\n  clear: (userId?: string) => Promise<any>;\n}\n","import { BehaviorSubject, Observable } from \"rxjs\";\n\nimport { KdfType } from \"../enums/kdfType\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encrypted-organization-key.data\";\nimport { EventData } from \"../models/data/event.data\";\nimport { FolderData } from \"../models/data/folder.data\";\nimport { LocalData } from \"../models/data/local.data\";\nimport { OrganizationData } from \"../models/data/organization.data\";\nimport { PolicyData } from \"../models/data/policy.data\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { SendData } from \"../models/data/send.data\";\nimport { ServerConfigData } from \"../models/data/server-config.data\";\nimport { Account, AccountSettingsSettings } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { Policy } from \"../models/domain/policy\";\nimport { StorageOptions } from \"../models/domain/storage-options\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { WindowState } from \"../models/domain/window-state\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { CollectionView } from \"../models/view/collection.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport abstract class StateService<T extends Account = Account> {\n  accounts: BehaviorSubject<{ [userId: string]: T }>;\n  activeAccount$: Observable<string>;\n  activeAccountUnlocked$: Observable<boolean>;\n\n  addAccount: (account: T) => Promise<void>;\n  setActiveUser: (userId: string) => Promise<void>;\n  clean: (options?: StorageOptions) => Promise<void>;\n  init: () => Promise<void>;\n\n  getAccessToken: (options?: StorageOptions) => Promise<string>;\n  setAccessToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getAddEditCipherInfo: (options?: StorageOptions) => Promise<any>;\n  setAddEditCipherInfo: (value: any, options?: StorageOptions) => Promise<void>;\n  getAlwaysShowDock: (options?: StorageOptions) => Promise<boolean>;\n  setAlwaysShowDock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientId: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientId: (value: string, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientSecret: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientSecret: (value: string, options?: StorageOptions) => Promise<void>;\n  getAutoConfirmFingerPrints: (options?: StorageOptions) => Promise<boolean>;\n  setAutoConfirmFingerprints: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getAutoFillOnPageLoadDefault: (options?: StorageOptions) => Promise<boolean>;\n  setAutoFillOnPageLoadDefault: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricAwaitingAcceptance: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricAwaitingAcceptance: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricFingerprintValidated: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricFingerprintValidated: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricText: (options?: StorageOptions) => Promise<string>;\n  setBiometricText: (value: string, options?: StorageOptions) => Promise<void>;\n  getBiometricUnlock: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricUnlock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCanAccessPremium: (options?: StorageOptions) => Promise<boolean>;\n  getHasPremiumPersonally: (options?: StorageOptions) => Promise<boolean>;\n  setHasPremiumPersonally: (value: boolean, options?: StorageOptions) => Promise<void>;\n  setHasPremiumFromOrganization: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getHasPremiumFromOrganization: (options?: StorageOptions) => Promise<boolean>;\n  getClearClipboard: (options?: StorageOptions) => Promise<number>;\n  setClearClipboard: (value: number, options?: StorageOptions) => Promise<void>;\n  getCollapsedGroupings: (options?: StorageOptions) => Promise<string[]>;\n  setCollapsedGroupings: (value: string[], options?: StorageOptions) => Promise<void>;\n  getConvertAccountToKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setConvertAccountToKeyConnector: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setCryptoMasterKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyAuto: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyAuto: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyB64: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyB64: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<string>;\n  hasCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setCryptoMasterKeyBiometric: (value: string, options?: StorageOptions) => Promise<void>;\n  getDecryptedCiphers: (options?: StorageOptions) => Promise<CipherView[]>;\n  setDecryptedCiphers: (value: CipherView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCollections: (options?: StorageOptions) => Promise<CollectionView[]>;\n  setDecryptedCollections: (value: CollectionView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setDecryptedCryptoSymmetricKey: (\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setDecryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPinProtected: (options?: StorageOptions) => Promise<EncString>;\n  setDecryptedPinProtected: (value: EncString, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this, use PolicyService\n   */\n  getDecryptedPolicies: (options?: StorageOptions) => Promise<Policy[]>;\n  /**\n   * @deprecated Do not call this, use PolicyService\n   */\n  setDecryptedPolicies: (value: Policy[], options?: StorageOptions) => Promise<void>;\n  getDecryptedPrivateKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setDecryptedPrivateKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getDecryptedProviderKeys: (options?: StorageOptions) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedProviderKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedSends: (options?: StorageOptions) => Promise<SendView[]>;\n  setDecryptedSends: (value: SendView[], options?: StorageOptions) => Promise<void>;\n  getDefaultUriMatch: (options?: StorageOptions) => Promise<UriMatchType>;\n  setDefaultUriMatch: (value: UriMatchType, options?: StorageOptions) => Promise<void>;\n  getDisableAddLoginNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAddLoginNotification: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoBiometricsPrompt: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoBiometricsPrompt: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoTotpCopy: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoTotpCopy: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableBadgeCounter: (options?: StorageOptions) => Promise<boolean>;\n  setDisableBadgeCounter: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableChangedPasswordNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableChangedPasswordNotification: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDisableContextMenuItem: (options?: StorageOptions) => Promise<boolean>;\n  setDisableContextMenuItem: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableFavicon: (options?: StorageOptions) => Promise<boolean>;\n  setDisableFavicon: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableGa: (options?: StorageOptions) => Promise<boolean>;\n  setDisableGa: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowCardsCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowCardsCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowIdentitiesCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowIdentitiesCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDuckDuckGoSharedKey: (options?: StorageOptions) => Promise<string>;\n  setDuckDuckGoSharedKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmail: (options?: StorageOptions) => Promise<string>;\n  setEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmailVerified: (options?: StorageOptions) => Promise<boolean>;\n  setEmailVerified: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAlwaysOnTop: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAlwaysOnTop: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAutoFillOnPageLoad: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAutoFillOnPageLoad: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBiometric: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegration: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegrationFingerprint: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegrationFingerprint: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableCloseToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableCloseToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableDuckDuckGoBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableDuckDuckGoBrowserIntegration: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableFullWidth: (options?: StorageOptions) => Promise<boolean>;\n  setEnableFullWidth: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableMinimizeToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableMinimizeToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableStartToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableStartToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEncryptedCiphers: (options?: StorageOptions) => Promise<{ [id: string]: CipherData }>;\n  setEncryptedCiphers: (\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCollections: (options?: StorageOptions) => Promise<{ [id: string]: CollectionData }>;\n  setEncryptedCollections: (\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedCryptoSymmetricKey: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  getEncryptedFolders: (options?: StorageOptions) => Promise<{ [id: string]: FolderData }>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  setEncryptedFolders: (\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<{ [orgId: string]: EncryptedOrganizationKeyData }>;\n  setEncryptedOrganizationKeys: (\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setEncryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPinProtected: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPinProtected: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use PolicyService\n   */\n  getEncryptedPolicies: (options?: StorageOptions) => Promise<{ [id: string]: PolicyData }>;\n  /**\n   * @deprecated Do not call this directly, use PolicyService\n   */\n  setEncryptedPolicies: (\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPrivateKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPrivateKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedProviderKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedProviderKeys: (value: any, options?: StorageOptions) => Promise<void>;\n  getEncryptedSends: (options?: StorageOptions) => Promise<{ [id: string]: SendData }>;\n  setEncryptedSends: (value: { [id: string]: SendData }, options?: StorageOptions) => Promise<void>;\n  getEntityId: (options?: StorageOptions) => Promise<string>;\n  setEntityId: (value: string, options?: StorageOptions) => Promise<void>;\n  getEntityType: (options?: StorageOptions) => Promise<any>;\n  setEntityType: (value: string, options?: StorageOptions) => Promise<void>;\n  getEnvironmentUrls: (options?: StorageOptions) => Promise<EnvironmentUrls>;\n  setEnvironmentUrls: (value: EnvironmentUrls, options?: StorageOptions) => Promise<void>;\n  getEquivalentDomains: (options?: StorageOptions) => Promise<any>;\n  setEquivalentDomains: (value: string, options?: StorageOptions) => Promise<void>;\n  getEventCollection: (options?: StorageOptions) => Promise<EventData[]>;\n  setEventCollection: (value: EventData[], options?: StorageOptions) => Promise<void>;\n  getEverBeenUnlocked: (options?: StorageOptions) => Promise<boolean>;\n  setEverBeenUnlocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getForcePasswordReset: (options?: StorageOptions) => Promise<boolean>;\n  setForcePasswordReset: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getInstalledVersion: (options?: StorageOptions) => Promise<string>;\n  setInstalledVersion: (value: string, options?: StorageOptions) => Promise<void>;\n  getIsAuthenticated: (options?: StorageOptions) => Promise<boolean>;\n  getKdfIterations: (options?: StorageOptions) => Promise<number>;\n  setKdfIterations: (value: number, options?: StorageOptions) => Promise<void>;\n  getKdfType: (options?: StorageOptions) => Promise<KdfType>;\n  setKdfType: (value: KdfType, options?: StorageOptions) => Promise<void>;\n  getKeyHash: (options?: StorageOptions) => Promise<string>;\n  setKeyHash: (value: string, options?: StorageOptions) => Promise<void>;\n  getLastActive: (options?: StorageOptions) => Promise<number>;\n  setLastActive: (value: number, options?: StorageOptions) => Promise<void>;\n  getLastSync: (options?: StorageOptions) => Promise<string>;\n  setLastSync: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocalData: (options?: StorageOptions) => Promise<{ [cipherId: string]: LocalData }>;\n  setLocalData: (\n    value: { [cipherId: string]: LocalData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getLocale: (options?: StorageOptions) => Promise<string>;\n  setLocale: (value: string, options?: StorageOptions) => Promise<void>;\n  getMainWindowSize: (options?: StorageOptions) => Promise<number>;\n  setMainWindowSize: (value: number, options?: StorageOptions) => Promise<void>;\n  getMinimizeOnCopyToClipboard: (options?: StorageOptions) => Promise<boolean>;\n  setMinimizeOnCopyToClipboard: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNeverDomains: (options?: StorageOptions) => Promise<{ [id: string]: any }>;\n  setNeverDomains: (value: { [id: string]: any }, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometrics: (options?: StorageOptions) => Promise<boolean>;\n  setNoAutoPromptBiometrics: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometricsText: (options?: StorageOptions) => Promise<string>;\n  setNoAutoPromptBiometricsText: (value: string, options?: StorageOptions) => Promise<void>;\n  getOpenAtLogin: (options?: StorageOptions) => Promise<boolean>;\n  setOpenAtLogin: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getOrganizationInvitation: (options?: StorageOptions) => Promise<any>;\n  setOrganizationInvitation: (value: any, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  getOrganizations: (options?: StorageOptions) => Promise<{ [id: string]: OrganizationData }>;\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  setOrganizations: (\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getPasswordGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setPasswordGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getUsernameGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setUsernameGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getGeneratorOptions: (options?: StorageOptions) => Promise<any>;\n  setGeneratorOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getProtectedPin: (options?: StorageOptions) => Promise<string>;\n  setProtectedPin: (value: string, options?: StorageOptions) => Promise<void>;\n  getProviders: (options?: StorageOptions) => Promise<{ [id: string]: ProviderData }>;\n  setProviders: (value: { [id: string]: ProviderData }, options?: StorageOptions) => Promise<void>;\n  getPublicKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setPublicKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getRefreshToken: (options?: StorageOptions) => Promise<string>;\n  setRefreshToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getRememberedEmail: (options?: StorageOptions) => Promise<string>;\n  setRememberedEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getSecurityStamp: (options?: StorageOptions) => Promise<string>;\n  setSecurityStamp: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use SettingsService\n   */\n  getSettings: (options?: StorageOptions) => Promise<AccountSettingsSettings>;\n  /**\n   * @deprecated Do not call this directly, use SettingsService\n   */\n  setSettings: (value: AccountSettingsSettings, options?: StorageOptions) => Promise<void>;\n  getSsoCodeVerifier: (options?: StorageOptions) => Promise<string>;\n  setSsoCodeVerifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoOrgIdentifier: (options?: StorageOptions) => Promise<string>;\n  setSsoOrganizationIdentifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoState: (options?: StorageOptions) => Promise<string>;\n  setSsoState: (value: string, options?: StorageOptions) => Promise<void>;\n  getTheme: (options?: StorageOptions) => Promise<ThemeType>;\n  setTheme: (value: ThemeType, options?: StorageOptions) => Promise<void>;\n  getTwoFactorToken: (options?: StorageOptions) => Promise<string>;\n  setTwoFactorToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getUserId: (options?: StorageOptions) => Promise<string>;\n  getUsesKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setUsesKeyConnector: (vaule: boolean, options?: StorageOptions) => Promise<void>;\n  getVaultTimeout: (options?: StorageOptions) => Promise<number>;\n  setVaultTimeout: (value: number, options?: StorageOptions) => Promise<void>;\n  getVaultTimeoutAction: (options?: StorageOptions) => Promise<string>;\n  setVaultTimeoutAction: (value: string, options?: StorageOptions) => Promise<void>;\n  getStateVersion: () => Promise<number>;\n  setStateVersion: (value: number) => Promise<void>;\n  getWindow: () => Promise<WindowState>;\n  setWindow: (value: WindowState) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use ConfigService\n   */\n  getServerConfig: (options?: StorageOptions) => Promise<ServerConfigData>;\n  /**\n   * @deprecated Do not call this directly, use ConfigService\n   */\n  setServerConfig: (value: ServerConfigData, options?: StorageOptions) => Promise<void>;\n}\n","import {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../../models/response/notification.response\";\n\nexport abstract class SyncService {\n  syncInProgress: boolean;\n\n  getLastSync: () => Promise<Date>;\n  setLastSync: (date: Date, userId?: string) => Promise<any>;\n  fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n  syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","import { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { Verification } from \"../../types/verification\";\n\nexport abstract class UserVerificationService {\n  buildRequest: <T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) => Promise<T>;\n  verifyUser: (verification: Verification) => Promise<boolean>;\n  requestOTP: () => Promise<void>;\n}\n","export abstract class ValidationService {\n  showError: (data: any) => string[];\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n  OrganizationUser_Revoked = 1511,\n  OrganizationUser_Restored = 1512,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n  Organization_SponsorshipsSynced = 1608,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n\nexport const DEFAULT_KDF_TYPE = KdfType.PBKDF2_SHA256;\nexport const DEFAULT_KDF_ITERATIONS = 100000;\nexport const SEND_KDF_ITERATIONS = 100000;\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../models/view/item.view\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  parent: T;\n  node: T;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, name: string, parent: T) {\n    this.parent = parent;\n    this.node = node;\n    this.node.name = name;\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/tree-node\";\n\nexport class ServiceUtils {\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: ITreeNodeObject,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end = partIndex === parts.length - 1;\n    const partName = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== parts[partIndex]) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node with the same name.\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i].node,\n        delimiter\n      );\n      return;\n    }\n\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      if (end) {\n        nodeTree.push(new TreeNode(obj, partName, parent));\n        return;\n      }\n      const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","/* eslint-disable no-useless-escape */\nimport { getHostname, parse } from \"tldts\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\ndeclare global {\n  /* eslint-disable-next-line no-var */\n  var bitwardenContainerService: BitwardenContainerService;\n}\n\ninterface BitwardenContainerService {\n  getCryptoService: () => CryptoService;\n  getEncryptService: () => EncryptService;\n}\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: typeof global = null;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n  static readonly validHosts: string[] = [\"localhost\"];\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n\n    if (Utils.isNode) {\n      Utils.global = global;\n    } else if (Utils.isBrowser) {\n      Utils.global = window;\n    } else {\n      // If it's not browser or node then it must be a service worker\n      Utils.global = self;\n    }\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = Utils.global.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    if (str == null) {\n      return null;\n    }\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return Utils.global.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    if (Utils.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"about:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"file:\")) {\n      return null;\n    }\n\n    // Does uriString contain invalid characters\n    // TODO Needs to possibly be extended, although '!' is a reserved character\n    if (uriString.indexOf(\"!\") > 0) {\n      return null;\n    }\n\n    try {\n      const hostname = getHostname(uriString, { validHosts: this.validHosts });\n      if (hostname != null) {\n        return hostname;\n      }\n    } catch {\n      return null;\n    }\n    return null;\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (Utils.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"about:\")) {\n      return null;\n    }\n\n    try {\n      const parseResult = parse(uriString, { validHosts: this.validHosts });\n      if (parseResult != null && parseResult.hostname != null) {\n        if (parseResult.hostname === \"localhost\" || parseResult.isIp) {\n          return parseResult.hostname;\n        }\n\n        if (parseResult.domain != null) {\n          return parseResult.domain;\n        }\n        return null;\n      }\n    } catch {\n      return null;\n    }\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction<T>(\n    i18nService: I18nService,\n    prop: { [K in keyof T]: T[K] extends string ? K : never }[keyof T]\n  ): (a: T, b: T) => number {\n    return (a, b) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      // The `as unknown as string` here is unfortunate because typescript doesn't property understand that the return of T[prop] will be a string\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop] as unknown as string, b[prop] as unknown as string)\n        : (a[prop] as unknown as string).localeCompare(b[prop] as unknown as string);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static isPromise(obj: any): obj is Promise<unknown> {\n    return (\n      obj != undefined && typeof obj[\"then\"] === \"function\" && typeof obj[\"catch\"] === \"function\"\n    );\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (this.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  /**\n   * There are a few ways to calculate text color for contrast, this one seems to fit accessibility guidelines best.\n   * https://stackoverflow.com/a/3943023/6869691\n   *\n   * @param {string} bgColor\n   * @param {number} [threshold] see stackoverflow link above\n   * @param {boolean} [svgTextFill]\n   * Indicates if this method is performed on an SVG <text> 'fill' attribute (e.g. <text fill=\"black\"></text>).\n   * This check is necessary because the '!important' tag cannot be used in a 'fill' attribute.\n   */\n  static pickTextColorBasedOnBgColor(bgColor: string, threshold = 186, svgTextFill = false) {\n    const bgColorHexNums = bgColor.charAt(0) === \"#\" ? bgColor.substring(1, 7) : bgColor;\n    const r = parseInt(bgColorHexNums.substring(0, 2), 16); // hexToR\n    const g = parseInt(bgColorHexNums.substring(2, 4), 16); // hexToG\n    const b = parseInt(bgColorHexNums.substring(4, 6), 16); // hexToB\n    const blackColor = svgTextFill ? \"black\" : \"black !important\";\n    const whiteColor = svgTextFill ? \"white\" : \"white !important\";\n    return r * 0.299 + g * 0.587 + b * 0.114 > threshold ? blackColor : whiteColor;\n  }\n\n  static stringToColor(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = \"#\";\n    for (let i = 0; i < 3; i++) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return color;\n  }\n\n  /**\n   * @throws Will throw an error if the ContainerService has not been attached to the window object\n   */\n  static getContainerService(): BitwardenContainerService {\n    if (this.global.bitwardenContainerService == null) {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n    return this.global.bitwardenContainerService;\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (typeof window !== \"undefined\") {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nimport { LoginUriApi } from \"./login-uri.api\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { AttachmentResponse } from \"../response/attachment.response\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/card.api\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherResponse } from \"../response/cipher.response\";\n\nimport { AttachmentData } from \"./attachment.data\";\nimport { CardData } from \"./card.data\";\nimport { FieldData } from \"./field.data\";\nimport { IdentityData } from \"./identity.data\";\nimport { LoginData } from \"./login.data\";\nimport { PasswordHistoryData } from \"./password-history.data\";\nimport { SecureNoteData } from \"./secure-note.data\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  creationDate: string;\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.creationDate = response.creationDate;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collection.response\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldApi } from \"../api/field.api\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { IdentityApi } from \"../api/identity.api\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../api/login-uri.api\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { LoginApi } from \"../api/login.api\";\n\nimport { LoginUriData } from \"./login-uri.data\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/password-history.response\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../api/secure-note.api\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Utils } from \"../../misc/utils\";\nimport { AttachmentData } from \"../data/attachment.data\";\nimport { AttachmentView } from \"../view/attachment.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string; // Readable size, ex: \"4.2 KB\" or \"1.43 GB\"\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      view.key = await this.decryptAttachmentKey(orgId, encKey);\n    }\n\n    return view;\n  }\n\n  private async decryptAttachmentKey(orgId: string, encKey?: SymmetricCryptoKey) {\n    try {\n      if (encKey == null) {\n        encKey = await this.getKeyForDecryption(orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      const decValue = await encryptService.decryptToBytes(this.key, encKey);\n      return new SymmetricCryptoKey(decValue);\n    } catch (e) {\n      // TODO: error?\n    }\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Attachment>>): Attachment {\n    if (obj == null) {\n      return null;\n    }\n\n    const key = EncString.fromJSON(obj.key);\n    const fileName = EncString.fromJSON(obj.fileName);\n\n    return Object.assign(new Attachment(), obj, {\n      key,\n      fileName,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardData } from \"../data/card.data\";\nimport { CardView } from \"../view/card.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Card>>): Card {\n    if (obj == null) {\n      return null;\n    }\n\n    const cardholderName = EncString.fromJSON(obj.cardholderName);\n    const brand = EncString.fromJSON(obj.brand);\n    const number = EncString.fromJSON(obj.number);\n    const expMonth = EncString.fromJSON(obj.expMonth);\n    const expYear = EncString.fromJSON(obj.expYear);\n    const code = EncString.fromJSON(obj.code);\n    return Object.assign(new Card(), obj, {\n      cardholderName,\n      brand,\n      number,\n      expMonth,\n      expYear,\n      code,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { InitializerKey } from \"../../services/cryptography/initializer-key\";\nimport { CipherData } from \"../data/cipher.data\";\nimport { LocalData } from \"../data/local.data\";\nimport { CipherView } from \"../view/cipher.view\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secure-note\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Cipher extends Domain implements Decryptable<CipherView> {\n  readonly initializerKey = InitializerKey.Cipher;\n\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: LocalData;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  creationDate: Date;\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, localData: LocalData = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      [\"id\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.creationDate = obj.creationDate != null ? new Date(obj.creationDate) : null;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.creationDate = this.creationDate != null ? this.creationDate.toISOString() : null;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n\n  static fromJSON(obj: Jsonify<Cipher>) {\n    if (obj == null) {\n      return null;\n    }\n\n    const domain = new Cipher();\n    const name = EncString.fromJSON(obj.name);\n    const notes = EncString.fromJSON(obj.notes);\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => Attachment.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => Field.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => Password.fromJSON(ph));\n\n    Object.assign(domain, obj, {\n      name,\n      notes,\n      revisionDate,\n      deletedDate,\n      attachments,\n      fields,\n      passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        domain.card = Card.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = Identity.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        domain.login = Login.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNote.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return domain;\n  }\n}\n","import { CollectionData } from \"../data/collection.data\";\nimport { CollectionView } from \"../view/collection.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncString implements IEncrypted {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      this.initFromData(encryptedStringOrType as EncryptionType, data, iv, mac);\n    } else {\n      this.initFromEncryptedString(encryptedStringOrType as string);\n    }\n  }\n\n  get ivBytes(): ArrayBuffer {\n    return this.iv == null ? null : Utils.fromB64ToArray(this.iv).buffer;\n  }\n\n  get macBytes(): ArrayBuffer {\n    return this.mac == null ? null : Utils.fromB64ToArray(this.mac).buffer;\n  }\n\n  get dataBytes(): ArrayBuffer {\n    return this.data == null ? null : Utils.fromB64ToArray(this.data).buffer;\n  }\n\n  toJSON() {\n    return this.encryptedString;\n  }\n\n  static fromJSON(obj: Jsonify<EncString>): EncString {\n    if (obj == null) {\n      return null;\n    }\n\n    return new EncString(obj);\n  }\n\n  private initFromData(encType: EncryptionType, data: string, iv: string, mac: string) {\n    if (iv != null) {\n      this.encryptedString = encType + \".\" + iv + \"|\" + data;\n    } else {\n      this.encryptedString = encType + \".\" + data;\n    }\n\n    // mac\n    if (mac != null) {\n      this.encryptedString += \"|\" + mac;\n    }\n\n    this.encryptionType = encType;\n    this.data = data;\n    this.iv = iv;\n    this.mac = mac;\n  }\n\n  private initFromEncryptedString(encryptedString: string) {\n    this.encryptedString = encryptedString as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const { encType, encPieces } = this.parseEncryptedString(this.encryptedString);\n    this.encryptionType = encType;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  private parseEncryptedString(encryptedString: string): {\n    encType: EncryptionType;\n    encPieces: string[];\n  } {\n    const headerPieces = encryptedString.split(\".\");\n    let encType: EncryptionType;\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = encryptedString.split(\"|\");\n      encType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    return {\n      encType,\n      encPieces,\n    };\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    try {\n      if (key == null) {\n        key = await this.getKeyForDecryption(orgId);\n      }\n      if (key == null) {\n        throw new Error(\"No key to decrypt EncString with orgId \" + orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      this.decryptedValue = await encryptService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldData } from \"../data/field.data\";\nimport { FieldView } from \"../view/field.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Field>>): Field {\n    if (obj == null) {\n      return null;\n    }\n\n    const name = EncString.fromJSON(obj.name);\n    const value = EncString.fromJSON(obj.value);\n\n    return Object.assign(new Field(), obj, {\n      name,\n      value,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FolderData } from \"../data/folder.data\";\nimport { FolderView } from \"../view/folder.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n\n  static fromJSON(obj: Jsonify<Folder>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new Folder(), obj, { name: EncString.fromJSON(obj.name), revisionDate });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IdentityData } from \"../data/identity.data\";\nimport { IdentityView } from \"../view/identity.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n\n  static fromJSON(obj: Jsonify<Identity>): Identity {\n    if (obj == null) {\n      return null;\n    }\n\n    const title = EncString.fromJSON(obj.title);\n    const firstName = EncString.fromJSON(obj.firstName);\n    const middleName = EncString.fromJSON(obj.middleName);\n    const lastName = EncString.fromJSON(obj.lastName);\n    const address1 = EncString.fromJSON(obj.address1);\n    const address2 = EncString.fromJSON(obj.address2);\n    const address3 = EncString.fromJSON(obj.address3);\n    const city = EncString.fromJSON(obj.city);\n    const state = EncString.fromJSON(obj.state);\n    const postalCode = EncString.fromJSON(obj.postalCode);\n    const country = EncString.fromJSON(obj.country);\n    const company = EncString.fromJSON(obj.company);\n    const email = EncString.fromJSON(obj.email);\n    const phone = EncString.fromJSON(obj.phone);\n    const ssn = EncString.fromJSON(obj.ssn);\n    const username = EncString.fromJSON(obj.username);\n    const passportNumber = EncString.fromJSON(obj.passportNumber);\n    const licenseNumber = EncString.fromJSON(obj.licenseNumber);\n\n    return Object.assign(new Identity(), obj, {\n      title,\n      firstName,\n      middleName,\n      lastName,\n      address1,\n      address2,\n      address3,\n      city,\n      state,\n      postalCode,\n      country,\n      company,\n      email,\n      phone,\n      ssn,\n      username,\n      passportNumber,\n      licenseNumber,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriData } from \"../data/login-uri.data\";\nimport { LoginUriView } from \"../view/login-uri.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n        match: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n\n  static fromJSON(obj: Jsonify<LoginUri>): LoginUri {\n    if (obj == null) {\n      return null;\n    }\n\n    const uri = EncString.fromJSON(obj.uri);\n    return Object.assign(new LoginUri(), obj, {\n      uri,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LoginData } from \"../data/login.data\";\nimport { LoginView } from \"../view/login.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { LoginUri } from \"./login-uri\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Login>>): Login {\n    if (obj == null) {\n      return null;\n    }\n\n    const username = EncString.fromJSON(obj.username);\n    const password = EncString.fromJSON(obj.password);\n    const totp = EncString.fromJSON(obj.totp);\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUri.fromJSON(uri));\n\n    return Object.assign(new Login(), obj, {\n      username,\n      password,\n      totp,\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import Domain from \"./domain-base\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity = 0;\n  minLength = 0;\n  requireUpper = false;\n  requireLower = false;\n  requireNumbers = false;\n  requireSpecial = false;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { PasswordHistoryData } from \"../data/password-history.data\";\nimport { PasswordHistoryView } from \"../view/password-history.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(this, obj, {\n      password: null,\n    });\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Password>>): Password {\n    if (obj == null) {\n      return null;\n    }\n\n    const password = EncString.fromJSON(obj.password);\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new Password(), obj, {\n      password,\n      lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteData } from \"../data/secure-note.data\";\nimport { SecureNoteView } from \"../view/secure-note.view\";\n\nimport Domain from \"./domain-base\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n\n  static fromJSON(obj: Jsonify<SecureNote>): SecureNote {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new SecureNote(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n\n  toJSON() {\n    // The whole object is constructed from the initial key, so just store the B64 key\n    return { keyB64: this.keyB64 };\n  }\n\n  static fromJSON(obj: Jsonify<SymmetricCryptoKey>): SymmetricCryptoKey {\n    if (obj == null) {\n      return null;\n    }\n\n    const arrayBuffer = Utils.fromB64ToArray(obj.keyB64).buffer;\n    return new SymmetricCryptoKey(arrayBuffer);\n  }\n}\n","import { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/enc-string\";\nimport { CardView } from \"../view/card.view\";\n\nexport class CardExport {\n  static template(): CardExport {\n    const req = new CardExport();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: CardExport, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: CardExport, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { EncString } from \"../domain/enc-string\";\nimport { Field as FieldDomain } from \"../domain/field\";\nimport { FieldView } from \"../view/field.view\";\n\nexport class FieldExport {\n  static template(): FieldExport {\n    const req = new FieldExport();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: FieldExport, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: FieldExport, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { EncString } from \"../domain/enc-string\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\nimport { IdentityView } from \"../view/identity.view\";\n\nexport class IdentityExport {\n  static template(): IdentityExport {\n    const req = new IdentityExport();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: IdentityExport, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: IdentityExport, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { EncString } from \"../domain/enc-string\";\nimport { LoginUri as LoginUriDomain } from \"../domain/login-uri\";\nimport { LoginUriView } from \"../view/login-uri.view\";\n\nexport class LoginUriExport {\n  static template(): LoginUriExport {\n    const req = new LoginUriExport();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUriExport, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUriExport, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { EncString } from \"../domain/enc-string\";\nimport { Login as LoginDomain } from \"../domain/login\";\nimport { LoginView } from \"../view/login.view\";\n\nimport { LoginUriExport } from \"./login-uri.export\";\n\nexport class LoginExport {\n  static template(): LoginExport {\n    const req = new LoginExport();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: LoginExport, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUriExport.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: LoginExport, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUriExport.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUriExport[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote as SecureNoteDomain } from \"../domain/secure-note\";\nimport { SecureNoteView } from \"../view/secure-note.view\";\n\nexport class SecureNoteExport {\n  static template(): SecureNoteExport {\n    const req = new SecureNoteExport();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNoteExport, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNoteExport, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/enc-string\";\nimport { CipherView } from \"../view/cipher.view\";\n\nimport { CardExport } from \"./card.export\";\nimport { FieldExport } from \"./field.export\";\nimport { IdentityExport } from \"./identity.export\";\nimport { LoginExport } from \"./login.export\";\nimport { SecureNoteExport } from \"./secure-note.export\";\n\nexport class CipherExport {\n  static template(): CipherExport {\n    const req = new CipherExport();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: CipherExport, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => FieldExport.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = LoginExport.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteExport.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = CardExport.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityExport.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: CipherExport, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => FieldExport.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = LoginExport.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNoteExport.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = CardExport.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = IdentityExport.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: FieldExport[];\n  login: LoginExport;\n  secureNote: SecureNoteExport;\n  card: CardExport;\n  identity: IdentityExport;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      } else {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new LoginExport(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteExport(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardExport(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityExport(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { CipherView } from \"../view/cipher.view\";\n\nimport { CipherExport } from \"./cipher.export\";\n\nexport class CipherWithIdExport extends CipherExport {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/enc-string\";\nimport { CollectionView } from \"../view/collection.view\";\n\nexport class CollectionExport {\n  static template(): CollectionExport {\n    const req = new CollectionExport();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: CollectionExport, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: CollectionExport, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { CollectionView } from \"../view/collection.view\";\n\nimport { CollectionExport } from \"./collection.export\";\n\nexport class CollectionWithIdExport extends CollectionExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EncString } from \"../domain/enc-string\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folder.view\";\n\nexport class FolderExport {\n  static template(): FolderExport {\n    const req = new FolderExport();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: FolderExport, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: FolderExport, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folder.view\";\n\nimport { FolderExport } from \"./folder.export\";\n\nexport class FolderWithIdExport extends FolderExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardApi } from \"../api/card.api\";\nimport { FieldApi } from \"../api/field.api\";\nimport { IdentityApi } from \"../api/identity.api\";\nimport { LoginUriApi } from \"../api/login-uri.api\";\nimport { LoginApi } from \"../api/login.api\";\nimport { SecureNoteApi } from \"../api/secure-note.api\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentRequest } from \"./attachment.request\";\nimport { PasswordHistoryRequest } from \"./password-history.request\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { Collection } from \"../domain/collection\";\n\nimport { SelectionReadOnlyRequest } from \"./selection-read-only.request\";\n\nexport class CollectionRequest {\n  name: string;\n  externalId: string;\n  groups: SelectionReadOnlyRequest[] = [];\n\n  constructor(collection?: Collection) {\n    if (collection == null) {\n      return;\n    }\n    this.name = collection.name ? collection.name.encryptedString : null;\n    this.externalId = collection.externalId;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (status === 429) {\n      this.message = \"Rate limit exceeded. Try again later.\";\n    } else if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetric-crypto-key\";\n\nimport { View } from \"./view\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<AttachmentView>>): AttachmentView {\n    const key = obj.key == null ? null : SymmetricCryptoKey.fromJSON(obj.key);\n    return Object.assign(new AttachmentView(), obj, { key: key });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CardView>>): CardView {\n    return Object.assign(new CardView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { InitializerKey } from \"../../services/cryptography/initializer-key\";\nimport { LocalData } from \"../data/local.data\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachment.view\";\nimport { CardView } from \"./card.view\";\nimport { FieldView } from \"./field.view\";\nimport { IdentityView } from \"./identity.view\";\nimport { LoginView } from \"./login.view\";\nimport { PasswordHistoryView } from \"./password-history.view\";\nimport { SecureNoteView } from \"./secure-note.view\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View, InitializerMetadata {\n  readonly initializerKey = InitializerKey.CipherView;\n\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: LocalData;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  creationDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.creationDate = c.creationDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CipherView>>): CipherView {\n    const view = new CipherView();\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => AttachmentView.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => FieldView.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => PasswordHistoryView.fromJSON(ph));\n\n    Object.assign(view, obj, {\n      revisionDate: revisionDate,\n      deletedDate: deletedDate,\n      attachments: attachments,\n      fields: fields,\n      passwordHistory: passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        view.card = CardView.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityView.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        view.login = LoginView.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteView.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return view;\n  }\n}\n","import { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/tree-node\";\nimport { CollectionGroupDetailsResponse } from \"../response/collection.response\";\n\nimport { View } from \"./view\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionGroupDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Field } from \"../domain/field\";\n\nimport { View } from \"./view\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<FieldView>>): FieldView {\n    return Object.assign(new FieldView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/tree-node\";\n\nimport { View } from \"./view\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n\n  static fromJSON(obj: Jsonify<FolderView>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new FolderView(), obj, { revisionDate });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<IdentityView>>): IdentityView {\n    return Object.assign(new IdentityView(), obj);\n  }\n}\n","import { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { View } from \"./view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { LoginUri } from \"../domain/login-uri\";\n\nimport { View } from \"./view\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && !Utils.isNullOrWhitespace(Utils.getDomain(this.uri))))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && !Utils.isNullOrWhitespace(Utils.getDomain(this.uri))\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginUriView>>): LoginUriView {\n    return Object.assign(new LoginUriView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./item.view\";\nimport { LoginUriView } from \"./login-uri.view\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginView>>): LoginView {\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUriView.fromJSON(uri));\n\n    return Object.assign(new LoginView(), obj, {\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Password } from \"../domain/password\";\n\nimport { View } from \"./view\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<PasswordHistoryView>>): PasswordHistoryView {\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new PasswordHistoryView(), obj, {\n      lastUsedDate: lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secure-note\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<SecureNoteView>>): SecureNoteView {\n    return Object.assign(new SecureNoteView(), obj);\n  }\n}\n","import { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","export enum InitializerKey {\n  Cipher = 0,\n  CipherView = 1,\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BadgeDirective } from \"./badge.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [BadgeDirective],\n  declarations: [BadgeDirective],\n})\nexport class BadgeModule {}\n","import { Input, HostBinding, Component } from \"@angular/core\";\n\nimport { ButtonLikeAbstraction } from \"../shared/button-like.abstraction\";\n\nexport type ButtonTypes = \"primary\" | \"secondary\" | \"danger\";\n\nconst buttonStyles: Record<ButtonTypes, string[]> = {\n  primary: [\n    \"tw-border-primary-500\",\n    \"tw-bg-primary-500\",\n    \"!tw-text-contrast\",\n    \"hover:tw-bg-primary-700\",\n    \"hover:tw-border-primary-700\",\n    \"disabled:tw-bg-primary-500/60\",\n    \"disabled:tw-border-primary-500/60\",\n    \"disabled:!tw-text-contrast/60\",\n    \"disabled:tw-bg-clip-padding\",\n  ],\n  secondary: [\n    \"tw-bg-transparent\",\n    \"tw-border-text-muted\",\n    \"!tw-text-muted\",\n    \"hover:tw-bg-secondary-500\",\n    \"hover:tw-border-secondary-500\",\n    \"hover:!tw-text-contrast\",\n    \"disabled:tw-bg-transparent\",\n    \"disabled:tw-border-text-muted/60\",\n    \"disabled:!tw-text-muted/60\",\n  ],\n  danger: [\n    \"tw-bg-transparent\",\n    \"tw-border-danger-500\",\n    \"!tw-text-danger\",\n    \"hover:tw-bg-danger-500\",\n    \"hover:tw-border-danger-500\",\n    \"hover:!tw-text-contrast\",\n    \"disabled:tw-bg-transparent\",\n    \"disabled:tw-border-danger-500/60\",\n    \"disabled:!tw-text-danger/60\",\n  ],\n};\n\n@Component({\n  selector: \"button[bitButton], a[bitButton]\",\n  templateUrl: \"button.component.html\",\n  providers: [{ provide: ButtonLikeAbstraction, useExisting: ButtonComponent }],\n})\nexport class ButtonComponent implements ButtonLikeAbstraction {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-font-semibold\",\n      \"tw-py-1.5\",\n      \"tw-px-3\",\n      \"tw-rounded\",\n      \"tw-transition\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      \"tw-text-center\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n      \"focus-visible:tw-ring\",\n      \"focus-visible:tw-ring-offset-2\",\n      \"focus-visible:tw-ring-primary-700\",\n      \"focus-visible:tw-z-10\",\n    ]\n      .concat(\n        this.block == null || this.block === false ? [\"tw-inline-block\"] : [\"tw-w-full\", \"tw-block\"]\n      )\n      .concat(buttonStyles[this.buttonType ?? \"secondary\"]);\n  }\n\n  @HostBinding(\"attr.disabled\")\n  get disabledAttr() {\n    const disabled = this.disabled != null && this.disabled !== false;\n    return disabled || this.loading ? true : null;\n  }\n\n  @Input() buttonType: ButtonTypes = null;\n  @Input() block?: boolean;\n  @Input() loading = false;\n  @Input() disabled = false;\n}\n","export abstract class ButtonLikeAbstraction {\n  loading: boolean;\n  disabled: boolean;\n}\n","<span class=\"tw-relative\">\n  <span [ngClass]=\"{ 'tw-invisible': loading }\">\n    <ng-content></ng-content>\n  </span>\n  <span\n    class=\"tw-absolute tw-inset-0 tw-flex tw-items-center tw-justify-center\"\n    [ngClass]=\"{ 'tw-invisible': !loading }\"\n  >\n    <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" aria-hidden=\"true\"></i>\n  </span>\n</span>\n","export abstract class BitFormFieldControl {\n  ariaDescribedBy: string;\n  id: string;\n  labelForId: string;\n  required: boolean;\n  hasError: boolean;\n  error: [string, any];\n}\n","import { Component, HostBinding, Input } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Component({\n  selector: \"bit-error\",\n  template: `<i class=\"bwi bwi-error\"></i> {{ displayError }}`,\n  host: {\n    class: \"tw-block tw-mt-1 tw-text-danger\",\n    \"aria-live\": \"assertive\",\n  },\n})\nexport class BitErrorComponent {\n  @HostBinding() id = `bit-error-${nextId++}`;\n\n  @Input() error: [string, any];\n\n  constructor(private i18nService: I18nService) {}\n\n  get displayError() {\n    switch (this.error[0]) {\n      case \"required\":\n        return this.i18nService.t(\"inputRequired\");\n      case \"email\":\n        return this.i18nService.t(\"inputEmail\");\n      case \"minlength\":\n        return this.i18nService.t(\"inputMinLength\", this.error[1]?.requiredLength);\n      default:\n        // Attempt to show a custom error message.\n        if (this.error[1]?.message) {\n          return this.error[1]?.message;\n        }\n\n        return this.error;\n    }\n  }\n}\n","<label class=\"tw-mb-1 tw-block tw-font-semibold tw-text-main\" [attr.for]=\"input.labelForId\">\n  <ng-content select=\"bit-label\"></ng-content>\n  <span *ngIf=\"input.required\" class=\"tw-text-xs tw-font-normal\"> ({{ \"required\" | i18n }})</span>\n</label>\n<div class=\"tw-flex\">\n  <div *ngIf=\"prefixChildren.length\" class=\"tw-flex\">\n    <ng-content select=\"[bitPrefix]\"></ng-content>\n  </div>\n  <ng-content></ng-content>\n  <div *ngIf=\"suffixChildren.length\" class=\"tw-flex\">\n    <ng-content select=\"[bitSuffix]\"></ng-content>\n  </div>\n</div>\n<ng-container [ngSwitch]=\"input.hasError\">\n  <ng-content select=\"bit-hint\" *ngSwitchCase=\"false\"></ng-content>\n  <bit-error [error]=\"input.error\" *ngSwitchCase=\"true\"></bit-error>\n</ng-container>\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChild,\n  ContentChildren,\n  QueryList,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { BitErrorComponent } from \"./error.component\";\nimport { BitFormFieldControl } from \"./form-field-control\";\nimport { BitHintComponent } from \"./hint.component\";\nimport { BitPrefixDirective } from \"./prefix.directive\";\nimport { BitSuffixDirective } from \"./suffix.directive\";\n\n@Component({\n  selector: \"bit-form-field\",\n  templateUrl: \"./form-field.component.html\",\n  host: {\n    class: \"tw-mb-6 tw-block\",\n  },\n})\nexport class BitFormFieldComponent implements AfterContentChecked {\n  @ContentChild(BitFormFieldControl) input: BitFormFieldControl;\n  @ContentChild(BitHintComponent) hint: BitHintComponent;\n\n  @ViewChild(BitErrorComponent) error: BitErrorComponent;\n\n  @ContentChildren(BitPrefixDirective) prefixChildren: QueryList<BitPrefixDirective>;\n  @ContentChildren(BitSuffixDirective) suffixChildren: QueryList<BitSuffixDirective>;\n\n  ngAfterContentChecked(): void {\n    if (this.error) {\n      this.input.ariaDescribedBy = this.error.id;\n    } else if (this.hint) {\n      this.input.ariaDescribedBy = this.hint.id;\n    } else {\n      this.input.ariaDescribedBy = undefined;\n    }\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitInputDirective } from \"./input.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitInputDirective],\n  exports: [BitInputDirective],\n})\nexport class InputModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { NgSelectModule } from \"@ng-select/ng-select\";\n\nimport { BadgeModule } from \"../badge\";\nimport { SharedModule } from \"../shared\";\n\nimport { MultiSelectComponent } from \"./multi-select.component\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, NgSelectModule, BadgeModule, SharedModule],\n  exports: [MultiSelectComponent],\n  declarations: [MultiSelectComponent],\n})\nexport class MultiSelectModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { BitInputDirective } from \"../input/input.directive\";\nimport { InputModule } from \"../input/input.module\";\nimport { MultiSelectComponent } from \"../multi-select/multi-select.component\";\nimport { MultiSelectModule } from \"../multi-select/multi-select.module\";\nimport { SharedModule } from \"../shared\";\n\nimport { BitErrorSummary } from \"./error-summary.component\";\nimport { BitErrorComponent } from \"./error.component\";\nimport { BitFormFieldComponent } from \"./form-field.component\";\nimport { BitHintComponent } from \"./hint.component\";\nimport { BitLabel } from \"./label.directive\";\nimport { BitPrefixDirective } from \"./prefix.directive\";\nimport { BitSuffixDirective } from \"./suffix.directive\";\n\n@NgModule({\n  imports: [SharedModule, InputModule, MultiSelectModule],\n  exports: [\n    BitErrorComponent,\n    BitErrorSummary,\n    BitFormFieldComponent,\n    BitHintComponent,\n    BitLabel,\n    BitPrefixDirective,\n    BitSuffixDirective,\n    BitInputDirective,\n    MultiSelectComponent,\n  ],\n  declarations: [\n    BitErrorComponent,\n    BitErrorSummary,\n    BitFormFieldComponent,\n    BitHintComponent,\n    BitLabel,\n    BitPrefixDirective,\n    BitSuffixDirective,\n  ],\n})\nexport class FormFieldModule {}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"bit-hint\",\n  host: {\n    class: \"tw-text-muted tw-inline-block tw-mt-1\",\n  },\n})\nexport class BitHintComponent {\n  @HostBinding() id = `bit-hint-${nextId++}`;\n}\n","import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"bit-label\",\n})\nexport class BitLabel {}\n","import { Directive, HostBinding, Input } from \"@angular/core\";\n\nexport const PrefixClasses = [\n  \"tw-block\",\n  \"tw-px-3\",\n  \"tw-py-1.5\",\n  \"tw-bg-background-alt\",\n  \"tw-border\",\n  \"tw-border-solid\",\n  \"tw-border-secondary-500\",\n  \"tw-text-muted\",\n  \"tw-rounded-none\",\n  \"disabled:!tw-text-muted\",\n  \"disabled:tw-border-secondary-500\",\n];\n\n@Directive({\n  selector: \"[bitPrefix]\",\n})\nexport class BitPrefixDirective {\n  @HostBinding(\"class\") @Input() get classList() {\n    return PrefixClasses.concat([\"tw-border-r-0\", \"first:tw-rounded-l\"]);\n  }\n}\n","import { Directive, HostBinding, Input } from \"@angular/core\";\n\nimport { PrefixClasses } from \"./prefix.directive\";\n\n@Directive({\n  selector: \"[bitSuffix]\",\n})\nexport class BitSuffixDirective {\n  @HostBinding(\"class\") @Input() get classList() {\n    return PrefixClasses.concat([\"tw-border-l-0\", \"last:tw-rounded-r\"]);\n  }\n}\n","import { Directive, HostBinding, Input, Optional, Self } from \"@angular/core\";\nimport { NgControl, Validators } from \"@angular/forms\";\n\nimport { BitFormFieldControl } from \"../form-field/form-field-control\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"input[bitInput], select[bitInput], textarea[bitInput]\",\n  providers: [{ provide: BitFormFieldControl, useExisting: BitInputDirective }],\n})\nexport class BitInputDirective implements BitFormFieldControl {\n  @HostBinding(\"class\") @Input() get classList() {\n    return [\n      \"tw-block\",\n      \"tw-w-full\",\n      \"tw-px-3\",\n      \"tw-py-1.5\",\n      \"tw-bg-background-alt\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      this.hasError ? \"tw-border-danger-500\" : \"tw-border-secondary-500\",\n      \"tw-text-main\",\n      \"tw-placeholder-text-muted\",\n      // Rounded\n      \"tw-rounded-none\",\n      \"first:tw-rounded-l\",\n      \"last:tw-rounded-r\",\n      // Focus\n      \"focus:tw-outline-none\",\n      \"focus:tw-border-primary-700\",\n      \"focus:tw-ring-1\",\n      \"focus:tw-ring-primary-700\",\n      \"focus:tw-z-10\",\n      \"disabled:tw-bg-secondary-100\",\n    ].filter((s) => s != \"\");\n  }\n\n  @HostBinding() @Input() id = `bit-input-${nextId++}`;\n\n  @HostBinding(\"attr.aria-describedby\") ariaDescribedBy: string;\n\n  get labelForId(): string {\n    return this.id;\n  }\n\n  @HostBinding(\"attr.aria-invalid\") get ariaInvalid() {\n    return this.hasError ? true : undefined;\n  }\n\n  @HostBinding()\n  @Input()\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value: any) {\n    this._required = value != null && value !== false;\n  }\n  private _required: boolean;\n\n  @Input() hasPrefix = false;\n  @Input() hasSuffix = false;\n\n  get hasError() {\n    return this.ngControl?.status === \"INVALID\" && this.ngControl?.touched;\n  }\n\n  get error(): [string, any] {\n    const key = Object.keys(this.ngControl.errors)[0];\n    return [key, this.ngControl.errors[key]];\n  }\n  constructor(@Optional() @Self() private ngControl: NgControl) {}\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n/**\n * Temporarily duplicate this pipe\n */\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { I18nPipe } from \"./i18n.pipe\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [I18nPipe],\n  exports: [CommonModule, I18nPipe],\n})\nexport class SharedModule {}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + {\"182\":\"ef118a836aae4f655003\",\"447\":\"8c37d2a44c67ad3418e3\",\"477\":\"e882d21429c04bcbe47c\",\"584\":\"238f402a694e2a33f299\",\"754\":\"e67705ce1628c2a9b007\",\"977\":\"9a2076969d54547ae231\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t148: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_web_vault\"] = self[\"webpackChunk_bitwarden_web_vault\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [734], () => (__webpack_require__(86900)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","inProgress","dataWebpackPrefix","RegisterFormModule","OrganizationCreateModule","OrganizationPermissionsGuard","constructor","router","organizationService","platformUtilsService","i18nService","syncService","canActivate","route","state","this","getLastSync","fullSync","org","get","params","organizationId","createUrlTree","isOwner","enabled","showToast","t","permissionsCallback","data","organizationPermissions","cipherId","root","queryParamMap","queryParams","itemId","id","LooseComponentsModule","ButtonModule","CalloutModule","MenuModule","IconModule","AvatarModule","AsyncActionsModule","SharedModule","OrganizationBadgeModule","VaultFilterSharedModule","VaultFilterService","stateService","folderService","cipherService","collectionService","policyService","apiService","super","_collapsedFilterNodes","collapsedFilterNodes$","asObservable","buildCollapsedFilterNodes","nodes","next","storeCollapsedFilterNodes","collapsedFilterNodes","ensureVaultFiltersAreExpanded","has","delete","buildAdminCollections","result","collectionResponse","getCollections","length","collectionDomains","map","r","decryptMany","noneCollection","name","push","nestedCollections","getAllNested","fullList","nestedList","VaultFilterModule","WINDOW","MEMORY_STORAGE","SECURE_STORAGE","STATE_FACTORY","STATE_SERVICE_USE_CACHE","LOGOUT_CALLBACK","LOCKED_CALLBACK","LOCALES_DIRECTORY","SYSTEM_LANGUAGE","LOG_MAC_FAILURES","AccountApiService","AccountService","InternalAccountService","AnonymousHubService","AppIdService","AuditService","AuthService","BroadcasterService","ConfigApiServiceAbstraction","CryptoFunctionService","EncryptService","EnvironmentService","FileUploadService","FolderApiServiceAbstraction","FormValidationErrorsService","MessagingService","NotificationsService","OrganizationApiServiceAbstraction","PasswordGenerationService","PasswordRepromptService","PolicyApiServiceAbstraction","ProviderService","SearchService","indexedEntityId","SendService","SettingsService","StateMigrationService","AbstractStorageService","SyncNotifierService","TokenService","TotpService","TwoFactorService","UserVerificationApiServiceAbstraction","UsernameGenerationService","VaultTimeoutService","VaultTimeoutSettingsService","AccountFactory","accountConstructor","create","args","GlobalStateFactory","globalStateConstructor","StateFactory","globalStateFactory","accountFactory","createGlobal","createAccount","getFlags","envFlags","JSON","parse","flagEnabled","flag","flags","ServerConfigData","serverConfigResponse","version","gitHash","server","ThirdPartyServerConfigData","utcDate","Date","toISOString","environment","EnvironmentServerConfigData","static","obj","Object","assign","fromJSON","response","url","vault","api","identity","notifications","sso","EnvironmentUrls","base","icons","events","webVault","keyConnector","StateVersion","ThemeType","EncryptionPair","toJSON","encrypted","decrypted","ArrayBuffer","decryptedFromJson","encryptedFromJson","pair","DataEncryptionPair","TemporaryDataEncryption","AccountData","ciphers","folders","sends","collections","policies","passwordGenerationHistory","AccountKeys","cryptoSymmetricKey","organizationKeys","providerKeys","privateKey","publicKey","cryptoMasterKey","initRecordEncryptionPairsFromJSON","decObj","buffer","record","AccountProfile","environmentUrls","pinProtected","vaultTimeoutAction","serverConfig","AccountTokens","init","keys","profile","settings","tokens","json","WindowState","theme","System","window","stateVersion","One","NotificationType","NotificationResponse","contextId","getResponseProperty","type","payload","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","AuthRequest","AuthRequestResponse","AuthRequestPushNotification","userId","collectionIds","revisionDate","date","DeviceType","environmentService","authService","logService","createHubConnection","token","getNotificationsUrl","anonHubConnection","HubConnectionBuilder","withUrl","skipNegotiation","transport","withHubProtocol","MessagePackHubProtocol","build","start","catch","error","on","ProcessNotification","stopHubConnection","stop","notification","authResponsePushNotifiction","DeviceRequest","appId","getDevice","getDeviceString","identifier","pushToken","TokenRequest","twoFactor","device","alterIdentityTokenHeaders","headers","setTwoFactor","setPasswordlessAccessCode","accessCode","passwordlessAuthRequest","toIdentityToken","clientId","scope","client_id","deviceType","deviceIdentifier","deviceName","authRequest","provider","twoFactorToken","twoFactorProvider","twoFactorRemember","remember","ApiTokenRequest","clientSecret","startsWith","grant_type","client_secret","TokenTwoFactorRequest","ApiKeyResponse","apiKey","AttachmentResponse","fileName","key","size","sizeName","PasswordHistoryResponse","password","lastUsedDate","CipherResponse","folderId","notes","favorite","edit","viewPassword","organizationUseTotp","creationDate","deletedDate","login","card","secureNote","fields","f","attachments","a","passwordHistory","h","reprompt","AttachmentUploadDataResponse","attachmentId","fileUploadType","cipherResponse","cipherMiniResponse","requestDeviceType","requestIpAddress","masterPasswordHash","requestApproved","RegisterResponse","captchaBypassToken","BillingResponse","invoices","transactions","balance","paymentSource","BillingSourceResponse","BillingTransactionResponse","i","BillingInvoiceResponse","cardBrand","description","needsVerification","pdfUrl","number","paid","amount","createdDate","refunded","partiallyRefunded","refundedAmount","paymentMethodType","details","BillingHistoryResponse","hasNoHistory","BillingPaymentResponse","BreachAccountResponse","addedDate","breachDate","dataClasses","domain","isActive","isVerified","logoPath","modifiedDate","pwnCount","title","SelectionReadOnlyResponse","readOnly","hidePasswords","CollectionResponse","externalId","CollectionDetailsResponse","CollectionGroupDetailsResponse","groups","g","DeviceVerificationResponse","isDeviceVerificationSectionEnabled","unknownDeviceVerificationEnabled","GlobalDomainResponse","domains","excluded","DomainsResponse","globalEquivalentDomains","equivalentDomains","d","EmergencyAccessGranteeDetailsResponse","granteeId","email","status","waitTimeDays","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","keyEncrypted","kdf","kdfIterations","EmergencyAccessViewResponse","c","EventResponse","providerId","collectionId","groupId","policyId","organizationUserId","providerUserId","providerOrganizationId","actingUserId","ipAddress","installationId","GroupResponse","accessAll","GroupDetailsResponse","IdentityCaptchaResponse","siteKey","IdentityTokenResponse","accessToken","access_token","expiresIn","expires_in","refreshToken","refresh_token","tokenType","token_type","resetMasterPassword","forcePasswordReset","apiUseKeyConnector","keyConnectorUrl","IdentityTwoFactorResponse","twoFactorProviders2","Map","captchaToken","twoFactorProviders","prop","hasOwnProperty","set","parseInt","KeyConnectorUserKeyResponse","ListResponse","dr","continuationToken","OrganizationConnectionResponse","configType","rawConfig","config","OrganizationExportResponse","OrganizationSponsorshipSyncStatusResponse","lastSyncDate","OrganizationUserBulkPublicKeyResponse","OrganizationUserBulkResponse","PermissionsApi","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","createNewCollections","editAnyCollection","deleteAnyCollection","editAssignedCollections","deleteAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","manageScim","OrganizationUserResponse","permissions","resetPasswordEnrolled","OrganizationUserUserDetailsResponse","twoFactorEnabled","usesKeyConnector","OrganizationUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","resetPasswordKey","encryptedPrivateKey","ProfileOrganizationResponse","usePolicies","useGroups","useDirectory","useEvents","useTotp","use2fa","useApi","useSso","useKeyConnector","useScim","useResetPassword","selfHost","usersGetPremium","seats","maxCollections","maxStorageGb","hasPublicAndPrivateKeys","ssoBound","providerName","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","keyConnectorEnabled","familySponsorshipLastSyncDateString","familySponsorshipLastSyncDate","familySponsorshipValidUntilString","familySponsorshipValidUntil","familySponsorshipToDelete","ProfileProviderOrganizationResponse","ProfileProviderResponse","ProfileResponse","organizations","providers","providerOrganizations","emailVerified","masterPasswordHint","premiumPersonally","premiumFromOrganization","culture","securityStamp","o","PaymentResponse","userProfile","paymentIntentClientSecret","success","PlanResponse","product","isAnnual","nameLocalizationKey","descriptionLocalizationKey","canBeUsedByBusiness","baseSeats","baseStorageGb","maxUsers","hasAdditionalSeatsOption","maxAdditionalSeats","hasAdditionalStorageOption","maxAdditionalStorage","hasPremiumAccessOption","trialPeriodDays","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","hasTotp","has2fa","hasApi","hasSso","hasResetPassword","upgradeSortOrder","displaySortOrder","legacyYear","disabled","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","basePrice","seatPrice","additionalStoragePricePerGb","premiumAccessOptionPrice","PolicyResponse","PreloginResponse","ProviderOrganizationResponse","userCount","plan","ProviderOrganizationOrganizationDetailsResponse","organizationName","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","ProviderUserUserDetailsResponse","ProviderResponse","businessName","billingEmail","SendFileApi","SendTextApi","text","hidden","SendAccessResponse","file","expirationDate","creatorIdentifier","SendFileDownloadDataResponse","SendResponse","accessId","maxAccessCount","accessCount","deletionDate","disable","hideEmail","SendFileUploadDataResponse","sendResponse","SsoPreValidateResponse","SubscriptionResponse","storageName","storageGb","license","expiration","usingInAppPurchase","subscription","upcomingInvoice","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","items","trialEndDate","periodStartDate","periodEndDate","cancelledDate","cancelAtEndDate","cancelled","BillingSubscriptionItemResponse","quantity","interval","sponsoredSubscriptionItem","FolderResponse","SyncResponse","p","s","TaxInfoResponse","taxId","taxIdType","line1","line2","city","postalCode","country","TaxRateResponse","rate","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","host","secretKey","integrationKey","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","code","TwoFactorWebAuthnResponse","k","KeyResponse","migrated","ChallengeResponse","attestation","authenticatorSelection","challenge","excludeCredentials","extensions","pubKeyCredParams","rp","timeout","user","TwoFactorYubiKeyResponse","key1","key2","key3","key4","key5","nfc","UserKeyResponse","HtmlStorageLocation","cryptoFunctionService","passwordLeaked","hashBytes","hash","toUpperCase","hashStart","substr","hashEnding","nativeFetch","Request","match","split","find","v","breachedAccounts","username","getHibpBreach","e","statusCode","Error","limit","throttleKey","target","propertyKey","descriptor","originalMethod","value","allThrottles","throttles","getThrottles","argsThrottleKey","queue","Promise","resolve","reject","exec","onFinally","splice","indexOf","apply","then","val","err","AuthenticationStatus","KeySuffixOptions","TwoFactorProviderType","AuthenticationType","AuthResult","captchaSiteKey","requiresCaptcha","requiresTwoFactor","KeysRequest","LogInStrategy","cryptoService","tokenService","appIdService","messagingService","twoFactorService","logInTwoFactor","captchaResponse","tokenRequest","startLogIn","clearSelectedProvider","postIdentityToken","processTwoFactorResponse","processCaptchaResponse","processTokenResponse","onSuccessfulLogin","buildDeviceRequest","getAppId","buildTwoFactor","userProvidedTwoFactor","storedTwoFactorToken","getTwoFactorToken","Remember","saveAccountInformation","tokenResponse","accountInformation","decodeToken","addAccount","sub","hasPremiumPersonally","premium","kdfType","setTwoFactorToken","setEncKey","setEncPrivateKey","createKeyPairForOldAccount","send","setProviders","makeKeyPair","postAccountKeys","encryptedString","HashPurpose","ApiLogInStrategy","keyConnectorService","getKeyConnectorUrl","getAndSetKey","logIn","credentials","setApiKeyClientId","setApiKeyClientSecret","PasswordTokenRequest","PasswordLogInStrategy","setKey","setKeyHash","localHashedPassword","masterPassword","makePreloginKey","hashPassword","LocalAuthorization","hashedPassword","PasswordlessLogInStrategy","passwordlessCredentials","authRequestId","decKey","localPasswordHash","SsoTokenRequest","codeVerifier","redirectUri","code_verifier","redirect_uri","SsoLogInStrategy","newSsoUser","convertNewSsoUserToKeyConnector","orgId","redirectUrl","PreloginRequest","sequentialize","cacheKey","caches","cache","getCache","argsCacheKey","EncArrayBuffer","encryptionType","dataBytes","ivBytes","macBytes","encBytes","Uint8Array","encType","minimumLength","ENC_TYPE_LENGTH","throwDecryptionError","slice","arrayBuffer","b64","SortedCiphersCache","comparator","sortedCiphersByUrl","timeouts","isCached","addCiphers","sort","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","clear","clearTimeout","setTimeout","lastUsedIndex","Math","max","filter","cipher","localData","lastLaunched","x","y","valueOf","getNextIndex","CipherBulkDeleteRequest","ids","CipherBulkMoveRequest","CipherBulkRestoreRequest","CipherWithIdRequest","CipherBulkShareRequest","forEach","CipherCollectionsRequest","CipherCreateRequest","CipherPartialRequest","CipherShareRequest","DomainMatchBlacklist","Set","CipherService","settingsService","fileUploadService","searchService","encryptService","sortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","indexCiphers","clearCache","clearDecryptedCiphersState","encrypt","model","originalCipher","existingCipher","decrypt","ph","passwordRevisionDate","hasFields","existingHiddenFields","hiddenFields","ef","matchedField","getOrgKey","all","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","promises","encAttachments","attachment","promise","fieldsModel","self","encFields","reduce","field","encField","encryptField","fieldModel","linkedId","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getEncryptedCiphers","getLocalData","getAll","getAllDecrypted","reindexCiphers","hasKey","orgKeys","getOrgKeys","userKey","getKeyForUserEncryption","grouped","agg","decCiphers","entries","groupedCiphers","decryptItems","flat","getLocaleSortingFunction","getUserId","getAllDecryptedForGrouping","groupingId","folder","isDeleted","getAllDecryptedForUrl","includeOtherTypes","defaultMatch","eqDomainsPromise","firstValueFrom","settings$","matches","eqDomain","concat","matchingDomains","getDefaultUriMatch","uris","u","uri","domainUrlHost","urlHost","RegExp","test","getAllFromApiForOrganization","getCiphersOrganization","cr","getLastUsedForUrl","autofillOnPageLoad","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","getTime","setLocalData","decryptedCipherCache","cached","updateLastLaunchedDate","saveNeverDomain","getNeverDomains","setNeverDomains","createWithServer","request","postCipherCreate","postCipher","upsert","updateWithServer","putCipher","putPartialCipher","shareWithServer","attachmentPromises","shareAttachmentWithServer","encCipher","putShareCipher","shareManyWithServer","encCiphers","putShareCiphers","toCipherData","saveAttachmentWithServer","unencryptedFile","admin","reader","FileReader","readAsArrayBuffer","onload","evt","cData","saveAttachmentRawWithServer","onerror","filename","encFileName","dataEncKey","makeEncKey","encData","encryptToBytes","fileSize","byteLength","adminRequest","uploadDataResponse","postCipherAttachment","uploadCipherAttachment","getSingleMessage","legacyServerAttachmentFileUpload","fd","FormData","blob","Blob","append","Buffer","from","filepath","contentType","postCipherAttachmentAdminLegacy","postCipherAttachmentLegacy","saveCollectionsWithServer","putCipherCollections","replace","setEncryptedCiphers","clearEncryptedCiphersState","moveManyWithServer","putMoveCiphers","deleteWithServer","deleteCipher","deleteManyWithServer","deleteManyCiphers","deleteAttachment","deleteAttachmentWithServer","deleteCipherAttachment","b","aLastUsed","bLastUsed","bothNotNull","sortCiphersByLastUsedThenName","aName","bName","collator","compare","localeCompare","softDelete","setDeletedDate","softDeleteWithServer","putDeleteCipher","softDeleteManyWithServer","putDeleteManyCiphers","restore","clearDeletedDate","Array","restoreWithServer","putRestoreCipher","restoreManyWithServer","putRestoreManyCiphers","restores","attachmentView","attachmentResponse","toString","encBuf","fromResponse","decBuf","decryptFromBytes","postShareCipherAttachment","theProp","theObj","modelProp","totp","loginUri","cardholderName","brand","expMonth","expYear","firstName","middleName","lastName","address1","address2","address3","company","phone","ssn","passportNumber","licenseNumber","lastUsed","autofillOnPageLoadDefault","getAutoFillOnPageLoadDefault","clearSortedCiphers","ServerConfigResponse","ThirdPartyServerConfigResponse","EnvironmentServerConfigResponse","ServerConfig","serverConfigData","getAgeInMilliseconds","isValid","expiresSoon","EFFLongWordList","BaseEncryptedOrganizationKey","EncryptedOrganizationKey","ProviderEncryptedOrganizationKey","decValue","rsaDecrypt","toData","providerKey","getProviderKey","decryptToBytes","CryptoService","platformUtilService","setCryptoMasterKey","storeKey","keyHash","encKey","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","encPrivateKey","setDecryptedPrivateKey","setEncryptedPrivateKey","setOrgKeys","orgs","providerOrgs","encOrgKeyData","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setProviderKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","getKey","keySuffix","inMemoryKey","getCryptoMasterKey","Auto","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","warning","clearSecretKeyStore","getKeyHash","compareAndUpdateKeyHash","storedKeyHash","localKeyHash","serverKeyHash","ServerAuthorization","getEncKey","getEncKeyHelper","getPublicKey","inMemoryPublicKey","getPrivateKey","rsaExtractPublicKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","getFingerprint","keyFingerprint","userFingerprint","hkdfExpand","hashPhrase","decryptedOrganizationKeys","getDecryptedOrganizationKeys","getEncryptedOrganizationKeys","encOrgKey","fromData","decOrgKey","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","encProviderKeys","getEncryptedProviderKeys","hasKeyInMemory","hasKeyStored","Biometric","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","hasEncKey","getEncryptedCryptoSymmetricKey","clearKey","clearSecretStorage","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearPinProtectedKey","setEncryptedPinProtected","clearKeys","toggleKey","makeKey","salt","pbkdf2","makeKeyFromPin","pin","protectedKeyCs","pinProtectedKey","getEncryptedPinProtected","pinKey","makePinKey","makeShareKey","shareKey","randomBytes","rsaEncrypt","keyPair","rsaGenerateKeyPair","stretchKey","makeSendKey","keyMaterial","sendKey","hkdf","hashPurpose","iterations","theKey","buildEncKey","remakeEncKey","plainValue","encValue","privateKeyValue","headerPieces","encPieces","alg","encString","keyForEnc","decryptToUtf8","encBuffer","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","shouldStoreKey","keyB64","getVaultTimeout","getBiometricUnlock","supportsSecureStorage","getCryptoMasterKeyBiometric","newKey","macKey","minimumEntropy","entropyPerWord","log","numWords","hashArr","phrase","hashNumber","remainder","mod","divide","encKeyEnc","getDecryptedCryptoSymmetricKey","decEncKey","encKeyCipher","symmetricCryptoKey","EncryptedObject","EncryptServiceImplementation","logMacFailures","plainBuf","encObj","aesEncrypt","iv","mac","macLen","resolveLegacyKey","fastParams","aesDecryptFastParameters","computedMac","hmacFast","macData","compareFast","logMacFailed","aesDecryptFast","encThing","hmac","aesDecrypt","item","msg","classInitializers","MultithreadEncryptServiceImplementation","clear$","Subject","info","worker","Worker","URL","restartTimeout","postMessage","stringify","fromEvent","pipe","jsonItem","className","initializerKey","takeUntil","defaultIfEmpty","terminate","EventData","EventRequest","EventExport","event","message","humanReadableMessage","appIcon","appName","userName","userEmail","ip","FileUploadType","AzureFileUploadService","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","Headers","toUTCString","searchParams","body","method","blobResponse","fetch","baseUrl","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","blockListUrl","blockListXml","expiry","isNaN","setTime","now","utfBlockId","blockIdList","xml","Version","year","month","day","parts","Number","compareTo","BitwardenFileUploadService","encryptedFileName","encryptedFileData","apiCall","FolderData","OrganizationUserType","SetKeyConnectorKeyRequest","orgIdentifier","KeyConnectorUserKeyRequest","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","OrganizationApiKeyInformationResponse","keyType","OrganizationAutoEnrollStatusResponse","resetPasswordEnabled","KeysResponse","OrganizationKeysResponse","OrganizationResponse","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","planType","maxAutoscaleSeats","OrganizationSubscriptionResponse","SsoConfigApi","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpDisableOutboundLogoutRequests","idpWantAuthnRequestsSigned","view","OpenIdConnect","openId","Saml2","saml","idpAllowOutboundLogoutRequests","OrganizationSsoResponse","urls","SsoUrls","callbackPath","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","OrganizationUserStatusType","OrganizationData","Organization","isProviderUser","canAccess","Owner","Confirmed","isManager","Manager","Admin","isAdmin","canAccessEventLogs","canAccessImportExport","canAccessReports","canCreateNewCollections","canEditAnyCollection","canDeleteAnyCollection","canViewAllCollections","canEditAssignedCollections","canDeleteAssignedCollections","canViewAssignedCollections","canManageGroups","canManageSso","canManageScim","canManagePolicies","canManageUsers","canManageUsersPassword","isExemptFromPolicies","canManageBilling","hasProvider","isSuccessfullyCompleted","syncEvent","successfully","GeneratedPasswordHistory","PasswordGeneratorPolicyOptions","defaultType","minLength","useUppercase","useLowercase","useNumbers","numberCount","useSpecial","specialCount","minNumberWords","capitalize","includeNumber","inEffect","DefaultOptions","ambiguous","minNumber","uppercase","minUppercase","lowercase","minLowercase","special","minSpecial","wordSeparator","PolicyData","Policy","ResetPasswordPolicyOptions","autoEnrollEnabled","ProviderUserStatusType","ProviderUserType","Provider","isProviderAdmin","canCreateOrganizations","ProviderAdmin","SendType","indexing","index","immediateSearchLocales","defaultSearchableMinLength","searchableMinLength","locale$","subscribe","locale","registeredPipeline","lunr","Pipeline","registerFunction","normalizeAccentsPipelineFunction","isSearchable","query","normalizeSearchQuery","builder","Builder","pipeline","add","ref","boost","extractor","subTitle","uriExtractor","fieldExtractor","attachmentExtractor","searchCiphers","results","trim","toLowerCase","isArray","every","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","search","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","deleted","hasUris","some","searchSends","toLocaleLowerCase","sendsMatched","lowPriorityMatched","joined","join","hasAttachments","lastIndexOf","hostname","protocolIndex","queryIndex","substring","searchableFields","metadata","includes","normalize","SendFileData","SendTextData","SendData","Text","File","SendFileView","SendTextView","maskedText","SendView","urlB64Key","maxAccessCountReached","expired","pendingDelete","SendFile","buildDomainModel","decryptObj","SendText","Send","getCryptoService","cryptoKey","SendRequest","fileLength","StorageLocation","ProviderData","State","globals","accounts","authenticatedAccounts","accountActivity","buildAccountMapFromJSON","jsonAccounts","partialKeys","DDG_SHARED_KEY","storageService","secureStorageService","memoryStorageService","stateMigrationService","stateFactory","useAccountCache","BehaviorSubject","activeAccountSubject","activeAccount$","activeAccountUnlockedSubject","activeAccountUnlocked$","hasBeenInited","isRecoveredSession","accountDiskCache","concatMap","getValue","needsMigration","migrate","setState","createGlobals","initAccountState","updateState","syncAccountFromDisk","storedActiveUser","activeUserId","pushAccounts","diskAccount","getAccountFromDisk","account","setAccountEnvironmentUrls","save","scaffoldNewAccountStorage","setLastActive","setActiveUser","clearDecryptedDataForActiveUser","clean","options","reconcileOptions","defaultInMemoryOptions","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getAccessToken","getTimeoutBasedStorageOptions","getAccount","setAccessToken","saveAccount","getAddEditCipherInfo","addEditCipherInfo","setAddEditCipherInfo","getAlwaysShowDock","getGlobals","defaultOnDiskOptions","alwaysShowDock","setAlwaysShowDock","saveGlobals","getApiKeyClientId","apiKeyClientId","getApiKeyClientSecret","apiKeyClientSecret","getAutoConfirmFingerPrints","autoConfirmFingerPrints","setAutoConfirmFingerprints","autoFillOnPageLoadDefault","setAutoFillOnPageLoadDefault","getBiometricAwaitingAcceptance","biometricAwaitingAcceptance","setBiometricAwaitingAcceptance","getBiometricFingerprintValidated","biometricFingerprintValidated","setBiometricFingerprintValidated","getBiometricText","biometricText","setBiometricText","biometricUnlock","setBiometricUnlock","getCanAccessPremium","getIsAuthenticated","getHasPremiumPersonally","getHasPremiumFromOrganization","setHasPremiumPersonally","hasPremiumFromOrganization","getOrganizations","setHasPremiumFromOrganization","getClearClipboard","defaultOnDiskLocalOptions","clearClipboard","setClearClipboard","getCollapsedGroupings","collapsedGroupings","setCollapsedGroupings","getConvertAccountToKeyConnector","convertAccountToKeyConnector","setConvertAccountToKeyConnector","nextValue","defaultSecureStorageOptions","saveSecureStorageKey","getCryptoMasterKeyB64","setCryptoMasterKeyB64","getDecryptedCollections","setDecryptedCollections","recordToMap","mapToRecord","getDecryptedPasswordGenerationHistory","setDecryptedPasswordGenerationHistory","getDecryptedPinProtected","setDecryptedPinProtected","getDecryptedPolicies","setDecryptedPolicies","getDecryptedSends","setDecryptedSends","defaultUriMatch","setDefaultUriMatch","getDisableAddLoginNotification","disableAddLoginNotification","setDisableAddLoginNotification","getDisableAutoBiometricsPrompt","disableAutoBiometricsPrompt","setDisableAutoBiometricsPrompt","getDisableAutoTotpCopy","disableAutoTotpCopy","setDisableAutoTotpCopy","getDisableBadgeCounter","disableBadgeCounter","setDisableBadgeCounter","getDisableChangedPasswordNotification","disableChangedPasswordNotification","setDisableChangedPasswordNotification","getDisableContextMenuItem","disableContextMenuItem","setDisableContextMenuItem","getDisableFavicon","disableFavicon","setDisableFavicon","getDisableGa","disableGa","setDisableGa","getDontShowCardsCurrentTab","dontShowCardsCurrentTab","setDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","dontShowIdentitiesCurrentTab","setDontShowIdentitiesCurrentTab","getDuckDuckGoSharedKey","setDuckDuckGoSharedKey","remove","getEmail","setEmail","getEmailVerified","setEmailVerified","getEnableAlwaysOnTop","accountPreference","enableAlwaysOnTop","globalPreference","setEnableAlwaysOnTop","getEnableAutoFillOnPageLoad","enableAutoFillOnPageLoad","setEnableAutoFillOnPageLoad","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","enableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","enableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","enableCloseToTray","setEnableCloseToTray","getEnableDuckDuckGoBrowserIntegration","enableDuckDuckGoBrowserIntegration","setEnableDuckDuckGoBrowserIntegration","getEnableFullWidth","enableFullWidth","setEnableFullWidth","getEnableMinimizeToTray","enableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","enableStartToTray","setEnableStartToTray","getEnableTray","enableTray","setEnableTray","defaultOnDiskMemoryOptions","getEncryptedCollections","setEncryptedCollections","getEncryptedFolders","setEncryptedFolders","getEncryptedPasswordGenerationHistory","setEncryptedPasswordGenerationHistory","getEncryptedPolicies","setEncryptedPolicies","getEncryptedSends","setEncryptedSends","getEntityId","entityId","setEntityId","getEntityType","entityType","setEntityType","getEnvironmentUrls","getGlobalEnvironmentUrls","setEnvironmentUrls","getEquivalentDomains","setEquivalentDomains","getEventCollection","eventCollection","setEventCollection","getEverBeenUnlocked","everBeenUnlocked","setEverBeenUnlocked","getForcePasswordReset","setForcePasswordReset","getInstalledVersion","installedVersion","setInstalledVersion","getKdfIterations","setKdfIterations","getKdfType","setKdfType","getLastActive","lastSync","setLastSync","getLocale","setLocale","getMainWindowSize","mainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","minimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","neverDomains","getNoAutoPromptBiometrics","noAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","noAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","openAtLogin","setOpenAtLogin","getOrganizationInvitation","organizationInvitation","setOrganizationInvitation","setOrganizations","getPasswordGenerationOptions","passwordGenerationOptions","setPasswordGenerationOptions","getUsernameGenerationOptions","usernameGenerationOptions","setUsernameGenerationOptions","getGeneratorOptions","generatorOptions","setGeneratorOptions","getProtectedPin","protectedPin","setProtectedPin","getProviders","getRefreshToken","setRefreshToken","getRememberedEmail","rememberedEmail","setRememberedEmail","getSecurityStamp","setSecurityStamp","getSettings","setSettings","getSsoCodeVerifier","ssoCodeVerifier","setSsoCodeVerifier","getSsoOrgIdentifier","ssoOrganizationIdentifier","setSsoOrganizationIdentifier","getSsoState","ssoState","setSsoState","getTheme","setTheme","getUsesKeyConnector","setUsesKeyConnector","vaultTimeout","setVaultTimeout","getVaultTimeoutAction","accountVaultTimeoutAction","globalVaultTimeoutAction","setVaultTimeoutAction","getStateVersion","setStateVersion","getWindow","setWindow","setServerConfig","getServerConfig","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","htmlStorageLocation","Local","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deepClone","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","defaultOptions","Session","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","timeoutAction","deserializer","stateUpdater","updatedState","fromEntries","withPrototypeForArrayMembers","memberConstructor","memberConverter","originalResult","String","prototype","getOwnPropertyDescriptors","withPrototypeForObjectValues","valuesConstructor","valuesConverter","decoded","setTokens","clientIdClientSecret","setToken","setClientId","setClientSecret","getClientId","getClientSecret","getToken","clearTwoFactorToken","clearToken","getTokenExpirationDate","exp","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","round","tokenNeedsRefresh","minutes","email_verified","getName","getIssuer","iss","getIsExternal","amr","v1Keys","autoConfirmFingerprints","enableBiometric","encOrgKeys","encPrivate","history","lastActive","ssoIdentifier","stamp","usesConnector","v1KeyPrefixes","currentStateVersion","getCurrentStateVersion","Latest","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","Four","getAuthenticatedAccounts","migratedAccount","migrateAccountFrom4To5","setCurrentStateVersion","Five","migrateAccountFrom5To6","Six","clearV1Keys","clearingUserId","keyPrefix","defaultAccount","accountSettings","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","legacyEtmKey","authenticationStatus","decodedToken","authenticatedUserIds","encryptedOrgKeys","newVersion","SyncService","sendService","providerService","folderApiService","syncNotifierService","logoutCallback","syncInProgress","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","refreshIdentityToken","getSync","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","syncUpsertFolder","isEdit","localFolder","remoteFolder","syncDeleteFolder","syncUpsertCipher","shouldUpdate","localCipher","checkCollections","remoteCipher","getFullCipherDetails","syncDeleteCipher","syncUpsertSend","localSend","remoteSend","getSend","sendId","syncDeleteSend","getAccountRevisionDate","userNeedsMigration","setConvertAccountRequired","removeConvertAccountRequired","eqDomains","global","B32Chars","SteamChars","TwoFactorProviders","Authenticator","priority","Yubikey","Duo","OrganizationDuo","Email","WebAuthn","VerifyOTPRequest","OTP","SecretVerificationRequest","AnonAddyForwarder","generate","anonaddy","requestInit","redirect","Authorization","website","DuckDuckGoForwarder","address","FastmailForwarder","accountId","getAccountId","using","methodCalls","emailPrefix","fastmail","prefix","methodResponses","created","notCreated","primaryAccounts","FirefoxRelayForwarder","generated_for","full_address","ForwarderOptions","FastmailForwarderOptions","AnonAddyForwarderOptions","SimpleLoginForwarder","Authentication","note","alias","wordCapitalize","wordIncludeNumber","subaddressType","catchallType","forwardedService","forwardedAnonAddyDomain","DecryptParameters","AuthGuard","routerState","authStatus","getAuthStatus","LoggedOut","Locked","promptBiometric","getConvertAccountRequired","LockGuard","homepage","loginpage","UnauthGuard","subscribers","messageCallback","unsubscribe","modalRef","showPassword","togglePassword","submit","close","modalService","component","protectedFields","showPasswordPrompt","open","allowMultipleModals","onClosedPromise","ThemeBuilder","configuredTheme","systemTheme","effectiveTheme","updateSystemTheme","updateConfiguredTheme","ThemingService","document","_theme","theme$","monitorThemeChanges","getSystemTheme","monitorConfiguredThemeChanges","monitorSystemThemeChanges","documentElement","classList","Light","Dark","Nord","SolarizedDark","matchMedia","AbstractThemingService","JslibServicesModule","provide","useValue","useFactory","translationLocale","deps","navigator","language","useClass","makeAndGetAppId","getAnonymousAppId","existingId","guid","pushNotificationSubject","logInStrategy","strategy","clearState","saveState","logOut","callback","authingWithApiKey","authingWithSso","authingWithPassword","authingWithPasswordless","Unlocked","preloginResponse","postPrelogin","getPushNotifcationObs$","startSessionTimeout","clearSessionTimeout","sessionTimeout","P","injector","_folders","_folderViews","folders$","folderViews$","unlocked","updateObservables","getAllDecryptedFromState","values","decryptFolders","updates","cId","foldersMap","decryptFolderPromises","decryptedFolders","noneFolder","useExisting","postFolder","putFolder","deleteFolder","userVerificationService","accountService","deleteAccount","verification","verificationRequest","buildRequest","collection","decCollections","decryptedCollections","collectionCopy","getNested","urlsSubject","scimUrl","setUrlsFromStorage","hasBaseUrl","notificationsUrl","getWebVaultUrl","webVaultUrl","getSendUrl","getIconsUrl","iconsUrl","getApiUrl","apiUrl","getIdentityUrl","identityUrl","getEventsUrl","eventsUrl","getScimUrl","envUrls","setUrls","formatUrl","scim","getUrls","isCloud","getCode","period","digits","keyB32","isOtpAuth","isSteamAuth","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","floor","timeBytes","keyBytes","b32ToBytes","sign","offset","binary","otp","fullCode","trunc","getTimeInterval","l","b32ToHex","cleanedInput","bits","hex","byteIndex","charAt","chunk","signature","generatePassword","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","getOptions","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","enforcedPolicyOptions","getPasswordGeneratorPolicyOptions","policies$","policy","currentPolicy","useUpper","useLower","minNumbers","saveOptions","getHistory","decryptHistory","addHistory","currentHistory","matchesPrevious","unshift","pop","newHistory","encryptHistory","passwordStrength","userInputs","globalUserInputs","finalUserInputs","normalizeOptions","str","num","array","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","generateUsername","generateCatchall","generateSubaddress","generateForwarded","generateWord","word","zeroPad","subaddressEmail","atIndex","emailBeginning","emailEnding","subaddressString","randomString","catchallDomain","startString","forwarder","forwarderOptions","forwardedSimpleLoginApiKey","forwardedAnonAddyApiToken","forwardedFirefoxApiToken","forwardedFastmailApiToken","forwardedDuckDuckGoToken","charSet","width","customUserAgent","isWebClient","isDesktopClient","IEBrowser","ChromeBrowser","EdgeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","UnknownBrowser","VivaldiBrowser","WindowsDesktop","MacOsDesktop","LinuxDesktop","Accept","identityToken","getClientType","qsStringify","getCredentials","responseJson","isJsonResponse","TwoFactorProviders2","HCaptcha_SiteKey","doAuthRefresh","postAuthRequest","getAuthResponse","path","getProfile","getUserSubscription","getTaxInfo","putProfile","putTaxInfo","postEmailToken","postEmail","postPassword","setPassword","postSetKeyConnectorKey","postSecurityStamp","postPasswordHint","postRegister","postPremium","postIapCheck","postReinstatePremium","postCancelPremium","postAccountStorage","postAccountPayment","postAccountLicense","postAccountKey","postAccountVerifyEmail","postAccountVerifyEmailToken","postAccountVerifyPassword","postAccountRecoverDelete","postAccountRecoverDeleteToken","postAccountKdf","deleteSsoUser","getSsoUserIdentifier","postUserApiKey","postUserRotateApiKey","putUpdateTempPassword","postConvertToKeyConnector","getUserBillingHistory","getUserBillingPayment","postSendAccess","getSendFileDownloadData","getSends","postSend","postFileTypeSend","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getCipherAdmin","postCipherAdmin","putCipherAdmin","deleteCipherAdmin","deleteManyCiphersAdmin","putCipherCollectionsAdmin","postPurgeCiphers","postImportCiphers","postImportOrganizationCiphers","putDeleteCipherAdmin","putDeleteManyCiphersAdmin","putRestoreCipherAdmin","getAttachmentData","emergencyAccessId","deleteCipherAttachmentAdmin","renewAttachmentUploadUrl","postAttachmentFile","getCollectionDetails","getUserCollections","getCollectionUsers","postCollection","putCollection","putCollectionUsers","deleteCollection","deleteCollectionUser","getGroupDetails","getGroups","getGroupUsers","postGroup","putGroup","putGroupUsers","deleteGroup","deleteGroupUser","getOrganizationUser","getOrganizationUserGroups","getOrganizationUsers","getOrganizationUserResetPasswordDetails","postOrganizationUserInvite","postOrganizationUserReinvite","postManyOrganizationUserReinvite","postOrganizationUserAccept","postOrganizationUserConfirm","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","putOrganizationUser","putOrganizationUserGroups","putOrganizationUserResetPasswordEnrollment","putOrganizationUserResetPassword","deleteOrganizationUser","deleteManyOrganizationUsers","revokeOrganizationUser","revokeManyOrganizationUsers","restoreOrganizationUser","restoreManyOrganizationUsers","getPlans","postPublicImportDirectory","getTaxRates","getSettingsDomains","putSettingsDomains","getTwoFactorProviders","getTwoFactorOrganizationProviders","getTwoFactorAuthenticator","getTwoFactorEmail","getTwoFactorDuo","getTwoFactorOrganizationDuo","getTwoFactorYubiKey","getTwoFactorWebAuthn","getTwoFactorWebAuthnChallenge","getTwoFactorRecover","putTwoFactorAuthenticator","putTwoFactorEmail","putTwoFactorDuo","putTwoFactorOrganizationDuo","putTwoFactorYubiKey","putTwoFactorWebAuthn","deviceResponse","rawId","btoa","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","deleteTwoFactorWebAuthn","putTwoFactorDisable","putTwoFactorOrganizationDisable","postTwoFactorRecover","postTwoFactorEmailSetup","postTwoFactorEmail","getDeviceVerificationSettings","putDeviceVerificationSettings","getEmergencyAccessTrusted","getEmergencyAccessGranted","getEmergencyAccess","getEmergencyGrantorPolicies","putEmergencyAccess","deleteEmergencyAccess","postEmergencyAccessInvite","postEmergencyAccessReinvite","postEmergencyAccessAccept","postEmergencyAccessConfirm","postEmergencyAccessInitiate","postEmergencyAccessApprove","postEmergencyAccessReject","postEmergencyAccessTakeover","postEmergencyAccessPassword","postEmergencyAccessView","getCloudCommunicationsEnabled","getOrganizationConnection","createOrganizationConnection","updateOrganizationConnection","organizationConnectionId","deleteOrganizationConnection","postProviderSetup","getProvider","putProvider","getProviderUsers","getProviderUser","postProviderUserInvite","postProviderUserReinvite","postManyProviderUserReinvite","postProviderUserBulkConfirm","deleteManyProviderUsers","postProviderUserAccept","postProviderUserConfirm","postProviderUsersPublicKey","putProviderUser","deleteProviderUser","getProviderClients","postProviderAddOrganization","postProviderCreateOrganization","deleteProviderOrganization","getEvents","end","addEventParameters","getEventsCipher","getEventsOrganization","getEventsOrganizationUser","getEventsProvider","getEventsProviderUser","postEventsCollect","authHeader","getActiveBearerToken","getUserPublicKey","postBitPayInvoice","postSetupPayment","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getKeyConnectorAlive","getOrganizationExport","getApplicationVersion","preValidateSso","encodeURIComponent","postCreateSponsorship","sponsoredOrgId","isSelfHost","getSponsorshipSyncStatus","deleteRevokeSponsorship","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","postPreValidateSponsorshipToken","sponsorshipToken","postRedeemSponsorship","postResendSponsorshipOffer","doRefreshToken","doApiTokenRefresh","deviceRequest","authed","hasResponse","alterHeaders","requestUrl","href","responseType","responseIsJson","tokenError","isTextResponse","Message","typeHeader","azureFileUploadService","bitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","_settings","setVaultTimeoutOptions","action","currentAction","isPinLockSet","isBiometricLockSet","policyAppliesToUser","vaultTimeoutSettingsService","lockedCallback","loggedOutCallback","inited","checkOnInterval","startCheck","checkVaultTimeout","setInterval","isViewOpen","shouldLock","executeTimeoutAction","lock","pinSet","vaultTimeoutSeconds","getExport","format","getEncryptedExport","getDecryptedExport","getPasswordProtectedExport","clearText","encKeyValidation","encText","jsonDoc","passwordProtected","encKeyValidation_DO_NOT_EDIT","getOrganizationEncryptedExport","getOrganizationDecryptedExport","getEventExport","getFileName","extension","getFullYear","padNumber","getMonth","getDate","getHours","getMinutes","getSeconds","decFolders","exportCiphers","buildCommonCipher","exportData","exportPromises","decCol","decCipher","collectionsMap","orgKey","padCharacter","numString","login_uri","login_username","login_password","login_totp","connected","inactive","reconnectTimer","signalrConnection","off","accessTokenFactory","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","sync","reconnectFromActivity","disconnectFromInactivity","isAuthenticated","payloadUserId","UserId","myUserId","random","win","crypto","subtle","algorithm","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","ikm","outputByteSize","hkdfParams","prk","hashLen","infoBuf","infoArr","runningOkmLength","previousT","n","okm","md","valueBytes","toByteString","update","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","bytes","getBytes","rand","Uint32Array","putInt32","meta","encKeyByteString","macKeyByteString","encKeyB64","macKeyB64","parameters","dataBuffer","decipher","finish","output","rsaParams","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","arr","getRandomValues","buf","cryptoFunctionservice","uploadEvents","collect","eventType","uploadImmediately","orgIds","req","clearEvents","_policies","decryptedPolicies","diskPolicies","call","masterPasswordPolicyOptions$","of","obsPolicies","filteredPolicies","minComplexity","requireUpper","requireLower","requireNumbers","requireSpecial","policyAppliesToActiveUser$","policyType","policyFilter","checkPoliciesThatApplyToUser","evaluateMasterPassword","newPassword","toLocaleUpperCase","getResetPasswordPolicyOptions","resetPasswordPolicyOptions","mapPoliciesFromToken","policiesResponse","isExcemptFromPolicies","organization","policiesMap","policySet","Accepted","getPolicy","getPolicies","getPoliciesByToken","getPoliciesByInvitedUser","getMasterPasswordPoliciesForInvitedUsers","putPolicy","fileData","passwordHash","encryptFileData","parseFile","decSends","saveWithServer","sendData","legacyServerSendFileUpload","removePasswordWithServer","loggedInUsingSso","requiredByOrganization","getManagingOrganization","userIsNotUsingKeyConnector","migrateUser","keyConnectorRequest","handleKeyConnectorError","userKeyResponse","keyArr","pubKey","privKey","setPasswordRequest","userVerificationApiService","requestClass","alreadyHashed","validateInput","secret","verifyUser","postAccountVerifyOTP","requestOTP","postAccountRequestOTP","_organizations","organizations$","sync$","updateStateAndObservables","organizationsMap","canManageSponsorships","hasOrganizations","getByIdentifier","selectedTwoFactorProviderType","getSupportedProviders","twoFactorProvidersData","supportsDuo","supportsWebAuthn","getDefaultProvider","webAuthnSupported","providerType","providerPriority","_value","setSelectedProvider","clearProviders","getFormValidationErrors","controls","errors","control","controlErrors","keyError","controlName","errorName","getBilling","getSubscription","getLicense","getAutoEnrollStatus","createLicense","updatePayment","upgrade","updateSubscription","updateSeats","updateStorage","verifyBank","cancel","reinstate","leave","updateLicense","importDirectory","getOrCreateApiKey","getApiKeyInformation","organizationApiKeyType","rotateApiKey","updateTaxInfo","getKeys","updateKeys","getSso","updateSso","_sync","configApiService","_serverConfig","serverConfig$","switchMap","timer","E","buildServerConfig","fetchServerConfig","showError","defaultErrorMessage","validationErrors","getAllMessages","MemoryStorageService","store","BroadcasterMessagingService","broadcasterService","subscriber","arg","command","destroy$","ngOnInit","ngOnDestroy","complete","getDefaultDateFilters","setDate","toDateTimeLocalString","formatDateFilters","filterStart","filterEnd","getEventInfo","ev","EventOptions","appInfo","getAppInfo","getEventMessage","humanReadableMsg","formatCipherId","getShortId","formatCollectionId","formatGroupId","formatOrgUserId","formatPolicyId","p1","formatProviderUserId","formatProviderOrganizationId","Android","iOS","UWP","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","shortId","cipherInfo","makeAnchor","setAttribute","outerHTML","createElement","innerHTML","pad","norm","abs","HtmlStorageService","localStorage","getItem","sessionStorage","setItem","removeItem","ContainerService","attachToGlobal","bitwardenContainerService","getEncryptService","InitService","notificationsService","vaultTimeoutService","eventLoggingService","themingService","location","origin","ModalService","componentFactoryResolver","applicationRef","el","modalOpen","setupHandlers","onCreated","first","modals","querySelectorAll","modal","show","shown","focus","closed","onClose","PasswordRepromptComponent","PolicyListService","addPolicies","RouterService","activatedRoute","titleService","previousUrl","undefined","currentUrl","child","firstChild","titleId","snapshot","rawTitle","updateUrl","doNotSaveUrl","newTitle","setTitle","setPreviousUrl","getPreviousUrl","AccountSettings","Account","StateService","getRememberEmail","rememberEmail","setRememberEmail","FileDownloadBuilder","_request","blobOptions","fileType","blobData","downloadMethod","fileNameLower","endsWith","WebFileDownloadService","download","isSafari","createObjectURL","style","position","appendChild","click","removeChild","ClientType","WebPlatformUtilsService","browserCache","userAgent","chrome","Web","isFirefox","isChrome","isEdge","isOpera","isVivaldi","isMacAppStore","launchUri","sameWindow","rel","PublicKeyCredential","showDialog","confirmText","cancelText","bodyIsHtml","iconClasses","bootstrapModal","querySelector","removeAttribute","iconHtmlStr","confirmed","heightAuto","buttonsStyling","icon","iconHtml","html","titleText","showCancelButton","cancelButtonText","showConfirmButton","confirmButtonText","isDev","copyToClipboard","doc","clipboardData","setData","queryCommandSupported","textarea","textContent","copyEl","contains","select","execCommand","debug","console","warn","readFromClipboard","supportsBiometric","authenticateBiometric","CoreModule","parentModule","initService","multi","systemLanguage","localesDirectory","getLocalesJson","_locale","ReplaySubject","supportedTranslationLocales","localeNames","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","p2","p3","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","content","replaceToken","replaceContent","filePath","localesResult","migrationStateFrom1To2","EmergencyAccessAcceptRequest","BaseAcceptComponent","loading","requiredParameters","failedShortMessage","failedMessage","qParams","errorMessage","authedHandler","unauthedHandler","navigate","AcceptEmergencyComponent","actionPromise","OrganizationUserAcceptRequest","AcceptOrganizationComponent","policyApiService","organizationApiService","prepareAcceptRequest","orgName","performResetPasswordAutoEnroll","encryptedKey","policyList","PasswordHintRequest","HintComponent","successRoute","formPromise","onSuccessfulSubmit","ngZone","pinLock","webVaultHostname","invalidPinAttempts","load","handlePinRequiredUnlock","handleMasterPasswordRequiredUnlock","unlockBiometric","biometricLock","doContinue","input","getElementById","isStable","onStable","take","doUnlockWithPin","failed","setKeyAndContinue","doUnlockWithMasterPassword","passwordValid","decPin","hideInput","vaultUrl","LockComponent","routerService","navigateByUrl","CaptchaIFrame","iframeId","successCallback","errorCallback","infoCallback","parseFunction","parseMessage","bind","connectorLink","sendMessage","iframe","src","contentWindow","base64Encode","fromCharCode","cleanup","removeEventListener","createParams","URLSearchParams","parent","initComponent","addEventListener","validMessage","parsedMessage","height","AuthRequestType","CaptchaProtectedComponent","setupCaptcha","captcha","showCaptcha","handleCaptchaRequired","PasswordLogInCredentials","SsoLogInCredentials","PasswordlessLogInCredentials","PasswordlessCreateAuthRequest","fingerprintPhrase","startPasswordlessLogin","LoginWithDeviceComponent","passwordGenerationService","anonymousHubService","validationService","showResendNotification","twoFactorRoute","forcePasswordResetRoute","navigation","getCurrentNavigation","extras","confirmResponse","buildAuthRequest","reqResponse","passwordlessRequest","requestId","buildLoginCredntials","loginResponse","onSuccessfulLoginTwoFactorNavigate","onSuccessfulLoginForceResetNavigate","onSuccessfulLoginNavigate","authRequestKeyPair","fingerprint","AuthenticateAndUnlock","decMasterPasswordHash","formBuilder","formValidationErrorService","selfHosted","formGroup","group","alwaysRememberEmail","selfHostedDomain","setValue","markAllAsTouched","invalid","errorText","getErrorToastMessage","launchSsoBrowser","ssoRedirectUri","passwordOptions","numbers","codeVerifierHash","codeChallenge","webUrl","shift","errorTag","focusInput","defaultIcon","danger","defaultI18n","CalloutComponent","useAlertRole","calloutClass","headerClass","LoginComponent","showResetPasswordAutoEnrollWarning","showPasswordless","goAfterLogIn","invite","resetPasswordPolicy","enforcedPasswordPolicyOptions","strengthResult","getPasswordStrengthUserInput","masterPasswordScore","score","policiesData","clearValidators","updateValueAndValidity","valid","userInput","atPosition","DeleteRecoverRequest","RecoverDeleteComponent","TwoFactorRecoveryRequest","RecoverTwoFactorComponent","recoveryCode","RegisterRequest","referenceData","InputsFieldMatch","matchTo","inputsMatchError","inputsDoesntMatchError","fieldMatchTo","fieldCtrl","fieldMatchToCtrl","setErrors","isInTrialFlow","createdAccount","showTerms","showErrorSummary","confirmMasterPassword","hint","validateInputsDoesntMatch","acceptPolicies","acceptPoliciesValidation","validator","validateFormInputsMatch","accountCreated","registerResponse","registerAccount","buildRegisterRequest","successful","captchaRequired","emit","getStrengthResult","passwordStrengthResult","getPasswordScoreText","color","required","validateRegistration","hasError","orgInvite","ReferenceEventRequest","PasswordStrengthComponent","showText","passwordScoreColor","scoreWidth","updatePasswordStrength","masterPasswordScoreColor","masterPasswordScoreText","ngOnChanges","masterPasswordStrengthTimeout","setPasswordScoreText","BitErrorSummary","errorCount","getErrorCount","errorString","form","acc","RegisterFormComponent","referenceDataValue","queryParamEmail","RegisterComponent","showCreateOrgMessage","layout","flow","reference","cookie","continuing","leaving","convert","RemovePasswordComponent","OrganizationUserResetPasswordEnrollmentRequest","SetPasswordRequest","strongPassword","setupSubmitActions","performSubmitActions","masterPasswordRetype","syncLoading","resetPasswordAutoEnroll","onSetPasswordSuccess","userEncKey","resetRequest","onSuccessfulChangePassword","confirmField","SetPasswordComponent","loggingIn","changePasswordRoute","checkState","getOrgIdentifierFromState","returnUri","includeUserIdentifier","initiateSsoFormPromise","authorizeUrl","buildAuthorizeUrl","userIdentifier","orgIdFromState","onSuccessfulLoginChangePasswordNavigate","stateSplit","checkStateSplit","PlanType","ProductType","SsoComponent","storedIdentifier","VerticalStep","subLabel","applyBorder","VerticalStepContentComponent","onSelectStep","selected","selectStep","selectStepByIndex","VerticalStepperComponent","activeClass","isNextButtonHidden","steps","selectedIndex","isStepDisabled","_","completed","changedBusinessOwned","OrganizationInformationComponent","nameOnly","createOrganization","isProvider","acceptingSponsorship","LogoForbesComponent","LogoUSNewsComponent","EnterpriseContentComponent","TeamsContentComponent","ConfirmationDetailsComponent","PaymentMethodType","OrganizationCreateRequest","OrganizationKeysRequest","OrganizationUpgradeRequest","ProviderOrganizationCreateRequest","clientOwnerEmail","organizationCreateRequest","changeMethod","bank","lightInputColor","lightInputPlaceholderColor","darkInputColor","darkInputPlaceholderColor","PaymentComponent","showMethods","showOptions","Card","hideBank","hidePaypal","hideCredit","trialFlow","routing_number","account_number","account_holder_name","account_holder_type","currency","btInstance","stripe","stripeElements","stripeCardNumberElement","stripeCardExpiryElement","stripeCardCvcElement","stripeScript","async","Stripe","elements","setStripeElement","btScript","StripeElementStyle","fontFamily","fontSize","fontSmoothing","StripeElementClasses","empty","PayPal","BankAccount","Credit","head","btStylesheet","braintree","dropin","authorization","container","paymentOptionPriority","paypal","buttonStyle","label","shape","tagline","createErr","instance","createPaymentToken","requestPaymentMethod","nonce","handleCardSetup","setupIntent","payment_method","createToken","handleStripeCardPayment","handleCardPayment","paymentIntent","classes","placeholder","mount","TaxInfoUpdateRequest","OrganizationTaxInfoUpdateRequest","taxInfo","TaxInfoComponent","onCountryChanged","includeTaxId","pristine","taxRates","taxRate","localTaxRate","getTaxInfoRequest","submitTaxInfo","hasChanged","changeCountry","changedProduct","changedCountry","changedOwnedBusiness","OrganizationPlansComponent","showFree","showCancel","Free","onSuccess","onCanceled","onTrialBillingSuccess","productTypes","singleOrgPolicyBlock","discount","businessOwned","premiumAccessAddon","additionalStorage","additionalSeats","plans","Enterprise","Teams","Families","addValidators","policyAppliesToActiveUser","selectedPlan","selectedPlanInterval","selectableProducts","validPlans","Custom","familyPlan","FamiliesAnnually","selectablePlans","additionalStoragePriceMonthly","seatPriceMonthly","additionalStorageTotal","seatTotal","subtotal","subTotal","freeTrial","taxCharges","taxComponent","total","paymentDesc","TeamsAnnually","paymentComponent","doSubmit","collectionCt","createSelfHosted","createCloudHosted","updateOrganization","subLabelText","billingSubLabelText","additionalStorageGb","billingAddressCountry","billingAddressPostalCode","orgShareKey","collectionName","tokenResult","paymentToken","taxIdNumber","billingAddressLine1","billingAddressLine2","billingAddressCity","billingAddressState","providerRequest","files","price","BillingComponent","previousStep","patchValue","orgInfoForm","stepBack","DefaultContentComponent","Enterprise1ContentComponent","Enterprise2ContentComponent","Teams1ContentComponent","Teams2ContentComponent","LogoCnetComponent","CnetEnterpriseContentComponent","CnetIndividualContentComponent","CnetTeamsContentComponent","AbmEnterpriseContentComponent","AbmTeamsContentComponent","billingSuccess","stepSelectionChange","navigateToOrgVault","navigateToOrgInvite","TrialInitiationComponent","titleCasePipe","orgInfoSubLabel","orgLabel","billingSubLabel","accountCreateOnly","validOrgs","orgInfoFormGroup","referenceDataId","referenceId","setupFamilySponsorship","transform","EnterpriseAnnually","previouslySelectedIndex","verticalStepper","previous","WebAuthnIFrame","webAuthnNewTab","btnText","allow","TwoFactorEmailRequest","webAuthnReady","selectedProviderType","webAuthn","twoFactorEmail","loginRoute","webAuthnAllow","authing","needsLock","cleanupWebAuthn","providerData","authWebAuthn","Host","sig_request","Signature","submit_callback","sig","sendEmail","doToast","emailPromise","authRequestAccessCode","Window","onProviderSelected","onRecoverSelected","choose","recover","TwoFactorOptionsComponent","TwoFactorComponent","anotherMethod","openViewRef","twoFactorOptionsModal","comp","PasswordRequest","currentMasterPassword","newMasterPasswordHash","UpdatePasswordComponent","OrganizationUserResetPasswordRequest","UpdateTempPasswordRequest","newPasswordHash","newEncKey","UpdateTempPasswordComponent","VerifyEmailRequest","VerifyEmailTokenComponent","VerifyDeleteRecoverRequest","VerifyRecoverDeleteComponent","HomeGuard","FrontendLayoutComponent","FooterComponent","StopPropDirective","onClick","$event","stopPropagation","MenuItemDirective","elementRef","role","tabIndex","nativeElement","MenuComponent","ngAfterContentInit","keyManager","menuItems","withWrap","MenuTriggerForDirective","viewContainerRef","overlay","isOpen","hasPopup","defaultMenuConfig","panelClass","hasBackdrop","backdropClass","scrollStrategy","scrollStrategies","reposition","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","withLockedPosition","withFlexibleDimensions","withPush","toggleMenu","destroyMenu","openMenu","disposeAll","menu","overlayRef","templatePortal","templateRef","attach","closedEventsSub","getClosedEvents","keyDownEventsSub","keydownEvents","onKeydown","detachments","escKey","backdrop","backdropClick","menuClosed","mergeWith","dispose","MenuDividerComponent","SizeClasses","large","default","small","AvatarComponent","sanitizer","border","svgCharCount","svgFontSize","svgFontWeight","svgSize","chars","upperCaseText","svg","getFirstLetters","unicodeSafeSubstring","hexColor","createSvgElement","charObj","createTextElement","svgHtml","unescape","bypassSecurityTrustResourceUrl","count","svgTag","backgroundColor","character","textTag","fontWeight","characters","NavbarComponent","UserLayoutComponent","OrganizationSwitcherComponent","activeOrganization","loaded","OrganizationLayoutComponent","_destroy","organization$","mergeMap","canShowManageTab","canShowToolsTab","canShowSettingsTab","getToolsRoute","getManageRoute","SelectionReadOnlyRequest","selectAll","check","CollectionAddEditComponent","onSavedCollection","onDeletedCollection","editMode","accessGroups","groupsResponse","checked","deletePromise","styles","primary","secondary","hoverStyles","BadgeDirective","badgeType","hasHoverEffects","nodeName","selectedChanged","filterSelected","EntityUsersComponent","onEditedUsers","organizationUserType","organizationUserStatusType","showSelected","selectedCount","allUsers","loadUsers","users","searchedUsers","searchText","scrollViewportStyle","entity","selections","loadMore","CollectionsComponent","canCreate","didScroll","pageSize","pagedCollectionsCount","decryptCollections","assignedCollections","resetPaging","pagedLength","pagedCollections","pagedSize","canEdit","canDelete","addEditModalRef","canSave","removeCollection","usersModalRef","entityName","isSearching","isPaging","searching","EventView","BaseEventsComponent","eventService","exportService","fileDownloadService","dirtyDates","defaultDates","exportEvents","appApiPromiseUnfulfilled","dates","parseDates","exportPromise","export","loadEvents","clearExisting","loadAndParseEvents","refreshPromise","morePromise","startDate","endDate","requestEvents","eventInfo","getUserName","exportFileName","EventsComponent","userNamePipe","orgUsersUserIdMap","GroupRequest","GroupAddEditComponent","onSavedGroup","onDeletedGroup","access","loadCollections","GroupsComponent","pagedGroupsCount","pagedGroups","removeGroup","ManageComponent","OrganizationUserBulkRequest","OrganizationUserConfirmRequest","UserConfirmComponent","onConfirmedUser","dontAskAgain","BasePeopleComponent","searchPipe","statusMap","pagedUsers","activeUsers","pagedUsersCount","allCount","invitedCount","userStatusType","Invited","acceptedCount","confirmedCount","revokedCount","Revoked","showConfirmUsers","showBulkConfirmUsers","getUsers","checkUser","filteredUsers","selectCount","removeUserConfirmationDialog","deleteUser","removeUser","revoke","revokeWarningMessage","revokeUser","restoreUser","reinvite","reinviteUser","confirm","confirmUser","mapIndex","updateUser","publicKeyResponse","autoConfirm","confirmModalRef","getCheckedUsers","OrganizationUserBulkConfirmRequest","publicKeys","fingerprints","statuses","done","excludedUsers","isAccepted","getPublicKeys","entry","getCryptoKey","userIdsWithKeys","postConfirmRequest","deleteUsers","removeUsersWarning","BulkRestoreRevokeComponent","isRevoking","bulkTitle","titleKey","performBulkUserAction","bulkMessage","BulkStatusComponent","EntityEventsComponent","showUser","orgUsersIdMap","ResetPasswordComponent","onPasswordReset","loggedOutWarningName","passwordStrengthComponent","copy","orgSymKey","decPrivateKey","OrganizationUserInviteRequest","emails","OrganizationUserUpdateRequest","NestedCheckboxComponent","onSavedUser","onDeletedUser","parentIndeterminate","parentChecked","checkboxes","pascalize","handleDependentPermissions","UserAddEditComponent","onRevokedUser","onRestoredUser","isRevoked","User","showCustom","manageAllCollectionsCheckboxes","manageAssignedCollectionsCheckboxes","customUserTypeSelected","setRequestPermissions","clearPermissions","OrganizationUserUpdateGroupsRequest","groupIds","UserGroupsComponent","userGroups","ug","bulkConfirm","resetPassword","PeopleComponent","userType","accessEvents","canResetPassword","orgUseResetPassword","orgHasKeys","orgResetPasswordPolicyEnabled","callingUserType","combineLatest","viewEvents","allowResetPassword","orgUser","callingUserHasPermission","showEnrolledStatus","groupsModalRef","bulkRemove","bulkRemoveModalRef","bulkRevoke","bulkRevokeOrRestore","bulkRestore","bulkReinvite","showBulkStatus","bulkConfirmModalRef","eventsModalRef","resetPasswordModalRef","warningMessage","successfullMessage","childComponent","bulkStatusModalRef","onShown","keyedErrors","keyedFilteredUsers","PolicyRequest","BasePolicy","display","BasePolicyComponent","policyResponse","loadData","buildRequestData","policiesEnabledMap","PolicyEditComponent","cdr","onSavedPolicy","ngAfterViewInit","factory","resolveComponentFactory","policyComponent","policyFormRef","createComponent","detectChanges","Enabled","PoliciesComponent","policyListService","policyIdFromEvents","orgPolicy","orgPolicies","op","editModalRef","OrganizationUpdateRequest","ApiKeyComponent","postKey","PurgeVaultComponent","CountBasedLocalizationKey","singular","plural","OrganizationContentSummaryItem","localizationKeyOptions","localizationKey","OrganizationContentSummary","totalItemCount","itemCountByType","DeleteOrganizationComponent","deleteOrganizationRequestType","organizationContentSummary","buildOrganizationContentSummary","organizationItems","cipherType","getOrganizationItemCountByType","getOrganizationItemLocalizationKeysByType","viewApiKey","AccountComponent","canUseApi","taxFormPromise","deleteOrganization","deleteModalRef","purgeVault","purgeModalRef","apiKeyModalRef","grantType","apiKeyTitle","apiKeyWarning","apiKeyDescription","rotateApiKeyModalRef","isRotation","TransactionType","VerifyBankRequest","BitPayInvoiceRequest","AddCreditComponent","onAdded","ppLoading","payPalConfig","ppButtonFormAction","ppButtonBusinessId","creditAmount","ppButtonCustomField","subject","returnUrl","ppButtonFormRef","BitPay","credit","creditAmountNumber","bitPayUrl","formatAmount","floatAmount","parseFloat","toFixed","PaymentRequest","AdjustPaymentComponent","onAdjusted","taxInfoComponent","addCredit","closeAddCredit","changePayment","closePayment","OrganizationBillingComponent","firstLoaded","showAdjustPayment","showAddCredit","transactionType","billing","amount1","verifyAmount1","amount2","verifyAmount2","verifyBankPromise","paymentSourceInApp","isCreditBalance","creditOrBalance","AppleInApp","GoogleInApp","OrganizationApiKeyType","OrganizationConnectionType","BillingSyncConfigApi","billingSyncKey","BillingSyncConfigRequest","OrganizationConnectionRequest","BillingSyncKeyComponent","CloudBillingSync","existingConnectionId","setParentConnection","deleteConnection","OrganizationApiKeyRequest","Default","cancelRotate","rotateToken","BillingSyncApiKeyComponent","showRotateScreen","BillingSync","keyRevisionDate","hasBillingToken","syncStatus","dayDiff","date1","date2","diffTime","submitButtonText","showLastSyncText","showAwaitingSyncText","daysBetween","Icon","DynamicContentNotAllowedError","svgIcon","strings","SubscriptionHiddenIcon","BitIconComponent","domSanitizer","innerHtml","bypassSecurityTrustHtml","StorageRequest","AdjustStorageComponent","storageGbPrice","storageAdjustment","storageGbAdjustment","paymentFailed","relativeTo","adjustedStorageTotal","OrganizationSubscriptionUpdateRequest","seatAdjustment","AdjustSubscription","limitSubscription","newSeatCount","currentSeatCount","newMaxSeats","limitSubscriptionChanged","adjustedSeatTotal","maxSeatTotal","ChangePlanComponent","onChanged","defaultUpgradePlan","defaultUpgradeProduct","DownloadLicenseComponent","onDownloaded","licenseString","UpdateLicenseComponent","onUpdated","updatePromise","changePlan","closeChangePlan","subscriptionAdjusted","removeSponsorship","adjustStorage","closeStorage","downloadLicense","manageBillingSync","closeDownloadLicense","closeUpdateLicense","manageBillingSyncSelfHosted","OrganizationSubscriptionComponent","adjustSeatsAdd","showAdjustSeats","showAdjustSeatAutoscale","adjustStorageAdd","showAdjustStorage","showUpdateLicense","showBillingSyncKey","showDownloadLicense","showChangePlan","subscriptionHiddenIcon","userOrg","apiKeyResponse","hasBillingSyncToken","existingBillingSyncConnection","reinstatePromise","cancelPromise","changed","setupBillingSyncModalRef","onClosed","updated","removeSponsorshipPromise","billingSyncKeyRef","billingSyncKeyViewContainerRef","connection","isExpired","subscriptionMarkedForCancel","nextInvoice","storagePercentage","storageProgressWidth","billingInterval","canAdjustSeats","isSponsoredSubscription","canDownloadLicense","canManageBillingSync","EnterpriseMonthly","EnterpriseAnnually2019","EnterpriseMonthly2019","subscriptionDesc","FamiliesAnnually2019","showChangePlanButton","billingSyncSetUp","SettingsComponent","access2fa","showBilling","UpdateTwoFactorDuoRequest","TwoFactorProviderRequest","TwoFactorBaseComponent","twoFactorProviderType","auth","authResponse","hashedSecret","verificationType","enable","enableFunction","buildRequestModel","TwoFactorVerifyComponent","onAuthed","TwoFactorDuoComponent","processResponse","ikey","skey","UpdateTwoFactorAuthenticatorRequest","TwoFactorAuthenticatorComponent","qrScript","QRious","element","UpdateTwoFactorEmailRequest","TwoFactorEmailComponent","sentEmail","print","TwoFactorRecoveryComponent","w","write","onafterprint","formatString","UpdateTwoFactorWebAuthnDeleteRequest","UpdateTwoFactorWebAuthnRequest","readKey","TwoFactorWebAuthnComponent","keyIdAvailable","keysConfiguredCount","webAuthnResponse","removePromise","challengePromise","readDevice","webAuthnChallenge","resetWebAuthn","run","webAuthnListening","webAuthnError","listening","configured","UpdateTwoFactorYubioOtpRequest","TwoFactorYubiKeyComponent","disablePromise","existingKey","padRight","NotPremiumDirective","viewContainer","createEmbeddedView","premiumRequired","PremiumBadgeComponent","manage","showPolicyWarning","canAccessPremium","filterProvider","twoFactorAuthPolicyAppliesToActiveUser","evaluatePolicies","openModal","authenticatorModalRef","updateStatus","yubikeyModalRef","duoModalRef","emailModalRef","webAuthnModalRef","recoveryModalRef","TwoFactorSetupComponent","duoComp","auditService","passwordRepromptService","cloneMode","onSavedCipher","onDeletedCipher","onRestoredCipher","onCancelled","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","onGenerateUsername","showCardNumber","showCardCode","ownershipOptions","currentDate","allowPersonal","canUseReprompt","typeOptions","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","uriMatchOptions","autofillOnPageLoadOptions","personalOwnershipPolicyAppliesToActiveUser","myEmail","writeableCollections","loadCipher","organizationChanged","previousCipherId","encryptCipher","saveCipher","addUri","removeUri","getCardExpMonthDisplay","trackByFunction","share","editCollections","restorePromise","restoreCipher","toggleCardNumber","toggleCardCode","toggleUriOptions","loginUriMatchChanged","checkPassword","checkPasswordPromise","repromptChanged","addFieldType","linkedFieldOptions","fieldType","addFieldTypeOptions","addFieldLinkedTypeOption","changes","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","newField","removeField","toggleFieldValue","showValue","drop","previousIndex","currentIndex","linkedFieldOption","i18nKey","TrueFalseValueDirective","renderer","trueValue","falseValue","propagateChange","onHostChange","writeValue","setProperty","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","AddEditCustomFieldsComponent","upgradeOrganization","launch","viewHistory","toggleFavorite","totpService","showRevisionDate","hasPasswordHistory","viewingPasswordHistory","viewOnly","passwordRevisionDisplayDate","cleanUp","totpUpdateCode","totpTick","totpInterval","canLaunch","typeI18nKey","aType","showGetPremium","clearInterval","totpCode","half","totpCodeFormatted","allowOwnershipAssignment","intervalSeconds","totpSec","totpDash","totpLow","AddEditComponent","CipherReportComponent","requiresPaid","hasLoaded","setCiphers","selectCipher","repromptCipher","cipherAddEditModalRef","checkAccess","FallbackSrcDirective","onError","appFallbackSrc","cardIcons","Visa","Mastercard","Amex","Discover","JCB","Maestro","UnionPay","RuPay","Mir","IconComponent","image","fallbackImage","imageEnabled","setLoginIcon","setCardIcon","hostnameUri","isWebsite","exposedPasswordMap","allCiphers","getAllCiphers","exposedPasswordCiphers","exposedCount","canManageCipher","ExposedPasswordsReportComponent","manageableCiphers","services","cipherDocs","load2fa","inactive2faCiphers","docs","service","serviceData","documentation","additionalDomain","InactiveTwoFactorReportComponent","ciphersWithPasswords","passwordUseMap","reusedPasswordCiphers","ReusedPasswordsReportComponent","ToolsComponent","unsecuredCiphers","UnsecuredWebsitesReportComponent","passwordStrengthMap","passwordStrengthCache","weakPasswordCiphers","isUserNameNotEmpty","getCacheKey","hasUserName","scoreKey","WeakPasswordsReportComponent","PipesModule","VaultService","calculateSearchBarLocalizationString","vaultFilter","selectedFolderId","selectedCollection","selectedOrganizationId","myVaultOnly","VaultSharedModule","VaultFilter","selectedFolder","refreshCollectionsAndFolders","resetFilter","selectedCollectionId","resetOrganization","buildFilter","cipherPassesFilter","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","hasUpdatedKey","fileEl","saveCipherAttachment","cipherDomain","downloading","canAccessAttachments","reuploadCipherAttachment","foundAttachment","a2","reupload","showFixOldAttachments","AttachmentsComponent","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","searchPlaceholder","searchPending","searchTimeout","deletedFilter","applyFilter","reload","refresh","indexedCiphers","doSearch","rightClickCipher","addCipher","addCipherOptions","Search","EllipsisPipe","completeWords","ellipsis","OrganizationNameBadgeComponent","onOrganizationClicked","profileName","textColor","emitOnOrganizationClicked","GetOrgNameFromIdPipe","clone","checkCipher","showAddNew","onAttachmentsClicked","onShareClicked","onCollectionsClicked","onCloneClicked","onOrganzationBadgeClicked","pagedCiphers","userHasPremiumAccess","noItemIcon","pagedCiphersCount","refreshing","permanent","displayTotpCopyButton","getSelected","getSelectedIds","hasOldAttachments","CiphersComponent","onEventsClicked","allowSelectNone","onSavedCollections","loadCipherCollections","selectedCollectionIds","saveCollections","vaultFilterService","activeFilter","hideFolders","hideCollections","hideFavorites","hideTrash","hideOrganizations","onFilterChange","onAddFolder","onEditFolder","isLoaded","displayCollections","buildOrganizations","activePersonalOwnershipPolicy","checkForPersonalOwnershipPolicy","activeSingleOrganizationPolicy","checkForSingleOrganizationPolicy","buildNestedFolders","initCollections","buildCollections","toggleFilterNodeCollapseState","node","reloadCollectionsAndFolders","pruneInvalidatedFilterSelections","reloadOrganizations","addFolder","editFolder","pruneInvalidFolderSelection","pruneInvalidCollectionSelection","hasId","hide","onNodeCollapseStateChange","collectionsGrouping","collectionNodes","isCollapsed","toggleCollapse","CollectionFilterComponent","foldersGrouping","folderNodes","nestedFolders","FolderFilterComponent","cipherStatus","StatusFilterComponent","selectedCipherType","typesNode","cipherTypeEnum","TypeFilterComponent","organizationGrouping","displayMode","hasActiveFilter","applyOrganizationFilter","applyMyVaultFilter","clearFilter","EnrollMasterPasswordReset","toastStringRef","keyString","LinkSsoComponent","toggleResetPasswordEnrollment","unlinkSso","OrganizationOptionsComponent","allowEnrollmentChanges","OrganizationFilterComponent","displayText","searchTextChanged","onSearchTextChanged","VaultFilterComponent","BulkDeleteComponent","cipherIds","onDeleted","deleteCiphersAdmin","deleteCiphers","deleteRequest","BulkMoveComponent","onMoved","BulkRestoreComponent","onRestored","isChecked","BulkShareComponent","onShared","nonShareableCount","shareableCiphers","allCollections","filterCollections","checkedCollectionIds","bulkMove","bulkShare","BulkActionsComponent","bulkDelete","promptPassword","selectedIds","ciphersComponent","bulkDeleteModalRef","bulkRestoreModalRef","selectedCiphers","bulkShareModalRef","bulkMoveModalRef","BroadcasterSubscriptionId","VaultComponent","changeDetectorRef","vaultService","trashCleanupWarning","vaultFilterComponent","getCipherIdFromParams","editCipherId","queryParamsHandling","applyVaultFilter","go","filterSearchText","editCipherAttachments","madeAttachmentChanges","attachmentsModalRef","editCipherCollections","collectionsModalRef","editCipher","cloneCipher","replaceUrl","routes","VaultRoutingModule","VaultModule","children","pathMatch","redirectTo","loadChildren","m","OrganizationImportExportModule","OrganizationsRoutingModule","PlanSponsorshipType","AcceptFamilySponsorshipComponent","register","OrganizationSponsorshipRedeemRequest","FamiliesForEnterpriseSetupComponent","badToken","showNewOrganization","_selectedFamilyOrganizationId","organizationPlansComponent","onOrganizationCreateSuccess","existingFamilyOrganizations$","selectedFamilyOrganizationId","planSponsorshipType","FamiliesForEnterprise","sponsoredOrganizationId","HasPremiumGuard","userHasPremium","ReportVariant","BreachReportComponent","checkedUsername","ReportBreach","ReportExposedPasswords","ReportInactiveTwoFactor","ReportReusedPasswords","ReportUnsecuredWebsites","ReportWeakPasswords","ReportType","reports","ExposedPasswords","ReusedPasswords","WeakPasswords","UnsecuredWebsites","Inactive2fa","DataBreach","ReportCardComponent","variant","requiresPremium","RequiresPremium","ReportListComponent","ReportsHomeComponent","reportRequiresPremium","ReportsLayoutComponent","ReportsRoutingModule","ReportsModule","SendAccessView","SendAccess","SendAccessRequest","toggleText","copyText","AccessComponent","sendType","passwordRequired","unavailable","sendText","downloadData","accessRequest","keyArray","sendAccess","disableSend","filteredSends","hasSearched","onSuccessfulLoad","applyTextSearch","removePassword","onSuccessfulRemovePassword","onSuccessfulDelete","link","clearSelections","selectedAll","selectType","selectedType","BrowserPath","DateField","DatePreset","datePipe","onSavedSend","onDeletedSend","copyLink","disableHideEmail","alertShown","sendLinkBaseUrl","isDateTimeLocalSupported","setDates","loadSend","hasPassword","encryptSend","encSend","uploadPromise","copySuccess","copyLinkToClipboard","typeChanged","toggleOptions","togglePasswordVisible","datesChanged","datesForm","selectedDeletionDatePreset","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","expirationDatePresets","Never","browserPath","Firefox","Safari","formattedDeletionDate","miliseconds","formattedExpirationDate","safariDeletionTimePresetOptions","safariTimePresetOptions","DeletionDate","safariExpirationTimePresetOptions","ExpriationDate","nextWeek","setInitialFormValues","emitDates","valueChanges","onDeletionDatePresetSelect","clearExpiration","initialDeletionDate","toTimeString","initialExpirationDate","twentyFourHour","noon","midnight","ams","pms","hour","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","EffluxDatesComponent","editSend","addSend","SendComponent","sendAddEditModalRef","DeauthorizeSessionsComponent","DeleteAccountComponent","accountApiService","deleteForm","EmailTokenRequest","EmailRequest","reset","ChangeEmailComponent","tokenSent","showTwoFactorEmailWarning","newEmail","UpdateProfileRequest","ProfileComponent","showChangeEmail","deauthorizeSessions","deauthModalRef","CreateOrganizationComponent","orgPlansComponent","UpdateDomainsRequest","toggleExcluded","customize","DomainRulesComponent","custom","globalDomain","excludedGlobalEquivalentDomains","d2","indexTrackBy","EmergencyAccessAttachmentsComponent","EmergencyAddEditComponent","viewAttachments","EmergencyAccessViewComponent","oldKeyBuffer","oldEncKey","cipherData","EmergencyAccessStatusType","EmergencyAccessType","EmergencyAccessConfirmRequest","EmergencyAccessInviteRequest","EmergencyAccessUpdateRequest","EmergencyAccessAddEditComponent","onSaved","View","emergencyAccessType","waitTimes","emergencyAccess","waitTime","EmergencyAccessConfirmComponent","onConfirmed","EmergencyAccessPasswordRequest","EmergencyAccessTakeoverComponent","onDone","takeoverResponse","approve","requestAccess","takeover","EmergencyAccessComponent","emergencyAccessStatusType","isOrganizationOwner","trustedContacts","grantedContacts","contact","doConfirmation","removeGrantee","removeGrantor","RecoveryInitiated","RecoveryApproved","takeoverModalRef","hours","CUSTOM_VALUE","exceedsMinimumTimout","customTimeInMinutes","MIN_CUSTOM_MINUTES","combineLatestWith","vaultTimeoutPolicy","applyVaultTimeoutPolicy","onChange","current","vaultTimeouts","onTouched","validate","policyError","minTimeoutError","registerOnValidatorChange","validatorChange","vaultTimeoutPolicyHours","vaultTimeoutPolicyMinutes","VaultTimeoutInputComponent","PreferencesComponent","localeOptions","themeOptions","enableFavicons","startingLocale","startingTheme","vaultTimeoutActionChanged","newValue","FolderWithIdRequest","SendWithIdRequest","UpdateKeyRequest","ChangePasswordComponent","rotateEncKey","rotateEncKeyClicked","updateKey","updateEmergencyAccesses","updateAllResetPasswordKeys","allowedStatuses","filteredAccesses","updateRequest","KdfRequest","ChangeKdfComponent","kdfOptions","recommendedKdfIterations","SecurityKeysComponent","showChangeKdf","viewUserApiKey","viewUserApiKeyModalRef","rotateUserApiKey","rotateUserApiKeyModalRef","SecurityComponent","showChangePassword","SecurityRoutingModule","hasFamilySponsorshipAvailable","hasPremiumFromOrg","hideSubscription","notAllowedValueAsync","valueGetter","caseInsensitive","notAllowedValue","controlValue","resendEmail","SponsoringOrgRowComponent","sponsoringOrg","isSelfHosted","sponsorshipRemoved","statusMessage","statusClass","setStatus","revokeSponsorship","revokeSponsorshipPromise","doRevokeSponsorship","resendEmailPromise","isSentAwaitingSync","toDelete","validUntil","forceReload","SponsoredFamiliesComponent","sponsorshipForm","selectedSponsorshipOrgId","validators","sponsorshipEmail","asyncValidators","updateOn","availableSponsorshipOrgs$","anyOrgsAvailable$","activeSponsorshipOrgs$","anyActiveSponsorships$","sponsoredEmail","friendlyName","resetForm","sponsorshipEmailControl","PaymentMethodComponent","PremiumComponent","premiumPrice","finalizePremium","paymentResponse","SubscriptionComponent","hasPremium","subscriptionRoute","UserBillingHistoryComponent","UserSubscriptionComponent","SubscriptionRoutingModule","usernameGenerationService","comingFromAddEdit","onSelected","usernameOptions","avoidAmbiguous","usernameWebsite","passTypeOptions","usernameTypeOptions","desc","subaddressOptions","catchallOptions","forwardOptions","passwordOptionsResponse","websiteOption","regenerateWithoutButtonPress","regenerate","regeneratePassword","regenerateUsername","sliderChanged","savePasswordOptions","sliderInput","normalizePasswordOptions","saveUsernameOptions","usernameGeneratingPromise","copyOptions","SelectCopyDirective","onCopy","selection","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","ColorPasswordPipe","generateTemplate","templateGenerator","passwordArray","colorizedPassword","isSpecial","PasswordGeneratorHistoryComponent","lengthChanged","minNumberChanged","minSpecialChanged","GeneratorComponent","findIndex","historyModalRef","UpdateKeyComponent","makeRequest","onSavedFolder","onDeletedFolder","FolderAddEditComponent","onSharedCipher","cipherView","ShareComponent","VerifyEmailComponent","onVerified","verifyEmail","showVerifyEmail","showBrowserOutdated","showUpdateKey","showPremiumCallout","filterComponent","isShowingCards","verified","shareCipher","shareModalRef","folderAddEditModalRef","updateKeyModalRef","favorites","flagName","ImportExportModule","OssRoutingModule","useHash","paramsInheritanceStrategy","LoginModule","VerticalStepperModule","TrialInitiationModule","OrganizationManageModule","OrganizationUserModule","OssModule","WildcardRoutingModule","ProviderAddOrganizationRequest","WebProviderService","addOrganizationToProvider","encryptedOrgKey","detachOrganizastion","AddOrganizationComponent","webProviderService","onAddedOrganization","ProviderPermissionsGuard","providerPermissions","ProvidersComponent","addExistingOrganization","DisallowedPlanTypes","ClientsComponent","manageOrganizations","showAddExisting","pagedClientsCount","clients","candidateOrgs","allowedOrgsIds","addableOrganizations","pagedClients","addModalRef","ProviderUserAcceptRequest","AcceptProviderComponent","providerUsersUserIdMap","providerUsersIdMap","ProviderUserBulkRequest","ProviderUserConfirmRequest","ProviderUserBulkConfirmRequest","BulkConfirmComponent","BulkRemoveComponent","ProviderUserInviteRequest","ProviderUserUpdateRequest","ServiceUser","ProvidersLayoutComponent","showMenuBar","showManageTab","showSettingsTab","manageRoute","ProviderUpdateRequest","SetupProviderComponent","ProviderSetupRequest","SetupComponent","ProvidersRoutingModule","ProvidersModule","registerComponentFactoryResolver","SecretsManagerModule","AppRoutingModule","DisableSendPolicy","DisableSendPolicyComponent","MasterPasswordPolicy","MasterPasswordPolicyComponent","showKeyConnectorInfo","passwordScores","PasswordGeneratorPolicy","PasswordGeneratorPolicyComponent","defaultTypes","PersonalOwnershipPolicy","PersonalOwnershipPolicyComponent","RequireSsoPolicy","RequireSsoPolicyComponent","singleOrgEnabled","ResetPasswordPolicy","ResetPasswordPolicyComponent","SendOptionsPolicy","SendOptionsPolicyComponent","SingleOrgPolicy","SingleOrgPolicyComponent","TwoFactorAuthenticationPolicy","TwoFactorAuthenticationPolicyComponent","toastrService","lastActivity","idleTimer","isIdle","lang","runOutsideAngular","onmousemove","recordActivity","onmousedown","ontouchstart","onclick","onscroll","onkeypress","setFullWidth","idleStateChanged","sanitize","enableHtml","trustedHtml","timeOut","DisablePersonalVaultExportPolicy","DisablePersonalVaultExportPolicyComponent","MaximumVaultTimeoutPolicy","MaximumVaultTimeoutPolicyComponent","AppComponent","ScimConfigApi","scimProvider","ScimConfigRequest","copyScimUrl","toggleScimKey","rotateScimKey","copyScimKey","ScimComponent","showScimSettings","showScimKey","formData","endpointUrl","Scim","setConnectionFormValues","loadApiKey","apiKeyRequest","getScimEndpointUrl","rotatePromise","dirtyRequired","dirty","OrganizationSsoRequest","SsoConfigView","A11yInvalidDirective","formControlDirective","statusChanges","InputStripSpacesDirective","onInput","BaseCvaComponent","controlDir","internalControl","onValueChangesInternal","valueAccessor","describedById","showDescribedBy","controlId","helperText","isRequired","hasValidator","onBlurInternal","InputCheckboxComponent","InputTextComponent","stripSpaces","transformValue","emitEvent","doStripSpaces","onValueChangeInternal","InputTextReadOnlyComponent","showCopy","showLaunch","SelectComponent","validateKeyConnectorUrl","toggleOpenIdCustomizations","defaultSigningAlgorithm","ssoType","ssoTypeOptions","None","samlSigningAlgorithms","saml2SigningBehaviourOptions","IfIdpWantAuthnRequestsSigned","Always","saml2BindingTypeOptions","HttpRedirect","HttpPost","saml2NameIdFormatOptions","NotConfigured","Unspecified","EmailAddress","X509SubjectName","WindowsDomainQualifiedName","KerberosPrincipalName","EntityIdentifier","Persistent","Transient","connectRedirectOptions","RedirectGet","FormPost","showOpenIdCustomizations","haveTestedKeyConnector","openIdForm","samlForm","ssoConfigForm","newType","ssoSettings","populateForm","validateForm","readOutErrors","fromView","markAsPending","invalidUrl","enableTestKeyConnector","samlSigningAlgorithmOptions","markAsDirty","markAsTouched","ssoConfigView","errorCountText","div","innerText","existing","OrganizationsModule","AppModule","bootstrapModule","preserveWhitespaces","calloutStyle","enforcedPolicyMessage","getPasswordScoreAlertDisplay","ModalRef","_onCreated","_onClose","_onClosed","_onShow","_onShown","onShow","lastResult","toPromise","UserVerificationComponent","disableRequestOTP","sentCode","processChanges","opacity","A11yTitleDirective","appA11yTitle","hasAttribute","ApiActionDirective","appApiAction","AutofocusDirective","appAutofocus","condition","autofocus","InputVerbatimDirective","appInputVerbatim","disableComplete","StopClickDirective","preventDefault","BitwardenToast","toastPackage","BitwardenToastGlobalConfig","toastComponent","BitwardenToastModule","ngModule","numberFormats","cardLength","blocks","Other","CreditCardNumberPipe","creditCardNumber","rules","matchingRule","chunks","JslibModule","forRoot","maxOpened","autoDismiss","closeButton","I18nPipe","SearchPipe","prop1","prop2","prop3","UserNamePipe","DynamicModalComponent","cd","focusTrapFactory","loadChildComponent","childComponentType","setComponentParameters","componentRef","focusTrap","focusFirstTabbableElementWhenReady","componentType","componentFactory","modalContentRef","destroy","getFocus","autoFocusEl","ModalInjector","_parentInjector","_additionalTokens","notFoundValue","ModalConfig","modalList","factoryResolvers","modalCount","topModal","modalComponentRef","openInternal","insert","hostView","replaceTopModal","closeAll","attachToDom","createModalComponent","attachView","domElem","rootNodes","detachView","modalEl","dialogEl","zIndex","prepend","closeElement","WeakMap","DynamicTreeNode","transformation","storedFolders","orgCiphers","oc","getAllFoldersNested","storedCollections","folderCopy","getFolderNested","ApiService","CollectionService","EventService","ExportService","FileDownloadService","FolderService","InternalFolderService","I18nService","KeyConnectorService","LogService","canAccessToolsTab","canAccessSettingsTab","canAccessManageTab","canAccessOrgAdmin","getOrganizationById","canAccessAdmin","OrganizationService","PlatformUtilsService","PolicyService","InternalPolicyService","UserVerificationService","ValidationService","CipherRepromptType","CipherType","EncryptionType","EventType","FieldType","KdfType","DEFAULT_KDF_TYPE","PBKDF2_SHA256","DEFAULT_KDF_ITERATIONS","SEND_KDF_ITERATIONS","LoginLinkedId","CardLinkedId","IdentityLinkedId","LogLevelType","PolicyType","SecureNoteType","UriMatchType","VerificationType","LinkedMetadata","_i18nKey","TreeNode","ServiceUtils","nodeTree","partIndex","delimiter","partName","nestedTraverse","newPartName","getTreeNodeObject","nodeURL","Utils","isNode","process","release","isBrowser","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","binaryString","atob","charCodeAt","fromB64ToArray","fromUrlB64ToB64","strUtf8","fromB64toUrlB64","fromBufferToB64","b64Str","encodedString","decodeURIComponent","escape","urlB64Str","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","uriString","isNullOrWhitespace","validHosts","getUrl","parseResult","isIp","source","getUrlObject","bgColor","threshold","svgTextFill","bgColorHexNums","mobile","vendor","opera","hasProtocol","anchor","regexpEmojiPresentation","CardApi","FieldApi","IdentityApi","LoginUriApi","LoginApi","SecureNoteApi","AttachmentData","CardData","CipherData","CollectionData","FieldData","IdentityData","LoginUriData","LoginData","PasswordHistoryData","SecureNoteData","Attachment","decryptAttachmentKey","getKeyForDecryption","toAttachmentData","buildDataModel","toCardData","Cipher","decAttachment","decField","decPh","toLoginData","toSecureNoteData","toIdentityData","toFieldData","toPasswordHistoryData","Collection","Domain","dataObj","notEncList","objProp","notEncStringList","viewModel","mapProp","EncString","encryptedStringOrType","initFromData","initFromEncryptedString","parseEncryptedString","decryptedValue","Field","Folder","Identity","LoginUri","toLoginUriData","Login","MasterPasswordPolicyOptions","Password","SecureNote","SymmetricCryptoKey","CardExport","FieldExport","IdentityExport","LoginUriExport","LoginExport","toView","toDomain","SecureNoteExport","CipherExport","CipherWithIdExport","CollectionExport","CollectionWithIdExport","FolderExport","FolderWithIdExport","AttachmentRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","CollectionRequest","FolderRequest","BaseResponse","propertyName","exactName","otherCasePropertyName","ErrorResponse","identityResponse","errorModel","responseErrorModel","messages","lastSep","AttachmentView","CardView","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","formatYear","CipherView","linkedFieldValue","linkedFieldI18nKey","CollectionView","FieldView","showCount","maskedValue","FolderView","IdentityView","_firstName","_lastName","fullName","fullAddress","fullAddressPart2","addressPart2","ItemView","CanLaunchWhitelist","LoginUriView","_uri","_domain","_hostname","_host","_canLaunch","hostnameOrUri","hostOrUri","LoginView","maskedPassword","PasswordHistoryView","SecureNoteView","ConsoleLogService","timersMap","level","InitializerKey","BadgeModule","buttonStyles","ButtonComponent","buttonType","block","disabledAttr","BitFormFieldControl","nextId","BitErrorComponent","displayError","requiredLength","BitFormFieldComponent","ngAfterContentChecked","ariaDescribedBy","InputModule","MultiSelectModule","FormFieldModule","BitHintComponent","BitLabel","PrefixClasses","BitPrefixDirective","BitSuffixDirective","BitInputDirective","ngControl","hasPrefix","hasSuffix","labelForId","ariaInvalid","_required","touched","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","O","chunkIds","notFulfilled","Infinity","fulfilled","getter","__esModule","definition","defineProperty","enumerable","chunkId","miniCssF","globalThis","Function","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","nc","onScriptComplete","prev","doneFns","parentNode","Symbol","toStringTag","nmd","paths","scriptUrl","importScripts","currentScript","baseURI","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}