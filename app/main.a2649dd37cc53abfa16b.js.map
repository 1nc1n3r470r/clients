{"version":3,"file":"app/main.a2649dd37cc53abfa16b.js","mappings":"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lL,W,MACsB,QAApB,EAAAC,KAAK0+K,uBAAe,SAAE2D,cAAc,WACtC,E,iCAfWuD,GAAkB,e,mBAAlBA,EAAkB,2E,uICzBxB,MAAMC,EACXzmL,YAAgCs/K,GAAA,KAAAA,gBAAAA,CAAyC,CAEtC1oK,gBACjC,OAAO,YAAqB,CAC1B,gBACA,oBAEA,4BACA,+BACCrS,OAA+BkP,MAAxB7S,KAAK0+K,gBAA+B,KAAsB,KACtE,CAEA3+K,W,MACsB,QAApB,EAAAC,KAAK0+K,uBAAe,SAAE2D,cAAc,WACtC,E,iCAfWwD,GAAkB,e,mBAAlBA,EAAkB,2E,yNCHzB9D,EAAY,CAMhB,cACA,yBACA,kBACA,qBACA,yBACA,uBACA,uBACA,iBACA,6BACA,yBAGIT,EAA2C,CAC/CwE,SAAU,CACR,oBACA,oBACA,wBACA,gCACA,gCACA,6CACA,yBACA,uCACA,sCACG/D,GAELgE,KAAM,CACJ,oBACA,gBACA,wBACA,gCACA,4BACA,yCACA,yBACA,uCACA,sCACGhE,GAELiE,MAAO,CACL,oBACA,iBACA,wBACA,gCACA,8BACA,2CACA,yBACA,uCACA,sCACGjE,GAELR,QAAS,CACP,oBACA,oBACA,wBACA,0BACA,8BACA,2CACA,yBACA,uCACA,sCACGQ,GAELP,UAAW,CACT,oBACA,iBACA,uBACA,0BACA,yBACA,2CACA,yBACA,sCACA,mCACA,gCACA,yCACGO,GAELN,OAAQ,CACN,oBACA,kBACA,uBACA,0BACA,yBACA,2CACA,yBACA,sCACA,mCACA,iCACA,yCACGM,GAELkE,MAAO,CACL,oBACA,gBACA,wBACA,gCACA,4BACA,yCACA,uCACA,sCACGlE,GAELE,SAAU,IAKNiE,EAA0C,CAC9CnvB,QAAS,CAAC,YAAa,aACvB2oB,MAAO,CAAC,kBAAmB,eAAgB,WAQtC,MAAMyG,EALb,cAUW,KAAA7uI,KAAuB,UA0BvB,KAAA53C,SAAU,EACV,KAAA0uB,UAAW,C,CAzBMpY,gB,MACxB,MAAO,CACL,mBACA,YACA,kBACA,aACA,gBACA,wBACA,yBAECrS,OAAO29K,EAAsB,QAAf,EAA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","sources":["webpack://@bitwarden/web-vault/webpack/runtime/chunk loaded","webpack://@bitwarden/web-vault/webpack/runtime/load script","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.module.ts","webpack://@bitwarden/web-vault/./src/app/common/base.accept.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/event.view.ts","webpack://@bitwarden/web-vault/./src/app/common/base.events.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/user-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/common/base.people.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/not-premium.directive.ts","webpack://@bitwarden/web-vault/./src/app/components/premium-badge.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/user-verification.component.ts","webpack://@bitwarden/web-vault/./src/app/components/user-verification.component.html","webpack://@bitwarden/web-vault/./src/app/components/user-verification.component.ts","webpack://@bitwarden/web-vault/./src/app/core/event.service.ts","webpack://@bitwarden/web-vault/./src/app/core/policy-list.service.ts","webpack://@bitwarden/web-vault/./src/app/core/router.service.ts","webpack://@bitwarden/web-vault/./src/app/core/state/account.ts","webpack://@bitwarden/web-vault/./src/app/core/state/state.service.ts","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/product-switcher/product-switcher-content.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/product-switcher/product-switcher-content.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/product-switcher/product-switcher.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/product-switcher/product-switcher.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/product-switcher/product-switcher.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/core-organization.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-update.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-invite.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/views/organization-user-admin-view.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/services/user-admin.service.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/services/collection-admin.service.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/services/group/requests/group.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/services/group/requests/organization-group-bulk.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/services/group/group.service.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/services/group/responses/group.response.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/views/collection-access-selection.view.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/views/collection-admin.view.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/views/group.view.ts","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-create.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-information.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-information.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/guards/org-permissions.guard.ts","webpack://@bitwarden/web-vault/./src/app/organizations/guards/org-redirect.guard.ts","webpack://@bitwarden/web-vault/./src/app/components/organization-switcher.component.html","webpack://@bitwarden/web-vault/./src/app/components/organization-switcher.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/layouts/organization-layout.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/layouts/organization-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/org-upgrade-dialog/org-upgrade-dialog.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/org-upgrade-dialog/org-upgrade-dialog.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-bulk-confirm.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/members/components/bulk/bulk-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/members/components/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/members/components/bulk/bulk-remove.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/members/components/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/members/components/bulk/bulk-status.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/members/components/bulk/bulk-status.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/policy.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/base-policy.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policies.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policy-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policy-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policies.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policies.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-update.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-settings-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-settings.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/utils/form-selection-list.ts","webpack://@bitwarden/web-vault/../../libs/components/src/multi-select/multi-select.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/multi-select/multi-select.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/components/access-selector/user-type.pipe.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/components/access-selector/access-selector.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/shared/components/access-selector/access-selector.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/components/access-selector/access-selector.models.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/components/access-selector/access-selector.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/components/collection-dialog/collection-dialog.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/components/collection-dialog/collection-dialog.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/bit-validators/forbidden-characters.validator.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/components/collection-dialog/collection-dialog.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/shared-organization.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergency-access-accept.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/accept-emergency.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-accept.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/accept-organization.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/password-hint.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/hint.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/hint.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/lock.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/lock.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/misc/captcha_iframe.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/iframe_component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authRequestType.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/captchaProtected.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/log-in-credentials.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/passwordless-create-auth.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login/login-with-device.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/login/login-with-device.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/login.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login/login.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/login/login.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/delete-recover.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-delete.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/two-factor-recovery.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/recover-two-factor.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/remove-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/remove-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-reset-password-enrollment.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/set-password.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/change-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/set-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/set-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/sso.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/sso.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/reference-event.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/register.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/inputsFieldMatch.validator.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/register.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/register-form/register-form.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-forbes.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-forbes.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-us-news.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-us-news.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/confirmation-details.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/confirmation-details.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/billing.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/billing.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/default-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/default-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise1-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise1-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise2-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise2-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams1-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams1-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams2-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams2-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-cnet.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-cnet.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-individual-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-individual-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/webauthn_iframe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/two-factor.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/two-factor.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/password.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/update-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-temp-password.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/update-temp-password.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/update-temp-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verify-email.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-email-token.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verify-delete-recover.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/verify-recover-delete.component.html","webpack://@bitwarden/web-vault/./src/app/guards/home.guard.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/pipes/pipes.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/collection-badge/collection-badge.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/group-badge/group-badge.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-filter/vault-filter.service.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-filter/vault-filter.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/models/vault-filter.model.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.html","webpack://@bitwarden/web-vault/./src/app/vault/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/attachments.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.html","webpack://@bitwarden/web-vault/./src/app/vault/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/enroll-master-password-reset.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/enroll-master-password-reset.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/components/vault-filter-section.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/components/vault-filter-section.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/components/link-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/components/link-sso.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/components/organization-options.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/components/organization-options.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/components/vault-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/components/vault-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-filter/vault-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/collection-bulk-delete.request.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-action-dialogs/bulk-delete-dialog/bulk-delete-dialog.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-action-dialogs/bulk-delete-dialog/bulk-delete-dialog.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/vault-items.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-action-dialogs/bulk-move-dialog/bulk-move-dialog.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-action-dialogs/bulk-move-dialog/bulk-move-dialog.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-action-dialogs/bulk-restore-dialog/bulk-restore-dialog.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/types/checkable.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-action-dialogs/bulk-restore-dialog/bulk-restore-dialog.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-action-dialogs/bulk-share-dialog/bulk-share-dialog.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/bulk-action-dialogs/bulk-share-dialog/bulk-share-dialog.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/ellipsis.pipe.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-name-badge.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-name-badge.component.html","webpack://@bitwarden/web-vault/./src/app/vault/pipes/get-group-name.pipe.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/group-badge/group-name-badge.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/group-badge/group-name-badge.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/pipes/get-collection-name.pipe.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/collection-badge/collection-name-badge.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/collection-badge/collection-name.badge.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/pipes/get-organization-name.pipe.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-items.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault-items.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-items.component.ts","webpack://@bitwarden/web-vault/./src/app/shared/components/breadcrumbs/breadcrumb.component.html","webpack://@bitwarden/web-vault/./src/app/shared/components/breadcrumbs/breadcrumb.component.ts","webpack://@bitwarden/web-vault/./src/app/shared/components/breadcrumbs/breadcrumbs.component.html","webpack://@bitwarden/web-vault/./src/app/shared/components/breadcrumbs/breadcrumbs.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/vault.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/organization-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/organization.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/planSponsorshipType.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/accept-family-sponsorship.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/accept-family-sponsorship.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization/organization-sponsorship-redeem.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/send-access.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send-access.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/send-access.request.ts","webpack://@bitwarden/web-vault/./src/app/send/access.component.html","webpack://@bitwarden/web-vault/./src/app/send/access.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/send.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.html","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/send.component.html","webpack://@bitwarden/web-vault/./src/app/send/send.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/deauthorize-sessions.component.html","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/email-token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/email.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-profile.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.html","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-domains.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.html","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-view.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/emergencyAccessStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/emergencyAccessType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergency-access-confirm.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergency-access-invite.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergency-access-update.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-confirm.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/emergency-access-password.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access-takeover.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.html","webpack://@bitwarden/web-vault/./src/app/settings/emergency-access.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.html","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/preferences.component.html","webpack://@bitwarden/web-vault/./src/app/settings/preferences.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/folder-with-id.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/send-with-id.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-key.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/kdf.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security-keys.component.html","webpack://@bitwarden/web-vault/./src/app/settings/security-keys.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security.component.html","webpack://@bitwarden/web-vault/./src/app/settings/security.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/notAllowedValueAsync.validator.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/billing-history-view.component.html","webpack://@bitwarden/web-vault/./src/app/settings/billing-history-view.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.html","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/subscription-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/generator.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/password-generator-history.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/select-copy.directive.ts","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.html","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.html","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.html","webpack://@bitwarden/web-vault/./src/app/vault/bulk-action-dialogs/bulk-dialogs.module.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/vault/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/share.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/verify-email.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault.module.ts","webpack://@bitwarden/web-vault/./src/app/oss-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/shared/guards/has-premium.guard.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/breach-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/breach-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-breach.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-exposed-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-inactive-two-factor.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-reused-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-unsecured-websites.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-weak-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports.ts","webpack://@bitwarden/web-vault/./src/app/reports/shared/reports-shared.module.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reports-home.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reports-home.component.html","webpack://@bitwarden/web-vault/./src/app/reports/reports-layout.component.html","webpack://@bitwarden/web-vault/./src/app/reports/reports-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports.module.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/cipher-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/exposed-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/inactive-two-factor-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reused-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/unsecured-websites-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/weak-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/shared/models/report-variant.ts","webpack://@bitwarden/web-vault/./src/app/reports/shared/report-card/report-card.component.html","webpack://@bitwarden/web-vault/./src/app/reports/shared/report-card/report-card.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/shared/report-list/report-list.component.html","webpack://@bitwarden/web-vault/./src/app/reports/shared/report-list/report-list.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/storage.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.html","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.html","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/transactionType.ts","webpack://@bitwarden/web-vault/./src/app/settings/billing-history.component.html","webpack://@bitwarden/web-vault/./src/app/settings/billing-history.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-create.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-upgrade.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-organization-create.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.html","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verify-bank.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/bit-pay-invoice.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/payment.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment-method.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment-method.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.html","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.html","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/two-factor-provider.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-base.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-duo.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-duo.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-authenticator.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-authenticator.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-email.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-email.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-recovery.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-web-authn-delete.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-web-authn.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-webauthn.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-two-factor-yubio-otp.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.html","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-yubikey.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/two-factor-verify.component.html","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.html","webpack://@bitwarden/web-vault/./src/app/shared/loose-components.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/async-actions/async-actions.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/avatar/avatar.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge-list/badge-list.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/checkbox/checkbox.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon-button/icon-button.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/dialog.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/link/link.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/navigation/navigation.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/table/table.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tabs.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/toggle-group/toggle-group.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/color-password/color-password.module.ts","webpack://@bitwarden/web-vault/./src/app/shared/components/breadcrumbs/breadcrumbs.module.ts","webpack://@bitwarden/web-vault/./src/app/shared/locales.ts","webpack://@bitwarden/web-vault/./src/app/shared/shared.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/true-false-value.directive.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.html","webpack://@bitwarden/web-vault/./src/app/vault/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/organization-badge/organization-badge.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/services/abstractions/vault-filter.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/services/vault-filter.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/shared/vault-filter-shared.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/vault-filter/vault-filter.module.ts","webpack://@bitwarden/web-vault/./src/utils/flags.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/account/account.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/config-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/event/event-upload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/notifications.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/settings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/sync/syncNotifier.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/userVerification/userVerification-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/accountFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/globalStateFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/stateFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/stateVersion.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/global-state.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/notificationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/notification.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/anonymousHub.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/device.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identity-token/token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identity-token/user-api-token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/api-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/attachment-upload-data.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/auth-request.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/authentication/register.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billing.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billing-history.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billing-payment.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/breach-account.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/collection.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/device-verification.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/global-domain.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/domains.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/event.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identity-captcha.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identity-token.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/identity-two-factor.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/key-connector-user-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-connection.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-export.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-sponsorship-sync-status.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profile-organization.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profile-provider-organization.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profile-provider.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profile.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/payment.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/plan.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/prelogin.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider-organization.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/responses/organization-user-bulk-public-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider-user-bulk-public-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider-user-bulk.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider-user.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/send-access.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/send-file-download-data.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/send.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/send-file-upload-data.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sso-pre-validate.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/subscription.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/folder.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/sync.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/tax-info.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/tax-rate.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-authenticator.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-duo.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-email.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-provider.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-recover.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-web-authn.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/two-factor-yubi-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/user-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/audit.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/throttle.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identity-token/password-token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/auth-result.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/logIn.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/passwordLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/passwordlessLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identity-token/sso-token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/ssoLogin.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/logInStrategies/user-api-login.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/prelogin.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/sequentialize.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/sorted-ciphers-cache.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-bulk-move.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-bulk-restore.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-bulk-share.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-partial.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-share.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cipher.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/server-config.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/server-config.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/wordlist.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encrypted-organization-key.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/crypto.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encrypted-object.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/encrypt.service.implementation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/get-class-initializer.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/multithread-encrypt.service.implementation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/event.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/event.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/fileUploadType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/azureFileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/bitwardenFileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/account/set-key-connector-key.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/key-connector-user-key.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/login.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/responses/organization-user.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/responses/organization-user-bulk.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization-user/requests/organization-user-bulk.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/ssoEnums.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-api-key-information.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-auto-enroll-status.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/keys.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-keys.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-subscription.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/sso-config.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization/organization-sso.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/password-generator-policy-options.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/reset-password-policy-options.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/providerUserStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/providerUserType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/provider.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/search.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/token.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/stateMigration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/organization.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/sync/sync.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/totp.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/account/verify-otp.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/email-forwarders/anon-addy-forwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/email-forwarders/duck-duck-go-forwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/email-forwarders/fastmail-forwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/email-forwarders/firefox-relay-forwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/email-forwarders/forwarder-options.ts","webpack://@bitwarden/web-vault/../../libs/common/src/email-forwarders/simple-login-forwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/usernameGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/decrypt-parameters.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/themeBuilder.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/theming.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/jslib-services.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/appId.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/auth.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/folder/folder.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/folder/folder-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/account/account-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/account/account.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/environment.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/fileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/settings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/vaultTimeout/vaultTimeoutSettings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/vaultTimeout/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/export.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/notifications.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/webCryptoFunction.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/event/event-upload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/event/event-collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/policy/policy.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/policy/policy-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/send.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/keyConnector.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/userVerification/userVerification.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization/organization.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization-user/organization-user.service.implementation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/provider.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/formValidationErrors.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/userVerification/userVerification-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization/organization-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/sync/syncNotifier.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/config.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/config/config.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/config/config-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/validation.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/memoryStorage.service.ts","webpack://@bitwarden/web-vault/./src/app/core/broadcaster-messaging.service.ts","webpack://@bitwarden/web-vault/./src/app/core/html-storage.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/container.service.ts","webpack://@bitwarden/web-vault/./src/app/core/init.service.ts","webpack://@bitwarden/web-vault/./src/app/core/modal.service.ts","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/./src/app/components/password-reprompt.component.html","webpack://@bitwarden/web-vault/./src/app/core/password-reprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileDownload/fileDownloadBuilder.ts","webpack://@bitwarden/web-vault/./src/app/core/web-file-download.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/clientType.ts","webpack://@bitwarden/web-vault/./src/app/core/web-platform-utils.service.ts","webpack://@bitwarden/web-vault/./src/app/core/core.module.ts","webpack://@bitwarden/web-vault/./src/app/core/state/global-state.ts","webpack://@bitwarden/web-vault/./src/app/core/i18n.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/i18n.service.ts","webpack://@bitwarden/web-vault/./src/app/core/state-migration.service.ts","webpack://@bitwarden/web-vault/./src/app/accounts/login/login.module.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.module.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/organization-manage.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/organization-user.module.ts","webpack://@bitwarden/web-vault/./src/app/oss.module.ts","webpack://@bitwarden/web-vault/./src/app/wildcard-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-add-organization.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/services/webProvider.service.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/add-organization.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/add-organization.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/guards/provider-permissions.guard.ts","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.html","webpack://@bitwarden/web-vault/./src/app/providers/providers.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/clients.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/clients.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/create-organization.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/clients/create-organization.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-accept.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/accept-provider.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/accept-provider.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/events.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/events.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/manage.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/manage.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-bulk.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-confirm.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-bulk-confirm.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/bulk/bulk-confirm.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/bulk/bulk-remove.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-invite.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-user-update.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/user-add-edit.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/user-add-edit.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/people.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/manage/people.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-layout.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-layout.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-update.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/account.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/account.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/settings/settings.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup-provider.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup-provider.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-setup.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/setup/setup.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers-routing.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/providers/providers.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/app.component.ts","webpack://@bitwarden/web-vault/./src/app/app.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/disable-personal-vault-export.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/disable-personal-vault-export.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/maximum-vault-timeout.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/policies/maximum-vault-timeout.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/scim-config.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/scim-config.request.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/scim.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/scim.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization/organization-sso.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/sso-config.view.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/input-strip-spaces.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/copy-click.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/launch-click.directive.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/base-cva.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-checkbox.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/components/input-checkbox.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/sso.component.html","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/manage/sso.component.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/organizations-routing.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/organizations/organizations.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/app/app.module.ts","webpack://@bitwarden/web-vault/../../bitwarden_license/bit-web/src/main.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/callout.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/callout.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/fallback-src.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/icon.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/icon.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/modal.ref.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/a11y-title.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/api-action.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/autofocus.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/input-verbatim.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/stop-click.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/stop-prop.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/auth.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/lock.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/guards/unauth.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/toastr.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/credit-card-number.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/jslib.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/i18n.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/search.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/user-name.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/user-type.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/injection-tokens.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/dynamic-modal.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/modal-injector.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/modal.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/theming.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/shared/components/password-strength/password-strength.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/shared/components/password-strength/password-strength.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/account/account-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/anonymousHub.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/appId.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/audit.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/auth.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/cipher.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/crypto.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/cryptoFunction.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/encrypt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/environment.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/event/event-collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/export.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileDownload/fileDownload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/folder/folder-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/folder/folder.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/formValidationErrors.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/i18n.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/keyConnector.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/log.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/login.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/messaging.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/organization-user.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-reset-password.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization/organization-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization/organization.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/passwordGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/passwordReprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/platformUtils.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/policy/policy-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/policy/policy.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/provider.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/search.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/send.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/stateMigration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/storage.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/sync/sync.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/token.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/totp.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/twoFactor.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/userVerification/userVerification.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/usernameGeneration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/validation.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/vaultTimeout/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/vaultTimeout/vaultTimeoutSettings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authenticationStatus.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/authenticationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/cipherRepromptType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/cipherType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/deviceType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/encryptionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/eventType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/fieldType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/hashPurpose.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/htmlStorageLocation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/kdfType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/keySuffixOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/linkedIdType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/logLevelType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationApiKeyType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationConnectionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationUserStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationUserType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/paymentMethodType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/planType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/policyType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/productType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/secureNoteType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/sendType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/themeType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/twoFactorProviderType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/uriMatchType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/verificationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/flags.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/linkedFieldOption.decorator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/serviceUtils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/utils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/card.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/field.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/identity.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/login-uri.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/login.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/permissions.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/secure-note.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/send-file.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/send-text.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/attachment.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/card.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/cipher.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/collection.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/event.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/field.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/folder.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/identity.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/login-uri.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/login.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/password-history.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/policy.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/provider.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/secure-note.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/send-file.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/send-text.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/send.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/server-config.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/account.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/attachment.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/card.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/cipher.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/collection.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/domain-base.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/enc-array-buffer.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/enc-string.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/environment-urls.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/field.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/folder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/generated-password-history.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/identity.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/login-uri.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/login.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/master-password-policy-options.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/organization.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/password.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/policy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/secure-note.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send-file.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send-text.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/symmetric-crypto-key.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/tree-node.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/window-state.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/card.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/field.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/identity.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/login-uri.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/login.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/secure-note.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cipher.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cipher-with-ids.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/collection.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/collection-with-id.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/folder.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/folder-with-id.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-bulk-delete.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-collections.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-create.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher-with-id.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/attachment.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/cipher.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/collection.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/folder.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/identity-token/token-two-factor.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/keys.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-api-key.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-connection.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-keys.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-tax-info-update.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/secret-verification.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/selection-read-only.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/send.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/tax-info-update.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/two-factor-email.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/attachment.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/base.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/password-history.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/cipher.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/emergency-access.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/error.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/list.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/policy.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/selection-read-only.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/attachment.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/card.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/cipher.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/collection.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/field.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/folder.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/identity.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/item.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/login-uri.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/login.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/password-history.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/secure-note.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/send-file.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/send-text.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/send.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/consoleLog.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/initializer-key.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/storageLocation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/state.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/twoFactor.service.ts","webpack://@bitwarden/web-vault/../../libs/components/src/async-actions/bit-action.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/async-actions/bit-submit.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/async-actions/form-button.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/avatar/avatar.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge-list/badge-list.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/badge-list/badge-list.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge/badge.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge/badge.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/color-password/color-password.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/dialog.service.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/dialog/dialog.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/dialog/dialog.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/directives/dialog-close.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/directives/dialog-title-container.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/simple-dialog/simple-dialog.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/simple-dialog/simple-dialog.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-control/form-control.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-control/hint.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-control/label.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/error-summary.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field-control.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/error.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/input/input.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/password-input-toggle.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/prefix.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/suffix.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon-button/icon-button.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon-button/icon-button.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icons/search.ts","webpack://@bitwarden/web-vault/../../libs/components/src/input/input.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/link/link.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-divider.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-divider.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-item.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-trigger-for.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/multi-select/multi-select.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/shared/button-like.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/components/src/shared/i18n.pipe.ts","webpack://@bitwarden/web-vault/../../libs/components/src/shared/shared.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/table/cell.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/table/row.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/table/table.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/table/table.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/shared/tab-header.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/shared/tab-list-container.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/shared/tab-list-item.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group/tab-body.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group/tab-group.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group/tab-body.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group/tab-group.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group/tab-label.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group/tab.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group/tab.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-nav-bar/tab-link.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-nav-bar/tab-link.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-nav-bar/tab-nav-bar.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-nav-bar/tab-nav-bar.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/utils/function-to-observable.ts","webpack://@bitwarden/web-vault/webpack/bootstrap","webpack://@bitwarden/web-vault/webpack/runtime/compat get default export","webpack://@bitwarden/web-vault/webpack/runtime/define property getters","webpack://@bitwarden/web-vault/webpack/runtime/ensure chunk","webpack://@bitwarden/web-vault/webpack/runtime/get javascript chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/get mini-css chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/global","webpack://@bitwarden/web-vault/webpack/runtime/hasOwnProperty shorthand","webpack://@bitwarden/web-vault/webpack/runtime/make namespace object","webpack://@bitwarden/web-vault/webpack/runtime/node module decorator","webpack://@bitwarden/web-vault/webpack/runtime/publicPath","webpack://@bitwarden/web-vault/webpack/runtime/jsonp chunk loading","webpack://@bitwarden/web-vault/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"@bitwarden/web-vault:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { RegisterFormComponent } from \"./register-form.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [RegisterFormComponent],\n  exports: [RegisterFormComponent],\n})\nexport class RegisterFormModule {}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Directive()\nexport abstract class BaseAcceptComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  actionPromise: Promise<any>;\n\n  protected requiredParameters: string[] = [];\n  protected failedShortMessage = \"inviteAcceptFailedShort\";\n  protected failedMessage = \"inviteAcceptFailed\";\n\n  constructor(\n    protected router: Router,\n    protected platformUtilService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService\n  ) {}\n\n  abstract authedHandler(qParams: Params): Promise<void>;\n  abstract unauthedHandler(qParams: Params): Promise<void>;\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      let error = this.requiredParameters.some((e) => qParams?.[e] == null || qParams[e] === \"\");\n      let errorMessage: string = null;\n      if (!error) {\n        this.authed = await this.stateService.getIsAuthenticated();\n\n        if (this.authed) {\n          try {\n            await this.authedHandler(qParams);\n          } catch (e) {\n            error = true;\n            errorMessage = e.message;\n          }\n        } else {\n          this.email = qParams.email;\n          await this.unauthedHandler(qParams);\n        }\n      }\n\n      if (error) {\n        const message =\n          errorMessage != null\n            ? this.i18nService.t(this.failedShortMessage, errorMessage)\n            : this.i18nService.t(this.failedMessage);\n        this.platformUtilService.showToast(\"error\", null, message, { timeout: 10000 });\n        this.router.navigate([\"/\"]);\n      }\n\n      this.loading = false;\n    });\n  }\n}\n","import { EventSystemUser } from \"../../enums/event-system-user\";\nimport { EventType } from \"../../enums/eventType\";\n\nexport class EventView {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: EventType;\n  installationId: string;\n  systemUser: EventSystemUser;\n\n  constructor(data: Required<EventView>) {\n    this.message = data.message;\n    this.humanReadableMessage = data.humanReadableMessage;\n    this.appIcon = data.appIcon;\n    this.appName = data.appName;\n    this.userId = data.userId;\n    this.userName = data.userName;\n    this.userEmail = data.userEmail;\n    this.date = data.date;\n    this.ip = data.ip;\n    this.type = data.type;\n    this.installationId = data.installationId;\n    this.systemUser = data.systemUser;\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/event.response\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { EventView } from \"@bitwarden/common/models/view/event.view\";\n\nimport { EventService } from \"../core\";\n\n@Directive()\nexport abstract class BaseEventsComponent {\n  loading = true;\n  loaded = false;\n  events: EventView[];\n  start: string;\n  end: string;\n  dirtyDates = true;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  exportPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  abstract readonly exportFileName: string;\n\n  constructor(\n    protected eventService: EventService,\n    protected i18nService: I18nService,\n    protected exportService: ExportService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected fileDownloadService: FileDownloadService\n  ) {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n  }\n\n  async exportEvents() {\n    if (this.appApiPromiseUnfulfilled() || this.dirtyDates) {\n      return;\n    }\n\n    this.loading = true;\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    try {\n      this.exportPromise = this.export(dates[0], dates[1]);\n\n      await this.exportPromise;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    this.exportPromise = null;\n    this.loading = false;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.appApiPromiseUnfulfilled()) {\n      return;\n    }\n\n    const dates = this.parseDates();\n    if (dates == null) {\n      return;\n    }\n\n    this.loading = true;\n    let events: EventView[] = [];\n    try {\n      const promise = this.loadAndParseEvents(\n        dates[0],\n        dates[1],\n        clearExisting ? null : this.continuationToken\n      );\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      const result = await promise;\n      this.continuationToken = result.continuationToken;\n      events = result.events;\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.dirtyDates = false;\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n\n  protected abstract requestEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ): Promise<ListResponse<EventResponse>>;\n  protected abstract getUserName(r: EventResponse, userId: string): { name: string; email: string };\n\n  protected async loadAndParseEvents(\n    startDate: string,\n    endDate: string,\n    continuationToken: string\n  ) {\n    const response = await this.requestEvents(startDate, endDate, continuationToken);\n\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user = this.getUserName(r, userId);\n        const userName = user != null ? user.name : this.i18nService.t(\"unknown\");\n\n        return new EventView({\n          message: eventInfo.message,\n          humanReadableMessage: eventInfo.humanReadableMessage,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: userName,\n          userEmail: user != null ? user.email : \"\",\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n          installationId: r.installationId,\n          systemUser: r.systemUser,\n        });\n      })\n    );\n    return { continuationToken: response.continuationToken, events: events };\n  }\n\n  protected parseDates() {\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return null;\n    }\n    return dates;\n  }\n\n  protected appApiPromiseUnfulfilled() {\n    return this.refreshPromise != null || this.morePromise != null || this.exportPromise != null;\n  }\n\n  private async export(start: string, end: string) {\n    let continuationToken = this.continuationToken;\n    let events = [].concat(this.events);\n\n    while (continuationToken != null) {\n      const result = await this.loadAndParseEvents(start, end, continuationToken);\n      continuationToken = result.continuationToken;\n      events = events.concat(result.events);\n    }\n\n    const data = await this.exportService.getEventExport(events);\n    const fileName = this.exportService.getFileName(this.exportFileName, \"csv\");\n    this.fileDownloadService.download({\n      fileName,\n      blobData: data,\n      blobOptions: { type: \"text/plain\" },\n    });\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-user-confirm\",\n  templateUrl: \"user-confirm.component.html\",\n})\nexport class UserConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() publicKey: Uint8Array;\n  @Output() onConfirmedUser = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      if (this.publicKey != null) {\n        const fingerprint = await this.cryptoService.getFingerprint(\n          this.userId,\n          this.publicKey.buffer\n        );\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    this.onConfirmedUser.emit();\n  }\n}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { ProviderUserUserDetailsResponse } from \"@bitwarden/common/models/response/provider/provider-user.response\";\n\nimport { OrganizationUserView } from \"../organizations/core/views/organization-user.view\";\nimport { UserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\n\ntype StatusType = OrganizationUserStatusType | ProviderUserStatusType;\n\nconst MaxCheckedCount = 500;\n\n@Directive()\nexport abstract class BasePeopleComponent<\n  UserType extends ProviderUserUserDetailsResponse | OrganizationUserView\n> {\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  get allCount() {\n    return this.activeUsers != null ? this.activeUsers.length : 0;\n  }\n\n  get invitedCount() {\n    return this.statusMap.has(this.userStatusType.Invited)\n      ? this.statusMap.get(this.userStatusType.Invited).length\n      : 0;\n  }\n\n  get acceptedCount() {\n    return this.statusMap.has(this.userStatusType.Accepted)\n      ? this.statusMap.get(this.userStatusType.Accepted).length\n      : 0;\n  }\n\n  get confirmedCount() {\n    return this.statusMap.has(this.userStatusType.Confirmed)\n      ? this.statusMap.get(this.userStatusType.Confirmed).length\n      : 0;\n  }\n\n  get revokedCount() {\n    return this.statusMap.has(this.userStatusType.Revoked)\n      ? this.statusMap.get(this.userStatusType.Revoked).length\n      : 0;\n  }\n\n  get showConfirmUsers(): boolean {\n    return (\n      this.activeUsers != null &&\n      this.statusMap != null &&\n      this.activeUsers.length > 1 &&\n      this.confirmedCount > 0 &&\n      this.confirmedCount < 3 &&\n      this.acceptedCount > 0\n    );\n  }\n\n  get showBulkConfirmUsers(): boolean {\n    return this.acceptedCount > 0;\n  }\n\n  abstract userType: typeof OrganizationUserType | typeof ProviderUserType;\n  abstract userStatusType: typeof OrganizationUserStatusType | typeof ProviderUserStatusType;\n\n  loading = true;\n  statusMap = new Map<StatusType, UserType[]>();\n  status: StatusType;\n  users: UserType[] = [];\n  pagedUsers: UserType[] = [];\n  searchText: string;\n  actionPromise: Promise<void>;\n\n  protected allUsers: UserType[] = [];\n  protected activeUsers: UserType[] = [];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedUsersCount = 0;\n\n  constructor(\n    protected apiService: ApiService,\n    private searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected cryptoService: CryptoService,\n    protected validationService: ValidationService,\n    protected modalService: ModalService,\n    private logService: LogService,\n    private searchPipe: SearchPipe,\n    protected userNamePipe: UserNamePipe,\n    protected stateService: StateService\n  ) {}\n\n  abstract edit(user: UserType): void;\n  abstract getUsers(): Promise<ListResponse<UserType> | UserType[]>;\n  abstract deleteUser(id: string): Promise<void>;\n  abstract revokeUser(id: string): Promise<void>;\n  abstract restoreUser(id: string): Promise<void>;\n  abstract reinviteUser(id: string): Promise<void>;\n  abstract confirmUser(user: UserType, publicKey: Uint8Array): Promise<void>;\n\n  async load() {\n    const response = await this.getUsers();\n    this.statusMap.clear();\n    this.activeUsers = [];\n    for (const status of Utils.iterateEnum(this.userStatusType)) {\n      this.statusMap.set(status, []);\n    }\n\n    if (response instanceof ListResponse) {\n      this.allUsers = response.data != null && response.data.length > 0 ? response.data : [];\n    } else if (Array.isArray(response)) {\n      this.allUsers = response;\n    }\n\n    this.allUsers.sort(\n      Utils.getSortFunction<ProviderUserUserDetailsResponse | OrganizationUserView>(\n        this.i18nService,\n        \"email\"\n      )\n    );\n    this.allUsers.forEach((u) => {\n      if (!this.statusMap.has(u.status)) {\n        this.statusMap.set(u.status, [u]);\n      } else {\n        this.statusMap.get(u.status).push(u);\n      }\n      if (u.status !== this.userStatusType.Revoked) {\n        this.activeUsers.push(u);\n      }\n    });\n    this.filter(this.status);\n    this.loading = false;\n  }\n\n  filter(status: StatusType) {\n    this.status = status;\n    if (this.status != null) {\n      this.users = this.statusMap.get(this.status);\n    } else {\n      this.users = this.activeUsers;\n    }\n    // Reset checkbox selecton\n    this.selectAll(false);\n    this.resetPaging();\n  }\n\n  loadMore() {\n    if (!this.users || this.users.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedUsers.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedUsersCount > this.pageSize) {\n      pagedSize = this.pagedUsersCount;\n    }\n    if (this.users.length > pagedLength) {\n      this.pagedUsers = this.pagedUsers.concat(\n        this.users.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedUsersCount = this.pagedUsers.length;\n    this.didScroll = this.pagedUsers.length > this.pageSize;\n  }\n\n  checkUser(user: UserType, select?: boolean) {\n    (user as any).checked = select == null ? !(user as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    if (select) {\n      this.selectAll(false);\n    }\n\n    const filteredUsers = this.searchPipe.transform(\n      this.users,\n      this.searchText,\n      \"name\",\n      \"email\",\n      \"id\"\n    );\n\n    const selectCount =\n      select && filteredUsers.length > MaxCheckedCount ? MaxCheckedCount : filteredUsers.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkUser(filteredUsers[i], select);\n    }\n  }\n\n  async resetPaging() {\n    this.pagedUsers = [];\n    this.loadMore();\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  protected async removeUserConfirmationDialog(user: UserType) {\n    return this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.userNamePipe.transform(user),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n  }\n\n  async remove(user: UserType) {\n    const confirmed = await this.removeUserConfirmationDialog(user);\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.deleteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(user))\n      );\n      this.removeUser(user);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async revoke(user: UserType) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.revokeWarningMessage(),\n      this.i18nService.t(\"revokeUserId\", this.userNamePipe.transform(user)),\n      this.i18nService.t(\"revokeAccess\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.revokeUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"revokedUserId\", this.userNamePipe.transform(user))\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async restore(user: UserType) {\n    this.actionPromise = this.restoreUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"restoredUserId\", this.userNamePipe.transform(user))\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async reinvite(user: UserType) {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    this.actionPromise = this.reinviteUser(user.id);\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"hasBeenReinvited\", this.userNamePipe.transform(user))\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async confirm(user: UserType) {\n    function updateUser(self: BasePeopleComponent<UserType>) {\n      user.status = self.userStatusType.Confirmed;\n      const mapIndex = self.statusMap.get(self.userStatusType.Accepted).indexOf(user);\n      if (mapIndex > -1) {\n        self.statusMap.get(self.userStatusType.Accepted).splice(mapIndex, 1);\n        self.statusMap.get(self.userStatusType.Confirmed).push(user);\n      }\n    }\n\n    const confirmUser = async (publicKey: Uint8Array) => {\n      try {\n        this.actionPromise = this.confirmUser(user, publicKey);\n        await this.actionPromise;\n        updateUser(this);\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(user))\n        );\n      } catch (e) {\n        this.validationService.showError(e);\n        throw e;\n      } finally {\n        this.actionPromise = null;\n      }\n    };\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(user.userId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n      if (autoConfirm == null || !autoConfirm) {\n        const [modal] = await this.modalService.openViewRef(\n          UserConfirmComponent,\n          this.confirmModalRef,\n          (comp) => {\n            comp.name = this.userNamePipe.transform(user);\n            comp.userId = user != null ? user.userId : null;\n            comp.publicKey = publicKey;\n            // eslint-disable-next-line rxjs/no-async-subscribe\n            comp.onConfirmedUser.subscribe(async () => {\n              try {\n                comp.formPromise = confirmUser(publicKey);\n                await comp.formPromise;\n                modal.close();\n              } catch (e) {\n                this.logService.error(e);\n              }\n            });\n          }\n        );\n        return;\n      }\n\n      try {\n        const fingerprint = await this.cryptoService.getFingerprint(user.userId, publicKey.buffer);\n        this.logService.info(`User's fingerprint: ${fingerprint.join(\"-\")}`);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      await confirmUser(publicKey);\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.users && this.users.length > this.pageSize;\n  }\n\n  protected revokeWarningMessage(): string {\n    return this.i18nService.t(\"revokeUserConfirmation\");\n  }\n\n  protected getCheckedUsers() {\n    return this.users.filter((u) => (u as any).checked);\n  }\n\n  protected removeUser(user: UserType) {\n    let index = this.users.indexOf(user);\n    if (index > -1) {\n      this.users.splice(index, 1);\n      this.resetPaging();\n    }\n\n    index = this.allUsers.indexOf(user);\n    if (index > -1) {\n      this.allUsers.splice(index, 1);\n    }\n\n    if (this.statusMap.has(user.status)) {\n      index = this.statusMap.get(user.status).indexOf(user);\n      if (index > -1) {\n        this.statusMap.get(user.status).splice(index, 1);\n      }\n    }\n  }\n}\n","import { Directive, OnInit, TemplateRef, ViewContainerRef } from \"@angular/core\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n/**\n * Hides the element if the user has premium.\n */\n@Directive({\n  selector: \"[appNotPremium]\",\n})\nexport class NotPremiumDirective implements OnInit {\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    const premium = await this.stateService.getCanAccessPremium();\n\n    if (premium) {\n      this.viewContainer.clear();\n    } else {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\n@Component({\n  selector: \"app-premium-badge\",\n  template: `\n    <button type=\"button\" *appNotPremium bitBadge badgeType=\"success\" (click)=\"premiumRequired()\">\n      {{ \"premium\" | i18n }}\n    </button>\n  `,\n})\nexport class PremiumBadgeComponent {\n  constructor(private messagingService: MessagingService) {}\n\n  premiumRequired() {\n    this.messagingService.send(\"premiumRequired\");\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, FormControl } from \"@angular/forms\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Collects the user's master password, or if they are using Key Connector, prompts for an OTP via email.\n * This is exposed to the parent component via the ControlValueAccessor interface (e.g. bind it to a FormControl).\n * Use UserVerificationService to verify the user's input.\n */\n@Directive({\n  selector: \"app-user-verification\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class UserVerificationComponent implements ControlValueAccessor, OnInit {\n  usesKeyConnector = false;\n  disableRequestOTP = false;\n  sentCode = false;\n\n  secret = new FormControl(\"\");\n\n  private onChange: (value: Verification) => void;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async ngOnInit() {\n    this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.processChanges(this.secret.value);\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.secret.valueChanges.subscribe((secret: string) => this.processChanges(secret));\n  }\n\n  async requestOTP() {\n    if (this.usesKeyConnector) {\n      this.disableRequestOTP = true;\n      try {\n        await this.userVerificationService.requestOTP();\n        this.sentCode = true;\n      } finally {\n        this.disableRequestOTP = false;\n      }\n    }\n  }\n\n  writeValue(obj: any): void {\n    this.secret.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Not implemented\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disableRequestOTP = isDisabled;\n    if (isDisabled) {\n      this.secret.disable();\n    } else {\n      this.secret.enable();\n    }\n  }\n\n  private processChanges(secret: string) {\n    if (this.onChange == null) {\n      return;\n    }\n\n    this.onChange({\n      type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n      secret: Utils.isNullOrWhitespace(secret) ? null : secret,\n    });\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n  <input\n    id=\"masterPassword\"\n    type=\"password\"\n    name=\"MasterPasswordHash\"\n    class=\"form-control\"\n    [formControl]=\"secret\"\n    required\n    appAutofocus\n    appInputVerbatim\n  />\n  <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"form-group\">\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n    <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { UserVerificationComponent as BaseComponent } from \"@bitwarden/angular/components/user-verification.component\";\n\n@Component({\n  selector: \"app-user-verification\",\n  templateUrl: \"user-verification.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UserVerificationComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class UserVerificationComponent extends BaseComponent {}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { EventResponse } from \"@bitwarden/common/models/response/event.response\";\n\n@Injectable()\nexport class EventService {\n  private policies: Policy[];\n\n  constructor(private i18nService: I18nService, policyService: PolicyService) {\n    policyService.policies$.subscribe((policies) => {\n      this.policies = policies;\n    });\n  }\n\n  getDefaultDateFilters() {\n    const d = new Date();\n    const end = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59);\n    d.setDate(d.getDate() - 30);\n    const start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0);\n    return [this.toDateTimeLocalString(start), this.toDateTimeLocalString(end)];\n  }\n\n  formatDateFilters(filterStart: string, filterEnd: string) {\n    const start: Date = new Date(filterStart);\n    const end: Date = new Date(filterEnd + \":59.999\");\n    if (isNaN(start.getTime()) || isNaN(end.getTime()) || end < start) {\n      throw new Error(\"Invalid date range.\");\n    }\n    return [start.toISOString(), end.toISOString()];\n  }\n\n  async getEventInfo(ev: EventResponse, options = new EventOptions()): Promise<EventInfo> {\n    const appInfo = this.getAppInfo(ev.deviceType);\n    const { message, humanReadableMessage } = await this.getEventMessage(ev, options);\n    return {\n      message: message,\n      humanReadableMessage: humanReadableMessage,\n      appIcon: appInfo[0],\n      appName: appInfo[1],\n    };\n  }\n\n  private async getEventMessage(ev: EventResponse, options: EventOptions) {\n    let msg = \"\";\n    let humanReadableMsg = \"\";\n    switch (ev.type) {\n      // User\n      case EventType.User_LoggedIn:\n        msg = humanReadableMsg = this.i18nService.t(\"loggedIn\");\n        break;\n      case EventType.User_ChangedPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"changedPassword\");\n        break;\n      case EventType.User_Updated2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledUpdated2fa\");\n        break;\n      case EventType.User_Disabled2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"disabled2fa\");\n        break;\n      case EventType.User_Recovered2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"recovered2fa\");\n        break;\n      case EventType.User_FailedLogIn:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin\");\n        break;\n      case EventType.User_FailedLogIn2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin2fa\");\n        break;\n      case EventType.User_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedVault\");\n        break;\n      case EventType.User_UpdatedTempPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"updatedMasterPassword\");\n        break;\n      case EventType.User_MigratedKeyToKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"migratedKeyConnector\");\n        break;\n      // Cipher\n      case EventType.Cipher_Created:\n        msg = this.i18nService.t(\"createdItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"createdItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Updated:\n        msg = this.i18nService.t(\"editedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"editedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Deleted:\n        msg = this.i18nService.t(\"permanentlyDeletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"permanentlyDeletedItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_SoftDeleted:\n        msg = this.i18nService.t(\"deletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"deletedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Restored:\n        msg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        break;\n      case EventType.Cipher_AttachmentCreated:\n        msg = this.i18nService.t(\"createdAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"createdAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_AttachmentDeleted:\n        msg = this.i18nService.t(\"deletedAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_Shared:\n        msg = this.i18nService.t(\"movedItemIdToOrg\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"movedItemIdToOrg\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientViewed:\n        msg = this.i18nService.t(\"viewedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledPasswordVisible:\n        msg = this.i18nService.t(\"viewedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledHiddenFieldVisible:\n        msg = this.i18nService.t(\"viewedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientToggledCardNumberVisible:\n        msg = this.i18nService.t(\"viewedCardNumberItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedCardNumberItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientToggledCardCodeVisible:\n        msg = this.i18nService.t(\"viewedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedHiddenField:\n        msg = this.i18nService.t(\"copiedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedPassword:\n        msg = this.i18nService.t(\"copiedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"copiedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientCopiedCardCode:\n        msg = this.i18nService.t(\"copiedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientAutofilled:\n        msg = this.i18nService.t(\"autofilledItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"autofilledItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_UpdatedCollections:\n        msg = this.i18nService.t(\"editedCollectionsForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionsForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      // Collection\n      case EventType.Collection_Created:\n        msg = this.i18nService.t(\"createdCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Updated:\n        msg = this.i18nService.t(\"editedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Deleted:\n        msg = this.i18nService.t(\"deletedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      // Group\n      case EventType.Group_Created:\n        msg = this.i18nService.t(\"createdGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"createdGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Updated:\n        msg = this.i18nService.t(\"editedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Deleted:\n        msg = this.i18nService.t(\"deletedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"deletedGroupId\", this.getShortId(ev.groupId));\n        break;\n      // Org user\n      case EventType.OrganizationUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"invitedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UpdatedGroups:\n        msg = this.i18nService.t(\"editedGroupsForUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedGroupsForUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UnlinkedSso:\n        msg = this.i18nService.t(\"unlinkedSsoUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"unlinkedSsoUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Enroll:\n        msg = this.i18nService.t(\"eventEnrollPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventEnrollPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Withdraw:\n        msg = this.i18nService.t(\"eventWithdrawPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventWithdrawPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_AdminResetPassword:\n        msg = this.i18nService.t(\"eventAdminPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventAdminPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetSsoLink:\n        msg = this.i18nService.t(\"eventResetSsoLink\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventResetSsoLink\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_FirstSsoLogin:\n        msg = this.i18nService.t(\"firstSsoLogin\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"firstSsoLogin\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Revoked:\n        msg = this.i18nService.t(\"revokedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"revokedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Restored:\n        msg = this.i18nService.t(\"restoredUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"restoredUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      // Org\n      case EventType.Organization_Updated:\n        msg = humanReadableMsg = this.i18nService.t(\"editedOrgSettings\");\n        break;\n      case EventType.Organization_PurgedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"purgedOrganizationVault\");\n        break;\n      case EventType.Organization_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedOrganizationVault\");\n        break;\n      case EventType.Organization_VaultAccessed:\n        msg = humanReadableMsg = this.i18nService.t(\"vaultAccessedByProvider\");\n        break;\n      case EventType.Organization_EnabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledSso\");\n        break;\n      case EventType.Organization_DisabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledSso\");\n        break;\n      case EventType.Organization_EnabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledKeyConnector\");\n        break;\n      case EventType.Organization_DisabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledKeyConnector\");\n        break;\n      case EventType.Organization_SponsorshipsSynced:\n        msg = humanReadableMsg = this.i18nService.t(\"sponsorshipsSynced\");\n        break;\n      // Policies\n      case EventType.Policy_Updated: {\n        msg = this.i18nService.t(\"modifiedPolicyId\", this.formatPolicyId(ev));\n\n        const policy = this.policies.filter((p) => p.id === ev.policyId)[0];\n        let p1 = this.getShortId(ev.policyId);\n        if (policy != null) {\n          p1 = PolicyType[policy.type];\n        }\n\n        humanReadableMsg = this.i18nService.t(\"modifiedPolicyId\", p1);\n        break;\n      }\n      // Provider users:\n      case EventType.ProviderUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"invitedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.providerUserId)\n        );\n        break;\n      case EventType.ProviderUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"removedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderOrganization_Created:\n        msg = this.i18nService.t(\"createdOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Added:\n        msg = this.i18nService.t(\"addedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"addedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Removed:\n        msg = this.i18nService.t(\"removedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_VaultAccessed:\n        msg = this.i18nService.t(\"accessedClientVault\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"accessedClientVault\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      default:\n        break;\n    }\n    return {\n      message: msg === \"\" ? null : msg,\n      humanReadableMessage: humanReadableMsg === \"\" ? null : humanReadableMsg,\n    };\n  }\n\n  private getAppInfo(deviceType: DeviceType): [string, string] {\n    switch (deviceType) {\n      case DeviceType.Android:\n        return [\"bwi-android\", this.i18nService.t(\"mobile\") + \" - Android\"];\n      case DeviceType.iOS:\n        return [\"bwi-apple\", this.i18nService.t(\"mobile\") + \" - iOS\"];\n      case DeviceType.UWP:\n        return [\"bwi-windows\", this.i18nService.t(\"mobile\") + \" - Windows\"];\n      case DeviceType.ChromeExtension:\n        return [\"bwi-chrome\", this.i18nService.t(\"extension\") + \" - Chrome\"];\n      case DeviceType.FirefoxExtension:\n        return [\"bwi-firefox\", this.i18nService.t(\"extension\") + \" - Firefox\"];\n      case DeviceType.OperaExtension:\n        return [\"bwi-opera\", this.i18nService.t(\"extension\") + \" - Opera\"];\n      case DeviceType.EdgeExtension:\n        return [\"bwi-edge\", this.i18nService.t(\"extension\") + \" - Edge\"];\n      case DeviceType.VivaldiExtension:\n        return [\"bwi-puzzle\", this.i18nService.t(\"extension\") + \" - Vivaldi\"];\n      case DeviceType.SafariExtension:\n        return [\"bwi-safari\", this.i18nService.t(\"extension\") + \" - Safari\"];\n      case DeviceType.WindowsDesktop:\n        return [\"bwi-windows\", this.i18nService.t(\"desktop\") + \" - Windows\"];\n      case DeviceType.MacOsDesktop:\n        return [\"bwi-apple\", this.i18nService.t(\"desktop\") + \" - macOS\"];\n      case DeviceType.LinuxDesktop:\n        return [\"bwi-linux\", this.i18nService.t(\"desktop\") + \" - Linux\"];\n      case DeviceType.ChromeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Chrome\"];\n      case DeviceType.FirefoxBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Firefox\"];\n      case DeviceType.OperaBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Opera\"];\n      case DeviceType.SafariBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Safari\"];\n      case DeviceType.VivaldiBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Vivaldi\"];\n      case DeviceType.EdgeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Edge\"];\n      case DeviceType.IEBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - IE\"];\n      case DeviceType.UnknownBrowser:\n        return [\n          \"bwi-globe\",\n          this.i18nService.t(\"webVault\") + \" - \" + this.i18nService.t(\"unknown\"),\n        ];\n      default:\n        return [\"bwi-globe\", this.i18nService.t(\"unknown\")];\n    }\n  }\n\n  private formatCipherId(ev: EventResponse, options: EventOptions) {\n    const shortId = this.getShortId(ev.cipherId);\n    if (ev.organizationId == null || !options.cipherInfo) {\n      return \"<code>\" + shortId + \"</code>\";\n    }\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/vault?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.cipherId\n    );\n    return a.outerHTML;\n  }\n\n  private formatGroupId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.groupId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\"href\", \"#/organizations/\" + ev.organizationId + \"/groups?search=\" + shortId);\n    return a.outerHTML;\n  }\n\n  private formatCollectionId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.collectionId);\n    const a = this.makeAnchor(shortId);\n    // TODO: Update view/edit collection link after EC-14 is completed\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/collections?search=\" + shortId\n    );\n    return a.outerHTML;\n  }\n\n  private formatOrgUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.organizationUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/members?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.organizationUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/providers/\" +\n        ev.providerId +\n        \"/manage/people?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.providerUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderOrganizationId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerOrganizationId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\"href\", \"#/providers/\" + ev.providerId + \"/clients?search=\" + shortId);\n    return a.outerHTML;\n  }\n\n  private formatPolicyId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.policyId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/policies?policyId=\" + ev.policyId\n    );\n    return a.outerHTML;\n  }\n\n  private makeAnchor(shortId: string) {\n    const a = document.createElement(\"a\");\n    a.title = this.i18nService.t(\"view\");\n    a.innerHTML = \"<code>\" + shortId + \"</code>\";\n    return a;\n  }\n\n  private getShortId(id: string) {\n    return id?.substring(0, 8);\n  }\n\n  private toDateTimeLocalString(date: Date) {\n    return (\n      date.getFullYear() +\n      \"-\" +\n      this.pad(date.getMonth() + 1) +\n      \"-\" +\n      this.pad(date.getDate()) +\n      \"T\" +\n      this.pad(date.getHours()) +\n      \":\" +\n      this.pad(date.getMinutes())\n    );\n  }\n\n  private pad(num: number) {\n    const norm = Math.floor(Math.abs(num));\n    return (norm < 10 ? \"0\" : \"\") + norm;\n  }\n}\n\nexport class EventInfo {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n}\n\nexport class EventOptions {\n  cipherInfo = true;\n}\n","import { BasePolicy } from \"../organizations/policies\";\n\nexport class PolicyListService {\n  private policies: BasePolicy[] = [];\n\n  addPolicies(policies: BasePolicy[]) {\n    this.policies.push(...policies);\n  }\n\n  getPolicies(): BasePolicy[] {\n    return this.policies;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Title } from \"@angular/platform-browser\";\nimport { ActivatedRoute, NavigationEnd, Router } from \"@angular/router\";\nimport { filter } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Injectable()\nexport class RouterService {\n  private previousUrl: string = undefined;\n  private currentUrl: string = undefined;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title,\n    i18nService: I18nService\n  ) {\n    this.currentUrl = this.router.url;\n\n    router.events\n      .pipe(filter((e) => e instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => {\n        this.currentUrl = event.url;\n\n        let title = i18nService.t(\"pageTitle\", \"Bitwarden\");\n        let child = this.activatedRoute.firstChild;\n        while (child.firstChild) {\n          child = child.firstChild;\n        }\n\n        const titleId: string = child?.snapshot?.data?.titleId;\n        const rawTitle: string = child?.snapshot?.data?.title;\n        const updateUrl = !child?.snapshot?.data?.doNotSaveUrl ?? true;\n\n        if (titleId != null || rawTitle != null) {\n          const newTitle = rawTitle != null ? rawTitle : i18nService.t(titleId);\n          if (newTitle != null && newTitle !== \"\") {\n            title = newTitle + \" | \" + title;\n          }\n        }\n        this.titleService.setTitle(title);\n        if (updateUrl) {\n          this.setPreviousUrl(this.currentUrl);\n        }\n      });\n  }\n\n  getPreviousUrl() {\n    return this.previousUrl;\n  }\n\n  setPreviousUrl(url: string) {\n    this.previousUrl = url;\n  }\n}\n","import {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"@bitwarden/common/models/domain/account\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout: number = process.env.NODE_ENV === \"development\" ? null : 15;\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n  }\n}\n","import { Inject, Injectable } from \"@angular/core\";\n\nimport {\n  MEMORY_STORAGE,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n} from \"@bitwarden/angular/services/injection-tokens\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateMigrationService } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipher.data\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { FolderData } from \"@bitwarden/common/models/data/folder.data\";\nimport { SendData } from \"@bitwarden/common/models/data/send.data\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storage-options\";\nimport { StateService as BaseStateService } from \"@bitwarden/common/services/state.service\";\n\nimport { Account } from \"./account\";\nimport { GlobalState } from \"./global-state\";\n\n@Injectable()\nexport class StateService extends BaseStateService<GlobalState, Account> {\n  constructor(\n    storageService: AbstractStorageService,\n    @Inject(SECURE_STORAGE) secureStorageService: AbstractStorageService,\n    @Inject(MEMORY_STORAGE) memoryStorageService: AbstractStorageService,\n    logService: LogService,\n    stateMigrationService: StateMigrationService,\n    @Inject(STATE_FACTORY) stateFactory: StateFactory<GlobalState, Account>,\n    @Inject(STATE_SERVICE_USE_CACHE) useAccountCache = true\n  ) {\n    super(\n      storageService,\n      secureStorageService,\n      memoryStorageService,\n      logService,\n      stateMigrationService,\n      stateFactory,\n      useAccountCache\n    );\n  }\n\n  async addAccount(account: Account) {\n    // Apply web overrides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedCiphers(options);\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedCiphers(value, options);\n  }\n\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedCollections(options);\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedCollections(value, options);\n  }\n\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedFolders(options);\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedFolders(value, options);\n  }\n\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedSends(options);\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedSends(value, options);\n  }\n\n  override async getLastSync(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getLastSync(options);\n  }\n\n  override async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setLastSync(value, options);\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-footer\",\n  templateUrl: \"footer.component.html\",\n})\nexport class FooterComponent implements OnInit {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n  }\n}\n","<div class=\"container footer text-muted\">\n  <div class=\"row\">\n    <div class=\"col\">&copy; {{ year }} Bitwarden Inc.</div>\n    <div class=\"col text-center\"></div>\n    <div class=\"col text-right\">\n      {{ \"versionNumber\" | i18n: version }}\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-frontend-layout\",\n  templateUrl: \"frontend-layout.component.html\",\n})\nexport class FrontendLayoutComponent implements OnInit, OnDestroy {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n    document.body.classList.add(\"layout_frontend\");\n  }\n\n  ngOnDestroy() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<router-outlet></router-outlet>\n<div class=\"container my-5 text-muted text-center\">\n  &copy; {{ year }} Bitwarden Inc. <br />\n  {{ \"versionNumber\" | i18n: version }}\n</div>\n","<nav class=\"navbar navbar-expand navbar-dark\" [ngClass]=\"{ 'nav-background-alt': selfHosted }\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\" appA11yTitle=\"{{ 'pageTitle' | i18n: 'Bitwarden' }}\">\n      <i class=\"bwi bwi-shield\" aria-hidden=\"true\"></i>\n    </a>\n    <div class=\"collapse navbar-collapse\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/vault\">{{ \"vaults\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/sends\">{{ \"send\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/tools\">{{ \"tools\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/reports\">{{ \"reports\" | i18n }}</a>\n        </li>\n        <li\n          *ngIf=\"(organizations$ | async)?.length >= 1\"\n          class=\"nav-item\"\n          routerLinkActive=\"active\"\n        >\n          <a class=\"nav-link\" [routerLink]=\"['/organizations', (organizations$ | async)[0].id]\">{{\n            \"organizations\" | i18n\n          }}</a>\n        </li>\n        <ng-container *ngIf=\"providers.length >= 1\">\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length == 1\">\n            <a class=\"nav-link\" [routerLink]=\"['/providers', providers[0].id]\">{{\n              \"provider\" | i18n\n            }}</a>\n          </li>\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length > 1\">\n            <a class=\"nav-link\" routerLink=\"/providers\">{{ \"provider\" | i18n }}</a>\n          </li>\n        </ng-container>\n      </ul>\n    </div>\n    <product-switcher buttonType=\"light\"></product-switcher>\n    <ul class=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\">\n      <li>\n        <button\n          [bitMenuTriggerFor]=\"accountMenu\"\n          class=\"tw-border-0 tw-bg-transparent tw-text-alt2 tw-opacity-70 hover:tw-opacity-90\"\n        >\n          <i class=\"bwi bwi-user-circle bwi-lg\" aria-hidden=\"true\"></i>\n          <i class=\"bwi bwi-caret-down bwi-sm\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu class=\"dropdown-menu\" #accountMenu>\n          <div class=\"tw-flex tw-min-w-[200px] tw-max-w-[300px] tw-flex-col\">\n            <div\n              class=\"tw-flex tw-items-center tw-py-1 tw-px-4 tw-leading-tight tw-text-info\"\n              *ngIf=\"name\"\n              appStopProp\n            >\n              <bit-avatar [text]=\"name\" [id]=\"userId\" size=\"small\"></bit-avatar>\n              <div class=\"tw-ml-2 tw-block tw-overflow-hidden tw-whitespace-nowrap\">\n                <span>{{ \"loggedInAs\" | i18n }}</span>\n                <small class=\"tw-block tw-overflow-hidden tw-whitespace-nowrap tw-text-muted\">{{\n                  name\n                }}</small>\n              </div>\n            </div>\n            <bit-menu-divider></bit-menu-divider>\n            <a bitMenuItem routerLink=\"/settings/account\">\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"accountSettings\" | i18n }}\n            </a>\n            <a bitMenuItem href=\"https://bitwarden.com/help/\" target=\"_blank\" rel=\"noopener\">\n              <i class=\"bwi bwi-fw bwi-question-circle\" aria-hidden=\"true\"></i>\n              {{ \"getHelp\" | i18n }}\n            </a>\n            <a bitMenuItem href=\"https://bitwarden.com/download/\" target=\"_blank\" rel=\"noopener\">\n              <i class=\"bwi bwi-fw bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"getApps\" | i18n }}\n            </a>\n            <bit-menu-divider></bit-menu-divider>\n            <button bitMenuItem type=\"button\" (click)=\"lock()\">\n              <i class=\"bwi bwi-fw bwi-lock\" aria-hidden=\"true\"></i>\n              {{ \"lockNow\" | i18n }}\n            </button>\n            <button bitMenuItem type=\"button\" (click)=\"logOut()\">\n              <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </bit-menu>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, OnInit } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport {\n  canAccessAdmin,\n  isNotProviderUser,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"navbar.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class NavbarComponent implements OnInit {\n  selfHosted = false;\n  name: string;\n  email: string;\n  providers: Provider[] = [];\n  userId: string;\n  organizations$: Observable<Organization[]>;\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private providerService: ProviderService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService,\n    private i18nService: I18nService\n  ) {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.name = await this.tokenService.getName();\n    this.email = await this.tokenService.getEmail();\n    this.userId = await this.tokenService.getUserId();\n    if (this.name == null || this.name.trim() === \"\") {\n      this.name = this.email;\n    }\n\n    // Ensure providers and organizations are loaded\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n    this.providers = await this.providerService.getAll();\n\n    this.organizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter(isNotProviderUser)),\n      canAccessAdmin(this.i18nService)\n    );\n  }\n\n  lock() {\n    this.messagingService.send(\"lockVault\");\n  }\n\n  logOut() {\n    this.messagingService.send(\"logout\");\n  }\n}\n","<bit-menu #menu ariaRole=\"dialog\" [ariaLabel]=\"'switchProducts' | i18n\">\n  <div class=\"tw-px-4 tw-py-2\" *ngIf=\"products$ | async as products\">\n    <!-- Bento options -->\n    <!-- grid-template-columns is dynamic so we can collapse empty columns  -->\n    <section\n      [ngStyle]=\"{\n        '--num-products': products.bento.length,\n        'grid-template-columns': 'repeat(min(var(--num-products,1),3),auto)'\n      }\"\n      class=\"tw-grid tw-gap-2\"\n    >\n      <a\n        *ngFor=\"let product of products.bento\"\n        [routerLink]=\"product.appRoute\"\n        class=\"tw-group tw-flex tw-h-24 tw-w-28 tw-flex-col tw-items-center tw-justify-center tw-rounded tw-p-1 tw-text-primary-500 tw-outline-none hover:tw-bg-background-alt hover:tw-text-primary-700 hover:tw-no-underline focus-visible:!tw-ring-2 focus-visible:!tw-ring-primary-700\"\n        routerLinkActive=\"tw-font-bold tw-bg-primary-500 hover:tw-bg-primary-500 !tw-text-contrast tw-ring-offset-2\"\n        ariaCurrentWhenActive=\"page\"\n      >\n        <i class=\"bwi {{ product.icon }} tw-text-4xl !tw-m-0 !tw-mb-1\"></i>\n        <span class=\"tw-text-center tw-text-sm tw-leading-snug group-hover:tw-underline\">{{\n          product.name\n        }}</span>\n      </a>\n    </section>\n\n    <!-- Other options -->\n    <section\n      *ngIf=\"products.other.length > 0\"\n      class=\"tw-mt-4 tw-flex tw-w-full tw-flex-col tw-border-0 tw-border-t tw-border-solid tw-border-t-text-muted tw-p-2 tw-pb-0\"\n    >\n      <span class=\"tw-mb-1 tw-text-xs tw-text-muted\">{{ \"moreFromBitwarden\" | i18n }}</span>\n      <a *ngFor=\"let product of products.other\" bitLink [href]=\"product.marketingRoute\">\n        <span class=\"tw-font-normal\">\n          <i class=\"bwi {{ product.icon }} tw-m-0 !tw-mr-3\"></i>{{ product.name }}\n        </span>\n      </a>\n    </section>\n  </div>\n</bit-menu>\n","import { Component, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { combineLatest, map } from \"rxjs\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { MenuComponent } from \"@bitwarden/components\";\n\ntype ProductSwitcherItem = {\n  /**\n   * Displayed name\n   */\n  name: string;\n\n  /**\n   * Displayed icon\n   */\n  icon: string;\n\n  /**\n   * Route for items in the `bentoProducts$` section\n   */\n  appRoute?: string | any[];\n\n  /**\n   * Route for items in the `otherProducts$` section\n   */\n  marketingRoute?: string | any[];\n};\n\n@Component({\n  selector: \"product-switcher-content\",\n  templateUrl: \"./product-switcher-content.component.html\",\n})\nexport class ProductSwitcherContentComponent {\n  @ViewChild(\"menu\")\n  menu: MenuComponent;\n\n  protected products$ = combineLatest([\n    this.organizationService.organizations$,\n    this.route.paramMap,\n  ]).pipe(\n    map(([orgs, paramMap]) => {\n      const routeOrg = orgs.find((o) => o.id === paramMap.get(\"organizationId\"));\n      // If the active route org doesn't have access to SM, find the first org that does.\n      const smOrg = routeOrg?.canAccessSecretsManager\n        ? routeOrg\n        : orgs.find((o) => o.canAccessSecretsManager);\n\n      /**\n       * We can update this to the \"satisfies\" type upon upgrading to TypeScript 4.9\n       * https://devblogs.microsoft.com/typescript/announcing-typescript-4-9/#satisfies\n       */\n      const products: Record<\"pm\" | \"sm\" | \"orgs\", ProductSwitcherItem> = {\n        pm: {\n          name: \"Password Manager\",\n          icon: \"bwi-lock\",\n          appRoute: \"/vault\",\n          marketingRoute: \"https://bitwarden.com/products/personal/\",\n        },\n        sm: {\n          name: \"Secrets Manager Beta\",\n          icon: \"bwi-cli\",\n          appRoute: [\"/sm\", smOrg?.id],\n          // TODO: update marketing link\n          marketingRoute: \"#\",\n        },\n        orgs: {\n          name: \"Organizations\",\n          icon: \"bwi-business\",\n          marketingRoute: \"https://bitwarden.com/products/business/\",\n        },\n      };\n\n      const bento: ProductSwitcherItem[] = [products.pm];\n      const other: ProductSwitcherItem[] = [];\n\n      if (smOrg) {\n        bento.push(products.sm);\n      }\n\n      if (orgs.length === 0) {\n        other.push(products.orgs);\n      }\n\n      return {\n        bento,\n        other,\n      };\n    })\n  );\n\n  constructor(private organizationService: OrganizationService, private route: ActivatedRoute) {}\n}\n","<ng-template [ngIf]=\"isEnabled\">\n  <button\n    bitIconButton=\"bwi bwi-fw bwi-filter\"\n    [bitMenuTriggerFor]=\"content?.menu\"\n    [buttonType]=\"buttonType\"\n    [attr.aria-label]=\"'switchProducts' | i18n\"\n  ></button>\n  <product-switcher-content #content></product-switcher-content>\n</ng-template>\n","import { AfterViewInit, ChangeDetectorRef, Component, Input } from \"@angular/core\";\n\nimport { IconButtonType } from \"@bitwarden/components/src/icon-button/icon-button.component\";\n\nimport { flagEnabled } from \"../../../utils/flags\";\n\n@Component({\n  selector: \"product-switcher\",\n  templateUrl: \"./product-switcher.component.html\",\n})\nexport class ProductSwitcherComponent implements AfterViewInit {\n  protected isEnabled = flagEnabled(\"secretsManager\");\n\n  /**\n   * Passed to the product switcher's `bitIconButton`\n   */\n  @Input()\n  buttonType: IconButtonType = \"main\";\n\n  ngAfterViewInit() {\n    /**\n     * Resolves https://angular.io/errors/NG0100 [SM-403]\n     *\n     * Caused by `[bitMenuTriggerFor]=\"content?.menu\"` in template\n     */\n    this.changeDetector.detectChanges();\n  }\n\n  constructor(private changeDetector: ChangeDetectorRef) {}\n}\n","import { A11yModule } from \"@angular/cdk/a11y\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { I18nPipe } from \"@bitwarden/angular/pipes/i18n.pipe\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { ProductSwitcherContentComponent } from \"./product-switcher-content.component\";\nimport { ProductSwitcherComponent } from \"./product-switcher.component\";\n\n@NgModule({\n  imports: [SharedModule, A11yModule, RouterModule],\n  declarations: [ProductSwitcherComponent, ProductSwitcherContentComponent],\n  exports: [ProductSwitcherComponent],\n  providers: [I18nPipe],\n})\nexport class ProductSwitcherModule {}\n","import { NgModule } from \"@angular/core\";\n\n@NgModule({})\nexport class CoreOrganizationModule {}\n","import { OrganizationUserType } from \"../../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../../../models/api/permissions.api\";\nimport { SelectionReadOnlyRequest } from \"../../../models/request/selection-read-only.request\";\n\nexport class OrganizationUserUpdateRequest {\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  groups: string[] = [];\n  permissions: PermissionsApi;\n}\n","import { OrganizationUserType } from \"../../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../../../models/api/permissions.api\";\nimport { SelectionReadOnlyRequest } from \"../../../models/request/selection-read-only.request\";\n\nexport class OrganizationUserInviteRequest {\n  emails: string[] = [];\n  type: OrganizationUserType;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  groups: string[];\n  permissions: PermissionsApi;\n}\n","import { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { PermissionsApi } from \"@bitwarden/common/models/api/permissions.api\";\n\nimport { CollectionAccessSelectionView } from \"./collection-access-selection.view\";\n\nexport class OrganizationUserAdminView {\n  id: string;\n  userId: string;\n  organizationId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  collections: CollectionAccessSelectionView[] = [];\n  groups: string[] = [];\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport {\n  OrganizationUserInviteRequest,\n  OrganizationUserUpdateRequest,\n} from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationUserDetailsResponse } from \"@bitwarden/common/abstractions/organization-user/responses\";\n\nimport { CoreOrganizationModule } from \"../core-organization.module\";\nimport { OrganizationUserAdminView } from \"../views/organization-user-admin-view\";\n\n@Injectable({ providedIn: CoreOrganizationModule })\nexport class UserAdminService {\n  constructor(private organizationUserService: OrganizationUserService) {}\n\n  async get(\n    organizationId: string,\n    organizationUserId: string\n  ): Promise<OrganizationUserAdminView | undefined> {\n    const userResponse = await this.organizationUserService.getOrganizationUser(\n      organizationId,\n      organizationUserId,\n      {\n        includeGroups: true,\n      }\n    );\n\n    if (userResponse == null) {\n      return undefined;\n    }\n\n    const [view] = await this.decryptMany(organizationId, [userResponse]);\n\n    return view;\n  }\n\n  async save(user: OrganizationUserAdminView): Promise<void> {\n    const request = new OrganizationUserUpdateRequest();\n    request.accessAll = user.accessAll;\n    request.permissions = user.permissions;\n    request.type = user.type;\n    request.collections = user.collections;\n    request.groups = user.groups;\n\n    await this.organizationUserService.putOrganizationUser(user.organizationId, user.id, request);\n  }\n\n  async invite(emails: string[], user: OrganizationUserAdminView): Promise<void> {\n    const request = new OrganizationUserInviteRequest();\n    request.emails = emails;\n    request.accessAll = user.accessAll;\n    request.permissions = user.permissions;\n    request.type = user.type;\n    request.collections = user.collections;\n    request.groups = user.groups;\n\n    await this.organizationUserService.postOrganizationUserInvite(user.organizationId, request);\n  }\n\n  private async decryptMany(\n    organizationId: string,\n    users: OrganizationUserDetailsResponse[]\n  ): Promise<OrganizationUserAdminView[]> {\n    const promises = users.map(async (u) => {\n      const view = new OrganizationUserAdminView();\n\n      view.id = u.id;\n      view.organizationId = organizationId;\n      view.userId = u.userId;\n      view.type = u.type;\n      view.status = u.status;\n      view.accessAll = u.accessAll;\n      view.permissions = u.permissions;\n      view.resetPasswordEnrolled = u.resetPasswordEnrolled;\n      view.collections = u.collections.map((c) => ({\n        id: c.id,\n        hidePasswords: c.hidePasswords,\n        readOnly: c.readOnly,\n      }));\n      view.groups = u.groups;\n\n      return view;\n    });\n\n    return await Promise.all(promises);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { CollectionRequest } from \"@bitwarden/common/models/request/collection.request\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\nimport {\n  CollectionAccessDetailsResponse,\n  CollectionResponse,\n} from \"@bitwarden/common/models/response/collection.response\";\n\nimport { CoreOrganizationModule } from \"../core-organization.module\";\nimport { CollectionAdminView } from \"../views/collection-admin.view\";\n\n@Injectable({ providedIn: CoreOrganizationModule })\nexport class CollectionAdminService {\n  constructor(private apiService: ApiService, private cryptoService: CryptoService) {}\n\n  async getAll(organizationId: string): Promise<CollectionAdminView[]> {\n    const collectionResponse = await this.apiService.getManyCollectionsWithAccessDetails(\n      organizationId\n    );\n\n    if (collectionResponse?.data == null || collectionResponse.data.length === 0) {\n      return [];\n    }\n\n    return await this.decryptMany(organizationId, collectionResponse.data);\n  }\n\n  async get(\n    organizationId: string,\n    collectionId: string\n  ): Promise<CollectionAdminView | undefined> {\n    const collectionResponse = await this.apiService.getCollectionAccessDetails(\n      organizationId,\n      collectionId\n    );\n\n    if (collectionResponse == null) {\n      return undefined;\n    }\n\n    const [view] = await this.decryptMany(organizationId, [collectionResponse]);\n\n    return view;\n  }\n\n  async save(collection: CollectionAdminView): Promise<unknown> {\n    const request = await this.encrypt(collection);\n\n    let response: CollectionResponse;\n    if (collection.id == null) {\n      response = await this.apiService.postCollection(collection.organizationId, request);\n      collection.id = response.id;\n    } else {\n      response = await this.apiService.putCollection(\n        collection.organizationId,\n        collection.id,\n        request\n      );\n    }\n\n    // TODO: Implement upsert when in PS-1083: Collection Service refactors\n    // await this.collectionService.upsert(data);\n    return;\n  }\n\n  async delete(organizationId: string, collectionId: string): Promise<void> {\n    await this.apiService.deleteCollection(organizationId, collectionId);\n  }\n\n  private async decryptMany(\n    organizationId: string,\n    collections: CollectionResponse[] | CollectionAccessDetailsResponse[]\n  ): Promise<CollectionAdminView[]> {\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n\n    const promises = collections.map(async (c) => {\n      const view = new CollectionAdminView();\n      view.id = c.id;\n      view.name = await this.cryptoService.decryptToUtf8(new EncString(c.name), orgKey);\n      view.externalId = c.externalId;\n      view.organizationId = c.organizationId;\n\n      if (isCollectionAccessDetailsResponse(c)) {\n        view.groups = c.groups;\n        view.users = c.users;\n      }\n\n      return view;\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async encrypt(model: CollectionAdminView): Promise<CollectionRequest> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new CollectionRequest();\n    collection.externalId = model.externalId;\n    collection.name = (await this.cryptoService.encrypt(model.name, key)).encryptedString;\n    collection.groups = model.groups.map(\n      (group) => new SelectionReadOnlyRequest(group.id, group.readOnly, group.hidePasswords)\n    );\n    collection.users = model.users.map(\n      (user) => new SelectionReadOnlyRequest(user.id, user.readOnly, user.hidePasswords)\n    );\n    return collection;\n  }\n}\n\nfunction isCollectionAccessDetailsResponse(\n  response: CollectionResponse | CollectionAccessDetailsResponse\n): response is CollectionAccessDetailsResponse {\n  const anyResponse = response as any;\n\n  return anyResponse?.groups instanceof Array && anyResponse?.users instanceof Array;\n}\n","import { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\n\nexport class GroupRequest {\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n  collections: SelectionReadOnlyRequest[] = [];\n  users: string[] = [];\n}\n","export class OrganizationGroupBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\n\nimport { CoreOrganizationModule } from \"../../core-organization.module\";\nimport { GroupView } from \"../../views/group.view\";\n\nimport { GroupRequest } from \"./requests/group.request\";\nimport { OrganizationGroupBulkRequest } from \"./requests/organization-group-bulk.request\";\nimport { GroupDetailsResponse, GroupResponse } from \"./responses/group.response\";\n\n@Injectable({ providedIn: CoreOrganizationModule })\nexport class GroupService {\n  constructor(private apiService: ApiService) {}\n\n  async delete(orgId: string, groupId: string): Promise<void> {\n    await this.apiService.send(\n      \"DELETE\",\n      \"/organizations/\" + orgId + \"/groups/\" + groupId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteMany(orgId: string, groupIds: string[]): Promise<GroupView[]> {\n    const request = new OrganizationGroupBulkRequest(groupIds);\n\n    const r = await this.apiService.send(\n      \"DELETE\",\n      \"/organizations/\" + orgId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    const listResponse = new ListResponse(r, GroupResponse);\n\n    return listResponse.data?.map((gr) => GroupView.fromResponse(gr)) ?? [];\n  }\n\n  async get(orgId: string, groupId: string): Promise<GroupView> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + orgId + \"/groups/\" + groupId + \"/details\",\n      null,\n      true,\n      true\n    );\n\n    return GroupView.fromResponse(new GroupDetailsResponse(r));\n  }\n\n  async getAll(orgId: string): Promise<GroupView[]> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + orgId + \"/groups\",\n      null,\n      true,\n      true\n    );\n\n    const listResponse = new ListResponse(r, GroupDetailsResponse);\n\n    return listResponse.data?.map((gr) => GroupView.fromResponse(gr)) ?? [];\n  }\n\n  async save(group: GroupView): Promise<GroupView> {\n    const request = new GroupRequest();\n    request.name = group.name;\n    request.externalId = group.externalId;\n    request.accessAll = group.accessAll;\n    request.users = group.members;\n    request.collections = group.collections.map(\n      (c) => new SelectionReadOnlyRequest(c.id, c.readOnly, c.hidePasswords)\n    );\n\n    if (group.id == undefined) {\n      return await this.postGroup(group.organizationId, request);\n    } else {\n      return await this.putGroup(group.organizationId, group.id, request);\n    }\n  }\n\n  private async postGroup(organizationId: string, request: GroupRequest): Promise<GroupView> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return GroupView.fromResponse(new GroupResponse(r));\n  }\n\n  private async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupView> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return GroupView.fromResponse(new GroupResponse(r));\n  }\n}\n","import { BaseResponse } from \"@bitwarden/common/models/response/base.response\";\nimport { SelectionReadOnlyResponse } from \"@bitwarden/common/models/response/selection-read-only.response\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { View } from \"@bitwarden/common/models/view/view\";\n\ninterface SelectionResponseLike {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n}\n\nexport class CollectionAccessSelectionView extends View {\n  readonly id: string;\n  readonly readOnly: boolean;\n  readonly hidePasswords: boolean;\n\n  constructor(response?: SelectionResponseLike) {\n    super();\n\n    if (!response) {\n      return;\n    }\n\n    this.id = response.id;\n    this.readOnly = response.readOnly;\n    this.hidePasswords = response.hidePasswords;\n  }\n}\n","import { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { CollectionAccessDetailsResponse } from \"@bitwarden/common/src/models/response/collection.response\";\n\nimport { CollectionAccessSelectionView } from \"./collection-access-selection.view\";\n\nexport class CollectionAdminView extends CollectionView {\n  groups: CollectionAccessSelectionView[] = [];\n  users: CollectionAccessSelectionView[] = [];\n\n  constructor(response?: CollectionAccessDetailsResponse) {\n    super(response);\n\n    if (!response) {\n      return;\n    }\n\n    this.groups = response.groups\n      ? response.groups.map((g) => new CollectionAccessSelectionView(g))\n      : [];\n\n    this.users = response.users\n      ? response.users.map((g) => new CollectionAccessSelectionView(g))\n      : [];\n  }\n}\n","import { View } from \"@bitwarden/common/src/models/view/view\";\n\nimport { GroupDetailsResponse, GroupResponse } from \"../services/group/responses/group.response\";\n\nimport { CollectionAccessSelectionView } from \"./collection-access-selection.view\";\n\nexport class GroupView implements View {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n  collections: CollectionAccessSelectionView[] = [];\n  members: string[] = [];\n\n  static fromResponse(response: GroupResponse): GroupView {\n    const view: GroupView = Object.assign(new GroupView(), response) as GroupView;\n\n    if (response instanceof GroupDetailsResponse && response.collections != undefined) {\n      view.collections = response.collections.map((c) => new CollectionAccessSelectionView(c));\n    }\n\n    return view;\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { OrganizationInformationComponent } from \"./organization-information.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [OrganizationInformationComponent],\n  exports: [OrganizationInformationComponent],\n})\nexport class OrganizationCreateModule {}\n","<form #form [formGroup]=\"formGroup\" *ngIf=\"nameOnly\">\n  <bit-form-field>\n    <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"name\" />\n  </bit-form-field>\n</form>\n<form #form [formGroup]=\"formGroup\" *ngIf=\"!nameOnly\">\n  <h2>{{ \"generalInformation\" | i18n }}</h2>\n  <div class=\"tw-flex tw-w-full tw-space-x-4\" *ngIf=\"createOrganization\">\n    <bit-form-field class=\"tw-w-1/2\">\n      <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n      <input bitInput type=\"text\" formControlName=\"name\" />\n    </bit-form-field>\n    <bit-form-field class=\"tw-w-1/2\">\n      <bit-label>{{ \"billingEmail\" | i18n }}</bit-label>\n      <input bitInput type=\"email\" formControlName=\"billingEmail\" />\n    </bit-form-field>\n    <bit-form-field class=\"tw-w-1/2\" *ngIf=\"isProvider\">\n      <bit-label>{{ \"clientOwnerEmail\" | i18n }}</bit-label>\n      <input bitInput type=\"email\" formControlName=\"clientOwnerEmail\" />\n    </bit-form-field>\n  </div>\n  <div *ngIf=\"!isProvider && !acceptingSponsorship\">\n    <input\n      type=\"checkbox\"\n      name=\"businessOwned\"\n      formControlName=\"businessOwned\"\n      (change)=\"changedBusinessOwned.emit()\"\n    />\n    <bit-label for=\"businessOwned\" class=\"tw-mb-3\">{{ \"accountOwnedBusiness\" | i18n }}</bit-label>\n    <div class=\"tw-mt-4\" *ngIf=\"formGroup.controls['businessOwned'].value\">\n      <bit-form-field class=\"tw-w-1/2\">\n        <bit-label>{{ \"businessName\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"businessName\" />\n      </bit-form-field>\n    </div>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { UntypedFormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-org-info\",\n  templateUrl: \"organization-information.component.html\",\n})\nexport class OrganizationInformationComponent {\n  @Input() nameOnly = false;\n  @Input() createOrganization = true;\n  @Input() isProvider = false;\n  @Input() acceptingSponsorship = false;\n  @Input() formGroup: UntypedFormGroup;\n  @Output() changedBusinessOwned = new EventEmitter<void>();\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport {\n  canAccessOrgAdmin,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OrganizationPermissionsGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private organizationService: OrganizationService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private syncService: SyncService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    // TODO: We need to fix this issue once and for all.\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n\n    const org = this.organizationService.get(route.params.organizationId);\n    if (org == null) {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    if (!org.isOwner && !org.enabled) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"organizationIsDisabled\")\n      );\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    const permissionsCallback: (organization: Organization) => boolean =\n      route.data?.organizationPermissions;\n    const hasPermissions = permissionsCallback == null || permissionsCallback(org);\n\n    if (!hasPermissions) {\n      // Handle linkable ciphers for organizations the user only has view access to\n      // https://bitwarden.atlassian.net/browse/EC-203\n      const cipherId =\n        state.root.queryParamMap.get(\"itemId\") || state.root.queryParamMap.get(\"cipherId\");\n      if (cipherId) {\n        return this.router.createUrlTree([\"/vault\"], {\n          queryParams: {\n            itemId: cipherId,\n          },\n        });\n      }\n\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"accessDenied\"));\n      return canAccessOrgAdmin(org)\n        ? this.router.createUrlTree([\"/organizations\", org.id])\n        : this.router.createUrlTree([\"/\"]);\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport {\n  canAccessOrgAdmin,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OrganizationRedirectGuard implements CanActivate {\n  constructor(private router: Router, private organizationService: OrganizationService) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const org = this.organizationService.get(route.params.organizationId);\n\n    const customRedirect = route.data?.autoRedirectCallback;\n    if (customRedirect) {\n      let redirectPath = customRedirect(org);\n      if (typeof redirectPath === \"string\") {\n        redirectPath = [redirectPath];\n      }\n      return this.router.createUrlTree([state.url, ...redirectPath]);\n    }\n\n    if (canAccessOrgAdmin(org)) {\n      return this.router.createUrlTree([\"/organizations\", org.id]);\n    }\n    return this.router.createUrlTree([\"/\"]);\n  }\n}\n","<div *ngIf=\"loaded && activeOrganization != null\" class=\"tw-flex\">\n  <button\n    class=\"tw-flex tw-items-center tw-border-none tw-bg-background-alt\"\n    type=\"button\"\n    id=\"pickerButton\"\n    [appA11yTitle]=\"'organizationPicker' | i18n\"\n    [bitMenuTriggerFor]=\"orgPickerMenu\"\n  >\n    <bit-avatar [text]=\"activeOrganization.name\" [id]=\"activeOrganization.id\"></bit-avatar>\n    <div class=\"tw-flex\">\n      <div class=\"org-name tw-ml-3\">\n        <span>{{ activeOrganization.name }}</span>\n        <small class=\"tw-text-muted\">{{ \"organization\" | i18n }}</small>\n      </div>\n      <div class=\"tw-ml-3\">\n        <i class=\"bwi bwi-angle-down tw-text-main\" aria-hidden=\"true\"></i>\n      </div>\n    </div>\n  </button>\n  <div>\n    <div\n      class=\"tw-ml-3 tw-rounded tw-border tw-border-solid tw-border-danger-500 tw-text-danger\"\n      *ngIf=\"!activeOrganization.enabled\"\n    >\n      <div class=\"tw-py-2 tw-px-5\">\n        <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n        {{ \"organizationIsDisabled\" | i18n }}\n      </div>\n    </div>\n    <div\n      class=\"tw-ml-3 tw-rounded tw-border tw-border-solid tw-border-info-500 tw-text-info\"\n      *ngIf=\"activeOrganization.isProviderUser\"\n    >\n      <div class=\"tw-py-2 tw-px-5\">\n        <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n        {{ \"accessingUsingProvider\" | i18n: activeOrganization.providerName }}\n      </div>\n    </div>\n  </div>\n\n  <bit-menu #orgPickerMenu>\n    <ul aria-labelledby=\"pickerButton\" class=\"tw-m-0 tw-p-0\">\n      <li\n        *ngFor=\"let org of organizations$ | async\"\n        class=\"tw-flex tw-list-none tw-flex-col\"\n        role=\"none\"\n      >\n        <a bitMenuItem [routerLink]=\"['/organizations', org.id]\">\n          <i\n            class=\"bwi bwi-check mr-2\"\n            [ngClass]=\"org.id === activeOrganization.id ? 'visible' : 'invisible'\"\n          >\n            <span class=\"tw-sr-only\">{{ \"currentOrganization\" | i18n }}</span>\n          </i>\n          {{ org.name }}\n        </a>\n      </li>\n      <bit-menu-divider></bit-menu-divider>\n      <li class=\"tw-list-none\" role=\"none\">\n        <a bitMenuItem routerLink=\"/create-organization\">\n          <i class=\"bwi bwi-plus mr-2\"></i>\n          {{ \"newOrganization\" | i18n }}</a\n        >\n      </li>\n    </ul>\n  </bit-menu>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport {\n  canAccessAdmin,\n  isNotProviderUser,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-organization-switcher\",\n  templateUrl: \"organization-switcher.component.html\",\n})\nexport class OrganizationSwitcherComponent implements OnInit {\n  constructor(private organizationService: OrganizationService, private i18nService: I18nService) {}\n\n  @Input() activeOrganization: Organization = null;\n  organizations$: Observable<Organization[]>;\n\n  loaded = false;\n\n  async ngOnInit() {\n    this.organizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter(isNotProviderUser)),\n      canAccessAdmin(this.i18nService),\n      map((orgs) => orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")))\n    );\n\n    this.loaded = true;\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav !tw-h-32\" *ngIf=\"organization$ | async as organization\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <app-organization-switcher\n        class=\"my-auto pl-1\"\n        [activeOrganization]=\"organization\"\n      ></app-organization-switcher>\n      <bit-tab-nav-bar class=\"-tw-mb-px\">\n        <bit-tab-link *ngIf=\"canShowVaultTab(organization)\" route=\"vault\">{{\n          \"vault\" | i18n\n        }}</bit-tab-link>\n        <bit-tab-link *ngIf=\"canShowMembersTab(organization)\" route=\"members\">{{\n          \"members\" | i18n\n        }}</bit-tab-link>\n        <bit-tab-link *ngIf=\"canShowGroupsTab(organization)\" route=\"groups\">{{\n          \"groups\" | i18n\n        }}</bit-tab-link>\n        <bit-tab-link *ngIf=\"canShowReportsTab(organization)\" route=\"reporting\">\n          {{ getReportTabLabel(organization) | i18n }}\n        </bit-tab-link>\n        <bit-tab-link *ngIf=\"canShowBillingTab(organization)\" route=\"billing\">{{\n          \"billing\" | i18n\n        }}</bit-tab-link>\n        <bit-tab-link *ngIf=\"canShowSettingsTab(organization)\" route=\"settings\">{{\n          \"settings\" | i18n\n        }}</bit-tab-link>\n      </bit-tab-nav-bar>\n    </div>\n  </div>\n</div>\n\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { map, mergeMap, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport {\n  canAccessBillingTab,\n  canAccessGroupsTab,\n  canAccessMembersTab,\n  canAccessReportingTab,\n  canAccessSettingsTab,\n  canAccessVaultTab,\n  getOrganizationById,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-organization-layout\",\n  templateUrl: \"organization-layout.component.html\",\n})\nexport class OrganizationLayoutComponent implements OnInit, OnDestroy {\n  organization$: Observable<Organization>;\n\n  private _destroy = new Subject<void>();\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n\n    this.organization$ = this.route.params\n      .pipe(takeUntil(this._destroy))\n      .pipe<string>(map((p) => p.organizationId))\n      .pipe(\n        mergeMap((id) => {\n          return this.organizationService.organizations$\n            .pipe(takeUntil(this._destroy))\n            .pipe(getOrganizationById(id));\n        })\n      );\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  canShowVaultTab(organization: Organization): boolean {\n    return canAccessVaultTab(organization);\n  }\n\n  canShowSettingsTab(organization: Organization): boolean {\n    return canAccessSettingsTab(organization);\n  }\n\n  canShowMembersTab(organization: Organization): boolean {\n    return canAccessMembersTab(organization);\n  }\n\n  canShowGroupsTab(organization: Organization): boolean {\n    return canAccessGroupsTab(organization);\n  }\n\n  canShowReportsTab(organization: Organization): boolean {\n    return canAccessReportingTab(organization);\n  }\n\n  canShowBillingTab(organization: Organization): boolean {\n    return canAccessBillingTab(organization);\n  }\n\n  getReportTabLabel(organization: Organization): string {\n    return organization.useEvents ? \"reporting\" : \"reports\";\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"eventLogsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"eventLogsTitle\">\n          {{ \"eventLogs\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loaded\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loaded\">\n        <div class=\"d-flex\">\n          <div class=\"form-inline\">\n            <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"start\"\n              placeholder=\"{{ 'startDate' | i18n }}\"\n              [(ngModel)]=\"start\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n            <span class=\"mx-2\">-</span>\n            <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"end\"\n              placeholder=\"{{ 'endDate' | i18n }}\"\n              [(ngModel)]=\"end\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n          </div>\n          <button\n            #refreshBtn\n            [appApiAction]=\"refreshPromise\"\n            type=\"button\"\n            class=\"btn btn-sm btn-outline-primary ml-3\"\n            (click)=\"loadEvents(true)\"\n            [disabled]=\"loaded && $any(refreshBtn).loading\"\n          >\n            <i\n              class=\"bwi bwi-refresh bwi-fw\"\n              [ngClass]=\"{ 'bwi-spin': loaded && $any(refreshBtn).loading }\"\n              aria-hidden=\"true\"\n            ></i>\n            {{ \"refresh\" | i18n }}\n          </button>\n        </div>\n        <hr />\n        <div *ngIf=\"!events || !events.length\">\n          {{ \"noEventsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover mb-0\" *ngIf=\"events && events.length\">\n          <thead>\n            <tr>\n              <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n              <th class=\"border-top-0\" width=\"40\">\n                <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n              </th>\n              <th class=\"border-top-0\" width=\"150\" *ngIf=\"showUser\">{{ \"user\" | i18n }}</th>\n              <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let e of events\">\n              <td>{{ e.date | date: \"medium\" }}</td>\n              <td>\n                <i\n                  class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n                  title=\"{{ e.appName }}, {{ e.ip }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n              </td>\n              <td *ngIf=\"showUser\">\n                <span appA11yTitle=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n              </td>\n              <td [innerHTML]=\"e.message\"></td>\n            </tr>\n          </tbody>\n        </table>\n        <button\n          #moreBtn\n          [appApiAction]=\"morePromise\"\n          type=\"button\"\n          class=\"btn btn-block btn-link btn-submit\"\n          (click)=\"loadEvents(false)\"\n          [disabled]=\"loaded && $any(moreBtn).loading\"\n          *ngIf=\"continuationToken\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"loadMore\" | i18n }}</span>\n        </button>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/event.response\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\n\nimport { EventService } from \"../../core\";\n\n@Component({\n  selector: \"app-entity-events\",\n  templateUrl: \"entity-events.component.html\",\n})\nexport class EntityEventsComponent implements OnInit {\n  @Input() name: string;\n  @Input() entity: \"user\" | \"cipher\";\n  @Input() entityId: string;\n  @Input() organizationId: string;\n  @Input() providerId: string;\n  @Input() showUser = false;\n\n  loading = true;\n  loaded = false;\n  events: any[];\n  start: string;\n  end: string;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n  private orgUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private eventService: EventService,\n    private platformUtilsService: PlatformUtilsService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService,\n    private organizationUserService: OrganizationUserService\n  ) {}\n\n  async ngOnInit() {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n    await this.load();\n  }\n\n  async load() {\n    if (this.showUser) {\n      const response = await this.organizationUserService.getAllUsers(this.organizationId);\n      response.data.forEach((u) => {\n        const name = this.userNamePipe.transform(u);\n        this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n        this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n      });\n    }\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.refreshPromise != null || this.morePromise != null) {\n      return;\n    }\n\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return;\n    }\n\n    this.loading = true;\n    let response: ListResponse<EventResponse>;\n    try {\n      let promise: Promise<any>;\n      if (this.entity === \"user\" && this.providerId) {\n        promise = this.apiService.getEventsProviderUser(\n          this.providerId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else if (this.entity === \"user\") {\n        promise = this.apiService.getEventsOrganizationUser(\n          this.organizationId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else {\n        promise = this.apiService.getEventsCipher(\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      }\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      response = await promise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.continuationToken = response.continuationToken;\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user =\n          this.showUser && userId != null && this.orgUsersUserIdMap.has(userId)\n            ? this.orgUsersUserIdMap.get(userId)\n            : null;\n        return {\n          message: eventInfo.message,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: user != null ? user.name : this.showUser ? this.i18nService.t(\"unknown\") : null,\n          userEmail: user != null ? user.email : this.showUser ? \"\" : null,\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n        };\n      })\n    );\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n}\n","<bit-simple-dialog>\n  <i\n    bit-dialog-icon\n    class=\"bwi bwi-business tw-text-5xl tw-text-primary-500\"\n    aria-hidden=\"true\"\n  ></i>\n  <span bitDialogTitle class=\"font-bold\">{{ \"upgradeOrganization\" | i18n }}</span>\n  <span bitDialogContent>\n    {{ data.dialogBodyText }}\n  </span>\n  <div bitDialogFooter class=\"tw-flex tw-flex-row tw-gap-2\">\n    <ng-container *ngIf=\"data.orgCanManageBilling\">\n      <button\n        bitButton\n        buttonType=\"primary\"\n        [routerLink]=\"['/organizations', data.orgId, 'billing', 'subscription']\"\n        [queryParams]=\"{ upgrade: true }\"\n        (click)=\"dialogRef.close()\"\n      >\n        {{ \"upgrade\" | i18n }}\n      </button>\n      <button bitButton buttonType=\"secondary\" (click)=\"dialogRef.close()\">\n        {{ \"cancel\" | i18n }}\n      </button>\n    </ng-container>\n\n    <ng-container *ngIf=\"!data.orgCanManageBilling\">\n      <button bitButton buttonType=\"primary\" (click)=\"dialogRef.close()\">\n        {{ \"ok\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n</bit-simple-dialog>\n","import { DialogRef, DIALOG_DATA } from \"@angular/cdk/dialog\";\nimport { Component, Inject } from \"@angular/core\";\n\nexport interface OrgUpgradeDialogData {\n  orgId: string;\n  orgCanManageBilling: boolean;\n  dialogBodyText: string;\n}\n\n@Component({\n  selector: \"app-org-upgrade-dialog\",\n  templateUrl: \"org-upgrade-dialog.component.html\",\n})\nexport class OrgUpgradeDialogComponent {\n  constructor(\n    public dialogRef: DialogRef,\n    @Inject(DIALOG_DATA) public data: OrgUpgradeDialogData\n  ) {}\n}\n","type OrganizationUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class OrganizationUserBulkConfirmRequest {\n  keys: OrganizationUserBulkRequestEntry[];\n\n  constructor(keys: OrganizationUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"confirmUsers\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <app-callout type=\"danger\" *ngIf=\"filteredUsers.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!loading && !done\">\n          <p>\n            {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n            <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n              {{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"fingerprint\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ fingerprints.get(user.id) }}\n              </td>\n            </tr>\n            <tr *ngFor=\"let user of excludedUsers\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td>\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"!loading && done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of filteredUsers\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserBulkConfirmRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-confirm\",\n  templateUrl: \"bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent implements OnInit {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  excludedUsers: BulkUserDetails[];\n  filteredUsers: BulkUserDetails[];\n  publicKeys: Map<string, Uint8Array> = new Map();\n  fingerprints: Map<string, string> = new Map();\n  statuses: Map<string, string> = new Map();\n\n  loading = true;\n  done = false;\n  error: string;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    private organizationUserService: OrganizationUserService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    this.excludedUsers = this.users.filter((u) => !this.isAccepted(u));\n    this.filteredUsers = this.users.filter((u) => this.isAccepted(u));\n\n    if (this.filteredUsers.length <= 0) {\n      this.done = true;\n    }\n\n    const response = await this.getPublicKeys();\n\n    for (const entry of response.data) {\n      const publicKey = Utils.fromB64ToArray(entry.key);\n      const fingerprint = await this.cryptoService.getFingerprint(entry.userId, publicKey.buffer);\n      if (fingerprint != null) {\n        this.publicKeys.set(entry.id, publicKey);\n        this.fingerprints.set(entry.id, fingerprint.join(\"-\"));\n      }\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.loading = true;\n    try {\n      const key = await this.getCryptoKey();\n      const userIdsWithKeys: any[] = [];\n      for (const user of this.filteredUsers) {\n        const publicKey = this.publicKeys.get(user.id);\n        if (publicKey == null) {\n          continue;\n        }\n        const encryptedKey = await this.cryptoService.rsaEncrypt(key.key, publicKey.buffer);\n        userIdsWithKeys.push({\n          id: user.id,\n          key: encryptedKey.encryptedString,\n        });\n      }\n      const response = await this.postConfirmRequest(userIdsWithKeys);\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkConfirmMessage\");\n        this.statuses.set(entry.id, error);\n      });\n\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n    this.loading = false;\n  }\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === OrganizationUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    return await this.organizationUserService.postOrganizationUsersPublicKey(\n      this.organizationId,\n      this.filteredUsers.map((user) => user.id)\n    );\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getOrgKey(this.organizationId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new OrganizationUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.organizationUserService.postOrganizationUserBulkConfirm(\n      this.organizationId,\n      request\n    );\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"removeUsers\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"danger\" *ngIf=\"users.length <= 0\">\n          {{ \"noSelectedUsersApplicable\" | i18n }}\n        </app-callout>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <ng-container *ngIf=\"!done\">\n          <app-callout type=\"warning\" *ngIf=\"users.length > 0 && !error\">\n            {{ removeUsersWarning }}\n          </app-callout>\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n        <ng-container *ngIf=\"done\">\n          <table class=\"table table-hover table-list\">\n            <thead>\n              <tr>\n                <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n                <th>{{ \"status\" | i18n }}</th>\n              </tr>\n            </thead>\n            <tr *ngFor=\"let user of users\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"user | userName\" [id]=\"user.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ user.email }}\n                <small class=\"text-muted d-block\" *ngIf=\"user.name\">{{ user.name }}</small>\n              </td>\n              <td *ngIf=\"statuses.has(user.id)\">\n                {{ statuses.get(user.id) }}\n              </td>\n              <td *ngIf=\"!statuses.has(user.id)\">\n                {{ \"bulkFilteredMessage\" | i18n }}\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          *ngIf=\"!done && users.length > 0\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"removeUsers\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\n\nimport { BulkUserDetails } from \"./bulk-status.component\";\n\n@Component({\n  selector: \"app-bulk-remove\",\n  templateUrl: \"bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent {\n  @Input() organizationId: string;\n  @Input() users: BulkUserDetails[];\n\n  statuses: Map<string, string> = new Map();\n\n  loading = false;\n  done = false;\n  error: string;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    private organizationUserService: OrganizationUserService\n  ) {}\n\n  async submit() {\n    this.loading = true;\n    try {\n      const response = await this.deleteUsers();\n\n      response.data.forEach((entry) => {\n        const error = entry.error !== \"\" ? entry.error : this.i18nService.t(\"bulkRemovedMessage\");\n        this.statuses.set(entry.id, error);\n      });\n      this.done = true;\n    } catch (e) {\n      this.error = e.message;\n    }\n\n    this.loading = false;\n  }\n\n  protected async deleteUsers() {\n    return await this.organizationUserService.deleteManyOrganizationUsers(\n      this.organizationId,\n      this.users.map((user) => user.id)\n    );\n  }\n\n  protected get removeUsersWarning() {\n    return this.i18nService.t(\"removeOrgUsersConfirmation\");\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"bulkTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"bulkTitle\">\n          {{ \"bulkConfirmStatus\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">{{ \"user\" | i18n }}</th>\n              <th>{{ \"status\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tr *ngFor=\"let item of users\">\n            <td width=\"30\">\n              <bit-avatar\n                [text]=\"item.user | userName\"\n                [id]=\"item.user.id\"\n                size=\"small\"\n              ></bit-avatar>\n            </td>\n            <td>\n              {{ item.user.email }}\n              <small class=\"text-muted d-block\" *ngIf=\"item.user.name\">{{ item.user.name }}</small>\n            </td>\n            <td class=\"text-danger\" *ngIf=\"item.error\">\n              {{ item.message }}\n            </td>\n            <td *ngIf=\"!item.error\">\n              {{ item.message }}\n            </td>\n          </tr>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\n\nexport interface BulkUserDetails {\n  id: string;\n  name: string;\n  email: string;\n  status: OrganizationUserStatusType | ProviderUserStatusType;\n}\n\ntype BulkStatusEntry = {\n  user: BulkUserDetails;\n  error: boolean;\n  message: string;\n};\n\n@Component({\n  selector: \"app-bulk-status\",\n  templateUrl: \"bulk-status.component.html\",\n})\nexport class BulkStatusComponent {\n  users: BulkStatusEntry[];\n  loading = false;\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nexport class PolicyRequest {\n  type: PolicyType;\n  enabled: boolean;\n  data: any;\n}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\nexport abstract class BasePolicy {\n  abstract name: string;\n  abstract description: string;\n  abstract type: PolicyType;\n  abstract component: any;\n\n  display(organization: Organization) {\n    return true;\n  }\n}\n\n@Directive()\nexport abstract class BasePolicyComponent implements OnInit {\n  @Input() policyResponse: PolicyResponse;\n  @Input() policy: BasePolicy;\n\n  enabled = new UntypedFormControl(false);\n  data: UntypedFormGroup = null;\n\n  ngOnInit(): void {\n    this.enabled.setValue(this.policyResponse.enabled);\n\n    if (this.policyResponse.data != null) {\n      this.loadData();\n    }\n  }\n\n  loadData() {\n    this.data.patchValue(this.policyResponse.data ?? {});\n  }\n\n  buildRequestData() {\n    if (this.data != null) {\n      return this.data.value;\n    }\n\n    return null;\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>) {\n    const request = new PolicyRequest();\n    request.enabled = this.enabled.value;\n    request.type = this.policy.type;\n    request.data = this.buildRequestData();\n\n    return Promise.resolve(request);\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\n\nimport { DisableSendPolicyComponent } from \"./disable-send.component\";\nimport { MasterPasswordPolicyComponent } from \"./master-password.component\";\nimport { PasswordGeneratorPolicyComponent } from \"./password-generator.component\";\nimport { PersonalOwnershipPolicyComponent } from \"./personal-ownership.component\";\nimport { PoliciesComponent } from \"./policies.component\";\nimport { PolicyEditComponent } from \"./policy-edit.component\";\nimport { RequireSsoPolicyComponent } from \"./require-sso.component\";\nimport { ResetPasswordPolicyComponent } from \"./reset-password.component\";\nimport { SendOptionsPolicyComponent } from \"./send-options.component\";\nimport { SingleOrgPolicyComponent } from \"./single-org.component\";\nimport { TwoFactorAuthenticationPolicyComponent } from \"./two-factor-authentication.component\";\n\n@NgModule({\n  imports: [SharedModule, LooseComponentsModule],\n  declarations: [\n    DisableSendPolicyComponent,\n    MasterPasswordPolicyComponent,\n    PasswordGeneratorPolicyComponent,\n    PersonalOwnershipPolicyComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    SendOptionsPolicyComponent,\n    SingleOrgPolicyComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    PoliciesComponent,\n    PolicyEditComponent,\n  ],\n  exports: [\n    DisableSendPolicyComponent,\n    MasterPasswordPolicyComponent,\n    PasswordGeneratorPolicyComponent,\n    PersonalOwnershipPolicyComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    SendOptionsPolicyComponent,\n    SingleOrgPolicyComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    PoliciesComponent,\n    PolicyEditComponent,\n  ],\n})\nexport class PoliciesModule {}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class DisableSendPolicy extends BasePolicy {\n  name = \"disableSend\";\n  description = \"disableSendPolicyDesc\";\n  type = PolicyType.DisableSend;\n  component = DisableSendPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-send\",\n  templateUrl: \"disable-send.component.html\",\n})\nexport class DisableSendPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"disableSendExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minComplexity\">{{ \"minComplexityScore\" | i18n }}</label>\n      <select\n        id=\"minComplexity\"\n        name=\"minComplexity\"\n        formControlName=\"minComplexity\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of passwordScores\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        min=\"8\"\n        name=\"minLength\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireUpper\"\n      name=\"requireUpper\"\n      formControlName=\"requireUpper\"\n    />\n    <label class=\"form-check-label\" for=\"requireUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireLower\"\n      name=\"requireLower\"\n      formControlName=\"requireLower\"\n    />\n    <label class=\"form-check-label\" for=\"requireLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireNumbers\"\n      name=\"requireNumbers\"\n      formControlName=\"requireNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"requireNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireSpecial\"\n      name=\"requireSpecial\"\n      formControlName=\"requireSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"requireSpecial\">!@#$%^&amp;*</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class MasterPasswordPolicy extends BasePolicy {\n  name = \"masterPassPolicyTitle\";\n  description = \"masterPassPolicyDesc\";\n  type = PolicyType.MasterPassword;\n  component = MasterPasswordPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-master-password\",\n  templateUrl: \"master-password.component.html\",\n})\nexport class MasterPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    minComplexity: [null],\n    minLength: [null],\n    requireUpper: [null],\n    requireLower: [null],\n    requireNumbers: [null],\n    requireSpecial: [null],\n  });\n\n  passwordScores: { name: string; value: number }[];\n  showKeyConnectorInfo = false;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    i18nService: I18nService,\n    private organizationService: OrganizationService\n  ) {\n    super();\n\n    this.passwordScores = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"weak\") + \" (0)\", value: 0 },\n      { name: i18nService.t(\"weak\") + \" (1)\", value: 1 },\n      { name: i18nService.t(\"weak\") + \" (2)\", value: 2 },\n      { name: i18nService.t(\"good\") + \" (3)\", value: 3 },\n      { name: i18nService.t(\"strong\") + \" (4)\", value: 4 },\n    ];\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group mb-0\">\n      <label for=\"defaultType\">{{ \"defaultType\" | i18n }}</label>\n      <select\n        id=\"defaultType\"\n        name=\"defaultType\"\n        formControlName=\"defaultType\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of defaultTypes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n  </div>\n  <h3 class=\"mt-4\">{{ \"password\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minLength\"\n        min=\"5\"\n        max=\"128\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumbers\">{{ \"minNumbers\" | i18n }}</label>\n      <input\n        id=\"minNumbers\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumbers\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minNumbers\"\n      />\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minSpecial\">{{ \"minSpecial\" | i18n }}</label>\n      <input\n        id=\"minSpecial\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minSpecial\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minSpecial\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useUpper\"\n      formControlName=\"useUpper\"\n      name=\"useUpper\"\n    />\n    <label class=\"form-check-label\" for=\"useUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useLower\"\n      name=\"useLower\"\n      formControlName=\"useLower\"\n    />\n    <label class=\"form-check-label\" for=\"useLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useNumbers\"\n      name=\"useNumbers\"\n      formControlName=\"useNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"useNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useSpecial\"\n      name=\"useSpecial\"\n      formControlName=\"useSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"useSpecial\">!@#$%^&amp;*</label>\n  </div>\n  <h3 class=\"mt-4\">{{ \"passphrase\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumberWords\">{{ \"minimumNumberOfWords\" | i18n }}</label>\n      <input\n        id=\"minNumberWords\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumberWords\"\n        min=\"3\"\n        max=\"20\"\n        formControlName=\"minNumberWords\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"capitalize\"\n      name=\"capitalize\"\n      formControlName=\"capitalize\"\n    />\n    <label class=\"form-check-label\" for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"includeNumber\"\n      name=\"includeNumber\"\n      formControlName=\"includeNumber\"\n    />\n    <label class=\"form-check-label\" for=\"includeNumber\">{{ \"includeNumber\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PasswordGeneratorPolicy extends BasePolicy {\n  name = \"passwordGenerator\";\n  description = \"passwordGeneratorPolicyDesc\";\n  type = PolicyType.PasswordGenerator;\n  component = PasswordGeneratorPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-password-generator\",\n  templateUrl: \"password-generator.component.html\",\n})\nexport class PasswordGeneratorPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    defaultType: [null],\n    minLength: [null],\n    useUpper: [null],\n    useLower: [null],\n    useNumbers: [null],\n    useSpecial: [null],\n    minNumbers: [null],\n    minSpecial: [null],\n    minNumberWords: [null],\n    capitalize: [null],\n    includeNumber: [null],\n  });\n\n  defaultTypes: { name: string; value: string }[];\n\n  constructor(private formBuilder: UntypedFormBuilder, i18nService: I18nService) {\n    super();\n\n    this.defaultTypes = [\n      { name: i18nService.t(\"userPreference\"), value: null },\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PersonalOwnershipPolicy extends BasePolicy {\n  name = \"personalOwnership\";\n  description = \"personalOwnershipPolicyDesc\";\n  type = PolicyType.PersonalOwnership;\n  component = PersonalOwnershipPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-personal-ownership\",\n  templateUrl: \"personal-ownership.component.html\",\n})\nexport class PersonalOwnershipPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"personalOwnershipExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class RequireSsoPolicy extends BasePolicy {\n  name = \"requireSso\";\n  description = \"requireSsoPolicyDesc\";\n  type = PolicyType.RequireSso;\n  component = RequireSsoPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useSso;\n  }\n}\n\n@Component({\n  selector: \"policy-require-sso\",\n  templateUrl: \"require-sso.component.html\",\n})\nexport class RequireSsoPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n<app-callout type=\"warning\">\n  {{ \"requireSsoExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<app-callout type=\"warning\">\n  {{ \"resetPasswordPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"resetPasswordPolicyAutoEnroll\" | i18n }}</h3>\n  <p>{{ \"resetPasswordPolicyAutoEnrollDescription\" | i18n }}</p>\n  <app-callout type=\"warning\">\n    {{ \"resetPasswordPolicyAutoEnrollWarning\" | i18n }}\n  </app-callout>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"autoEnrollEnabled\"\n      name=\"AutoEnrollEnabled\"\n      formControlName=\"autoEnrollEnabled\"\n    />\n    <label class=\"form-check-label\" for=\"autoEnrollEnabled\">\n      {{ \"resetPasswordPolicyAutoEnrollCheckbox\" | i18n }}\n    </label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class ResetPasswordPolicy extends BasePolicy {\n  name = \"resetPasswordPolicy\";\n  description = \"resetPasswordPolicyDescription\";\n  type = PolicyType.ResetPassword;\n  component = ResetPasswordPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useResetPassword;\n  }\n}\n\n@Component({\n  selector: \"policy-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    autoEnrollEnabled: false,\n  });\n\n  defaultTypes: { name: string; value: string }[];\n  showKeyConnectorInfo = false;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private organizationService: OrganizationService\n  ) {\n    super();\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SendOptionsPolicy extends BasePolicy {\n  name = \"sendOptions\";\n  description = \"sendOptionsPolicyDesc\";\n  type = PolicyType.SendOptions;\n  component = SendOptionsPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-send-options\",\n  templateUrl: \"send-options.component.html\",\n})\nexport class SendOptionsPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    disableHideEmail: false,\n  });\n\n  constructor(private formBuilder: UntypedFormBuilder) {\n    super();\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"sendOptionsExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"disableHideEmail\"\n      name=\"DisableHideEmail\"\n      formControlName=\"disableHideEmail\"\n    />\n    <label class=\"form-check-label\" for=\"disableHideEmail\">{{ \"disableHideEmail\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SingleOrgPolicy extends BasePolicy {\n  name = \"singleOrg\";\n  description = \"singleOrgDesc\";\n  type = PolicyType.SingleOrg;\n  component = SingleOrgPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-single-org\",\n  templateUrl: \"single-org.component.html\",\n})\nexport class SingleOrgPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    if (!this.enabled.value) {\n      if (policiesEnabledMap.get(PolicyType.RequireSso) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"requireSso\"))\n        );\n      }\n\n      if (policiesEnabledMap.get(PolicyType.MaximumVaultTimeout) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"maximumVaultTimeoutLabel\"))\n        );\n      }\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"singleOrgPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class TwoFactorAuthenticationPolicy extends BasePolicy {\n  name = \"twoStepLoginPolicyTitle\";\n  description = \"twoStepLoginPolicyDesc\";\n  type = PolicyType.TwoFactorAuthentication;\n  component = TwoFactorAuthenticationPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-two-factor-authentication\",\n  templateUrl: \"two-factor-authentication.component.html\",\n})\nexport class TwoFactorAuthenticationPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"twoStepLoginPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"policiesEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"policiesEditTitle\">\n          {{ \"editPolicy\" | i18n }} - {{ policy.name | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n\n      <div class=\"modal-body\">\n        <div class=\"modal-body\" *ngIf=\"loading\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div [hidden]=\"loading\">\n          <p>{{ policy.description | i18n }}</p>\n          <ng-template #policyForm></ng-template>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\nimport { BasePolicy, BasePolicyComponent } from \"../policies\";\n\n@Component({\n  selector: \"app-policy-edit\",\n  templateUrl: \"policy-edit.component.html\",\n})\nexport class PolicyEditComponent {\n  @Input() policy: BasePolicy;\n  @Input() organizationId: string;\n  @Input() policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n  @Output() onSavedPolicy = new EventEmitter();\n\n  @ViewChild(\"policyForm\", { read: ViewContainerRef, static: true })\n  policyFormRef: ViewContainerRef;\n\n  policyType = PolicyType;\n  loading = true;\n  enabled = false;\n  formPromise: Promise<any>;\n  defaultTypes: any[];\n  policyComponent: BasePolicyComponent;\n\n  private policyResponse: PolicyResponse;\n\n  constructor(\n    private policyApiService: PolicyApiServiceAbstraction,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private cdr: ChangeDetectorRef,\n    private logService: LogService\n  ) {}\n\n  async ngAfterViewInit() {\n    await this.load();\n    this.loading = false;\n\n    const factory = this.componentFactoryResolver.resolveComponentFactory(this.policy.component);\n    this.policyComponent = this.policyFormRef.createComponent(factory)\n      .instance as BasePolicyComponent;\n    this.policyComponent.policy = this.policy;\n    this.policyComponent.policyResponse = this.policyResponse;\n\n    this.cdr.detectChanges();\n  }\n\n  async load() {\n    try {\n      this.policyResponse = await this.policyApiService.getPolicy(\n        this.organizationId,\n        this.policy.type\n      );\n    } catch (e) {\n      if (e.statusCode === 404) {\n        this.policyResponse = new PolicyResponse({ Enabled: false });\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  async submit() {\n    let request: PolicyRequest;\n    try {\n      request = await this.policyComponent.buildRequest(this.policiesEnabledMap);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, e.message);\n      return;\n    }\n\n    try {\n      this.formPromise = this.policyApiService.putPolicy(\n        this.organizationId,\n        this.policy.type,\n        request\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedPolicyId\", this.i18nService.t(this.policy.name))\n      );\n      this.onSavedPolicy.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"policies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n  <tbody>\n    <tr *ngFor=\"let p of policies\">\n      <td *ngIf=\"p.display(organization)\">\n        <a href=\"#\" appStopClick (click)=\"edit(p)\">{{ p.name | i18n }}</a>\n        <span bitBadge badgeType=\"success\" *ngIf=\"policiesEnabledMap.get(p.type)\">{{\n          \"on\" | i18n\n        }}</span>\n        <small class=\"text-muted d-block\">{{ p.description | i18n }}</small>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<ng-template #editTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\nimport { PolicyListService } from \"../../core\";\nimport { BasePolicy } from \"../policies\";\n\nimport { PolicyEditComponent } from \"./policy-edit.component\";\n\n@Component({\n  selector: \"app-org-policies\",\n  templateUrl: \"policies.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PoliciesComponent implements OnInit {\n  @ViewChild(\"editTemplate\", { read: ViewContainerRef, static: true })\n  editModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  policies: BasePolicy[];\n  organization: Organization;\n\n  private orgPolicies: PolicyResponse[];\n  protected policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n\n  constructor(\n    private route: ActivatedRoute,\n    private modalService: ModalService,\n    private organizationService: OrganizationService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyListService: PolicyListService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.organization = await this.organizationService.get(this.organizationId);\n      this.policies = this.policyListService.getPolicies();\n\n      await this.load();\n\n      // Handle policies component launch from Event message\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        if (qParams.policyId != null) {\n          const policyIdFromEvents: string = qParams.policyId;\n          for (const orgPolicy of this.orgPolicies) {\n            if (orgPolicy.id === policyIdFromEvents) {\n              for (let i = 0; i < this.policies.length; i++) {\n                if (this.policies[i].type === orgPolicy.type) {\n                  this.edit(this.policies[i]);\n                  break;\n                }\n              }\n              break;\n            }\n          }\n        }\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.policyApiService.getPolicies(this.organizationId);\n    this.orgPolicies = response.data != null && response.data.length > 0 ? response.data : [];\n    this.orgPolicies.forEach((op) => {\n      this.policiesEnabledMap.set(op.type, op.enabled);\n    });\n\n    this.loading = false;\n  }\n\n  async edit(policy: BasePolicy) {\n    const [modal] = await this.modalService.openViewRef(\n      PolicyEditComponent,\n      this.editModalRef,\n      (comp) => {\n        comp.policy = policy;\n        comp.organizationId = this.organizationId;\n        comp.policiesEnabledMap = this.policiesEnabledMap;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedPolicy.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n}\n","import { OrganizationKeysRequest } from \"./organization-keys.request\";\n\nexport class OrganizationUpdateRequest {\n  name: string;\n  /**\n   * @deprecated 2022-08-03 Moved to OrganizationSsoRequest, left for backwards compatability.\n   * https://bitwarden.atlassian.net/browse/EC-489\n   */\n  identifier: string;\n  businessName: string;\n  billingEmail: string;\n  keys: OrganizationKeysRequest;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteOrganizationTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      *ngIf=\"loaded\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"deleteOrganizationTitle\">{{ \"deleteOrganization\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{\n          \"deletingOrganizationIsPermanentWarning\" | i18n: organizationName\n        }}</app-callout>\n        <p id=\"organizationDeleteDescription\">\n          <ng-container\n            *ngIf=\"\n              deleteOrganizationRequestType === 'InvalidFamiliesForEnterprise';\n              else regularDelete\n            \"\n          >\n            {{ \"orgCreatedSponsorshipInvalid\" | i18n }}\n          </ng-container>\n          <ng-template #regularDelete>\n            <ng-container *ngIf=\"organizationContentSummary.totalItemCount > 0\">\n              {{ \"deletingOrganizationContentWarning\" | i18n: organizationName }}\n              <ul>\n                <li *ngFor=\"let type of organizationContentSummary.itemCountByType\">\n                  {{ type.count }} {{ type.localizationKey | i18n }}\n                </li>\n              </ul>\n              {{ \"deletingOrganizationActiveUserAccountsWarning\" | i18n }}\n            </ng-container>\n          </ng-template>\n        </p>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteOrganization\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\nclass CountBasedLocalizationKey {\n  singular: string;\n  plural: string;\n\n  getKey(count: number) {\n    return count == 1 ? this.singular : this.plural;\n  }\n\n  constructor(singular: string, plural: string) {\n    this.singular = singular;\n    this.plural = plural;\n  }\n}\n\nclass OrganizationContentSummaryItem {\n  count: number;\n  get localizationKey(): string {\n    return this.localizationKeyOptions.getKey(this.count);\n  }\n  private localizationKeyOptions: CountBasedLocalizationKey;\n  constructor(count: number, localizationKeyOptions: CountBasedLocalizationKey) {\n    this.count = count;\n    this.localizationKeyOptions = localizationKeyOptions;\n  }\n}\n\nclass OrganizationContentSummary {\n  totalItemCount = 0;\n  itemCountByType: OrganizationContentSummaryItem[] = [];\n}\n\n@Component({\n  selector: \"app-delete-organization\",\n  templateUrl: \"delete-organization.component.html\",\n})\nexport class DeleteOrganizationComponent implements OnInit {\n  organizationId: string;\n  loaded: boolean;\n  deleteOrganizationRequestType: \"InvalidFamiliesForEnterprise\" | \"RegularDelete\" = \"RegularDelete\";\n  organizationName: string;\n  organizationContentSummary: OrganizationContentSummary = new OrganizationContentSummary();\n  @Output() onSuccess: EventEmitter<void> = new EventEmitter();\n\n  masterPassword: Verification;\n  formPromise: Promise<void>;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService,\n    private cipherService: CipherService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    await this.load();\n  }\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.organizationApiService.delete(this.organizationId, request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"organizationDeleted\"),\n        this.i18nService.t(\"organizationDeletedDesc\")\n      );\n      this.onSuccess.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async load() {\n    this.organizationName = (await this.organizationService.get(this.organizationId)).name;\n    this.organizationContentSummary = await this.buildOrganizationContentSummary();\n    this.loaded = true;\n  }\n\n  private async buildOrganizationContentSummary(): Promise<OrganizationContentSummary> {\n    const organizationContentSummary = new OrganizationContentSummary();\n    const organizationItems = (\n      await this.cipherService.getAllFromApiForOrganization(this.organizationId)\n    ).filter((item) => item.deletedDate == null);\n\n    if (organizationItems.length < 1) {\n      return organizationContentSummary;\n    }\n\n    organizationContentSummary.totalItemCount = organizationItems.length;\n    for (const cipherType of Utils.iterateEnum(CipherType)) {\n      const count = this.getOrganizationItemCountByType(organizationItems, cipherType);\n      if (count > 0) {\n        organizationContentSummary.itemCountByType.push(\n          new OrganizationContentSummaryItem(\n            count,\n            this.getOrganizationItemLocalizationKeysByType(CipherType[cipherType])\n          )\n        );\n      }\n    }\n\n    return organizationContentSummary;\n  }\n\n  private getOrganizationItemCountByType(items: CipherView[], type: CipherType) {\n    return items.filter((item) => item.type == type).length;\n  }\n\n  private getOrganizationItemLocalizationKeysByType(type: string): CountBasedLocalizationKey {\n    return new CountBasedLocalizationKey(`type${type}`, `type${type}Plural`);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"organizationInfo\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"org && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"organizationName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"org.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"org.billingEmail\"\n          [disabled]=\"selfHosted || !canManageBilling\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"businessName\">{{ \"businessName\" | i18n }}</label>\n        <input\n          id=\"businessName\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BusinessName\"\n          [(ngModel)]=\"org.businessName\"\n          [disabled]=\"selfHosted || !canManageBilling\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <bit-avatar [text]=\"org.name\" [id]=\"org.id\" size=\"large\"></bit-avatar>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n<ng-container *ngIf=\"canUseApi\">\n  <div class=\"secondary-header border-0 mb-0\">\n    <h1>{{ \"apiKey\" | i18n }}</h1>\n  </div>\n  <p>\n    {{ \"apiKeyDesc\" | i18n }}\n    <a href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noopener\">\n      {{ \"learnMore\" | i18n }}\n    </a>\n  </p>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewApiKey()\">\n    {{ \"viewApiKey\" | i18n }}\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateApiKey()\">\n    {{ \"rotateApiKey\" | i18n }}\n  </button>\n</ng-container>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteOrganization()\">\n      {{ \"deleteOrganization\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n<ng-template #purgeOrganizationTemplate></ng-template>\n<ng-template #apiKeyTemplate></ng-template>\n<ng-template #rotateApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organization-keys.request\";\nimport { OrganizationUpdateRequest } from \"@bitwarden/common/models/request/organization-update.request\";\nimport { OrganizationResponse } from \"@bitwarden/common/models/response/organization.response\";\n\nimport { ApiKeyComponent } from \"../../settings/api-key.component\";\nimport { PurgeVaultComponent } from \"../../settings/purge-vault.component\";\n\nimport { DeleteOrganizationComponent } from \"./delete-organization.component\";\n\n@Component({\n  selector: \"app-org-account\",\n  templateUrl: \"account.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccountComponent {\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n  @ViewChild(\"purgeOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"apiKeyTemplate\", { read: ViewContainerRef, static: true })\n  apiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateApiKeyModalRef: ViewContainerRef;\n\n  selfHosted = false;\n  canManageBilling = true;\n  loading = true;\n  canUseApi = false;\n  org: OrganizationResponse;\n  formPromise: Promise<OrganizationResponse>;\n  taxFormPromise: Promise<unknown>;\n\n  private organizationId: string;\n\n  constructor(\n    private modalService: ModalService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private router: Router,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.canManageBilling = this.organizationService.get(this.organizationId).canManageBilling;\n      try {\n        this.org = await this.organizationApiService.get(this.organizationId);\n        this.canUseApi = this.org.useApi;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationUpdateRequest();\n      request.name = this.org.name;\n      request.businessName = this.org.businessName;\n      request.billingEmail = this.org.billingEmail;\n      request.identifier = this.org.identifier;\n\n      // Backfill pub/priv key if necessary\n      if (!this.org.hasPublicAndPrivateKeys) {\n        const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n        request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n      }\n\n      this.formPromise = this.organizationApiService.save(this.organizationId, request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"organizationUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async deleteOrganization() {\n    await this.modalService.openViewRef(\n      DeleteOrganizationComponent,\n      this.deleteModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSuccess.subscribe(() => {\n          this.router.navigate([\"/\"]);\n        });\n      }\n    );\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef, (comp) => {\n      comp.organizationId = this.organizationId;\n    });\n  }\n\n  async viewApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.apiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.getOrCreateApiKey.bind(\n        this.organizationApiService\n      );\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyDesc\";\n    });\n  }\n\n  async rotateApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateApiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.isRotation = true;\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.rotateApiKey.bind(this.organizationApiService);\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div class=\"tabbed-header\">\n  <h1 *ngIf=\"!organizationId\">{{ \"twoStepLogin\" | i18n }}</h1>\n  <h1 *ngIf=\"organizationId\">{{ \"twoStepLoginEnforcement\" | i18n }}</h1>\n</div>\n<p *ngIf=\"!organizationId\">{{ \"twoStepLoginDesc\" | i18n }}</p>\n<ng-container *ngIf=\"organizationId\">\n  <p>\n    {{ \"twoStepLoginOrganizationDescStart\" | i18n }}\n    <a routerLink=\"../policies\">{{ \"twoStepLoginPolicy\" | i18n }}.</a>\n    <br />\n    {{ \"twoStepLoginOrganizationDuoDesc\" | i18n }}\n  </p>\n  <p>{{ \"twoStepLoginOrganizationSsoDesc\" | i18n }}</p>\n</ng-container>\n<bit-callout type=\"warning\" *ngIf=\"!organizationId\">\n  <p>{{ \"twoStepLoginRecoveryWarning\" | i18n }}</p>\n  <button bitButton buttonType=\"secondary\" (click)=\"recoveryCode()\">\n    {{ \"viewRecoveryCode\" | i18n }}\n  </button>\n</bit-callout>\n<h2 [ngClass]=\"{ 'mt-5': !organizationId }\">\n  {{ \"providers\" | i18n }}\n  <small *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-fw text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </small>\n</h2>\n<bit-callout type=\"warning\" *ngIf=\"showPolicyWarning\">\n  {{ \"twoStepLoginPolicyUserWarning\" | i18n }}\n</bit-callout>\n<ul class=\"list-group list-group-2fa\">\n  <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\">\n    <div class=\"logo-2fa d-flex justify-content-center\">\n      <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n    </div>\n    <div class=\"mx-4\">\n      <h3 class=\"mb-0\">\n        {{ p.name }}\n        <ng-container *ngIf=\"p.enabled\">\n          <i\n            class=\"bwi bwi-check text-success bwi-fw\"\n            title=\"{{ 'enabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"enabled\" | i18n }}</span>\n        </ng-container>\n        <app-premium-badge *ngIf=\"p.premium\"></app-premium-badge>\n      </h3>\n      {{ p.description }}\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        bitButton\n        buttonType=\"secondary\"\n        [disabled]=\"!canAccessPremium && p.premium\"\n        (click)=\"manage(p.type)\"\n      >\n        {{ \"manage\" | i18n }}\n      </button>\n    </div>\n  </li>\n</ul>\n\n<ng-template #authenticatorTemplate></ng-template>\n<ng-template #recoveryTemplate></ng-template>\n<ng-template #duoTemplate></ng-template>\n<ng-template #emailTemplate></ng-template>\n<ng-template #yubikeyTemplate></ng-template>\n<ng-template #webAuthnTemplate></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { TwoFactorDuoComponent } from \"../../settings/two-factor-duo.component\";\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from \"../../settings/two-factor-setup.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"../../settings/two-factor-setup.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\n  constructor(\n    apiService: ApiService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    private route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(apiService, modalService, messagingService, policyService, stateService);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await super.ngOnInit();\n    });\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.OrganizationDuo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        duoComp.type = TwoFactorProviderType.OrganizationDuo;\n        duoComp.organizationId = this.organizationId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type !== TwoFactorProviderType.OrganizationDuo;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { canAccessSettingsTab } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { OrganizationPermissionsGuard } from \"../guards/org-permissions.guard\";\nimport { OrganizationRedirectGuard } from \"../guards/org-redirect.guard\";\nimport { PoliciesComponent } from \"../policies\";\n\nimport { AccountComponent } from \"./account.component\";\nimport { SettingsComponent } from \"./settings.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SettingsComponent,\n    canActivate: [OrganizationPermissionsGuard],\n    data: { organizationPermissions: canAccessSettingsTab },\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        canActivate: [OrganizationRedirectGuard],\n        data: {\n          autoRedirectCallback: getSettingsRoute,\n        },\n        children: [], // This is required to make the auto redirect work,\n      },\n      { path: \"account\", component: AccountComponent, data: { titleId: \"organizationInfo\" } },\n      {\n        path: \"two-factor\",\n        component: TwoFactorSetupComponent,\n        data: { titleId: \"twoStepLogin\" },\n      },\n      {\n        path: \"policies\",\n        component: PoliciesComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: (org: Organization) => org.canManagePolicies,\n          titleId: \"policies\",\n        },\n      },\n      {\n        path: \"tools\",\n        loadChildren: () =>\n          import(\"../tools/import-export/org-import-export.module\").then(\n            (m) => m.OrganizationImportExportModule\n          ),\n      },\n    ],\n  },\n];\n\nfunction getSettingsRoute(organization: Organization) {\n  if (organization.isOwner) {\n    return \"account\";\n  }\n  if (organization.canManagePolicies) {\n    return \"policies\";\n  }\n  if (organization.canAccessImportExport) {\n    return [\"tools\", \"import\"];\n  }\n  if (organization.canManageSso) {\n    return \"sso\";\n  }\n  if (organization.canManageScim) {\n    return \"scim\";\n  }\n  return undefined;\n}\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationSettingsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\nimport { PoliciesModule } from \"../policies\";\n\nimport { AccountComponent } from \"./account.component\";\nimport { DeleteOrganizationComponent } from \"./delete-organization.component\";\nimport { OrganizationSettingsRoutingModule } from \"./organization-settings-routing.module\";\nimport { SettingsComponent } from \"./settings.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\n@NgModule({\n  imports: [SharedModule, LooseComponentsModule, PoliciesModule, OrganizationSettingsRoutingModule],\n  declarations: [\n    SettingsComponent,\n    AccountComponent,\n    DeleteOrganizationComponent,\n    TwoFactorSetupComponent,\n  ],\n})\nexport class OrganizationSettingsModule {}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"account\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.isOwner\"\n          >\n            {{ \"organizationInfo\" | i18n }}\n          </a>\n          <a\n            routerLink=\"policies\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.canManagePolicies\"\n          >\n            {{ \"policies\" | i18n }}\n          </a>\n          <a\n            routerLink=\"two-factor\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.use2fa && organization?.isOwner\"\n          >\n            {{ \"twoStepLogin\" | i18n }}\n          </a>\n          <a\n            routerLink=\"tools/import\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.canAccessImportExport\"\n          >\n            {{ \"importData\" | i18n }}\n          </a>\n          <a\n            routerLink=\"tools/export\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.canAccessImportExport\"\n          >\n            {{ \"exportVault\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sso\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.canManageSso\"\n          >\n            {{ \"singleSignOn\" | i18n }}\n          </a>\n          <a\n            routerLink=\"scim\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization?.canManageScim\"\n          >\n            {{ \"scim\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  organization: Organization;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    this.route.params\n      .pipe(\n        switchMap(async (params) => await this.organizationService.get(params.organizationId)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((organization) => {\n        this.organization = organization;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { AbstractControl, FormArray } from \"@angular/forms\";\n\nexport type SelectionItemId = {\n  id: string;\n};\n\nfunction findSortedIndex<T>(sortedArray: T[], val: T, compareFn: (a: T, b: T) => number) {\n  let low = 0;\n  let high = sortedArray.length || 0;\n  let mid = -1,\n    c = 0;\n  while (low < high) {\n    mid = Math.floor((low + high) / 2);\n    c = compareFn(sortedArray[mid], val);\n    if (c < 0) {\n      low = mid + 1;\n    } else if (c > 0) {\n      high = mid;\n    } else {\n      return mid;\n    }\n  }\n  return low;\n}\n\n/**\n * Utility to help manage a list of selectable items for use with Reactive Angular forms and FormArrays.\n *\n * It supports selecting/deselecting items, keeping items sorted, and synchronizing the selected items\n * with an array of FormControl.\n *\n * The first type parameter TItem represents the item being selected/deselected, it must have an `id`\n * property for identification/comparison. The second type parameter TControlValue represents the value\n * type of the form control.\n */\nexport class FormSelectionList<\n  TItem extends SelectionItemId,\n  TControlValue extends SelectionItemId\n> {\n  allItems: TItem[] = [];\n  /**\n   * Sorted list of selected items\n   * Immutable and should be recreated whenever a modification is made\n   */\n  selectedItems: TItem[] = [];\n\n  /**\n   * Sorted list of deselected items\n   * Immutable and should be recreated whenever a modification is made\n   */\n  deselectedItems: TItem[] = [];\n\n  /**\n   * Sorted FormArray that corresponds and stays in sync with the selectedItems\n   */\n  formArray: FormArray<AbstractControl<Partial<TControlValue>, TControlValue>> = new FormArray([]);\n\n  /**\n   * Construct a new FormSelectionList\n   * @param controlFactory - Factory responsible for creating initial form controls for each selected item. It is\n   * provided a copy of the selected item for any form control initialization logic. Specify any additional form\n   * control options or validators here.\n   * @param compareFn - Comparison function used for sorting the items.\n   */\n  constructor(\n    private controlFactory: (item: TItem) => AbstractControl<Partial<TControlValue>, TControlValue>,\n    private compareFn: (a: TItem, b: TItem) => number\n  ) {}\n\n  /**\n   * Select multiple items by their ids at once. Optionally provide an initial form control value.\n   * @param ids - List of ids to select\n   * @param initialValue - Value that will be applied to the corresponding form controls\n   * The provided `id` arguments will be automatically assigned to each form control value\n   */\n  selectItems(ids: string[], initialValue?: Partial<TControlValue> | undefined) {\n    for (const id of ids) {\n      this.selectItem(id, initialValue);\n    }\n  }\n\n  /**\n   * Deselect multiple items by their ids at once\n   * @param ids - List of ids to deselect\n   */\n  deselectItems(ids: string[]) {\n    for (const id of ids) {\n      this.deselectItem(id);\n    }\n  }\n\n  deselectAll() {\n    this.formArray.clear();\n    this.selectedItems = [];\n    this.deselectedItems = [...this.allItems];\n  }\n\n  /**\n   * Select a single item by id.\n   *\n   * Maintains list order for both selected items, deselected items, and the FormArray.\n   *\n   * @param id - Id of the item to select\n   * @param initialValue - Value that will be applied to the corresponding form control for the selected item.\n   * The provided `id` argument will be automatically assigned unless explicitly set in the initialValue.\n   */\n  selectItem(id: string, initialValue?: Partial<TControlValue>) {\n    const index = this.deselectedItems.findIndex((o) => o.id === id);\n\n    if (index === -1) {\n      return;\n    }\n\n    const selectedOption = this.deselectedItems[index];\n\n    // Note: Changes to the deselected/selected arrays must create a new copy of the array\n    // in order for Angular's Change Detection to pick up the modification (i.e. treat the arrays as immutable)\n\n    // Remove from the list of deselected options\n    this.deselectedItems = [\n      ...this.deselectedItems.slice(0, index),\n      ...this.deselectedItems.slice(index + 1),\n    ];\n\n    // Insert into the sorted selected options list\n    const sortedInsertIndex = findSortedIndex(this.selectedItems, selectedOption, this.compareFn);\n\n    this.selectedItems = [\n      ...this.selectedItems.slice(0, sortedInsertIndex),\n      selectedOption,\n      ...this.selectedItems.slice(sortedInsertIndex),\n    ];\n\n    const newControl = this.controlFactory(selectedOption);\n\n    // Patch the value and ensure the `id` is set\n    newControl.patchValue({\n      id,\n      ...initialValue,\n    });\n\n    this.formArray.insert(sortedInsertIndex, newControl);\n  }\n\n  /**\n   * Deselect a single item by id.\n   *\n   * Maintains list order for both selected items, deselected items, and the FormArray.\n   *\n   * @param id - Id of the item to deselect\n   */\n  deselectItem(id: string) {\n    const index = this.selectedItems.findIndex((o) => o.id === id);\n\n    if (index === -1) {\n      return;\n    }\n\n    const deselectedOption = this.selectedItems[index];\n\n    // Note: Changes to the deselected/selected arrays must create a new copy of the array\n    // in order for Angular's Change Detection to pick up the modification (i.e. treat the arrays as immutable)\n\n    // Remove from the list of selected items (and FormArray)\n    this.selectedItems = [\n      ...this.selectedItems.slice(0, index),\n      ...this.selectedItems.slice(index + 1),\n    ];\n    this.formArray.removeAt(index);\n\n    // Insert into the sorted deselected array\n    const sortedInsertIndex = findSortedIndex(\n      this.deselectedItems,\n      deselectedOption,\n      this.compareFn\n    );\n\n    this.deselectedItems = [\n      ...this.deselectedItems.slice(0, sortedInsertIndex),\n      deselectedOption,\n      ...this.deselectedItems.slice(sortedInsertIndex),\n    ];\n  }\n\n  /**\n   * Populate the list of deselected items, and optional specify which items should be selected and with what initial\n   * value for their Form Control\n   * @param items - A list of all items. (Will be sorted internally)\n   * @param selectedItems - The items to select initially\n   */\n  populateItems(items: TItem[], selectedItems: TControlValue[] = []) {\n    this.formArray.clear();\n    this.allItems = [...items].sort(this.compareFn);\n    this.selectedItems = [];\n    this.deselectedItems = [...this.allItems];\n\n    for (const selectedItem of selectedItems) {\n      this.selectItem(selectedItem.id, selectedItem);\n    }\n  }\n}\n","<ng-select\n  [items]=\"baseItems\"\n  [(ngModel)]=\"selectedItems\"\n  (ngModelChange)=\"onChange($event)\"\n  (blur)=\"onBlur()\"\n  bindLabel=\"listName\"\n  groupBy=\"parentGrouping\"\n  [placeholder]=\"placeholder\"\n  [loading]=\"loading\"\n  [loadingText]=\"loadingText\"\n  notFoundText=\"{{ 'multiSelectNotFound' | i18n }}\"\n  clearAllText=\"{{ 'multiSelectClearAll' | i18n }}\"\n  [multiple]=\"true\"\n  [selectOnTab]=\"true\"\n  [closeOnSelect]=\"false\"\n  (close)=\"onDropdownClosed()\"\n  [disabled]=\"disabled\"\n  [clearSearchOnAdd]=\"true\"\n  [labelForId]=\"labelForId\"\n  appendTo=\"body\"\n>\n  <ng-template ng-loadingspinner-tmp>\n    <i class=\"bwi bwi-spinner bwi-spin tw-mr-1\" [title]=\"loadingText\" aria-hidden=\"true\"></i>\n  </ng-template>\n  <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n    <button\n      type=\"button\"\n      bitBadge\n      badgeType=\"primary\"\n      class=\"tw-mr-1 disabled:tw-border-0\"\n      [disabled]=\"disabled\"\n      (click)=\"clear(item)\"\n    >\n      <i\n        *ngIf=\"item.icon != null\"\n        class=\"tw-mr-1 bwi bwi-fw {{ item.icon }}\"\n        aria-hidden=\"true\"\n      ></i>\n      {{ item.labelName }}\n      <i class=\"bwi bwi-fw bwi-close bwi-sm tw-ml-1\" aria-hidden=\"true\"></i>\n    </button>\n  </ng-template>\n  <ng-template ng-option-tmp let-item=\"item\">\n    <div class=\"tw-flex\">\n      <div class=\"tw-w-7 tw-flex-none\">\n        <i *ngIf=\"isSelected(item)\" class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n      </div>\n      <div class=\"tw-mr-2 tw-flex-initial\">\n        <i *ngIf=\"item.icon != null\" class=\"bwi bwi-fw {{ item.icon }}\" aria-hidden=\"true\"></i>\n      </div>\n      <div class=\"tw-flex-1\">\n        {{ item.listName }}\n      </div>\n    </div>\n  </ng-template>\n</ng-select>\n","import {\n  Component,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n  EventEmitter,\n  HostBinding,\n  Optional,\n  Self,\n} from \"@angular/core\";\nimport { ControlValueAccessor, NgControl, Validators } from \"@angular/forms\";\nimport { NgSelectComponent } from \"@ng-select/ng-select\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\nimport { BitFormFieldControl } from \"../form-field/form-field-control\";\n\nimport { SelectItemView } from \"./models/select-item-view\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Component({\n  selector: \"bit-multi-select\",\n  templateUrl: \"./multi-select.component.html\",\n  providers: [{ provide: BitFormFieldControl, useExisting: MultiSelectComponent }],\n})\n/**\n * This component has been implemented to only support Multi-select list events\n */\nexport class MultiSelectComponent implements OnInit, BitFormFieldControl, ControlValueAccessor {\n  @ViewChild(NgSelectComponent) select: NgSelectComponent;\n\n  // Parent component should only pass selectable items (complete list - selected items = baseItems)\n  @Input() baseItems: SelectItemView[];\n  // Defaults to native ng-select behavior - set to \"true\" to clear selected items on dropdown close\n  @Input() removeSelectedItems = false;\n  @Input() placeholder: string;\n  @Input() loading = false;\n  @Input() disabled = false;\n\n  // Internal tracking of selected items\n  @Input() selectedItems: SelectItemView[];\n\n  // Default values for our implementation\n  loadingText: string;\n\n  protected searchInputId = `search-input-${nextId++}`;\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  private notifyOnChange?: (value: SelectItemView[]) => void;\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  private notifyOnTouched?: () => void;\n\n  @Output() onItemsConfirmed = new EventEmitter<any[]>();\n\n  constructor(private i18nService: I18nService, @Optional() @Self() private ngControl?: NgControl) {\n    if (ngControl != null) {\n      ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit(): void {\n    // Default Text Values\n    this.placeholder = this.placeholder ?? this.i18nService.t(\"multiSelectPlaceholder\");\n    this.loadingText = this.i18nService.t(\"multiSelectLoading\");\n  }\n\n  /** Helper method for showing selected state in custom template */\n  isSelected(item: any): boolean {\n    return this.selectedItems?.find((selected) => selected.id === item.id) != undefined;\n  }\n\n  /**\n   * The `close` callback will act as the only trigger for signifying the user's intent of completing the selection\n   * of items. Selected items will be emitted to the parent component in order to allow for separate data handling.\n   */\n  onDropdownClosed(): void {\n    // Early exit\n    if (this.selectedItems == null || this.selectedItems.length == 0) {\n      return;\n    }\n\n    // Emit results to parent component\n    this.onItemsConfirmed.emit(this.selectedItems);\n\n    // Remove selected items from base list based on input property\n    if (this.removeSelectedItems) {\n      let updatedBaseItems = this.baseItems;\n      this.selectedItems.forEach((selectedItem) => {\n        updatedBaseItems = updatedBaseItems.filter((item) => selectedItem.id !== item.id);\n      });\n\n      // Reset Lists\n      this.selectedItems = null;\n      this.baseItems = updatedBaseItems;\n    }\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  writeValue(obj: SelectItemView[]): void {\n    this.selectedItems = obj;\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  registerOnChange(fn: (value: SelectItemView[]) => void): void {\n    this.notifyOnChange = fn;\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  registerOnTouched(fn: any): void {\n    this.notifyOnTouched = fn;\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  protected onChange(items: SelectItemView[]) {\n    if (!this.notifyOnChange) {\n      return;\n    }\n\n    this.notifyOnChange(items);\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  protected onBlur() {\n    if (!this.notifyOnTouched) {\n      return;\n    }\n\n    this.notifyOnTouched();\n  }\n\n  /**Implemented as part of BitFormFieldControl */\n  @HostBinding(\"attr.aria-describedby\")\n  get ariaDescribedBy() {\n    return this._ariaDescribedBy;\n  }\n  set ariaDescribedBy(value: string) {\n    this._ariaDescribedBy = value;\n    this.select?.searchInput.nativeElement.setAttribute(\"aria-describedby\", value);\n  }\n  private _ariaDescribedBy: string;\n\n  /**Implemented as part of BitFormFieldControl */\n  get labelForId() {\n    return this.searchInputId;\n  }\n\n  /**Implemented as part of BitFormFieldControl */\n  @HostBinding() @Input() id = `bit-multi-select-${nextId++}`;\n\n  /**Implemented as part of BitFormFieldControl */\n  @HostBinding(\"attr.required\")\n  @Input()\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value: any) {\n    this._required = value != null && value !== false;\n  }\n  private _required: boolean;\n\n  /**Implemented as part of BitFormFieldControl */\n  get hasError() {\n    return this.ngControl?.status === \"INVALID\" && this.ngControl?.touched;\n  }\n\n  /**Implemented as part of BitFormFieldControl */\n  get error(): [string, any] {\n    const key = Object.keys(this.ngControl?.errors)[0];\n    return [key, this.ngControl?.errors[key]];\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\n\n@Pipe({\n  name: \"userType\",\n})\nexport class UserTypePipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(value?: OrganizationUserType, unknownText?: string): string {\n    if (value == null) {\n      return unknownText ?? this.i18nService.t(\"unknown\");\n    }\n    switch (value) {\n      case OrganizationUserType.Owner:\n        return this.i18nService.t(\"owner\");\n      case OrganizationUserType.Admin:\n        return this.i18nService.t(\"admin\");\n      case OrganizationUserType.User:\n        return this.i18nService.t(\"user\");\n      case OrganizationUserType.Manager:\n        return this.i18nService.t(\"manager\");\n      case OrganizationUserType.Custom:\n        return this.i18nService.t(\"custom\");\n    }\n  }\n}\n","<div class=\"tw-flex\">\n  <bit-form-field *ngIf=\"permissionMode == 'edit'\">\n    <bit-label>{{ \"permission\" | i18n }}</bit-label>\n    <select\n      bitInput\n      [disabled]=\"disabled\"\n      [(ngModel)]=\"initialPermission\"\n      [ngModelOptions]=\"{ standalone: true }\"\n      (blur)=\"handleBlur()\"\n    >\n      <option *ngFor=\"let p of permissionList\" [value]=\"p.perm\">\n        {{ p.labelId | i18n }}\n      </option>\n    </select>\n  </bit-form-field>\n\n  <bit-form-field class=\"tw-ml-3 tw-flex-grow\">\n    <bit-label>{{ selectorLabelText }}</bit-label>\n    <bit-multi-select\n      class=\"tw-w-full\"\n      [baseItems]=\"selectionList.deselectedItems\"\n      [removeSelectedItems]=\"true\"\n      [disabled]=\"disabled\"\n      (onItemsConfirmed)=\"selectItems($event)\"\n      (blur)=\"handleBlur()\"\n    ></bit-multi-select>\n    <bit-hint *ngIf=\"selectorHelpText\">{{ selectorHelpText }}</bit-hint>\n  </bit-form-field>\n</div>\n\n<bit-table [formGroup]=\"formGroup\">\n  <ng-container header>\n    <tr>\n      <th bitCell>{{ columnHeader }}</th>\n      <th bitCell id=\"permissionColHeading\" *ngIf=\"permissionMode != 'hidden'\">\n        <div class=\"tw-border tw-border-solid tw-border-transparent\">\n          {{ \"permission\" | i18n }}\n        </div>\n      </th>\n      <th bitCell id=\"roleColHeading\" *ngIf=\"showMemberRoles\">{{ \"role\" | i18n }}</th>\n      <th bitCell id=\"groupColHeading\" *ngIf=\"showGroupColumn\">{{ \"group\" | i18n }}</th>\n      <th bitCell class=\"tw-w-20\"></th>\n    </tr>\n  </ng-container>\n  <ng-container body formArrayName=\"items\">\n    <tr\n      bitRow\n      *ngFor=\"let item of selectionList.selectedItems; let i = index\"\n      [formGroupName]=\"i\"\n      [ngClass]=\"{ 'tw-text-muted': item.readonly }\"\n    >\n      <td bitCell [ngSwitch]=\"item.type\">\n        <div class=\"tw-flex tw-items-center\" *ngSwitchCase=\"itemType.Member\">\n          <bit-avatar size=\"small\" class=\"tw-mr-3\" text=\"{{ item.labelName }}\"></bit-avatar>\n          <div class=\"tw-flex tw-flex-col\">\n            <div class=\"tw-text-sm\">\n              {{ item.labelName }}\n              <span *ngIf=\"$any(item).status == 0\" bitBadge badgeType=\"secondary\">\n                {{ \"invited\" | i18n }}\n              </span>\n            </div>\n            <div class=\"tw-text-xs tw-text-muted\" *ngIf=\"$any(item).status != 0\">\n              {{ $any(item).email }}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"tw-flex tw-items-center tw-text-sm\" *ngSwitchDefault>\n          <i\n            class=\"bwi tw-mr-3 tw-px-0.5 tw-text-2xl\"\n            [ngClass]=\"item.icon || itemIcon(item)\"\n            aria-hidden=\"true\"\n          ></i>\n          <span>{{ item.labelName }}</span>\n        </div>\n      </td>\n\n      <td bitCell *ngIf=\"permissionMode != 'hidden'\">\n        <ng-container *ngIf=\"canEditItemPermission(item); else readOnlyPerm\">\n          <label class=\"sr-only\" [for]=\"'permission' + i\"\n            >{{ item.labelName }} {{ \"permission\" | i18n }}</label\n          >\n          <div class=\"tw-relative tw-inline-block\">\n            <select\n              bitInput\n              class=\"tw-apperance-none -tw-ml-3 tw-max-w-40 tw-appearance-none tw-overflow-ellipsis !tw-rounded tw-border-transparent !tw-bg-transparent tw-pr-6 tw-font-bold hover:tw-border-primary-700\"\n              formControlName=\"permission\"\n              [id]=\"'permission' + i\"\n              (blur)=\"handleBlur()\"\n            >\n              <option *ngFor=\"let p of permissionList\" [value]=\"p.perm\">\n                {{ p.labelId | i18n }}\n              </option>\n            </select>\n            <div class=\"tw-absolute tw-inset-y-0 tw-right-4 tw-flex tw-items-center\">\n              <i class=\"bwi bwi-sm bwi-angle-down tw-leading-[0]\"></i>\n            </div>\n          </div>\n        </ng-container>\n\n        <ng-template #readOnlyPerm>\n          <div\n            *ngIf=\"item.accessAllItems\"\n            class=\"tw-max-w-40 tw-overflow-hidden tw-overflow-ellipsis tw-whitespace-nowrap tw-border tw-border-solid tw-border-transparent tw-font-bold tw-text-muted\"\n            [appA11yTitle]=\"accessAllLabelId(item) | i18n\"\n          >\n            {{ \"canEdit\" | i18n }}\n            <i class=\"bwi bwi-filter tw-ml-1\" aria-hidden=\"true\"></i>\n          </div>\n\n          <div\n            *ngIf=\"item.readonly\"\n            class=\"tw-max-w-40 tw-overflow-hidden tw-overflow-ellipsis tw-whitespace-nowrap tw-font-bold tw-text-muted\"\n            [title]=\"permissionLabelId(item.readonlyPermission) | i18n\"\n          >\n            {{ permissionLabelId(item.readonlyPermission) | i18n }}\n          </div>\n        </ng-template>\n      </td>\n\n      <td bitCell *ngIf=\"showMemberRoles\">\n        {{ $any(item).role | userType: \"-\" }}\n      </td>\n\n      <td bitCell *ngIf=\"showGroupColumn\">\n        {{ $any(item).viaGroupName ?? \"-\" }}\n      </td>\n\n      <td bitCell>\n        <button\n          *ngIf=\"!item.readonly\"\n          type=\"button\"\n          bitIconButton=\"bwi-close\"\n          buttonType=\"muted\"\n          appA11yTitle=\"{{ 'remove' | i18n }} {{ item.labelName }}\"\n          [disabled]=\"disabled\"\n          (click)=\"selectionList.deselectItem(item.id); handleBlur()\"\n        ></button>\n      </td>\n    </tr>\n    <tr *ngIf=\"selectionList.selectedItems.length == 0\">\n      <td bitCell>{{ emptySelectionText }}</td>\n    </tr>\n  </ng-container>\n</bit-table>\n","import { Component, forwardRef, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, FormBuilder, NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { FormSelectionList } from \"@bitwarden/angular/utils/form-selection-list\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { SelectItemView } from \"@bitwarden/components/src/multi-select/models/select-item-view\";\n\nimport {\n  AccessItemType,\n  AccessItemValue,\n  AccessItemView,\n  CollectionPermission,\n} from \"./access-selector.models\";\n\nexport enum PermissionMode {\n  /**\n   * No permission controls or column present. No permission values are emitted.\n   */\n  Hidden = \"hidden\",\n\n  /**\n   * No permission controls. Column rendered an if available on an item. No permission values are emitted\n   */\n  Readonly = \"readonly\",\n\n  /**\n   * Permission Controls and column present. Permission values are emitted.\n   */\n  Edit = \"edit\",\n}\n\n@Component({\n  selector: \"bit-access-selector\",\n  templateUrl: \"access-selector.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AccessSelectorComponent),\n      multi: true,\n    },\n  ],\n})\nexport class AccessSelectorComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n  private notifyOnChange: (v: unknown) => void;\n  private notifyOnTouch: () => void;\n  private pauseChangeNotification: boolean;\n\n  /**\n   * The internal selection list that tracks the value of this form control / component.\n   * It's responsible for keeping items sorted and synced with the rendered form controls\n   * @protected\n   */\n  protected selectionList = new FormSelectionList<AccessItemView, AccessItemValue>((item) => {\n    const permissionControl = this.formBuilder.control(this.initialPermission);\n\n    const fg = this.formBuilder.group({\n      id: item.id,\n      type: item.type,\n      permission: permissionControl,\n    });\n\n    // Disable entire row form group if readonly\n    if (item.readonly) {\n      fg.disable();\n    }\n\n    // Disable permission control if accessAllItems is enabled\n    if (item.accessAllItems || this.permissionMode != PermissionMode.Edit) {\n      permissionControl.disable();\n    }\n\n    return fg;\n  }, this._itemComparator.bind(this));\n\n  /**\n   * Internal form group for this component.\n   * @protected\n   */\n  protected formGroup = this.formBuilder.group({\n    items: this.selectionList.formArray,\n  });\n\n  protected itemType = AccessItemType;\n  protected permissionList = [\n    { perm: CollectionPermission.View, labelId: \"canView\" },\n    { perm: CollectionPermission.ViewExceptPass, labelId: \"canViewExceptPass\" },\n    { perm: CollectionPermission.Edit, labelId: \"canEdit\" },\n    { perm: CollectionPermission.EditExceptPass, labelId: \"canEditExceptPass\" },\n  ];\n  protected initialPermission = CollectionPermission.View;\n\n  disabled: boolean;\n\n  /**\n   * List of all selectable items that. Sorted internally.\n   */\n  @Input()\n  get items(): AccessItemView[] {\n    return this.selectionList.allItems;\n  }\n\n  set items(val: AccessItemView[]) {\n    const selected = (this.selectionList.formArray.getRawValue() ?? []).concat(\n      val.filter((m) => m.readonly)\n    );\n    this.selectionList.populateItems(\n      val.map((m) => {\n        m.icon = m.icon ?? this.itemIcon(m); // Ensure an icon is set\n        return m;\n      }),\n      selected\n    );\n  }\n\n  /**\n   * Permission mode that controls if the permission form controls and column should be present.\n   */\n  @Input()\n  get permissionMode(): PermissionMode {\n    return this._permissionMode;\n  }\n\n  set permissionMode(value: PermissionMode) {\n    this._permissionMode = value;\n    // Toggle any internal permission controls\n    for (const control of this.selectionList.formArray.controls) {\n      if (value == PermissionMode.Edit) {\n        control.get(\"permission\").enable();\n      } else {\n        control.get(\"permission\").disable();\n      }\n    }\n  }\n  private _permissionMode: PermissionMode = PermissionMode.Hidden;\n\n  /**\n   * Column header for the selected items table\n   */\n  @Input() columnHeader: string;\n\n  /**\n   * Label used for the ng selector\n   */\n  @Input() selectorLabelText: string;\n\n  /**\n   * Helper text displayed under the ng selector\n   */\n  @Input() selectorHelpText: string;\n\n  /**\n   * Text that is shown in the table when no items are selected\n   */\n  @Input() emptySelectionText: string;\n\n  /**\n   * Flag for if the member roles column should be present\n   */\n  @Input() showMemberRoles: boolean;\n\n  /**\n   * Flag for if the group column should be present\n   */\n  @Input() showGroupColumn: boolean;\n\n  constructor(\n    private readonly formBuilder: FormBuilder,\n    private readonly i18nService: I18nService\n  ) {}\n\n  /** Required for NG_VALUE_ACCESSOR */\n  registerOnChange(fn: any): void {\n    this.notifyOnChange = fn;\n  }\n\n  /** Required for NG_VALUE_ACCESSOR */\n  registerOnTouched(fn: any): void {\n    this.notifyOnTouch = fn;\n  }\n\n  /** Required for NG_VALUE_ACCESSOR */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n\n    // Keep the internal FormGroup in sync\n    if (this.disabled) {\n      this.formGroup.disable();\n    } else {\n      this.formGroup.enable();\n    }\n  }\n\n  /** Required for NG_VALUE_ACCESSOR */\n  writeValue(selectedItems: AccessItemValue[]): void {\n    // Modifying the selection list, mistakenly fires valueChanges in the\n    // internal form array, so we need to know to pause external notification\n    this.pauseChangeNotification = true;\n\n    // Always clear the internal selection list on a new value\n    this.selectionList.deselectAll();\n\n    // We need to also select any read only items to appear in the table\n    this.selectionList.selectItems(this.items.filter((m) => m.readonly).map((m) => m.id));\n\n    // If the new value is null, then we're done\n    if (selectedItems == null) {\n      this.pauseChangeNotification = false;\n      return;\n    }\n\n    // Unable to handle other value types, throw\n    if (!Array.isArray(selectedItems)) {\n      throw new Error(\"The access selector component only supports Array form values!\");\n    }\n\n    // Iterate and internally select each item\n    for (const value of selectedItems) {\n      this.selectionList.selectItem(value.id, value);\n    }\n\n    this.pauseChangeNotification = false;\n  }\n\n  ngOnInit() {\n    // Watch the internal formArray for changes and propagate them\n    this.selectionList.formArray.valueChanges.pipe(takeUntil(this.destroy$)).subscribe((v) => {\n      if (!this.notifyOnChange || this.pauseChangeNotification) {\n        return;\n      }\n      // Disabled form arrays emit values for disabled controls, we override this to emit an empty array to avoid\n      // emitting values for disabled controls that are \"readonly\" in the table\n      if (this.selectionList.formArray.disabled) {\n        this.notifyOnChange([]);\n        return;\n      }\n      this.notifyOnChange(v);\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  protected handleBlur() {\n    if (!this.notifyOnTouch) {\n      return;\n    }\n\n    this.notifyOnTouch();\n  }\n\n  protected selectItems(items: SelectItemView[]) {\n    this.pauseChangeNotification = true;\n    this.selectionList.selectItems(items.map((i) => i.id));\n    this.pauseChangeNotification = false;\n    if (this.notifyOnChange != undefined) {\n      this.notifyOnChange(this.selectionList.formArray.value);\n    }\n  }\n\n  protected itemIcon(item: AccessItemView) {\n    switch (item.type) {\n      case AccessItemType.Collection:\n        return \"bwi-collection\";\n      case AccessItemType.Group:\n        return \"bwi-users\";\n      case AccessItemType.Member:\n        return \"bwi-user\";\n    }\n  }\n\n  protected permissionLabelId(perm: CollectionPermission) {\n    return this.permissionList.find((p) => p.perm == perm)?.labelId;\n  }\n\n  protected accessAllLabelId(item: AccessItemView) {\n    return item.type == AccessItemType.Group ? \"groupAccessAll\" : \"memberAccessAll\";\n  }\n\n  protected canEditItemPermission(item: AccessItemView) {\n    return this.permissionMode == PermissionMode.Edit && !item.readonly && !item.accessAllItems;\n  }\n\n  private _itemComparator(a: AccessItemView, b: AccessItemView) {\n    if (a.type != b.type) {\n      return a.type - b.type;\n    }\n    return this.i18nService.collator.compare(\n      a.listName + a.labelName + a.readonly,\n      b.listName + b.labelName + b.readonly\n    );\n  }\n}\n","import { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { SelectItemView } from \"@bitwarden/components\";\n\nimport { CollectionAccessSelectionView } from \"../../../core\";\n\n/**\n * Permission options that replace/correspond with readOnly and hidePassword server fields.\n */\nexport enum CollectionPermission {\n  View = \"view\",\n  ViewExceptPass = \"viewExceptPass\",\n  Edit = \"edit\",\n  EditExceptPass = \"editExceptPass\",\n}\n\nexport enum AccessItemType {\n  Collection,\n  Group,\n  Member,\n}\n\n/**\n * A \"generic\" type that describes an item that can be selected from a\n * ng-select list and have its collection permission modified.\n *\n * Currently, it supports Collections, Groups, and Members. Members require some additional\n * details to render in the AccessSelectorComponent so their type is defined separately\n * and then joined back with the base type.\n *\n */\nexport type AccessItemView =\n  | SelectItemView & {\n      /**\n       * Flag that this group/member can access all items.\n       * This will disable the permission editor for this item.\n       */\n      accessAllItems?: boolean;\n\n      /**\n       * Flag that this item cannot be modified.\n       * This will disable the permission editor and will keep\n       * the item always selected.\n       */\n      readonly?: boolean;\n\n      /**\n       * Optional permission that will be rendered for this\n       * item if it set to readonly.\n       */\n      readonlyPermission?: CollectionPermission;\n    } & (\n        | {\n            type: AccessItemType.Collection;\n            viaGroupName?: string;\n          }\n        | {\n            type: AccessItemType.Group;\n          }\n        | {\n            type: AccessItemType.Member; // Members have a few extra details required to display, so they're added here\n            email: string;\n            role: OrganizationUserType;\n            status: OrganizationUserStatusType;\n          }\n      );\n\n/**\n * A type that is emitted as a value for the ngControl\n */\nexport type AccessItemValue = {\n  id: string;\n  permission?: CollectionPermission;\n  type: AccessItemType;\n};\n\n/**\n * Converts the CollectionAccessSelectionView interface to one of the new CollectionPermission values\n * for the dropdown in the AccessSelectorComponent\n * @param value\n */\nexport const convertToPermission = (value: CollectionAccessSelectionView) => {\n  if (value.readOnly) {\n    return value.hidePasswords ? CollectionPermission.ViewExceptPass : CollectionPermission.View;\n  } else {\n    return value.hidePasswords ? CollectionPermission.EditExceptPass : CollectionPermission.Edit;\n  }\n};\n\n/**\n * Converts an AccessItemValue back into a CollectionAccessView class using the CollectionPermission\n * to determine the values for `readOnly` and `hidePassword`\n * @param value\n */\nexport const convertToSelectionView = (value: AccessItemValue) => {\n  return new CollectionAccessSelectionView({\n    id: value.id,\n    readOnly: readOnly(value.permission),\n    hidePasswords: hidePassword(value.permission),\n  });\n};\n\nconst readOnly = (perm: CollectionPermission) =>\n  [CollectionPermission.View, CollectionPermission.ViewExceptPass].includes(perm);\n\nconst hidePassword = (perm: CollectionPermission) =>\n  [CollectionPermission.ViewExceptPass, CollectionPermission.EditExceptPass].includes(perm);\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../../shared/shared.module\";\n\nimport { AccessSelectorComponent } from \"./access-selector.component\";\nimport { UserTypePipe } from \"./user-type.pipe\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [AccessSelectorComponent, UserTypePipe],\n  exports: [AccessSelectorComponent],\n})\nexport class AccessSelectorModule {}\n","import { DIALOG_DATA, DialogConfig, DialogRef } from \"@angular/cdk/dialog\";\nimport { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { combineLatest, of, shareReplay, Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/abstractions/organization-user/responses\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CollectionView } from \"@bitwarden/common/src/models/view/collection.view\";\nimport { BitValidators, DialogService } from \"@bitwarden/components\";\n\nimport {\n  CollectionAdminService,\n  CollectionAdminView,\n  GroupService,\n  GroupView,\n} from \"../../../core\";\nimport {\n  AccessItemType,\n  AccessItemValue,\n  AccessItemView,\n  convertToPermission,\n  convertToSelectionView,\n  PermissionMode,\n} from \"../access-selector\";\n\nexport enum CollectionDialogTabType {\n  Info = 0,\n  Access = 1,\n}\n\nexport interface CollectionDialogParams {\n  collectionId?: string;\n  organizationId: string;\n  initialTab?: CollectionDialogTabType;\n  parentCollectionId?: string;\n}\n\nexport enum CollectionDialogResult {\n  Saved = \"saved\",\n  Canceled = \"canceled\",\n  Deleted = \"deleted\",\n}\n\n@Component({\n  selector: \"app-collection-dialog\",\n  templateUrl: \"collection-dialog.component.html\",\n})\nexport class CollectionDialogComponent implements OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n\n  protected tabIndex: CollectionDialogTabType;\n  protected loading = true;\n  protected organization?: Organization;\n  protected collection?: CollectionView;\n  protected nestOptions: CollectionView[] = [];\n  protected accessItems: AccessItemView[] = [];\n  protected deletedParentName: string | undefined;\n  protected formGroup = this.formBuilder.group({\n    name: [\"\", BitValidators.forbiddenCharacters([\"/\"])],\n    externalId: \"\",\n    parent: null as string | null,\n    access: [[] as AccessItemValue[]],\n  });\n  protected PermissionMode = PermissionMode;\n\n  constructor(\n    @Inject(DIALOG_DATA) private params: CollectionDialogParams,\n    private formBuilder: FormBuilder,\n    private dialogRef: DialogRef<CollectionDialogResult>,\n    private organizationService: OrganizationService,\n    private groupService: GroupService,\n    private collectionService: CollectionAdminService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationUserService: OrganizationUserService\n  ) {\n    this.tabIndex = params.initialTab ?? CollectionDialogTabType.Info;\n  }\n\n  ngOnInit() {\n    const organization$ = of(this.organizationService.get(this.params.organizationId)).pipe(\n      shareReplay({ refCount: true, bufferSize: 1 })\n    );\n    const groups$ = organization$.pipe(\n      switchMap((organization) => {\n        if (!organization.useGroups) {\n          return of([] as GroupView[]);\n        }\n\n        return this.groupService.getAll(this.params.organizationId);\n      })\n    );\n\n    combineLatest({\n      organization: organization$,\n      collections: this.collectionService.getAll(this.params.organizationId),\n      collectionDetails: this.params.collectionId\n        ? this.collectionService.get(this.params.organizationId, this.params.collectionId)\n        : of(null),\n      groups: groups$,\n      users: this.organizationUserService.getAllUsers(this.params.organizationId),\n    })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(({ organization, collections, collectionDetails, groups, users }) => {\n        this.organization = organization;\n        this.accessItems = [].concat(\n          groups.map(mapGroupToAccessItemView),\n          users.data.map(mapUserToAccessItemView)\n        );\n\n        if (this.params.collectionId) {\n          this.collection = collections.find((c) => c.id === this.collectionId);\n          this.nestOptions = collections.filter((c) => c.id !== this.collectionId);\n\n          if (!this.collection) {\n            throw new Error(\"Could not find collection to edit.\");\n          }\n\n          const { name, parent } = parseName(this.collection);\n          if (parent !== null && !this.nestOptions.find((c) => c.name === parent)) {\n            this.deletedParentName = parent;\n          }\n\n          const accessSelections = mapToAccessSelections(collectionDetails);\n          this.formGroup.patchValue({\n            name,\n            externalId: this.collection.externalId,\n            parent,\n            access: accessSelections,\n          });\n        } else {\n          this.nestOptions = collections;\n          const parent = collections.find((c) => c.id === this.params.parentCollectionId);\n          this.formGroup.patchValue({ parent: parent?.name ?? null });\n        }\n\n        this.loading = false;\n      });\n  }\n\n  protected get collectionId() {\n    return this.params.collectionId;\n  }\n\n  protected get editMode() {\n    return this.params.collectionId != undefined;\n  }\n\n  protected async cancel() {\n    this.close(CollectionDialogResult.Canceled);\n  }\n\n  protected submit = async () => {\n    if (this.formGroup.invalid) {\n      return;\n    }\n\n    const collectionView = new CollectionAdminView();\n    collectionView.id = this.params.collectionId;\n    collectionView.organizationId = this.params.organizationId;\n    collectionView.externalId = this.formGroup.controls.externalId.value;\n    collectionView.groups = this.formGroup.controls.access.value\n      .filter((v) => v.type === AccessItemType.Group)\n      .map(convertToSelectionView);\n    collectionView.users = this.formGroup.controls.access.value\n      .filter((v) => v.type === AccessItemType.Member)\n      .map(convertToSelectionView);\n\n    const parent = this.formGroup.controls.parent.value;\n    if (parent) {\n      collectionView.name = `${parent}/${this.formGroup.controls.name.value}`;\n    } else {\n      collectionView.name = this.formGroup.controls.name.value;\n    }\n\n    await this.collectionService.save(collectionView);\n\n    this.close(CollectionDialogResult.Saved);\n  };\n\n  protected delete = async () => {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      this.collection?.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed && this.params.collectionId) {\n      return false;\n    }\n\n    await this.collectionService.delete(this.params.organizationId, this.params.collectionId);\n\n    this.close(CollectionDialogResult.Deleted);\n  };\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private close(result: CollectionDialogResult) {\n    this.dialogRef.close(result);\n  }\n}\n\nfunction parseName(collection: CollectionView) {\n  const nameParts = collection.name?.split(\"/\");\n  const name = nameParts[nameParts.length - 1];\n  const parent = nameParts.length > 1 ? nameParts.slice(0, -1).join(\"/\") : null;\n\n  return { name, parent };\n}\n\nfunction mapGroupToAccessItemView(group: GroupView): AccessItemView {\n  return {\n    id: group.id,\n    type: AccessItemType.Group,\n    listName: group.name,\n    labelName: group.name,\n    accessAllItems: group.accessAll,\n    readonly: group.accessAll,\n  };\n}\n\n// TODO: Use view when user apis are migrated to a service\nfunction mapUserToAccessItemView(user: OrganizationUserUserDetailsResponse): AccessItemView {\n  return {\n    id: user.id,\n    type: AccessItemType.Member,\n    email: user.email,\n    role: user.type,\n    listName: user.name?.length > 0 ? `${user.name} (${user.email})` : user.email,\n    labelName: user.name ?? user.email,\n    status: user.status,\n    accessAllItems: user.accessAll,\n    readonly: user.accessAll,\n  };\n}\n\nfunction mapToAccessSelections(collectionDetails: CollectionAdminView): AccessItemValue[] {\n  if (collectionDetails == undefined) {\n    return [];\n  }\n  return [].concat(\n    collectionDetails.groups.map<AccessItemValue>((selection) => ({\n      id: selection.id,\n      type: AccessItemType.Group,\n      permission: convertToPermission(selection),\n    })),\n    collectionDetails.users.map<AccessItemValue>((selection) => ({\n      id: selection.id,\n      type: AccessItemType.Member,\n      permission: convertToPermission(selection),\n    }))\n  );\n}\n\n/**\n * Strongly typed helper to open a CollectionDialog\n * @param dialogService Instance of the dialog service that will be used to open the dialog\n * @param config Configuration for the dialog\n */\nexport function openCollectionDialog(\n  dialogService: DialogService,\n  config: DialogConfig<CollectionDialogParams>\n) {\n  return dialogService.open<CollectionDialogResult, CollectionDialogParams>(\n    CollectionDialogComponent,\n    config\n  );\n}\n","<form [formGroup]=\"formGroup\" [bitSubmit]=\"submit\">\n  <bit-dialog [disablePadding]=\"!loading\">\n    <span bitDialogTitle>\n      <ng-container *ngIf=\"editMode\">\n        {{ \"editCollection\" | i18n }}\n        <span class=\"tw-text-sm tw-normal-case tw-text-muted\" *ngIf=\"!loading\">{{\n          collection.name\n        }}</span>\n      </ng-container>\n      <ng-container *ngIf=\"!editMode\">\n        {{ \"newCollection\" | i18n }}\n      </ng-container>\n    </span>\n    <div bitDialogContent>\n      <ng-container *ngIf=\"loading\" #spinner>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" aria-hidden=\"true\"></i>\n      </ng-container>\n      <bit-tab-group *ngIf=\"!loading\" [selectedIndex]=\"tabIndex\">\n        <bit-tab label=\"{{ 'collectionInfo' | i18n }}\">\n          <bit-form-field>\n            <bit-label>{{ \"name\" | i18n }}</bit-label>\n            <input bitInput formControlName=\"name\" required />\n          </bit-form-field>\n\n          <bit-form-field>\n            <bit-label>{{ \"externalId\" | i18n }}</bit-label>\n            <input bitInput formControlName=\"externalId\" />\n            <bit-hint>{{ \"externalIdDesc\" | i18n }}</bit-hint>\n          </bit-form-field>\n\n          <bit-form-field>\n            <bit-label>{{ \"nestCollectionUnder\" | i18n }}</bit-label>\n            <select bitInput formControlName=\"parent\">\n              <option [ngValue]=\"null\">-</option>\n              <option *ngIf=\"deletedParentName\" disabled [ngValue]=\"deletedParentName\">\n                {{ deletedParentName }} ({{ \"deleted\" | i18n }})\n              </option>\n              <option *ngFor=\"let collection of nestOptions\" [ngValue]=\"collection.name\">\n                {{ collection.name }}\n              </option>\n            </select>\n          </bit-form-field>\n        </bit-tab>\n        <bit-tab label=\"{{ 'access' | i18n }}\">\n          <bit-access-selector\n            *ngIf=\"organization.useGroups\"\n            [permissionMode]=\"PermissionMode.Edit\"\n            formControlName=\"access\"\n            [items]=\"accessItems\"\n            [columnHeader]=\"'groupAndMemberColumnHeader' | i18n\"\n            [selectorLabelText]=\"'selectGroupsAndMembers' | i18n\"\n            [selectorHelpText]=\"'userPermissionOverrideHelper' | i18n\"\n            [emptySelectionText]=\"'noMembersOrGroupsAdded' | i18n\"\n          ></bit-access-selector>\n          <bit-access-selector\n            *ngIf=\"!organization.useGroups\"\n            [permissionMode]=\"PermissionMode.Edit\"\n            formControlName=\"access\"\n            [items]=\"accessItems\"\n            [columnHeader]=\"'memberColumnHeader' | i18n\"\n            [selectorLabelText]=\"'selectMembers' | i18n\"\n            [emptySelectionText]=\"'noMembersAdded' | i18n\"\n          ></bit-access-selector>\n        </bit-tab>\n      </bit-tab-group>\n    </div>\n    <div bitDialogFooter class=\"tw-flex tw-flex-row tw-gap-2\">\n      <button type=\"submit\" bitButton bitFormButton buttonType=\"primary\" [disabled]=\"loading\">\n        {{ \"save\" | i18n }}\n      </button>\n      <button\n        type=\"button\"\n        bitButton\n        bitFormButton\n        buttonType=\"secondary\"\n        (click)=\"cancel()\"\n        [disabled]=\"loading\"\n      >\n        {{ \"cancel\" | i18n }}\n      </button>\n      <button\n        *ngIf=\"editMode && organization?.canDeleteAssignedCollections\"\n        type=\"button\"\n        bitIconButton=\"bwi-trash\"\n        buttonType=\"danger\"\n        class=\"tw-ml-auto\"\n        bitFormButton\n        [appA11yTitle]=\"'delete' | i18n\"\n        [bitAction]=\"delete\"\n        [disabled]=\"loading\"\n      ></button>\n    </div>\n  </bit-dialog>\n</form>\n","import { AbstractControl, FormControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\nexport function forbiddenCharacters(characters: string[]): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    if (!(control instanceof FormControl)) {\n      throw new Error(\"forbiddenCharacters only supports validating FormControls\");\n    }\n\n    if (control.value === null || control.value === undefined) {\n      return null;\n    }\n\n    const value = String(control.value);\n\n    for (const char of value) {\n      if (characters.includes(char)) {\n        return { forbiddenCharacters: { value: control.value, characters } };\n      }\n    }\n\n    return null;\n  };\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../../shared/shared.module\";\nimport { AccessSelectorModule } from \"../access-selector\";\n\nimport { CollectionDialogComponent } from \"./collection-dialog.component\";\n\n@NgModule({\n  imports: [SharedModule, AccessSelectorModule],\n  declarations: [CollectionDialogComponent],\n  exports: [CollectionDialogComponent],\n})\nexport class CollectionDialogModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared/shared.module\";\n\nimport { AccessSelectorModule } from \"./components/access-selector\";\nimport { CollectionDialogModule } from \"./components/collection-dialog\";\nimport { SearchInputComponent } from \"./components/search-input/search-input.component\";\n\n@NgModule({\n  imports: [SharedModule, CollectionDialogModule, AccessSelectorModule],\n  declarations: [SearchInputComponent],\n  exports: [SharedModule, CollectionDialogModule, AccessSelectorModule, SearchInputComponent],\n})\nexport class SharedOrganizationModule {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"cipherAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"cipherAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"cipher\">\n        <app-callout type=\"info\" *ngIf=\"allowOwnershipAssignment() && !allowPersonal\">\n          {{ \"personalOwnershipPolicyInEffect\" | i18n }}\n        </app-callout>\n        <div class=\"row\" *ngIf=\"!editMode && !viewOnly\">\n          <div class=\"col-6 form-group\">\n            <label for=\"type\">{{ \"whatTypeOfItem\" | i18n }}</label>\n            <select\n              id=\"type\"\n              name=\"Type\"\n              [(ngModel)]=\"cipher.type\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted\"\n              appAutofocus\n            >\n              <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"cipher.name\"\n              required\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"col-6 form-group\" *ngIf=\"!organization\">\n            <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n            <select\n              id=\"folder\"\n              name=\"FolderId\"\n              [(ngModel)]=\"cipher.folderId\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            >\n              <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n            </select>\n          </div>\n        </div>\n        <!-- Login -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Login\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"loginUsername\">{{ \"username\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginUsername\"\n                  class=\"form-control\"\n                  type=\"text\"\n                  name=\"Login.Username\"\n                  [(ngModel)]=\"cipher.login.username\"\n                  appInputVerbatim\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                  [readonly]=\"!cipher.edit && editMode\"\n                />\n                <div class=\"input-group-append\" *ngIf=\"!cipher.isDeleted\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n                    (click)=\"copy(cipher.login.username, 'username', 'Username')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-6 form-group\">\n              <div class=\"d-flex\">\n                <label for=\"loginPassword\">{{ \"password\" | i18n }}</label>\n                <div class=\"ml-auto d-flex\" *ngIf=\"!cipher.isDeleted && !viewOnly\">\n                  <a\n                    href=\"#\"\n                    class=\"d-block mr-2 bwi-icon-above-input\"\n                    appStopClick\n                    appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                    (click)=\"generatePassword()\"\n                    *ngIf=\"cipher.viewPassword && !(!cipher.edit && editMode)\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-fw bwi-generate\" aria-hidden=\"true\"></i>\n                  </a>\n                  <a\n                    href=\"#\"\n                    class=\"d-block bwi-icon-above-input\"\n                    #checkPasswordBtn\n                    appStopClick\n                    appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n                    (click)=\"checkPassword()\"\n                    [appApiAction]=\"checkPasswordPromise\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-check-circle\"\n                      [hidden]=\"$any(checkPasswordBtn).loading\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-spinner bwi-spin\"\n                      aria-hidden=\"true\"\n                      [hidden]=\"!$any(checkPasswordBtn).loading\"\n                      title=\"{{ 'loading' | i18n }}\"\n                    ></i>\n                  </a>\n                  <a\n                    href=\"#\"\n                    class=\"d-block bwi-icon-above-input\"\n                    appStopClick\n                    [appA11yTitle]=\"'toggleCharacterCount' | i18n\"\n                    (click)=\"togglePasswordCount()\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-fw bwi-numbered-list\" aria-hidden=\"true\"></i>\n                  </a>\n                </div>\n              </div>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginPassword\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Login.Password\"\n                  [(ngModel)]=\"cipher.login.password\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n                  [readonly]=\"!cipher.edit && editMode\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePassword()\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                    (click)=\"copy(cipher.login.password, 'password', 'Password')\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"showPasswordCount\" class=\"tw-mb-4\">\n            <label>{{ \"passwordCharacterCount\" | i18n }}</label>\n            <div class=\"tw-flex tw-justify-between\">\n              <bit-color-password\n                [password]=\"cipher.login.password\"\n                [showCount]=\"true\"\n              ></bit-color-password>\n              <button type=\"button\" bitLink (click)=\"togglePasswordCount()\">\n                {{ \"hide\" | i18n }}\n              </button>\n            </div>\n          </div>\n          <div class=\"tw-flex tw-flex-row\">\n            <div class=\"tw-mb-4 tw-w-1/2\">\n              <label for=\"loginTotp\">{{ \"authenticatorKeyTotp\" | i18n }}</label>\n              <input\n                id=\"loginTotp\"\n                type=\"{{ cipher.viewPassword ? 'text' : 'password' }}\"\n                name=\"Login.Totp\"\n                class=\"form-control text-monospace\"\n                [(ngModel)]=\"cipher.login.totp\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"tw-mb-4 tw-ml-4 tw-flex tw-w-1/2 tw-items-end\" [ngClass]=\"{ low: totpLow }\">\n              <div\n                class=\"totp tw-flex tw-flex-row tw-items-center\"\n                *ngIf=\"!cipher.login.totp || !totpCode\"\n              >\n                <span class=\"totp-countdown\">\n                  <span class=\"totp-sec tw-text-muted\">15</span>\n                  <svg>\n                    <g>\n                      <circle\n                        class=\"totp-circle-muted inner\"\n                        r=\"12.6\"\n                        cy=\"16\"\n                        cx=\"16\"\n                        opacity=\"0.25\"\n                        [ngStyle]=\"{ 'stroke-dashoffset.px': 40 }\"\n                      ></circle>\n                      <circle\n                        class=\"totp-circle-muted outer\"\n                        opacity=\"0.25\"\n                        r=\"14\"\n                        cy=\"16\"\n                        cx=\"16\"\n                      ></circle>\n                    </g>\n                  </svg>\n                </span>\n                <span\n                  class=\"totp-code tw-mr-3 tw-ml-2 tw-text-muted\"\n                  title=\"{{ 'verificationCodeTotp' | i18n }}\"\n                  >--- ---</span\n                >\n                <i class=\"bwi bwi-lg bwi-clone tw-text-muted\" aria-hidden=\"true\"></i>\n              </div>\n              <div class=\"tw-pb-2\" *ngIf=\"!cipher.login.totp || !totpCode\">\n                <app-premium-badge\n                  *ngIf=\"!organization && !cipher.organizationId\"\n                  class=\"ml-3\"\n                ></app-premium-badge>\n                <a\n                  href=\"#\"\n                  appStopClick\n                  bitBadge\n                  badgeType=\"primary\"\n                  class=\"tw-ml-4\"\n                  (click)=\"upgradeOrganization()\"\n                  *ngIf=\"\n                    (organization && !organization.useTotp) ||\n                    (!organization &&\n                      !canAccessPremium &&\n                      cipher.organizationId &&\n                      !cipher.organizationUseTotp)\n                  \"\n                >\n                  {{ \"upgrade\" | i18n }}\n                </a>\n              </div>\n              <div\n                *ngIf=\"cipher.login.totp && totpCode\"\n                class=\"totp tw-flex tw-flex-row tw-items-center\"\n              >\n                <span class=\"totp-countdown\">\n                  <span class=\"totp-sec\">{{ totpSec }}</span>\n                  <svg>\n                    <g>\n                      <circle\n                        class=\"totp-circle inner\"\n                        r=\"12.6\"\n                        cy=\"16\"\n                        cx=\"16\"\n                        [ngStyle]=\"{ 'stroke-dashoffset.px': totpDash }\"\n                      ></circle>\n                      <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n                    </g>\n                  </svg>\n                </span>\n                <span\n                  class=\"totp-code tw-mr-2 tw-ml-2 tw-mt-1\"\n                  title=\"{{ 'verificationCodeTotp' | i18n }}\"\n                  >{{ totpCodeFormatted }}</span\n                >\n                <button\n                  type=\"button\"\n                  class=\"tw-items-center tw-border-none tw-bg-transparent tw-text-primary-500\"\n                  appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n                  (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"\n                >\n                  <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <ng-container *ngIf=\"cipher.login.hasUris\">\n            <div\n              role=\"group\"\n              class=\"row\"\n              *ngFor=\"let u of cipher.login.uris; let i = index; trackBy: trackByFunction\"\n              attr.aria-label=\"{{ 'uriPosition' | i18n: i + 1 }}\"\n            >\n              <div class=\"col-7 form-group\">\n                <label for=\"loginUri{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n                <div class=\"input-group\">\n                  <input\n                    class=\"form-control\"\n                    id=\"loginUri{{ i }}\"\n                    type=\"text\"\n                    name=\"Login.Uris[{{ i }}].Uri\"\n                    [(ngModel)]=\"u.uri\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                    placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                    appInputVerbatim\n                  />\n                  <div class=\"input-group-append\">\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'launch' | i18n }}\"\n                      (click)=\"launch(u)\"\n                      [disabled]=\"!u.canLaunch\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n                    </button>\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'copyUri' | i18n }}\"\n                      (click)=\"copy(u.uri, 'uri', 'URI')\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-5 form-group\">\n                <div class=\"d-flex\">\n                  <label for=\"loginUriMatch{{ i }}\">\n                    {{ \"matchDetection\" | i18n }}\n                  </label>\n                  <a\n                    class=\"ml-auto\"\n                    href=\"https://bitwarden.com/help/uri-match-detection/\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n                  >\n                    <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n                  </a>\n                </div>\n                <div class=\"d-flex\">\n                  <select\n                    class=\"form-control overflow-hidden\"\n                    id=\"loginUriMatch{{ i }}\"\n                    name=\"Login.Uris[{{ i }}].Match\"\n                    [(ngModel)]=\"u.match\"\n                    (change)=\"loginUriMatchChanged(u)\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                  >\n                    <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">\n                      {{ o.name }}\n                    </option>\n                  </select>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-link text-danger ml-2\"\n                    (click)=\"removeUri(u)\"\n                    appA11yTitle=\"{{ 'remove' | i18n }}\"\n                    *ngIf=\"!cipher.isDeleted && !viewOnly\"\n                  >\n                    <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </ng-container>\n          <a\n            href=\"#\"\n            appStopClick\n            (click)=\"addUri()\"\n            class=\"d-inline-block mb-3\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\"\n          >\n            <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n          </a>\n        </ng-container>\n        <!-- Card -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Card\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCardholderName\">{{ \"cardholderName\" | i18n }}</label>\n              <input\n                id=\"cardCardholderName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.CardCardholderName\"\n                [(ngModel)]=\"cipher.card.cardholderName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"cardBrand\">{{ \"brand\" | i18n }}</label>\n              <span *ngIf=\"!(!cipher.edit && editMode); else readonlyCardBrand\">\n                <select\n                  id=\"cardBrand\"\n                  class=\"form-control\"\n                  name=\"Card.Brand\"\n                  [(ngModel)]=\"cipher.card.brand\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                >\n                  <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">\n                    {{ o.name }}\n                  </option>\n                </select>\n              </span>\n              <ng-template #readonlyCardBrand>\n                <input\n                  id=\"cardBrand\"\n                  class=\"form-control\"\n                  name=\"Card.Brand\"\n                  type=\"text\"\n                  [readonly]=\"true\"\n                  [value]=\"cipher.card.brand\"\n                />\n              </ng-template>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardNumber\">{{ \"number\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardNumber\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardNumber ? 'text' : 'password' }}\"\n                  name=\"Card.Number\"\n                  [(ngModel)]=\"cipher.card.number\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                  [readonly]=\"!cipher.edit && editMode\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardNumber()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{\n                        'bwi-eye': !showCardNumber,\n                        'bwi-eye-slash': showCardNumber\n                      }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n                    (click)=\"copy(cipher.card.number, 'number', 'Number')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpMonth\">{{ \"expirationMonth\" | i18n }}</label>\n              <span *ngIf=\"!(!cipher.edit && editMode); else readonlyCardExpMonth\">\n                <select\n                  id=\"cardExpMonth\"\n                  class=\"form-control\"\n                  name=\"Card.ExpMonth\"\n                  [(ngModel)]=\"cipher.card.expMonth\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                >\n                  <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">\n                    {{ o.name }}\n                  </option>\n                </select>\n              </span>\n              <ng-template #readonlyCardExpMonth>\n                <input\n                  id=\"cardExpMonth\"\n                  class=\"form-control\"\n                  type=\"text\"\n                  name=\"Card.ExpMonth\"\n                  [readonly]=\"true\"\n                  [value]=\"getCardExpMonthDisplay()\"\n                />\n              </ng-template>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpYear\">{{ \"expirationYear\" | i18n }}</label>\n              <input\n                id=\"cardExpYear\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.ExpYear\"\n                [(ngModel)]=\"cipher.card.expYear\"\n                placeholder=\"{{ 'ex' | i18n }} 2019\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCode\">{{ \"securityCode\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardCode\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardCode ? 'text' : 'password' }}\"\n                  name=\"Card.Code\"\n                  [(ngModel)]=\"cipher.card.code\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                  [readonly]=\"!cipher.edit && editMode\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardCode()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'securityCode' | i18n }}\"\n                    (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <!-- Identity -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Identity\">\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idTitle\">{{ \"title\" | i18n }}</label>\n              <span *ngIf=\"!(!cipher.edit && editMode); else readonlyIdTitle\">\n                <select\n                  id=\"idTitle\"\n                  class=\"form-control\"\n                  name=\"Identity.Title\"\n                  [(ngModel)]=\"cipher.identity.title\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                >\n                  <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">\n                    {{ o.name }}\n                  </option>\n                </select>\n              </span>\n              <ng-template #readonlyIdTitle>\n                <input\n                  id=\"idTitle\"\n                  class=\"form-control\"\n                  name=\"Identity.Title\"\n                  type=\"text\"\n                  [readonly]=\"true\"\n                  [value]=\"cipher.identity.title\"\n                />\n              </ng-template>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idFirstName\">{{ \"firstName\" | i18n }}</label>\n              <input\n                id=\"idFirstName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.FirstName\"\n                [(ngModel)]=\"cipher.identity.firstName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idMiddleName\">{{ \"middleName\" | i18n }}</label>\n              <input\n                id=\"idMiddleName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.MiddleName\"\n                [(ngModel)]=\"cipher.identity.middleName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLastName\">{{ \"lastName\" | i18n }}</label>\n              <input\n                id=\"idLastName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LastName\"\n                [(ngModel)]=\"cipher.identity.lastName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idUsername\">{{ \"username\" | i18n }}</label>\n              <input\n                id=\"idUsername\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Username\"\n                [(ngModel)]=\"cipher.identity.username\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idCompany\">{{ \"company\" | i18n }}</label>\n              <input\n                id=\"idCompany\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Company\"\n                [(ngModel)]=\"cipher.identity.company\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idSsn\">{{ \"ssn\" | i18n }}</label>\n              <input\n                id=\"idSsn\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.SSN\"\n                [(ngModel)]=\"cipher.identity.ssn\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idPassportNumber\">{{ \"passportNumber\" | i18n }}</label>\n              <input\n                id=\"idPassportNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PassportNumber\"\n                [(ngModel)]=\"cipher.identity.passportNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLicenseNumber\">{{ \"licenseNumber\" | i18n }}</label>\n              <input\n                id=\"idLicenseNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LicenseNumber\"\n                [(ngModel)]=\"cipher.identity.licenseNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idEmail\">{{ \"email\" | i18n }}</label>\n              <input\n                id=\"idEmail\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"email\"\n                name=\"Identity.Email\"\n                [(ngModel)]=\"cipher.identity.email\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPhone\">{{ \"phone\" | i18n }}</label>\n              <input\n                id=\"idPhone\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"tel\"\n                name=\"Identity.Phone\"\n                [(ngModel)]=\"cipher.identity.phone\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress1\">{{ \"address1\" | i18n }}</label>\n              <input\n                id=\"idAddress1\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address1\"\n                [(ngModel)]=\"cipher.identity.address1\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress2\">{{ \"address2\" | i18n }}</label>\n              <input\n                id=\"idAddress2\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address2\"\n                [(ngModel)]=\"cipher.identity.address2\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress3\">{{ \"address3\" | i18n }}</label>\n              <input\n                id=\"idAddress3\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address3\"\n                [(ngModel)]=\"cipher.identity.address3\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idCity\">{{ \"cityTown\" | i18n }}</label>\n              <input\n                id=\"idCity\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.City\"\n                [(ngModel)]=\"cipher.identity.city\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idState\">{{ \"stateProvince\" | i18n }}</label>\n              <input\n                id=\"idState\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.State\"\n                [(ngModel)]=\"cipher.identity.state\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n              <input\n                id=\"idPostalCode\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PostalCode\"\n                [(ngModel)]=\"cipher.identity.postalCode\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idCountry\">{{ \"country\" | i18n }}</label>\n              <input\n                id=\"idCountry\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Country\"\n                [(ngModel)]=\"cipher.identity.country\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n        </ng-container>\n        <div class=\"form-group\">\n          <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n          <textarea\n            id=\"notes\"\n            name=\"Notes\"\n            rows=\"6\"\n            [(ngModel)]=\"cipher.notes\"\n            [disabled]=\"cipher.isDeleted || viewOnly\"\n            [readonly]=\"!cipher.edit && editMode\"\n            class=\"form-control\"\n          ></textarea>\n        </div>\n        <app-vault-add-edit-custom-fields\n          *ngIf=\"!(!cipher.hasFields && !cipher.edit && editMode)\"\n          [cipher]=\"cipher\"\n          [thisCipherType]=\"cipher.type\"\n          [viewOnly]=\"viewOnly\"\n          [copy]=\"copy.bind(this)\"\n          [editMode]=\"editMode\"\n        ></app-vault-add-edit-custom-fields>\n        <ng-container *ngIf=\"allowOwnershipAssignment()\">\n          <h3 class=\"mt-4\">{{ \"ownership\" | i18n }}</h3>\n          <div class=\"row\">\n            <div class=\"col-5\">\n              <label for=\"organizationId\">{{ \"whoOwnsThisItem\" | i18n }}</label>\n              <select\n                id=\"organizationId\"\n                class=\"form-control\"\n                name=\"OrganizationId\"\n                [(ngModel)]=\"cipher.organizationId\"\n                (change)=\"organizationChanged()\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n          <h3 class=\"mt-4\">{{ \"collections\" | i18n }}</h3>\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <ng-container *ngIf=\"collections && collections.length\">\n            <div class=\"form-check\" *ngFor=\"let c of collections; let i = index\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"$any(c).checked\"\n                id=\"collection-{{ i }}\"\n                name=\"Collection[{{ i }}].Checked\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n              <label class=\"form-check-label\" for=\"collection-{{ i }}\">{{ c.name }}</label>\n            </div>\n          </ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"editMode\">\n          <div class=\"small text-muted mt-4\">\n            <div>\n              <b class=\"font-weight-semibold\">{{ \"dateUpdated\" | i18n }}:</b>\n              {{ cipher.revisionDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"cipher.creationDate\">\n              <b class=\"font-weight-semibold\">{{ \"dateCreated\" | i18n }}:</b>\n              {{ cipher.creationDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"showRevisionDate\">\n              <b class=\"font-weight-semibold\">{{ \"datePasswordUpdated\" | i18n }}:</b>\n              {{ cipher.passwordRevisionDisplayDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"hasPasswordHistory\">\n              <b class=\"font-weight-semibold\">{{ \"passwordHistory\" | i18n }}:</b>\n              <a href=\"#\" appStopClick (click)=\"viewHistory()\" title=\"{{ 'view' | i18n }}\">\n                {{ cipher.passwordHistory.length }}\n              </a>\n            </div>\n            <div class=\"ml-3\" *ngIf=\"viewingPasswordHistory\">\n              <div *ngFor=\"let ph of cipher.passwordHistory\">\n                {{ ph.lastUsedDate | date: \"short\" }} -\n                <bit-color-password [password]=\"ph.password\"></bit-color-password>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"canUseReprompt\">\n          <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [ngModel]=\"reprompt\"\n              (change)=\"repromptChanged()\"\n              id=\"passwordPrompt\"\n              name=\"passwordPrompt\"\n              [disabled]=\"cipher.isDeleted || viewOnly || (!cipher.edit && editMode)\"\n            />\n            <label class=\"form-check-label\" for=\"passwordPrompt\">{{\n              \"passwordPrompt\" | i18n\n            }}</label>\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/managing-items/#protect-individual-items\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (cipher?.isDeleted ? \"restore\" : \"save\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ (viewOnly ? \"close\" : \"cancel\") | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"cipher && !viewOnly\">\n          <button\n            *ngIf=\"!organization && !cipher.isDeleted\"\n            type=\"button\"\n            (click)=\"toggleFavorite()\"\n            class=\"btn btn-link\"\n            appA11yTitle=\"{{ (cipher.favorite ? 'unfavorite' : 'favorite') | i18n }}\"\n          >\n            <i\n              class=\"bwi bwi-lg\"\n              [ngClass]=\"{ 'bwi-star-f': cipher.favorite, 'bwi-star': !cipher.favorite }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ (cipher.isDeleted ? 'permanentlyDelete' : 'delete') | i18n }}\"\n            *ngIf=\"editMode && !cloneMode && !(!cipher.edit && editMode)\"\n            [disabled]=\"$any(deleteBtn).loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipher.data\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherCreateRequest } from \"@bitwarden/common/models/request/cipher-create.request\";\nimport { CipherRequest } from \"@bitwarden/common/models/request/cipher.request\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../../vault/add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  originalCipher: Cipher = null;\n  protected override componentName = \"app-org-vault-add-edit\";\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    private apiService: ApiService,\n    messagingService: MessagingService,\n    eventCollectionService: EventCollectionService,\n    policyService: PolicyService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventCollectionService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  protected allowOwnershipAssignment() {\n    if (\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    ) {\n      if (this.organization != null) {\n        return this.cloneMode && this.organization.canEditAnyCollection;\n      } else {\n        return !this.editMode || this.cloneMode;\n      }\n    }\n    return false;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    const data = new CipherData(response);\n\n    data.edit = true;\n    const cipher = new Cipher(data);\n    this.originalCipher = cipher;\n    return cipher;\n  }\n\n  protected encryptCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.encryptCipher();\n    }\n    return this.cipherService.encrypt(this.cipher, null, this.originalCipher);\n  }\n\n  protected async saveCipher(cipher: Cipher) {\n    if (!this.organization.canEditAnyCollection || cipher.organizationId == null) {\n      return super.saveCipher(cipher);\n    }\n    if (this.editMode && !this.cloneMode) {\n      const request = new CipherRequest(cipher);\n      return this.apiService.putCipherAdmin(this.cipherId, request);\n    } else {\n      const request = new CipherCreateRequest(cipher);\n      return this.apiService.postCipherAdmin(request);\n    }\n  }\n\n  protected async deleteCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher();\n    }\n    return this.cipher.isDeleted\n      ? this.apiService.deleteCipherAdmin(this.cipherId)\n      : this.apiService.putDeleteCipherAdmin(this.cipherId);\n  }\n}\n","export class EmergencyAccessAcceptRequest {\n  token: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"emergencyAccess\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ name }}\n          </p>\n          <p>{{ \"acceptEmergencyAccess\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EmergencyAccessAcceptRequest } from \"@bitwarden/common/models/request/emergency-access-accept.request\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-emergency\",\n  templateUrl: \"accept-emergency.component.html\",\n})\nexport class AcceptEmergencyComponent extends BaseAcceptComponent {\n  name: string;\n\n  protected requiredParameters: string[] = [\"id\", \"name\", \"email\", \"token\"];\n  protected failedShortMessage = \"emergencyInviteAcceptFailedShort\";\n  protected failedMessage = \"emergencyInviteAcceptFailed\";\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params): Promise<void> {\n    const request = new EmergencyAccessAcceptRequest();\n    request.token = qParams.token;\n    this.actionPromise = this.apiService.postEmergencyAccessAccept(qParams.id, request);\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"emergencyInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params): Promise<void> {\n    this.name = qParams.name;\n    if (this.name != null) {\n      // Fix URL encoding of space issue with Angular\n      this.name = this.name.replace(/\\+/g, \" \");\n    }\n  }\n}\n","export class OrganizationUserAcceptRequest {\n  token: string;\n  // Used to auto-enroll in master password reset\n  resetPasswordKey: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img src=\"../../images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinOrganization\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ orgName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinOrganizationDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserAcceptRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\nimport { BaseAcceptComponent } from \"../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-organization\",\n  templateUrl: \"accept-organization.component.html\",\n})\nexport class AcceptOrganizationComponent extends BaseAcceptComponent {\n  orgName: string;\n\n  protected requiredParameters: string[] = [\"organizationId\", \"organizationUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService,\n    private cryptoService: CryptoService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params): Promise<void> {\n    this.actionPromise = this.prepareAcceptRequest(qParams).then(async (request) => {\n      await this.organizationUserService.postOrganizationUserAccept(\n        qParams.organizationId,\n        qParams.organizationUserId,\n        request\n      );\n    });\n\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"inviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n\n    await this.stateService.setOrganizationInvitation(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params): Promise<void> {\n    this.orgName = qParams.organizationName;\n    if (this.orgName != null) {\n      // Fix URL encoding of space issue with Angular\n      this.orgName = this.orgName.replace(/\\+/g, \" \");\n    }\n    await this.stateService.setOrganizationInvitation(qParams);\n  }\n\n  private async prepareAcceptRequest(qParams: Params): Promise<OrganizationUserAcceptRequest> {\n    const request = new OrganizationUserAcceptRequest();\n    request.token = qParams.token;\n\n    if (await this.performResetPasswordAutoEnroll(qParams)) {\n      const response = await this.organizationApiService.getKeys(qParams.organizationId);\n\n      if (response == null) {\n        throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n      }\n\n      const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n      // RSA Encrypt user's encKey.key with organization public key\n      const encKey = await this.cryptoService.getEncKey();\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Add reset password key to accept request\n      request.resetPasswordKey = encryptedKey.encryptedString;\n    }\n    return request;\n  }\n\n  private async performResetPasswordAutoEnroll(qParams: Params): Promise<boolean> {\n    let policyList: Policy[] = null;\n    try {\n      const policies = await this.policyApiService.getPoliciesByToken(\n        qParams.organizationId,\n        qParams.token,\n        qParams.email,\n        qParams.organizationUserId\n      );\n      policyList = this.policyService.mapPoliciesFromToken(policies);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (policyList != null) {\n      const result = this.policyService.getResetPasswordPolicyOptions(\n        policyList,\n        qParams.organizationId\n      );\n      // Return true if policy enabled and auto-enroll enabled\n      return result[1] && result[0].autoEnrollEnabled;\n    }\n\n    return false;\n  }\n}\n","export class PasswordHintRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PasswordHintRequest } from \"@bitwarden/common/models/request/password-hint.request\";\n\n@Directive()\nexport class HintComponent implements OnInit {\n  email = \"\";\n  formPromise: Promise<any>;\n\n  protected successRoute = \"login\";\n  protected onSuccessfulSubmit: () => void;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private loginService: LoginService\n  ) {}\n\n  ngOnInit(): void {\n    this.email = this.loginService.getEmail() ?? \"\";\n  }\n\n  async submit() {\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"masterPassSent\"));\n      if (this.onSuccessfulSubmit != null) {\n        this.onSuccessfulSubmit();\n      } else if (this.router != null) {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { HintComponent as BaseHintComponent } from \"@bitwarden/angular/components/hint.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-hint\",\n  templateUrl: \"hint.component.html\",\n})\nexport class HintComponent extends BaseHintComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    loginService: LoginService\n  ) {\n    super(router, i18nService, apiService, platformUtilsService, logService, loginService);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"passwordHint\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n            <small class=\"form-text text-muted\">{{ \"enterEmailToGetHint\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Directive, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subject } from \"rxjs\";\nimport { concatMap, take, takeUntil } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { KeySuffixOptions } from \"@bitwarden/common/enums/keySuffixOptions\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\n\n@Directive()\nexport class LockComponent implements OnInit, OnDestroy {\n  masterPassword = \"\";\n  pin = \"\";\n  showPassword = false;\n  email: string;\n  pinLock = false;\n  webVaultHostname = \"\";\n  formPromise: Promise<any>;\n  supportsBiometric: boolean;\n  biometricLock: boolean;\n  biometricText: string;\n  hideInput: boolean;\n\n  protected successRoute = \"vault\";\n  protected onSuccessfulSubmit: () => Promise<void>;\n\n  private invalidPinAttempts = 0;\n  private pinSet: [boolean, boolean];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected cryptoService: CryptoService,\n    protected vaultTimeoutService: VaultTimeoutService,\n    protected vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected apiService: ApiService,\n    protected logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    protected ngZone: NgZone\n  ) {}\n\n  async ngOnInit() {\n    this.stateService.activeAccount$\n      .pipe(\n        concatMap(async () => {\n          await this.load();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async submit() {\n    if (this.pinLock) {\n      return await this.handlePinRequiredUnlock();\n    }\n\n    await this.handleMasterPasswordRequiredUnlock();\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const success = (await this.cryptoService.getKey(KeySuffixOptions.Biometric)) != null;\n\n    if (success) {\n      await this.doContinue();\n    }\n\n    return success;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    const input = document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\");\n    if (this.ngZone.isStable) {\n      input.focus();\n    } else {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => input.focus());\n    }\n  }\n\n  private async handlePinRequiredUnlock() {\n    if (this.pin == null || this.pin === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"pinRequired\")\n      );\n      return;\n    }\n\n    return await this.doUnlockWithPin();\n  }\n\n  private async doUnlockWithPin() {\n    let failed = true;\n    try {\n      const kdf = await this.stateService.getKdfType();\n      const kdfIterations = await this.stateService.getKdfIterations();\n      if (this.pinSet[0]) {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfIterations,\n          await this.stateService.getDecryptedPinProtected()\n        );\n        const encKey = await this.cryptoService.getEncKey(key);\n        const protectedPin = await this.stateService.getProtectedPin();\n        const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n        failed = decPin !== this.pin;\n        if (!failed) {\n          await this.setKeyAndContinue(key);\n        }\n      } else {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfIterations\n        );\n        failed = false;\n        await this.setKeyAndContinue(key);\n      }\n    } catch {\n      failed = true;\n    }\n\n    if (failed) {\n      this.invalidPinAttempts++;\n      if (this.invalidPinAttempts >= 5) {\n        this.messagingService.send(\"logout\");\n        return;\n      }\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidPin\")\n      );\n    }\n  }\n\n  private async handleMasterPasswordRequiredUnlock() {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return;\n    }\n    await this.doUnlockWithMasterPassword();\n  }\n\n  private async doUnlockWithMasterPassword() {\n    const kdf = await this.stateService.getKdfType();\n    const kdfIterations = await this.stateService.getKdfIterations();\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      kdf,\n      kdfIterations\n    );\n    const storedKeyHash = await this.cryptoService.getKeyHash();\n\n    let passwordValid = false;\n\n    if (storedKeyHash != null) {\n      passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n    } else {\n      const request = new SecretVerificationRequest();\n      const serverKeyHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      request.masterPasswordHash = serverKeyHash;\n      try {\n        this.formPromise = this.apiService.postAccountVerifyPassword(request);\n        await this.formPromise;\n        passwordValid = true;\n        const localKeyHash = await this.cryptoService.hashPassword(\n          this.masterPassword,\n          key,\n          HashPurpose.LocalAuthorization\n        );\n        await this.cryptoService.setKeyHash(localKeyHash);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (!passwordValid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    if (this.pinSet[0]) {\n      const protectedPin = await this.stateService.getProtectedPin();\n      const encKey = await this.cryptoService.getEncKey(key);\n      const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n      const pinKey = await this.cryptoService.makePinKey(decPin, this.email, kdf, kdfIterations);\n      await this.stateService.setDecryptedPinProtected(\n        await this.cryptoService.encrypt(key.key, pinKey)\n      );\n    }\n    await this.setKeyAndContinue(key);\n  }\n  private async setKeyAndContinue(key: SymmetricCryptoKey) {\n    await this.cryptoService.setKey(key);\n    await this.doContinue();\n  }\n\n  private async doContinue() {\n    await this.stateService.setEverBeenUnlocked(true);\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    this.messagingService.send(\"unlocked\");\n    if (this.onSuccessfulSubmit != null) {\n      await this.onSuccessfulSubmit();\n    } else if (this.router != null) {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  private async load() {\n    this.pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n    this.pinLock =\n      (this.pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) ||\n      this.pinSet[1];\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometricLock =\n      (await this.vaultTimeoutSettingsService.isBiometricLockSet()) &&\n      ((await this.cryptoService.hasKeyStored(KeySuffixOptions.Biometric)) ||\n        !this.platformUtilsService.supportsSecureStorage());\n    this.biometricText = await this.stateService.getBiometricText();\n    this.email = await this.stateService.getEmail();\n    const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.hideInput = usesKeyConnector && !this.pinLock;\n\n    // Users with key connector and without biometric or pin has no MP to unlock using\n    if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n      await this.vaultTimeoutService.logOut();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const vaultUrl =\n      webVaultUrl === \"https://vault.bitwarden.com\" ? \"https://bitwarden.com\" : webVaultUrl;\n    this.webVaultHostname = Utils.getHostname(vaultUrl);\n  }\n}\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LockComponent as BaseLockComponent } from \"@bitwarden/angular/components/lock.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\n\nimport { RouterService } from \"../core\";\n\n@Component({\n  selector: \"app-lock\",\n  templateUrl: \"lock.component.html\",\n})\nexport class LockComponent extends BaseLockComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    cryptoService: CryptoService,\n    vaultTimeoutService: VaultTimeoutService,\n    vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    environmentService: EnvironmentService,\n    private routerService: RouterService,\n    stateService: StateService,\n    apiService: ApiService,\n    logService: LogService,\n    keyConnectorService: KeyConnectorService,\n    ngZone: NgZone\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      messagingService,\n      cryptoService,\n      vaultTimeoutService,\n      vaultTimeoutSettingsService,\n      environmentService,\n      stateService,\n      apiService,\n      logService,\n      keyConnectorService,\n      ngZone\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.onSuccessfulSubmit = async () => {\n      const previousUrl = this.routerService.getPreviousUrl();\n      if (previousUrl && previousUrl !== \"/\" && previousUrl.indexOf(\"lock\") === -1) {\n        this.successRoute = previousUrl;\n      }\n      this.router.navigateByUrl(this.successRoute);\n    };\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"text-center mb-4\">\n        <i class=\"bwi bwi-lock bwi-4x text-muted\" aria-hidden=\"true\"></i>\n      </p>\n      <p class=\"lead text-center mx-4 mb-4\">{{ \"yourVaultIsLocked\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appAutofocus\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n            <small class=\"text-muted form-text\">\n              {{ \"loggedInAsEmailOn\" | i18n: email:webVaultHostname }}\n            </small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-unlock\" aria-hidden=\"true\"></i> {{ \"unlock\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { I18nService } from \"../abstractions/i18n.service\";\n\nimport { IFrameComponent } from \"./iframe_component\";\n\nexport class CaptchaIFrame extends IFrameComponent {\n  constructor(\n    win: Window,\n    webVaultUrl: string,\n    private i18nService: I18nService,\n    successCallback: (message: string) => any,\n    errorCallback: (message: string) => any,\n    infoCallback: (message: string) => any\n  ) {\n    super(\n      win,\n      webVaultUrl,\n      \"captcha-connector.html\",\n      \"hcaptcha_iframe\",\n      successCallback,\n      errorCallback,\n      (message: string) => {\n        const parsedMessage = JSON.parse(message);\n        if (typeof parsedMessage !== \"string\") {\n          this.iframe.height = parsedMessage.height.toString();\n          this.iframe.width = parsedMessage.width.toString();\n        } else {\n          infoCallback(parsedMessage);\n        }\n      }\n    );\n  }\n\n  init(siteKey: string): void {\n    super.initComponent(\n      this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1)\n    );\n  }\n}\n","export abstract class IFrameComponent {\n  iframe: HTMLIFrameElement;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    protected webVaultUrl: string,\n    private path: string,\n    private iframeId: string,\n    public successCallback?: (message: string) => any,\n    public errorCallback?: (message: string) => any,\n    public infoCallback?: (message: string) => any\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  protected createParams(data: any, version: number) {\n    return new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      v: version.toString(),\n    });\n  }\n\n  protected initComponent(params: URLSearchParams): void {\n    this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n    this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n    this.iframe.src = this.connectorLink.href;\n\n    this.win.addEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","export enum AuthRequestType {\n  AuthenticateAndUnlock = 0,\n  Unlock = 1,\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CaptchaIFrame } from \"@bitwarden/common/misc/captcha_iframe\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n  @Input() captchaSiteKey: string = null;\n  captchaToken: string = null;\n  captcha: CaptchaIFrame;\n\n  constructor(\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async setupCaptcha() {\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n    this.captcha = new CaptchaIFrame(\n      window,\n      webVaultUrl,\n      this.i18nService,\n      (token: string) => {\n        this.captchaToken = token;\n      },\n      (error: string) => {\n        this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n      },\n      (info: string) => {\n        this.platformUtilsService.showToast(\"info\", this.i18nService.t(\"info\"), info);\n      }\n    );\n  }\n\n  showCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  protected handleCaptchaRequired(response: { captchaSiteKey: string }): boolean {\n    if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n      return false;\n    }\n\n    this.captchaSiteKey = response.captchaSiteKey;\n    this.captcha.init(response.captchaSiteKey);\n    return true;\n  }\n}\n","import { AuthenticationType } from \"../../enums/authenticationType\";\nimport { TokenTwoFactorRequest } from \"../request/identity-token/token-two-factor.request\";\n\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class PasswordLogInCredentials {\n  readonly type = AuthenticationType.Password;\n\n  constructor(\n    public email: string,\n    public masterPassword: string,\n    public captchaToken?: string,\n    public twoFactor?: TokenTwoFactorRequest\n  ) {}\n}\n\nexport class SsoLogInCredentials {\n  readonly type = AuthenticationType.Sso;\n\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUrl: string,\n    public orgId: string,\n    public twoFactor?: TokenTwoFactorRequest\n  ) {}\n}\n\nexport class UserApiLogInCredentials {\n  readonly type = AuthenticationType.UserApi;\n\n  constructor(public clientId: string, public clientSecret: string) {}\n}\n\nexport class PasswordlessLogInCredentials {\n  readonly type = AuthenticationType.Passwordless;\n\n  constructor(\n    public email: string,\n    public accessCode: string,\n    public authRequestId: string,\n    public decKey: SymmetricCryptoKey,\n    public localPasswordHash: string,\n    public twoFactor?: TokenTwoFactorRequest\n  ) {}\n}\n","import { AuthRequestType } from \"../../enums/authRequestType\";\n\nexport class PasswordlessCreateAuthRequest {\n  constructor(\n    readonly email: string,\n    readonly deviceIdentifier: string,\n    readonly publicKey: string,\n    readonly type: AuthRequestType,\n    readonly accessCode: string,\n    readonly fingerprintPhrase: string\n  ) {}\n}\n","<div\n  class=\"tw-mx-auto tw-mt-5 tw-flex tw-max-w-lg tw-flex-col tw-items-center tw-justify-center tw-p-8\"\n>\n  <div>\n    <img class=\"logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"tw-mx-4 tw-mt-3 tw-mb-4 tw-text-center tw-text-xl\">\n      {{ \"loginOrCreateNewAccount\" | i18n }}\n    </p>\n\n    <div\n      class=\"tw-mt-3 tw-rounded-md tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-6\"\n    >\n      <h2 class=\"tw-mb-6 tw-text-xl tw-font-semibold\">{{ \"logInInitiated\" | i18n }}</h2>\n\n      <div class=\"tw-text-light\">\n        <p class=\"tw-mb-6\">{{ \"notificationSentDevice\" | i18n }}</p>\n\n        <p class=\"tw-mb-6\">\n          {{ \"fingerprintMatchInfo\" | i18n }}\n        </p>\n      </div>\n\n      <div class=\"tw-mb-6\">\n        <h4 class=\"tw-font-semibold\">{{ \"fingerprintPhraseHeader\" | i18n }}</h4>\n        <p>\n          <code>{{ passwordlessRequest?.fingerprintPhrase }}</code>\n        </p>\n      </div>\n\n      <div class=\"tw-my-10\" *ngIf=\"showResendNotification\">\n        <a [routerLink]=\"[]\" disabled=\"true\" (click)=\"startPasswordlessLogin()\">{{\n          \"resendNotification\" | i18n\n        }}</a>\n      </div>\n\n      <hr />\n\n      <div class=\"tw-text-light tw-mt-3\">\n        {{ \"loginWithDeviceEnabledInfo\" | i18n }}\n        <a routerLink=\"/login\">{{ \"viewAllLoginOptions\" | i18n }}</a>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { CaptchaProtectedComponent } from \"@bitwarden/angular/components/captchaProtected.component\";\nimport { AnonymousHubService } from \"@bitwarden/common/abstractions/anonymousHub.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { AuthRequestType } from \"@bitwarden/common/enums/authRequestType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { PasswordlessLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { PasswordlessCreateAuthRequest } from \"@bitwarden/common/models/request/passwordless-create-auth.request\";\nimport { AuthRequestResponse } from \"@bitwarden/common/models/response/auth-request.response\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\n\nimport { StateService } from \"../../core/state/state.service\";\n\n@Component({\n  selector: \"app-login-with-device\",\n  templateUrl: \"login-with-device.component.html\",\n})\nexport class LoginWithDeviceComponent\n  extends CaptchaProtectedComponent\n  implements OnInit, OnDestroy\n{\n  private destroy$ = new Subject<void>();\n  email: string;\n  showResendNotification = false;\n  passwordlessRequest: PasswordlessCreateAuthRequest;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  private authRequestKeyPair: [publicKey: ArrayBuffer, privateKey: ArrayBuffer];\n\n  constructor(\n    private router: Router,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private appIdService: AppIdService,\n    private passwordGenerationService: PasswordGenerationService,\n    private apiService: ApiService,\n    private authService: AuthService,\n    private logService: LogService,\n    environmentService: EnvironmentService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private anonymousHubService: AnonymousHubService,\n    private validationService: ValidationService,\n    private stateService: StateService,\n    private loginService: LoginService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n\n    const navigation = this.router.getCurrentNavigation();\n    if (navigation) {\n      this.email = this.loginService.getEmail();\n    }\n\n    //gets signalR push notification\n    this.authService\n      .getPushNotifcationObs$()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((id) => {\n        this.confirmResponse(id);\n      });\n  }\n\n  async ngOnInit() {\n    if (!this.email) {\n      this.router.navigate([\"/login\"]);\n      return;\n    }\n\n    this.startPasswordlessLogin();\n  }\n\n  async startPasswordlessLogin() {\n    this.showResendNotification = false;\n\n    try {\n      await this.buildAuthRequest();\n      const reqResponse = await this.apiService.postAuthRequest(this.passwordlessRequest);\n\n      if (reqResponse.id) {\n        this.anonymousHubService.createHubConnection(reqResponse.id);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    setTimeout(() => {\n      this.showResendNotification = true;\n    }, 12000);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.anonymousHubService.stopHubConnection();\n  }\n\n  private async confirmResponse(requestId: string) {\n    try {\n      const response = await this.apiService.getAuthResponse(\n        requestId,\n        this.passwordlessRequest.accessCode\n      );\n\n      if (!response.requestApproved) {\n        return;\n      }\n\n      const credentials = await this.buildLoginCredntials(requestId, response);\n      const loginResponse = await this.authService.logIn(credentials);\n\n      if (loginResponse.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (loginResponse.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        await this.loginService.saveEmailSettings();\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (error) {\n      if (error instanceof ErrorResponse) {\n        this.router.navigate([\"/login\"]);\n        this.validationService.showError(error);\n        return;\n      }\n\n      this.logService.error(error);\n    }\n  }\n\n  private async buildAuthRequest() {\n    this.authRequestKeyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const fingerprint = await (\n      await this.cryptoService.getFingerprint(this.email, this.authRequestKeyPair[0])\n    ).join(\"-\");\n    const deviceIdentifier = await this.appIdService.getAppId();\n    const publicKey = Utils.fromBufferToB64(this.authRequestKeyPair[0]);\n    const accessCode = await this.passwordGenerationService.generatePassword({ length: 25 });\n\n    this.passwordlessRequest = new PasswordlessCreateAuthRequest(\n      this.email,\n      deviceIdentifier,\n      publicKey,\n      AuthRequestType.AuthenticateAndUnlock,\n      accessCode,\n      fingerprint\n    );\n  }\n\n  private async buildLoginCredntials(\n    requestId: string,\n    response: AuthRequestResponse\n  ): Promise<PasswordlessLogInCredentials> {\n    const decKey = await this.cryptoService.rsaDecrypt(response.key, this.authRequestKeyPair[1]);\n    const decMasterPasswordHash = await this.cryptoService.rsaDecrypt(\n      response.masterPasswordHash,\n      this.authRequestKeyPair[1]\n    );\n    const key = new SymmetricCryptoKey(decKey);\n    const localHashedPassword = Utils.fromBufferToUtf8(decMasterPasswordHash);\n\n    return new PasswordlessLogInCredentials(\n      this.email,\n      this.passwordlessRequest.accessCode,\n      requestId,\n      key,\n      localHashedPassword\n    );\n  }\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/auth-result\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n  showPassword = false;\n  formPromise: Promise<AuthResult>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n  private selfHosted = false;\n  showLoginWithDevice: boolean;\n  validatedEmail = false;\n  paramEmailSet = false;\n\n  formGroup = this.formBuilder.group({\n    email: [\"\", [Validators.required, Validators.email]],\n    masterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n    rememberEmail: [false],\n  });\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n\n  get loggedEmail() {\n    return this.formGroup.value.email;\n  }\n\n  constructor(\n    protected apiService: ApiService,\n    protected appIdService: AppIdService,\n    protected authService: AuthService,\n    protected router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    protected stateService: StateService,\n    environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected ngZone: NgZone,\n    protected formBuilder: FormBuilder,\n    protected formValidationErrorService: FormValidationErrorsService,\n    protected route: ActivatedRoute,\n    protected loginService: LoginService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  get selfHostedDomain() {\n    return this.environmentService.hasBaseUrl() ? this.environmentService.getWebVaultUrl() : null;\n  }\n\n  async ngOnInit() {\n    this.route?.queryParams.subscribe((params) => {\n      if (params != null) {\n        const queryParamsEmail = params[\"email\"];\n        if (queryParamsEmail != null && queryParamsEmail.indexOf(\"@\") > -1) {\n          this.formGroup.get(\"email\").setValue(queryParamsEmail);\n          this.loginService.setEmail(queryParamsEmail);\n          this.paramEmailSet = true;\n        }\n      }\n    });\n    let email = this.loginService.getEmail();\n\n    if (email == null || email === \"\") {\n      email = await this.stateService.getRememberedEmail();\n    }\n\n    if (!this.paramEmailSet) {\n      this.formGroup.get(\"email\")?.setValue(email ?? \"\");\n    }\n    let rememberEmail = this.loginService.getRememberEmail();\n    if (rememberEmail == null) {\n      rememberEmail = (await this.stateService.getRememberedEmail()) != null;\n    }\n    this.formGroup.get(\"rememberEmail\")?.setValue(rememberEmail);\n  }\n\n  async submit(showToast = true) {\n    const data = this.formGroup.value;\n\n    await this.setupCaptcha();\n\n    this.formGroup.markAllAsTouched();\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return;\n    }\n\n    //desktop, browser; This should be removed once all clients use reactive forms\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return;\n    }\n\n    try {\n      const credentials = new PasswordLogInCredentials(\n        data.email,\n        data.masterPassword,\n        this.captchaToken,\n        null\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      this.setFormValues();\n      await this.loginService.saveEmailSettings();\n      if (this.handleCaptchaRequired(response)) {\n        return;\n      } else if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    if (this.ngZone.isStable) {\n      document.getElementById(\"masterPassword\").focus();\n    } else {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => document.getElementById(\"masterPassword\").focus());\n    }\n  }\n\n  async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n    await this.saveEmailSettings();\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n    const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    // Save sso params\n    await this.stateService.setSsoState(state);\n    await this.stateService.setSsoCodeVerifier(ssoCodeVerifier);\n\n    // Build URI\n    const webUrl = this.environmentService.getWebVaultUrl();\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      webUrl +\n        \"/#/sso?clientId=\" +\n        clientId +\n        \"&redirectUri=\" +\n        encodeURIComponent(ssoRedirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge\n    );\n  }\n\n  async validateEmail() {\n    this.formGroup.controls.email.markAsTouched();\n    const emailInvalid = this.formGroup.get(\"email\").invalid;\n    if (!emailInvalid) {\n      this.toggleValidateEmail(true);\n      await this.getLoginWithDevice(this.loggedEmail);\n    }\n  }\n\n  toggleValidateEmail(value: boolean) {\n    this.validatedEmail = value;\n    this.formGroup.controls.masterPassword.reset();\n  }\n\n  setFormValues() {\n    this.loginService.setEmail(this.formGroup.value.email);\n    this.loginService.setRememberEmail(this.formGroup.value.rememberEmail);\n  }\n\n  async saveEmailSettings() {\n    this.setFormValues();\n    await this.loginService.saveEmailSettings();\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  private async getLoginWithDevice(email: string) {\n    try {\n      const deviceIdentifier = await this.appIdService.getAppId();\n      const res = await this.apiService.getKnownDevice(email, deviceIdentifier);\n      //ensure the application is not self-hosted\n      this.showLoginWithDevice = res && !this.selfHosted;\n    } catch (e) {\n      this.showLoginWithDevice = false;\n    }\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"tw-container tw-mx-auto\"\n  [formGroup]=\"formGroup\"\n>\n  <div\n    class=\"tw-mx-auto tw-mt-5 tw-flex tw-max-w-lg tw-flex-col tw-items-center tw-justify-center tw-p-8\"\n  >\n    <div>\n      <img class=\"logo logo-themed\" alt=\"Bitwarden\" />\n      <p class=\"tw-mx-4 tw-mt-3 tw-mb-4 tw-text-center tw-text-xl\">\n        {{ \"loginOrCreateNewAccount\" | i18n }}\n      </p>\n      <div\n        class=\"tw-mt-3 tw-rounded-md tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-6\"\n      >\n        <ng-container *ngIf=\"!validatedEmail; else loginPage\">\n          <div class=\"tw-mb-3\">\n            <bit-form-field>\n              <bit-label>{{ \"emailAddress\" | i18n }}</bit-label>\n              <input\n                id=\"login_input_email\"\n                bitInput\n                type=\"email\"\n                formControlName=\"email\"\n                appAutofocus\n                (keyup.enter)=\"validateEmail()\"\n              />\n            </bit-form-field>\n          </div>\n\n          <div class=\"tw-mb-3 tw-flex tw-items-start\">\n            <div class=\"tw-flex tw-h-6 tw-items-center\">\n              <input\n                id=\"login_input_remember-email\"\n                class=\"tw-w-4 tw-rounded tw-border\"\n                bitInput\n                type=\"checkbox\"\n                formControlName=\"rememberEmail\"\n              />\n            </div>\n            <bit-label class=\"ml-2\">\n              {{ \"rememberEmail\" | i18n }}\n            </bit-label>\n          </div>\n\n          <div class=\"tw-mb-3\">\n            <button\n              bitButton\n              type=\"button\"\n              buttonType=\"primary\"\n              class=\"tw-w-full\"\n              [disabled]=\"form.loading\"\n              (click)=\"validateEmail()\"\n            >\n              <span> {{ \"continue\" | i18n }} </span>\n            </button>\n          </div>\n\n          <hr />\n\n          <p class=\"tw-m-0 tw-text-sm\">\n            {{ \"newAroundHere\" | i18n }}\n            <a routerLink=\"/register\">{{ \"createAccount\" | i18n }}</a>\n          </p>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</form>\n\n<ng-template [formGroup]=\"formGroup\" #loginPage>\n  <div class=\"tw-mb-6 tw-h-28\">\n    <bit-form-field class=\"!tw-mb-1\">\n      <bit-label>{{ \"masterPass\" | i18n }}</bit-label>\n      <input\n        id=\"login_input_master-password\"\n        type=\"password\"\n        bitInput\n        formControlName=\"masterPassword\"\n        appAutofocus\n      />\n      <button type=\"button\" bitSuffix bitIconButton bitPasswordInputToggle></button>\n    </bit-form-field>\n    <a class=\"-tw-mt-2\" routerLink=\"/hint\" (mousedown)=\"goToHint()\" (click)=\"setFormValues()\">{{\n      \"getMasterPasswordHint\" | i18n\n    }}</a>\n  </div>\n\n  <div [hidden]=\"!showCaptcha()\">\n    <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n  </div>\n\n  <div class=\"tw-mb-3 tw-flex tw-space-x-4\">\n    <button bitButton buttonType=\"primary\" type=\"submit\" [block]=\"true\" [loading]=\"form.loading\">\n      <span> {{ \"loginWithMasterPassword\" | i18n }} </span>\n    </button>\n  </div>\n\n  <div class=\"tw-mb-3\" *ngIf=\"showLoginWithDevice && showPasswordless\">\n    <button\n      bitButton\n      type=\"button\"\n      [block]=\"true\"\n      buttonType=\"secondary\"\n      (click)=\"startPasswordlessLogin()\"\n    >\n      <span> <i class=\"bwi bwi-mobile\"></i> {{ \"loginWithDevice\" | i18n }} </span>\n    </button>\n  </div>\n\n  <div class=\"tw-mb-3\">\n    <a\n      routerLink=\"/sso\"\n      (click)=\"saveEmailSettings()\"\n      bitButton\n      buttonType=\"secondary\"\n      class=\"tw-w-full\"\n    >\n      <i class=\"bwi bwi-provider tw-mr-2\"></i>\n      {{ \"enterpriseSingleSignOn\" | i18n }}\n    </a>\n  </div>\n\n  <hr />\n\n  <div class=\"tw-m-0 tw-text-sm\">\n    <p class=\"tw-mb-1\">{{ \"loggingInAs\" | i18n }} {{ loggedEmail }}</p>\n    <a [routerLink]=\"[]\" (click)=\"toggleValidateEmail(false)\">{{ \"notYou\" | i18n }}</a>\n  </div>\n</ng-template>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nimport { LoginComponent as BaseLoginComponent } from \"@bitwarden/angular/components/login.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\nimport { flagEnabled } from \"../../../utils/flags\";\nimport { RouterService, StateService } from \"../../core\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"login.component.html\",\n})\nexport class LoginComponent extends BaseLoginComponent implements OnInit, OnDestroy {\n  showResetPasswordAutoEnrollWarning = false;\n  enforcedPasswordPolicyOptions: MasterPasswordPolicyOptions;\n  policies: ListResponse<PolicyResponse>;\n  showPasswordless = false;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    apiService: ApiService,\n    appIdService: AppIdService,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    cryptoFunctionService: CryptoFunctionService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: InternalPolicyService,\n    logService: LogService,\n    ngZone: NgZone,\n    protected stateService: StateService,\n    private messagingService: MessagingService,\n    private routerService: RouterService,\n    formBuilder: FormBuilder,\n    formValidationErrorService: FormValidationErrorsService,\n    loginService: LoginService\n  ) {\n    super(\n      apiService,\n      appIdService,\n      authService,\n      router,\n      platformUtilsService,\n      i18nService,\n      stateService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      logService,\n      ngZone,\n      formBuilder,\n      formValidationErrorService,\n      route,\n      loginService\n    );\n    this.onSuccessfulLogin = async () => {\n      this.messagingService.send(\"setFullWidth\");\n    };\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n    this.showPasswordless = flagEnabled(\"showPasswordless\");\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.premium != null) {\n        this.routerService.setPreviousUrl(\"/settings/premium\");\n      } else if (qParams.org != null) {\n        const route = this.router.createUrlTree([\"create-organization\"], {\n          queryParams: { plan: qParams.org },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n\n      // Are they coming from an email for sponsoring a families organization\n      if (qParams.sponsorshipToken != null) {\n        const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n          queryParams: { token: qParams.sponsorshipToken },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      await super.ngOnInit();\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      let policyList: Policy[] = null;\n      try {\n        this.policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        policyList = this.policyService.mapPoliciesFromToken(this.policies);\n      } catch (e) {\n        this.logService.error(e);\n      }\n\n      if (policyList != null) {\n        const resetPasswordPolicy = this.policyService.getResetPasswordPolicyOptions(\n          policyList,\n          invite.organizationId\n        );\n        // Set to true if policy enabled and auto-enroll enabled\n        this.showResetPasswordAutoEnrollWarning =\n          resetPasswordPolicy[1] && resetPasswordPolicy[0].autoEnrollEnabled;\n\n        this.policyService\n          .masterPasswordPolicyOptions$(policyList)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((enforcedPasswordPolicyOptions) => {\n            this.enforcedPasswordPolicyOptions = enforcedPasswordPolicyOptions;\n          });\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async goAfterLogIn() {\n    const masterPassword = this.formGroup.value.masterPassword;\n\n    // Check master password against policy\n    if (this.enforcedPasswordPolicyOptions != null) {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      const masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n\n      // If invalid, save policies and require update\n      if (\n        !this.policyService.evaluateMasterPassword(\n          masterPasswordScore,\n          masterPassword,\n          this.enforcedPasswordPolicyOptions\n        )\n      ) {\n        const policiesData: { [id: string]: PolicyData } = {};\n        this.policies.data.map((p) => (policiesData[p.id] = new PolicyData(p)));\n        await this.policyService.replace(policiesData);\n        this.router.navigate([\"update-password\"]);\n        return;\n      }\n    }\n\n    const previousUrl = this.routerService.getPreviousUrl();\n    if (previousUrl) {\n      this.router.navigateByUrl(previousUrl);\n    } else {\n      this.loginService.clearValues();\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  goToHint() {\n    this.setFormValues();\n    this.router.navigateByUrl(\"/hint\");\n  }\n\n  async submit() {\n    const rememberEmail = this.formGroup.value.rememberEmail;\n\n    if (!rememberEmail) {\n      await this.stateService.setRememberedEmail(null);\n    }\n    await super.submit(false);\n  }\n\n  async startPasswordlessLogin() {\n    this.formGroup.get(\"masterPassword\")?.clearValidators();\n    this.formGroup.get(\"masterPassword\")?.updateValueAndValidity();\n\n    if (!this.formGroup.valid) {\n      return;\n    }\n\n    this.setFormValues();\n    this.router.navigate([\"/login-with-device\"]);\n  }\n\n  private getPasswordStrengthUserInput() {\n    const email = this.formGroup.value.email;\n    let userInput: string[] = [];\n    const atPosition = email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n}\n","export class DeleteRecoverRequest {\n  email: string;\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { DeleteRecoverRequest } from \"@bitwarden/common/models/request/delete-recover.request\";\n\n@Component({\n  selector: \"app-recover-delete\",\n  templateUrl: \"recover-delete.component.html\",\n})\nexport class RecoverDeleteComponent {\n  email: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new DeleteRecoverRequest();\n      request.email = this.email.trim().toLowerCase();\n      this.formPromise = this.apiService.postAccountRecoverDelete(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deleteRecoverEmailSent\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>{{ \"deleteRecoverDesc\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class TwoFactorRecoveryRequest extends SecretVerificationRequest {\n  recoveryCode: string;\n  email: string;\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorRecoveryRequest } from \"@bitwarden/common/models/request/two-factor-recovery.request\";\n\n@Component({\n  selector: \"app-recover-two-factor\",\n  templateUrl: \"recover-two-factor.component.html\",\n})\nexport class RecoverTwoFactorComponent {\n  email: string;\n  masterPassword: string;\n  recoveryCode: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private authService: AuthService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new TwoFactorRecoveryRequest();\n      request.recoveryCode = this.recoveryCode.replace(/\\s/g, \"\").toLowerCase();\n      request.email = this.email.trim().toLowerCase();\n      const key = await this.authService.makePreloginKey(this.masterPassword, request.email);\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n      this.formPromise = this.apiService.postTwoFactorRecover(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"twoStepRecoverDisabled\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"recoverAccountTwoStep\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>\n            {{ \"recoverAccountTwoStepDesc\" | i18n }}\n            <a\n              href=\"https://bitwarden.com/help/lost-two-step-device/\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              >{{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"password\"\n              name=\"MasterPassword\"\n              class=\"form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"recoveryCode\">{{ \"recoveryCodeTitle\" | i18n }}</label>\n            <input\n              id=\"recoveryCode\"\n              class=\"text-monospace form-control\"\n              type=\"text\"\n              name=\"RecoveryCode\"\n              [(ngModel)]=\"recoveryCode\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n  actionPromise: Promise<void | boolean>;\n  continuing = false;\n  leaving = false;\n\n  loading = true;\n  organization: Organization;\n  email: string;\n\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private keyConnectorService: KeyConnectorService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.organization = await this.keyConnectorService.getManagingOrganization();\n    this.email = await this.stateService.getEmail();\n    await this.syncService.fullSync(false);\n    this.loading = false;\n  }\n\n  async convert() {\n    this.continuing = true;\n    this.actionPromise = this.keyConnectorService.migrateUser();\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedMasterPassword\")\n      );\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n    }\n  }\n\n  async leave() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      this.organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.leaving = true;\n      this.actionPromise = this.organizationApiService.leave(this.organization.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e);\n    }\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"removeMasterPassword\" | i18n }}</p>\n      <hr />\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"convertOrganizationEncryptionDesc\" | i18n: organization.name }}</p>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-block\"\n            (click)=\"convert()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"continuing\"\n            ></i>\n            {{ \"removeMasterPassword\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-block\"\n            (click)=\"leave()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"leaving\"\n            ></i>\n            {{ \"leaveOrganization\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from \"@bitwarden/angular/components/remove-password.component\";\n\n@Component({\n  selector: \"app-remove-password\",\n  templateUrl: \"remove-password.component.html\",\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {}\n","import { SecretVerificationRequest } from \"../../../models/request/secret-verification.request\";\n\nexport class OrganizationUserResetPasswordEnrollmentRequest extends SecretVerificationRequest {\n  resetPasswordKey: string;\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { KeysRequest } from \"./keys.request\";\n\nexport class SetPasswordRequest {\n  masterPasswordHash: string;\n  key: string;\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    masterPasswordHash: string,\n    key: string,\n    masterPasswordHint: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.masterPasswordHash = masterPasswordHash;\n    this.key = key;\n    this.masterPasswordHint = masterPasswordHint;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit, OnDestroy {\n  masterPassword: string;\n  masterPasswordRetype: string;\n  formPromise: Promise<any>;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  protected email: string;\n  protected kdf: KdfType;\n  protected kdfIterations: number;\n\n  protected destroy$ = new Subject<void>();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected messagingService: MessagingService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.email = await this.stateService.getEmail();\n    this.policyService\n      .masterPasswordPolicyOptions$()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (enforcedPasswordPolicyOptions) =>\n          (this.enforcedPolicyOptions ??= enforcedPasswordPolicyOptions)\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    const email = await this.stateService.getEmail();\n    if (this.kdf == null) {\n      this.kdf = await this.stateService.getKdfType();\n    }\n    if (this.kdfIterations == null) {\n      this.kdfIterations = await this.stateService.getKdfIterations();\n    }\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email.trim().toLowerCase(),\n      this.kdf,\n      this.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    let encKey: [SymmetricCryptoKey, EncString] = null;\n    const existingEncKey = await this.cryptoService.getEncKey();\n    if (existingEncKey == null) {\n      encKey = await this.cryptoService.makeEncKey(key);\n    } else {\n      encKey = await this.cryptoService.remakeEncKey(key);\n    }\n\n    await this.performSubmitActions(masterPasswordHash, key, encKey);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    // Override in sub-class\n    // Can be used for additional validation and/or other processes the should occur before changing passwords\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    // Override in sub-class\n  }\n\n  async strongPassword(): Promise<boolean> {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n    if (this.masterPassword.length < 8) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordMinlength\")\n      );\n      return false;\n    }\n    if (this.masterPassword !== this.masterPasswordRetype) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return false;\n    }\n\n    const strengthResult = this.passwordStrengthResult;\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return false;\n    }\n\n    if (strengthResult != null && strengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keys.request\";\nimport { SetPasswordRequest } from \"@bitwarden/common/models/request/set-password.request\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n  syncLoading = true;\n  showPassword = false;\n  hint = \"\";\n  identifier: string = null;\n  orgId: string;\n  resetPasswordAutoEnroll = false;\n\n  onSuccessfulChangePassword: () => Promise<void>;\n  successRoute = \"vault\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    protected router: Router,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    this.syncLoading = false;\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    // Automatic Enrollment Detection\n    if (this.identifier != null) {\n      try {\n        const response = await this.organizationApiService.getAutoEnrollStatus(this.identifier);\n        this.orgId = response.id;\n        this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n        this.enforcedPolicyOptions =\n          await this.policyApiService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    }\n\n    super.ngOnInit();\n  }\n\n  async setupSubmitActions() {\n    this.kdf = DEFAULT_KDF_TYPE;\n    this.kdfIterations = DEFAULT_KDF_ITERATIONS;\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new SetPasswordRequest(\n      masterPasswordHash,\n      encKey[1].encryptedString,\n      this.hint,\n      this.kdf,\n      this.kdfIterations,\n      this.identifier,\n      new KeysRequest(keys[0], keys[1].encryptedString)\n    );\n    try {\n      if (this.resetPasswordAutoEnroll) {\n        this.formPromise = this.apiService\n          .setPassword(request)\n          .then(async () => {\n            await this.onSetPasswordSuccess(key, encKey, keys);\n            return this.organizationApiService.getKeys(this.orgId);\n          })\n          .then(async (response) => {\n            if (response == null) {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n            const userId = await this.stateService.getUserId();\n            const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n            // RSA Encrypt user's encKey.key with organization public key\n            const userEncKey = await this.cryptoService.getEncKey();\n            const encryptedKey = await this.cryptoService.rsaEncrypt(\n              userEncKey.key,\n              publicKey.buffer\n            );\n\n            const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n            resetRequest.masterPasswordHash = masterPasswordHash;\n            resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n            return this.organizationUserService.putOrganizationUserResetPasswordEnrollment(\n              this.orgId,\n              userId,\n              resetRequest\n            );\n          });\n      } else {\n        this.formPromise = this.apiService.setPassword(request).then(async () => {\n          await this.onSetPasswordSuccess(key, encKey, keys);\n        });\n      }\n\n      await this.formPromise;\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  private async onSetPasswordSuccess(\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString],\n    keys: [string, EncString]\n  ) {\n    await this.stateService.setKdfType(this.kdf);\n    await this.stateService.setKdfIterations(this.kdfIterations);\n    await this.cryptoService.setKey(key);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n    await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n    const localKeyHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    await this.cryptoService.setKeyHash(localKeyHash);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body text-center\" *ngIf=\"syncLoading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!syncLoading\">\n          <app-callout type=\"info\">{{ \"ssoCompleteRegistration\" | i18n }}</app-callout>\n          <app-callout\n            type=\"warning\"\n            title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n            *ngIf=\"resetPasswordAutoEnroll\"\n          >\n            {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n          </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength\n                  [password]=\"masterPassword\"\n                  [email]=\"email\"\n                  [showText]=\"true\"\n                  (passwordStrengthResult)=\"getStrengthResult($event)\"\n                >\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n            <small class=\"form-text text-muted\">{{ \"masterPassDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SetPasswordComponent as BaseSetPasswordComponent } from \"@bitwarden/angular/components/set-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-set-password\",\n  templateUrl: \"set-password.component.html\",\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    router: Router,\n    syncService: SyncService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    organizationApiService: OrganizationApiServiceAbstraction,\n    organizationUserService: OrganizationUserService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyApiService,\n      policyService,\n      router,\n      apiService,\n      syncService,\n      route,\n      stateService,\n      organizationApiService,\n      organizationUserService\n    );\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/auth-result\";\nimport { SsoLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\nimport { SsoPreValidateResponse } from \"@bitwarden/common/models/response/sso-pre-validate.response\";\n\n@Directive()\nexport class SsoComponent {\n  identifier: string;\n  loggingIn = false;\n\n  formPromise: Promise<AuthResult>;\n  initiateSsoFormPromise: Promise<SsoPreValidateResponse>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"lock\";\n  protected changePasswordRoute = \"set-password\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected clientId: string;\n  protected redirectUri: string;\n  protected state: string;\n  protected codeChallenge: string;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.code != null && qParams.state != null) {\n        const codeVerifier = await this.stateService.getSsoCodeVerifier();\n        const state = await this.stateService.getSsoState();\n        await this.stateService.setSsoCodeVerifier(null);\n        await this.stateService.setSsoState(null);\n        if (\n          qParams.code != null &&\n          codeVerifier != null &&\n          state != null &&\n          this.checkState(state, qParams.state)\n        ) {\n          await this.logIn(\n            qParams.code,\n            codeVerifier,\n            this.getOrgIdentifierFromState(qParams.state)\n          );\n        }\n      } else if (\n        qParams.clientId != null &&\n        qParams.redirectUri != null &&\n        qParams.state != null &&\n        qParams.codeChallenge != null\n      ) {\n        this.redirectUri = qParams.redirectUri;\n        this.state = qParams.state;\n        this.codeChallenge = qParams.codeChallenge;\n        this.clientId = qParams.clientId;\n      }\n    });\n  }\n\n  async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n    if (this.identifier == null || this.identifier === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"ssoValidationFailed\"),\n        this.i18nService.t(\"ssoIdentifierRequired\")\n      );\n      return;\n    }\n\n    this.initiateSsoFormPromise = this.apiService.preValidateSso(this.identifier);\n    const response = await this.initiateSsoFormPromise;\n\n    const authorizeUrl = await this.buildAuthorizeUrl(\n      returnUri,\n      includeUserIdentifier,\n      response.token\n    );\n    this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n  }\n\n  protected async buildAuthorizeUrl(\n    returnUri?: string,\n    includeUserIdentifier?: boolean,\n    token?: string\n  ): Promise<string> {\n    let codeChallenge = this.codeChallenge;\n    let state = this.state;\n\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    if (codeChallenge == null) {\n      const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n      codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      await this.stateService.setSsoCodeVerifier(codeVerifier);\n    }\n\n    if (state == null) {\n      state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      if (returnUri) {\n        state += `_returnUri='${returnUri}'`;\n      }\n    }\n\n    // Add Organization Identifier to state\n    state += `_identifier=${this.identifier}`;\n\n    // Save state (regardless of new or existing)\n    await this.stateService.setSsoState(state);\n\n    let authorizeUrl =\n      this.environmentService.getIdentityUrl() +\n      \"/connect/authorize?\" +\n      \"client_id=\" +\n      this.clientId +\n      \"&redirect_uri=\" +\n      encodeURIComponent(this.redirectUri) +\n      \"&\" +\n      \"response_type=code&scope=api offline_access&\" +\n      \"state=\" +\n      state +\n      \"&code_challenge=\" +\n      codeChallenge +\n      \"&\" +\n      \"code_challenge_method=S256&response_mode=query&\" +\n      \"domain_hint=\" +\n      encodeURIComponent(this.identifier) +\n      \"&ssoToken=\" +\n      encodeURIComponent(token);\n\n    if (includeUserIdentifier) {\n      const userIdentifier = await this.apiService.getSsoUserIdentifier();\n      authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n    }\n\n    return authorizeUrl;\n  }\n\n  private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n    this.loggingIn = true;\n    try {\n      const credentials = new SsoLogInCredentials(\n        code,\n        codeVerifier,\n        this.redirectUri,\n        orgIdFromState\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n              sso: \"true\",\n            },\n          });\n        }\n      } else if (response.resetMasterPassword) {\n        if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n          this.onSuccessfulLoginChangePasswordNavigate();\n        } else {\n          this.router.navigate([this.changePasswordRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n            },\n          });\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n\n      // TODO: Key Connector Service should pass this error message to the logout callback instead of displaying here\n      if (e.message === \"Key Connector error\") {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"ssoKeyConnectorError\")\n        );\n      }\n    }\n    this.loggingIn = false;\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  class=\"container\"\n  [appApiAction]=\"initiateSsoFormPromise\"\n  ngNativeValidate\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <img class=\"logo mb-2 logo-themed\" alt=\"Bitwarden\" />\n      <div class=\"card d-block mt-4\">\n        <div class=\"card-body\" *ngIf=\"loggingIn\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loggingIn\">\n          <p>{{ \"ssoLogInWithOrgIdentifier\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"identifier\">{{ \"ssoIdentifier\" | i18n }}</label>\n            <input\n              id=\"identifier\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Identifier\"\n              [(ngModel)]=\"identifier\"\n              required\n              appAutofocus\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"logIn\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SsoComponent as BaseSsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-sso\",\n  templateUrl: \"sso.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SsoComponent extends BaseSsoComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      } else {\n        const storedIdentifier = await this.stateService.getSsoOrgIdentifier();\n        if (storedIdentifier != null) {\n          this.identifier = storedIdentifier;\n        }\n      }\n    });\n  }\n\n  async submit() {\n    await this.stateService.setSsoOrganizationIdentifier(this.identifier);\n    if (this.clientId === \"browser\") {\n      document.cookie = `ssoHandOffMessage=${this.i18nService.t(\"ssoHandOff\")};SameSite=strict`;\n    }\n    super.submit();\n  }\n}\n","export class ReferenceEventRequest {\n  id: string;\n  layout: string;\n  flow: string;\n}\n","<ng-template>\n  <div\n    class=\"tw-inline-block tw-w-11/12 tw-pl-7\"\n    [ngClass]=\"{ 'tw-border-0 tw-border-l tw-border-solid tw-border-secondary-300': applyBorder }\"\n  >\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","import { CdkStep } from \"@angular/cdk/stepper\";\nimport { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-vertical-step\",\n  templateUrl: \"vertical-step.component.html\",\n  providers: [{ provide: CdkStep, useExisting: VerticalStep }],\n})\nexport class VerticalStep extends CdkStep {\n  @Input() subLabel = \"\";\n  @Input() applyBorder = true;\n}\n","<div class=\"tw-m-2.5 tw-h-16 tw-text-center\">\n  <button\n    (click)=\"selectStep()\"\n    [disabled]=\"disabled\"\n    class=\"tw-flex tw-w-full tw-items-center tw-border-none tw-bg-transparent\"\n    [ngClass]=\"{\n      'hover:tw-bg-secondary-100': !disabled && step.editable\n    }\"\n    [attr.aria-expanded]=\"selected\"\n  >\n    <span\n      class=\"tw-mr-3.5 tw-w-9 tw-rounded-full tw-font-bold tw-leading-9\"\n      *ngIf=\"!step.completed\"\n      [ngClass]=\"{\n        'tw-bg-primary-500 tw-text-contrast': selected,\n        'tw-bg-secondary-300 tw-text-main': !selected && !disabled && step.editable,\n        'tw-bg-transparent tw-text-muted': disabled\n      }\"\n    >\n      {{ stepNumber }}\n    </span>\n    <span\n      class=\"tw-mr-3.5 tw-w-9 tw-rounded-full tw-bg-primary-500 tw-font-bold tw-leading-9 tw-text-contrast\"\n      *ngIf=\"step.completed\"\n    >\n      <i class=\"bwi bwi-fw bwi-check tw-p-1\" aria-hidden=\"true\"></i>\n    </span>\n    <div\n      class=\"tw-txt-main tw-mt-3.5 tw-h-12 tw-text-left tw-leading-snug\"\n      [ngClass]=\"{\n        'tw-font-bold': selected\n      }\"\n    >\n      <p\n        class=\"main-label text tw-mb-1 tw-text-main\"\n        [ngClass]=\"{\n          'tw-mt-1': !step.subLabel\n        }\"\n      >\n        {{ step.label }}\n      </p>\n      <p class=\"sub-label small tw-text-muted\">{{ step.subLabel }}</p>\n    </div>\n  </button>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { VerticalStep } from \"./vertical-step.component\";\n\n@Component({\n  selector: \"app-vertical-step-content\",\n  templateUrl: \"vertical-step-content.component.html\",\n})\nexport class VerticalStepContentComponent {\n  @Output() onSelectStep = new EventEmitter<void>();\n\n  @Input() disabled = false;\n  @Input() selected = false;\n  @Input() step: VerticalStep;\n  @Input() stepNumber: number;\n\n  selectStep() {\n    this.onSelectStep.emit();\n  }\n}\n","<div>\n  <ul class=\"tw-flex tw-list-none tw-flex-col tw-flex-wrap tw-p-5\">\n    <li *ngFor=\"let step of steps; let i = index; let isLast = last\">\n      <app-vertical-step-content\n        [disabled]=\"isStepDisabled(i)\"\n        [selected]=\"selectedIndex === i\"\n        [step]=\"step\"\n        [stepNumber]=\"i + 1\"\n        (onSelectStep)=\"selectStepByIndex(i)\"\n      ></app-vertical-step-content>\n      <div\n        class=\"tw-inline-block tw-pl-7\"\n        *ngIf=\"selectedIndex === i\"\n        [ngTemplateOutlet]=\"selected ? selected.content : null\"\n      ></div>\n      <div\n        class=\"tw-ml-8 tw-h-6 tw-border-0 tw-border-l tw-border-solid tw-border-secondary-300\"\n        *ngIf=\"!isLast && !(selectedIndex === i)\"\n      ></div>\n    </li>\n  </ul>\n</div>\n","import { CdkStepper } from \"@angular/cdk/stepper\";\nimport { Component, Input, QueryList } from \"@angular/core\";\n\nimport { VerticalStep } from \"./vertical-step.component\";\n\n@Component({\n  selector: \"app-vertical-stepper\",\n  templateUrl: \"vertical-stepper.component.html\",\n  providers: [{ provide: CdkStepper, useExisting: VerticalStepperComponent }],\n})\nexport class VerticalStepperComponent extends CdkStepper {\n  readonly steps: QueryList<VerticalStep>;\n\n  @Input()\n  activeClass = \"active\";\n\n  isNextButtonHidden() {\n    return !(this.steps.length === this.selectedIndex + 1);\n  }\n\n  isStepDisabled(index: number) {\n    if (this.selectedIndex !== index) {\n      return this.selectedIndex === index - 1\n        ? !this.steps.find((_, i) => i == index - 1)?.completed\n        : true;\n    }\n    return false;\n  }\n\n  selectStepByIndex(index: number): void {\n    this.selectedIndex = index;\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { CaptchaProtectedRequest } from \"./captcha-protected.request\";\nimport { KeysRequest } from \"./keys.request\";\nimport { ReferenceEventRequest } from \"./reference-event.request\";\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  token: string;\n  organizationUserId: string;\n\n  constructor(\n    public email: string,\n    public name: string,\n    public masterPasswordHash: string,\n    masterPasswordHint: string,\n    public key: string,\n    public kdf: KdfType,\n    public kdfIterations: number,\n    public referenceData: ReferenceEventRequest,\n    public captchaResponse: string\n  ) {\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { AbstractControl, UntypedFormGroup, ValidatorFn } from \"@angular/forms\";\n\nimport { FormGroupControls } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\n\nexport class InputsFieldMatch {\n  //check to ensure two fields do not have the same value\n  static validateInputsDoesntMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? {\n              inputsMatchError: {\n                message: errorMessage,\n              },\n            }\n          : null;\n      }\n\n      return null;\n    };\n  }\n\n  //check to ensure two fields have the same value\n  static validateInputsMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? null\n          : {\n              inputsDoesntMatchError: {\n                message: errorMessage,\n              },\n            };\n      }\n\n      return null;\n    };\n  }\n\n  //checks the formGroup if two fields have the same value and validation is controlled from either field\n  static validateFormInputsMatch(field: string, fieldMatchTo: string, errorMessage: string) {\n    return (formGroup: UntypedFormGroup) => {\n      const fieldCtrl = formGroup.controls[field];\n      const fieldMatchToCtrl = formGroup.controls[fieldMatchTo];\n\n      if (fieldCtrl.value !== fieldMatchToCtrl.value) {\n        fieldMatchToCtrl.setErrors({\n          inputsDoesntMatchError: {\n            message: errorMessage,\n          },\n        });\n      } else {\n        fieldMatchToCtrl.setErrors(null);\n      }\n    };\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { AbstractControl, UntypedFormBuilder, ValidatorFn, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/models/domain/log-in-credentials\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keys.request\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/reference-event.request\";\nimport { RegisterRequest } from \"@bitwarden/common/models/request/register.request\";\nimport { RegisterResponse } from \"@bitwarden/common/models/response/authentication/register.response\";\n\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\nimport { InputsFieldMatch } from \"../validators/inputsFieldMatch.validator\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() isInTrialFlow = false;\n  @Output() createdAccount = new EventEmitter<string>();\n\n  showPassword = false;\n  formPromise: Promise<RegisterResponse>;\n  referenceData: ReferenceEventRequest;\n  showTerms = true;\n  showErrorSummary = false;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n\n  formGroup = this.formBuilder.group(\n    {\n      email: [\"\", [Validators.required, Validators.email]],\n      name: [\"\"],\n      masterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      confirmMasterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n      hint: [\n        null,\n        [\n          InputsFieldMatch.validateInputsDoesntMatch(\n            \"masterPassword\",\n            this.i18nService.t(\"hintEqualsPassword\")\n          ),\n        ],\n      ],\n      acceptPolicies: [false, [this.acceptPoliciesValidation()]],\n    },\n    {\n      validator: InputsFieldMatch.validateFormInputsMatch(\n        \"masterPassword\",\n        \"confirmMasterPassword\",\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      ),\n    }\n  );\n\n  protected successRoute = \"login\";\n\n  protected accountCreated = false;\n\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected formValidationErrorService: FormValidationErrorsService,\n    protected formBuilder: UntypedFormBuilder,\n    protected authService: AuthService,\n    protected router: Router,\n    i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    protected passwordGenerationService: PasswordGenerationService,\n    environmentService: EnvironmentService,\n    protected logService: LogService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.showTerms = !platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.setupCaptcha();\n  }\n\n  async submit(showToast = true) {\n    let email = this.formGroup.value.email;\n    email = email.trim().toLowerCase();\n    let name = this.formGroup.value.name;\n    name = name === \"\" ? null : name; // Why do we do this?\n    const masterPassword = this.formGroup.value.masterPassword;\n    try {\n      if (!this.accountCreated) {\n        const registerResponse = await this.registerAccount(\n          await this.buildRegisterRequest(email, masterPassword, name),\n          showToast\n        );\n        if (!registerResponse.successful) {\n          return;\n        }\n        this.captchaBypassToken = registerResponse.captchaBypassToken;\n        this.accountCreated = true;\n      }\n      if (this.isInTrialFlow) {\n        if (!this.accountCreated) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"trialAccountCreated\")\n          );\n        }\n        const loginResponse = await this.logIn(email, masterPassword, this.captchaBypassToken);\n        if (loginResponse.captchaRequired) {\n          return;\n        }\n        this.createdAccount.emit(this.formGroup.value.email);\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"newAccountCreated\")\n        );\n        this.router.navigate([this.successRoute], { queryParams: { email: email } });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        case \"inputsDoesntMatchError\":\n          return this.i18nService.t(\"masterPassDoesntMatch\");\n        case \"inputsMatchError\":\n          return this.i18nService.t(\"hintEqualsPassword\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  //validation would be ignored on selfhosted\n  private acceptPoliciesValidation(): ValidatorFn {\n    return (control: AbstractControl) => {\n      const ctrlValue = control.value;\n\n      return !ctrlValue && this.showTerms ? { required: true } : null;\n    };\n  }\n\n  private async validateRegistration(showToast: boolean): Promise<{ isValid: boolean }> {\n    this.formGroup.markAllAsTouched();\n    this.showErrorSummary = true;\n\n    if (this.formGroup.get(\"acceptPolicies\").hasError(\"required\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"acceptPoliciesRequired\")\n      );\n      return { isValid: false };\n    }\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return { isValid: false };\n    }\n\n    //desktop, browser\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return { isValid: false };\n    }\n\n    if (this.passwordStrengthResult != null && this.passwordStrengthResult.score < 3) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return { isValid: false };\n      }\n    }\n    return { isValid: true };\n  }\n\n  private async buildRegisterRequest(\n    email: string,\n    masterPassword: string,\n    name: string\n  ): Promise<RegisterRequest> {\n    const hint = this.formGroup.value.hint;\n    const kdf = DEFAULT_KDF_TYPE;\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new RegisterRequest(\n      email,\n      name,\n      hashedPassword,\n      hint,\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      this.referenceData,\n      this.captchaToken\n    );\n    request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n    const orgInvite = await this.stateService.getOrganizationInvitation();\n    if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n      request.token = orgInvite.token;\n      request.organizationUserId = orgInvite.organizationUserId;\n    }\n    return request;\n  }\n\n  private async registerAccount(\n    request: RegisterRequest,\n    showToast: boolean\n  ): Promise<{ successful: boolean; captchaBypassToken?: string }> {\n    if (!(await this.validateRegistration(showToast)).isValid) {\n      return { successful: false };\n    }\n    this.formPromise = this.apiService.postRegister(request);\n    try {\n      const response = await this.formPromise;\n      return { successful: true, captchaBypassToken: response.captchaBypassToken };\n    } catch (e) {\n      if (this.handleCaptchaRequired(e)) {\n        return { successful: false };\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  private async logIn(\n    email: string,\n    masterPassword: string,\n    captchaBypassToken: string\n  ): Promise<{ captchaRequired: boolean }> {\n    const credentials = new PasswordLogInCredentials(\n      email,\n      masterPassword,\n      captchaBypassToken,\n      null\n    );\n    const loginResponse = await this.authService.logIn(credentials);\n    if (this.handleCaptchaRequired(loginResponse)) {\n      return { captchaRequired: true };\n    }\n    return { captchaRequired: false };\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"tw-container tw-mx-auto\"\n  [formGroup]=\"formGroup\"\n>\n  <div>\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"emailAddress\" | i18n }}</bit-label>\n        <input id=\"register-form_input_email\" bitInput type=\"email\" formControlName=\"email\" />\n        <bit-hint>{{ \"emailAddressDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"name\" | i18n }}</bit-label>\n        <input id=\"register-form_input_name\" bitInput type=\"text\" formControlName=\"name\" />\n        <bit-hint>{{ \"yourNameDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <app-callout\n        type=\"info\"\n        [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n        *ngIf=\"enforcedPolicyOptions\"\n      >\n      </app-callout>\n      <bit-form-field>\n        <bit-label>{{ \"masterPass\" | i18n }}</bit-label>\n        <input\n          id=\"register-form_input_master-password\"\n          bitInput\n          type=\"password\"\n          formControlName=\"masterPassword\"\n        />\n        <button\n          type=\"button\"\n          bitSuffix\n          bitIconButton\n          bitPasswordInputToggle\n          [(toggled)]=\"showPassword\"\n        ></button>\n        <bit-hint>\n          <span class=\"tw-font-semibold\">Important:</span>\n          {{ \"masterPassImportant\" | i18n }}\n        </bit-hint>\n      </bit-form-field>\n      <app-password-strength\n        [password]=\"formGroup.get('masterPassword')?.value\"\n        [email]=\"formGroup.get('email')?.value\"\n        [name]=\"formGroup.get('name')?.value\"\n        [showText]=\"true\"\n        (passwordStrengthResult)=\"getStrengthResult($event)\"\n      >\n      </app-password-strength>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"reTypeMasterPass\" | i18n }}</bit-label>\n        <input\n          id=\"register-form_input_confirm-master-password\"\n          bitInput\n          type=\"password\"\n          formControlName=\"confirmMasterPassword\"\n        />\n        <button\n          type=\"button\"\n          bitSuffix\n          bitIconButton\n          bitPasswordInputToggle\n          [(toggled)]=\"showPassword\"\n        ></button>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"masterPassHint\" | i18n }}</bit-label>\n        <input id=\"register-form_input_hint\" bitInput type=\"text\" formControlName=\"hint\" />\n        <bit-hint>{{ \"masterPassHintDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div [hidden]=\"!showCaptcha()\">\n      <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n    </div>\n\n    <div class=\"tw-mb-3 tw-flex tw-items-start\" *ngIf=\"showTerms\">\n      <div class=\"tw-flex tw-h-6 tw-items-center\">\n        <input\n          id=\"register-form_input_accept-policies\"\n          class=\"tw-border-gray-300 tw-w-4 tw-rounded tw-border\"\n          bitInput\n          type=\"checkbox\"\n          formControlName=\"acceptPolicies\"\n        />\n      </div>\n      <bit-label class=\"ml-2\">\n        {{ \"acceptPolicies\" | i18n }}<br />\n        <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{\n          \"termsOfService\" | i18n\n        }}</a\n        >,\n        <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{\n          \"privacyPolicy\" | i18n\n        }}</a>\n      </bit-label>\n    </div>\n\n    <div class=\"tw-mb-3 tw-flex\">\n      <ng-container *ngIf=\"!accountCreated\">\n        <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n          {{ \"createAccount\" | i18n }}\n        </button>\n        <a\n          bitButton\n          buttonType=\"secondary\"\n          routerLink=\"/login\"\n          class=\"tw-ml-3 tw-inline-flex tw-items-center tw-px-3\"\n        >\n          <i class=\"bwi bwi-sign-in tw-mr-2\"></i>\n          {{ \"logIn\" | i18n }}\n        </a>\n      </ng-container>\n      <ng-container *ngIf=\"accountCreated\">\n        <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n          {{ \"logIn\" | i18n }}\n        </button>\n      </ng-container>\n    </div>\n    <bit-error-summary *ngIf=\"showErrorSummary\" [formGroup]=\"formGroup\"></bit-error-summary>\n  </div>\n</form>\n","import { Component, Input } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"@bitwarden/angular/components/register.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/reference-event.request\";\n\n@Component({\n  selector: \"app-register-form\",\n  templateUrl: \"./register-form.component.html\",\n})\nexport class RegisterFormComponent extends BaseRegisterComponent {\n  @Input() queryParamEmail: string;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() referenceDataValue: ReferenceEventRequest;\n\n  showErrorSummary = false;\n\n  constructor(\n    formValidationErrorService: FormValidationErrorsService,\n    formBuilder: UntypedFormBuilder,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    private policyService: PolicyService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      formValidationErrorService,\n      formBuilder,\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.referenceData = this.referenceDataValue;\n\n    if (this.queryParamEmail) {\n      this.formGroup.get(\"email\")?.setValue(this.queryParamEmail);\n    }\n  }\n\n  async submit() {\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.passwordStrengthResult.score,\n        this.formGroup.value.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    await super.submit(false);\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-forbes\",\n  templateUrl: \"logo-forbes.component.html\",\n})\nexport class LogoForbesComponent {}\n","<figure>\n  <figcaption>\n    <cite>\n      <img\n        src=\"../../images/register-layout/forbes-logo.svg\"\n        class=\"tw-mx-auto tw-block tw-w-40\"\n        alt=\"Forbes Logo\"\n      />\n    </cite>\n  </figcaption>\n  <blockquote class=\"tw-mx-auto tw-mt-2 tw-max-w-xl tw-px-4 tw-text-center\">\n    “Bitwarden boasts the backing of some of the world's best security experts and an attractive,\n    easy-to-use interface”\n  </blockquote>\n</figure>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-us-news\",\n  templateUrl: \"logo-us-news.component.html\",\n})\nexport class LogoUSNewsComponent {}\n","<img\n  src=\"../../images/register-layout/usnews-360-badge.svg\"\n  class=\"tw-mx-auto tw-block tw-w-48\"\n  alt=\"US News 360 Reviews Best Password Manager\"\n/>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise-content\",\n  templateUrl: \"enterprise-content.component.html\",\n})\nexport class EnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams-content\",\n  templateUrl: \"teams-content.component.html\",\n})\nexport class TeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-trial-confirmation-details\",\n  templateUrl: \"confirmation-details.component.html\",\n})\nexport class ConfirmationDetailsComponent {\n  @Input() email: string;\n  @Input() orgLabel: string;\n}\n","<div class=\"tw-pl-6 tw-pb-6\">\n  <p class=\"tw-text-xl\">{{ \"trialThankYou\" | i18n: orgLabel }}</p>\n  <ul class=\"tw-list-disc\">\n    <li>\n      <p>\n        {{ \"trialConfirmationEmail\" | i18n }}\n        <span class=\"tw-font-bold\">{{ email }}</span\n        >.\n      </p>\n    </li>\n    <li>\n      <p>\n        {{ \"trialPaidInfoMessage\" | i18n: orgLabel }}\n      </p>\n    </li>\n  </ul>\n</div>\n","<form #form [formGroup]=\"formGroup\" [appApiAction]=\"formPromise\" (ngSubmit)=\"submit()\">\n  <div class=\"tw-container tw-mb-3\">\n    <div class=\"tw-mb-6\">\n      <h2 class=\"tw-mb-3 tw-text-base tw-font-semibold\">{{ \"billingPlanLabel\" | i18n }}</h2>\n      <div class=\"tw-mb-1 tw-items-center\" *ngFor=\"let selectablePlan of selectablePlans\">\n        <label class=\"tw- tw-block tw-text-main\" for=\"interval{{ selectablePlan.type }}\">\n          <input\n            checked\n            class=\"tw-h-4 tw-w-4 tw-align-middle\"\n            id=\"interval{{ selectablePlan.type }}\"\n            name=\"plan\"\n            type=\"radio\"\n            [value]=\"selectablePlan.type\"\n            formControlName=\"plan\"\n          />\n          <ng-container *ngIf=\"selectablePlan.isAnnual\">\n            {{ \"annual\" | i18n }} -\n            {{\n              (selectablePlan.basePrice === 0 ? selectablePlan.seatPrice : selectablePlan.basePrice)\n                | currency: \"$\"\n            }}\n            /{{ \"yr\" | i18n }}\n          </ng-container>\n          <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n            {{ \"monthly\" | i18n }} -\n            {{\n              (selectablePlan.basePrice === 0 ? selectablePlan.seatPrice : selectablePlan.basePrice)\n                | currency: \"$\"\n            }}\n            /{{ \"monthAbbr\" | i18n }}\n          </ng-container>\n        </label>\n      </div>\n    </div>\n\n    <div class=\"tw-mb-4\">\n      <h2 class=\"tw-mb-3 tw-text-base tw-font-semibold\">{{ \"paymentType\" | i18n }}</h2>\n      <app-payment [hideCredit]=\"true\" [trialFlow]=\"true\"></app-payment>\n      <app-tax-info [trialFlow]=\"true\" (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    </div>\n\n    <div class=\"tw-flex tw-space-x-2\">\n      <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n        {{ \"startTrial\" | i18n }}\n      </button>\n\n      <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"stepBack()\">Back</button>\n    </div>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { UntypedFormBuilder, FormGroup } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\nimport { OrganizationPlansComponent } from \"../../settings/organization-plans.component\";\n\n@Component({\n  selector: \"app-billing\",\n  templateUrl: \"./billing.component.html\",\n})\nexport class BillingComponent extends OrganizationPlansComponent {\n  @Input() orgInfoForm: FormGroup;\n  @Output() previousStep = new EventEmitter();\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    router: Router,\n    syncService: SyncService,\n    policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    messagingService: MessagingService,\n    formBuilder: UntypedFormBuilder,\n    organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      apiService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      router,\n      syncService,\n      policyService,\n      organizationService,\n      logService,\n      messagingService,\n      formBuilder,\n      organizationApiService\n    );\n  }\n\n  async ngOnInit() {\n    const additionalSeats = this.product == ProductType.Families ? 0 : 1;\n    this.formGroup.patchValue({\n      name: this.orgInfoForm.value.name,\n      billingEmail: this.orgInfoForm.value.email,\n      additionalSeats: additionalSeats,\n      plan: this.plan,\n      product: this.product,\n    });\n    this.isInTrialFlow = true;\n    await super.ngOnInit();\n  }\n\n  stepBack() {\n    this.previousStep.emit();\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-default-content\",\n  templateUrl: \"default-content.component.html\",\n})\nexport class DefaultContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise1-content\",\n  templateUrl: \"enterprise1-content.component.html\",\n})\nexport class Enterprise1ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise2-content\",\n  templateUrl: \"enterprise2-content.component.html\",\n})\nexport class Enterprise2ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Enterprise Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams1-content\",\n  templateUrl: \"teams1-content.component.html\",\n})\nexport class Teams1ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Teams Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams2-content\",\n  templateUrl: \"teams2-content.component.html\",\n})\nexport class Teams2ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-cnet\",\n  templateUrl: \"logo-cnet.component.html\",\n})\nexport class LogoCnetComponent {}\n","<figure>\n  <figcaption>\n    <cite>\n      <img\n        src=\"../../images/register-layout/cnet-logo.svg\"\n        class=\"tw-mx-auto tw-block tw-w-40\"\n        alt=\"CNET Logo\"\n      />\n    </cite>\n  </figcaption>\n  <blockquote class=\"tw-mx-auto tw-mt-2 tw-max-w-xl tw-px-4 tw-text-center\">\n    \"No more excuses; start using Bitwarden today. The identity you save could be your own. The\n    money definitely will be.\"\n  </blockquote>\n</figure>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-enterprise-content\",\n  templateUrl: \"cnet-enterprise-content.component.html\",\n})\nexport class CnetEnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Enterprise Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-individual-content\",\n  templateUrl: \"cnet-individual-content.component.html\",\n})\nexport class CnetIndividualContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Premium Account Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Secure your account with advanced two-step login</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-teams-content\",\n  templateUrl: \"cnet-teams-content.component.html\",\n})\nexport class CnetTeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Teams Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-abm-enterprise-content\",\n  templateUrl: \"abm-enterprise-content.component.html\",\n})\nexport class AbmEnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-abm-teams-content\",\n  templateUrl: \"abm-teams-content.component.html\",\n})\nexport class AbmTeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","<div *ngIf=\"accountCreateOnly\" class=\"\">\n  <h1 class=\"tw-mt-12 tw-text-center tw-text-xl\">{{ \"createAccount\" | i18n }}</h1>\n  <div\n    class=\"tw-min-w-xl tw-m-auto tw-max-w-xl tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-8\"\n  >\n    <app-register-form\n      [queryParamEmail]=\"email\"\n      [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n      [referenceDataValue]=\"referenceData\"\n    ></app-register-form>\n  </div>\n</div>\n<div *ngIf=\"!accountCreateOnly\">\n  <div class=\"tw-absolute tw--z-10 tw--mt-48 tw-h-[28rem] tw-w-full tw-bg-background-alt2\"></div>\n  <div class=\"tw-min-w-4xl tw-mx-auto tw-flex tw-max-w-screen-xl tw-gap-12 tw-px-4\">\n    <div class=\"tw-w-1/2\">\n      <img\n        alt=\"Bitwarden\"\n        style=\"height: 50px; width: 335px\"\n        class=\"tw-mt-6\"\n        src=\"../../images/register-layout/logo-horizontal-white.svg\"\n      />\n\n      <div class=\"tw-pt-12\">\n        <!-- Layout params are used by marketing to determine left-hand content -->\n        <app-default-content *ngIf=\"layout === layouts.default\"></app-default-content>\n        <app-teams-content *ngIf=\"layout === layouts.teams\"></app-teams-content>\n        <app-teams1-content *ngIf=\"layout === layouts.teams1\"></app-teams1-content>\n        <app-teams2-content *ngIf=\"layout === layouts.teams2\"></app-teams2-content>\n        <app-enterprise-content *ngIf=\"layout === layouts.enterprise\"></app-enterprise-content>\n        <app-enterprise1-content *ngIf=\"layout === layouts.enterprise1\"></app-enterprise1-content>\n        <app-enterprise2-content *ngIf=\"layout === layouts.enterprise2\"></app-enterprise2-content>\n        <app-cnet-enterprise-content\n          *ngIf=\"layout === layouts.cnetcmpgnent\"\n        ></app-cnet-enterprise-content>\n        <app-cnet-individual-content\n          *ngIf=\"layout === layouts.cnetcmpgnind\"\n        ></app-cnet-individual-content>\n        <app-cnet-teams-content *ngIf=\"layout === layouts.cnetcmpgnteams\"></app-cnet-teams-content>\n        <app-abm-enterprise-content\n          *ngIf=\"layout === layouts.abmenterprise\"\n        ></app-abm-enterprise-content>\n        <app-abm-teams-content *ngIf=\"layout === layouts.abmteams\"></app-abm-teams-content>\n      </div>\n    </div>\n    <div class=\"tw-w-1/2\">\n      <div *ngIf=\"!useTrialStepper\">\n        <div\n          class=\"tw-min-w-xl tw-m-auto tw-mt-28 tw-max-w-xl tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-8\"\n        >\n          <app-register-form\n            [queryParamEmail]=\"email\"\n            [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n            [referenceDataValue]=\"referenceData\"\n          ></app-register-form>\n        </div>\n      </div>\n      <div class=\"tw-pt-44\" *ngIf=\"useTrialStepper\">\n        <div class=\"tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background\">\n          <div class=\"tw-flex tw-h-12 tw-w-full tw-items-center tw-rounded-t tw-bg-secondary-100\">\n            <h2 class=\"tw-mb-0 tw-pl-4 tw-text-base tw-font-bold tw-uppercase\">\n              Start your 7-Day free trial of Bitwarden for {{ org }}\n            </h2>\n          </div>\n          <app-vertical-stepper #stepper linear (selectionChange)=\"stepSelectionChange($event)\">\n            <app-vertical-step label=\"Create Account\" [editable]=\"false\" [subLabel]=\"email\">\n              <app-register-form\n                [isInTrialFlow]=\"true\"\n                (createdAccount)=\"createdAccount($event)\"\n                [referenceDataValue]=\"referenceData\"\n              ></app-register-form>\n            </app-vertical-step>\n            <app-vertical-step label=\"Organization Information\" [subLabel]=\"orgInfoSubLabel\">\n              <app-org-info [nameOnly]=\"true\" [formGroup]=\"orgInfoFormGroup\"></app-org-info>\n              <button\n                bitButton\n                buttonType=\"primary\"\n                [disabled]=\"orgInfoFormGroup.get('name').invalid\"\n                cdkStepperNext\n              >\n                Next\n              </button>\n            </app-vertical-step>\n            <app-vertical-step label=\"Billing\" [subLabel]=\"billingSubLabel\">\n              <app-billing\n                *ngIf=\"stepper.selectedIndex === 2\"\n                [plan]=\"plan\"\n                [product]=\"product\"\n                [orgInfoForm]=\"orgInfoFormGroup\"\n                (previousStep)=\"previousStep()\"\n                (onTrialBillingSuccess)=\"billingSuccess($event)\"\n              ></app-billing>\n            </app-vertical-step>\n            <app-vertical-step label=\"Confirmation Details\" [applyBorder]=\"false\">\n              <app-trial-confirmation-details\n                [email]=\"email\"\n                [orgLabel]=\"orgLabel\"\n              ></app-trial-confirmation-details>\n              <div class=\"tw-mb-3 tw-flex\">\n                <button bitButton buttonType=\"primary\" (click)=\"navigateToOrgVault()\">\n                  Get Started\n                </button>\n                <button\n                  bitButton\n                  buttonType=\"secondary\"\n                  (click)=\"navigateToOrgInvite()\"\n                  class=\"tw-ml-3 tw-inline-flex tw-items-center tw-px-3\"\n                >\n                  Invite Users\n                </button>\n              </div>\n            </app-vertical-step>\n          </app-vertical-stepper>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { StepperSelectionEvent } from \"@angular/cdk/stepper\";\nimport { TitleCasePipe } from \"@angular/common\";\nimport { Component, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\nimport { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first, Subject, takeUntil } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/reference-event.request\";\n\nimport { RouterService } from \"./../../core/router.service\";\nimport { VerticalStepperComponent } from \"./vertical-stepper/vertical-stepper.component\";\n\nenum ValidOrgParams {\n  families = \"families\",\n  enterprise = \"enterprise\",\n  teams = \"teams\",\n  individual = \"individual\",\n  premium = \"premium\",\n  free = \"free\",\n}\n\nenum ValidLayoutParams {\n  default = \"default\",\n  teams = \"teams\",\n  teams1 = \"teams1\",\n  teams2 = \"teams2\",\n  enterprise = \"enterprise\",\n  enterprise1 = \"enterprise1\",\n  enterprise2 = \"enterprise2\",\n  cnetcmpgnent = \"cnetcmpgnent\",\n  cnetcmpgnind = \"cnetcmpgnind\",\n  cnetcmpgnteams = \"cnetcmpgnteams\",\n  abmenterprise = \"abmenterprise\",\n  abmteams = \"abmteams\",\n}\n\n@Component({\n  selector: \"app-trial\",\n  templateUrl: \"trial-initiation.component.html\",\n})\nexport class TrialInitiationComponent implements OnInit, OnDestroy {\n  email = \"\";\n  org = \"\";\n  orgInfoSubLabel = \"\";\n  orgId = \"\";\n  orgLabel = \"\";\n  billingSubLabel = \"\";\n  layout = \"default\";\n  plan: PlanType;\n  product: ProductType;\n  accountCreateOnly = true;\n  useTrialStepper = false;\n  policies: Policy[];\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  trialFlowOrgs: string[] = [\n    ValidOrgParams.teams,\n    ValidOrgParams.enterprise,\n    ValidOrgParams.families,\n  ];\n  routeFlowOrgs: string[] = [\n    ValidOrgParams.free,\n    ValidOrgParams.premium,\n    ValidOrgParams.individual,\n  ];\n  layouts = ValidLayoutParams;\n  referenceData: ReferenceEventRequest;\n  @ViewChild(\"stepper\", { static: false }) verticalStepper: VerticalStepperComponent;\n\n  orgInfoFormGroup = this.formBuilder.group({\n    name: [\"\", { validators: [Validators.required, Validators.maxLength(50)], updateOn: \"change\" }],\n    email: [\"\"],\n  });\n\n  private set referenceDataId(referenceId: string) {\n    if (referenceId != null) {\n      this.referenceData.id = referenceId;\n    } else {\n      this.referenceData.id = (\"; \" + document.cookie)\n        .split(\"; reference=\")\n        .pop()\n        .split(\";\")\n        .shift();\n    }\n\n    if (this.referenceData.id === \"\") {\n      this.referenceData.id = null;\n    }\n  }\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private route: ActivatedRoute,\n    protected router: Router,\n    private formBuilder: UntypedFormBuilder,\n    private titleCasePipe: TitleCasePipe,\n    private stateService: StateService,\n    private logService: LogService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    private i18nService: I18nService,\n    private routerService: RouterService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      this.referenceData = new ReferenceEventRequest();\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n\n      this.referenceDataId = qParams.reference;\n\n      if (Object.values(ValidLayoutParams).includes(qParams.layout)) {\n        this.layout = qParams.layout;\n        this.accountCreateOnly = false;\n      }\n\n      if (this.trialFlowOrgs.includes(qParams.org)) {\n        this.org = qParams.org;\n        this.orgLabel = this.titleCasePipe.transform(this.org);\n        this.useTrialStepper = true;\n        this.referenceData.flow = qParams.org;\n\n        if (this.org === ValidOrgParams.families) {\n          this.plan = PlanType.FamiliesAnnually;\n          this.product = ProductType.Families;\n        } else if (this.org === ValidOrgParams.teams) {\n          this.plan = PlanType.TeamsAnnually;\n          this.product = ProductType.Teams;\n        } else if (this.org === ValidOrgParams.enterprise) {\n          this.plan = PlanType.EnterpriseAnnually;\n          this.product = ProductType.Enterprise;\n        }\n      } else if (this.routeFlowOrgs.includes(qParams.org)) {\n        this.referenceData.flow = qParams.org;\n        const route = this.router.createUrlTree([\"create-organization\"], {\n          queryParams: { plan: qParams.org },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n\n      // Are they coming from an email for sponsoring a families organization\n      // After logging in redirect them to setup the families sponsorship\n      this.setupFamilySponsorship(qParams.sponsorshipToken);\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      try {\n        const policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        if (policies.data != null) {\n          const policiesData = policies.data.map((p) => new PolicyData(p));\n          this.policies = policiesData.map((p) => new Policy(p));\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (this.policies != null) {\n      this.policyService\n        .masterPasswordPolicyOptions$(this.policies)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((enforcedPasswordPolicyOptions) => {\n          this.enforcedPolicyOptions = enforcedPasswordPolicyOptions;\n        });\n    }\n\n    this.orgInfoFormGroup.controls.name.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.orgInfoFormGroup.controls.name.markAsTouched();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  stepSelectionChange(event: StepperSelectionEvent) {\n    // Set org info sub label\n    if (event.selectedIndex === 1 && this.orgInfoFormGroup.controls.name.value === \"\") {\n      this.orgInfoSubLabel =\n        \"Enter your \" + this.titleCasePipe.transform(this.org) + \" organization information\";\n    } else if (event.previouslySelectedIndex === 1) {\n      this.orgInfoSubLabel = this.orgInfoFormGroup.controls.name.value;\n    }\n\n    //set billing sub label\n    if (event.selectedIndex === 2) {\n      this.billingSubLabel = this.i18nService.t(\"billingTrialSubLabel\");\n    }\n  }\n\n  createdAccount(email: string) {\n    this.email = email;\n    this.orgInfoFormGroup.get(\"email\")?.setValue(email);\n    this.verticalStepper.next();\n  }\n\n  billingSuccess(event: any) {\n    this.orgId = event?.orgId;\n    this.billingSubLabel = event?.subLabelText;\n    this.verticalStepper.next();\n  }\n\n  navigateToOrgVault() {\n    this.router.navigate([\"organizations\", this.orgId, \"vault\"]);\n  }\n\n  navigateToOrgInvite() {\n    this.router.navigate([\"organizations\", this.orgId, \"manage\", \"members\"]);\n  }\n\n  previousStep() {\n    this.verticalStepper.previous();\n  }\n\n  private setupFamilySponsorship(sponsorshipToken: string) {\n    if (sponsorshipToken != null) {\n      const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n        queryParams: { plan: sponsorshipToken },\n      });\n      this.routerService.setPreviousUrl(route.toString());\n    }\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nexport class WebAuthnIFrame {\n  private iframe: HTMLIFrameElement = null;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    private webVaultUrl: string,\n    private webAuthnNewTab: boolean,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private successCallback: Function, // eslint-disable-line\n    private errorCallback: Function, // eslint-disable-line\n    private infoCallback: Function // eslint-disable-line\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  init(data: any): void {\n    const params = new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      btnText: encodeURIComponent(this.i18nService.t(\"webAuthnAuthenticate\")),\n      v: \"1\",\n    });\n\n    if (this.webAuthnNewTab) {\n      // Firefox fallback which opens the webauthn page in a new tab\n      params.append(\"locale\", this.i18nService.translationLocale);\n      this.platformUtilsService.launchUri(\n        `${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`\n      );\n    } else {\n      this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n      this.iframe = this.win.document.getElementById(\"webauthn_iframe\") as HTMLIFrameElement;\n      this.iframe.allow = \"publickey-credentials-get \" + new URL(this.webVaultUrl).origin;\n      this.iframe.src = this.connectorLink.href;\n\n      this.win.addEventListener(\"message\", this.parseFunction, false);\n    }\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport * as DuoWebSDK from \"duo_web_sdk\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { WebAuthnIFrame } from \"@bitwarden/common/misc/webauthn_iframe\";\nimport { AuthResult } from \"@bitwarden/common/models/domain/auth-result\";\nimport { TokenTwoFactorRequest } from \"@bitwarden/common/models/request/identity-token/token-two-factor.request\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/two-factor-email.request\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { CaptchaProtectedComponent } from \"./captchaProtected.component\";\n\n@Directive()\nexport class TwoFactorComponent extends CaptchaProtectedComponent implements OnInit, OnDestroy {\n  token = \"\";\n  remember = false;\n  webAuthnReady = false;\n  webAuthnNewTab = false;\n  providers = TwoFactorProviders;\n  providerType = TwoFactorProviderType;\n  selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n  webAuthnSupported = false;\n  webAuthn: WebAuthnIFrame = null;\n  title = \"\";\n  twoFactorEmail: string = null;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n  identifier: string = null;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n\n  get webAuthnAllow(): string {\n    return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n  }\n\n  protected loginRoute = \"login\";\n  protected successRoute = \"vault\";\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected route: ActivatedRoute,\n    protected logService: LogService,\n    protected twoFactorService: TwoFactorService,\n    protected appIdService: AppIdService,\n    protected loginService: LoginService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n  }\n\n  async ngOnInit() {\n    if (!this.authing || this.twoFactorService.getProviders() == null) {\n      this.router.navigate([this.loginRoute]);\n      return;\n    }\n\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    if (this.needsLock) {\n      this.successRoute = \"lock\";\n    }\n\n    if (this.win != null && this.webAuthnSupported) {\n      const webVaultUrl = this.environmentService.getWebVaultUrl();\n      this.webAuthn = new WebAuthnIFrame(\n        this.win,\n        webVaultUrl,\n        this.webAuthnNewTab,\n        this.platformUtilsService,\n        this.i18nService,\n        (token: string) => {\n          this.token = token;\n          this.submit();\n        },\n        (error: string) => {\n          this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n        },\n        (info: string) => {\n          if (info === \"ready\") {\n            this.webAuthnReady = true;\n          }\n        }\n      );\n    }\n\n    this.selectedProviderType = this.twoFactorService.getDefaultProvider(this.webAuthnSupported);\n    await this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupWebAuthn();\n    this.webAuthn = null;\n  }\n\n  async init() {\n    if (this.selectedProviderType == null) {\n      this.title = this.i18nService.t(\"loginUnavailable\");\n      return;\n    }\n\n    this.cleanupWebAuthn();\n    this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n    switch (this.selectedProviderType) {\n      case TwoFactorProviderType.WebAuthn:\n        if (!this.webAuthnNewTab) {\n          setTimeout(() => {\n            this.authWebAuthn();\n          }, 500);\n        }\n        break;\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        setTimeout(() => {\n          DuoWebSDK.init({\n            iframe: undefined,\n            host: providerData.Host,\n            sig_request: providerData.Signature,\n            submit_callback: async (f: HTMLFormElement) => {\n              const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n              if (sig != null) {\n                this.token = sig.value;\n                await this.submit();\n              }\n            },\n          });\n        }, 0);\n        break;\n      case TwoFactorProviderType.Email:\n        this.twoFactorEmail = providerData.Email;\n        if (this.twoFactorService.getProviders().size > 1) {\n          await this.sendEmail(false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.token == null || this.token === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"verificationCodeRequired\")\n      );\n      return;\n    }\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n      if (this.webAuthn != null) {\n        this.webAuthn.stop();\n      } else {\n        return;\n      }\n    } else if (\n      this.selectedProviderType === TwoFactorProviderType.Email ||\n      this.selectedProviderType === TwoFactorProviderType.Authenticator\n    ) {\n      this.token = this.token.replace(\" \", \"\").trim();\n    }\n\n    try {\n      await this.doSubmit();\n    } catch {\n      if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n        this.webAuthn.start();\n      }\n    }\n  }\n\n  async doSubmit() {\n    this.formPromise = this.authService.logInTwoFactor(\n      new TokenTwoFactorRequest(this.selectedProviderType, this.token, this.remember),\n      this.captchaToken\n    );\n    const response: AuthResult = await this.formPromise;\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    if (this.handleCaptchaRequired(response)) {\n      return;\n    }\n    if (this.onSuccessfulLogin != null) {\n      this.loginService.clearValues();\n      this.onSuccessfulLogin();\n    }\n    if (response.resetMasterPassword) {\n      this.successRoute = \"set-password\";\n    }\n    if (response.forcePasswordReset) {\n      this.successRoute = \"update-temp-password\";\n    }\n    if (this.onSuccessfulLoginNavigate != null) {\n      this.loginService.clearValues();\n      this.onSuccessfulLoginNavigate();\n    } else {\n      this.loginService.clearValues();\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n\n  async sendEmail(doToast: boolean) {\n    if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n      return;\n    }\n\n    if (this.emailPromise != null) {\n      return;\n    }\n\n    try {\n      const request = new TwoFactorEmailRequest();\n      request.email = this.authService.email;\n      request.masterPasswordHash = this.authService.masterPasswordHash;\n      request.deviceIdentifier = await this.appIdService.getAppId();\n      request.authRequestAccessCode = this.authService.accessCode;\n      request.authRequestId = this.authService.authRequestId;\n      this.emailPromise = this.apiService.postTwoFactorEmail(request);\n      await this.emailPromise;\n      if (doToast) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"verificationCodeEmailSent\", this.twoFactorEmail)\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.emailPromise = null;\n  }\n\n  authWebAuthn() {\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n\n    if (!this.webAuthnSupported || this.webAuthn == null) {\n      return;\n    }\n\n    this.webAuthn.init(providerData);\n  }\n\n  private cleanupWebAuthn() {\n    if (this.webAuthn != null) {\n      this.webAuthn.stop();\n      this.webAuthn.cleanup();\n    }\n  }\n\n  get authing(): boolean {\n    return (\n      this.authService.authingWithPassword() ||\n      this.authService.authingWithSso() ||\n      this.authService.authingWithUserApiKey() ||\n      this.authService.authingWithPasswordless()\n    );\n  }\n\n  get needsLock(): boolean {\n    return this.authService.authingWithSso() || this.authService.authingWithUserApiKey();\n  }\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n  @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n  @Output() onRecoverSelected = new EventEmitter();\n\n  providers: any[] = [];\n\n  constructor(\n    protected twoFactorService: TwoFactorService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window\n  ) {}\n\n  ngOnInit() {\n    this.providers = this.twoFactorService.getSupportedProviders(this.win);\n  }\n\n  choose(p: any) {\n    this.onProviderSelected.emit(p.type);\n  }\n\n  recover() {\n    this.platformUtilsService.launchUri(\"https://bitwarden.com/help/lost-two-step-device/\");\n    this.onRecoverSelected.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"twoStepOptionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"twoStepOptionsTitle\">{{ \"twoStepOptions\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"list-group list-group-flush-2fa\">\n          <div *ngFor=\"let p of providers\" class=\"list-group-item list-group-item-action\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ p.name }}</h3>\n                {{ p.description }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-describedby]=\"p.name\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"choose(p)\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"list-group-item list-group-item-action\" (click)=\"recover()\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img class=\"recovery-code-img\" alt=\"rc logo\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ \"recoveryCodeTitle\" | i18n }}</h3>\n                {{ \"recoveryCodeDesc\" | i18n }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-descibedby]=\"'recoveryCodeTitle' | i18n\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"recover()\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent } from \"@bitwarden/angular/components/two-factor-options.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\n\n@Component({\n  selector: \"app-two-factor-options\",\n  templateUrl: \"two-factor-options.component.html\",\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n  constructor(\n    twoFactorService: TwoFactorService,\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService\n  ) {\n    super(twoFactorService, router, i18nService, platformUtilsService, window);\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"container\"\n  ngNativeValidate\n  autocomplete=\"off\"\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div\n      class=\"col-5\"\n      [ngClass]=\"{\n        'col-9':\n          selectedProviderType === providerType.Duo ||\n          selectedProviderType === providerType.OrganizationDuo\n      }\"\n    >\n      <p class=\"lead text-center mb-4\">{{ title }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Email ||\n              selectedProviderType === providerType.Authenticator\n            \"\n          >\n            <p *ngIf=\"selectedProviderType === providerType.Authenticator\">\n              {{ \"enterVerificationCodeApp\" | i18n }}\n            </p>\n            <p *ngIf=\"selectedProviderType === providerType.Email\">\n              {{ \"enterVerificationCodeEmail\" | i18n: twoFactorEmail }}\n            </p>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"text\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                inputmode=\"tel\"\n                appInputVerbatim\n              />\n              <small class=\"form-text\" *ngIf=\"selectedProviderType === providerType.Email\">\n                <a\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"sendEmail(true)\"\n                  [appApiAction]=\"emailPromise\"\n                  *ngIf=\"selectedProviderType === providerType.Email\"\n                >\n                  {{ \"sendVerificationCodeEmailAgain\" | i18n }}\n                </a>\n              </small>\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n            <p class=\"text-center\">{{ \"insertYubiKey\" | i18n }}</p>\n            <picture>\n              <source srcset=\"../../images/yubikey.avif\" type=\"image/avif\" />\n              <source srcset=\"../../images/yubikey.webp\" type=\"image/webp\" />\n              <img src=\"../../images/yubikey.jpg\" class=\"rounded img-fluid mb-3\" alt=\"\" />\n            </picture>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"password\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn\">\n            <div id=\"web-authn-frame\" class=\"mb-3\">\n              <iframe id=\"webauthn_iframe\" [attr.allow]=\"webAuthnAllow\"></iframe>\n            </div>\n          </ng-container>\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Duo ||\n              selectedProviderType === providerType.OrganizationDuo\n            \"\n          >\n            <div id=\"duo-frame\" class=\"mb-3\">\n              <iframe id=\"duo_iframe\"></iframe>\n            </div>\n          </ng-container>\n          <i\n            class=\"bwi bwi-spinner text-muted bwi-spin pull-right\"\n            title=\"{{ 'loading' | i18n }}\"\n            *ngIf=\"form.loading && selectedProviderType === providerType.WebAuthn\"\n            aria-hidden=\"true\"\n          ></i>\n          <div class=\"form-check\" *ngIf=\"selectedProviderType != null\">\n            <input\n              id=\"remember\"\n              type=\"checkbox\"\n              name=\"Remember\"\n              class=\"form-check-input\"\n              [(ngModel)]=\"remember\"\n            />\n            <label for=\"remember\" class=\"form-check-label\">{{ \"rememberMe\" | i18n }}</label>\n          </div>\n          <ng-container *ngIf=\"selectedProviderType == null\">\n            <p>{{ \"noTwoStepProviders\" | i18n }}</p>\n            <p>{{ \"noTwoStepProviders2\" | i18n }}</p>\n          </ng-container>\n          <hr />\n          <div [hidden]=\"!showCaptcha()\">\n            <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n          </div>\n          <div class=\"d-flex mb-3\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n              *ngIf=\"\n                selectedProviderType != null &&\n                selectedProviderType !== providerType.Duo &&\n                selectedProviderType !== providerType.OrganizationDuo &&\n                selectedProviderType !== providerType.WebAuthn\n              \"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n          <div class=\"text-center\">\n            <a href=\"#\" appStopClick (click)=\"anotherMethod()\">{{\n              \"useAnotherTwoStepMethod\" | i18n\n            }}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<ng-template #twoFactorOptions></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from \"@bitwarden/angular/components/two-factor.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService } from \"@bitwarden/common/abstractions/login.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\n\nimport { RouterService } from \"../core\";\n\nimport { TwoFactorOptionsComponent } from \"./two-factor-options.component\";\n\n@Component({\n  selector: \"app-two-factor\",\n  templateUrl: \"two-factor.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n  @ViewChild(\"twoFactorOptions\", { read: ViewContainerRef, static: true })\n  twoFactorOptionsModal: ViewContainerRef;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    private modalService: ModalService,\n    route: ActivatedRoute,\n    logService: LogService,\n    twoFactorService: TwoFactorService,\n    appIdService: AppIdService,\n    private routerService: RouterService,\n    loginService: LoginService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      apiService,\n      platformUtilsService,\n      window,\n      environmentService,\n      stateService,\n      route,\n      logService,\n      twoFactorService,\n      appIdService,\n      loginService\n    );\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n  }\n\n  async anotherMethod() {\n    const [modal] = await this.modalService.openViewRef(\n      TwoFactorOptionsComponent,\n      this.twoFactorOptionsModal,\n      (comp) => {\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onProviderSelected.subscribe(async (provider: TwoFactorProviderType) => {\n          modal.close();\n          this.selectedProviderType = provider;\n          await this.init();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onRecoverSelected.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async goAfterLogIn() {\n    this.loginService.clearValues();\n    const previousUrl = this.routerService.getPreviousUrl();\n    if (previousUrl) {\n      this.router.navigateByUrl(previousUrl);\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class PasswordRequest extends SecretVerificationRequest {\n  newMasterPasswordHash: string;\n  masterPasswordHint: string;\n  key: string;\n}\n","import { Directive } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { PasswordRequest } from \"@bitwarden/common/models/request/password.request\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdatePasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n  currentMasterPassword: string;\n\n  onSuccessfulChangePassword: () => Promise<void>;\n\n  constructor(\n    protected router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async cancel() {\n    await this.stateService.setOrganizationInvitation(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n\n    const secret: Verification = {\n      type: VerificationType.MasterPassword,\n      secret: this.currentMasterPassword,\n    };\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return false;\n    }\n\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create Request\n      const request = new PasswordRequest();\n      request.masterPasswordHash = await this.cryptoService.hashPassword(\n        this.currentMasterPassword,\n        null\n      );\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.key = encKey[1].encryptedString;\n\n      // Update user's password\n      this.apiService.postPassword(request);\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"masterPasswordInvalidWarning\" | i18n }} </app-callout>\n          <app-callout\n            type=\"info\"\n            [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n            *ngIf=\"enforcedPolicyOptions\"\n          ></app-callout>\n\n          <form\n            #form\n            (ngSubmit)=\"submit()\"\n            [appApiAction]=\"formPromise\"\n            ngNativeValidate\n            autocomplete=\"off\"\n          >\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"currentMasterPassword\"\n                    type=\"password\"\n                    name=\"MasterPasswordHash\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"currentMasterPassword\"\n                    required\n                    appInputVerbatim\n                  />\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"newMasterPassword\"\n                    type=\"password\"\n                    name=\"NewMasterPasswordHash\"\n                    class=\"form-control mb-1\"\n                    [(ngModel)]=\"masterPassword\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                  <app-password-strength\n                    [password]=\"masterPassword\"\n                    [email]=\"email\"\n                    [showText]=\"true\"\n                  ></app-password-strength>\n                </div>\n              </div>\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"masterPasswordRetype\"\n                    type=\"password\"\n                    name=\"MasterPasswordRetype\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"masterPasswordRetype\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n              <i\n                class=\"fa fa-spinner fa-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"changeMasterPassword\" | i18n }}</span>\n            </button>\n            <button (click)=\"cancel()\" type=\"button\" class=\"btn btn-outline-secondary\">\n              <span>{{ \"cancel\" | i18n }}</span>\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { UpdatePasswordComponent as BaseUpdatePasswordComponent } from \"@bitwarden/angular/components/update-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\n\n@Component({\n  selector: \"app-update-password\",\n  templateUrl: \"update-password.component.html\",\n})\nexport class UpdatePasswordComponent extends BaseUpdatePasswordComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      userVerificationService,\n      logService\n    );\n  }\n}\n","import { OrganizationUserResetPasswordRequest } from \"../../abstractions/organization-user/requests\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { UpdateTempPasswordRequest } from \"@bitwarden/common/models/request/update-temp-password.request\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private syncService: SyncService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    super.ngOnInit();\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    this.email = await this.stateService.getEmail();\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n    return true;\n  }\n\n  async submit() {\n    // Validation\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email.trim().toLowerCase(),\n        this.kdf,\n        this.kdfIterations\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = encKey[1].encryptedString;\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.masterPasswordHint = this.hint;\n\n      // Update user's password\n      this.formPromise = this.apiService.putUpdateTempPassword(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedMasterPassword\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"updateMasterPasswordWarning\" | i18n }} </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength\n                  [password]=\"masterPassword\"\n                  [email]=\"email\"\n                  [showText]=\"true\"\n                  (passwordStrengthResult)=\"getStrengthResult($event)\"\n                >\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from \"@bitwarden/angular/components/update-temp-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-update-temp-password\",\n  templateUrl: \"update-temp-password.component.html\",\n})\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationService,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    syncService: SyncService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      syncService,\n      logService\n    );\n  }\n}\n","export class VerifyEmailRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VerifyEmailRequest } from \"@bitwarden/common/models/request/verify-email.request\";\n\n@Component({\n  selector: \"app-verify-email-token\",\n  templateUrl: \"verify-email-token.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class VerifyEmailTokenComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null) {\n        try {\n          await this.apiService.postAccountVerifyEmailToken(\n            new VerifyEmailRequest(qParams.userId, qParams.token)\n          );\n          if (await this.stateService.getIsAuthenticated()) {\n            await this.apiService.refreshIdentityToken();\n          }\n          this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailVerified\"));\n          this.router.navigate([\"/\"]);\n          return;\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"emailVerifiedFailed\"));\n      this.router.navigate([\"/\"]);\n    });\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","export class VerifyDeleteRecoverRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { VerifyDeleteRecoverRequest } from \"@bitwarden/common/models/request/verify-delete-recover.request\";\n\n@Component({\n  selector: \"app-verify-recover-delete\",\n  templateUrl: \"verify-recover-delete.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class VerifyRecoverDeleteComponent implements OnInit {\n  email: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private token: string;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private logService: LogService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null && qParams.email != null) {\n        this.userId = qParams.userId;\n        this.token = qParams.token;\n        this.email = qParams.email;\n      } else {\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    try {\n      const request = new VerifyDeleteRecoverRequest(this.userId, this.token);\n      this.formPromise = this.apiService.postAccountRecoverDeleteToken(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n          <p class=\"text-center\">\n            <strong>{{ email }}</strong>\n          </p>\n          <p>{{ \"deleteRecoverConfirmDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-danger btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"deleteAccount\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HomeGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return this.router.createUrlTree([\"/login\"], { queryParams: route.queryParams });\n    }\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"/lock\"], { queryParams: route.queryParams });\n    }\n    return this.router.createUrlTree([\"/vault\"], { queryParams: route.queryParams });\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-user-layout\",\n  templateUrl: \"user-layout.component.html\",\n})\nexport class UserLayoutComponent implements OnInit {\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"userAccessTitle\">\n          {{ \"userAccess\" | i18n }}\n          <small>{{ entityName }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading || !users\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <cdk-virtual-scroll-viewport\n        itemSize=\"46\"\n        minBufferPx=\"600\"\n        maxBufferPx=\"1200\"\n        [style]=\"scrollViewportStyle\"\n      >\n        <div class=\"modal-body\" *ngIf=\"!loading && users && searchedUsers\">\n          <div class=\"d-flex\">\n            <div class=\"mr-3\">\n              <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n              <input\n                type=\"search\"\n                class=\"form-control form-control-sm\"\n                id=\"search\"\n                placeholder=\"{{ 'search' | i18n }}\"\n                name=\"SearchText\"\n                [(ngModel)]=\"searchText\"\n              />\n            </div>\n            <div class=\"btn-group btn-group-sm\" role=\"group\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{ active: !showSelected }\"\n                (click)=\"filterSelected(false)\"\n              >\n                {{ \"all\" | i18n }}\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{ active: showSelected }\"\n                (click)=\"filterSelected(true)\"\n              >\n                {{ \"selected\" | i18n }}\n                <span bitBadge badgeType=\"info\" *ngIf=\"selectedCount\">{{ selectedCount }}</span>\n              </button>\n            </div>\n          </div>\n          <ng-container *ngIf=\"!searchedUsers.length\">\n            <hr />\n            {{ \"noUsersInList\" | i18n }}\n          </ng-container>\n          <table class=\"table table-hover table-list mb-0\" [hidden]=\"!searchedUsers.length\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th *ngIf=\"entity === 'collection'\">&nbsp;</th>\n                <th>{{ \"userType\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"hidePasswords\" | i18n }}\n                </th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"readOnly\" | i18n }}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *cdkVirtualFor=\"let u of searchedUsers\" class=\"\">\n                <td class=\"table-list-checkbox\" (click)=\"check(u)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.checked\"\n                    name=\"{{ u.id.substr(0, 8) }}_Checked\"\n                    [disabled]=\"entity === 'collection' && u.accessAll\"\n                    (change)=\"selectedChanged(u)\"\n                    appStopProp\n                  />\n                </td>\n                <td width=\"30\" (click)=\"check(u)\">\n                  <bit-avatar [text]=\"u | userName\" [id]=\"u.id\" size=\"small\"></bit-avatar>\n                </td>\n                <td>\n                  {{ u.email }}\n                  <span\n                    bitBadge\n                    badgeType=\"secondary\"\n                    *ngIf=\"u.status === organizationUserStatusType.Invited\"\n                    >{{ \"invited\" | i18n }}</span\n                  >\n                  <span\n                    bitBadge\n                    badgeType=\"warning\"\n                    *ngIf=\"u.status === organizationUserStatusType.Accepted\"\n                    >{{ \"accepted\" | i18n }}</span\n                  >\n                  <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n                </td>\n                <td *ngIf=\"entity === 'collection'\">\n                  <ng-container *ngIf=\"u.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter\"\n                      title=\"{{ 'userAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"userAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td>\n                  <span *ngIf=\"u.type === organizationUserType.Owner\">{{ \"owner\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Admin\">{{ \"admin\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Manager\">{{\n                    \"manager\" | i18n\n                  }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.User\">{{ \"user\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Custom\">{{ \"custom\" | i18n }}</span>\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.hidePasswords\"\n                    name=\"{{ u.id.substr(0, 8) }}_HidePasswords\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.readOnly\"\n                    name=\"{{ u.id.substr(0, 8) }}_ReadOnly\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </cdk-virtual-scroll-viewport>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/abstractions/organization-user/responses\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\n\n@Component({\n  selector: \"app-entity-users\",\n  templateUrl: \"entity-users.component.html\",\n  providers: [SearchPipe],\n})\nexport class EntityUsersComponent implements OnInit {\n  @Input() entity: \"group\" | \"collection\";\n  @Input() entityId: string;\n  @Input() entityName: string;\n  @Input() organizationId: string;\n  @Output() onEditedUsers = new EventEmitter();\n\n  organizationUserType = OrganizationUserType;\n  organizationUserStatusType = OrganizationUserStatusType;\n\n  showSelected = false;\n  loading = true;\n  formPromise: Promise<any>;\n  selectedCount = 0;\n  searchText: string;\n\n  private allUsers: OrganizationUserUserDetailsResponse[] = [];\n\n  constructor(\n    private search: SearchPipe,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationUserService: OrganizationUserService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.loadUsers();\n    this.loading = false;\n  }\n\n  get users() {\n    if (this.showSelected) {\n      return this.allUsers.filter((u) => (u as any).checked);\n    } else {\n      return this.allUsers;\n    }\n  }\n\n  get searchedUsers() {\n    return this.search.transform(this.users, this.searchText, \"name\", \"email\", \"id\");\n  }\n\n  get scrollViewportStyle() {\n    return `min-height: 120px; height: ${120 + this.searchedUsers.length * 46}px`;\n  }\n\n  async loadUsers() {\n    const users = await this.organizationUserService.getAllUsers(this.organizationId);\n    this.allUsers = users.data.map((r) => r).sort(Utils.getSortFunction(this.i18nService, \"email\"));\n    if (this.entity === \"group\") {\n      const response = await this.apiService.getGroupUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => u.id === s);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n          }\n        });\n      }\n    } else if (this.entity === \"collection\") {\n      const response = await this.apiService.getCollectionUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => !u.accessAll && u.id === s.id);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n            (user[0] as any).readOnly = s.readOnly;\n            (user[0] as any).hidePasswords = s.hidePasswords;\n          }\n        });\n      }\n    }\n\n    this.allUsers.forEach((u) => {\n      if (this.entity === \"collection\" && u.accessAll) {\n        (u as any).checked = true;\n      }\n      if ((u as any).checked) {\n        this.selectedCount++;\n      }\n    });\n  }\n\n  check(u: OrganizationUserUserDetailsResponse) {\n    if (this.entity === \"collection\" && u.accessAll) {\n      return;\n    }\n    (u as any).checked = !(u as any).checked;\n    this.selectedChanged(u);\n  }\n\n  selectedChanged(u: OrganizationUserUserDetailsResponse) {\n    if ((u as any).checked) {\n      this.selectedCount++;\n    } else {\n      if (this.entity === \"collection\") {\n        (u as any).readOnly = false;\n        (u as any).hidePasswords = false;\n      }\n      this.selectedCount--;\n    }\n  }\n\n  filterSelected(showSelected: boolean) {\n    this.showSelected = showSelected;\n  }\n\n  async submit() {\n    try {\n      if (this.entity === \"group\") {\n        const selections = this.users.filter((u) => (u as any).checked).map((u) => u.id);\n        this.formPromise = this.apiService.putGroupUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      } else {\n        const selections = this.users\n          .filter((u) => (u as any).checked && !u.accessAll)\n          .map(\n            (u) =>\n              new SelectionReadOnlyRequest(u.id, !!(u as any).readOnly, !!(u as any).hidePasswords)\n          );\n        this.formPromise = this.apiService.putCollectionUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedUsers\"));\n      this.onEditedUsers.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"collections\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <button\n      type=\"button\"\n      *ngIf=\"this.canCreate\"\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"add()\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newCollection\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging()\n      ? pagedCollections\n      : (collections | search: searchText:'name':'id')) as searchedCollections\n  \"\n>\n  <p *ngIf=\"!searchedCollections.length\">{{ \"noCollectionsInList\" | i18n }}</p>\n  <table\n    class=\"table table-hover table-list\"\n    *ngIf=\"searchedCollections.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of searchedCollections\">\n        <td>\n          <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.name }}</a>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown *ngIf=\"this.canEdit(c) || this.canDelete(c)\">\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canEdit(c)\"\n                (click)=\"edit(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-pencil-square\" aria-hidden=\"true\"></i>\n                {{ \"edit\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canEdit(c)\"\n                (click)=\"users(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                {{ \"users\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item text-danger\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canDelete(c)\"\n                (click)=\"delete(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { lastValueFrom } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport {\n  CollectionDetailsResponse,\n  CollectionResponse,\n} from \"@bitwarden/common/models/response/collection.response\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { DialogService } from \"@bitwarden/components\";\n\nimport { CollectionDialogResult, openCollectionDialog } from \"../shared\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\nimport { OrgUpgradeDialogComponent } from \"./org-upgrade-dialog/org-upgrade-dialog.component\";\n\n@Component({\n  selector: \"app-org-manage-collections\",\n  templateUrl: \"collections.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CollectionsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organization: Organization;\n  canCreate = false;\n  organizationId: string;\n  collections: CollectionView[];\n  assignedCollections: CollectionView[];\n  pagedCollections: CollectionView[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedCollectionsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private collectionService: CollectionService,\n    private modalService: ModalService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private dialogService: DialogService\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    this.canCreate = this.organization.canCreateNewCollections;\n\n    const decryptCollections = async (r: ListResponse<CollectionResponse>) => {\n      const collections = r.data\n        .filter((c) => c.organizationId === this.organizationId)\n        .map((d) => new Collection(new CollectionData(d as CollectionDetailsResponse)));\n      return await this.collectionService.decryptMany(collections);\n    };\n\n    if (this.organization.canViewAssignedCollections) {\n      const response = await this.apiService.getUserCollections();\n      this.assignedCollections = await decryptCollections(response);\n    }\n\n    if (this.organization.canViewAllCollections) {\n      const response = await this.apiService.getCollections(this.organizationId);\n      this.collections = await decryptCollections(response);\n    } else {\n      this.collections = this.assignedCollections;\n    }\n\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.collections || this.collections.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCollections.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedCollectionsCount > this.pageSize) {\n      pagedSize = this.pagedCollectionsCount;\n    }\n    if (this.collections.length > pagedLength) {\n      this.pagedCollections = this.pagedCollections.concat(\n        this.collections.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCollectionsCount = this.pagedCollections.length;\n    this.didScroll = this.pagedCollections.length > this.pageSize;\n  }\n\n  async edit(collection?: CollectionView) {\n    const canCreate = collection == undefined && this.canCreate;\n    const canEdit = collection != undefined && this.canEdit(collection);\n    const canDelete = collection != undefined && this.canDelete(collection);\n\n    if (!(canCreate || canEdit || canDelete)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n      return;\n    }\n\n    if (\n      !collection &&\n      this.organization.planProductType === ProductType.Free &&\n      this.collections.length === this.organization.maxCollections\n    ) {\n      // Show org upgrade modal\n      const dialogBodyText = this.organization.canManageBilling\n        ? this.i18nService.t(\n            \"freeOrgMaxCollectionReachedManageBilling\",\n            this.organization.maxCollections.toString()\n          )\n        : this.i18nService.t(\n            \"freeOrgMaxCollectionReachedNoManageBilling\",\n            this.organization.maxCollections.toString()\n          );\n\n      this.dialogService.open(OrgUpgradeDialogComponent, {\n        data: {\n          orgId: this.organization.id,\n          dialogBodyText: dialogBodyText,\n          orgCanManageBilling: this.organization.canManageBilling,\n        },\n      });\n      return;\n    }\n\n    const dialog = openCollectionDialog(this.dialogService, {\n      data: { collectionId: collection?.id, organizationId: this.organizationId },\n    });\n\n    const result = await lastValueFrom(dialog.closed);\n    if (result === CollectionDialogResult.Saved || result === CollectionDialogResult.Deleted) {\n      this.load();\n    }\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(collection: CollectionView) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      collection.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteCollection(this.organizationId, collection.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", collection.name)\n      );\n      this.removeCollection(collection);\n    } catch (e) {\n      this.logService.error(e);\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n    }\n  }\n\n  async users(collection: CollectionView) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"collection\";\n        comp.entityId = collection.id;\n        comp.entityName = collection.name;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onEditedUsers.subscribe(() => {\n          this.load();\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedCollections = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.collections && this.collections.length > this.pageSize;\n  }\n\n  canEdit(collection: CollectionView) {\n    if (this.organization.canEditAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canEditAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  canDelete(collection: CollectionView) {\n    if (this.organization.canDeleteAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canDeleteAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  private removeCollection(collection: CollectionView) {\n    const index = this.collections.indexOf(collection);\n    if (index > -1) {\n      this.collections.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","import { DIALOG_DATA, DialogConfig, DialogRef } from \"@angular/cdk/dialog\";\nimport { ChangeDetectorRef, Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { catchError, combineLatest, from, map, of, Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collection.response\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\nimport { DialogService } from \"@bitwarden/components\";\n\nimport { GroupService, GroupView } from \"../core\";\nimport {\n  AccessItemType,\n  AccessItemValue,\n  AccessItemView,\n  convertToPermission,\n  convertToSelectionView,\n  PermissionMode,\n} from \"../shared/components/access-selector\";\n\n/**\n * Indices for the available tabs in the dialog\n */\nexport enum GroupAddEditTabType {\n  Info = 0,\n  Members = 1,\n  Collections = 2,\n}\n\nexport interface GroupAddEditDialogParams {\n  /**\n   * ID of the organization the group belongs to\n   */\n  organizationId: string;\n\n  /**\n   * Optional ID of the group being modified\n   */\n  groupId?: string;\n\n  /**\n   * Tab to open when the dialog is open.\n   * Defaults to Group Info\n   */\n  initialTab?: GroupAddEditTabType;\n}\n\nexport enum GroupAddEditDialogResultType {\n  Saved = \"saved\",\n  Canceled = \"canceled\",\n  Deleted = \"deleted\",\n}\n\n/**\n * Strongly typed helper to open a groupAddEditDialog\n * @param dialogService Instance of the dialog service that will be used to open the dialog\n * @param config Configuration for the dialog\n */\nexport const openGroupAddEditDialog = (\n  dialogService: DialogService,\n  config: DialogConfig<GroupAddEditDialogParams>\n) => {\n  return dialogService.open<GroupAddEditDialogResultType, GroupAddEditDialogParams>(\n    GroupAddEditComponent,\n    config\n  );\n};\n\n@Component({\n  selector: \"app-group-add-edit\",\n  templateUrl: \"group-add-edit.component.html\",\n})\nexport class GroupAddEditComponent implements OnInit, OnDestroy {\n  protected PermissionMode = PermissionMode;\n  protected ResultType = GroupAddEditDialogResultType;\n\n  tabIndex: GroupAddEditTabType;\n  loading = true;\n  editMode = false;\n  title: string;\n  collections: AccessItemView[] = [];\n  members: AccessItemView[] = [];\n  group: GroupView;\n\n  groupForm = this.formBuilder.group({\n    accessAll: new FormControl(false),\n    name: new FormControl(\"\", [Validators.required, Validators.maxLength(100)]),\n    externalId: new FormControl(\"\", Validators.maxLength(300)),\n    members: new FormControl<AccessItemValue[]>([]),\n    collections: new FormControl<AccessItemValue[]>([]),\n  });\n\n  get groupId(): string | undefined {\n    return this.params.groupId;\n  }\n\n  get organizationId(): string {\n    return this.params.organizationId;\n  }\n\n  private destroy$ = new Subject<void>();\n\n  private get orgCollections$() {\n    return from(this.apiService.getCollections(this.organizationId)).pipe(\n      switchMap((response) => {\n        return from(\n          this.collectionService.decryptMany(\n            response.data.map(\n              (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n            )\n          )\n        );\n      }),\n      map((collections) =>\n        collections.map<AccessItemView>((c) => ({\n          id: c.id,\n          type: AccessItemType.Collection,\n          labelName: c.name,\n          listName: c.name,\n        }))\n      )\n    );\n  }\n\n  private get orgMembers$() {\n    return from(this.organizationUserService.getAllUsers(this.organizationId)).pipe(\n      map((response) =>\n        response.data.map((m) => ({\n          id: m.id,\n          type: AccessItemType.Member,\n          email: m.email,\n          role: m.type,\n          listName: m.name?.length > 0 ? `${m.name} (${m.email})` : m.email,\n          labelName: m.name || m.email,\n          status: m.status,\n        }))\n      )\n    );\n  }\n\n  private get groupDetails$() {\n    if (!this.editMode) {\n      return of(undefined);\n    }\n\n    return combineLatest([\n      this.groupService.get(this.organizationId, this.groupId),\n      this.apiService.getGroupUsers(this.organizationId, this.groupId),\n    ]).pipe(\n      map(([groupView, users]) => {\n        groupView.members = users;\n        return groupView;\n      }),\n      catchError((e: unknown) => {\n        if (e instanceof ErrorResponse) {\n          this.logService.error(e.message);\n        } else {\n          this.logService.error(e.toString());\n        }\n        return of(undefined);\n      })\n    );\n  }\n\n  constructor(\n    @Inject(DIALOG_DATA) private params: GroupAddEditDialogParams,\n    private dialogRef: DialogRef<GroupAddEditDialogResultType>,\n    private apiService: ApiService,\n    private organizationUserService: OrganizationUserService,\n    private groupService: GroupService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private formBuilder: FormBuilder,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {\n    this.tabIndex = params.initialTab ?? GroupAddEditTabType.Info;\n  }\n\n  ngOnInit() {\n    this.editMode = this.loading = this.groupId != null;\n    this.title = this.i18nService.t(this.editMode ? \"editGroup\" : \"addGroup\");\n\n    combineLatest([this.orgCollections$, this.orgMembers$, this.groupDetails$])\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(([collections, members, group]) => {\n        this.collections = collections;\n        this.members = members;\n        this.group = group;\n\n        if (this.group != undefined) {\n          // Must detect changes so that AccessSelector @Inputs() are aware of the latest\n          // collections/members set above, otherwise no selected values will be patched below\n          this.changeDetectorRef.detectChanges();\n\n          this.groupForm.patchValue({\n            name: this.group.name,\n            externalId: this.group.externalId,\n            accessAll: this.group.accessAll,\n            members: this.group.members.map((m) => ({\n              id: m,\n              type: AccessItemType.Member,\n            })),\n            collections: this.group.collections.map((gc) => ({\n              id: gc.id,\n              type: AccessItemType.Collection,\n              permission: convertToPermission(gc),\n            })),\n          });\n        }\n\n        this.loading = false;\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  submit = async () => {\n    if (this.groupForm.invalid) {\n      return;\n    }\n\n    const groupView = new GroupView();\n    groupView.id = this.groupId;\n    groupView.organizationId = this.organizationId;\n\n    const formValue = this.groupForm.value;\n    groupView.name = formValue.name;\n    groupView.externalId = formValue.externalId;\n    groupView.accessAll = formValue.accessAll;\n    groupView.members = formValue.members?.map((m) => m.id) ?? [];\n\n    if (!groupView.accessAll) {\n      groupView.collections = formValue.collections.map((c) => convertToSelectionView(c));\n    }\n\n    await this.groupService.save(groupView);\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(this.editMode ? \"editedGroupId\" : \"createdGroupId\", formValue.name)\n    );\n\n    this.dialogRef.close(GroupAddEditDialogResultType.Saved);\n  };\n\n  delete = async () => {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      this.group.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      \"app-group-add-edit .modal-content\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.groupService.delete(this.organizationId, this.groupId);\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"deletedGroupId\", this.group.name)\n    );\n    this.dialogRef.close(GroupAddEditDialogResultType.Deleted);\n  };\n}\n","<form [formGroup]=\"groupForm\" [bitSubmit]=\"submit\">\n  <bit-dialog [disablePadding]=\"!loading\">\n    <span bitDialogTitle>\n      {{ title }}\n      <span *ngIf=\"editMode\" class=\"tw-text-sm tw-normal-case tw-text-muted\">{{\n        group?.name\n      }}</span>\n    </span>\n    <div bitDialogContent>\n      <div *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n\n      <bit-tab-group *ngIf=\"!loading\" [selectedIndex]=\"tabIndex\">\n        <bit-tab label=\"{{ 'groupInfo' | i18n }}\">\n          <bit-form-field>\n            <bit-label>{{ \"name\" | i18n }}</bit-label>\n            <input bitInput type=\"text\" formControlName=\"name\" />\n          </bit-form-field>\n          <bit-form-field>\n            <bit-label>{{ \"externalId\" | i18n }}</bit-label>\n            <input bitInput type=\"text\" formControlName=\"externalId\" />\n            <bit-hint>{{ \"externalIdDesc\" | i18n }}</bit-hint>\n          </bit-form-field>\n        </bit-tab>\n\n        <bit-tab label=\"{{ 'members' | i18n }}\">\n          <p>{{ \"editGroupMembersDesc\" | i18n }}</p>\n          <bit-access-selector\n            formControlName=\"members\"\n            [items]=\"members\"\n            [showMemberRoles]=\"true\"\n            [permissionMode]=\"PermissionMode.Hidden\"\n            [columnHeader]=\"'member' | i18n\"\n            [selectorLabelText]=\"'selectMembers' | i18n\"\n            [emptySelectionText]=\"'noMembersAdded' | i18n\"\n          ></bit-access-selector>\n        </bit-tab>\n\n        <bit-tab label=\"{{ 'collections' | i18n }}\">\n          <p>{{ \"editGroupCollectionsDesc\" | i18n }}</p>\n          <div class=\"tw-my-3\">\n            <input type=\"checkbox\" formControlName=\"accessAll\" id=\"accessAll\" />\n            <label class=\"tw-mb-0 tw-text-lg\" for=\"accessAll\">{{\n              \"accessAllCollectionsDesc\" | i18n\n            }}</label>\n            <p class=\"tw-my-0 tw-text-muted\">{{ \"accessAllCollectionsHelp\" | i18n }}</p>\n          </div>\n          <ng-container *ngIf=\"!groupForm.value.accessAll\">\n            <bit-access-selector\n              formControlName=\"collections\"\n              [items]=\"collections\"\n              [permissionMode]=\"PermissionMode.Edit\"\n              [columnHeader]=\"'collection' | i18n\"\n              [selectorLabelText]=\"'selectCollections' | i18n\"\n              [emptySelectionText]=\"'noCollectionsAdded' | i18n\"\n            ></bit-access-selector>\n          </ng-container>\n        </bit-tab>\n      </bit-tab-group>\n    </div>\n    <div bitDialogFooter class=\"tw-flex tw-flex-row tw-gap-2\">\n      <button bitButton buttonType=\"primary\" bitFormButton type=\"submit\">\n        {{ \"save\" | i18n }}\n      </button>\n      <button\n        bitButton\n        buttonType=\"secondary\"\n        type=\"button\"\n        bitDialogClose\n        [bit-dialog-close]=\"ResultType.Canceled\"\n      >\n        {{ \"cancel\" | i18n }}\n      </button>\n      <button\n        class=\"tw-ml-auto\"\n        type=\"button\"\n        buttonType=\"danger\"\n        bitIconButton=\"bwi-trash\"\n        bitFormButton\n        [bitAction]=\"delete\"\n        [appA11yTitle]=\"'delete' | i18n\"\n      ></button>\n    </div>\n  </bit-dialog>\n</form>\n","<div class=\"container page-content\">\n  <div class=\"tw-mb-4 tw-flex\">\n    <h1>{{ \"groups\" | i18n }}</h1>\n    <div class=\"tw-ml-auto tw-flex tw-items-center\">\n      <div class=\"tw-mr-2\">\n        <label class=\"sr-only\">{{ \"search\" | i18n }}</label>\n        <div class=\"tw-flex tw-items-center\">\n          <i class=\"bwi bwi-search bwi-fw tw-z-20 -tw-mr-7 tw-text-muted\" aria-hidden=\"true\"></i>\n          <input\n            bitInput\n            type=\"search\"\n            placeholder=\"{{ 'search' | i18n }}\"\n            class=\"tw-rounded-l tw-pl-9\"\n            [(ngModel)]=\"searchText\"\n          />\n        </div>\n      </div>\n      <button bitButton type=\"button\" buttonType=\"primary\" (click)=\"add()\">\n        <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n        {{ \"newGroup\" | i18n }}\n      </button>\n    </div>\n  </div>\n  <ng-container *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n  <ng-container *ngIf=\"!loading && visibleGroups\">\n    <p *ngIf=\"!visibleGroups.length\">{{ \"noGroupsInList\" | i18n }}</p>\n    <bit-table\n      *ngIf=\"visibleGroups.length\"\n      infinite-scroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <ng-container header>\n        <tr>\n          <th bitCell class=\"tw-w-20\">\n            <input\n              type=\"checkbox\"\n              class=\"tw-mr-2\"\n              (change)=\"toggleAllVisible($event)\"\n              id=\"selectAll\"\n            />\n            <label class=\"tw-mb-0 !tw-font-bold !tw-text-muted\" for=\"selectAll\">{{\n              \"all\" | i18n\n            }}</label>\n          </th>\n          <th bitCell>{{ \"name\" | i18n }}</th>\n          <th bitCell>{{ \"collections\" | i18n }}</th>\n          <th bitCell class=\"tw-w-10\">\n            <button\n              [bitMenuTriggerFor]=\"headerMenu\"\n              type=\"button\"\n              bitIconButton=\"bwi-ellipsis-v\"\n              size=\"small\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            ></button>\n\n            <bit-menu #headerMenu>\n              <button type=\"button\" bitMenuItem (click)=\"deleteAllSelected()\">\n                <span class=\"tw-text-danger\"\n                  ><i aria-hidden=\"true\" class=\"bwi bwi-trash\"></i> {{ \"delete\" | i18n }}</span\n                >\n              </button>\n            </bit-menu>\n          </th>\n        </tr>\n      </ng-container>\n      <ng-container body>\n        <tr bitRow *ngFor=\"let g of visibleGroups\">\n          <td bitCell (click)=\"check(g)\" class=\"tw-cursor-pointer\">\n            <input type=\"checkbox\" [(ngModel)]=\"g.checked\" />\n          </td>\n          <td bitCell class=\"tw-cursor-pointer tw-font-bold\" (click)=\"edit(g)\">\n            <button bitLink>\n              {{ g.details.name }}\n            </button>\n          </td>\n          <td bitCell (click)=\"edit(g, ModalTabType.Collections)\" class=\"tw-cursor-pointer\">\n            <bit-badge-list\n              *ngIf=\"!g.details.accessAll\"\n              [items]=\"g.collectionNames\"\n              [maxItems]=\"3\"\n              badgeType=\"secondary\"\n            ></bit-badge-list>\n            <span *ngIf=\"g.details.accessAll\">{{ \"all\" | i18n }}</span>\n          </td>\n          <td bitCell>\n            <button\n              [bitMenuTriggerFor]=\"rowMenu\"\n              type=\"button\"\n              bitIconButton=\"bwi-ellipsis-v\"\n              size=\"small\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            ></button>\n\n            <bit-menu #rowMenu>\n              <button type=\"button\" bitMenuItem (click)=\"edit(g)\">\n                <i aria-hidden=\"true\" class=\"bwi bwi-pencil-square\"></i> {{ \"editInfo\" | i18n }}\n              </button>\n              <button type=\"button\" bitMenuItem (click)=\"edit(g, ModalTabType.Members)\">\n                <i aria-hidden=\"true\" class=\"bwi bwi-user\"></i> {{ \"members\" | i18n }}\n              </button>\n              <button type=\"button\" bitMenuItem (click)=\"edit(g, ModalTabType.Collections)\">\n                <i aria-hidden=\"true\" class=\"bwi bwi-collection\"></i> {{ \"collections\" | i18n }}\n              </button>\n              <button type=\"button\" bitMenuItem (click)=\"delete(g)\">\n                <span class=\"tw-text-danger\"\n                  ><i aria-hidden=\"true\" class=\"bwi bwi-trash\"></i> {{ \"delete\" | i18n }}</span\n                >\n              </button>\n            </bit-menu>\n          </td>\n        </tr>\n      </ng-container>\n    </bit-table>\n  </ng-container>\n  <ng-template #addEdit></ng-template>\n</div>\n","import { Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport {\n  BehaviorSubject,\n  combineLatest,\n  concatMap,\n  from,\n  lastValueFrom,\n  map,\n  Subject,\n  switchMap,\n  takeUntil,\n  tap,\n} from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport {\n  CollectionDetailsResponse,\n  CollectionResponse,\n} from \"@bitwarden/common/models/response/collection.response\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { DialogService } from \"@bitwarden/components\";\n\nimport { GroupService, GroupView } from \"../core\";\n\nimport {\n  GroupAddEditDialogResultType,\n  GroupAddEditTabType,\n  openGroupAddEditDialog,\n} from \"./group-add-edit.component\";\n\ntype CollectionViewMap = {\n  [id: string]: CollectionView;\n};\n\ntype GroupDetailsRow = {\n  /**\n   * Group Id (used for searching)\n   */\n  id: string;\n\n  /**\n   * Group name (used for searching)\n   */\n  name: string;\n\n  /**\n   * Details used for displaying group information\n   */\n  details: GroupView;\n\n  /**\n   * True if the group is selected in the table\n   */\n  checked?: boolean;\n\n  /**\n   * A list of collection names the group has access to\n   */\n  collectionNames?: string[];\n};\n\n@Component({\n  selector: \"app-org-groups\",\n  templateUrl: \"groups.component.html\",\n})\nexport class GroupsComponent implements OnInit, OnDestroy {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  groups: GroupDetailsRow[];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n  protected ModalTabType = GroupAddEditTabType;\n\n  private pagedGroupsCount = 0;\n  private pagedGroups: GroupDetailsRow[];\n  private searchedGroups: GroupDetailsRow[];\n  private _searchText: string;\n  private destroy$ = new Subject<void>();\n  private refreshGroups$ = new BehaviorSubject<void>(null);\n\n  get searchText() {\n    return this._searchText;\n  }\n  set searchText(value: string) {\n    this._searchText = value;\n    // Manually update as we are not using the search pipe in the template\n    this.updateSearchedGroups();\n  }\n\n  /**\n   * The list of groups that should be visible in the table.\n   * This is needed as there are two modes (paging/searching) and\n   * we need a reference to the currently visible groups for\n   * the Select All checkbox\n   */\n  get visibleGroups(): GroupDetailsRow[] {\n    if (this.isPaging()) {\n      return this.pagedGroups;\n    }\n    if (this.isSearching()) {\n      return this.searchedGroups;\n    }\n    return this.groups;\n  }\n\n  constructor(\n    private apiService: ApiService,\n    private groupService: GroupService,\n    private route: ActivatedRoute,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private dialogService: DialogService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private logService: LogService,\n    private collectionService: CollectionService,\n    private searchPipe: SearchPipe\n  ) {}\n\n  async ngOnInit() {\n    this.route.params\n      .pipe(\n        tap((params) => (this.organizationId = params.organizationId)),\n        switchMap(() =>\n          combineLatest([\n            // collectionMap\n            from(this.apiService.getCollections(this.organizationId)).pipe(\n              concatMap((response) => this.toCollectionMap(response))\n            ),\n            // groups\n            this.refreshGroups$.pipe(\n              switchMap(() => this.groupService.getAll(this.organizationId))\n            ),\n          ])\n        ),\n        map(([collectionMap, groups]) => {\n          return groups\n            .sort(Utils.getSortFunction(this.i18nService, \"name\"))\n            .map<GroupDetailsRow>((g) => ({\n              id: g.id,\n              name: g.name,\n              details: g,\n              checked: false,\n              collectionNames: g.collections\n                .map((c) => collectionMap[c.id]?.name)\n                .sort(this.i18nService.collator?.compare),\n            }));\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((groups) => {\n        this.groups = groups;\n        this.resetPaging();\n        this.updateSearchedGroups();\n        this.loading = false;\n      });\n\n    this.route.queryParams\n      .pipe(\n        first(),\n        concatMap(async (qParams) => {\n          this.searchText = qParams.search;\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  loadMore() {\n    if (!this.groups || this.groups.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedGroups.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedGroupsCount > this.pageSize) {\n      pagedSize = this.pagedGroupsCount;\n    }\n    if (this.groups.length > pagedLength) {\n      this.pagedGroups = this.pagedGroups.concat(\n        this.groups.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedGroupsCount = this.pagedGroups.length;\n    this.didScroll = this.pagedGroups.length > this.pageSize;\n  }\n\n  async edit(\n    group: GroupDetailsRow,\n    startingTabIndex: GroupAddEditTabType = GroupAddEditTabType.Info\n  ) {\n    const dialogRef = openGroupAddEditDialog(this.dialogService, {\n      data: {\n        initialTab: startingTabIndex,\n        organizationId: this.organizationId,\n        groupId: group != null ? group.details.id : null,\n      },\n    });\n\n    const result = await lastValueFrom(dialogRef.closed);\n\n    if (result == GroupAddEditDialogResultType.Saved) {\n      this.refreshGroups$.next();\n    } else if (result == GroupAddEditDialogResultType.Deleted) {\n      this.removeGroup(group.details.id);\n    }\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(groupRow: GroupDetailsRow) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      groupRow.details.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.groupService.delete(this.organizationId, groupRow.details.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", groupRow.details.name)\n      );\n      this.removeGroup(groupRow.details.id);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async deleteAllSelected() {\n    const groupsToDelete = this.groups.filter((g) => g.checked);\n\n    if (groupsToDelete.length == 0) {\n      return;\n    }\n\n    const deleteMessage = groupsToDelete.map((g) => g.details.name).join(\", \");\n    const confirmed = await this.platformUtilsService.showDialog(\n      deleteMessage,\n      this.i18nService.t(\"deleteMultipleGroupsConfirmation\", groupsToDelete.length.toString()),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      const result = await this.groupService.deleteMany(\n        this.organizationId,\n        groupsToDelete.map((g) => g.details.id)\n      );\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedManyGroups\", result.length.toString())\n      );\n\n      groupsToDelete.forEach((g) => this.removeGroup(g.details.id));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  resetPaging() {\n    this.pagedGroups = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  check(groupRow: GroupDetailsRow) {\n    groupRow.checked = !groupRow.checked;\n  }\n\n  toggleAllVisible(event: Event) {\n    this.visibleGroups.forEach((g) => (g.checked = (event.target as HTMLInputElement).checked));\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.groups && this.groups.length > this.pageSize;\n  }\n\n  private removeGroup(id: string) {\n    const index = this.groups.findIndex((g) => g.details.id === id);\n    if (index > -1) {\n      this.groups.splice(index, 1);\n      this.resetPaging();\n      this.updateSearchedGroups();\n    }\n  }\n\n  private async toCollectionMap(response: ListResponse<CollectionResponse>) {\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    const decryptedCollections = await this.collectionService.decryptMany(collections);\n\n    // Convert to an object using collection Ids as keys for faster name lookups\n    const collectionMap: CollectionViewMap = {};\n    decryptedCollections.forEach((c) => (collectionMap[c.id] = c));\n\n    return collectionMap;\n  }\n\n  private updateSearchedGroups() {\n    if (this.searchService.isSearchable(this.searchText)) {\n      // Making use of the pipe in the component as we need know which groups where filtered\n      this.searchedGroups = this.searchPipe.transform(\n        this.groups,\n        this.searchText,\n        (group) => group.details.name,\n        (group) => group.details.id\n      );\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"organization\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"members\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageUsers\"\n          >\n            {{ \"members\" | i18n }}\n          </a>\n          <a\n            routerLink=\"collections\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canViewAllCollections || organization.canViewAssignedCollections\"\n          >\n            {{ \"collections\" | i18n }}\n          </a>\n          <a\n            routerLink=\"groups\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageGroups\"\n          >\n            {{ \"groups\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-manage\",\n  templateUrl: \"manage.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ManageComponent implements OnInit {\n  organization: Organization;\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n    });\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { GetCollectionNameFromIdPipe } from \"./get-collection-name.pipe\";\nimport { GetGroupNameFromIdPipe } from \"./get-group-name.pipe\";\nimport { GetOrgNameFromIdPipe } from \"./get-organization-name.pipe\";\n\n@NgModule({\n  declarations: [GetOrgNameFromIdPipe, GetCollectionNameFromIdPipe, GetGroupNameFromIdPipe],\n  exports: [GetOrgNameFromIdPipe, GetCollectionNameFromIdPipe, GetGroupNameFromIdPipe],\n})\nexport class PipesModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\nimport { PipesModule } from \"../../../vault/pipes/pipes.module\";\n\nimport { CollectionNameBadgeComponent } from \"./collection-name.badge.component\";\n\n@NgModule({\n  imports: [SharedModule, PipesModule],\n  declarations: [CollectionNameBadgeComponent],\n  exports: [CollectionNameBadgeComponent],\n})\nexport class CollectionBadgeModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\nimport { PipesModule } from \"../../../vault/pipes/pipes.module\";\n\nimport { GroupNameBadgeComponent } from \"./group-name-badge.component\";\n\n@NgModule({\n  imports: [SharedModule, PipesModule],\n  declarations: [GroupNameBadgeComponent],\n  exports: [GroupNameBadgeComponent],\n})\nexport class GroupBadgeModule {}\n","import { Injectable, OnDestroy } from \"@angular/core\";\nimport { filter, map, Observable, ReplaySubject, Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport {\n  canAccessVaultTab,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\n\nimport { VaultFilterService as BaseVaultFilterService } from \"../../../vault/vault-filter/services/vault-filter.service\";\nimport { CollectionFilter } from \"../../../vault/vault-filter/shared/models/vault-filter.type\";\nimport { CollectionAdminView } from \"../../core\";\nimport { CollectionAdminService } from \"../../core/services/collection-admin.service\";\n\n@Injectable()\nexport class VaultFilterService extends BaseVaultFilterService implements OnDestroy {\n  private destroy$ = new Subject<void>();\n  private _collections = new ReplaySubject<CollectionAdminView[]>(1);\n\n  filteredCollections$: Observable<CollectionAdminView[]> = this._collections.asObservable();\n\n  collectionTree$: Observable<TreeNode<CollectionFilter>> = this.filteredCollections$.pipe(\n    map((collections) => this.buildCollectionTree(collections))\n  );\n\n  constructor(\n    stateService: StateService,\n    organizationService: OrganizationService,\n    folderService: FolderService,\n    cipherService: CipherService,\n    collectionService: CollectionService,\n    policyService: PolicyService,\n    i18nService: I18nService,\n    protected collectionAdminService: CollectionAdminService\n  ) {\n    super(\n      stateService,\n      organizationService,\n      folderService,\n      cipherService,\n      collectionService,\n      policyService,\n      i18nService\n    );\n    this.loadSubscriptions();\n  }\n\n  protected loadSubscriptions() {\n    this._organizationFilter\n      .pipe(\n        filter((org) => org != null),\n        switchMap((org) => {\n          return this.loadCollections(org);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((collections) => {\n        this._collections.next(collections);\n      });\n  }\n\n  async reloadCollections() {\n    this._collections.next(await this.loadCollections(this._organizationFilter.getValue()));\n  }\n\n  protected async loadCollections(org: Organization): Promise<CollectionAdminView[]> {\n    let collections: CollectionAdminView[] = [];\n    if (canAccessVaultTab(org)) {\n      collections = await this.collectionAdminService.getAll(org.id);\n\n      const noneCollection = new CollectionAdminView();\n      noneCollection.name = this.i18nService.t(\"unassigned\");\n      noneCollection.organizationId = org.id;\n      collections.push(noneCollection);\n    }\n    return collections;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { VaultFilterService as VaultFilterServiceAbstraction } from \"../../../vault/vault-filter/services/abstractions/vault-filter.service\";\nimport { VaultFilterSharedModule } from \"../../../vault/vault-filter/shared/vault-filter-shared.module\";\n\nimport { VaultFilterComponent } from \"./vault-filter.component\";\nimport { VaultFilterService } from \"./vault-filter.service\";\n\n@NgModule({\n  imports: [VaultFilterSharedModule],\n  declarations: [VaultFilterComponent],\n  exports: [VaultFilterComponent],\n  providers: [\n    {\n      provide: VaultFilterServiceAbstraction,\n      useClass: VaultFilterService,\n    },\n  ],\n})\nexport class VaultFilterModule {}\n","import { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport {\n  CipherStatus,\n  CipherTypeFilter,\n  CollectionFilter,\n  FolderFilter,\n  OrganizationFilter,\n} from \"./vault-filter.type\";\n\nexport type VaultFilterFunction = (cipher: CipherView) => boolean;\n\n// TODO: Replace shared VaultFilter Model with this one and\n// refactor browser and desktop code to use this model.\nexport class VaultFilter {\n  selectedOrganizationNode: TreeNode<OrganizationFilter>;\n  selectedCipherTypeNode: TreeNode<CipherTypeFilter>;\n  selectedFolderNode: TreeNode<FolderFilter>;\n  selectedCollectionNode: TreeNode<CollectionFilter>;\n\n  get isFavorites(): boolean {\n    return this.selectedCipherTypeNode?.node.type === \"favorites\";\n  }\n\n  get isDeleted(): boolean {\n    return this.selectedCipherTypeNode?.node.type === \"trash\" ? true : null;\n  }\n\n  get organizationId(): string {\n    return this.selectedOrganizationNode?.node.id;\n  }\n\n  get cipherType(): CipherType {\n    return this.selectedCipherTypeNode?.node.type in CipherType\n      ? (this.selectedCipherTypeNode?.node.type as CipherType)\n      : null;\n  }\n\n  get cipherStatus(): CipherStatus {\n    return this.selectedCipherTypeNode?.node.type;\n  }\n\n  get cipherTypeId(): string {\n    return this.selectedCipherTypeNode?.node.id;\n  }\n\n  get folderId(): string {\n    return this.selectedFolderNode?.node.id;\n  }\n\n  get collectionId(): string {\n    return this.selectedCollectionNode?.node.id;\n  }\n\n  constructor(init?: Partial<VaultFilter>) {\n    Object.assign(this, init);\n  }\n\n  resetFilter() {\n    this.selectedCipherTypeNode = null;\n    this.selectedFolderNode = null;\n    this.selectedCollectionNode = null;\n  }\n\n  resetOrganization() {\n    this.selectedOrganizationNode = null;\n  }\n\n  buildFilter(): VaultFilterFunction {\n    return (cipher) => {\n      let cipherPassesFilter = true;\n      if (this.isFavorites && cipherPassesFilter) {\n        cipherPassesFilter = cipher.favorite;\n      }\n      if (this.isDeleted && cipherPassesFilter) {\n        cipherPassesFilter = cipher.isDeleted;\n      }\n      if (this.cipherType && cipherPassesFilter) {\n        cipherPassesFilter = cipher.type === this.cipherType;\n      }\n      if (this.selectedFolderNode) {\n        // No folder\n        if (this.folderId === null && cipherPassesFilter) {\n          cipherPassesFilter = cipher.folderId === null;\n        }\n        // Folder\n        if (this.folderId !== null && cipherPassesFilter) {\n          cipherPassesFilter = cipher.folderId === this.folderId;\n        }\n      }\n      if (this.selectedCollectionNode) {\n        // All Collections\n        if (this.collectionId === \"AllCollections\" && cipherPassesFilter) {\n          cipherPassesFilter = false;\n        }\n        // Unassigned\n        if (this.collectionId === null && cipherPassesFilter) {\n          cipherPassesFilter =\n            cipher.organizationId != null &&\n            (cipher.collectionIds == null || cipher.collectionIds.length === 0);\n        }\n        // Collection\n        if (\n          this.collectionId !== null &&\n          this.collectionId !== \"AllCollections\" &&\n          cipherPassesFilter\n        ) {\n          cipherPassesFilter =\n            cipher.collectionIds != null && cipher.collectionIds.includes(this.collectionId);\n        }\n      }\n      if (this.selectedOrganizationNode) {\n        // My Vault\n        if (this.organizationId === \"MyVault\" && cipherPassesFilter) {\n          cipherPassesFilter = cipher.organizationId === null;\n        }\n        // Organization\n        else if (this.organizationId !== null && cipherPassesFilter) {\n          cipherPassesFilter = cipher.organizationId === this.organizationId;\n        }\n      }\n      return cipherPassesFilter;\n    };\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/enc-array-buffer\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachment.view\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Output() onUploadedAttachment = new EventEmitter();\n  @Output() onDeletedAttachment = new EventEmitter();\n  @Output() onReuploadedAttachment = new EventEmitter();\n\n  cipher: CipherView;\n  cipherDomain: Cipher;\n  hasUpdatedKey: boolean;\n  canAccessAttachments: boolean;\n  formPromise: Promise<any>;\n  deletePromises: { [id: string]: Promise<any> } = {};\n  reuploadPromises: { [id: string]: Promise<any> } = {};\n  emergencyAccessId?: string = null;\n  protected componentName = \"\";\n\n  constructor(\n    protected cipherService: CipherService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected win: Window,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit() {\n    if (!this.hasUpdatedKey) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"updateKey\")\n      );\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    if (files[0].size > 524288000) {\n      // 500 MB\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"maxFileSize\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.saveCipherAttachment(files[0]);\n      this.cipherDomain = await this.formPromise;\n      this.cipher = await this.cipherDomain.decrypt();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"attachmentSaved\"));\n      this.onUploadedAttachment.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    // reset file input\n    // ref: https://stackoverflow.com/a/20552042\n    fileEl.type = \"\";\n    fileEl.type = \"file\";\n    fileEl.value = \"\";\n  }\n\n  async delete(attachment: AttachmentView) {\n    if (this.deletePromises[attachment.id] != null) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteAttachmentConfirmation\"),\n      this.i18nService.t(\"deleteAttachment\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      this.componentName != \"\" ? this.componentName + \" .modal-content\" : null\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n      await this.deletePromises[attachment.id];\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedAttachment\"));\n      const i = this.cipher.attachments.indexOf(attachment);\n      if (i > -1) {\n        this.cipher.attachments.splice(i, 1);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.deletePromises[attachment.id] = null;\n    this.onDeletedAttachment.emit();\n  }\n\n  async download(attachment: AttachmentView) {\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (!this.canAccessAttachments) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id,\n        this.emergencyAccessId\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n      this.fileDownloadService.download({\n        fileName: attachment.fileName,\n        blobData: decBuf,\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected async init() {\n    this.cipherDomain = await this.loadCipher();\n    this.cipher = await this.cipherDomain.decrypt();\n\n    this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n    if (!this.canAccessAttachments) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"premiumRequiredDesc\"),\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\")\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n      }\n    } else if (!this.hasUpdatedKey) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateKey\"),\n        this.i18nService.t(\"featureUnavailable\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\n          \"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        );\n      }\n    }\n  }\n\n  protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n    const a = attachment as any;\n    if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n      return;\n    }\n\n    try {\n      this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n        // 1. Download\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: \"no-store\" }));\n        if (response.status !== 200) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n          a.downloading = false;\n          return;\n        }\n\n        try {\n          // 2. Resave\n          const encBuf = await EncArrayBuffer.fromResponse(response);\n          const key =\n            attachment.key != null\n              ? attachment.key\n              : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n          const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n          this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n            this.cipherDomain,\n            attachment.fileName,\n            decBuf,\n            admin\n          );\n          this.cipher = await this.cipherDomain.decrypt();\n\n          // 3. Delete old\n          this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n          await this.deletePromises[attachment.id];\n          const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n          if (foundAttachment.length > 0) {\n            const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n            if (i > -1) {\n              this.cipher.attachments.splice(i, 1);\n            }\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"attachmentSaved\")\n          );\n          this.onReuploadedAttachment.emit();\n        } catch (e) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n        }\n\n        a.downloading = false;\n      });\n      await this.reuploadPromises[attachment.id];\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    // TODO: This should be removed but is needed since we re-use the same template\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"attachmentsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"attachmentsTitle\">\n          {{ \"attachments\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <table class=\"table table-hover table-list\" *ngIf=\"cipher && cipher.hasAttachments\">\n          <tbody>\n            <tr *ngFor=\"let a of cipher.attachments\">\n              <td class=\"table-list-icon\">\n                <i\n                  class=\"bwi bwi-fw bwi-lg bwi-file\"\n                  *ngIf=\"!$any(a).downloading\"\n                  aria-hidden=\"true\"\n                ></i>\n                <i\n                  class=\"bwi bwi-spinner bwi-lg bwi-fw bwi-spin\"\n                  *ngIf=\"$any(a).downloading\"\n                  aria-hidden=\"true\"\n                ></i>\n              </td>\n              <td class=\"wrap\">\n                <div class=\"d-flex\">\n                  <a href=\"#\" appStopClick (click)=\"download(a)\">{{ a.fileName }}</a>\n                  <div *ngIf=\"showFixOldAttachments(a)\" class=\"ml-2\">\n                    <a\n                      href=\"https://bitwarden.com/help/attachments/#fixing-old-attachments\"\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                    >\n                      <i\n                        class=\"bwi bwi-exclamation-triangle text-warning\"\n                        title=\"{{ 'attachmentFixDesc' | i18n }}\"\n                        aria-hidden=\"true\"\n                      ></i>\n                      <span class=\"sr-only\">{{ \"attachmentFixDesc\" | i18n }}</span></a\n                    >\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-primary btn-sm m-0 py-0 px-2\"\n                      (click)=\"reupload(a)\"\n                      #reuploadBtn\n                      [appApiAction]=\"reuploadPromises[a.id]\"\n                      [disabled]=\"$any(reuploadBtn).loading\"\n                    >\n                      {{ \"fix\" | i18n }}\n                    </button>\n                  </div>\n                </div>\n                <small>{{ a.sizeName }}</small>\n              </td>\n              <td class=\"table-list-options\" *ngIf=\"!viewOnly\">\n                <button\n                  class=\"btn btn-outline-danger\"\n                  type=\"button\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'delete' | i18n }}\"\n                  (click)=\"delete(a)\"\n                  #deleteBtn\n                  [appApiAction]=\"deletePromises[a.id]\"\n                  [disabled]=\"$any(deleteBtn).loading\"\n                >\n                  <i\n                    class=\"bwi bwi-trash bwi-lg bwi-fw\"\n                    [hidden]=\"$any(deleteBtn).loading\"\n                    aria-hidden=\"true\"\n                  ></i>\n                  <i\n                    class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                    [hidden]=\"!$any(deleteBtn).loading\"\n                    title=\"{{ 'loading' | i18n }}\"\n                    aria-hidden=\"true\"\n                  ></i>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div *ngIf=\"!viewOnly\">\n          <h3>{{ \"newAttachment\" | i18n }}</h3>\n          <label for=\"file\" class=\"sr-only\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n          <small class=\"form-text text-muted\">{{ \"maxFileSize\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachment.view\";\n\n@Component({\n  selector: \"app-vault-attachments\",\n  templateUrl: \"attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n  protected override componentName = \"app-vault-attachments\";\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.showFixOldAttachments(attachment)) {\n      await this.reuploadCipherAttachment(attachment, false);\n    }\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.cipher.organizationId == null;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipher.data\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachment.view\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"../../vault/attachments.component\";\n\n@Component({\n  selector: \"app-org-vault-attachments\",\n  templateUrl: \"../../vault/attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n  organization: Organization;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      stateService,\n      platformUtilsService,\n      apiService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.organization.canEditAnyCollection && this.showFixOldAttachments(attachment)) {\n      await super.reuploadCipherAttachment(attachment, true);\n    }\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(\n      this.cipherDomain,\n      file,\n      this.organization.canEditAnyCollection\n    );\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipherAttachment(attachmentId);\n    }\n    return this.apiService.deleteCipherAttachmentAdmin(this.cipherId, attachmentId);\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.organization.canEditAnyCollection;\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() allowSelectNone = false;\n  @Output() onSavedCollections = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collectionIds: string[];\n  collections: CollectionView[] = [];\n\n  protected cipherDomain: Cipher;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.cipherDomain = await this.loadCipher();\n    this.collectionIds = this.loadCipherCollections();\n    this.cipher = await this.cipherDomain.decrypt();\n    this.collections = await this.loadCollections();\n\n    this.collections.forEach((c) => ((c as any).checked = false));\n    if (this.collectionIds != null) {\n      this.collections.forEach((c) => {\n        (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n      });\n    }\n  }\n\n  async submit() {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n    this.cipherDomain.collectionIds = selectedCollectionIds;\n    try {\n      this.formPromise = this.saveCollections();\n      await this.formPromise;\n      this.onSavedCollections.emit();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"editedItem\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected loadCipherCollections() {\n    return this.cipherDomain.collectionIds;\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter(\n      (c) => !c.readOnly && c.organizationId === this.cipher.organizationId\n    );\n  }\n\n  protected saveCollections() {\n    return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"collectionsTitle\">\n          {{ \"collections\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"collectionsDesc\" | i18n }}</p>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"$any(c).checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"@bitwarden/angular/components/collections.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Component({\n  selector: \"app-vault-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipher.data\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherCollectionsRequest } from \"@bitwarden/common/models/request/cipher-collections.request\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"../../vault/collections.component\";\n\n@Component({\n  selector: \"app-org-vault-collections\",\n  templateUrl: \"../../vault/collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n  organization: Organization;\n\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    private apiService: ApiService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n    this.allowSelectNone = true;\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canViewAllCollections) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected loadCipherCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCipherCollections();\n    }\n    return this.collectionIds;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected saveCollections() {\n    if (this.organization.canEditAnyCollection) {\n      const request = new CipherCollectionsRequest(this.cipherDomain.collectionIds);\n      return this.apiService.putCipherCollectionsAdmin(this.cipherId, request);\n    } else {\n      return super.saveCollections();\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalConfig } from \"@bitwarden/angular/services/modal.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-enroll-master-password-reset\",\n  templateUrl: \"enroll-master-password-reset.component.html\",\n})\nexport class EnrollMasterPasswordReset {\n  organization: Organization;\n\n  verification: Verification;\n  formPromise: Promise<void>;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private modalRef: ModalRef,\n    config: ModalConfig,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService\n  ) {\n    this.organization = config.data.organization;\n  }\n\n  async submit() {\n    let toastStringRef = \"withdrawPasswordResetSuccess\";\n\n    this.formPromise = this.userVerificationService\n      .buildRequest(this.verification, OrganizationUserResetPasswordEnrollmentRequest)\n      .then(async (request) => {\n        // Set variables\n        let keyString: string = null;\n\n        // Retrieve Public Key\n        const orgKeys = await this.organizationApiService.getKeys(this.organization.id);\n        if (orgKeys == null) {\n          throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n        }\n\n        const publicKey = Utils.fromB64ToArray(orgKeys.publicKey);\n\n        // RSA Encrypt user's encKey.key with organization public key\n        const encKey = await this.cryptoService.getEncKey();\n        const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n        keyString = encryptedKey.encryptedString;\n        toastStringRef = \"enrollPasswordResetSuccess\";\n\n        // Create request and execute enrollment\n        request.resetPasswordKey = keyString;\n        await this.organizationUserService.putOrganizationUserResetPasswordEnrollment(\n          this.organization.id,\n          this.organization.userId,\n          request\n        );\n\n        await this.syncService.fullSync(true);\n      });\n    try {\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(toastStringRef));\n      this.modalRef.close();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div\n  class=\"modal fade\"\n  role=\"dialog\"\n  aria-modal=\"true\"\n  aria-labelledby=\"enrollMasterPasswordResetTitle\"\n>\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"enrollMasterPasswordResetTitle\">\n          {{ \"enrollPasswordReset\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">\n          {{ \"resetPasswordEnrollmentWarning\" | i18n }}\n        </app-callout>\n        <app-user-verification [(ngModel)]=\"verification\" name=\"secret\"> </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n          {{ \"submit\" | i18n }}\n        </button>\n        <button\n          bitButton\n          buttonType=\"secondary\"\n          type=\"button\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span>\n            {{ \"cancel\" | i18n }}\n          </span>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<ng-container *ngIf=\"filters && filters.length\">\n  <div *ngIf=\"headerInfo.showHeader\" class=\"filter-heading\">\n    <button\n      class=\"toggle-button\"\n      (click)=\"toggleCollapse(headerNode.node)\"\n      [attr.aria-expanded]=\"!isCollapsed(headerNode.node)\"\n      appA11yTitle=\"{{ 'toggleCollapse' | i18n }}: {{ headerNode.node.name | i18n }}\"\n      aria-controls=\"sub-filters\"\n    >\n      <i\n        class=\"bwi bwi-fw\"\n        aria-hidden=\"true\"\n        [ngClass]=\"isCollapsed(headerNode.node) ? 'bwi-angle-right' : 'bwi-angle-down'\"\n      ></i>\n    </button>\n    <button\n      *ngIf=\"headerInfo.isSelectable\"\n      appA11yTitle=\"{{ isOrganizationFilter ? 'vault' : ('filter' | i18n) }}: {{\n        headerNode.node.name | i18n\n      }}\"\n      class=\"filter-button\"\n      (click)=\"onFilterSelect(headerNode)\"\n    >\n      <h3\n        [ngClass]=\"{\n          active: isAllVaultsSelected || isNodeSelected(headerNode)\n        }\"\n      >\n        &nbsp;{{ headerNode.node.name | i18n }}\n      </h3>\n    </button>\n    <h3 *ngIf=\"!headerInfo.isSelectable\" class=\"filter-title\">\n      &nbsp;{{ headerNode.node.name | i18n }}\n    </h3>\n\n    <button\n      *ngIf=\"showAddButton\"\n      (click)=\"onAdd()\"\n      class=\"text-muted ml-auto add-button\"\n      appA11yTitle=\"{{ addInfo.text | i18n }}\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n  <ul\n    id=\"{{ headerNode.node.name }}-filters\"\n    *ngIf=\"!isCollapsed(headerNode.node)\"\n    class=\"filter-options\"\n  >\n    <ng-template #recursiveFilters let-filters>\n      <li\n        *ngFor=\"let f of filters\"\n        [ngClass]=\"{\n          active: isNodeSelected(f)\n        }\"\n        class=\"filter-option\"\n      >\n        <span class=\"filter-buttons\">\n          <button\n            *ngIf=\"f.children.length\"\n            appA11yTitle=\"{{ 'toggleCollapse' | i18n }}: {{ f.node.name }}\"\n            (click)=\"toggleCollapse(f.node)\"\n            [attr.aria-expanded]=\"!isCollapsed(f.node)\"\n            [attr.aria-controls]=\"f.node.name + '_children'\"\n            class=\"toggle-button\"\n          >\n            <i\n              class=\"bwi bwi-fw\"\n              [ngClass]=\"{\n                'bwi-angle-right': isCollapsed(f.node),\n                'bwi-angle-down': !isCollapsed(f.node)\n              }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button\n            class=\"filter-button\"\n            appA11yTitle=\"{{ isOrganizationFilter ? 'vault' : ('filter' | i18n) }}: {{\n              f.node.name\n            }}\"\n            [ngClass]=\"{ 'disabled-organization': isOrganizationFilter && !f.node.enabled }\"\n            (click)=\"onFilterSelect(f)\"\n          >\n            <i\n              *ngIf=\"f.children.length === 0\"\n              class=\"bwi bwi-fw {{ f.node.icon }}\"\n              aria-hidden=\"true\"\n            ></i>\n            &nbsp;{{ f.node.name }}\n          </button>\n          <span class=\"ml-auto\">\n            <button\n              *ngIf=\"editInfo && f.node.id\"\n              class=\"edit-button\"\n              (click)=\"onEdit(f)\"\n              appA11yTitle=\"{{ editInfo.text | i18n }}\"\n            >\n              <i class=\"bwi bwi-pencil bwi-fw\" aria-hidden=\"true\"></i>\n            </button>\n            <i\n              *ngIf=\"isOrganizationFilter && !f.node.enabled\"\n              class=\"org-options bwi bwi-fw bwi-exclamation-triangle text-danger\"\n              [attr.aria-label]=\"'organizationIsDisabled' | i18n\"\n              appA11yTitle=\"{{ 'organizationIsDisabled' | i18n }}\"\n            ></i\n            ><ng-container *ngIf=\"optionsInfo && !f.node.hideOptions\"\n              ><button [bitMenuTriggerFor]=\"optionsMenu\" class=\"filter-options-icon\">\n                <i class=\"bwi bwi-ellipsis-v\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu class=\"filter-organization-options\" #optionsMenu>\n                <ng-container\n                  *ngComponentOutlet=\"optionsInfo.component; injector: createInjector(f.node)\"\n                ></ng-container>\n              </bit-menu>\n            </ng-container>\n          </span>\n        </span>\n        <ul\n          [id]=\"f.node.name + '_children'\"\n          class=\"nested-filter-options\"\n          *ngIf=\"f.children.length && !isCollapsed(f.node)\"\n        >\n          <ng-container *ngTemplateOutlet=\"recursiveFilters; context: { $implicit: f.children }\">\n          </ng-container>\n        </ul>\n      </li>\n    </ng-template>\n    <ng-container\n      *ngTemplateOutlet=\"recursiveFilters; context: { $implicit: filters }\"\n    ></ng-container>\n    <li class=\"filter-option\" *ngIf=\"showAddLink\">\n      <span class=\"filter-buttons\">\n        <a href=\"#\" routerLink=\"{{ addInfo.route }}\" class=\"filter-button\">\n          <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n          &nbsp;{{ addInfo.text | i18n }}\n        </a>\n      </span>\n    </li>\n  </ul>\n  <hr *ngIf=\"divider\" />\n</ng-container>\n","import { Component, InjectionToken, Injector, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ITreeNodeObject, TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\n\nimport { VaultFilterService } from \"../../services/abstractions/vault-filter.service\";\nimport { VaultFilterSection, VaultFilterType } from \"../models/vault-filter-section.type\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Component({\n  selector: \"app-filter-section\",\n  templateUrl: \"vault-filter-section.component.html\",\n})\nexport class VaultFilterSectionComponent implements OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n\n  @Input() activeFilter: VaultFilter;\n  @Input() section: VaultFilterSection;\n\n  data: TreeNode<VaultFilterType>;\n  collapsedFilterNodes: Set<string> = new Set();\n\n  private injectors = new Map<string, Injector>();\n\n  constructor(private vaultFilterService: VaultFilterService, private injector: Injector) {\n    this.vaultFilterService.collapsedFilterNodes$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((nodes) => {\n        this.collapsedFilterNodes = nodes;\n      });\n  }\n\n  ngOnInit() {\n    this.section?.data$?.pipe(takeUntil(this.destroy$)).subscribe((data) => {\n      this.data = data;\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get headerNode() {\n    return this.data;\n  }\n\n  get headerInfo() {\n    return this.section.header;\n  }\n\n  get filters() {\n    return this.data?.children;\n  }\n\n  get isOrganizationFilter() {\n    return this.data.node instanceof Organization;\n  }\n\n  get isAllVaultsSelected() {\n    return this.isOrganizationFilter && !this.activeFilter.selectedOrganizationNode;\n  }\n\n  isNodeSelected(filterNode: TreeNode<VaultFilterType>) {\n    return (\n      this.activeFilter.organizationId === filterNode?.node.id ||\n      this.activeFilter.cipherTypeId === filterNode?.node.id ||\n      this.activeFilter.folderId === filterNode?.node.id ||\n      this.activeFilter.collectionId === filterNode?.node.id\n    );\n  }\n\n  async onFilterSelect(filterNode: TreeNode<VaultFilterType>) {\n    await this.section?.action(filterNode);\n  }\n\n  get editInfo() {\n    return this.section?.edit;\n  }\n\n  onEdit(filterNode: TreeNode<VaultFilterType>) {\n    this.section?.edit?.action(filterNode.node);\n  }\n\n  get addInfo() {\n    return this.section.add;\n  }\n\n  get showAddButton() {\n    return this.section.add && !this.section.add.route;\n  }\n\n  get showAddLink() {\n    return this.section.add && this.section.add.route;\n  }\n\n  async onAdd() {\n    this.section?.add?.action();\n  }\n\n  get optionsInfo() {\n    return this.section?.options;\n  }\n\n  get divider() {\n    return this.section?.divider;\n  }\n\n  isCollapsed(node: ITreeNodeObject) {\n    return this.collapsedFilterNodes.has(node.id);\n  }\n\n  async toggleCollapse(node: ITreeNodeObject) {\n    if (this.collapsedFilterNodes.has(node.id)) {\n      this.collapsedFilterNodes.delete(node.id);\n    } else {\n      this.collapsedFilterNodes.add(node.id);\n    }\n    await this.vaultFilterService.setCollapsedFilterNodes(this.collapsedFilterNodes);\n  }\n\n  // an injector is necessary to pass data into a dynamic component\n  // here we are creating a new injector for each filter that has options\n  createInjector(data: VaultFilterType) {\n    let inject = this.injectors.get(data.id);\n    if (!inject) {\n      inject = Injector.create({\n        providers: [{ provide: OptionsInput, useValue: data }],\n        parent: this.injector,\n      });\n      this.injectors.set(data.id, inject);\n    }\n    return inject;\n  }\n}\nexport const OptionsInput = new InjectionToken<VaultFilterType>(\"OptionsInput\");\n","import { AfterContentInit, Component, Input } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SsoComponent } from \"@bitwarden/angular/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-link-sso\",\n  templateUrl: \"link-sso.component.html\",\n})\nexport class LinkSsoComponent extends SsoComponent implements AfterContentInit {\n  @Input() organization: Organization;\n  returnUri = \"/settings/organizations\";\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    apiService: ApiService,\n    authService: AuthService,\n    router: Router,\n    route: ActivatedRoute,\n    cryptoFunctionService: CryptoFunctionService,\n    passwordGenerationService: PasswordGenerationService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n\n    this.returnUri = \"/settings/organizations\";\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngAfterContentInit() {\n    this.identifier = this.organization.identifier;\n  }\n}\n","<a\n  class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main tw-no-underline hover:tw-bg-secondary-100 hover:tw-no-underline focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n  href=\"#\"\n  appStopClick\n  (click)=\"submit(returnUri, true)\"\n>\n  <i class=\"bwi bwi-fw bwi-link\" aria-hidden=\"true\"></i>\n  {{ \"linkSso\" | i18n }}\n</a>\n","<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted tw-m-2\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<div\n  *ngIf=\"loaded\"\n  class=\"tw-flex tw-min-w-[200px] tw-max-w-[300px] tw-flex-col\"\n  [appApiAction]=\"actionPromise\"\n>\n  <button\n    *ngIf=\"allowEnrollmentChanges(organization) && !organization.resetPasswordEnrolled\"\n    class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"toggleResetPasswordEnrollment(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n    {{ \"enrollPasswordReset\" | i18n }}\n  </button>\n  <button\n    *ngIf=\"allowEnrollmentChanges(organization) && organization.resetPasswordEnrolled\"\n    class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"toggleResetPasswordEnrollment(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n    {{ \"withdrawPasswordReset\" | i18n }}\n  </button>\n  <ng-container *ngIf=\"organization.useSso && organization.identifier\">\n    <button\n      *ngIf=\"organization.ssoBound; else linkSso\"\n      class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n      (click)=\"unlinkSso(organization)\"\n    >\n      <i class=\"bwi bwi-fw bwi-chain-broken\" aria-hidden=\"true\"></i>\n      {{ \"unlinkSso\" | i18n }}\n    </button>\n    <ng-template #linkSso>\n      <app-link-sso [organization]=\"organization\"> </app-link-sso>\n    </ng-template>\n  </ng-container>\n  <button\n    class=\"text-danger tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"leave(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n    {{ \"leave\" | i18n }}\n  </button>\n</div>\n","import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { map, Subject, takeUntil } from \"rxjs\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\nimport { EnrollMasterPasswordReset } from \"../../../organizations/users/enroll-master-password-reset.component\";\nimport { OptionsInput } from \"../shared/components/vault-filter-section.component\";\nimport { OrganizationFilter } from \"../shared/models/vault-filter.type\";\n\n@Component({\n  selector: \"app-organization-options\",\n  templateUrl: \"organization-options.component.html\",\n})\nexport class OrganizationOptionsComponent implements OnInit, OnDestroy {\n  actionPromise: Promise<void | boolean>;\n  policies: Policy[];\n  loaded = false;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    @Inject(OptionsInput) protected organization: OrganizationFilter,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private modalService: ModalService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService.policies$\n      .pipe(\n        map((policies) => policies.filter((policy) => policy.type === PolicyType.ResetPassword)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((policies) => {\n        this.policies = policies;\n        this.loaded = true;\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  allowEnrollmentChanges(org: OrganizationFilter): boolean {\n    if (org.usePolicies && org.useResetPassword && org.hasPublicAndPrivateKeys) {\n      const policy = this.policies.find((p) => p.organizationId === org.id);\n      if (policy != null && policy.enabled) {\n        return org.resetPasswordEnrolled && policy.data.autoEnrollEnabled ? false : true;\n      }\n    }\n\n    return false;\n  }\n\n  showEnrolledStatus(org: Organization): boolean {\n    return (\n      org.useResetPassword &&\n      org.resetPasswordEnrolled &&\n      this.policies.some((p) => p.organizationId === org.id && p.enabled)\n    );\n  }\n\n  async unlinkSso(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"unlinkSsoConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.apiService.deleteSsoUser(org.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, \"Unlinked SSO\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async leave(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.organizationApiService.leave(org.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async toggleResetPasswordEnrollment(org: Organization) {\n    if (!this.organization.resetPasswordEnrolled) {\n      this.modalService.open(EnrollMasterPasswordReset, {\n        allowMultipleModals: true,\n        data: {\n          organization: org,\n        },\n      });\n    } else {\n      // Remove reset password\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.masterPasswordHash = \"ignored\";\n      request.resetPasswordKey = null;\n      this.actionPromise = this.organizationUserService.putOrganizationUserResetPasswordEnrollment(\n        this.organization.id,\n        this.organization.userId,\n        request\n      );\n      try {\n        await this.actionPromise;\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"withdrawPasswordResetSuccess\")\n        );\n        this.syncService.fullSync(true);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n}\n","<div class=\"card vault-filters\">\n  <div class=\"container loading-spinner\" *ngIf=\"!isLoaded\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n  </div>\n  <div *ngIf=\"isLoaded\">\n    <div class=\"card-header d-flex\">\n      {{ \"filters\" | i18n }}\n      <a\n        class=\"ml-auto\"\n        href=\"https://bitwarden.com/help/searching-vault/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <div class=\"card-body\">\n      <input\n        type=\"search\"\n        placeholder=\"{{ searchPlaceholder | i18n }}\"\n        id=\"search\"\n        class=\"form-control\"\n        (input)=\"searchTextChanged($any($event.target).value)\"\n        autocomplete=\"off\"\n        appAutofocus\n      />\n      <ng-container *ngFor=\"let f of filtersList\">\n        <div class=\"filter\">\n          <app-filter-section [activeFilter]=\"activeFilter\" [section]=\"f\"> </app-filter-section>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\nimport { VaultFilterService } from \"../services/abstractions/vault-filter.service\";\nimport {\n  VaultFilterList,\n  VaultFilterSection,\n  VaultFilterType,\n} from \"../shared/models/vault-filter-section.type\";\nimport { VaultFilter } from \"../shared/models/vault-filter.model\";\nimport {\n  CipherTypeFilter,\n  CollectionFilter,\n  FolderFilter,\n  OrganizationFilter,\n} from \"../shared/models/vault-filter.type\";\n\nimport { OrganizationOptionsComponent } from \"./organization-options.component\";\n\n@Component({\n  selector: \"app-vault-filter\",\n  templateUrl: \"vault-filter.component.html\",\n})\nexport class VaultFilterComponent implements OnInit, OnDestroy {\n  filters?: VaultFilterList;\n  @Input() activeFilter: VaultFilter = new VaultFilter();\n  @Output() activeFilterChanged = new EventEmitter<VaultFilter>();\n  @Output() onSearchTextChanged = new EventEmitter<string>();\n  @Output() onAddFolder = new EventEmitter<never>();\n  @Output() onEditFolder = new EventEmitter<FolderFilter>();\n\n  isLoaded = false;\n  searchText = \"\";\n\n  protected destroy$: Subject<void> = new Subject<void>();\n\n  get filtersList() {\n    return this.filters ? Object.values(this.filters) : [];\n  }\n\n  get searchPlaceholder() {\n    if (this.activeFilter.isFavorites) {\n      return \"searchFavorites\";\n    }\n    if (this.activeFilter.isDeleted) {\n      return \"searchTrash\";\n    }\n    if (this.activeFilter.cipherType === CipherType.Login) {\n      return \"searchLogin\";\n    }\n    if (this.activeFilter.cipherType === CipherType.Card) {\n      return \"searchCard\";\n    }\n    if (this.activeFilter.cipherType === CipherType.Identity) {\n      return \"searchIdentity\";\n    }\n    if (this.activeFilter.cipherType === CipherType.SecureNote) {\n      return \"searchSecureNote\";\n    }\n    if (this.activeFilter.selectedFolderNode?.node) {\n      return \"searchFolder\";\n    }\n    if (this.activeFilter.selectedCollectionNode?.node) {\n      return \"searchCollection\";\n    }\n    if (this.activeFilter.organizationId === \"MyVault\") {\n      return \"searchMyVault\";\n    }\n    if (this.activeFilter.organizationId) {\n      return \"searchOrganization\";\n    }\n\n    return \"searchVault\";\n  }\n\n  constructor(\n    protected vaultFilterService: VaultFilterService,\n    protected policyService: PolicyService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {\n    this.loadSubscriptions();\n  }\n\n  async ngOnInit(): Promise<void> {\n    this.filters = await this.buildAllFilters();\n    this.activeFilter.selectedCipherTypeNode =\n      (await this.getDefaultFilter()) as TreeNode<CipherTypeFilter>;\n    this.isLoaded = true;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  protected loadSubscriptions() {\n    this.vaultFilterService.filteredFolders$\n      .pipe(\n        switchMap(async (folders) => {\n          this.removeInvalidFolderSelection(folders);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n\n    this.vaultFilterService.filteredCollections$\n      .pipe(\n        switchMap(async (collections) => {\n          this.removeInvalidCollectionSelection(collections);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  searchTextChanged(t: string) {\n    this.searchText = t;\n    this.onSearchTextChanged.emit(t);\n  }\n\n  protected applyVaultFilter(filter: VaultFilter) {\n    this.activeFilterChanged.emit(filter);\n  }\n\n  applyOrganizationFilter = async (orgNode: TreeNode<OrganizationFilter>): Promise<void> => {\n    if (!orgNode?.node.enabled) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"disabledOrganizationFilterError\")\n      );\n      return;\n    }\n    const filter = this.activeFilter;\n    filter.resetOrganization();\n    if (orgNode?.node.id !== \"AllVaults\") {\n      filter.selectedOrganizationNode = orgNode;\n    }\n    this.vaultFilterService.setOrganizationFilter(orgNode.node);\n    await this.vaultFilterService.expandOrgFilter();\n    this.applyVaultFilter(filter);\n  };\n\n  applyTypeFilter = async (filterNode: TreeNode<CipherTypeFilter>): Promise<void> => {\n    const filter = this.activeFilter;\n    filter.resetFilter();\n    filter.selectedCipherTypeNode = filterNode;\n    this.applyVaultFilter(filter);\n  };\n\n  applyFolderFilter = async (folderNode: TreeNode<FolderFilter>): Promise<void> => {\n    const filter = this.activeFilter;\n    filter.resetFilter();\n    filter.selectedFolderNode = folderNode;\n    this.applyVaultFilter(filter);\n  };\n\n  applyCollectionFilter = async (collectionNode: TreeNode<CollectionFilter>): Promise<void> => {\n    const filter = this.activeFilter;\n    filter.resetFilter();\n    filter.selectedCollectionNode = collectionNode;\n    this.applyVaultFilter(filter);\n  };\n\n  addFolder = async (): Promise<void> => {\n    this.onAddFolder.emit();\n  };\n\n  editFolder = async (folder: FolderFilter): Promise<void> => {\n    this.onEditFolder.emit(folder);\n  };\n\n  async getDefaultFilter(): Promise<TreeNode<VaultFilterType>> {\n    return await firstValueFrom(this.filters?.typeFilter.data$);\n  }\n\n  protected async removeInvalidFolderSelection(folders: FolderView[]) {\n    if (this.activeFilter.selectedFolderNode) {\n      if (!folders.some((f) => f.id === this.activeFilter.folderId)) {\n        const filter = this.activeFilter;\n        filter.resetFilter();\n        filter.selectedCipherTypeNode =\n          (await this.getDefaultFilter()) as TreeNode<CipherTypeFilter>;\n        this.applyVaultFilter(filter);\n      }\n    }\n  }\n\n  protected async removeInvalidCollectionSelection(collections: CollectionView[]) {\n    if (this.activeFilter.selectedCollectionNode) {\n      if (!collections.some((f) => f.id === this.activeFilter.collectionId)) {\n        const filter = this.activeFilter;\n        filter.resetFilter();\n        filter.selectedCipherTypeNode =\n          (await this.getDefaultFilter()) as TreeNode<CipherTypeFilter>;\n        this.applyVaultFilter(filter);\n      }\n    }\n  }\n\n  async buildAllFilters(): Promise<VaultFilterList> {\n    const builderFilter = {} as VaultFilterList;\n    builderFilter.organizationFilter = await this.addOrganizationFilter();\n    builderFilter.typeFilter = await this.addTypeFilter();\n    builderFilter.folderFilter = await this.addFolderFilter();\n    builderFilter.collectionFilter = await this.addCollectionFilter();\n    builderFilter.trashFilter = await this.addTrashFilter();\n    return builderFilter;\n  }\n\n  protected async addOrganizationFilter(): Promise<VaultFilterSection> {\n    const singleOrgPolicy = await this.policyService.policyAppliesToUser(PolicyType.SingleOrg);\n    const personalVaultPolicy = await this.policyService.policyAppliesToUser(\n      PolicyType.PersonalOwnership\n    );\n\n    const addAction = !singleOrgPolicy\n      ? { text: \"newOrganization\", route: \"/create-organization\" }\n      : null;\n\n    const orgFilterSection: VaultFilterSection = {\n      data$: this.vaultFilterService.organizationTree$,\n      header: {\n        showHeader: !(singleOrgPolicy && personalVaultPolicy),\n        isSelectable: true,\n      },\n      action: this.applyOrganizationFilter,\n      options: { component: OrganizationOptionsComponent },\n      add: addAction,\n      divider: true,\n    };\n\n    return orgFilterSection;\n  }\n\n  protected async addTypeFilter(): Promise<VaultFilterSection> {\n    const typeFilterSection: VaultFilterSection = {\n      data$: this.vaultFilterService.buildTypeTree(\n        { id: \"AllItems\", name: \"allItems\", type: \"all\", icon: \"\" },\n        [\n          {\n            id: \"favorites\",\n            name: this.i18nService.t(\"favorites\"),\n            type: \"favorites\",\n            icon: \"bwi-star\",\n          },\n          {\n            id: \"login\",\n            name: this.i18nService.t(\"typeLogin\"),\n            type: CipherType.Login,\n            icon: \"bwi-globe\",\n          },\n          {\n            id: \"card\",\n            name: this.i18nService.t(\"typeCard\"),\n            type: CipherType.Card,\n            icon: \"bwi-credit-card\",\n          },\n          {\n            id: \"identity\",\n            name: this.i18nService.t(\"typeIdentity\"),\n            type: CipherType.Identity,\n            icon: \"bwi-id-card\",\n          },\n          {\n            id: \"note\",\n            name: this.i18nService.t(\"typeSecureNote\"),\n            type: CipherType.SecureNote,\n            icon: \"bwi-sticky-note\",\n          },\n        ]\n      ),\n      header: {\n        showHeader: true,\n        isSelectable: true,\n      },\n      action: this.applyTypeFilter,\n    };\n    return typeFilterSection;\n  }\n\n  protected async addFolderFilter(): Promise<VaultFilterSection> {\n    const folderFilterSection: VaultFilterSection = {\n      data$: this.vaultFilterService.folderTree$,\n      header: {\n        showHeader: true,\n        isSelectable: false,\n      },\n      action: this.applyFolderFilter,\n      edit: {\n        text: \"editFolder\",\n        action: this.editFolder,\n      },\n      add: {\n        text: \"Add Folder\",\n        action: this.addFolder,\n      },\n    };\n    return folderFilterSection;\n  }\n\n  protected async addCollectionFilter(): Promise<VaultFilterSection> {\n    const collectionFilterSection: VaultFilterSection = {\n      data$: this.vaultFilterService.collectionTree$,\n      header: {\n        showHeader: true,\n        isSelectable: true,\n      },\n      action: this.applyCollectionFilter,\n    };\n    return collectionFilterSection;\n  }\n\n  protected async addTrashFilter(): Promise<VaultFilterSection> {\n    const trashFilterSection: VaultFilterSection = {\n      data$: this.vaultFilterService.buildTypeTree(\n        {\n          id: \"headTrash\",\n          name: \"HeadTrash\",\n          type: \"trash\",\n          icon: \"bwi-trash\",\n        },\n        [\n          {\n            id: \"trash\",\n            name: this.i18nService.t(\"trash\"),\n            type: \"trash\",\n            icon: \"bwi-trash\",\n          },\n        ]\n      ),\n      header: {\n        showHeader: false,\n        isSelectable: true,\n      },\n      action: this.applyTypeFilter,\n    };\n    return trashFilterSection;\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { firstValueFrom, Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\nimport { VaultFilterComponent as BaseVaultFilterComponent } from \"../../../vault/vault-filter/components/vault-filter.component\";\nimport {\n  VaultFilterList,\n  VaultFilterType,\n} from \"../../../vault/vault-filter/shared/models/vault-filter-section.type\";\nimport { CollectionFilter } from \"../../../vault/vault-filter/shared/models/vault-filter.type\";\n\n@Component({\n  selector: \"app-organization-vault-filter\",\n  templateUrl: \"../../../vault/vault-filter/components/vault-filter.component.html\",\n})\nexport class VaultFilterComponent extends BaseVaultFilterComponent implements OnInit, OnDestroy {\n  @Input() set organization(value: Organization) {\n    if (value && value !== this._organization) {\n      this._organization = value;\n      this.vaultFilterService.setOrganizationFilter(this._organization);\n    }\n  }\n  _organization: Organization;\n  protected destroy$: Subject<void>;\n\n  async ngOnInit() {\n    this.filters = await this.buildAllFilters();\n    if (!this.activeFilter.selectedCipherTypeNode) {\n      this.activeFilter.resetFilter();\n      this.activeFilter.selectedCollectionNode =\n        (await this.getDefaultFilter()) as TreeNode<CollectionFilter>;\n    }\n    this.isLoaded = true;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  protected loadSubscriptions() {\n    this.vaultFilterService.filteredCollections$\n      .pipe(\n        switchMap(async (collections) => {\n          this.removeInvalidCollectionSelection(collections);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  protected async removeInvalidCollectionSelection(collections: CollectionView[]) {\n    if (this.activeFilter.selectedCollectionNode) {\n      if (!collections.some((f) => f.id === this.activeFilter.collectionId)) {\n        this.activeFilter.resetFilter();\n        this.activeFilter.selectedCollectionNode =\n          (await this.getDefaultFilter()) as TreeNode<CollectionFilter>;\n        this.applyVaultFilter(this.activeFilter);\n      }\n    }\n  }\n\n  async buildAllFilters(): Promise<VaultFilterList> {\n    const builderFilter = {} as VaultFilterList;\n    builderFilter.typeFilter = await this.addTypeFilter();\n    builderFilter.collectionFilter = await this.addCollectionFilter();\n    builderFilter.trashFilter = await this.addTrashFilter();\n    return builderFilter;\n  }\n\n  async getDefaultFilter(): Promise<TreeNode<VaultFilterType>> {\n    return await firstValueFrom(this.filters?.collectionFilter.data$);\n  }\n}\n","export class CollectionBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","import { DialogConfig, DialogRef, DIALOG_DATA } from \"@angular/cdk/dialog\";\nimport { Component, Inject } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherBulkDeleteRequest } from \"@bitwarden/common/models/request/cipher-bulk-delete.request\";\nimport { CollectionBulkDeleteRequest } from \"@bitwarden/common/models/request/collection-bulk-delete.request\";\nimport { DialogService } from \"@bitwarden/components\";\n\nexport interface BulkDeleteDialogParams {\n  cipherIds?: string[];\n  collectionIds?: string[];\n  permanent?: boolean;\n  organization?: Organization;\n}\n\nexport enum BulkDeleteDialogResult {\n  Deleted = \"deleted\",\n  Canceled = \"canceled\",\n}\n\n/**\n * Strongly typed helper to open a BulkDeleteDialog\n * @param dialogService Instance of the dialog service that will be used to open the dialog\n * @param config Configuration for the dialog\n */\nexport const openBulkDeleteDialog = (\n  dialogService: DialogService,\n  config: DialogConfig<BulkDeleteDialogParams>\n) => {\n  return dialogService.open<BulkDeleteDialogResult, BulkDeleteDialogParams>(\n    BulkDeleteDialogComponent,\n    config\n  );\n};\n\n@Component({\n  selector: \"vault-bulk-delete-dialog\",\n  templateUrl: \"bulk-delete-dialog.component.html\",\n})\nexport class BulkDeleteDialogComponent {\n  cipherIds: string[];\n  collectionIds: string[];\n  permanent = false;\n  organization: Organization;\n\n  constructor(\n    @Inject(DIALOG_DATA) params: BulkDeleteDialogParams,\n    private dialogRef: DialogRef<BulkDeleteDialogResult>,\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {\n    this.cipherIds = params.cipherIds ?? [];\n    this.collectionIds = params.collectionIds ?? [];\n    this.permanent = params.permanent;\n    this.organization = params.organization;\n  }\n\n  protected async cancel() {\n    this.close(BulkDeleteDialogResult.Canceled);\n  }\n\n  protected submit = async () => {\n    const deletePromises: Promise<void>[] = [];\n    if (this.cipherIds.length) {\n      if (!this.organization || !this.organization.canEditAnyCollection) {\n        deletePromises.push(this.deleteCiphers());\n      } else {\n        deletePromises.push(this.deleteCiphersAdmin());\n      }\n    }\n\n    if (this.collectionIds.length && this.organization) {\n      deletePromises.push(this.deleteCollections());\n    }\n\n    await Promise.all(deletePromises);\n\n    if (this.cipherIds.length) {\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.permanent ? \"permanentlyDeletedItems\" : \"deletedItems\")\n      );\n    }\n    if (this.collectionIds.length) {\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollections\")\n      );\n    }\n    this.close(BulkDeleteDialogResult.Deleted);\n  };\n\n  private async deleteCiphers(): Promise<any> {\n    if (this.permanent) {\n      await this.cipherService.deleteManyWithServer(this.cipherIds);\n    } else {\n      await this.cipherService.softDeleteManyWithServer(this.cipherIds);\n    }\n  }\n\n  private async deleteCiphersAdmin(): Promise<any> {\n    const deleteRequest = new CipherBulkDeleteRequest(this.cipherIds, this.organization.id);\n    if (this.permanent) {\n      return await this.apiService.deleteManyCiphersAdmin(deleteRequest);\n    } else {\n      return await this.apiService.putDeleteManyCiphersAdmin(deleteRequest);\n    }\n  }\n\n  private async deleteCollections(): Promise<any> {\n    if (!this.organization.canDeleteAssignedCollections) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"missingPermissions\")\n      );\n      return;\n    }\n    const deleteRequest = new CollectionBulkDeleteRequest(this.collectionIds, this.organization.id);\n    return await this.apiService.deleteManyCollections(deleteRequest);\n  }\n\n  private close(result: BulkDeleteDialogResult) {\n    this.dialogRef.close(result);\n  }\n}\n","<bit-simple-dialog>\n  <span bitDialogTitle>\n    {{ (permanent ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n  </span>\n  <span bitDialogContent>\n    <ng-container *ngIf=\"!permanent\">\n      <span *ngIf=\"cipherIds?.length\">\n        {{ \"deleteSelectedItemsDesc\" | i18n: cipherIds.length }}\n      </span>\n      <span *ngIf=\"collectionIds?.length\">\n        {{ \"deleteSelectedCollectionsDesc\" | i18n: collectionIds.length }}\n      </span>\n      {{ \"deleteSelectedConfirmation\" | i18n }}\n    </ng-container>\n    <ng-container *ngIf=\"permanent\">\n      {{ \"permanentlyDeleteSelectedItemsDesc\" | i18n: cipherIds.length }}\n    </ng-container>\n  </span>\n  <div bitDialogFooter class=\"tw-flex tw-flex-row tw-gap-2\">\n    <button bitButton type=\"submit\" buttonType=\"danger\" [bitAction]=\"submit\">\n      {{ (permanent ? \"permanentlyDelete\" : \"delete\") | i18n }}\n    </button>\n    <button bitButton type=\"button\" (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n  </div>\n</bit-simple-dialog>\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n@Directive()\nexport class VaultItemsComponent {\n  @Input() activeCipherId: string = null;\n  @Output() onCipherClicked = new EventEmitter<CipherView>();\n  @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n  @Output() onAddCipher = new EventEmitter();\n  @Output() onAddCipherOptions = new EventEmitter();\n\n  loaded = false;\n  ciphers: CipherView[] = [];\n  searchPlaceholder: string = null;\n  filter: (cipher: CipherView) => boolean = null;\n  deleted = false;\n  organization: Organization;\n  accessEvents = false;\n\n  protected searchPending = false;\n\n  private searchTimeout: any = null;\n  private _searchText: string = null;\n  get searchText() {\n    return this._searchText;\n  }\n  set searchText(value: string) {\n    this._searchText = value;\n  }\n\n  constructor(protected searchService: SearchService) {}\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted ?? false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async reload(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.loaded = false;\n    await this.load(filter, deleted);\n  }\n\n  async refresh() {\n    await this.reload(this.filter, this.deleted);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      await this.doSearch(indexedCiphers);\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      await this.doSearch(indexedCiphers);\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.onCipherClicked.emit(cipher);\n  }\n\n  rightClickCipher(cipher: CipherView) {\n    this.onCipherRightClicked.emit(cipher);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  addCipherOptions() {\n    this.onAddCipherOptions.emit();\n  }\n\n  isSearching() {\n    return !this.searchPending && this.searchService.isSearchable(this.searchText);\n  }\n\n  protected deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n\n  protected async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n  }\n}\n","import { DialogConfig, DialogRef, DIALOG_DATA } from \"@angular/cdk/dialog\";\nimport { Component, Inject, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { firstValueFrom, Observable } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\nimport { DialogService } from \"@bitwarden/components\";\n\nexport interface BulkMoveDialogParams {\n  cipherIds?: string[];\n}\n\nexport enum BulkMoveDialogResult {\n  Moved = \"moved\",\n  Canceled = \"canceled\",\n}\n\n/**\n * Strongly typed helper to open a BulkMoveDialog\n * @param dialogService Instance of the dialog service that will be used to open the dialog\n * @param config Configuration for the dialog\n */\nexport const openBulkMoveDialog = (\n  dialogService: DialogService,\n  config: DialogConfig<BulkMoveDialogParams>\n) => {\n  return dialogService.open<BulkMoveDialogResult, BulkMoveDialogParams>(\n    BulkMoveDialogComponent,\n    config\n  );\n};\n\n@Component({\n  selector: \"vault-bulk-move-dialog\",\n  templateUrl: \"bulk-move-dialog.component.html\",\n})\nexport class BulkMoveDialogComponent implements OnInit {\n  cipherIds: string[] = [];\n\n  formGroup = this.formBuilder.group({\n    folderId: [\"\", [Validators.required]],\n  });\n  folders$: Observable<FolderView[]>;\n\n  constructor(\n    @Inject(DIALOG_DATA) params: BulkMoveDialogParams,\n    private dialogRef: DialogRef<BulkMoveDialogResult>,\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private folderService: FolderService,\n    private formBuilder: FormBuilder\n  ) {\n    this.cipherIds = params.cipherIds ?? [];\n  }\n\n  async ngOnInit() {\n    this.folders$ = this.folderService.folderViews$;\n    this.formGroup.patchValue({\n      folderId: (await firstValueFrom(this.folders$))[0].id,\n    });\n  }\n\n  protected cancel() {\n    this.close(BulkMoveDialogResult.Canceled);\n  }\n\n  protected submit = async () => {\n    if (this.formGroup.invalid) {\n      return;\n    }\n\n    await this.cipherService.moveManyWithServer(this.cipherIds, this.formGroup.value.folderId);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"movedItems\"));\n    this.close(BulkMoveDialogResult.Moved);\n  };\n\n  private close(result: BulkMoveDialogResult) {\n    this.dialogRef.close(result);\n  }\n}\n","<form [formGroup]=\"formGroup\" [bitSubmit]=\"submit\">\n  <bit-dialog dialogSize=\"small\">\n    <span bitDialogTitle>\n      {{ \"moveSelected\" | i18n }}\n    </span>\n    <span bitDialogContent>\n      <p>{{ \"moveSelectedItemsDesc\" | i18n: cipherIds.length }}</p>\n      <bit-form-field>\n        <bit-label for=\"folder\">{{ \"folder\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"folderId\">\n          <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n        </select>\n      </bit-form-field>\n    </span>\n    <div bitDialogFooter class=\"tw-flex tw-flex-row tw-gap-2\">\n      <button bitButton bitFormButton type=\"submit\" buttonType=\"primary\">\n        {{ \"save\" | i18n }}\n      </button>\n      <button bitButton bitFormButton type=\"button\" buttonType=\"secondary\" (click)=\"cancel()\">\n        {{ \"cancel\" | i18n }}\n      </button>\n    </div>\n  </bit-dialog>\n</form>\n","import { DialogConfig, DialogRef, DIALOG_DATA } from \"@angular/cdk/dialog\";\nimport { Component, Inject } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { DialogService } from \"@bitwarden/components\";\n\nexport interface BulkRestoreDialogParams {\n  cipherIds: string[];\n}\n\nexport enum BulkRestoreDialogResult {\n  Restored = \"restored\",\n  Canceled = \"canceled\",\n}\n\n/**\n * Strongly typed helper to open a BulkRestoreDialog\n * @param dialogService Instance of the dialog service that will be used to open the dialog\n * @param config Configuration for the dialog\n */\nexport const openBulkRestoreDialog = (\n  dialogService: DialogService,\n  config: DialogConfig<BulkRestoreDialogParams>\n) => {\n  return dialogService.open<BulkRestoreDialogResult, BulkRestoreDialogParams>(\n    BulkRestoreDialogComponent,\n    config\n  );\n};\n\n@Component({\n  selector: \"vault-bulk-restore-dialog\",\n  templateUrl: \"bulk-restore-dialog.component.html\",\n})\nexport class BulkRestoreDialogComponent {\n  cipherIds: string[];\n\n  constructor(\n    @Inject(DIALOG_DATA) params: BulkRestoreDialogParams,\n    private dialogRef: DialogRef<BulkRestoreDialogResult>,\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {\n    this.cipherIds = params.cipherIds ?? [];\n  }\n\n  submit = async () => {\n    await this.cipherService.restoreManyWithServer(this.cipherIds);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItems\"));\n    this.close(BulkRestoreDialogResult.Restored);\n  };\n\n  protected cancel() {\n    this.close(BulkRestoreDialogResult.Canceled);\n  }\n\n  private close(result: BulkRestoreDialogResult) {\n    this.dialogRef.close(result);\n  }\n}\n","type CheckableBase = {\n  checked?: boolean;\n};\n\nexport type Checkable<T> = T & CheckableBase;\n\nexport function isChecked(item: CheckableBase): boolean {\n  return !!item.checked;\n}\n","<bit-simple-dialog>\n  <span bitDialogTitle>\n    {{ \"restoreSelected\" | i18n }}\n  </span>\n  <span bitDialogContent>\n    {{ \"restoreSelectedItemsDesc\" | i18n: cipherIds.length }}\n  </span>\n  <div bitDialogFooter class=\"tw-flex tw-flex-row tw-gap-2\">\n    <button bitButton type=\"submit\" buttonType=\"primary\" [bitAction]=\"submit\">\n      {{ \"restore\" | i18n }}\n    </button>\n    <button bitButton type=\"button\" (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n  </div>\n</bit-simple-dialog>\n","import { DialogConfig, DialogRef, DIALOG_DATA } from \"@angular/cdk/dialog\";\nimport { Component, Inject, OnInit } from \"@angular/core\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { Checkable, isChecked } from \"@bitwarden/common/types/checkable\";\nimport { DialogService } from \"@bitwarden/components\";\n\nexport interface BulkShareDialogParams {\n  ciphers: CipherView[];\n  organizationId?: string;\n}\n\nexport enum BulkShareDialogResult {\n  Shared = \"shared\",\n  Canceled = \"canceled\",\n}\n\n/**\n * Strongly typed helper to open a BulkShareDialog\n * @param dialogService Instance of the dialog service that will be used to open the dialog\n * @param config Configuration for the dialog\n */\nexport const openBulkShareDialog = (\n  dialogService: DialogService,\n  config: DialogConfig<BulkShareDialogParams>\n) => {\n  return dialogService.open<BulkShareDialogResult, BulkShareDialogParams>(\n    BulkShareDialogComponent,\n    config\n  );\n};\n\n@Component({\n  selector: \"vault-bulk-share-dialog\",\n  templateUrl: \"bulk-share-dialog.component.html\",\n})\nexport class BulkShareDialogComponent implements OnInit {\n  ciphers: CipherView[] = [];\n  organizationId: string;\n\n  nonShareableCount = 0;\n  collections: Checkable<CollectionView>[] = [];\n  organizations: Organization[] = [];\n  shareableCiphers: CipherView[] = [];\n\n  private writeableCollections: CollectionView[] = [];\n\n  constructor(\n    @Inject(DIALOG_DATA) params: BulkShareDialogParams,\n    private dialogRef: DialogRef<BulkShareDialogResult>,\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {\n    this.ciphers = params.ciphers ?? [];\n    this.organizationId = params.organizationId;\n  }\n\n  async ngOnInit() {\n    this.shareableCiphers = this.ciphers.filter(\n      (c) => !c.hasOldAttachments && c.organizationId == null\n    );\n    this.nonShareableCount = this.ciphers.length - this.shareableCiphers.length;\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.filter((c) => !c.readOnly);\n    this.organizations = await this.organizationService.getAll();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  filterCollections() {\n    this.selectAll(false);\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  submit = async () => {\n    const checkedCollectionIds = this.collections.filter(isChecked).map((c) => c.id);\n    try {\n      await this.cipherService.shareManyWithServer(\n        this.shareableCiphers,\n        this.organizationId,\n        checkedCollectionIds\n      );\n      const orgName =\n        this.organizations.find((o) => o.id === this.organizationId)?.name ??\n        this.i18nService.t(\"organization\");\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"movedItemsToOrg\", orgName)\n      );\n      this.close(BulkShareDialogResult.Shared);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  };\n\n  check(c: Checkable<CollectionView>, select?: boolean) {\n    c.checked = select == null ? !c.checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n\n  get canSave() {\n    if (\n      this.shareableCiphers != null &&\n      this.shareableCiphers.length > 0 &&\n      this.collections != null\n    ) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if (this.collections[i].checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  protected cancel() {\n    this.close(BulkShareDialogResult.Canceled);\n  }\n\n  private close(result: BulkShareDialogResult) {\n    this.dialogRef.close(result);\n  }\n}\n","<bit-dialog>\n  <span bitDialogTitle>\n    {{ \"moveSelectedToOrg\" | i18n }}\n  </span>\n  <span bitDialogContent>\n    <p>{{ \"moveManyToOrgDesc\" | i18n }}</p>\n    <p>\n      {{\n        \"moveSelectedItemsCountDesc\"\n          | i18n: this.ciphers.length:shareableCiphers.length:nonShareableCount\n      }}\n    </p>\n    <bit-form-field>\n      <bit-label for=\"organization\">{{ \"organization\" | i18n }}</bit-label>\n      <select\n        bitInput\n        [(ngModel)]=\"organizationId\"\n        id=\"organization\"\n        (change)=\"filterCollections()\"\n      >\n        <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n      </select>\n    </bit-form-field>\n\n    <div class=\"d-flex\">\n      <label class=\"tw-mb-1 tw-block tw-font-semibold tw-text-main\">{{\n        \"collections\" | i18n\n      }}</label>\n      <div class=\"tw-ml-auto tw-flex tw-gap-2\" *ngIf=\"collections && collections.length\">\n        <button bitLink type=\"button\" (click)=\"selectAll(true)\" class=\"tw-px-2\">\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button bitLink type=\"button\" (click)=\"selectAll(false)\" class=\"tw-px-2\">\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <div *ngIf=\"!collections || !collections.length\">\n      {{ \"noCollectionsInList\" | i18n }}\n    </div>\n    <table\n      class=\"table table-hover table-list mb-0\"\n      *ngIf=\"collections && collections.length\"\n      id=\"collections\"\n    >\n      <tbody>\n        <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n          <td class=\"table-list-checkbox\">\n            <input\n              bitInput\n              type=\"checkbox\"\n              [(ngModel)]=\"c.checked\"\n              name=\"Collection[{{ i }}].Checked\"\n              attr.aria-label=\"Check {{ c.name }}\"\n              appStopProp\n            />\n          </td>\n          <td>\n            {{ c.name }}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </span>\n  <div bitDialogFooter class=\"tw-flex tw-flex-row tw-gap-2\">\n    <button bitButton type=\"submit\" buttonType=\"primary\" [bitAction]=\"submit\">\n      {{ \"save\" | i18n }}\n    </button>\n    <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</bit-dialog>\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"ellipsis\",\n})\nexport class EllipsisPipe implements PipeTransform {\n  transform(value: string, limit = 25, completeWords = false, ellipsis = \"...\") {\n    if (value.length <= limit) {\n      return value;\n    }\n    limit -= ellipsis.length;\n    if (completeWords && value.length > limit && value.indexOf(\" \") > 0) {\n      limit = value.substring(0, limit).lastIndexOf(\" \");\n    }\n    return value.substring(0, limit) + ellipsis;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-org-badge\",\n  templateUrl: \"organization-name-badge.component.html\",\n})\nexport class OrganizationNameBadgeComponent implements OnInit {\n  @Input() organizationName: string;\n  @Input() profileName: string;\n\n  @Output() onOrganizationClicked = new EventEmitter<string>();\n\n  color: string;\n  textColor: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit(): void {\n    if (this.organizationName == null || this.organizationName === \"\") {\n      this.organizationName = this.i18nService.t(\"me\");\n      this.color = Utils.stringToColor(this.profileName.toUpperCase());\n    }\n    if (this.color == null) {\n      this.color = Utils.stringToColor(this.organizationName.toUpperCase());\n    }\n    this.textColor = Utils.pickTextColorBasedOnBgColor(this.color);\n  }\n\n  emitOnOrganizationClicked() {\n    this.onOrganizationClicked.emit();\n  }\n}\n","<button\n  bitBadge\n  [style.color]=\"textColor\"\n  [style.background-color]=\"color\"\n  appA11yTitle=\"{{ organizationName }}\"\n  (click)=\"emitOnOrganizationClicked()\"\n>\n  {{ organizationName | ellipsis: 13 }}\n</button>\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { GroupView } from \"../../organizations/core\";\n\n@Pipe({\n  name: \"groupNameFromId\",\n  pure: true,\n})\nexport class GetGroupNameFromIdPipe implements PipeTransform {\n  transform(value: string, groups: GroupView[]) {\n    return groups.find((o) => o.id === value)?.name;\n  }\n}\n","<ng-container *ngFor=\"let c of shownGroups\">\n  <span bitBadge badgeType=\"secondary\">{{ c.id | groupNameFromId: allGroups }}</span>\n</ng-container>\n<ng-container *ngIf=\"showXMore\">\n  <span bitBadge badgeType=\"secondary\">+ {{ xMoreCount }} more</span>\n</ng-container>\n","import { Component, Input } from \"@angular/core\";\n\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\n\nimport { GroupView } from \"../../core\";\n\n@Component({\n  selector: \"app-group-badge\",\n  templateUrl: \"group-name-badge.component.html\",\n})\nexport class GroupNameBadgeComponent {\n  @Input() selectedGroups: SelectionReadOnlyRequest[];\n  @Input() allGroups: GroupView[];\n\n  get shownGroups(): SelectionReadOnlyRequest[] {\n    return this.showXMore ? this.selectedGroups.slice(0, 2) : this.selectedGroups;\n  }\n\n  get showXMore(): boolean {\n    return this.selectedGroups.length > 3;\n  }\n\n  get xMoreCount(): number {\n    return this.selectedGroups.length - 2;\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { CollectionView } from \"@bitwarden/common/src/models/view/collection.view\";\n\n@Pipe({\n  name: \"collectionNameFromId\",\n  pure: true,\n})\nexport class GetCollectionNameFromIdPipe implements PipeTransform {\n  transform(value: string, collections: CollectionView[]) {\n    return collections.find((o) => o.id === value)?.name;\n  }\n}\n","<ng-container *ngFor=\"let c of shownCollections\">\n  <span bitBadge badgeType=\"secondary\">{{ c | collectionNameFromId: collections }}</span>\n</ng-container>\n<ng-container *ngIf=\"showXMore\">\n  <span bitBadge badgeType=\"secondary\">+ {{ xMoreCount }} more</span>\n</ng-container>\n","import { Component, Input } from \"@angular/core\";\n\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Component({\n  selector: \"app-collection-badge\",\n  templateUrl: \"collection-name-badge.component.html\",\n})\nexport class CollectionNameBadgeComponent {\n  @Input() collectionIds: string[];\n  @Input() collections: CollectionView[];\n\n  get shownCollections(): string[] {\n    return this.showXMore ? this.collectionIds.slice(0, 2) : this.collectionIds;\n  }\n\n  get showXMore(): boolean {\n    return this.collectionIds.length > 3;\n  }\n\n  get xMoreCount(): number {\n    return this.collectionIds.length - 2;\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Pipe({\n  name: \"orgNameFromId\",\n  pure: true,\n})\nexport class GetOrgNameFromIdPipe implements PipeTransform {\n  transform(value: string, organizations: Organization[]) {\n    const orgName = organizations.find((o) => o.id === value)?.name;\n    return orgName;\n  }\n}\n","<ng-container>\n  <bit-table\n    *ngIf=\"filteredCiphers.length || filteredCollections.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <ng-container header>\n      <tr>\n        <th bitCell class=\"tw-min-w-fit\" colspan=\"2\">\n          <input\n            class=\"tw-mr-2\"\n            type=\"checkbox\"\n            id=\"checkAll\"\n            (change)=\"checkAll($any($event.target).checked)\"\n            [(ngModel)]=\"isAllChecked\"\n          />\n          <label class=\"tw-mb-0 !tw-font-bold !tw-text-muted\" for=\"checkAll\">{{\n            \"all\" | i18n\n          }}</label>\n        </th>\n        <th bitCell class=\"tw-w-1/2\">{{ \"name\" | i18n }}</th>\n        <th bitCell class=\"tw-w-1/2\">\n          <ng-container *ngIf=\"!organization\">{{ \"owner\" | i18n }}</ng-container>\n          <ng-container *ngIf=\"organization\">\n            {{ (activeFilter.selectedCollectionNode ? \"groups\" : \"collections\") | i18n }}\n          </ng-container>\n        </th>\n        <th bitCell class=\"tw-min-w-fit\">\n          <button\n            [bitMenuTriggerFor]=\"headerMenu\"\n            bitIconButton=\"bwi-ellipsis-v\"\n            size=\"small\"\n            type=\"button\"\n            appA11yTitle=\"{{ 'options' | i18n }}\"\n          ></button>\n          <bit-menu #headerMenu>\n            <ng-container>\n              <button\n                class=\"dropdown-item\"\n                appStopClick\n                (click)=\"bulkMove()\"\n                *ngIf=\"!activeFilter.isDeleted && !organization\"\n              >\n                <i class=\"bwi bwi-fw bwi-folder\" aria-hidden=\"true\"></i>\n                {{ \"moveSelected\" | i18n }}\n              </button>\n              <button\n                class=\"dropdown-item\"\n                appStopClick\n                (click)=\"bulkShare()\"\n                *ngIf=\"!activeFilter.isDeleted && !organization\"\n              >\n                <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n                {{ \"moveSelectedToOrg\" | i18n }}\n              </button>\n              <button class=\"dropdown-item\" (click)=\"bulkRestore()\" *ngIf=\"activeFilter.isDeleted\">\n                <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n                {{ \"restoreSelected\" | i18n }}\n              </button>\n              <button class=\"dropdown-item text-danger\" (click)=\"bulkDelete()\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{\n                  (activeFilter.isDeleted ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n\n                }}\n              </button>\n            </ng-container>\n          </bit-menu>\n        </th>\n      </tr>\n    </ng-container>\n    <ng-container body>\n      <tr bitRow *ngFor=\"let col of filteredCollections\">\n        <td bitCell (click)=\"selectRow(col)\">\n          <input\n            *ngIf=\"organization && col.node.id !== null\"\n            class=\"tw-cursor-pointer\"\n            type=\"checkbox\"\n            [(ngModel)]=\"$any(col).checked\"\n            appStopProp\n          />\n        </td>\n        <td bitCell (click)=\"selectRow(col)\">\n          <div class=\"icon\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-fw bwi-lg bwi-collection\"></i>\n          </div>\n        </td>\n        <td bitCell class=\"tw-font-bold\" (click)=\"selectRow(col)\">\n          <button bitLink linkType=\"secondary\" (click)=\"navigateCollection(col)\">\n            {{ col.node.name }}\n          </button>\n        </td>\n        <td bitCell (click)=\"selectRow(col)\">\n          <ng-container *ngIf=\"!organization\">\n            <app-org-badge\n              organizationName=\"{{ col.node.organizationId | orgNameFromId: organizations }}\"\n              [profileName]=\"profileName\"\n              (onOrganizationClicked)=\"onOrganizationClicked(col.node.organizationId)\"\n            >\n            </app-org-badge>\n          </ng-container>\n          <ng-container *ngIf=\"organization && activeFilter.selectedCollectionNode\">\n            <app-group-badge\n              *ngIf=\"col.node.groups\"\n              [selectedGroups]=\"col.node.groups\"\n              [allGroups]=\"groups\"\n            ></app-group-badge>\n          </ng-container>\n        </td>\n        <td bitCell>\n          <button\n            *ngIf=\"organization && col.node.id !== null\"\n            [bitMenuTriggerFor]=\"collectionOptions\"\n            size=\"small\"\n            bitIconButton=\"bwi-ellipsis-v\"\n            type=\"button\"\n            appA11yTitle=\"{{ 'options' | i18n }}\"\n          ></button>\n          <bit-menu #collectionOptions>\n            <button\n              *ngIf=\"organization?.canEditAssignedCollections || organization?.canEditAnyCollection\"\n              bitMenuItem\n              (click)=\"editCollection(col.node, 'info')\"\n            >\n              <i class=\"bwi bwi-fw bwi-pencil-square\" aria-hidden=\"true\"></i>\n              {{ \"editInfo\" | i18n }}\n            </button>\n            <button\n              *ngIf=\"organization?.canEditAssignedCollections || organization?.canEditAnyCollection\"\n              bitMenuItem\n              (click)=\"editCollection(col.node, 'access')\"\n            >\n              <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n              {{ \"access\" | i18n }}\n            </button>\n            <button\n              *ngIf=\"\n                organization?.canDeleteAssignedCollections || organization?.canDeleteAnyCollection\n              \"\n              bitMenuItem\n              (click)=\"deleteCollection(col.node)\"\n            >\n              <span class=\"tw-text-danger\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </span>\n            </button>\n          </bit-menu>\n        </td>\n      </tr>\n      <tr bitRow *ngFor=\"let c of filteredCiphers\">\n        <td bitCell (click)=\"selectRow(c)\">\n          <input type=\"checkbox\" [(ngModel)]=\"$any(c).checked\" appStopProp />\n        </td>\n        <td bitCell (click)=\"selectRow(c)\">\n          <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n        </td>\n        <td bitCell (click)=\"selectRow(c)\">\n          <a\n            appStopProp\n            [routerLink]=\"[]\"\n            [queryParams]=\"{ itemId: c.id }\"\n            queryParamsHandling=\"merge\"\n            title=\"{{ 'editItem' | i18n }}\"\n            >{{ c.name }}</a\n          >\n          <ng-container *ngIf=\"c.hasAttachments\">\n            <i\n              class=\"bwi bwi-paperclip\"\n              appStopProp\n              title=\"{{ 'attachments' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            <ng-container *ngIf=\"showFixOldAttachments(c)\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-warning\"\n                appStopProp\n                title=\"{{ 'attachmentsNeedFix' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachmentsNeedFix\" | i18n }}</span>\n            </ng-container>\n          </ng-container>\n          <br />\n          <small appStopProp>{{ c.subTitle }}</small>\n        </td>\n        <td bitCell>\n          <ng-container *ngIf=\"!organization\">\n            <app-org-badge\n              organizationName=\"{{ c.organizationId | orgNameFromId: organizations }}\"\n              profileName=\"{{ profileName }}\"\n              (onOrganizationClicked)=\"onOrganizationClicked(c.organizationId)\"\n            >\n            </app-org-badge>\n          </ng-container>\n          <ng-container *ngIf=\"organization && !activeFilter.selectedCollectionNode\">\n            <app-collection-badge\n              *ngIf=\"c.collectionIds\"\n              [collectionIds]=\"c.collectionIds\"\n              [collections]=\"vaultFilterService.filteredCollections$ | async\"\n            ></app-collection-badge>\n          </ng-container>\n        </td>\n        <td bitCell>\n          <button\n            [bitMenuTriggerFor]=\"cipherOptions\"\n            size=\"small\"\n            bitIconButton=\"bwi-ellipsis-v\"\n            type=\"button\"\n            appA11yTitle=\"{{ 'options' | i18n }}\"\n          ></button>\n          <bit-menu #cipherOptions>\n            <ng-container *ngIf=\"c.type === cipherType.Login && !c.isDeleted\">\n              <button bitMenuItem (click)=\"copy(c, c.login.username, 'username', 'Username')\">\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyUsername\" | i18n }}\n              </button>\n              <button\n                bitMenuItem\n                (click)=\"copy(c, c.login.password, 'password', 'Password')\"\n                *ngIf=\"c.viewPassword\"\n              >\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyPassword\" | i18n }}\n              </button>\n              <button\n                bitMenuItem\n                (click)=\"copy(c, c.login.totp, 'verificationCodeTotp', 'TOTP')\"\n                *ngIf=\"displayTotpCopyButton(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyVerificationCode\" | i18n }}\n              </button>\n              <button bitMenuItem *ngIf=\"c.login.canLaunch\" (click)=\"launch(c.login.launchUri)\">\n                <i class=\"bwi bwi-fw bwi-share-square\" aria-hidden=\"true\"></i>\n                {{ \"launch\" | i18n }}\n              </button>\n            </ng-container>\n            <button bitMenuItem (click)=\"attachments(c)\">\n              <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n              {{ \"attachments\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"((!organization && !c.organizationId) || organization) && !c.isDeleted\"\n              (click)=\"clone(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-files\" aria-hidden=\"true\"></i>\n              {{ \"clone\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"!organization && !c.organizationId && !c.isDeleted\"\n              (click)=\"share(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n              {{ \"moveToOrganization\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"c.organizationId && !c.isDeleted\"\n              (click)=\"editCipherCollections(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-collection\" aria-hidden=\"true\"></i>\n              {{ \"collections\" | i18n }}\n            </button>\n            <button bitMenuItem *ngIf=\"c.organizationId && accessEvents\" (click)=\"events(c)\">\n              <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n              {{ \"eventLogs\" | i18n }}\n            </button>\n            <button bitMenuItem (click)=\"restore(c)\" *ngIf=\"c.isDeleted\">\n              <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n              {{ \"restore\" | i18n }}\n            </button>\n            <button bitMenuItem (click)=\"deleteCipher(c)\">\n              <span class=\"tw-text-danger\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ (c.isDeleted ? \"permanentlyDelete\" : \"delete\") | i18n }}\n              </span>\n            </button>\n          </bit-menu>\n        </td>\n      </tr>\n    </ng-container>\n  </bit-table>\n  <div class=\"no-items\" *ngIf=\"!filteredCiphers.length && !filteredCollections.length\">\n    <ng-container *ngIf=\"!loaded\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </ng-container>\n    <ng-container *ngIf=\"loaded\">\n      <bit-icon [icon]=\"noItemIcon\" aria-hidden=\"true\"></bit-icon>\n      <p>{{ \"noItemsInList\" | i18n }}</p>\n      <button (click)=\"addCipher()\" class=\"btn btn-outline-primary\" *ngIf=\"showAddNew\">\n        <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"addItem\" | i18n }}\n      </button>\n    </ng-container>\n  </div>\n</ng-container>\n","import { Component, EventEmitter, Input, OnDestroy, Output } from \"@angular/core\";\nimport { lastValueFrom } from \"rxjs\";\n\nimport { VaultItemsComponent as BaseVaultItemsComponent } from \"@bitwarden/angular/components/vault-items.component\";\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { DialogService, Icons } from \"@bitwarden/components\";\n\nimport { GroupView } from \"../organizations/core\";\n\nimport {\n  BulkDeleteDialogResult,\n  openBulkDeleteDialog,\n} from \"./bulk-action-dialogs/bulk-delete-dialog/bulk-delete-dialog.component\";\nimport {\n  BulkMoveDialogResult,\n  openBulkMoveDialog,\n} from \"./bulk-action-dialogs/bulk-move-dialog/bulk-move-dialog.component\";\nimport {\n  BulkRestoreDialogResult,\n  openBulkRestoreDialog,\n} from \"./bulk-action-dialogs/bulk-restore-dialog/bulk-restore-dialog.component\";\nimport {\n  BulkShareDialogResult,\n  openBulkShareDialog,\n} from \"./bulk-action-dialogs/bulk-share-dialog/bulk-share-dialog.component\";\nimport { VaultFilterService } from \"./vault-filter/services/abstractions/vault-filter.service\";\nimport { VaultFilter } from \"./vault-filter/shared/models/vault-filter.model\";\nimport { CollectionFilter } from \"./vault-filter/shared/models/vault-filter.type\";\n\nconst MaxCheckedCount = 500;\n\nexport type VaultItemRow = (CipherView | TreeNode<CollectionFilter>) & { checked?: boolean };\n\n@Component({\n  selector: \"app-vault-items\",\n  templateUrl: \"vault-items.component.html\",\n})\nexport class VaultItemsComponent extends BaseVaultItemsComponent implements OnDestroy {\n  @Input() showAddNew = true;\n  @Input() activeFilter: VaultFilter;\n  @Output() activeFilterChanged = new EventEmitter<VaultFilter>();\n  @Output() onAttachmentsClicked = new EventEmitter<CipherView>();\n  @Output() onShareClicked = new EventEmitter<CipherView>();\n  @Output() onEditCipherCollectionsClicked = new EventEmitter<CipherView>();\n  @Output() onCloneClicked = new EventEmitter<CipherView>();\n  @Output() onOrganzationBadgeClicked = new EventEmitter<string>();\n\n  cipherType = CipherType;\n  actionPromise: Promise<any>;\n  userHasPremiumAccess = false;\n  organizations: Organization[] = [];\n  profileName: string;\n  noItemIcon = Icons.Search;\n  groups: GroupView[] = [];\n\n  protected pageSizeLimit = 200;\n  protected isAllChecked = false;\n  protected didScroll = false;\n  protected currentPagedCiphersCount = 0;\n  protected currentPagedCollectionsCount = 0;\n  protected refreshing = false;\n\n  protected pagedCiphers: CipherView[] = [];\n  protected pagedCollections: TreeNode<CollectionFilter>[] = [];\n  protected searchedCollections: TreeNode<CollectionFilter>[] = [];\n\n  get collections(): TreeNode<CollectionFilter>[] {\n    return this.activeFilter?.selectedCollectionNode?.children ?? [];\n  }\n\n  get filteredCollections(): TreeNode<CollectionFilter>[] {\n    if (this.isPaging()) {\n      return this.pagedCollections;\n    }\n\n    if (this.searchService.isSearchable(this.searchText)) {\n      return this.searchedCollections;\n    }\n\n    return this.collections;\n  }\n\n  get filteredCiphers(): CipherView[] {\n    return this.isPaging() ? this.pagedCiphers : this.ciphers;\n  }\n\n  constructor(\n    searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected vaultFilterService: VaultFilterService,\n    protected cipherService: CipherService,\n    protected eventCollectionService: EventCollectionService,\n    protected totpService: TotpService,\n    protected stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService,\n    protected dialogService: DialogService,\n    protected logService: LogService,\n    private searchPipe: SearchPipe,\n    private organizationService: OrganizationService,\n    private tokenService: TokenService\n  ) {\n    super(searchService);\n  }\n\n  ngOnDestroy() {\n    this.checkAll(false);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.checkAll(false);\n    this.isAllChecked = false;\n    this.pagedCollections = [];\n    if (!this.refreshing && this.isPaging()) {\n      this.currentPagedCollectionsCount = 0;\n      this.currentPagedCiphersCount = 0;\n    }\n    await super.applyFilter(filter);\n  }\n\n  // load() is called after the page loads and the first sync has completed.\n  // Do not use ngOnInit() for anything that requires sync data.\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    await super.load(filter, deleted);\n    this.updateSearchedCollections(this.collections);\n    this.profileName = await this.tokenService.getName();\n    this.organizations = await this.organizationService.getAll();\n    this.userHasPremiumAccess = await this.stateService.getCanAccessPremium();\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter, this.deleted);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  loadMore() {\n    // If we have less rows than the page size, we don't need to page anything\n    if (this.ciphers.length + (this.collections?.length || 0) <= this.pageSizeLimit) {\n      return;\n    }\n\n    let pageSpaceLeft = this.pageSizeLimit;\n    if (\n      this.refreshing &&\n      this.pagedCiphers.length + this.pagedCollections.length === 0 &&\n      this.currentPagedCiphersCount + this.currentPagedCollectionsCount > this.pageSizeLimit\n    ) {\n      // When we refresh, we want to load the previous amount of items, not restart the paging\n      pageSpaceLeft = this.currentPagedCiphersCount + this.currentPagedCollectionsCount;\n    }\n    // if there are still collections to show\n    if (this.collections?.length > this.pagedCollections.length) {\n      const collectionsToAdd = this.collections.slice(\n        this.pagedCollections.length,\n        this.currentPagedCollectionsCount + pageSpaceLeft\n      );\n      this.pagedCollections = this.pagedCollections.concat(collectionsToAdd);\n      // set the current count to the new count of paged collections\n      this.currentPagedCollectionsCount = this.pagedCollections.length;\n      // subtract the available page size by the amount of collections we just added, default to 0 if negative\n      pageSpaceLeft =\n        collectionsToAdd.length > pageSpaceLeft ? 0 : pageSpaceLeft - collectionsToAdd.length;\n    }\n    // if we have room left to show ciphers and we have ciphers to show\n    if (pageSpaceLeft > 0 && this.ciphers.length > this.pagedCiphers.length) {\n      this.pagedCiphers = this.pagedCiphers.concat(\n        this.ciphers.slice(this.pagedCiphers.length, this.currentPagedCiphersCount + pageSpaceLeft)\n      );\n      // set the current count to the new count of paged ciphers\n      this.currentPagedCiphersCount = this.pagedCiphers.length;\n    }\n    // set a flag if we actually loaded the second page while paging\n    this.didScroll = this.pagedCiphers.length + this.pagedCollections.length > this.pageSizeLimit;\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    const totalRows =\n      this.ciphers.length + (this.activeFilter?.selectedCollectionNode?.children.length || 0);\n    return !searching && totalRows > this.pageSizeLimit;\n  }\n\n  async resetPaging() {\n    this.pagedCollections = [];\n    this.pagedCiphers = [];\n    this.loadMore();\n  }\n\n  async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n    this.updateSearchedCollections(this.collections);\n    this.resetPaging();\n  }\n\n  launch(uri: string) {\n    this.platformUtilsService.launchUri(uri);\n  }\n\n  async attachments(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onAttachmentsClicked.emit(c);\n  }\n\n  async share(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onShareClicked.emit(c);\n  }\n\n  editCipherCollections(c: CipherView) {\n    this.onEditCipherCollectionsClicked.emit(c);\n  }\n\n  async clone(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onCloneClicked.emit(c);\n  }\n\n  async deleteCipher(c: CipherView): Promise<boolean> {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    if (this.actionPromise != null) {\n      return;\n    }\n    const permanent = c.isDeleted;\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        permanent ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(permanent ? \"permanentlyDeleteItem\" : \"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.deleteCipherWithServer(c.id, permanent);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(permanent ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkDelete() {\n    if (!(await this.repromptCipher())) {\n      return;\n    }\n\n    const selectedIds = this.selectedCipherIds;\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const dialog = openBulkDeleteDialog(this.dialogService, {\n      data: { permanent: this.deleted, cipherIds: selectedIds },\n    });\n\n    const result = await lastValueFrom(dialog.closed);\n    if (result === BulkDeleteDialogResult.Deleted) {\n      this.actionPromise = this.refresh();\n      await this.actionPromise;\n      this.actionPromise = null;\n    }\n  }\n\n  async restore(c: CipherView): Promise<boolean> {\n    if (this.actionPromise != null || !c.isDeleted) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.cipherService.restoreWithServer(c.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkRestore() {\n    if (!(await this.repromptCipher())) {\n      return;\n    }\n\n    const selectedCipherIds = this.selectedCipherIds;\n    if (selectedCipherIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const dialog = openBulkRestoreDialog(this.dialogService, {\n      data: { cipherIds: selectedCipherIds },\n    });\n\n    const result = await lastValueFrom(dialog.closed);\n    if (result === BulkRestoreDialogResult.Restored) {\n      this.actionPromise = this.refresh();\n      await this.actionPromise;\n      this.actionPromise = null;\n    }\n  }\n\n  async bulkShare() {\n    if (!(await this.repromptCipher())) {\n      return;\n    }\n\n    const selectedCiphers = this.selectedCiphers;\n    if (selectedCiphers.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const dialog = openBulkShareDialog(this.dialogService, { data: { ciphers: selectedCiphers } });\n\n    const result = await lastValueFrom(dialog.closed);\n    if (result === BulkShareDialogResult.Shared) {\n      this.actionPromise = this.refresh();\n      await this.actionPromise;\n      this.actionPromise = null;\n    }\n  }\n\n  async bulkMove() {\n    if (!(await this.repromptCipher())) {\n      return;\n    }\n\n    const selectedCipherIds = this.selectedCipherIds;\n    if (selectedCipherIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const dialog = openBulkMoveDialog(this.dialogService, {\n      data: { cipherIds: selectedCipherIds },\n    });\n\n    const result = await lastValueFrom(dialog.closed);\n    if (result === BulkMoveDialogResult.Moved) {\n      this.actionPromise = this.refresh();\n      await this.actionPromise;\n      this.actionPromise = null;\n    }\n  }\n\n  async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n    if (\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.repromptCipher(cipher))\n    ) {\n      return;\n    }\n\n    if (value == null || (aType === \"TOTP\" && !this.displayTotpCopyButton(cipher))) {\n      return;\n    } else if (value === cipher.login.totp) {\n      value = await this.totpService.getCode(value);\n    }\n\n    if (!cipher.viewPassword) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\" || typeI18nKey === \"verificationCodeTotp\") {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledHiddenFieldVisible,\n        cipher.id\n      );\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventCollectionService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n    }\n  }\n\n  selectRow(item: VaultItemRow) {\n    if (item instanceof CipherView) {\n      this.checkRow(item);\n    } else if (item instanceof TreeNode) {\n      this.navigateCollection(item);\n    }\n  }\n\n  navigateCollection(node: TreeNode<CollectionFilter>) {\n    const filter = this.activeFilter;\n    filter.selectedCollectionNode = node;\n    this.activeFilterChanged.emit(filter);\n  }\n\n  checkAll(select: boolean) {\n    if (select) {\n      this.checkAll(false);\n    }\n    const items: VaultItemRow[] = this.ciphers;\n    if (!items) {\n      return;\n    }\n\n    const selectCount = select && items.length > MaxCheckedCount ? MaxCheckedCount : items.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkRow(items[i], select);\n    }\n  }\n\n  checkRow(item: VaultItemRow, select?: boolean) {\n    // Collections can't be managed in end user vault\n    if (!(item instanceof CipherView)) {\n      return;\n    }\n    item.checked = select ?? !item.checked;\n  }\n\n  get selectedCiphers(): CipherView[] {\n    if (!this.ciphers) {\n      return [];\n    }\n    return this.ciphers.filter((c) => !!(c as VaultItemRow).checked);\n  }\n\n  get selectedCipherIds(): string[] {\n    return this.selectedCiphers.map((c) => c.id);\n  }\n\n  displayTotpCopyButton(cipher: CipherView) {\n    return (\n      (cipher?.login?.hasTotp ?? false) && (cipher.organizationUseTotp || this.userHasPremiumAccess)\n    );\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (await this.repromptCipher(cipher)) {\n      super.selectCipher(cipher);\n    }\n  }\n\n  onOrganizationClicked(organizationId: string) {\n    this.onOrganzationBadgeClicked.emit(organizationId);\n  }\n\n  events(c: CipherView) {\n    // TODO: This should be removed but is needed since we reuse the same template\n  }\n\n  async deleteCollection(collection: CollectionView): Promise<void> {\n    // TODO: This should be removed but is needed since we reuse the same template\n  }\n\n  async editCollection(c: CollectionView, tab: \"info\" | \"access\"): Promise<void> {\n    // TODO: This should be removed but is needed since we reuse the same template\n  }\n\n  protected updateSearchedCollections(collections: TreeNode<CollectionFilter>[]) {\n    if (this.searchService.isSearchable(this.searchText)) {\n      this.searchedCollections = this.searchPipe.transform(\n        collections,\n        this.searchText,\n        (collection) => collection.node.name,\n        (collection) => collection.node.id\n      );\n    }\n  }\n\n  protected deleteCipherWithServer(id: string, permanent: boolean) {\n    return permanent\n      ? this.cipherService.deleteWithServer(id)\n      : this.cipherService.softDeleteWithServer(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return c.hasOldAttachments && c.organizationId == null;\n  }\n\n  protected async repromptCipher(c?: CipherView) {\n    if (c) {\n      return (\n        c.reprompt === CipherRepromptType.None ||\n        (await this.passwordRepromptService.showPasswordPrompt())\n      );\n    } else {\n      const selectedCiphers = this.selectedCiphers;\n      const notProtected = !selectedCiphers.find(\n        (cipher) => cipher.reprompt !== CipherRepromptType.None\n      );\n\n      return notProtected || (await this.passwordRepromptService.showPasswordPrompt());\n    }\n  }\n}\n","import { Component, EventEmitter, Input, OnDestroy, Output } from \"@angular/core\";\nimport { lastValueFrom } from \"rxjs\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { DialogService } from \"@bitwarden/components\";\n\nimport {\n  BulkDeleteDialogResult,\n  openBulkDeleteDialog,\n} from \"../../vault/bulk-action-dialogs/bulk-delete-dialog/bulk-delete-dialog.component\";\nimport { VaultFilterService } from \"../../vault/vault-filter/services/abstractions/vault-filter.service\";\nimport { CollectionFilter } from \"../../vault/vault-filter/shared/models/vault-filter.type\";\nimport {\n  VaultItemsComponent as BaseVaultItemsComponent,\n  VaultItemRow,\n} from \"../../vault/vault-items.component\";\nimport { GroupService } from \"../core/services/group/group.service\";\nimport {\n  CollectionDialogResult,\n  CollectionDialogTabType,\n  openCollectionDialog,\n} from \"../shared/components/collection-dialog/collection-dialog.component\";\n\nconst MaxCheckedCount = 500;\n\n@Component({\n  selector: \"app-org-vault-items\",\n  templateUrl: \"../../vault/vault-items.component.html\",\n})\nexport class VaultItemsComponent extends BaseVaultItemsComponent implements OnDestroy {\n  @Input() set initOrganization(value: Organization) {\n    this.organization = value;\n    this.changeOrganization();\n  }\n  @Output() onEventsClicked = new EventEmitter<CipherView>();\n\n  protected allCiphers: CipherView[] = [];\n\n  constructor(\n    searchService: SearchService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cipherService: CipherService,\n    vaultFilterService: VaultFilterService,\n    eventCollectionService: EventCollectionService,\n    totpService: TotpService,\n    passwordRepromptService: PasswordRepromptService,\n    dialogService: DialogService,\n    logService: LogService,\n    stateService: StateService,\n    organizationService: OrganizationService,\n    tokenService: TokenService,\n    searchPipe: SearchPipe,\n    protected groupService: GroupService,\n    private apiService: ApiService\n  ) {\n    super(\n      searchService,\n      i18nService,\n      platformUtilsService,\n      vaultFilterService,\n      cipherService,\n      eventCollectionService,\n      totpService,\n      stateService,\n      passwordRepromptService,\n      dialogService,\n      logService,\n      searchPipe,\n      organizationService,\n      tokenService\n    );\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n\n  async changeOrganization() {\n    this.groups = await this.groupService.getAll(this.organization?.id);\n    await this.loadCiphers();\n    await this.reload(this.activeFilter.buildFilter());\n  }\n\n  async loadCiphers() {\n    if (this.organization?.canEditAnyCollection) {\n      this.accessEvents = this.organization?.useEvents;\n      this.allCiphers = await this.cipherService.getAllFromApiForOrganization(\n        this.organization?.id\n      );\n    } else {\n      this.allCiphers = (await this.cipherService.getAllDecrypted()).filter(\n        (c) => c.organizationId === this.organization?.id\n      );\n    }\n    await this.searchService.indexCiphers(this.organization?.id, this.allCiphers);\n  }\n\n  async refreshCollections(): Promise<void> {\n    await this.vaultFilterService.reloadCollections();\n    if (this.activeFilter.selectedCollectionNode) {\n      this.activeFilter.selectedCollectionNode =\n        await this.vaultFilterService.getCollectionNodeFromTree(\n          this.activeFilter.selectedCollectionNode.node.id\n        );\n    }\n  }\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted ?? false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async refresh() {\n    await this.loadCiphers();\n    await this.refreshCollections();\n    super.refresh();\n  }\n\n  async search(timeout: number = null) {\n    await super.search(timeout, this.allCiphers);\n  }\n\n  events(c: CipherView) {\n    this.onEventsClicked.emit(c);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return this.organization?.canEditAnyCollection && c.hasOldAttachments;\n  }\n\n  checkAll(select: boolean) {\n    if (select) {\n      this.checkAll(false);\n    }\n\n    const items: VaultItemRow[] = [...this.collections, ...this.ciphers];\n    if (!items.length) {\n      return;\n    }\n\n    const selectCount = select && items.length > MaxCheckedCount ? MaxCheckedCount : items.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkRow(items[i], select);\n    }\n  }\n\n  selectRow(item: VaultItemRow) {\n    this.checkRow(item);\n  }\n\n  checkRow(item: VaultItemRow, select?: boolean) {\n    if (item instanceof TreeNode && item.node.name == \"Unassigned\") {\n      return;\n    }\n    item.checked = select ?? !item.checked;\n  }\n\n  get selectedCollections(): TreeNode<CollectionFilter>[] {\n    if (!this.collections) {\n      return [];\n    }\n    return this.collections.filter((c) => !!(c as VaultItemRow).checked);\n  }\n\n  get selectedCollectionIds(): string[] {\n    return this.selectedCollections.map((c) => c.node.id);\n  }\n\n  async editCollection(c: CollectionView, tab: \"info\" | \"access\"): Promise<void> {\n    const tabType = tab == \"info\" ? CollectionDialogTabType.Info : CollectionDialogTabType.Access;\n\n    const dialog = openCollectionDialog(this.dialogService, {\n      data: { collectionId: c?.id, organizationId: this.organization?.id, initialTab: tabType },\n    });\n\n    const result = await lastValueFrom(dialog.closed);\n    if (result === CollectionDialogResult.Saved || result === CollectionDialogResult.Deleted) {\n      this.actionPromise = this.refresh();\n      await this.actionPromise;\n      this.actionPromise = null;\n    }\n  }\n\n  async deleteCollection(collection: CollectionView): Promise<void> {\n    if (!this.organization.canDeleteAssignedCollections) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"missingPermissions\")\n      );\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      collection.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n    try {\n      this.actionPromise = this.apiService.deleteCollection(this.organization?.id, collection.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", collection.name)\n      );\n      await this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async bulkDelete() {\n    if (!(await this.repromptCipher())) {\n      return;\n    }\n\n    const selectedCipherIds = this.selectedCipherIds;\n    const selectedCollectionIds = this.deleted ? null : this.selectedCollectionIds;\n\n    if (!selectedCipherIds?.length && !selectedCollectionIds?.length) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const dialog = openBulkDeleteDialog(this.dialogService, {\n      data: {\n        permanent: this.deleted,\n        cipherIds: selectedCipherIds,\n        collectionIds: selectedCollectionIds,\n        organization: this.organization,\n      },\n    });\n\n    const result = await lastValueFrom(dialog.closed);\n    if (result === BulkDeleteDialogResult.Deleted) {\n      this.actionPromise = this.refresh();\n      await this.actionPromise;\n      this.actionPromise = null;\n    }\n  }\n\n  protected deleteCipherWithServer(id: string, permanent: boolean) {\n    if (!this.organization?.canEditAnyCollection) {\n      return super.deleteCipherWithServer(id, this.deleted);\n    }\n    return permanent\n      ? this.apiService.deleteCipherAdmin(id)\n      : this.apiService.putDeleteCipherAdmin(id);\n  }\n}\n","<ng-template>\n  <i *ngIf=\"icon\" class=\"bwi {{ icon }} tw-mr-1\" aria-hidden=\"true\"></i>\n  <ng-content></ng-content>\n</ng-template>\n","import { Component, EventEmitter, Input, Output, TemplateRef, ViewChild } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-breadcrumb\",\n  templateUrl: \"./breadcrumb.component.html\",\n})\nexport class BreadcrumbComponent {\n  @Input()\n  icon?: string;\n\n  @Input()\n  route?: string | any[] = undefined;\n\n  @Input()\n  queryParams?: Record<string, string> = {};\n\n  @Output()\n  click = new EventEmitter();\n\n  @ViewChild(TemplateRef, { static: true }) content: TemplateRef<unknown>;\n\n  onClick(args: unknown) {\n    this.click.next(args);\n  }\n}\n","<ng-container *ngFor=\"let breadcrumb of beforeOverflow; let last = last\">\n  <ng-container *ngIf=\"breadcrumb.route\">\n    <a\n      bitLink\n      linkType=\"primary\"\n      class=\"tw-my-2 tw-inline-block\"\n      [routerLink]=\"breadcrumb.route\"\n      [queryParams]=\"breadcrumb.queryParams\"\n    >\n      <ng-container [ngTemplateOutlet]=\"breadcrumb.content\"></ng-container>\n    </a>\n  </ng-container>\n  <ng-container *ngIf=\"!breadcrumb.route\">\n    <button\n      bitLink\n      linkType=\"primary\"\n      class=\"tw-my-2 tw-inline-block\"\n      (click)=\"breadcrumb.onClick($event)\"\n    >\n      <ng-container [ngTemplateOutlet]=\"breadcrumb.content\"></ng-container>\n    </button>\n  </ng-container>\n  <i *ngIf=\"!last\" class=\"bwi bwi-angle-right tw-mx-1.5 tw-text-main\"></i>\n</ng-container>\n\n<ng-container *ngIf=\"hasOverflow\">\n  <i *ngIf=\"beforeOverflow.length > 0\" class=\"bwi bwi-angle-right tw-mx-1.5 tw-text-main\"></i>\n\n  <button\n    bitIconButton=\"bwi-ellipsis-h\"\n    [bitMenuTriggerFor]=\"overflowMenu\"\n    size=\"small\"\n    aria-haspopup\n  ></button>\n\n  <bit-menu #overflowMenu>\n    <ng-container *ngFor=\"let breadcrumb of overflow\">\n      <ng-container *ngIf=\"breadcrumb.route\">\n        <a\n          bitMenuItem\n          linkType=\"primary\"\n          [routerLink]=\"breadcrumb.route\"\n          [queryParams]=\"breadcrumb.queryParams\"\n        >\n          <ng-container [ngTemplateOutlet]=\"breadcrumb.content\"></ng-container>\n        </a>\n      </ng-container>\n      <ng-container *ngIf=\"!breadcrumb.route\">\n        <button bitMenuItem linkType=\"primary\" (click)=\"breadcrumb.onClick($event)\">\n          <ng-container [ngTemplateOutlet]=\"breadcrumb.content\"></ng-container>\n        </button>\n      </ng-container>\n    </ng-container>\n  </bit-menu>\n  <i class=\"bwi bwi-angle-right tw-mx-1.5 tw-text-main\"></i>\n\n  <ng-container *ngFor=\"let breadcrumb of afterOverflow; let last = last\">\n    <ng-container *ngIf=\"breadcrumb.route\">\n      <a\n        bitLink\n        linkType=\"primary\"\n        class=\"tw-my-2 tw-inline-block\"\n        [routerLink]=\"breadcrumb.route\"\n        [queryParams]=\"breadcrumb.queryParams\"\n      >\n        <ng-container [ngTemplateOutlet]=\"breadcrumb.content\"></ng-container>\n      </a>\n    </ng-container>\n    <ng-container *ngIf=\"!breadcrumb.route\">\n      <button\n        bitLink\n        linkType=\"primary\"\n        class=\"tw-my-2 tw-inline-block\"\n        (click)=\"breadcrumb.onClick($event)\"\n      >\n        <ng-container [ngTemplateOutlet]=\"breadcrumb.content\"></ng-container>\n      </button>\n    </ng-container>\n    <i *ngIf=\"!last\" class=\"bwi bwi-angle-right tw-mx-1.5 tw-text-main\"></i>\n  </ng-container>\n</ng-container>\n","import { Component, ContentChildren, Input, QueryList } from \"@angular/core\";\n\nimport { BreadcrumbComponent } from \"./breadcrumb.component\";\n\n@Component({\n  selector: \"bit-breadcrumbs\",\n  templateUrl: \"./breadcrumbs.component.html\",\n})\nexport class BreadcrumbsComponent {\n  @Input()\n  show = 3;\n\n  private breadcrumbs: BreadcrumbComponent[] = [];\n\n  @ContentChildren(BreadcrumbComponent)\n  protected set breadcrumbList(value: QueryList<BreadcrumbComponent>) {\n    this.breadcrumbs = value.toArray();\n  }\n\n  protected get beforeOverflow() {\n    if (this.hasOverflow) {\n      return this.breadcrumbs.slice(0, this.show - 1);\n    }\n\n    return this.breadcrumbs;\n  }\n\n  protected get overflow() {\n    return this.breadcrumbs.slice(this.show - 1, -1);\n  }\n\n  protected get afterOverflow() {\n    return this.breadcrumbs.slice(-1);\n  }\n\n  protected get hasOverflow() {\n    return this.breadcrumbs.length > this.show;\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"groupings\">\n        <div class=\"content\">\n          <div class=\"inner-content\">\n            <app-organization-vault-filter\n              #vaultFilter\n              [organization]=\"organization\"\n              [activeFilter]=\"activeFilter\"\n              (activeFilterChanged)=\"applyVaultFilter($event)\"\n              (onSearchTextChanged)=\"filterSearchText($event)\"\n            ></app-organization-vault-filter>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <bit-breadcrumbs *ngIf=\"breadcrumbs.length > 0\">\n        <bit-breadcrumb\n          *ngFor=\"let collection of breadcrumbs; let first = first\"\n          [icon]=\"first ? undefined : 'bwi-collection'\"\n          (click)=\"applyCollectionFilter(collection)\"\n        >\n          <!-- First node in the tree contains a translation key. The rest come from user input. -->\n          <ng-container *ngIf=\"first\">{{ collection.node.name | i18n }}</ng-container>\n          <ng-template *ngIf=\"!first\">{{ collection.node.name }}</ng-template>\n        </bit-breadcrumb>\n      </bit-breadcrumbs>\n      <div class=\"tw-mb-4 tw-flex\">\n        <h1>\n          {{ \"vaultItems\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"vaultItemsComponent.actionPromise\">\n            <ng-container *ngIf=\"$any(actionSpinner).loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div *ngIf=\"!activeFilter.isDeleted\" class=\"ml-auto d-flex\">\n          <div *ngIf=\"organization.canCreateNewCollections\" class=\"dropdown mr-2\" appListDropdown>\n            <button\n              class=\"btn\"\n              bitButton\n              buttonType=\"primary\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              id=\"newItemDropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'new' | i18n }}\"\n            >\n              {{ \"new\" | i18n }}<i class=\"bwi bwi-angle-down tw-ml-2\" aria-hidden=\"true\"></i>\n            </button>\n            <div\n              id=\"dropdown\"\n              class=\"dropdown-menu dropdown-menu-right tw-mt-2\"\n              aria-labelledby=\"newItemDropdown\"\n            >\n              <button class=\"dropdown-item\" appStopClick (click)=\"addCipher()\">\n                <i class=\"bwi bwi-fw bwi-globe\" aria-hidden=\"true\"></i>\n                {{ \"item\" | i18n }}\n              </button>\n              <button class=\"dropdown-item\" appStopClick (click)=\"addCollection()\">\n                <i class=\"bwi bwi-fw bwi-collection\" aria-hidden=\"true\"></i>\n                {{ \"collection\" | i18n }}\n              </button>\n            </div>\n          </div>\n          <button\n            *ngIf=\"!organization?.canCreateNewCollections\"\n            type=\"button\"\n            bitButton\n            buttonType=\"primary\"\n            (click)=\"addCipher()\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"newItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout\n        type=\"warning\"\n        *ngIf=\"activeFilter.isDeleted\"\n        icon=\"bwi bwi-exclamation-triangle\"\n      >\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-org-vault-items\n        [activeFilter]=\"activeFilter\"\n        [initOrganization]=\"organization\"\n        (activeFilterChanged)=\"applyVaultFilter($event)\"\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onEditCipherCollectionsClicked)=\"editCipherCollections($event)\"\n        (onEventsClicked)=\"viewEvents($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n      >\n      </app-org-vault-items>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #eventsTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { combineLatest, firstValueFrom, lastValueFrom, Subject } from \"rxjs\";\nimport { first, switchMap, takeUntil } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { DialogService } from \"@bitwarden/components\";\n\nimport { VaultFilterService } from \"../../vault/vault-filter/services/abstractions/vault-filter.service\";\nimport { VaultFilter } from \"../../vault/vault-filter/shared/models/vault-filter.model\";\nimport { CollectionFilter } from \"../../vault/vault-filter/shared/models/vault-filter.type\";\nimport { EntityEventsComponent } from \"../manage/entity-events.component\";\nimport {\n  CollectionDialogResult,\n  openCollectionDialog,\n} from \"../shared/components/collection-dialog\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { VaultFilterComponent } from \"./vault-filter/vault-filter.component\";\nimport { VaultItemsComponent } from \"./vault-items.component\";\n\nconst BroadcasterSubscriptionId = \"OrgVaultComponent\";\n\n@Component({\n  selector: \"app-org-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(\"vaultFilter\", { static: true })\n  vaultFilterComponent: VaultFilterComponent;\n  @ViewChild(VaultItemsComponent, { static: true }) vaultItemsComponent: VaultItemsComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n\n  organization: Organization;\n  trashCleanupWarning: string = null;\n  activeFilter: VaultFilter = new VaultFilter();\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    protected vaultFilterService: VaultFilterService,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private syncService: SyncService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private dialogService: DialogService,\n    private messagingService: MessagingService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async ngOnInit() {\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n\n    this.route.parent.params.pipe(takeUntil(this.destroy$)).subscribe((params) => {\n      this.organization = this.organizationService.get(params.organizationId);\n    });\n\n    this.route.queryParams.pipe(first(), takeUntil(this.destroy$)).subscribe((qParams) => {\n      this.vaultItemsComponent.searchText = this.vaultFilterComponent.searchText = qParams.search;\n    });\n\n    // verifies that the organization has been set\n    combineLatest([this.route.queryParams, this.route.parent.params])\n      .pipe(\n        switchMap(async ([qParams, params]) => {\n          const cipherId = getCipherIdFromParams(qParams);\n          if (!cipherId) {\n            return;\n          }\n          if (\n            // Handle users with implicit collection access since they use the admin endpoint\n            this.organization.canUseAdminCollections ||\n            (await this.cipherService.get(cipherId)) != null\n          ) {\n            this.editCipherId(cipherId);\n          } else {\n            this.platformUtilsService.showToast(\n              \"error\",\n              this.i18nService.t(\"errorOccurred\"),\n              this.i18nService.t(\"unknownCipher\")\n            );\n            this.router.navigate([], {\n              queryParams: { cipherId: null, itemId: null },\n              queryParamsHandling: \"merge\",\n            });\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n\n    if (!this.organization.canUseAdminCollections) {\n      this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n        this.ngZone.run(async () => {\n          switch (message.command) {\n            case \"syncCompleted\":\n              if (message.successfully) {\n                await Promise.all([\n                  this.vaultFilterService.reloadCollections(),\n                  this.vaultItemsComponent.refresh(),\n                ]);\n                this.changeDetectorRef.detectChanges();\n              }\n              break;\n          }\n        });\n      });\n      await this.syncService.fullSync(false);\n    }\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async applyVaultFilter(filter: VaultFilter) {\n    this.activeFilter = filter;\n    this.vaultItemsComponent.showAddNew = !this.activeFilter.isDeleted;\n    await this.vaultItemsComponent.reload(\n      this.activeFilter.buildFilter(),\n      this.activeFilter.isDeleted\n    );\n    this.go();\n  }\n\n  filterSearchText(searchText: string) {\n    this.vaultItemsComponent.searchText = searchText;\n    this.vaultItemsComponent.search(200);\n  }\n\n  async addCollection() {\n    const dialog = openCollectionDialog(this.dialogService, {\n      data: {\n        organizationId: this.organization?.id,\n        parentCollectionId: this.activeFilter.collectionId,\n      },\n    });\n    const result = await lastValueFrom(dialog.closed);\n    if (result === CollectionDialogResult.Saved || result === CollectionDialogResult.Deleted) {\n      this.vaultItemsComponent.actionPromise = this.vaultItemsComponent.refresh();\n      await this.vaultItemsComponent.actionPromise;\n      this.vaultItemsComponent.actionPromise = null;\n    }\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    if (this.organization.maxStorageGb == null || this.organization.maxStorageGb === 0) {\n      this.messagingService.send(\"upgradeOrganization\", { organizationId: cipher.organizationId });\n      return;\n    }\n\n    let madeAttachmentChanges = false;\n\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.vaultItemsComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const currCollections = await firstValueFrom(this.vaultFilterService.filteredCollections$);\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        comp.collectionIds = cipher.collectionIds;\n        comp.collections = currCollections.filter((c) => !c.readOnly && c.id != null);\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.organizationId = this.organization.id;\n    component.type = this.activeFilter.cipherType;\n    component.collections = (\n      await firstValueFrom(this.vaultFilterService.filteredCollections$)\n    ).filter((c) => !c.readOnly && c.id != null);\n    if (this.activeFilter.collectionId) {\n      component.collectionIds = [this.activeFilter.collectionId];\n    }\n  }\n\n  async editCipher(cipher: CipherView) {\n    return this.editCipherId(cipher?.id);\n  }\n\n  async editCipherId(cipherId: string) {\n    const cipher = await this.cipherService.get(cipherId);\n    if (cipher != null && cipher.reprompt != 0) {\n      if (!(await this.passwordRepromptService.showPasswordPrompt())) {\n        this.go({ cipherId: null, itemId: null });\n        return;\n      }\n    }\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipherId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n\n    modal.onClosedPromise().then(() => {\n      this.go({ cipherId: null, itemId: null });\n    });\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n    component.organizationId = this.organization.id;\n    component.collections = (\n      await firstValueFrom(this.vaultFilterService.filteredCollections$)\n    ).filter((c) => !c.readOnly && c.id != null);\n    component.collectionIds = cipher.collectionIds;\n  }\n\n  async viewEvents(cipher: CipherView) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = cipher.name;\n      comp.organizationId = this.organization.id;\n      comp.entityId = cipher.id;\n      comp.showUser = true;\n      comp.entity = \"cipher\";\n    });\n  }\n\n  get breadcrumbs(): TreeNode<CollectionFilter>[] {\n    if (!this.activeFilter.selectedCollectionNode) {\n      return [];\n    }\n\n    const collections = [this.activeFilter.selectedCollectionNode];\n    while (collections[collections.length - 1].parent != undefined) {\n      collections.push(collections[collections.length - 1].parent);\n    }\n\n    return collections\n      .map((c) => c)\n      .slice(1) // 1 for self\n      .reverse();\n  }\n\n  protected applyCollectionFilter(collection: TreeNode<CollectionFilter>) {\n    const filter = this.activeFilter;\n    filter.resetFilter();\n    filter.selectedCollectionNode = collection;\n    this.applyVaultFilter(filter);\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        type: this.activeFilter.cipherType,\n        collectionId: this.activeFilter.collectionId,\n        deleted: this.activeFilter.isDeleted || null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      queryParamsHandling: \"merge\",\n      replaceUrl: true,\n    });\n  }\n}\n\n/**\n * Allows backwards compatibility with\n * old links that used the original `cipherId` param\n */\nconst getCipherIdFromParams = (params: Params): string => {\n  return params[\"itemId\"] || params[\"cipherId\"];\n};\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { canAccessVaultTab } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\n\nimport { OrganizationPermissionsGuard } from \"../guards/org-permissions.guard\";\n\nimport { VaultComponent } from \"./vault.component\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: VaultComponent,\n    canActivate: [OrganizationPermissionsGuard],\n    data: { titleId: \"vaults\", organizationPermissions: canAccessVaultTab },\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VaultRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule } from \"../../shared/loose-components.module\";\nimport { SharedModule } from \"../../shared/shared.module\";\nimport { OrganizationBadgeModule } from \"../../vault/organization-badge/organization-badge.module\";\nimport { PipesModule } from \"../../vault/pipes/pipes.module\";\n\nimport { CollectionBadgeModule } from \"./collection-badge/collection-badge.module\";\nimport { GroupBadgeModule } from \"./group-badge/group-badge.module\";\nimport { VaultFilterModule } from \"./vault-filter/vault-filter.module\";\nimport { VaultItemsComponent } from \"./vault-items.component\";\nimport { VaultRoutingModule } from \"./vault-routing.module\";\nimport { VaultComponent } from \"./vault.component\";\n\n@NgModule({\n  imports: [\n    VaultRoutingModule,\n    VaultFilterModule,\n    SharedModule,\n    LooseComponentsModule,\n    GroupBadgeModule,\n    CollectionBadgeModule,\n    OrganizationBadgeModule,\n    PipesModule,\n  ],\n  declarations: [VaultComponent, VaultItemsComponent],\n  exports: [VaultComponent],\n})\nexport class VaultModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport {\n  canAccessOrgAdmin,\n  canAccessGroupsTab,\n  canAccessMembersTab,\n  canAccessVaultTab,\n  canAccessReportingTab,\n  canAccessSettingsTab,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { OrganizationPermissionsGuard } from \"./guards/org-permissions.guard\";\nimport { OrganizationRedirectGuard } from \"./guards/org-redirect.guard\";\nimport { OrganizationLayoutComponent } from \"./layouts/organization-layout.component\";\nimport { CollectionsComponent } from \"./manage/collections.component\";\nimport { GroupsComponent } from \"./manage/groups.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { VaultModule } from \"./vault/vault.module\";\n\nconst routes: Routes = [\n  {\n    path: \":organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuard, OrganizationPermissionsGuard],\n    data: {\n      organizationPermissions: canAccessOrgAdmin,\n    },\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        canActivate: [OrganizationRedirectGuard],\n        data: {\n          autoRedirectCallback: getOrganizationRoute,\n        },\n        children: [], // This is required to make the auto redirect work, },\n      },\n      {\n        path: \"vault\",\n        loadChildren: () => VaultModule,\n      },\n      {\n        path: \"settings\",\n        loadChildren: () => import(\"./settings\").then((m) => m.OrganizationSettingsModule),\n      },\n      {\n        path: \"members\",\n        loadChildren: () => import(\"./members\").then((m) => m.MembersModule),\n      },\n      {\n        path: \"groups\",\n        component: GroupsComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          titleId: \"groups\",\n          organizationPermissions: canAccessGroupsTab,\n        },\n      },\n      {\n        path: \"manage\",\n        component: ManageComponent,\n        children: [\n          {\n            path: \"collections\",\n            component: CollectionsComponent,\n            data: {\n              titleId: \"collections\",\n            },\n          },\n        ],\n      },\n      {\n        path: \"reporting\",\n        loadChildren: () =>\n          import(\"./reporting/organization-reporting.module\").then(\n            (m) => m.OrganizationReportingModule\n          ),\n      },\n      {\n        path: \"billing\",\n        loadChildren: () =>\n          import(\"./billing/organization-billing.module\").then((m) => m.OrganizationBillingModule),\n      },\n    ],\n  },\n];\n\nfunction getOrganizationRoute(organization: Organization): string {\n  if (canAccessVaultTab(organization)) {\n    return \"vault\";\n  }\n  if (canAccessMembersTab(organization)) {\n    return \"members\";\n  }\n  if (canAccessGroupsTab(organization)) {\n    return \"groups\";\n  }\n  if (canAccessReportingTab(organization)) {\n    return \"reporting\";\n  }\n  if (canAccessSettingsTab(organization)) {\n    return \"settings\";\n  }\n  return undefined;\n}\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { CoreOrganizationModule } from \"./core\";\nimport { GroupAddEditComponent } from \"./manage/group-add-edit.component\";\nimport { GroupsComponent } from \"./manage/groups.component\";\nimport { OrgUpgradeDialogComponent } from \"./manage/org-upgrade-dialog/org-upgrade-dialog.component\";\nimport { OrganizationsRoutingModule } from \"./organization-routing.module\";\nimport { SharedOrganizationModule } from \"./shared\";\nimport { AccessSelectorModule } from \"./shared/components/access-selector\";\n\n@NgModule({\n  imports: [\n    SharedOrganizationModule,\n    AccessSelectorModule,\n    CoreOrganizationModule,\n    OrganizationsRoutingModule,\n  ],\n  declarations: [GroupsComponent, GroupAddEditComponent, OrgUpgradeDialogComponent],\n})\nexport class OrganizationModule {}\n","export enum PlanSponsorshipType {\n  FamiliesForEnterprise = 0,\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Params } from \"@angular/router\";\n\nimport { BaseAcceptComponent } from \"../../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-family-sponsorship\",\n  templateUrl: \"accept-family-sponsorship.component.html\",\n})\nexport class AcceptFamilySponsorshipComponent extends BaseAcceptComponent {\n  failedShortMessage = \"inviteAcceptFailedShort\";\n  failedMessage = \"inviteAcceptFailed\";\n\n  requiredParameters = [\"email\", \"token\"];\n\n  async authedHandler(qParams: Params) {\n    this.router.navigate([\"/setup/families-for-enterprise\"], { queryParams: qParams });\n  }\n\n  async unauthedHandler(qParams: Params) {\n    if (!qParams.register) {\n      this.router.navigate([\"/login\"], { queryParams: { email: qParams.email } });\n    } else {\n      this.router.navigate([\"/register\"], { queryParams: { email: qParams.email } });\n    }\n  }\n}\n","import { PlanSponsorshipType } from \"../../../enums/planSponsorshipType\";\n\nexport class OrganizationSponsorshipRedeemRequest {\n  planSponsorshipType: PlanSponsorshipType;\n  sponsoredOrganizationId: string;\n}\n","<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"sponsoredFamiliesOffer\" | i18n }}</h1>\n  </div>\n  <div *ngIf=\"loading\" class=\"mt-5 d-flex justify-content-center\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </div>\n  <div *ngIf=\"!loading && badToken\" class=\"mt-5 d-flex justify-content-center\">\n    <span>{{ \"badToken\" | i18n }}</span>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    ngNativeValidate\n    *ngIf=\"!loading && !badToken\"\n  >\n    <p>\n      <span>{{ \"acceptBitwardenFamiliesHelp\" | i18n }}</span>\n    </p>\n    <div class=\"form-group col-6\">\n      <label for=\"availableSponsorshipOrg\">{{ \"sponsoredFamiliesSelectOffer\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        [(ngModel)]=\"selectedFamilyOrganizationId\"\n        class=\"form-control\"\n        required\n      >\n        <option value=\"\" disabled>-- {{ \"select\" | i18n }} --</option>\n        <option value=\"createNew\">{{ \"newFamiliesOrganization\" | i18n }}</option>\n        <option *ngFor=\"let o of existingFamilyOrganizations$ | async\" [ngValue]=\"o.id\">\n          {{ o.name }}\n        </option>\n      </select>\n    </div>\n    <div *ngIf=\"showNewOrganization\" class=\"col-12\">\n      <app-organization-plans></app-organization-plans>\n    </div>\n    <div class=\"form-group col-6\" *ngIf=\"!showNewOrganization\">\n      <button class=\"btn btn-primary mt-2 btn-submit\" [disabled]=\"form.loading\" type=\"submit\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"acceptOffer\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n","import { Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Observable, Subject } from \"rxjs\";\nimport { first, map, takeUntil } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { PlanSponsorshipType } from \"@bitwarden/common/enums/planSponsorshipType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationSponsorshipRedeemRequest } from \"@bitwarden/common/models/request/organization/organization-sponsorship-redeem.request\";\n\nimport { DeleteOrganizationComponent } from \"../../organizations/settings\";\nimport { OrganizationPlansComponent } from \"../../settings/organization-plans.component\";\n\n@Component({\n  selector: \"families-for-enterprise-setup\",\n  templateUrl: \"families-for-enterprise-setup.component.html\",\n})\nexport class FamiliesForEnterpriseSetupComponent implements OnInit, OnDestroy {\n  @ViewChild(OrganizationPlansComponent, { static: false })\n  set organizationPlansComponent(value: OrganizationPlansComponent) {\n    if (!value) {\n      return;\n    }\n\n    value.plan = PlanType.FamiliesAnnually;\n    value.product = ProductType.Families;\n    value.acceptingSponsorship = true;\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    value.onSuccess.subscribe(this.onOrganizationCreateSuccess.bind(this));\n  }\n\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  loading = true;\n  badToken = false;\n  formPromise: Promise<any>;\n\n  token: string;\n  existingFamilyOrganizations: Organization[];\n  existingFamilyOrganizations$: Observable<Organization[]>;\n\n  showNewOrganization = false;\n  _organizationPlansComponent: OrganizationPlansComponent;\n  _selectedFamilyOrganizationId = \"\";\n\n  private _destroy = new Subject<void>();\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService,\n    private organizationService: OrganizationService,\n    private modalService: ModalService\n  ) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.token == null;\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"sponsoredFamiliesAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.token = qParams.token;\n\n      await this.syncService.fullSync(true);\n      this.badToken = !(await this.apiService.postPreValidateSponsorshipToken(this.token));\n      this.loading = false;\n    });\n\n    this.existingFamilyOrganizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter((o) => o.planProductType === ProductType.Families))\n    );\n\n    this.existingFamilyOrganizations$.pipe(takeUntil(this._destroy)).subscribe((orgs) => {\n      if (orgs.length === 0) {\n        this.selectedFamilyOrganizationId = \"createNew\";\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit(this._selectedFamilyOrganizationId);\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  get selectedFamilyOrganizationId() {\n    return this._selectedFamilyOrganizationId;\n  }\n\n  set selectedFamilyOrganizationId(value: string) {\n    this._selectedFamilyOrganizationId = value;\n    this.showNewOrganization = value === \"createNew\";\n  }\n\n  private async doSubmit(organizationId: string) {\n    try {\n      const request = new OrganizationSponsorshipRedeemRequest();\n      request.planSponsorshipType = PlanSponsorshipType.FamiliesForEnterprise;\n      request.sponsoredOrganizationId = organizationId;\n\n      await this.apiService.postRedeemSponsorship(this.token, request);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"sponsoredFamiliesOfferRedeemed\")\n      );\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      if (this.showNewOrganization) {\n        await this.modalService.openViewRef(\n          DeleteOrganizationComponent,\n          this.deleteModalRef,\n          (comp) => {\n            comp.organizationId = organizationId;\n            comp.deleteOrganizationRequestType = \"InvalidFamiliesForEnterprise\";\n            // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n            comp.onSuccess.subscribe(() => {\n              this.router.navigate([\"/\"]);\n            });\n          }\n        );\n      }\n      this.validationService.showError(this.i18nService.t(\"sponsorshipTokenHasExpired\"));\n    }\n  }\n\n  private async onOrganizationCreateSuccess(value: any) {\n    // Use newly created organization id\n    await this.doSubmit(value.organizationId);\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccess } from \"../domain/send-access\";\n\nimport { SendFileView } from \"./send-file.view\";\nimport { SendTextView } from \"./send-text.view\";\nimport { View } from \"./view\";\n\nexport class SendAccessView implements View {\n  id: string = null;\n  name: string = null;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  expirationDate: Date = null;\n  creatorIdentifier: string = null;\n\n  constructor(s?: SendAccess) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.type = s.type;\n    this.expirationDate = s.expirationDate;\n    this.creatorIdentifier = s.creatorIdentifier;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccessResponse } from \"../response/send-access.response\";\nimport { SendAccessView } from \"../view/send-access.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SendFile } from \"./send-file\";\nimport { SendText } from \"./send-text\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SendAccess extends Domain {\n  id: string;\n  type: SendType;\n  name: EncString;\n  file: SendFile;\n  text: SendText;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(obj?: SendAccessResponse) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n        expirationDate: null,\n        creatorIdentifier: null,\n      },\n      [\"id\", \"expirationDate\", \"creatorIdentifier\"]\n    );\n\n    this.type = obj.type;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendAccessView> {\n    const model = new SendAccessView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n      },\n      null,\n      key\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(key);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(key);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","export class SendAccessRequest {\n  password: string;\n}\n","<form #form (ngSubmit)=\"load()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-center mt-5\">\n    <div class=\"col-12\">\n      <h1 class=\"lead text-center mb-4\">Bitwarden Send</h1>\n    </div>\n    <div class=\"col-12 text-center\" *ngIf=\"creatorIdentifier != null\">\n      <p>{{ \"sendCreatorIdentifier\" | i18n: creatorIdentifier }}</p>\n    </div>\n    <div class=\"col-8\" *ngIf=\"hideEmail\">\n      <app-callout type=\"warning\" title=\"{{ 'warning' | i18n }}\">\n        {{ \"viewSendHiddenEmailWarning\" | i18n }}\n        <a href=\"https://bitwarden.com/help/receive-send/\" target=\"_blank\">{{\n          \"learnMore\" | i18n\n        }}</a\n        >.\n      </app-callout>\n    </div>\n  </div>\n  <div class=\"row justify-content-center\">\n    <div class=\"col-5\">\n      <div class=\"card d-block\">\n        <div class=\"card-body\" *ngIf=\"loading\" class=\"text-center\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && passwordRequired\">\n          <p>{{ \"sendProtectedPassword\" | i18n }}</p>\n          <p>{{ \"sendProtectedPasswordDontKnow\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"password\">{{ \"password\" | i18n }}</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              name=\"Password\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"password\"\n              required\n              appInputVerbatim\n              appAutofocus\n            />\n          </div>\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && unavailable\">\n          {{ \"sendAccessUnavailable\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && error\">\n          {{ \"unexpectedError\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && !passwordRequired && send\">\n          <p class=\"text-center\">\n            <b>{{ send.name }}</b>\n          </p>\n          <hr />\n          <!-- Text -->\n          <ng-container *ngIf=\"send.type === sendType.Text\">\n            <app-callout *ngIf=\"send.text.hidden\" type=\"tip\">{{\n              \"sendHiddenByDefault\" | i18n\n            }}</app-callout>\n            <div class=\"form-group\">\n              <textarea\n                id=\"text\"\n                rows=\"8\"\n                name=\"Text\"\n                [ngModel]=\"sendText\"\n                class=\"form-control\"\n                readonly\n              ></textarea>\n            </div>\n            <button\n              class=\"btn btn-block btn-link\"\n              type=\"button\"\n              (click)=\"toggleText()\"\n              *ngIf=\"send.text.hidden\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showText, 'bwi-eye-slash': showText }\"\n              ></i>\n              {{ \"toggleVisibility\" | i18n }}\n            </button>\n            <button class=\"btn btn-block btn-link\" type=\"button\" (click)=\"copyText()\">\n              <i class=\"bwi bwi-copy\" aria-hidden=\"true\"></i> {{ \"copyValue\" | i18n }}\n            </button>\n          </ng-container>\n          <!-- File -->\n          <ng-container *ngIf=\"send.type === sendType.File\">\n            <p>{{ send.file.fileName }}</p>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              (click)=\"download()\"\n              *ngIf=\"!downloading\"\n            >\n              <i class=\"bwi bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"downloadFile\" | i18n }} ({{ send.file.sizeName }})\n            </button>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              *ngIf=\"downloading\"\n              disabled=\"true\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </ng-container>\n          <p *ngIf=\"expirationDate\" class=\"text-center text-muted\">\n            Expires: {{ expirationDate | date: \"medium\" }}\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 text-center mt-5 text-muted\">\n      <p class=\"mb-0\">\n        {{ \"sendAccessTaglineProductDesc\" | i18n }}<br />\n        {{ \"sendAccessTaglineLearnMore\" | i18n }}\n        <a href=\"https://www.bitwarden.com/products/send?source=web-vault\" target=\"_blank\"\n          >Bitwarden Send</a\n        >\n        {{ \"sendAccessTaglineOr\" | i18n }}\n        <a href=\"https://vault.bitwarden.com/#/register\" target=\"_blank\">{{\n          \"sendAccessTaglineSignUp\" | i18n\n        }}</a>\n        {{ \"sendAccessTaglineTryToday\" | i18n }}\n      </p>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SEND_KDF_ITERATIONS } from \"@bitwarden/common/enums/kdfType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/enc-array-buffer\";\nimport { SendAccess } from \"@bitwarden/common/models/domain/send-access\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { SendAccessRequest } from \"@bitwarden/common/models/request/send-access.request\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\nimport { SendAccessResponse } from \"@bitwarden/common/models/response/send-access.response\";\nimport { SendAccessView } from \"@bitwarden/common/models/view/send-access.view\";\n\n@Component({\n  selector: \"app-send-access\",\n  templateUrl: \"access.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccessComponent implements OnInit {\n  send: SendAccessView;\n  sendType = SendType;\n  downloading = false;\n  loading = true;\n  passwordRequired = false;\n  formPromise: Promise<SendAccessResponse>;\n  password: string;\n  showText = false;\n  unavailable = false;\n  error = false;\n  hideEmail = false;\n\n  private id: string;\n  private key: string;\n  private decKey: SymmetricCryptoKey;\n  private accessRequest: SendAccessRequest;\n\n  constructor(\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService,\n    private fileDownloadService: FileDownloadService\n  ) {}\n\n  get sendText() {\n    if (this.send == null || this.send.text == null) {\n      return null;\n    }\n    return this.showText ? this.send.text.text : this.send.text.maskedText;\n  }\n\n  get expirationDate() {\n    if (this.send == null || this.send.expirationDate == null) {\n      return null;\n    }\n    return this.send.expirationDate;\n  }\n\n  get creatorIdentifier() {\n    if (this.send == null || this.send.creatorIdentifier == null) {\n      return null;\n    }\n    return this.send.creatorIdentifier;\n  }\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.params.subscribe(async (params) => {\n      this.id = params.sendId;\n      this.key = params.key;\n      if (this.key == null || this.id == null) {\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async download() {\n    if (this.send == null || this.decKey == null) {\n      return;\n    }\n\n    if (this.downloading) {\n      return;\n    }\n\n    const downloadData = await this.apiService.getSendFileDownloadData(\n      this.send,\n      this.accessRequest\n    );\n\n    if (Utils.isNullOrWhitespace(downloadData.url)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingSendFile\"));\n      return;\n    }\n\n    this.downloading = true;\n    const response = await fetch(new Request(downloadData.url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      this.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, this.decKey);\n      this.fileDownloadService.download({\n        fileName: this.send.file.fileName,\n        blobData: decBuf,\n        downloadMethod: \"save\",\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    this.downloading = false;\n  }\n\n  copyText() {\n    this.platformUtilsService.copyToClipboard(this.send.text.text);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendTypeText\"))\n    );\n  }\n\n  toggleText() {\n    this.showText = !this.showText;\n  }\n\n  async load() {\n    this.unavailable = false;\n    this.error = false;\n    this.hideEmail = false;\n    const keyArray = Utils.fromUrlB64ToArray(this.key);\n    this.accessRequest = new SendAccessRequest();\n    if (this.password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        this.password,\n        keyArray,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      this.accessRequest.password = Utils.fromBufferToB64(passwordHash);\n    }\n    try {\n      let sendResponse: SendAccessResponse = null;\n      if (this.loading) {\n        sendResponse = await this.apiService.postSendAccess(this.id, this.accessRequest);\n      } else {\n        this.formPromise = this.apiService.postSendAccess(this.id, this.accessRequest);\n        sendResponse = await this.formPromise;\n      }\n      this.passwordRequired = false;\n      const sendAccess = new SendAccess(sendResponse);\n      this.decKey = await this.cryptoService.makeSendKey(keyArray);\n      this.send = await sendAccess.decrypt(this.decKey);\n      this.showText = this.send.text != null ? !this.send.text.hidden : true;\n    } catch (e) {\n      if (e instanceof ErrorResponse) {\n        if (e.statusCode === 401) {\n          this.passwordRequired = true;\n        } else if (e.statusCode === 404) {\n          this.unavailable = true;\n        } else {\n          this.error = true;\n        }\n      }\n    }\n    this.loading = false;\n    this.hideEmail =\n      this.creatorIdentifier == null &&\n      !this.passwordRequired &&\n      !this.loading &&\n      !this.unavailable;\n  }\n}\n","import { Directive, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\n\n@Directive()\nexport class SendComponent implements OnInit, OnDestroy {\n  disableSend = false;\n  sendType = SendType;\n  loaded = false;\n  loading = true;\n  refreshing = false;\n  expired = false;\n  type: SendType = null;\n  sends: SendView[] = [];\n  filteredSends: SendView[] = [];\n  searchText: string;\n  selectedType: SendType;\n  selectedAll: boolean;\n  searchPlaceholder: string;\n  filter: (cipher: SendView) => boolean;\n  searchPending = false;\n  hasSearched = false; // search() function called - returns true if text qualifies for search\n\n  actionPromise: any;\n  onSuccessfulRemovePassword: () => Promise<any>;\n  onSuccessfulDelete: () => Promise<any>;\n  onSuccessfulLoad: () => Promise<any>;\n\n  private searchTimeout: any;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected sendService: SendService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected ngZone: NgZone,\n    protected searchService: SearchService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.DisableSend)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableSend = policyAppliesToActiveUser;\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load(filter: (send: SendView) => boolean = null) {\n    this.loading = true;\n    const sends = await this.sendService.getAllDecrypted();\n    this.sends = sends;\n    if (this.onSuccessfulLoad != null) {\n      await this.onSuccessfulLoad();\n    } else {\n      // Default action\n      this.selectAll();\n    }\n    this.loading = false;\n    this.loaded = true;\n  }\n\n  async reload(filter: (send: SendView) => boolean = null) {\n    this.loaded = false;\n    this.sends = [];\n    await this.load(filter);\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  async applyFilter(filter: (send: SendView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null || s.password == null) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removePasswordConfirmation\"),\n      this.i18nService.t(\"removePassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n      await this.actionPromise;\n      if (this.onSuccessfulRemovePassword != null) {\n        this.onSuccessfulRemovePassword();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"removedPassword\"));\n        await this.load();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async delete(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.deleteWithServer(s.id);\n      await this.actionPromise;\n\n      if (this.onSuccessfulDelete != null) {\n        this.onSuccessfulDelete();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n        await this.refresh();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n    return true;\n  }\n\n  copy(s: SendView) {\n    const sendLinkBaseUrl = this.environmentService.getSendUrl();\n    const link = sendLinkBaseUrl + s.accessId + \"/\" + s.urlB64Key;\n    this.platformUtilsService.copyToClipboard(link);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendLink\"))\n    );\n  }\n\n  searchTextChanged() {\n    this.search(200);\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.applyFilter(null);\n  }\n\n  selectType(type: SendType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.applyFilter((s) => s.type === type);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedType = null;\n  }\n\n  private applyTextSearch() {\n    if (this.searchText != null) {\n      this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n  // Native datetime-locale.\n  // We are happy.\n  Default = \"default\",\n\n  // Native date and time inputs, but no datetime-locale.\n  // We use individual date and time inputs and create a datetime programatically on submit.\n  Firefox = \"firefox\",\n\n  // No native date, time, or datetime-locale inputs.\n  // We use a polyfill for dates and a dropdown for times.\n  Safari = \"safari\",\n}\n\nenum DateField {\n  DeletionDate = \"deletion\",\n  ExpriationDate = \"expiration\",\n}\n\n// Value = hours\nenum DatePreset {\n  OneHour = 1,\n  OneDay = 24,\n  TwoDays = 48,\n  ThreeDays = 72,\n  SevenDays = 168,\n  ThirtyDays = 720,\n  Custom = 0,\n  Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n  twelveHour: string;\n  twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n  @Input() readonly initialDeletionDate: Date;\n  @Input() readonly initialExpirationDate: Date;\n  @Input() readonly editMode: boolean;\n  @Input() readonly disabled: boolean;\n\n  @Output() datesChanged = new EventEmitter<{ deletionDate: string; expirationDate: string }>();\n\n  get browserPath(): BrowserPath {\n    if (this.platformUtilsService.isFirefox()) {\n      return BrowserPath.Firefox;\n    } else if (this.platformUtilsService.isSafari()) {\n      return BrowserPath.Safari;\n    }\n    return BrowserPath.Default;\n  }\n\n  datesForm = new UntypedFormGroup({\n    selectedDeletionDatePreset: new UntypedFormControl(),\n    selectedExpirationDatePreset: new UntypedFormControl(),\n    defaultDeletionDateTime: new UntypedFormControl(),\n    defaultExpirationDateTime: new UntypedFormControl(),\n    fallbackDeletionDate: new UntypedFormControl(),\n    fallbackDeletionTime: new UntypedFormControl(),\n    fallbackExpirationDate: new UntypedFormControl(),\n    fallbackExpirationTime: new UntypedFormControl(),\n  });\n\n  deletionDatePresets: any[] = [\n    { name: this.i18nService.t(\"oneHour\"), value: DatePreset.OneHour },\n    { name: this.i18nService.t(\"oneDay\"), value: DatePreset.OneDay },\n    { name: this.i18nService.t(\"days\", \"2\"), value: DatePreset.TwoDays },\n    { name: this.i18nService.t(\"days\", \"3\"), value: DatePreset.ThreeDays },\n    { name: this.i18nService.t(\"days\", \"7\"), value: DatePreset.SevenDays },\n    { name: this.i18nService.t(\"days\", \"30\"), value: DatePreset.ThirtyDays },\n    { name: this.i18nService.t(\"custom\"), value: DatePreset.Custom },\n  ];\n\n  expirationDatePresets: any[] = [\n    { name: this.i18nService.t(\"never\"), value: DatePreset.Never },\n  ].concat([...this.deletionDatePresets]);\n\n  get selectedDeletionDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedDeletionDatePreset\") as UntypedFormControl;\n  }\n\n  get selectedExpirationDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedExpirationDatePreset\") as UntypedFormControl;\n  }\n\n  get defaultDeletionDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultDeletionDateTime\") as UntypedFormControl;\n  }\n\n  get defaultExpirationDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultExpirationDateTime\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionDate\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionTime\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationDate\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationTime\") as UntypedFormControl;\n  }\n\n  // Should be able to call these at any time and compute a submitable value\n  get formattedDeletionDate(): string {\n    switch (this.selectedDeletionDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n        return this.formattedDeletionDate;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            return this.fallbackDeletionDate.value + \"T\" + this.fallbackDeletionTime.value;\n          default:\n            return this.defaultDeletionDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedDeletionDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n\n  get formattedExpirationDate(): string {\n    switch (this.selectedExpirationDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        return null;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            if (\n              (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n              this.editMode\n            ) {\n              return null;\n            }\n            return this.fallbackExpirationDate.value + \"T\" + this.fallbackExpirationTime.value;\n          default:\n            if (!this.defaultExpirationDateTime.value) {\n              return null;\n            }\n            return this.defaultExpirationDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedExpirationDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n  //\n\n  get safariDeletionTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.DeletionDate);\n  }\n\n  get safariExpirationTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.ExpriationDate);\n  }\n\n  private get nextWeek(): Date {\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    return nextWeek;\n  }\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.setInitialFormValues();\n    this.emitDates();\n    this.datesForm.valueChanges.subscribe(() => {\n      this.emitDates();\n    });\n  }\n\n  onDeletionDatePresetSelect(value: DatePreset) {\n    this.selectedDeletionDatePreset.setValue(value);\n  }\n\n  clearExpiration() {\n    switch (this.browserPath) {\n      case BrowserPath.Safari:\n      case BrowserPath.Firefox:\n        this.fallbackExpirationDate.setValue(null);\n        this.fallbackExpirationTime.setValue(null);\n        break;\n      case BrowserPath.Default:\n        this.defaultExpirationDateTime.setValue(null);\n        break;\n    }\n  }\n\n  protected emitDates() {\n    this.datesChanged.emit({\n      deletionDate: this.formattedDeletionDate,\n      expirationDate: this.formattedExpirationDate,\n    });\n  }\n\n  protected setInitialFormValues() {\n    if (this.editMode) {\n      this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n        case BrowserPath.Firefox:\n          this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n          if (this.initialExpirationDate != null) {\n            this.fallbackExpirationDate.setValue(\n              this.initialExpirationDate.toISOString().slice(0, 10)\n            );\n            this.fallbackExpirationTime.setValue(\n              this.initialExpirationDate.toTimeString().slice(0, 5)\n            );\n          }\n          break;\n        case BrowserPath.Default:\n          if (this.initialExpirationDate) {\n            this.defaultExpirationDateTime.setValue(\n              this.datePipe.transform(new Date(this.initialExpirationDate), \"yyyy-MM-ddTHH:mm\")\n            );\n          }\n          this.defaultDeletionDateTime.setValue(\n            this.datePipe.transform(new Date(this.initialDeletionDate), \"yyyy-MM-ddTHH:mm\")\n          );\n          break;\n      }\n    } else {\n      this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n          this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(\n            this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected safariTimePresetOptions(field: DateField): TimeOption[] {\n    // init individual arrays for major sort groups\n    const noon: TimeOption[] = [];\n    const midnight: TimeOption[] = [];\n    const ams: TimeOption[] = [];\n    const pms: TimeOption[] = [];\n\n    // determine minute skip (5 min, 10 min, 15 min, etc.)\n    const minuteIncrementer = 15;\n\n    // loop through each hour on a 12 hour system\n    for (let h = 1; h <= 12; h++) {\n      // loop through each minute in the hour using the skip to incriment\n      for (let m = 0; m < 60; m += minuteIncrementer) {\n        // init the final strings that will be added to the lists\n        let hour = h.toString();\n        let minutes = m.toString();\n\n        // add prepending 0s to single digit hours/minutes\n        if (h < 10) {\n          hour = \"0\" + hour;\n        }\n        if (m < 10) {\n          minutes = \"0\" + minutes;\n        }\n\n        // build time strings and push to relevant sort groups\n        if (h === 12) {\n          const midnightOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `00:${minutes}`,\n          };\n          midnight.push(midnightOption);\n\n          const noonOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          noon.push(noonOption);\n        } else {\n          const amOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          ams.push(amOption);\n\n          const pmOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${h + 12}:${minutes}`,\n          };\n          pms.push(pmOption);\n        }\n      }\n    }\n\n    // bring all the arrays together in the right order\n    const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n    // determine if an unsupported value already exists on the send & add that to the top of the option list\n    // example: if the Send was created with a different client\n    if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialExpirationDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialExpirationDate, \"HH:mm\"),\n      };\n      return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n    } else if (\n      field === DateField.DeletionDate &&\n      this.initialDeletionDate != null &&\n      this.editMode\n    ) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialDeletionDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialDeletionDate, \"HH:mm\"),\n      };\n      return [previousValue, ...validTimes];\n    } else {\n      return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/enc-array-buffer\";\nimport { Send } from \"@bitwarden/common/models/domain/send\";\nimport { SendFileView } from \"@bitwarden/common/models/view/send-file.view\";\nimport { SendTextView } from \"@bitwarden/common/models/view/send-text.view\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\n\n@Directive()\nexport class AddEditComponent implements OnInit, OnDestroy {\n  @Input() sendId: string;\n  @Input() type: SendType;\n\n  @Output() onSavedSend = new EventEmitter<SendView>();\n  @Output() onDeletedSend = new EventEmitter<SendView>();\n  @Output() onCancelled = new EventEmitter<SendView>();\n\n  copyLink = false;\n  disableSend = false;\n  disableHideEmail = false;\n  send: SendView;\n  deletionDate: string;\n  expirationDate: string;\n  hasPassword: boolean;\n  password: string;\n  showPassword = false;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  sendType = SendType;\n  typeOptions: any[];\n  canAccessPremium = true;\n  emailVerified = true;\n  alertShown = false;\n  showOptions = false;\n\n  protected componentName = \"\";\n  private sendLinkBaseUrl: string;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected datePipe: DatePipe,\n    protected sendService: SendService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"sendTypeFile\"), value: SendType.File },\n      { name: i18nService.t(\"sendTypeText\"), value: SendType.Text },\n    ];\n    this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n  }\n\n  get link(): string {\n    if (this.send.id != null && this.send.accessId != null) {\n      return this.sendLinkBaseUrl + this.send.accessId + \"/\" + this.send.urlB64Key;\n    }\n    return null;\n  }\n\n  get isSafari() {\n    return this.platformUtilsService.isSafari();\n  }\n\n  get isDateTimeLocalSupported(): boolean {\n    return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n  }\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.DisableSend)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableSend = policyAppliesToActiveUser;\n      });\n\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.SendOptions, (p) => p.data.disableHideEmail)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableHideEmail = policyAppliesToActiveUser;\n      });\n\n    await this.load();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get editMode(): boolean {\n    return this.sendId != null;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.editMode ? \"editSend\" : \"createSend\");\n  }\n\n  setDates(event: { deletionDate: string; expirationDate: string }) {\n    this.deletionDate = event.deletionDate;\n    this.expirationDate = event.expirationDate;\n  }\n\n  async load() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.emailVerified = await this.stateService.getEmailVerified();\n    if (!this.canAccessPremium || !this.emailVerified) {\n      this.type = SendType.Text;\n    }\n\n    if (this.send == null) {\n      if (this.editMode) {\n        const send = await this.loadSend();\n        this.send = await send.decrypt();\n      } else {\n        this.send = new SendView();\n        this.send.type = this.type == null ? SendType.File : this.type;\n        this.send.file = new SendFileView();\n        this.send.text = new SendTextView();\n        this.send.deletionDate = new Date();\n        this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n      }\n    }\n\n    this.hasPassword = this.send.password != null && this.send.password.trim() !== \"\";\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.disableSend) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"sendDisabledWarning\")\n      );\n      return false;\n    }\n\n    if (this.send.name == null || this.send.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    let file: File = null;\n    if (this.send.type === SendType.File && !this.editMode) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      const files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n\n      file = files[0];\n      if (files[0].size > 524288000) {\n        // 500 MB\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"maxFileSize\")\n        );\n        return;\n      }\n    }\n\n    if (this.password != null && this.password.trim() === \"\") {\n      this.password = null;\n    }\n\n    this.formPromise = this.encryptSend(file).then(async (encSend) => {\n      const uploadPromise = this.sendService.saveWithServer(encSend);\n      await uploadPromise;\n      if (this.send.id == null) {\n        this.send.id = encSend[0].id;\n      }\n      if (this.send.accessId == null) {\n        this.send.accessId = encSend[0].accessId;\n      }\n      this.onSavedSend.emit(this.send);\n      if (this.copyLink && this.link != null) {\n        const copySuccess = await this.copyLinkToClipboard(this.link);\n        if (copySuccess ?? true) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n          );\n        } else {\n          await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\"),\n            null,\n            this.i18nService.t(\"ok\"),\n            null,\n            \"success\",\n            null\n          );\n          await this.copyLinkToClipboard(this.link);\n        }\n      }\n    });\n    try {\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n  }\n\n  async delete(): Promise<boolean> {\n    if (this.deletePromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      this.componentName != \"\" ? this.componentName + \" .modal-content\" : null\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n      await this.load();\n      this.onDeletedSend.emit(this.send);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  typeChanged() {\n    if (this.send.type === SendType.File && !this.alertShown) {\n      if (!this.canAccessPremium) {\n        this.alertShown = true;\n        this.messagingService.send(\"premiumRequired\");\n      } else if (!this.emailVerified) {\n        this.alertShown = true;\n        this.messagingService.send(\"emailVerificationRequired\");\n      }\n    }\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  protected async loadSend(): Promise<Send> {\n    return this.sendService.get(this.sendId);\n  }\n\n  protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n    const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n    // Parse dates\n    try {\n      sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n    } catch {\n      sendData[0].deletionDate = null;\n    }\n    try {\n      sendData[0].expirationDate =\n        this.expirationDate == null ? null : new Date(this.expirationDate);\n    } catch {\n      sendData[0].expirationDate = null;\n    }\n\n    return sendData;\n  }\n\n  protected togglePasswordVisible() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"password\").focus();\n  }\n}\n","<div class=\"row\" [formGroup]=\"datesForm\">\n  <div class=\"col-6 form-group\">\n    <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n    <ng-template #deletionDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <ng-container *ngSwitchCase=\"'firefox'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <input\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              type=\"time\"\n              name=\"DeletionTimeDate\"\n              formControlName=\"fallbackDeletionTime\"\n              required\n              placeholder=\"HH:MM AM/PM\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'safari'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <select\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              [required]=\"!editMode\"\n              formControlName=\"fallbackDeletionTime\"\n              name=\"SafariDeletionTime\"\n            >\n              <option\n                *ngFor=\"let o of safariDeletionTimePresetOptions\"\n                [ngValue]=\"o.twentyFourHour\"\n              >\n                {{ o.twelveHour }}\n              </option>\n            </select>\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"deletionDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"DeletionDate\"\n            formControlName=\"defaultDeletionDateTime\"\n            required\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"deletionDate\"\n        name=\"SelectedDeletionDatePreset\"\n        formControlName=\"selectedDeletionDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedDeletionDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"deletionDateDesc\" | i18n }}</div>\n  </div>\n  <div class=\"col-6 form-group\">\n    <div class=\"d-flex\">\n      <label for=\"expirationDate\">{{ \"expirationDate\" | i18n }}</label>\n      <a\n        href=\"#\"\n        appStopClick\n        (click)=\"clearExpiration()\"\n        class=\"ml-auto\"\n        *ngIf=\"editMode && !disabled\"\n      >\n        {{ \"clear\" | i18n }}\n      </a>\n    </div>\n    <ng-template #expirationDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <div *ngSwitchCase=\"'firefox'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            type=\"time\"\n            name=\"ExpirationTimeFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            [required]=\"!editMode\"\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n        <!-- non-default cases are not showing up -->\n        <div *ngSwitchCase=\"'safari'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            [required]=\"!editMode\"\n            formControlName=\"fallbackExpirationTime\"\n            name=\"SafariExpirationTime\"\n          >\n            <option\n              *ngFor=\"let o of safariExpirationTimePresetOptions\"\n              [ngValue]=\"o.twentyFourHour\"\n            >\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"expirationDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"ExpirationDate\"\n            formControlName=\"defaultExpirationDateTime\"\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"expirationDate\"\n        name=\"SelectedExpirationDatePreset\"\n        formControlName=\"selectedExpirationDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedExpirationDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"expirationDateDesc\" | i18n }}</div>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ControlContainer, NgForm } from \"@angular/forms\";\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from \"@bitwarden/angular/components/send/efflux-dates.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-send-efflux-dates\",\n  templateUrl: \"efflux-dates.component.html\",\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {\n    super(i18nService, platformUtilsService, datePipe);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"sendAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"sendAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"send\">\n        <app-callout *ngIf=\"disableSend\">\n          <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n        </app-callout>\n        <app-callout *ngIf=\"!disableSend && disableHideEmail\">\n          <span>{{ \"sendOptionsPolicyInEffect\" | i18n }}</span>\n          <ul class=\"mb-0\">\n            <li>{{ \"sendDisableHideEmailInEffect\" | i18n }}</li>\n          </ul>\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"send.name\"\n              required\n              [readOnly]=\"disableSend\"\n            />\n            <small class=\"form-text text-muted\">{{ \"sendNameDesc\" | i18n }}</small>\n          </div>\n        </div>\n        <div class=\"row\" *ngIf=\"!editMode\">\n          <div class=\"col-6 form-group\">\n            <label>{{ \"whatTypeOfSend\" | i18n }}</label>\n            <div class=\"form-check\" *ngFor=\"let o of typeOptions\">\n              <input\n                class=\"form-check-input\"\n                type=\"radio\"\n                [(ngModel)]=\"send.type\"\n                name=\"Type_{{ o.value }}\"\n                id=\"type_{{ o.value }}\"\n                [value]=\"o.value\"\n                (change)=\"typeChanged()\"\n                [checked]=\"send.type === o.value\"\n              />\n              <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n                {{ o.name }}\n              </label>\n            </div>\n          </div>\n        </div>\n        <!-- Text -->\n        <ng-container *ngIf=\"send.type === sendType.Text\">\n          <div class=\"form-group\">\n            <label for=\"text\">{{ \"sendTypeText\" | i18n }}</label>\n            <textarea\n              id=\"text\"\n              name=\"Text.Text\"\n              rows=\"6\"\n              [(ngModel)]=\"send.text.text\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <small class=\"form-text text-muted\">{{ \"sendTextDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.text.hidden\"\n                id=\"text-hidden\"\n                name=\"Text.Hidden\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"text-hidden\">{{\n                \"textHiddenByDefault\" | i18n\n              }}</label>\n            </div>\n          </div>\n        </ng-container>\n        <!-- File -->\n        <ng-container *ngIf=\"send.type === sendType.File\">\n          <div class=\"form-group\">\n            <div *ngIf=\"editMode\">\n              <strong class=\"d-block\">{{ \"file\" | i18n }}</strong>\n              {{ send.file.fileName }} ({{ send.file.sizeName }})\n            </div>\n            <div *ngIf=\"!editMode\">\n              <label for=\"file\">{{ \"file\" | i18n }}</label>\n              <input\n                type=\"file\"\n                id=\"file\"\n                class=\"form-control-file\"\n                name=\"file\"\n                required\n                [disabled]=\"disableSend\"\n              />\n              <small class=\"form-text text-muted\"\n                >{{ \"sendFileDesc\" | i18n }} {{ \"maxFileSize\" | i18n }}</small\n              >\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-5\">{{ \"share\" | i18n }}</h3>\n        <div class=\"form-group\" *ngIf=\"link\">\n          <label for=\"link\">{{ \"sendLinkLabel\" | i18n }}</label>\n          <input type=\"text\" readonly id=\"link\" name=\"Link\" [ngModel]=\"link\" class=\"form-control\" />\n        </div>\n        <div class=\"form-group\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [(ngModel)]=\"copyLink\"\n              id=\"copy-link\"\n              name=\"CopyLink\"\n            />\n            <label class=\"form-check-label\" for=\"copy-link\">{{\n              \"copySendLinkOnSave\" | i18n\n            }}</label>\n          </div>\n        </div>\n        <div\n          id=\"options-header\"\n          class=\"section-header d-flex flex-row align-items-center mt-5\"\n          (click)=\"toggleOptions()\"\n        >\n          <h3 class=\"mb-0 mr-2\">\n            <button appStopClick class=\"header-expandable\">\n              <i\n                class=\"bwi\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-angle-right': !showOptions, 'bwi-angle-down': showOptions }\"\n              ></i>\n              {{ \"options\" | i18n }}\n            </button>\n          </h3>\n        </div>\n        <div id=\"options\" [hidden]=\"!showOptions\">\n          <app-send-efflux-dates\n            [initialDeletionDate]=\"send.deletionDate\"\n            [initialExpirationDate]=\"send.expirationDate\"\n            [editMode]=\"editMode\"\n            [disabled]=\"disableSend\"\n            (datesChanged)=\"setDates($event)\"\n          >\n          </app-send-efflux-dates>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"maxAccessCount\">{{ \"maxAccessCount\" | i18n }}</label>\n              <input\n                id=\"maxAccessCount\"\n                class=\"form-control\"\n                type=\"number\"\n                name=\"MaxAccessCount\"\n                [(ngModel)]=\"send.maxAccessCount\"\n                min=\"1\"\n                [readOnly]=\"disableSend\"\n              />\n              <div class=\"form-text text-muted small\">{{ \"maxAccessCountDesc\" | i18n }}</div>\n            </div>\n            <div class=\"col-6 form-group\" *ngIf=\"editMode\">\n              <label for=\"accessCount\">{{ \"currentAccessCount\" | i18n }}</label>\n              <input\n                id=\"accessCount\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"AccessCount\"\n                readonly\n                [(ngModel)]=\"send.accessCount\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"password\" *ngIf=\"!hasPassword\">{{ \"password\" | i18n }}</label>\n              <label for=\"password\" *ngIf=\"hasPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"password\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Password\"\n                  [(ngModel)]=\"password\"\n                  [readOnly]=\"disableSend\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePasswordVisible()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                </div>\n              </div>\n              <div class=\"form-text text-muted small\">{{ \"sendPasswordDesc\" | i18n }}</div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n            <textarea\n              id=\"notes\"\n              name=\"Notes\"\n              rows=\"6\"\n              [(ngModel)]=\"send.notes\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <div class=\"form-text text-muted small\">{{ \"sendNotesDesc\" | i18n }}</div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.hideEmail\"\n                id=\"hideEmail\"\n                name=\"HideEmail\"\n                [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"hideEmail\">\n                {{ \"hideEmail\" | i18n }}\n              </label>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.disabled\"\n                id=\"disabled\"\n                name=\"Disabled\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"disabled\">{{ \"disableThisSend\" | i18n }}</label>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [ngClass]=\"{ loading: form.loading }\"\n          [disabled]=\"form.loading || disableSend\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"send\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"$any(deleteBtn).loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/send/add-edit.component\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-send-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  override componentName = \"app-send-add-edit\";\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    datePipe: DatePipe,\n    sendService: SendService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      datePipe,\n      sendService,\n      messagingService,\n      policyService,\n      logService,\n      stateService\n    );\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    // Copy function on web depends on the modal being open or not. Since this event occurs during a transition\n    // of the modal closing we need to add a small delay to make sure state of the DOM is consistent.\n    return new Promise((resolve) => {\n      window.setTimeout(() => resolve(super.copyLinkToClipboard(link)), 500);\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-3 groupings\">\n      <div class=\"card vault-filters\">\n        <div class=\"card-header d-flex\">\n          {{ \"filters\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <input\n            type=\"search\"\n            placeholder=\"{{ searchPlaceholder || ('searchSends' | i18n) }}\"\n            id=\"search\"\n            class=\"form-control\"\n            [(ngModel)]=\"searchText\"\n            (input)=\"searchTextChanged()\"\n            autocomplete=\"off\"\n            appAutofocus\n          />\n          <div class=\"filter\">\n            <ul class=\"filter-options\">\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedAll }\">\n                <span class=\"filter-buttons\">\n                  <button class=\"filter-button\" appStopClick (click)=\"selectAll()\">\n                    <i class=\"bwi bwi-fw bwi-filter\"></i>{{ \"allSends\" | i18n }}\n                  </button>\n                </span>\n              </li>\n            </ul>\n          </div>\n          <div class=\"filter\">\n            <div class=\"filter-heading\">\n              <h3>{{ \"types\" | i18n }}</h3>\n            </div>\n            <ul class=\"filter-options\">\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedType === sendType.Text }\">\n                <span class=\"filter-buttons\">\n                  <button class=\"filter-button\" appStopClick (click)=\"selectType(sendType.Text)\">\n                    <i class=\"bwi bwi-fw bwi-file-text\"></i>{{ \"sendTypeText\" | i18n }}\n                  </button>\n                </span>\n              </li>\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedType === sendType.File }\">\n                <span class=\"filter-buttons\">\n                  <button class=\"filter-button\" appStopClick (click)=\"selectType(sendType.File)\">\n                    <i class=\"bwi bwi-fw bwi-file\"></i>{{ \"sendTypeFile\" | i18n }}\n                  </button>\n                </span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"send\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"actionPromise\">\n            <ng-container *ngIf=\"$any(actionSpinner).loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addSend()\"\n            [disabled]=\"disableSend\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <!--Listing Table-->\n      <table class=\"table table-hover table-list\" *ngIf=\"filteredSends && filteredSends.length\">\n        <tbody>\n          <tr *ngFor=\"let s of filteredSends\">\n            <td class=\"table-list-icon\">\n              <div class=\"icon\" aria-hidden=\"true\">\n                <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"s.type == sendType.File\"></i>\n                <i class=\"bwi bwi-fw bwi-lg bwi-file-text\" *ngIf=\"s.type == sendType.Text\"></i>\n              </div>\n            </td>\n            <td class=\"reduced-lh wrap\">\n              <a href=\"#\" appStopClick appStopProp (click)=\"editSend(s)\">{{ s.name }}</a>\n              <ng-container *ngIf=\"s.disabled\">\n                <i\n                  class=\"bwi bwi-exclamation-triangle\"\n                  appStopProp\n                  title=\"{{ 'disabled' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"disabled\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.password\">\n                <i\n                  class=\"bwi bwi-key\"\n                  appStopProp\n                  title=\"{{ 'password' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"password\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.maxAccessCountReached\">\n                <i\n                  class=\"bwi bwi-ban\"\n                  appStopProp\n                  title=\"{{ 'maxAccessCountReached' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"maxAccessCountReached\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.expired\">\n                <i\n                  class=\"bwi bwi-clock\"\n                  appStopProp\n                  title=\"{{ 'expired' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"expired\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.pendingDelete\">\n                <i\n                  class=\"bwi bwi-trash\"\n                  appStopProp\n                  title=\"{{ 'pendingDeletion' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"pendingDeletion\" | i18n }}</span>\n              </ng-container>\n              <br />\n              <small appStopProp>{{ s.deletionDate | date: \"medium\" }}</small>\n            </td>\n            <td class=\"table-list-options\">\n              <button\n                [bitMenuTriggerFor]=\"sendOptions\"\n                class=\"tw-border-none tw-bg-transparent tw-text-main\"\n                type=\"button\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu #sendOptions>\n                <button bitMenuItem (click)=\"copy(s)\">\n                  <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                  {{ \"copySendLink\" | i18n }}\n                </button>\n                <button bitMenuItem (click)=\"removePassword(s)\" *ngIf=\"s.password && !disableSend\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"removePassword\" | i18n }}\n                </button>\n                <button bitMenuItem (click)=\"delete(s)\">\n                  <span class=\"tw-text-danger\">\n                    <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                    {{ \"delete\" | i18n }}\n                  </span>\n                </button>\n              </bit-menu>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div class=\"no-items\" *ngIf=\"filteredSends && !filteredSends.length\">\n        <ng-container *ngIf=\"!loaded\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"loaded\">\n          <bit-icon [icon]=\"noItemIcon\" aria-hidden=\"true\"></bit-icon>\n          <p>{{ \"noSendsInList\" | i18n }}</p>\n          <button (click)=\"addSend()\" class=\"btn btn-outline-primary\" [disabled]=\"disableSend\">\n            <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #sendAddEdit></ng-template>\n","import { Component, NgZone, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SendComponent as BaseSendComponent } from \"@bitwarden/angular/components/send/send.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\nimport { Icons } from \"@bitwarden/components\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\n\nconst BroadcasterSubscriptionId = \"SendComponent\";\n\n@Component({\n  selector: \"app-send\",\n  templateUrl: \"send.component.html\",\n})\nexport class SendComponent extends BaseSendComponent {\n  @ViewChild(\"sendAddEdit\", { read: ViewContainerRef, static: true })\n  sendAddEditModalRef: ViewContainerRef;\n  noItemIcon = Icons.Search;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    searchService: SearchService,\n    policyService: PolicyService,\n    private modalService: ModalService,\n    private broadcasterService: BroadcasterService,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n\n    // Broadcaster subscription - load if sync completes in the background\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await this.load();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n\n    const component = await this.editSend(null);\n    component.type = this.type;\n  }\n\n  async editSend(send: SendView) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.sendAddEditModalRef,\n      (comp) => {\n        comp.sendId = send == null ? null : send.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-deauthorize-sessions\",\n  templateUrl: \"deauthorize-sessions.component.html\",\n})\nexport class DeauthorizeSessionsComponent {\n  masterPassword: Verification;\n  formPromise: Promise<unknown>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postSecurityStamp(request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"sessionsDeauthorized\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deAuthTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"deAuthTitle\">{{ \"deauthorizeSessions\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deauthorizeSessionsDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deauthorizeSessionsWarning\" | i18n }}</app-callout>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deauthorizeSessions\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { AccountApiService } from \"@bitwarden/common/abstractions/account/account-api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-delete-account\",\n  templateUrl: \"delete-account.component.html\",\n})\nexport class DeleteAccountComponent {\n  formPromise: Promise<void>;\n\n  deleteForm = this.formBuilder.group({\n    verification: undefined as Verification | undefined,\n  });\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private formBuilder: FormBuilder,\n    private accountApiService: AccountApiService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const verification = this.deleteForm.get(\"verification\").value;\n      this.formPromise = this.accountApiService.deleteAccount(verification);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteAccountTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      [formGroup]=\"deleteForm\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"deleteAccountTitle\">{{ \"deleteAccount\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deleteAccountDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n        <app-user-verification ngDefaultControl formControlName=\"verification\" name=\"verification\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteAccount\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class EmailTokenRequest extends SecretVerificationRequest {\n  newEmail: string;\n  masterPasswordHash: string;\n}\n","import { EmailTokenRequest } from \"./email-token.request\";\n\nexport class EmailRequest extends EmailTokenRequest {\n  newMasterPasswordHash: string;\n  token: string;\n  key: string;\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <app-callout type=\"warning\" *ngIf=\"showTwoFactorEmailWarning\">\n    {{ \"changeEmailTwoFactorWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          [readonly]=\"tokenSent\"\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"newEmail\">{{ \"newEmail\" | i18n }}</label>\n        <input\n          id=\"newEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"NewEmail\"\n          [(ngModel)]=\"newEmail\"\n          required\n          [readonly]=\"tokenSent\"\n          inputmode=\"email\"\n          appInputVerbatim=\"false\"\n        />\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"tokenSent\">\n    <hr />\n    <p>{{ \"changeEmailDesc\" | i18n: newEmail }}</p>\n    <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"token\">{{ \"code\" | i18n }}</label>\n          <input\n            id=\"token\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Token\"\n            [(ngModel)]=\"token\"\n            required\n            appInputVerbatim\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span *ngIf=\"!tokenSent\">{{ \"continue\" | i18n }}</span>\n    <span *ngIf=\"tokenSent\">{{ \"changeEmail\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" *ngIf=\"tokenSent\" (click)=\"reset()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { EmailTokenRequest } from \"@bitwarden/common/models/request/email-token.request\";\nimport { EmailRequest } from \"@bitwarden/common/models/request/email.request\";\n\n@Component({\n  selector: \"app-change-email\",\n  templateUrl: \"change-email.component.html\",\n})\nexport class ChangeEmailComponent implements OnInit {\n  masterPassword: string;\n  newEmail: string;\n  token: string;\n  tokenSent = false;\n  showTwoFactorEmailWarning = false;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    const twoFactorProviders = await this.apiService.getTwoFactorProviders();\n    this.showTwoFactorEmailWarning = twoFactorProviders.data.some(\n      (p) => p.type === TwoFactorProviderType.Email && p.enabled\n    );\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    this.newEmail = this.newEmail.trim().toLowerCase();\n    if (!this.tokenSent) {\n      const request = new EmailTokenRequest();\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      try {\n        this.formPromise = this.apiService.postEmailToken(request);\n        await this.formPromise;\n        this.tokenSent = true;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const request = new EmailRequest();\n      request.token = this.token;\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      const kdf = await this.stateService.getKdfType();\n      const kdfIterations = await this.stateService.getKdfIterations();\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.newEmail,\n        kdf,\n        kdfIterations\n      );\n      request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        newKey\n      );\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n      request.key = newEncKey[1].encryptedString;\n      try {\n        this.formPromise = this.apiService.postEmail(request);\n        await this.formPromise;\n        this.reset();\n        this.platformUtilsService.showToast(\n          \"success\",\n          this.i18nService.t(\"emailChanged\"),\n          this.i18nService.t(\"logBackIn\")\n        );\n        this.messagingService.send(\"logout\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n\n  reset() {\n    this.token = this.newEmail = this.masterPassword = null;\n    this.tokenSent = false;\n  }\n}\n","export class UpdateProfileRequest {\n  name: string;\n  masterPasswordHint: string;\n  culture = \"en-US\"; // deprecated\n\n  constructor(name: string, masterPasswordHint: string) {\n    this.name = name;\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"profile && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"profile.name\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">{{ \"email\" | i18n }}</label>\n        <input\n          id=\"email\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Email\"\n          [(ngModel)]=\"profile.email\"\n          readonly\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"mb-3\">\n        <bit-avatar [text]=\"profile | userName\" [id]=\"profile.id\" size=\"large\"></bit-avatar>\n      </div>\n      <hr />\n      <p *ngIf=\"fingerprint\">\n        {{ \"yourAccountsFingerprint\" | i18n }}:\n        <a\n          href=\"https://bitwarden.com/help/fingerprint-phrase/\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i></a\n        ><br />\n        <code>{{ fingerprint }}</code>\n      </p>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UpdateProfileRequest } from \"@bitwarden/common/models/request/update-profile.request\";\nimport { ProfileResponse } from \"@bitwarden/common/models/response/profile.response\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"profile.component.html\",\n})\nexport class ProfileComponent implements OnInit {\n  loading = true;\n  profile: ProfileResponse;\n  fingerprint: string;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.profile = await this.apiService.getProfile();\n    this.loading = false;\n    const fingerprint = await this.cryptoService.getFingerprint(\n      await this.stateService.getUserId()\n    );\n    if (fingerprint != null) {\n      this.fingerprint = fingerprint.join(\"-\");\n    }\n  }\n\n  async submit() {\n    try {\n      const request = new UpdateProfileRequest(this.profile.name, this.profile.masterPasswordHint);\n      this.formPromise = this.apiService.putProfile(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"accountUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myAccount\" | i18n }}</h1>\n</div>\n<app-profile></app-profile>\n<ng-container *ngIf=\"showChangeEmail\">\n  <div class=\"secondary-header\">\n    <h1>{{ \"changeEmail\" | i18n }}</h1>\n  </div>\n  <app-change-email></app-change-email>\n</ng-container>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button bitButton buttonType=\"danger\" (click)=\"deauthorizeSessions()\">\n      {{ \"deauthorizeSessions\" | i18n }}\n    </button>\n    <button bitButton buttonType=\"danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n    <button bitButton buttonType=\"danger\" (click)=\"deleteAccount()\">\n      {{ \"deleteAccount\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deauthorizeSessionsTemplate></ng-template>\n<ng-template #purgeVaultTemplate></ng-template>\n<ng-template #deleteAccountTemplate></ng-template>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { DeauthorizeSessionsComponent } from \"./deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"./delete-account.component\";\nimport { PurgeVaultComponent } from \"./purge-vault.component\";\n\n@Component({\n  selector: \"app-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  @ViewChild(\"deauthorizeSessionsTemplate\", { read: ViewContainerRef, static: true })\n  deauthModalRef: ViewContainerRef;\n  @ViewChild(\"purgeVaultTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"deleteAccountTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  showChangeEmail = true;\n\n  constructor(\n    private modalService: ModalService,\n    private apiService: ApiService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeEmail = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async deauthorizeSessions() {\n    await this.modalService.openViewRef(DeauthorizeSessionsComponent, this.deauthModalRef);\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef);\n  }\n\n  async deleteAccount() {\n    await this.modalService.openViewRef(DeleteAccountComponent, this.deleteModalRef);\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\nimport { OrganizationPlansComponent } from \"./organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.plan === \"families\") {\n        this.orgPlansComponent.plan = PlanType.FamiliesAnnually;\n        this.orgPlansComponent.product = ProductType.Families;\n      } else if (qParams.plan === \"teams\") {\n        this.orgPlansComponent.plan = PlanType.TeamsAnnually;\n        this.orgPlansComponent.product = ProductType.Teams;\n      } else if (qParams.plan === \"enterprise\") {\n        this.orgPlansComponent.plan = PlanType.EnterpriseAnnually;\n        this.orgPlansComponent.product = ProductType.Enterprise;\n      }\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"page-header\">\n        <h1>{{ \"newOrganization\" | i18n }}</h1>\n      </div>\n      <p>{{ \"newOrganizationDesc\" | i18n }}</p>\n      <app-organization-plans></app-organization-plans>\n    </div>\n  </div>\n</div>\n","export class UpdateDomainsRequest {\n  equivalentDomains: string[][];\n  excludedGlobalEquivalentDomains: number[];\n}\n","<div class=\"page-header\">\n  <h1>{{ \"domainRules\" | i18n }}</h1>\n</div>\n<p>{{ \"domainRulesDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <h2>{{ \"customEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"!loading\">\n    <div class=\"form-group d-flex\" *ngFor=\"let d of custom; let i = index; trackBy: indexTrackBy\">\n      <div class=\"flex-fill\">\n        <label for=\"customDomain_{{ i }}\" class=\"sr-only\">{{\n          \"customDomainX\" | i18n: i + 1\n        }}</label>\n        <textarea\n          class=\"form-control\"\n          name=\"CustomDomain[{{ i }}]\"\n          id=\"customDomain_{{ i }}\"\n          [(ngModel)]=\"custom[i]\"\n          placeholder=\"{{ 'ex' | i18n }} google.com, gmail.com\"\n          required\n        ></textarea>\n      </div>\n      <button\n        type=\"button\"\n        class=\"btn btn-link text-danger ml-2\"\n        (click)=\"remove(i)\"\n        appA11yTitle=\"{{ 'remove' | i18n }}\"\n      >\n        <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <button type=\"button\" (click)=\"add()\" class=\"btn btn-outline-secondary btn-sm mb-2\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomDomain\" | i18n }}\n    </button>\n    <small class=\"text-muted d-block mb-3\">{{ \"newCustomDomainDesc\" | i18n }}</small>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n  <h2 class=\"spaced-header\">{{ \"globalEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <table class=\"table table-hover table-list\" *ngIf=\"!loading && global.length > 0\">\n    <tbody>\n      <tr *ngFor=\"let d of global\">\n        <td [ngClass]=\"{ 'table-list-strike': d.excluded }\">{{ d.domains }}</td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"!d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                {{ \"exclude\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-plus\" aria-hidden=\"true\"></i>\n                {{ \"include\" | i18n }}\n              </a>\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"customize(d)\">\n                <i class=\"bwi bwi-fw bwi-cut\" aria-hidden=\"true\"></i>\n                {{ \"customize\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UpdateDomainsRequest } from \"@bitwarden/common/models/request/update-domains.request\";\n\n@Component({\n  selector: \"app-domain-rules\",\n  templateUrl: \"domain-rules.component.html\",\n})\nexport class DomainRulesComponent implements OnInit {\n  loading = true;\n  custom: string[] = [];\n  global: any[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const response = await this.apiService.getSettingsDomains();\n    this.loading = false;\n    if (response.equivalentDomains != null) {\n      this.custom = response.equivalentDomains.map((d) => d.join(\", \"));\n    }\n    if (response.globalEquivalentDomains != null) {\n      this.global = response.globalEquivalentDomains.map((d) => {\n        return {\n          domains: d.domains.join(\", \"),\n          excluded: d.excluded,\n          key: d.type,\n        };\n      });\n    }\n  }\n\n  toggleExcluded(globalDomain: any) {\n    globalDomain.excluded = !globalDomain.excluded;\n  }\n\n  customize(globalDomain: any) {\n    globalDomain.excluded = true;\n    this.custom.push(globalDomain.domains);\n  }\n\n  remove(index: number) {\n    this.custom.splice(index, 1);\n  }\n\n  add() {\n    this.custom.push(\"\");\n  }\n\n  async submit() {\n    const request = new UpdateDomainsRequest();\n    request.excludedGlobalEquivalentDomains = this.global\n      .filter((d) => d.excluded)\n      .map((d) => d.key);\n    if (request.excludedGlobalEquivalentDomains.length === 0) {\n      request.excludedGlobalEquivalentDomains = null;\n    }\n    request.equivalentDomains = this.custom\n      .filter((d) => d != null && d.trim() !== \"\")\n      .map((d) => d.split(\",\").map((d2) => d2.trim()));\n    if (request.equivalentDomains.length === 0) {\n      request.equivalentDomains = null;\n    }\n\n    try {\n      this.formPromise = this.apiService.putSettingsDomains(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"domainsUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  indexTrackBy(index: number, obj: any): any {\n    return index;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AttachmentView } from \"@bitwarden/common/models/view/attachment.view\";\n\n@Component({\n  selector: \"emergency-access-attachments\",\n  templateUrl: \"../vault/attachments.component.html\",\n})\nexport class EmergencyAccessAttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = true;\n  canAccessAttachments = true;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  protected async init() {\n    // Do nothing since cipher is already decoded\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return false;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../vault/add-edit.component.html\",\n})\nexport class EmergencyAddEditComponent extends BaseAddEditComponent {\n  originalCipher: Cipher = null;\n  viewOnly = true;\n  protected override componentName = \"app-org-vault-add-edit\";\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationService,\n    messagingService: MessagingService,\n    eventCollectionService: EventCollectionService,\n    policyService: PolicyService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventCollectionService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  async load() {\n    this.title = this.i18nService.t(\"viewItem\");\n  }\n\n  protected async loadCipher() {\n    return Promise.resolve(this.originalCipher);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"vault\" | i18n }}</h1>\n</div>\n<div class=\"mt-4\">\n  <ng-container *ngIf=\"ciphers.length\">\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown *ngIf=\"c.hasAttachments\">\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"viewAttachments(c)\">\n                  <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n                  {{ \"attachments\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #attachments></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CipherData } from \"@bitwarden/common/models/data/cipher.data\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { EmergencyAccessViewResponse } from \"@bitwarden/common/models/response/emergency-access.response\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { EmergencyAccessAttachmentsComponent } from \"./emergency-access-attachments.component\";\nimport { EmergencyAddEditComponent } from \"./emergency-add-edit.component\";\n\n@Component({\n  selector: \"emergency-access-view\",\n  templateUrl: \"emergency-access-view.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EmergencyAccessViewComponent implements OnInit {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n\n  id: string;\n  ciphers: CipherView[] = [];\n  loaded = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private modalService: ModalService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private apiService: ApiService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.route.params.subscribe((qParams) => {\n      if (qParams.id == null) {\n        return this.router.navigate([\"settings/emergency-access\"]);\n      }\n\n      this.id = qParams.id;\n\n      this.load();\n    });\n  }\n\n  async selectCipher(cipher: CipherView) {\n    // eslint-disable-next-line\n    const [_, childComponent] = await this.modalService.openViewRef(\n      EmergencyAddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.cipher = cipher;\n      }\n    );\n\n    return childComponent;\n  }\n\n  async load() {\n    const response = await this.apiService.postEmergencyAccessView(this.id);\n    this.ciphers = await this.getAllCiphers(response);\n    this.loaded = true;\n  }\n\n  async viewAttachments(cipher: CipherView) {\n    await this.modalService.openViewRef(\n      EmergencyAccessAttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipher = cipher;\n        comp.emergencyAccessId = this.id;\n      }\n    );\n  }\n\n  protected async getAllCiphers(response: EmergencyAccessViewResponse): Promise<CipherView[]> {\n    const ciphers = response.ciphers;\n\n    const decCiphers: CipherView[] = [];\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(response.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    const promises: any[] = [];\n    ciphers.forEach((cipherResponse) => {\n      const cipherData = new CipherData(cipherResponse);\n      const cipher = new Cipher(cipherData);\n      promises.push(cipher.decrypt(oldEncKey).then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.cipherService.getLocaleSortingFunction());\n\n    return decCiphers;\n  }\n}\n","export enum EmergencyAccessStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  RecoveryInitiated = 3,\n  RecoveryApproved = 4,\n}\n","export enum EmergencyAccessType {\n  View = 0,\n  Takeover = 1,\n}\n","export class EmergencyAccessConfirmRequest {\n  key: string;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessInviteRequest {\n  email: string;\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n}\n","import { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\n\nexport class EmergencyAccessUpdateRequest {\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n  keyEncrypted?: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"userAddEditTitle\">\n          <app-premium-badge *ngIf=\"readOnly\"></app-premium-badge>\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteEmergencyContactDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"email\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n            />\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userAccess\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/emergency-access/#user-access\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeView\"\n            [value]=\"emergencyAccessType.View\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeView\">\n            {{ \"view\" | i18n }}\n            <small>{{ \"viewDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeTakeover\"\n            [value]=\"emergencyAccessType.Takeover\"\n            [(ngModel)]=\"type\"\n            [disabled]=\"readOnly\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeTakeover\">\n            {{ \"takeover\" | i18n }}\n            <small>{{ \"takeoverDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-group col-6 mt-4\">\n          <label for=\"waitTime\">{{ \"waitTime\" | i18n }}</label>\n          <select\n            id=\"waitTime\"\n            name=\"waitTime\"\n            [(ngModel)]=\"waitTime\"\n            class=\"form-control\"\n            [disabled]=\"readOnly\"\n          >\n            <option *ngFor=\"let o of waitTimes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n          <small class=\"text-muted\">{{ \"waitTimeDesc\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          buttonType=\"primary\"\n          bitButton\n          [loading]=\"loading || form.loading\"\n          [disabled]=\"readOnly\"\n        >\n          {{ \"save\" | i18n }}\n        </button>\n        <button bitButton buttonType=\"secondary\" type=\"button\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            bitButton\n            buttonType=\"danger\"\n            type=\"button\"\n            (click)=\"delete()\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"$any(deleteBtn).loading\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EmergencyAccessType } from \"@bitwarden/common/enums/emergencyAccessType\";\nimport { EmergencyAccessInviteRequest } from \"@bitwarden/common/models/request/emergency-access-invite.request\";\nimport { EmergencyAccessUpdateRequest } from \"@bitwarden/common/models/request/emergency-access-update.request\";\n\n@Component({\n  selector: \"emergency-access-add-edit\",\n  templateUrl: \"emergency-access-add-edit.component.html\",\n})\nexport class EmergencyAccessAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() emergencyAccessId: string;\n  @Output() onSaved = new EventEmitter();\n  @Output() onDeleted = new EventEmitter();\n\n  loading = true;\n  readOnly = false;\n  editMode = false;\n  title: string;\n  email: string;\n  type: EmergencyAccessType = EmergencyAccessType.View;\n\n  formPromise: Promise<any>;\n\n  emergencyAccessType = EmergencyAccessType;\n  waitTimes: { name: string; value: number }[];\n  waitTime: number;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.emergencyAccessId != null;\n\n    this.waitTimes = [\n      { name: this.i18nService.t(\"oneDay\"), value: 1 },\n      { name: this.i18nService.t(\"days\", \"2\"), value: 2 },\n      { name: this.i18nService.t(\"days\", \"7\"), value: 7 },\n      { name: this.i18nService.t(\"days\", \"14\"), value: 14 },\n      { name: this.i18nService.t(\"days\", \"30\"), value: 30 },\n      { name: this.i18nService.t(\"days\", \"90\"), value: 90 },\n    ];\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editEmergencyContact\");\n      try {\n        const emergencyAccess = await this.apiService.getEmergencyAccess(this.emergencyAccessId);\n        this.type = emergencyAccess.type;\n        this.waitTime = emergencyAccess.waitTimeDays;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteEmergencyContact\");\n      this.waitTime = this.waitTimes[2].value;\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new EmergencyAccessUpdateRequest();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.putEmergencyAccess(this.emergencyAccessId, request);\n      } else {\n        const request = new EmergencyAccessInviteRequest();\n        request.email = this.email.trim();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.postEmergencyAccessInvite(request);\n      }\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSaved.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    this.onDeleted.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"emergency-access-confirm\",\n  templateUrl: \"emergency-access-confirm.component.html\",\n})\nexport class EmergencyAccessConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() emergencyAccessId: string;\n  @Input() formPromise: Promise<any>;\n  @Output() onConfirmed = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n\n  constructor(\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(this.userId);\n      if (publicKeyResponse != null) {\n        const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n        const fingerprint = await this.cryptoService.getFingerprint(this.userId, publicKey.buffer);\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    try {\n      this.onConfirmed.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export class EmergencyAccessPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ \"takeover\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPassword\"\n                type=\"password\"\n                name=\"NewMasterPasswordHash\"\n                class=\"form-control mb-1\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <app-password-strength\n                [password]=\"masterPassword\"\n                [email]=\"email\"\n                [showText]=\"true\"\n                (passwordStrengthResult)=\"getStrengthResult($event)\"\n              >\n              </app-password-strength>\n            </div>\n          </div>\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"password\"\n                name=\"MasterPasswordRetype\"\n                class=\"form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { takeUntil } from \"rxjs\";\n\nimport { ChangePasswordComponent } from \"@bitwarden/angular/components/change-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policy.data\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { EmergencyAccessPasswordRequest } from \"@bitwarden/common/models/request/emergency-access-password.request\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\n@Component({\n  selector: \"emergency-access-takeover\",\n  templateUrl: \"emergency-access-takeover.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EmergencyAccessTakeoverComponent\n  extends ChangePasswordComponent\n  implements OnInit, OnDestroy\n{\n  @Output() onDone = new EventEmitter();\n  @Input() emergencyAccessId: string;\n  @Input() name: string;\n  @Input() email: string;\n  @Input() kdf: KdfType;\n  @Input() kdfIterations: number;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private apiService: ApiService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    const response = await this.apiService.getEmergencyGrantorPolicies(this.emergencyAccessId);\n    if (response.data != null && response.data.length > 0) {\n      const policies = response.data.map(\n        (policyResponse: PolicyResponse) => new Policy(new PolicyData(policyResponse))\n      );\n\n      this.policyService\n        .masterPasswordPolicyOptions$(policies)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((enforcedPolicyOptions) => (this.enforcedPolicyOptions = enforcedPolicyOptions));\n    }\n  }\n\n  // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    const takeoverResponse = await this.apiService.postEmergencyAccessTakeover(\n      this.emergencyAccessId\n    );\n\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(takeoverResponse.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    if (oldEncKey == null) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"unexpectedError\")\n      );\n      return;\n    }\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      takeoverResponse.kdf,\n      takeoverResponse.kdfIterations\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    const encKey = await this.cryptoService.remakeEncKey(key, oldEncKey);\n\n    const request = new EmergencyAccessPasswordRequest();\n    request.newMasterPasswordHash = masterPasswordHash;\n    request.key = encKey[1].encryptedString;\n\n    this.apiService.postEmergencyAccessPassword(this.emergencyAccessId, request);\n\n    try {\n      this.onDone.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"emergencyAccess\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"emergencyAccessDesc\" | i18n }}\n  <a href=\"https://bitwarden.com/help/emergency-access/\" target=\"_blank\" rel=\"noopener\">\n    {{ \"learnMore\" | i18n }}.\n  </a>\n</p>\n\n<p *ngIf=\"isOrganizationOwner\">\n  <b>{{ \"warning\" | i18n }}:</b> {{ \"emergencyAccessOwnerWarning\" | i18n }}\n</p>\n\n<div class=\"page-header d-flex\">\n  <h2>\n    {{ \"trustedEmergencyContacts\" | i18n }}\n    <app-premium-badge></app-premium-badge>\n  </h2>\n  <div class=\"ml-auto d-flex\">\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      type=\"button\"\n      (click)=\"invite()\"\n      [disabled]=\"!canAccessPremium\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-plus bwi-fw\"></i>\n      {{ \"addEmergencyContact\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"trustedContacts && trustedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of trustedContacts; let i = index\">\n      <td width=\"30\">\n        <bit-avatar [text]=\"c | userName\" [id]=\"c.granteeId\" size=\"small\"></bit-avatar>\n      </td>\n      <td>\n        <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.email }}</a>\n        <span\n          bitBadge\n          badgeType=\"secondary\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n          >{{ \"invited\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n          >{{ \"accepted\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span bitBadge *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\">{{\n          \"emergencyAccessRecoveryApproved\" | i18n\n        }}</span>\n\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.View\">{{ \"view\" | i18n }}</span>\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <button\n          [bitMenuTriggerFor]=\"trustedContactOptions\"\n          class=\"tw-border-none tw-bg-transparent tw-text-main\"\n          type=\"button\"\n          appA11yTitle=\"{{ 'options' | i18n }}\"\n        >\n          <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu #trustedContactOptions>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n            (click)=\"reinvite(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n            {{ \"resendInvitation\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n            (click)=\"confirm(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n            {{ \"confirm\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n            (click)=\"approve(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n            {{ \"approve\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryInitiated ||\n              c.status === emergencyAccessStatusType.RecoveryApproved\n            \"\n            (click)=\"reject(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"reject\" | i18n }}\n          </button>\n          <button bitMenuItem (click)=\"remove(c)\">\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"remove\" | i18n }}\n          </button>\n        </bit-menu>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-container *ngIf=\"!trustedContacts || !trustedContacts.length\">\n  <p *ngIf=\"loaded\">{{ \"noTrustedContacts\" | i18n }}</p>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</ng-container>\n\n<div class=\"page-header spaced-header\">\n  <h2>{{ \"designatedEmergencyContacts\" | i18n }}</h2>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"grantedContacts && grantedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of grantedContacts; let i = index\">\n      <td width=\"30\">\n        <bit-avatar [text]=\"c | userName\" [id]=\"c.grantorId\" size=\"small\"></bit-avatar>\n      </td>\n      <td>\n        <span>{{ c.email }}</span>\n        <span bitBadge *ngIf=\"c.status === emergencyAccessStatusType.Invited\">{{\n          \"invited\" | i18n\n        }}</span>\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n          >{{ \"accepted\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"success\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\"\n          >{{ \"emergencyAccessRecoveryApproved\" | i18n }}</span\n        >\n\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.View\">{{ \"view\" | i18n }}</span>\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <button\n          [bitMenuTriggerFor]=\"grantedContactOptions\"\n          class=\"tw-border-none tw-bg-transparent tw-text-main\"\n          type=\"button\"\n          appA11yTitle=\"{{ 'options' | i18n }}\"\n        >\n          <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu #grantedContactOptions>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Confirmed\"\n            (click)=\"requestAccess(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n            {{ \"requestAccess\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryApproved &&\n              c.type === emergencyAccessType.Takeover\n            \"\n            (click)=\"takeover(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n            {{ \"takeover\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryApproved &&\n              c.type === emergencyAccessType.View\n            \"\n            [routerLink]=\"c.id\"\n          >\n            <i class=\"bwi bwi-fw bwi-eye\" aria-hidden=\"true\"></i>\n            {{ \"view\" | i18n }}\n          </button>\n          <button bitMenuItem (click)=\"remove(c)\">\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"remove\" | i18n }}\n          </button>\n        </bit-menu>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-container *ngIf=\"!grantedContacts || !grantedContacts.length\">\n  <p *ngIf=\"loaded\">{{ \"noGrantedAccess\" | i18n }}</p>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</ng-container>\n\n<ng-template #addEdit></ng-template>\n<ng-template #takeoverTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EmergencyAccessStatusType } from \"@bitwarden/common/enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"@bitwarden/common/enums/emergencyAccessType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EmergencyAccessConfirmRequest } from \"@bitwarden/common/models/request/emergency-access-confirm.request\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n} from \"@bitwarden/common/models/response/emergency-access.response\";\n\nimport { EmergencyAccessAddEditComponent } from \"./emergency-access-add-edit.component\";\nimport { EmergencyAccessConfirmComponent } from \"./emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"./emergency-access-takeover.component\";\n\n@Component({\n  selector: \"emergency-access\",\n  templateUrl: \"emergency-access.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EmergencyAccessComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"takeoverTemplate\", { read: ViewContainerRef, static: true })\n  takeoverModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  loaded = false;\n  canAccessPremium: boolean;\n  trustedContacts: EmergencyAccessGranteeDetailsResponse[];\n  grantedContacts: EmergencyAccessGrantorDetailsResponse[];\n  emergencyAccessType = EmergencyAccessType;\n  emergencyAccessStatusType = EmergencyAccessStatusType;\n  actionPromise: Promise<any>;\n  isOrganizationOwner: boolean;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const orgs = await this.organizationService.getAll();\n    this.isOrganizationOwner = orgs.some((o) => o.isOwner);\n    this.load();\n  }\n\n  async load() {\n    this.trustedContacts = (await this.apiService.getEmergencyAccessTrusted()).data;\n    this.grantedContacts = (await this.apiService.getEmergencyAccessGranted()).data;\n    this.loaded = true;\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  async edit(details: EmergencyAccessGranteeDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.emergencyAccessId = details?.id;\n        comp.readOnly = !this.canAccessPremium;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSaved.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeleted.subscribe(() => {\n          modal.close();\n          this.remove(details);\n        });\n      }\n    );\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  async reinvite(contact: EmergencyAccessGranteeDetailsResponse) {\n    if (this.actionPromise != null) {\n      return;\n    }\n    this.actionPromise = this.apiService.postEmergencyAccessReinvite(contact.id);\n    await this.actionPromise;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenReinvited\", contact.email)\n    );\n    this.actionPromise = null;\n  }\n\n  async confirm(contact: EmergencyAccessGranteeDetailsResponse) {\n    function updateUser() {\n      contact.status = EmergencyAccessStatusType.Confirmed;\n    }\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n    if (autoConfirm == null || !autoConfirm) {\n      const [modal] = await this.modalService.openViewRef(\n        EmergencyAccessConfirmComponent,\n        this.confirmModalRef,\n        (comp) => {\n          comp.name = this.userNamePipe.transform(contact);\n          comp.emergencyAccessId = contact.id;\n          comp.userId = contact?.granteeId;\n          // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n          comp.onConfirmed.subscribe(async () => {\n            modal.close();\n\n            comp.formPromise = this.doConfirmation(contact);\n            await comp.formPromise;\n\n            updateUser();\n            this.platformUtilsService.showToast(\n              \"success\",\n              null,\n              this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n            );\n          });\n        }\n      );\n      return;\n    }\n\n    this.actionPromise = this.doConfirmation(contact);\n    await this.actionPromise;\n    updateUser();\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n    );\n    this.actionPromise = null;\n  }\n\n  async remove(\n    details: EmergencyAccessGranteeDetailsResponse | EmergencyAccessGrantorDetailsResponse\n  ) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteEmergencyAccess(details.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(details))\n      );\n\n      if (details instanceof EmergencyAccessGranteeDetailsResponse) {\n        this.removeGrantee(details);\n      } else {\n        this.removeGrantor(details);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async requestAccess(details: EmergencyAccessGrantorDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"requestAccessConfirmation\", details.waitTimeDays.toString()),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"requestAccess\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessInitiate(details.id);\n\n    details.status = EmergencyAccessStatusType.RecoveryInitiated;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"requestSent\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async approve(details: EmergencyAccessGranteeDetailsResponse) {\n    const type = this.i18nService.t(\n      details.type === EmergencyAccessType.View ? \"view\" : \"takeover\"\n    );\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"approveAccessConfirmation\", this.userNamePipe.transform(details), type),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"approve\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessApprove(details.id);\n    details.status = EmergencyAccessStatusType.RecoveryApproved;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyApproved\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async reject(details: EmergencyAccessGranteeDetailsResponse) {\n    await this.apiService.postEmergencyAccessReject(details.id);\n    details.status = EmergencyAccessStatusType.Confirmed;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyRejected\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async takeover(details: EmergencyAccessGrantorDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessTakeoverComponent,\n      this.takeoverModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.email = details.email;\n        comp.emergencyAccessId = details != null ? details.id : null;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDone.subscribe(() => {\n          modal.close();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"passwordResetFor\", this.userNamePipe.transform(details))\n          );\n        });\n      }\n    );\n  }\n\n  private removeGrantee(details: EmergencyAccessGranteeDetailsResponse) {\n    const index = this.trustedContacts.indexOf(details);\n    if (index > -1) {\n      this.trustedContacts.splice(index, 1);\n    }\n  }\n\n  private removeGrantor(details: EmergencyAccessGrantorDetailsResponse) {\n    const index = this.grantedContacts.indexOf(details);\n    if (index > -1) {\n      this.grantedContacts.splice(index, 1);\n    }\n  }\n\n  // Encrypt the master password hash using the grantees public key, and send it to bitwarden for escrow.\n  private async doConfirmation(details: EmergencyAccessGranteeDetailsResponse) {\n    const encKey = await this.cryptoService.getEncKey();\n    const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n    const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n    try {\n      this.logService.debug(\n        \"User's fingerprint: \" +\n          (await this.cryptoService.getFingerprint(details.granteeId, publicKey.buffer)).join(\"-\")\n      );\n    } catch {\n      // Ignore errors since it's just a debug message\n    }\n\n    const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n    const request = new EmergencyAccessConfirmRequest();\n    request.key = encryptedKey.encryptedString;\n    await this.apiService.postEmergencyAccessConfirm(details.id, request);\n  }\n}\n","import { Directive, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormBuilder,\n  ValidationErrors,\n  Validator,\n} from \"@angular/forms\";\nimport { combineLatestWith, Subject, takeUntil } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\n@Directive()\nexport class VaultTimeoutInputComponent\n  implements ControlValueAccessor, Validator, OnInit, OnDestroy\n{\n  get showCustom() {\n    return this.form.get(\"vaultTimeout\").value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n  }\n\n  get exceedsMinimumTimout(): boolean {\n    return (\n      !this.showCustom || this.customTimeInMinutes() > VaultTimeoutInputComponent.MIN_CUSTOM_MINUTES\n    );\n  }\n\n  static CUSTOM_VALUE = -100;\n  static MIN_CUSTOM_MINUTES = 0;\n\n  form = this.formBuilder.group({\n    vaultTimeout: [null],\n    custom: this.formBuilder.group({\n      hours: [null],\n      minutes: [null],\n    }),\n  });\n\n  @Input() vaultTimeouts: { name: string; value: number }[];\n  vaultTimeoutPolicy: Policy;\n  vaultTimeoutPolicyHours: number;\n  vaultTimeoutPolicyMinutes: number;\n\n  private onChange: (vaultTimeout: number) => void;\n  private validatorChange: () => void;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.MaximumVaultTimeout)\n      .pipe(combineLatestWith(this.policyService.policies$), takeUntil(this.destroy$))\n      .subscribe(([policyAppliesToActiveUser, policies]) => {\n        if (policyAppliesToActiveUser) {\n          const vaultTimeoutPolicy = policies.find(\n            (policy) => policy.type === PolicyType.MaximumVaultTimeout && policy.enabled\n          );\n\n          this.vaultTimeoutPolicy = vaultTimeoutPolicy;\n          this.applyVaultTimeoutPolicy();\n        }\n      });\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.form.valueChanges.subscribe(async (value) => {\n      this.onChange(this.getVaultTimeout(value));\n    });\n\n    // Assign the previous value to the custom fields\n    this.form.get(\"vaultTimeout\").valueChanges.subscribe((value) => {\n      if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n        return;\n      }\n\n      const current = Math.max(this.form.value.vaultTimeout, 0);\n      this.form.patchValue({\n        custom: {\n          hours: Math.floor(current / 60),\n          minutes: current % 60,\n        },\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngOnChanges() {\n    this.vaultTimeouts.push({\n      name: this.i18nService.t(\"custom\"),\n      value: VaultTimeoutInputComponent.CUSTOM_VALUE,\n    });\n  }\n\n  getVaultTimeout(value: any) {\n    if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n      return value.vaultTimeout;\n    }\n\n    return value.custom.hours * 60 + value.custom.minutes;\n  }\n\n  writeValue(value: number): void {\n    if (value == null) {\n      return;\n    }\n\n    if (this.vaultTimeouts.every((p) => p.value !== value)) {\n      this.form.setValue({\n        vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n        custom: {\n          hours: Math.floor(value / 60),\n          minutes: value % 60,\n        },\n      });\n      return;\n    }\n\n    this.form.patchValue({\n      vaultTimeout: value,\n    });\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: any): void {\n    // Empty\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Empty\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n      return { policyError: true };\n    }\n\n    if (!this.exceedsMinimumTimout) {\n      return { minTimeoutError: true };\n    }\n\n    return null;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n\n  private customTimeInMinutes() {\n    return this.form.value.custom.hours * 60 + this.form.value.custom.minutes;\n  }\n\n  private applyVaultTimeoutPolicy() {\n    this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n    this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n    this.vaultTimeouts = this.vaultTimeouts.filter(\n      (t) =>\n        t.value <= this.vaultTimeoutPolicy.data.minutes &&\n        (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n        t.value != null\n    );\n    this.validatorChange();\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\">\n  {{ \"vaultTimeoutPolicyInEffect\" | i18n: vaultTimeoutPolicyHours:vaultTimeoutPolicyMinutes }}\n</app-callout>\n\n<div [formGroup]=\"form\">\n  <div class=\"form-group\">\n    <label for=\"vaultTimeout\">{{ \"vaultTimeout\" | i18n }}</label>\n    <select\n      id=\"vaultTimeout\"\n      name=\"VaultTimeout\"\n      formControlName=\"vaultTimeout\"\n      class=\"form-control\"\n    >\n      <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{ o.name }}</option>\n    </select>\n    <small class=\"form-text text-muted\">{{ \"vaultTimeoutDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\" *ngIf=\"showCustom\" formGroupName=\"custom\">\n    <label for=\"customVaultTimeout\">{{ \"customVaultTimeout\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n\n    <small *ngIf=\"!exceedsMinimumTimout\" class=\"tw-text-danger\">\n      <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i> {{ \"vaultCustomTimeoutMinimum\" | i18n }}\n    </small>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VaultTimeoutInputComponent as VaultTimeoutInputComponentBase } from \"@bitwarden/angular/components/settings/vault-timeout-input.component\";\n\n@Component({\n  selector: \"app-vault-timeout-input\",\n  templateUrl: \"vault-timeout-input.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n  ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {}\n","<div class=\"page-header\">\n  <h1>{{ \"preferences\" | i18n }}</h1>\n</div>\n<p>{{ \"preferencesDesc\" | i18n }}</p>\n<form (ngSubmit)=\"submit()\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <app-vault-timeout-input\n        [vaultTimeouts]=\"vaultTimeouts\"\n        [formControl]=\"vaultTimeout\"\n        ngDefaultControl\n      >\n      </app-vault-timeout-input>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label>{{ \"vaultTimeoutAction\" | i18n }}</label>\n    <div class=\"form-check form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLock\"\n        value=\"lock\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLock\">\n        {{ \"lock\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLockDesc\" | i18n }}</small>\n      </label>\n    </div>\n    <div class=\"form-check mt-2 form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLogOut\"\n        value=\"logOut\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n        (ngModelChange)=\"vaultTimeoutActionChanged($event)\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLogOut\">\n        {{ \"logOut\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLogOutDesc\" | i18n }}</small>\n      </label>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <div class=\"d-flex\">\n          <label for=\"locale\">{{ \"language\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/localization/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <select id=\"locale\" name=\"Locale\" [(ngModel)]=\"locale\" class=\"form-control\">\n          <option *ngFor=\"let o of localeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"languageDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFavicons\"\n        name=\"enableFavicons\"\n        [(ngModel)]=\"enableFavicons\"\n      />\n      <label class=\"form-check-label\" for=\"enableFavicons\">\n        {{ \"enableFavicon\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/website-icons/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"faviconDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFullWidth\"\n        name=\"enableFullWidth\"\n        [(ngModel)]=\"enableFullWidth\"\n      />\n      <label class=\"form-check-label\" for=\"enableFullWidth\">\n        {{ \"enableFullWidth\" | i18n }}\n      </label>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"enableFullWidthDesc\" | i18n }}</small>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"theme\">{{ \"theme\" | i18n }}</label>\n        <select id=\"theme\" name=\"theme\" [(ngModel)]=\"theme\" class=\"form-control\">\n          <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"themeDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormControl } from \"@angular/forms\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-preferences\",\n  templateUrl: \"preferences.component.html\",\n})\nexport class PreferencesComponent implements OnInit {\n  vaultTimeoutAction = \"lock\";\n  enableFavicons: boolean;\n  enableFullWidth: boolean;\n  theme: ThemeType;\n  locale: string;\n  vaultTimeouts: { name: string; value: number }[];\n  localeOptions: any[];\n  themeOptions: any[];\n\n  vaultTimeout: UntypedFormControl = new UntypedFormControl(null);\n\n  private startingLocale: string;\n  private startingTheme: ThemeType;\n\n  constructor(\n    private stateService: StateService,\n    private i18nService: I18nService,\n    private vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    private platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private themingService: AbstractThemingService\n  ) {\n    this.vaultTimeouts = [\n      { name: i18nService.t(\"oneMinute\"), value: 1 },\n      { name: i18nService.t(\"fiveMinutes\"), value: 5 },\n      { name: i18nService.t(\"fifteenMinutes\"), value: 15 },\n      { name: i18nService.t(\"thirtyMinutes\"), value: 30 },\n      { name: i18nService.t(\"oneHour\"), value: 60 },\n      { name: i18nService.t(\"fourHours\"), value: 240 },\n      { name: i18nService.t(\"onRefresh\"), value: -1 },\n    ];\n    if (this.platformUtilsService.isDev()) {\n      this.vaultTimeouts.push({ name: i18nService.t(\"never\"), value: null });\n    }\n\n    const localeOptions: any[] = [];\n    i18nService.supportedTranslationLocales.forEach((locale) => {\n      let name = locale;\n      if (i18nService.localeNames.has(locale)) {\n        name += \" - \" + i18nService.localeNames.get(locale);\n      }\n      localeOptions.push({ name: name, value: locale });\n    });\n    localeOptions.sort(Utils.getSortFunction(i18nService, \"name\"));\n    localeOptions.splice(0, 0, { name: i18nService.t(\"default\"), value: null });\n    this.localeOptions = localeOptions;\n    this.themeOptions = [\n      { name: i18nService.t(\"themeLight\"), value: ThemeType.Light },\n      { name: i18nService.t(\"themeDark\"), value: ThemeType.Dark },\n      { name: i18nService.t(\"themeSystem\"), value: ThemeType.System },\n    ];\n  }\n\n  async ngOnInit() {\n    this.vaultTimeout.setValue(await this.vaultTimeoutSettingsService.getVaultTimeout());\n    this.vaultTimeoutAction = await this.stateService.getVaultTimeoutAction();\n    this.enableFavicons = !(await this.stateService.getDisableFavicon());\n    this.enableFullWidth = await this.stateService.getEnableFullWidth();\n\n    this.locale = (await this.stateService.getLocale()) ?? null;\n    this.startingLocale = this.locale;\n\n    this.theme = await this.stateService.getTheme();\n    this.startingTheme = this.theme;\n  }\n\n  async submit() {\n    if (!this.vaultTimeout.valid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"vaultTimeoutRangeError\")\n      );\n      return;\n    }\n\n    await this.vaultTimeoutSettingsService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n    await this.stateService.setDisableFavicon(!this.enableFavicons);\n    await this.stateService.setEnableFullWidth(this.enableFullWidth);\n    this.messagingService.send(\"setFullWidth\");\n    if (this.theme !== this.startingTheme) {\n      await this.themingService.updateConfiguredTheme(this.theme);\n      this.startingTheme = this.theme;\n    }\n    await this.stateService.setLocale(this.locale);\n    if (this.locale !== this.startingLocale) {\n      window.location.reload();\n    } else {\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"preferencesUpdated\")\n      );\n    }\n  }\n\n  async vaultTimeoutActionChanged(newValue: string) {\n    if (newValue === \"logOut\") {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmation\"),\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmationTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeoutAction = \"lock\";\n        return;\n      }\n    }\n    this.vaultTimeoutAction = newValue;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nimport { FolderRequest } from \"./folder.request\";\n\nexport class FolderWithIdRequest extends FolderRequest {\n  id: string;\n\n  constructor(folder: Folder) {\n    super(folder);\n    this.id = folder.id;\n  }\n}\n","import { Send } from \"../domain/send\";\n\nimport { SendRequest } from \"./send.request\";\n\nexport class SendWithIdRequest extends SendRequest {\n  id: string;\n\n  constructor(send: Send) {\n    super(send);\n    this.id = send.id;\n  }\n}\n","import { CipherWithIdRequest } from \"./cipher-with-id.request\";\nimport { FolderWithIdRequest } from \"./folder-with-id.request\";\nimport { SendWithIdRequest } from \"./send-with-id.request\";\n\nexport class UpdateKeyRequest {\n  ciphers: CipherWithIdRequest[] = [];\n  folders: FolderWithIdRequest[] = [];\n  sends: SendWithIdRequest[] = [];\n  masterPasswordHash: string;\n  privateKey: string;\n  key: string;\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"changeMasterPassword\" | i18n }}</h1>\n</div>\n\n<bit-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</bit-callout>\n<app-callout\n  type=\"info\"\n  [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n  *ngIf=\"enforcedPolicyOptions\"\n>\n</app-callout>\n\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n        <input\n          id=\"currentMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"currentMasterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n        <input\n          id=\"newMasterPassword\"\n          type=\"password\"\n          name=\"NewMasterPasswordHash\"\n          class=\"form-control mb-1\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n        <app-password-strength\n          [password]=\"masterPassword\"\n          [email]=\"email\"\n          [showText]=\"true\"\n          (passwordStrengthResult)=\"getStrengthResult($event)\"\n        >\n        </app-password-strength>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n        <input\n          id=\"masterPasswordRetype\"\n          type=\"password\"\n          name=\"MasterPasswordRetype\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPasswordRetype\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"masterPasswordHint\">{{ \"masterPassHintLabel\" | i18n }}</label>\n    <input\n      id=\"masterPasswordHint\"\n      class=\"form-control\"\n      maxlength=\"50\"\n      type=\"text\"\n      name=\"MasterPasswordHint\"\n      [(ngModel)]=\"masterPasswordHint\"\n    />\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"rotateEncKey\"\n        name=\"RotateEncKey\"\n        [(ngModel)]=\"rotateEncKey\"\n        (change)=\"rotateEncKeyClicked()\"\n      />\n      <label class=\"form-check-label\" for=\"rotateEncKey\">\n        {{ \"rotateAccountEncKey\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"changeMasterPassword\" | i18n }}\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"@bitwarden/angular/components/change-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EmergencyAccessStatusType } from \"@bitwarden/common/enums/emergencyAccessStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { CipherWithIdRequest } from \"@bitwarden/common/models/request/cipher-with-id.request\";\nimport { EmergencyAccessUpdateRequest } from \"@bitwarden/common/models/request/emergency-access-update.request\";\nimport { FolderWithIdRequest } from \"@bitwarden/common/models/request/folder-with-id.request\";\nimport { PasswordRequest } from \"@bitwarden/common/models/request/password.request\";\nimport { SendWithIdRequest } from \"@bitwarden/common/models/request/send-with-id.request\";\nimport { UpdateKeyRequest } from \"@bitwarden/common/models/request/update-key.request\";\n\n@Component({\n  selector: \"app-change-password\",\n  templateUrl: \"change-password.component.html\",\n})\nexport class ChangePasswordComponent extends BaseChangePasswordComponent {\n  rotateEncKey = false;\n  currentMasterPassword: string;\n  masterPasswordHint: string;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private syncService: SyncService,\n    private apiService: ApiService,\n    private sendService: SendService,\n    private organizationService: OrganizationService,\n    private keyConnectorService: KeyConnectorService,\n    private router: Router,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      this.router.navigate([\"/settings/security/two-factor\"]);\n    }\n\n    this.masterPasswordHint = (await this.apiService.getProfile()).masterPasswordHint;\n    await super.ngOnInit();\n  }\n\n  async rotateEncKeyClicked() {\n    if (this.rotateEncKey) {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      let hasOldAttachments = false;\n      if (ciphers != null) {\n        for (let i = 0; i < ciphers.length; i++) {\n          if (ciphers[i].organizationId == null && ciphers[i].hasOldAttachments) {\n            hasOldAttachments = true;\n            break;\n          }\n        }\n      }\n\n      if (hasOldAttachments) {\n        const learnMore = await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"oldAttachmentsNeedFixDesc\"),\n          null,\n          this.i18nService.t(\"learnMore\"),\n          this.i18nService.t(\"close\"),\n          \"warning\"\n        );\n        if (learnMore) {\n          this.platformUtilsService.launchUri(\n            \"https://bitwarden.com/help/attachments/#add-storage-space\"\n          );\n        }\n        this.rotateEncKey = false;\n        return;\n      }\n\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateEncryptionKeyWarning\") +\n          \" \" +\n          this.i18nService.t(\"updateEncryptionKeyExportWarning\") +\n          \" \" +\n          this.i18nService.t(\"rotateEncKeyConfirmation\"),\n        this.i18nService.t(\"rotateEncKeyTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        this.rotateEncKey = false;\n      }\n    }\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    await super.submit();\n  }\n\n  async setupSubmitActions() {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n\n    if (this.rotateEncKey) {\n      await this.syncService.fullSync(true);\n    }\n\n    return super.setupSubmitActions();\n  }\n\n  async performSubmitActions(\n    newMasterPasswordHash: string,\n    newKey: SymmetricCryptoKey,\n    newEncKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const request = new PasswordRequest();\n    request.masterPasswordHash = await this.cryptoService.hashPassword(\n      this.currentMasterPassword,\n      null\n    );\n    request.masterPasswordHint = this.masterPasswordHint;\n    request.newMasterPasswordHash = newMasterPasswordHash;\n    request.key = newEncKey[1].encryptedString;\n\n    try {\n      if (this.rotateEncKey) {\n        this.formPromise = this.apiService.postPassword(request).then(() => {\n          return this.updateKey(newKey, request.newMasterPasswordHash);\n        });\n      } else {\n        this.formPromise = this.apiService.postPassword(request);\n      }\n\n      await this.formPromise;\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  private async updateKey(key: SymmetricCryptoKey, masterPasswordHash: string) {\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = masterPasswordHash;\n\n    const folders = await firstValueFrom(this.folderService.folderViews$);\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    const sends = await this.sendService.getAll();\n    await Promise.all(\n      sends.map(async (send) => {\n        const cryptoKey = await this.cryptoService.decryptToBytes(send.key, null);\n        send.key = (await this.cryptoService.encrypt(cryptoKey, encKey[0])) ?? send.key;\n        request.sends.push(new SendWithIdRequest(send));\n      })\n    );\n\n    await this.apiService.postAccountKey(request);\n\n    await this.updateEmergencyAccesses(encKey[0]);\n\n    await this.updateAllResetPasswordKeys(encKey[0], masterPasswordHash);\n  }\n\n  private async updateEmergencyAccesses(encKey: SymmetricCryptoKey) {\n    const emergencyAccess = await this.apiService.getEmergencyAccessTrusted();\n    const allowedStatuses = [\n      EmergencyAccessStatusType.Confirmed,\n      EmergencyAccessStatusType.RecoveryInitiated,\n      EmergencyAccessStatusType.RecoveryApproved,\n    ];\n\n    const filteredAccesses = emergencyAccess.data.filter((d) => allowedStatuses.includes(d.status));\n\n    for (const details of filteredAccesses) {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      const updateRequest = new EmergencyAccessUpdateRequest();\n      updateRequest.type = details.type;\n      updateRequest.waitTimeDays = details.waitTimeDays;\n      updateRequest.keyEncrypted = encryptedKey.encryptedString;\n\n      await this.apiService.putEmergencyAccess(details.id, updateRequest);\n    }\n  }\n\n  private async updateAllResetPasswordKeys(encKey: SymmetricCryptoKey, masterPasswordHash: string) {\n    const orgs = await this.organizationService.getAll();\n\n    for (const org of orgs) {\n      // If not already enrolled, skip\n      if (!org.resetPasswordEnrolled) {\n        continue;\n      }\n\n      // Retrieve public key\n      const response = await this.organizationApiService.getKeys(org.id);\n      const publicKey = Utils.fromB64ToArray(response?.publicKey);\n\n      // Re-enroll - encrpyt user's encKey.key with organization public key\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Create/Execute request\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.masterPasswordHash = masterPasswordHash;\n      request.resetPasswordKey = encryptedKey.encryptedString;\n\n      await this.organizationUserService.putOrganizationUserResetPasswordEnrollment(\n        org.id,\n        org.userId,\n        request\n      );\n    }\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { PasswordRequest } from \"./password.request\";\n\nexport class KdfRequest extends PasswordRequest {\n  kdf: KdfType;\n  kdfIterations: number;\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"encKeySettings\" | i18n }}</h1>\n</div>\n<bit-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</bit-callout>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"kdfMasterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"kdfMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdf\">{{ \"kdfAlgorithm\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://en.wikipedia.org/wiki/Key_derivation_function\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <select id=\"kdf\" name=\"Kdf\" [(ngModel)]=\"kdf\" class=\"form-control\" required>\n          <option *ngFor=\"let o of kdfOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdfIterations\">{{ \"kdfIterations\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://bitwarden.com/help/what-encryption-is-used/#pbkdf2\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <input\n          id=\"kdfIterations\"\n          type=\"number\"\n          min=\"5000\"\n          max=\"2000000\"\n          name=\"KdfIterations\"\n          class=\"form-control\"\n          [(ngModel)]=\"kdfIterations\"\n          required\n        />\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-group\">\n        <div class=\"small form-text text-muted\">\n          <p>{{ \"kdfIterationsDesc\" | i18n: (recommendedKdfIterations | number) }}</p>\n          <strong>{{ \"warning\" | i18n }}</strong\n          >: {{ \"kdfIterationsWarning\" | i18n: (50000 | number) }}\n        </div>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"changeKdf\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { KdfRequest } from \"@bitwarden/common/models/request/kdf.request\";\n\n@Component({\n  selector: \"app-change-kdf\",\n  templateUrl: \"change-kdf.component.html\",\n})\nexport class ChangeKdfComponent implements OnInit {\n  masterPassword: string;\n  kdfIterations: number;\n  kdf = KdfType.PBKDF2_SHA256;\n  kdfOptions: any[] = [];\n  formPromise: Promise<any>;\n  recommendedKdfIterations = DEFAULT_KDF_ITERATIONS;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.kdfOptions = [{ name: \"PBKDF2 SHA-256\", value: KdfType.PBKDF2_SHA256 }];\n  }\n\n  async ngOnInit() {\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfIterations = await this.stateService.getKdfIterations();\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    const request = new KdfRequest();\n    request.kdf = this.kdf;\n    request.kdfIterations = this.kdfIterations;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n    const email = await this.stateService.getEmail();\n    const newKey = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email,\n      this.kdf,\n      this.kdfIterations\n    );\n    request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      newKey\n    );\n    const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n    request.key = newEncKey[1].encryptedString;\n    try {\n      this.formPromise = this.apiService.postAccountKdf(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"encKeySettingsChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<app-change-kdf *ngIf=\"showChangeKdf\"></app-change-kdf>\n<div\n  [ngClass]=\"{ 'tabbed-header': !showChangeKdf, 'secondary-header': showChangeKdf }\"\n  class=\"border-0 mb-0\"\n>\n  <h1>{{ \"apiKey\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"userApiKeyDesc\" | i18n }}\n</p>\n<button bitButton buttonType=\"secondary\" (click)=\"viewUserApiKey()\">\n  {{ \"viewApiKey\" | i18n }}\n</button>\n<button bitButton buttonType=\"secondary\" (click)=\"rotateUserApiKey()\">\n  {{ \"rotateApiKey\" | i18n }}\n</button>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { ApiKeyComponent } from \"./api-key.component\";\n\n@Component({\n  selector: \"app-security-keys\",\n  templateUrl: \"security-keys.component.html\",\n})\nexport class SecurityKeysComponent implements OnInit {\n  @ViewChild(\"viewUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  viewUserApiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateUserApiKeyModalRef: ViewContainerRef;\n\n  showChangeKdf = true;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private modalService: ModalService,\n    private apiService: ApiService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeKdf = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async viewUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.viewUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"userApiKeyDesc\";\n    });\n  }\n\n  async rotateUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.isRotation = true;\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserRotateApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div class=\"tabbed-nav d-flex flex-column\">\n  <ul class=\"nav nav-tabs\">\n    <ng-container *ngIf=\"showChangePassword\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"change-password\" routerLinkActive=\"active\">\n          {{ \"masterPassword\" | i18n }}\n        </a>\n      </li>\n    </ng-container>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"two-factor\" routerLinkActive=\"active\">\n        {{ \"twoStepLogin\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"security-keys\" routerLinkActive=\"active\">\n        {{ \"keys\" | i18n }}\n      </a>\n    </li>\n  </ul>\n</div>\n<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\n\n@Component({\n  selector: \"app-security\",\n  templateUrl: \"security.component.html\",\n})\nexport class SecurityComponent {\n  showChangePassword = true;\n\n  constructor(private keyConnectorService: KeyConnectorService) {}\n\n  async ngOnInit() {\n    this.showChangePassword = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { ChangePasswordComponent } from \"./change-password.component\";\nimport { SecurityKeysComponent } from \"./security-keys.component\";\nimport { SecurityComponent } from \"./security.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SecurityComponent,\n    data: { titleId: \"security\" },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"change-password\" },\n      {\n        path: \"change-password\",\n        component: ChangePasswordComponent,\n        data: { titleId: \"masterPassword\" },\n      },\n      {\n        path: \"two-factor\",\n        component: TwoFactorSetupComponent,\n        data: { titleId: \"twoStepLogin\" },\n      },\n      {\n        path: \"security-keys\",\n        component: SecurityKeysComponent,\n        data: { titleId: \"keys\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SecurityRoutingModule {}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"accountSettings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myAccount\" | i18n }}\n          </a>\n          <a routerLink=\"security\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"security\" | i18n }}\n          </a>\n          <a routerLink=\"preferences\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"preferences\" | i18n }}\n          </a>\n          <a\n            routerLink=\"subscription\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"!hideSubscription\"\n          >\n            {{ \"subscription\" | i18n }}\n          </a>\n          <a routerLink=\"domain-rules\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"domainRules\" | i18n }}\n          </a>\n          <a routerLink=\"emergency-access\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"emergencyAccess\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sponsored-families\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"hasFamilySponsorshipAvailable\"\n          >\n            {{ \"sponsoredFamilies\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\nimport { StateService } from \"../core\";\n\nconst BroadcasterSubscriptionId = \"SettingsComponent\";\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  premium: boolean;\n  selfHosted: boolean;\n  hasFamilySponsorshipAvailable: boolean;\n  hideSubscription: boolean;\n\n  constructor(\n    private tokenService: TokenService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  async ngOnInit() {\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"purchasedPremium\":\n            await this.load();\n            break;\n          default:\n        }\n      });\n    });\n\n    this.selfHosted = await this.platformUtilsService.isSelfHost();\n    await this.load();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    this.premium = await this.stateService.getHasPremiumPersonally();\n    this.hasFamilySponsorshipAvailable = await this.organizationService.canManageSponsorships();\n    const hasPremiumFromOrg = await this.stateService.getHasPremiumFromOrganization();\n    let billing = null;\n    if (!this.selfHosted) {\n      billing = await this.apiService.getUserBillingHistory();\n    }\n    this.hideSubscription =\n      !this.premium && hasPremiumFromOrg && (this.selfHosted || billing?.hasNoHistory);\n  }\n}\n","import { AbstractControl, AsyncValidatorFn, ValidationErrors } from \"@angular/forms\";\n\nexport function notAllowedValueAsync(\n  valueGetter: () => Promise<string>,\n  caseInsensitive = false\n): AsyncValidatorFn {\n  return async (control: AbstractControl): Promise<ValidationErrors | null> => {\n    let notAllowedValue = await valueGetter();\n    let controlValue = control.value;\n    if (caseInsensitive) {\n      notAllowedValue = notAllowedValue.toLowerCase();\n      controlValue = controlValue.toLowerCase();\n    }\n\n    if (controlValue === notAllowedValue) {\n      return {\n        notAllowedValue: true,\n      };\n    }\n  };\n}\n","<td>\n  {{ sponsoringOrg.familySponsorshipFriendlyName }}\n</td>\n<td>{{ sponsoringOrg.name }}</td>\n<td>\n  <span [ngClass]=\"statusClass\">{{ statusMessage }}</span>\n</td>\n<td class=\"table-action-right\">\n  <div class=\"dropdown\" appListDropdown>\n    <button\n      *ngIf=\"!sponsoringOrg.familySponsorshipToDelete\"\n      class=\"btn btn-outline-secondary dropdown-toggle\"\n      type=\"button\"\n      id=\"dropdownMenuButton\"\n      data-toggle=\"dropdown\"\n      aria-haspopup=\"true\"\n      aria-expanded=\"false\"\n      appA11yTitle=\"{{ 'options' | i18n }}\"\n    >\n      <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n    </button>\n    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n      <button\n        #resendEmailBtn\n        *ngIf=\"!isSelfHosted && !sponsoringOrg.familySponsorshipValidUntil\"\n        [appApiAction]=\"resendEmailPromise\"\n        class=\"dropdown-item btn-submit\"\n        [disabled]=\"$any(resendEmailBtn).loading\"\n        (click)=\"resendEmail()\"\n        [attr.aria-label]=\"'resendEmailLabel' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"resendEmail\" | i18n }}</span>\n      </button>\n      <button\n        #revokeSponsorshipBtn\n        [appApiAction]=\"revokeSponsorshipPromise\"\n        class=\"dropdown-item text-danger btn-submit\"\n        [disabled]=\"$any(revokeSponsorshipBtn).loading\"\n        (click)=\"revokeSponsorship()\"\n        [attr.aria-label]=\"'revokeAccount' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"remove\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</td>\n","import { formatDate } from \"@angular/common\";\nimport { Component, EventEmitter, Input, Output, OnInit } from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"[sponsoring-org-row]\",\n  templateUrl: \"sponsoring-org-row.component.html\",\n})\nexport class SponsoringOrgRowComponent implements OnInit {\n  @Input() sponsoringOrg: Organization = null;\n  @Input() isSelfHosted = false;\n\n  @Output() sponsorshipRemoved = new EventEmitter();\n\n  statusMessage = \"loading\";\n  statusClass: \"text-success\" | \"text-danger\" = \"text-success\";\n\n  revokeSponsorshipPromise: Promise<any>;\n  resendEmailPromise: Promise<any>;\n\n  private locale = \"\";\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private logService: LogService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    this.locale = await firstValueFrom(this.i18nService.locale$);\n\n    this.setStatus(\n      this.isSelfHosted,\n      this.sponsoringOrg.familySponsorshipToDelete,\n      this.sponsoringOrg.familySponsorshipValidUntil,\n      this.sponsoringOrg.familySponsorshipLastSyncDate\n    );\n  }\n\n  async revokeSponsorship() {\n    try {\n      this.revokeSponsorshipPromise = this.doRevokeSponsorship();\n      await this.revokeSponsorshipPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.revokeSponsorshipPromise = null;\n  }\n\n  async resendEmail() {\n    this.resendEmailPromise = this.apiService.postResendSponsorshipOffer(this.sponsoringOrg.id);\n    await this.resendEmailPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailSent\"));\n    this.resendEmailPromise = null;\n  }\n\n  get isSentAwaitingSync() {\n    return this.isSelfHosted && !this.sponsoringOrg.familySponsorshipLastSyncDate;\n  }\n\n  private async doRevokeSponsorship() {\n    const isConfirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"revokeSponsorshipConfirmation\"),\n      `${this.i18nService.t(\"remove\")} ${this.sponsoringOrg.familySponsorshipFriendlyName}?`,\n      this.i18nService.t(\"remove\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!isConfirmed) {\n      return;\n    }\n\n    await this.apiService.deleteRevokeSponsorship(this.sponsoringOrg.id);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reclaimedFreePlan\"));\n    this.sponsorshipRemoved.emit();\n  }\n\n  private setStatus(\n    selfHosted: boolean,\n    toDelete?: boolean,\n    validUntil?: Date,\n    lastSyncDate?: Date\n  ) {\n    /*\n     * Possible Statuses:\n     * Requested (self-hosted only)\n     * Sent\n     * Active\n     * RequestRevoke\n     * RevokeWhenExpired\n     */\n\n    if (toDelete && validUntil) {\n      // They want to delete but there is a valid until date which means there is an active sponsorship\n      this.statusMessage = this.i18nService.t(\n        \"revokeWhenExpired\",\n        formatDate(validUntil, \"MM/dd/yyyy\", this.locale)\n      );\n      this.statusClass = \"text-danger\";\n    } else if (toDelete) {\n      // They want to delete and we don't have a valid until date so we can\n      // this should only happen on a self-hosted install\n      this.statusMessage = this.i18nService.t(\"requestRemoved\");\n      this.statusClass = \"text-danger\";\n    } else if (validUntil) {\n      // They don't want to delete and they have a valid until date\n      // that means they are actively sponsoring someone\n      this.statusMessage = this.i18nService.t(\"active\");\n      this.statusClass = \"text-success\";\n    } else if (selfHosted && lastSyncDate) {\n      // We are on a self-hosted install and it has been synced but we have not gotten\n      // a valid until date so we can't know if they are actively sponsoring someone\n      this.statusMessage = this.i18nService.t(\"sent\");\n      this.statusClass = \"text-success\";\n    } else if (!selfHosted) {\n      // We are in cloud and all other status checks have been false therefore we have\n      // sent the request but it hasn't been accepted yet\n      this.statusMessage = this.i18nService.t(\"sent\");\n      this.statusClass = \"text-success\";\n    } else {\n      // We are on a self-hosted install and we have not synced yet\n      this.statusMessage = this.i18nService.t(\"requested\");\n      this.statusClass = \"text-success\";\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"sponsoredFamilies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"!loading\">\n  <p>\n    {{ \"sponsoredFamiliesEligible\" | i18n }}\n  </p>\n  <div>\n    {{ \"sponsoredFamiliesInclude\" | i18n }}:\n    <ul class=\"inset-list\">\n      <li>{{ \"sponsoredFamiliesPremiumAccess\" | i18n }}</li>\n      <li>{{ \"sponsoredFamiliesSharedCollections\" | i18n }}</li>\n    </ul>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    [formGroup]=\"sponsorshipForm\"\n    ngNativeValidate\n    *ngIf=\"anyOrgsAvailable$ | async\"\n  >\n    <div class=\"form-group col-7\">\n      <label for=\"availableSponsorshipOrg\">{{ \"familiesSponsoringOrgSelect\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        formControlName=\"selectedSponsorshipOrgId\"\n        class=\"form-control\"\n        required\n      >\n        <option disabled=\"true\" value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option *ngFor=\"let o of availableSponsorshipOrgs$ | async\" [ngValue]=\"o.id\">\n          {{ o.name }}\n        </option>\n      </select>\n    </div>\n    <div class=\"form-group col-7\">\n      <label for=\"sponsorshipEmail\">{{ \"sponsoredFamiliesEmail\" | i18n }}:</label>\n      <input\n        id=\"sponsorshipEmail\"\n        class=\"form-control\"\n        inputmode=\"email\"\n        formControlName=\"sponsorshipEmail\"\n        name=\"sponsorshipEmail\"\n        required\n        [attr.aria-invalid]=\"sponsorshipEmailControl.invalid\"\n      />\n      <small\n        aria-errormessage=\"sponsorshipEmail\"\n        *ngIf=\"sponsorshipEmailControl.errors?.notAllowedValue\"\n        class=\"error-inline\"\n        role=\"alert\"\n      >\n        <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i>\n        {{ \"cannotSponsorSelf\" | i18n }}\n      </small>\n      <small\n        aria-errormessage=\"sponsorshipEmail\"\n        *ngIf=\"sponsorshipEmailControl.errors?.email\"\n        class=\"error-inline\"\n        role=\"alert\"\n      >\n        <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i>\n        {{ \"invalidEmail\" | i18n }}\n      </small>\n    </div>\n    <div class=\"form-group col-7\">\n      <button class=\"btn btn-primary btn-submit mt-2\" type=\"submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"redeem\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n  <ng-container *ngIf=\"anyActiveSponsorships$ | async\">\n    <div class=\"border-bottom\">\n      <table class=\"table table-hover table-list\">\n        <thead>\n          <tr>\n            <th>{{ \"recipient\" | i18n }}</th>\n            <th>{{ \"sponsoringOrg\" | i18n }}</th>\n            <th>{{ \"status\" | i18n }}</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <ng-container *ngFor=\"let o of activeSponsorshipOrgs$ | async\">\n            <tr\n              sponsoring-org-row\n              [sponsoringOrg]=\"o\"\n              [isSelfHosted]=\"isSelfHosted\"\n              (sponsorshipRemoved)=\"forceReload()\"\n            ></tr>\n          </ng-container>\n        </tbody>\n      </table>\n    </div>\n    <small>{{ \"sponsoredFamiliesLeaveCopy\" | i18n }}</small>\n  </ng-container>\n</ng-container>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { map, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport { notAllowedValueAsync } from \"@bitwarden/angular/validators/notAllowedValueAsync.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PlanSponsorshipType } from \"@bitwarden/common/enums/planSponsorshipType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\ninterface RequestSponsorshipForm {\n  selectedSponsorshipOrgId: FormControl<string>;\n  sponsorshipEmail: FormControl<string>;\n}\n\n@Component({\n  selector: \"app-sponsored-families\",\n  templateUrl: \"sponsored-families.component.html\",\n})\nexport class SponsoredFamiliesComponent implements OnInit, OnDestroy {\n  loading = false;\n\n  availableSponsorshipOrgs$: Observable<Organization[]>;\n  activeSponsorshipOrgs$: Observable<Organization[]>;\n  anyOrgsAvailable$: Observable<boolean>;\n  anyActiveSponsorships$: Observable<boolean>;\n\n  // Conditional display properties\n  formPromise: Promise<void>;\n\n  sponsorshipForm: FormGroup<RequestSponsorshipForm>;\n\n  private _destroy = new Subject<void>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService,\n    private formBuilder: FormBuilder,\n    private stateService: StateService\n  ) {\n    this.sponsorshipForm = this.formBuilder.group<RequestSponsorshipForm>({\n      selectedSponsorshipOrgId: new FormControl(\"\", {\n        validators: [Validators.required],\n      }),\n      sponsorshipEmail: new FormControl(\"\", {\n        validators: [Validators.email],\n        asyncValidators: [\n          notAllowedValueAsync(async () => await this.stateService.getEmail(), true),\n        ],\n        updateOn: \"blur\",\n      }),\n    });\n  }\n\n  async ngOnInit() {\n    this.availableSponsorshipOrgs$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter((o) => o.familySponsorshipAvailable))\n    );\n\n    this.availableSponsorshipOrgs$.pipe(takeUntil(this._destroy)).subscribe((orgs) => {\n      if (orgs.length === 1) {\n        this.sponsorshipForm.patchValue({\n          selectedSponsorshipOrgId: orgs[0].id,\n        });\n      }\n    });\n\n    this.anyOrgsAvailable$ = this.availableSponsorshipOrgs$.pipe(map((orgs) => orgs.length > 0));\n\n    this.activeSponsorshipOrgs$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter((o) => o.familySponsorshipFriendlyName !== null))\n    );\n\n    this.anyActiveSponsorships$ = this.activeSponsorshipOrgs$.pipe(map((orgs) => orgs.length > 0));\n\n    this.loading = false;\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  async submit() {\n    this.formPromise = this.apiService.postCreateSponsorship(\n      this.sponsorshipForm.value.selectedSponsorshipOrgId,\n      {\n        sponsoredEmail: this.sponsorshipForm.value.sponsorshipEmail,\n        planSponsorshipType: PlanSponsorshipType.FamiliesForEnterprise,\n        friendlyName: this.sponsorshipForm.value.sponsorshipEmail,\n      }\n    );\n\n    await this.formPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"sponsorshipCreated\"));\n    this.formPromise = null;\n    this.resetForm();\n    await this.forceReload();\n  }\n\n  async forceReload() {\n    this.loading = true;\n    await this.syncService.fullSync(true);\n    this.loading = false;\n  }\n\n  get sponsorshipEmailControl() {\n    return this.sponsorshipForm.controls.sponsorshipEmail;\n  }\n\n  private async resetForm() {\n    this.sponsorshipForm.reset();\n  }\n\n  get isSelfHosted(): boolean {\n    return this.platformUtilsService.isSelfHost();\n  }\n}\n","<div class=\"d-flex tabbed-header\">\n  <h1>\n    {{ \"billingHistory\" | i18n }}\n  </h1>\n  <button\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    class=\"tw-ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <app-billing-history [billing]=\"billing\"></app-billing-history>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { BillingHistoryResponse } from \"@bitwarden/common/models/response/billing-history.response\";\n\n@Component({\n  selector: \"app-billing-history-view\",\n  templateUrl: \"billing-history-view.component.html\",\n})\nexport class BillingHistoryViewComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  billing: BillingHistoryResponse;\n\n  constructor(\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    if (this.platformUtilsService.isSelfHost()) {\n      this.router.navigate([\"/settings/subscription\"]);\n      return;\n    }\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    this.billing = await this.apiService.getUserBillingHistory();\n    this.loading = false;\n  }\n}\n","<div *ngIf=\"selfHosted\" class=\"page-header\">\n  <h1>{{ \"subscription\" | i18n }}</h1>\n</div>\n<div *ngIf=\"!selfHosted\" class=\"tabbed-header\">\n  <h1>{{ \"goPremium\" | i18n }}</h1>\n</div>\n<bit-callout\n  type=\"info\"\n  *ngIf=\"canAccessPremium\"\n  title=\"{{ 'youHavePremiumAccess' | i18n }}\"\n  icon=\"bwi bwi-star-f\"\n>\n  {{ \"alreadyPremiumFromOrg\" | i18n }}\n</bit-callout>\n<bit-callout type=\"success\">\n  <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n  <ul class=\"bwi-ul\">\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpStorage\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTwoStep\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpEmergency\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpReports\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTotp\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpSupport\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpFuture\" | i18n }}\n    </li>\n  </ul>\n  <p class=\"text-lg\" [ngClass]=\"{ 'mb-0': !selfHosted }\">\n    {{ \"premiumPrice\" | i18n: (premiumPrice | currency: \"$\") }}\n  </p>\n  <a\n    bitButton\n    href=\"https://vault.bitwarden.com/#/settings/premium\"\n    target=\"_blank\"\n    rel=\"noopener\"\n    buttonType=\"secondary\"\n    *ngIf=\"selfHosted\"\n  >\n    {{ \"purchasePremium\" | i18n }}\n  </a>\n</bit-callout>\n<ng-container *ngIf=\"selfHosted\">\n  <p>{{ \"uploadLicenseFilePremium\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_premium_license.json\"\n      }}</small>\n    </div>\n    <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n      {{ \"submit\" | i18n }}\n    </button>\n  </form>\n</ng-container>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!selfHosted\">\n  <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n      <input\n        id=\"additionalStorage\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"AdditionalStorageGb\"\n        [(ngModel)]=\"additionalStorage\"\n        min=\"0\"\n        max=\"99\"\n        step=\"1\"\n        placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n      />\n      <small class=\"text-muted form-text\">{{\n        \"additionalStorageIntervalDesc\"\n          | i18n: \"1 GB\":(storageGbPrice | currency: \"$\"):(\"year\" | i18n)\n      }}</small>\n    </div>\n  </div>\n  <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n  {{ \"premiumMembership\" | i18n }}: {{ premiumPrice | currency: \"$\" }} <br />\n  {{ \"additionalStorageGb\" | i18n }}: {{ additionalStorage || 0 }} GB &times;\n  {{ storageGbPrice | currency: \"$\" }} =\n  {{ additionalStorageTotal | currency: \"$\" }}\n  <hr class=\"my-3\" />\n  <h2 class=\"spaced-header mb-4\">{{ \"paymentInformation\" | i18n }}</h2>\n  <app-payment [hideBank]=\"true\"></app-payment>\n  <app-tax-info></app-tax-info>\n  <div id=\"price\" class=\"my-4\">\n    <div class=\"text-muted text-sm\">\n      {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n      <br />\n      <ng-container>\n        {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n      </ng-container>\n    </div>\n    <hr class=\"my-1 col-3 ml-0\" />\n    <p class=\"text-lg\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{ \"year\" | i18n }}\n    </p>\n  </div>\n  <small class=\"text-muted font-italic\">{{ \"paymentChargedAnnually\" | i18n }}</small>\n  <button type=\"submit\" bitButton [loading]=\"form.loading\">\n    {{ \"submit\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-premium\",\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent implements OnInit {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxInfoComponent: TaxInfoComponent;\n\n  canAccessPremium = false;\n  selfHosted = false;\n  premiumPrice = 10;\n  storageGbPrice = 4;\n  additionalStorage = 0;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const premiumPersonally = await this.stateService.getHasPremiumPersonally();\n    if (premiumPersonally) {\n      this.router.navigate([\"/settings/subscription/user-subscription\"]);\n      return;\n    }\n  }\n\n  async submit() {\n    let files: FileList = null;\n    if (this.selfHosted) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n    }\n\n    try {\n      if (this.selfHosted) {\n        if (!this.tokenService.getEmailVerified()) {\n          this.platformUtilsService.showToast(\n            \"error\",\n            this.i18nService.t(\"errorOccurred\"),\n            this.i18nService.t(\"verifyEmailFirst\")\n          );\n          return;\n        }\n\n        const fd = new FormData();\n        fd.append(\"license\", files[0]);\n        this.formPromise = this.apiService.postAccountLicense(fd).then(() => {\n          return this.finalizePremium();\n        });\n      } else {\n        this.formPromise = this.paymentComponent\n          .createPaymentToken()\n          .then((result) => {\n            const fd = new FormData();\n            fd.append(\"paymentMethodType\", result[1].toString());\n            if (result[0] != null) {\n              fd.append(\"paymentToken\", result[0]);\n            }\n            fd.append(\"additionalStorageGb\", (this.additionalStorage || 0).toString());\n            fd.append(\"country\", this.taxInfoComponent.taxInfo.country);\n            fd.append(\"postalCode\", this.taxInfoComponent.taxInfo.postalCode);\n            return this.apiService.postPremium(fd);\n          })\n          .then((paymentResponse) => {\n            if (!paymentResponse.success && paymentResponse.paymentIntentClientSecret != null) {\n              return this.paymentComponent.handleStripeCardPayment(\n                paymentResponse.paymentIntentClientSecret,\n                () => this.finalizePremium()\n              );\n            } else {\n              return this.finalizePremium();\n            }\n          });\n      }\n      await this.formPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async finalizePremium() {\n    await this.apiService.refreshIdentityToken();\n    await this.syncService.fullSync(true);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"premiumUpdated\"));\n    this.messagingService.send(\"purchasedPremium\");\n    this.router.navigate([\"/settings/subscription/user-subscription\"]);\n  }\n\n  get additionalStorageTotal(): number {\n    return this.storageGbPrice * Math.abs(this.additionalStorage || 0);\n  }\n\n  get subtotal(): number {\n    return this.premiumPrice + this.additionalStorageTotal;\n  }\n\n  get taxCharges(): number {\n    return this.taxInfoComponent != null && this.taxInfoComponent.taxRate != null\n      ? (this.taxInfoComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total(): number {\n    return this.subtotal + this.taxCharges || 0;\n  }\n}\n","<div class=\"tabbed-nav d-flex flex-column\" *ngIf=\"!selfHosted\">\n  <ul class=\"nav nav-tabs\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [routerLink]=\"subscriptionRoute\" routerLinkActive=\"active\">\n        {{ \"subscription\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"payment-method\" routerLinkActive=\"active\">\n        {{ \"paymentMethod\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"billing-history\" routerLinkActive=\"active\">\n        {{ \"billingHistory\" | i18n }}\n      </a>\n    </li>\n  </ul>\n</div>\n<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-subscription\",\n  templateUrl: \"subscription.component.html\",\n})\nexport class SubscriptionComponent {\n  hasPremium: boolean;\n  selfHosted: boolean;\n\n  constructor(\n    private stateService: StateService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    this.hasPremium = await this.stateService.getHasPremiumPersonally();\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  get subscriptionRoute(): string {\n    return this.hasPremium ? \"user-subscription\" : \"premium\";\n  }\n}\n","<div\n  [ngClass]=\"{\n    'page-header': selfHosted,\n    'tabbed-header': !selfHosted\n  }\"\n>\n  <h1>\n    {{ title }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"sub\">\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</bit-callout\n  >\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button\n      bitButton\n      type=\"button\"\n      buttonType=\"secondary\"\n      #reinstateBtn\n      class=\"btn-submit\"\n      (click)=\"reinstate()\"\n      [appApiAction]=\"reinstatePromise\"\n      [disabled]=\"$any(reinstateBtn).loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"reinstateSubscription\" | i18n }}</span>\n    </button>\n  </bit-callout>\n  <dl *ngIf=\"selfHosted\">\n    <dt>{{ \"expiration\" | i18n }}</dt>\n    <dd *ngIf=\"sub.expiration\">{{ sub.expiration | date: \"mediumDate\" }}</dd>\n    <dd *ngIf=\"!sub.expiration\">{{ \"neverExpires\" | i18n }}</dd>\n  </dl>\n  <div class=\"row\" *ngIf=\"!selfHosted\">\n    <div class=\"col-4\">\n      <dl>\n        <dt>{{ \"status\" | i18n }}</dt>\n        <dd>\n          <span class=\"text-capitalize\">{{ (subscription && subscription.status) || \"-\" }}</span>\n          <span bitBadge badgeType=\"warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n            \"pendingCancellation\" | i18n\n          }}</span>\n        </dd>\n        <dt>{{ \"nextCharge\" | i18n }}</dt>\n        <dd>\n          {{\n            nextInvoice\n              ? (nextInvoice.date | date: \"mediumDate\") +\n                \", \" +\n                (nextInvoice.amount | currency: \"$\")\n              : \"-\"\n          }}\n        </dd>\n      </dl>\n    </div>\n    <div class=\"col-8\" *ngIf=\"subscription\">\n      <strong class=\"d-block mb-1\">{{ \"details\" | i18n }}</strong>\n      <table class=\"table\">\n        <tbody>\n          <tr *ngFor=\"let i of subscription.items\">\n            <td>\n              {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} @\n              {{ i.amount | currency: \"$\" }}\n            </td>\n            <td>{{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <ng-container *ngIf=\"selfHosted\">\n    <div>\n      <button type=\"button\" bitButton buttonType=\"secondary\" (click)=\"updateLicense()\">\n        {{ \"updateLicense\" | i18n }}\n      </button>\n      <a\n        bitButton\n        buttonType=\"secondary\"\n        href=\"https://vault.bitwarden.com/#/settings/subscription\"\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        {{ \"manageSubscription\" | i18n }}\n      </a>\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n      <div class=\"card-body\">\n        <button\n          type=\"button\"\n          class=\"close\"\n          appA11yTitle=\"{{ 'cancel' | i18n }}\"\n          (click)=\"closeUpdateLicense(false)\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h3 class=\"card-body-header\">{{ \"updateLicense\" | i18n }}</h3>\n        <app-update-license\n          (onUpdated)=\"closeUpdateLicense(true)\"\n          (onCanceled)=\"closeUpdateLicense(false)\"\n        >\n        </app-update-license>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"!selfHosted\">\n    <div class=\"d-flex\">\n      <button\n        bitButton\n        type=\"button\"\n        buttonType=\"secondary\"\n        (click)=\"downloadLicense()\"\n        *ngIf=\"!subscription || !subscription.cancelled\"\n      >\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        bitButton\n        #cancelBtn\n        type=\"button\"\n        buttonType=\"danger\"\n        class=\"btn-submit tw-ml-auto\"\n        (click)=\"cancel()\"\n        [appApiAction]=\"cancelPromise\"\n        [disabled]=\"$any(cancelBtn).loading\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"cancelSubscription\" | i18n }}</span>\n      </button>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"storage\" | i18n }}</h2>\n    <p>{{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0:sub.storageName || \"0 MB\" }}</p>\n    <div class=\"progress\">\n      <div\n        class=\"progress-bar bg-success\"\n        role=\"progressbar\"\n        [ngStyle]=\"{ width: storageProgressWidth + '%' }\"\n        [attr.aria-valuenow]=\"storagePercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        {{ storagePercentage / 100 | percent }}\n      </div>\n    </div>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"mt-3\">\n        <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n          <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button\n            bitButton\n            type=\"button\"\n            buttonType=\"secondary\"\n            class=\"tw-ml-1\"\n            (click)=\"adjustStorage(false)\"\n          >\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n        <app-adjust-storage\n          [storageGbPrice]=\"4\"\n          [add]=\"adjustStorageAdd\"\n          (onAdjusted)=\"closeStorage(true)\"\n          (onCanceled)=\"closeStorage(false)\"\n          *ngIf=\"showAdjustStorage\"\n        ></app-adjust-storage>\n      </div>\n    </ng-container>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SubscriptionResponse } from \"@bitwarden/common/models/response/subscription.response\";\n\n@Component({\n  selector: \"app-user-subscription\",\n  templateUrl: \"user-subscription.component.html\",\n})\nexport class UserSubscriptionComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  adjustStorageAdd = true;\n  showAdjustStorage = false;\n  showUpdateLicense = false;\n  sub: SubscriptionResponse;\n  selfHosted = false;\n\n  cancelPromise: Promise<any>;\n  reinstatePromise: Promise<any>;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private router: Router,\n    private logService: LogService,\n    private fileDownloadService: FileDownloadService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.stateService.getHasPremiumPersonally()) {\n      this.loading = true;\n      this.sub = await this.apiService.getUserSubscription();\n    } else {\n      this.router.navigate([\"/settings/subscription/premium\"]);\n      return;\n    }\n\n    this.loading = false;\n  }\n\n  async reinstate() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"reinstateConfirmation\"),\n      this.i18nService.t(\"reinstateSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.reinstatePromise = this.apiService.postReinstatePremium();\n      await this.reinstatePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reinstated\"));\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async cancel() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"cancelConfirmation\"),\n      this.i18nService.t(\"cancelSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.cancelPromise = this.apiService.postCancelPremium();\n      await this.cancelPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"canceledSubscription\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  downloadLicense() {\n    if (this.loading) {\n      return;\n    }\n\n    const licenseString = JSON.stringify(this.sub.license, null, 2);\n    this.fileDownloadService.download({\n      fileName: \"bitwarden_premium_license.json\",\n      blobData: licenseString,\n    });\n  }\n\n  updateLicense() {\n    if (this.loading) {\n      return;\n    }\n    this.showUpdateLicense = true;\n  }\n\n  closeUpdateLicense(load: boolean) {\n    this.showUpdateLicense = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  adjustStorage(add: boolean) {\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(add ? \"addStorage\" : \"removeStorage\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.adjustStorageAdd = add;\n    this.showAdjustStorage = true;\n  }\n\n  closeStorage(load: boolean) {\n    this.showAdjustStorage = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get storageProgressWidth() {\n    return this.storagePercentage < 5 ? 5 : 0;\n  }\n\n  get usingInAppPurchase() {\n    return this.sub != null ? this.sub.usingInAppPurchase : false;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.selfHosted ? \"subscription\" : \"premiumMembership\");\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { BillingHistoryViewComponent } from \"./billing-history-view.component\";\nimport { PaymentMethodComponent } from \"./payment-method.component\";\nimport { PremiumComponent } from \"./premium.component\";\nimport { SubscriptionComponent } from \"./subscription.component\";\nimport { UserSubscriptionComponent } from \"./user-subscription.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SubscriptionComponent,\n    data: { titleId: \"subscription\" },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"premium\" },\n      {\n        path: \"user-subscription\",\n        component: UserSubscriptionComponent,\n        data: { titleId: \"premiumMembership\" },\n      },\n      {\n        path: \"premium\",\n        component: PremiumComponent,\n        data: { titleId: \"goPremium\" },\n      },\n      {\n        path: \"payment-method\",\n        component: PaymentMethodComponent,\n        data: { titleId: \"paymentMethod\" },\n      },\n      {\n        path: \"billing-history\",\n        component: BillingHistoryViewComponent,\n        data: { titleId: \"billingHistory\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SubscriptionRoutingModule {}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { PasswordGeneratorPolicyOptions } from \"@bitwarden/common/models/domain/password-generator-policy-options\";\n\n@Directive()\nexport class GeneratorComponent implements OnInit {\n  @Input() comingFromAddEdit = false;\n  @Input() type: string;\n  @Output() onSelected = new EventEmitter<string>();\n\n  usernameGeneratingPromise: Promise<string>;\n  typeOptions: any[];\n  passTypeOptions: any[];\n  usernameTypeOptions: any[];\n  subaddressOptions: any[];\n  catchallOptions: any[];\n  forwardOptions: any[];\n  usernameOptions: any = {};\n  passwordOptions: any = {};\n  username = \"-\";\n  password = \"-\";\n  showOptions = false;\n  avoidAmbiguous = false;\n  enforcedPasswordPolicyOptions: PasswordGeneratorPolicyOptions;\n  usernameWebsite: string = null;\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected usernameGenerationService: UsernameGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected stateService: StateService,\n    protected i18nService: I18nService,\n    protected logService: LogService,\n    protected route: ActivatedRoute,\n    private win: Window\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"username\"), value: \"username\" },\n    ];\n    this.passTypeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n    this.usernameTypeOptions = [\n      {\n        name: i18nService.t(\"plusAddressedEmail\"),\n        value: \"subaddress\",\n        desc: i18nService.t(\"plusAddressedEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"catchallEmail\"),\n        value: \"catchall\",\n        desc: i18nService.t(\"catchallEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"forwardedEmail\"),\n        value: \"forwarded\",\n        desc: i18nService.t(\"forwardedEmailDesc\"),\n      },\n      { name: i18nService.t(\"randomWord\"), value: \"word\" },\n    ];\n    this.subaddressOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.catchallOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.initForwardOptions();\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const passwordOptionsResponse = await this.passwordGenerationService.getOptions();\n      this.passwordOptions = passwordOptionsResponse[0];\n      this.enforcedPasswordPolicyOptions = passwordOptionsResponse[1];\n      this.avoidAmbiguous = !this.passwordOptions.ambiguous;\n      this.passwordOptions.type =\n        this.passwordOptions.type === \"passphrase\" ? \"passphrase\" : \"password\";\n\n      this.usernameOptions = await this.usernameGenerationService.getOptions();\n      if (this.usernameOptions.type == null) {\n        this.usernameOptions.type = \"word\";\n      }\n      if (\n        this.usernameOptions.subaddressEmail == null ||\n        this.usernameOptions.subaddressEmail === \"\"\n      ) {\n        this.usernameOptions.subaddressEmail = await this.stateService.getEmail();\n      }\n      if (this.usernameWebsite == null) {\n        this.usernameOptions.subaddressType = this.usernameOptions.catchallType = \"random\";\n      } else {\n        this.usernameOptions.website = this.usernameWebsite;\n        const websiteOption = { name: this.i18nService.t(\"websiteName\"), value: \"website-name\" };\n        this.subaddressOptions.push(websiteOption);\n        this.catchallOptions.push(websiteOption);\n      }\n\n      if (this.type !== \"username\" && this.type !== \"password\") {\n        if (qParams.type === \"username\" || qParams.type === \"password\") {\n          this.type = qParams.type;\n        } else {\n          const generatorOptions = await this.stateService.getGeneratorOptions();\n          this.type = generatorOptions?.type ?? \"password\";\n        }\n      }\n      if (this.regenerateWithoutButtonPress()) {\n        await this.regenerate();\n      }\n    });\n  }\n\n  async typeChanged() {\n    await this.stateService.setGeneratorOptions({ type: this.type });\n    if (this.regenerateWithoutButtonPress()) {\n      await this.regenerate();\n    }\n  }\n\n  async regenerate() {\n    if (this.type === \"password\") {\n      await this.regeneratePassword();\n    } else if (this.type === \"username\") {\n      await this.regenerateUsername();\n    }\n  }\n\n  async sliderChanged() {\n    this.savePasswordOptions(false);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderInput() {\n    this.normalizePasswordOptions();\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n  }\n\n  async savePasswordOptions(regenerate = true) {\n    this.normalizePasswordOptions();\n    await this.passwordGenerationService.saveOptions(this.passwordOptions);\n\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regeneratePassword();\n    }\n  }\n\n  async saveUsernameOptions(regenerate = true) {\n    await this.usernameGenerationService.saveOptions(this.usernameOptions);\n    if (this.usernameOptions.type === \"forwarded\") {\n      this.username = \"-\";\n    }\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regenerateUsername();\n    }\n  }\n\n  async regeneratePassword() {\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  regenerateUsername() {\n    return this.generateUsername();\n  }\n\n  async generateUsername() {\n    try {\n      this.usernameGeneratingPromise = this.usernameGenerationService.generateUsername(\n        this.usernameOptions\n      );\n      this.username = await this.usernameGeneratingPromise;\n      if (this.username === \"\" || this.username === null) {\n        this.username = \"-\";\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  copy() {\n    const password = this.type === \"password\";\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(\n      password ? this.password : this.username,\n      copyOptions\n    );\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(password ? \"password\" : \"username\"))\n    );\n  }\n\n  select() {\n    this.onSelected.emit(this.type === \"password\" ? this.password : this.username);\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  regenerateWithoutButtonPress() {\n    return this.type !== \"username\" || this.usernameOptions.type !== \"forwarded\";\n  }\n\n  private normalizePasswordOptions() {\n    // Application level normalize options depedent on class variables\n    this.passwordOptions.ambiguous = !this.avoidAmbiguous;\n\n    if (\n      !this.passwordOptions.uppercase &&\n      !this.passwordOptions.lowercase &&\n      !this.passwordOptions.number &&\n      !this.passwordOptions.special\n    ) {\n      this.passwordOptions.lowercase = true;\n      if (this.win != null) {\n        const lowercase = this.win.document.querySelector(\"#lowercase\") as HTMLInputElement;\n        if (lowercase) {\n          lowercase.checked = true;\n        }\n      }\n    }\n\n    this.passwordGenerationService.normalizeOptions(\n      this.passwordOptions,\n      this.enforcedPasswordPolicyOptions\n    );\n  }\n\n  private async initForwardOptions() {\n    this.forwardOptions = [\n      { name: \"AnonAddy\", value: \"anonaddy\" },\n      { name: \"DuckDuckGo\", value: \"duckduckgo\" },\n      { name: \"Fastmail\", value: \"fastmail\" },\n      { name: \"Firefox Relay\", value: \"firefoxrelay\" },\n      { name: \"SimpleLogin\", value: \"simplelogin\" },\n    ];\n\n    this.usernameOptions = await this.usernameGenerationService.getOptions();\n    if (\n      this.usernameOptions.forwardedService == null ||\n      this.usernameOptions.forwardedService === \"\"\n    ) {\n      this.forwardOptions.push({ name: \"\", value: null });\n    }\n\n    this.forwardOptions = this.forwardOptions.sort((a, b) => a.name.localeCompare(b.name));\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { GeneratedPasswordHistory } from \"@bitwarden/common/models/domain/generated-password-history\";\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n  history: GeneratedPasswordHistory[] = [];\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    this.history = await this.passwordGenerationService.getHistory();\n  }\n\n  clear() {\n    this.history = [];\n    this.passwordGenerationService.clear();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appSelectCopy]\",\n})\nexport class SelectCopyDirective {\n  constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) {}\n\n  @HostListener(\"copy\") onCopy() {\n    if (window == null) {\n      return;\n    }\n    let copyText = \"\";\n    const selection = window.getSelection();\n    for (let i = 0; i < selection.rangeCount; i++) {\n      const range = selection.getRangeAt(i);\n      const text = range.toString();\n\n      // The selection should only contain one line of text. In some cases however, the\n      // selection contains newlines and space characters from the indentation of following\n      // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n      // that aren't part of the password, the selection has to be trimmed.\n      let stringEndPos = text.length;\n      const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n      if (newLinePos > -1) {\n        const otherPart = text.substr(newLinePos).trim();\n        if (otherPart === \"\") {\n          stringEndPos = newLinePos;\n        }\n      }\n      copyText += text.substring(0, stringEndPos);\n    }\n    this.platformUtilsService.copyToClipboard(copyText, { window: window });\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"passHistoryTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"passHistoryTitle\">{{ \"passwordHistory\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"history.length\">\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item d-flex\" *ngFor=\"let h of history\">\n            <div class=\"tw-min-w-0\">\n              <bit-color-password\n                [password]=\"h.password\"\n                class=\"tw-block tw-font-mono\"\n                appSelectCopy\n              ></bit-color-password>\n              <small class=\"text-muted\">{{ h.date | date: \"medium\" }}</small>\n            </div>\n            <div class=\"ml-auto\">\n              <button\n                class=\"btn btn-link\"\n                appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                (click)=\"copy(h.password)\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!history.length\">\n        {{ \"noPasswordsInList\" | i18n }}\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            type=\"button\"\n            (click)=\"clear()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'clear' | i18n }}\"\n          >\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent } from \"@bitwarden/angular/components/password-generator-history.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-password-generator-history\",\n  templateUrl: \"password-generator-history.component.html\",\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"generator\" | i18n }}</h1>\n</div>\n<app-callout type=\"info\" *ngIf=\"enforcedPasswordPolicyOptions?.inEffect() && type === 'password'\">\n  {{ \"passwordGeneratorPolicyInEffect\" | i18n }}\n</app-callout>\n<div class=\"card card-generated bg-light my-4\">\n  <div class=\"card-body\">\n    <bit-color-password\n      [password]=\"type === 'password' ? password : username\"\n      appSelectCopy\n    ></bit-color-password>\n  </div>\n</div>\n<div class=\"form-group\" role=\"radiogroup\" aria-labelledby=\"typeHeading\">\n  <label id=\"typeHeading\" class=\"d-block\">{{ \"whatWouldYouLikeToGenerate\" | i18n }}</label>\n  <div class=\"form-check form-check-inline\" *ngFor=\"let o of typeOptions\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      [(ngModel)]=\"type\"\n      name=\"Type\"\n      id=\"type_{{ o.value }}\"\n      [value]=\"o.value\"\n      (change)=\"typeChanged()\"\n      [checked]=\"type === o.value\"\n    />\n    <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n      {{ o.name }}\n    </label>\n  </div>\n</div>\n<ng-container *ngIf=\"type === 'password'\">\n  <div aria-labelledby=\"passwordTypeHeading\" class=\"form-group\" role=\"radiogroup\">\n    <label id=\"passwordTypeHeading\" class=\"d-block\">{{ \"passwordType\" | i18n }}</label>\n    <div class=\"form-check form-check-inline\" *ngFor=\"let o of passTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"passwordOptions.type\"\n        name=\"PasswordType\"\n        id=\"passwordType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"savePasswordOptions()\"\n        [checked]=\"passwordOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"passwordType_{{ o.value }}\">\n        {{ o.name }}\n      </label>\n    </div>\n  </div>\n  <ng-container *ngIf=\"passwordOptions.type === 'passphrase'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"num-words\">{{ \"numWords\" | i18n }}</label>\n        <input\n          id=\"num-words\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"3\"\n          max=\"20\"\n          [(ngModel)]=\"passwordOptions.numWords\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"word-separator\">{{ \"wordSeparator\" | i18n }}</label>\n        <input\n          id=\"word-separator\"\n          class=\"form-control\"\n          type=\"text\"\n          maxlength=\"1\"\n          [(ngModel)]=\"passwordOptions.wordSeparator\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"capitalize\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.capitalize\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.capitalize\"\n        />\n        <label for=\"capitalize\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"include-number\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.includeNumber\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.includeNumber\"\n        />\n        <label for=\"include-number\" class=\"form-check-label\">{{ \"includeNumber\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"passwordOptions.type === 'password'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"length\">{{ \"length\" | i18n }}</label>\n        <input\n          id=\"length\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"5\"\n          max=\"128\"\n          [(ngModel)]=\"passwordOptions.length\"\n          (blur)=\"savePasswordOptions()\"\n          (change)=\"lengthChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-number\">{{ \"minNumbers\" | i18n }}</label>\n        <input\n          id=\"min-number\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minNumber\"\n          (change)=\"minNumberChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-special\">{{ \"minSpecial\" | i18n }}</label>\n        <input\n          id=\"min-special\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minSpecial\"\n          (change)=\"minSpecialChanged()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"uppercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.uppercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useUppercase\"\n          attr.aria-label=\"{{ 'uppercase' | i18n }}\"\n        />\n        <label for=\"uppercase\" class=\"form-check-label\">A-Z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"lowercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.lowercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useLowercase\"\n          attr.aria-label=\"{{ 'lowercase' | i18n }}\"\n        />\n        <label for=\"lowercase\" class=\"form-check-label\">a-z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"numbers\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.number\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useNumbers\"\n          attr.aria-label=\"{{ 'numbers' | i18n }}\"\n        />\n        <label for=\"numbers\" class=\"form-check-label\">0-9</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"special\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.special\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useSpecial\"\n          attr.aria-label=\"{{ 'specialCharacters' | i18n }}\"\n        />\n        <label for=\"special\" class=\"form-check-label\">!@#$%^&amp;*</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"ambiguous\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"avoidAmbiguous\"\n        />\n        <label for=\"ambiguous\" class=\"form-check-label\">{{ \"ambiguous\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"d-flex\">\n    <div>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"regenerate()\">\n        {{ \"regeneratePassword\" | i18n }}\n      </button>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n        {{ \"copyPassword\" | i18n }}\n      </button>\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"history()\"\n        appA11yTitle=\"{{ 'passwordHistory' | i18n }}\"\n      >\n        <i class=\"bwi bwi-clock bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'username'\">\n  <div aria-labelledby=\"usernameTypeHeading\" class=\"form-group\" role=\"radiogroup\">\n    <div class=\"d-block\">\n      <label id=\"usernameTypeHeading\">{{ \"usernameType\" | i18n }}</label>\n      <a\n        class=\"ml-auto\"\n        href=\"https://bitwarden.com/help/generator/#username-types\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <div class=\"form-check\" *ngFor=\"let o of usernameTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"usernameOptions.type\"\n        name=\"UsernameType\"\n        id=\"usernameType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"saveUsernameOptions()\"\n        [checked]=\"usernameOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"usernameType_{{ o.value }}\">\n        {{ o.name }}\n        <div class=\"small text-muted\">{{ o.desc }}</div>\n      </label>\n    </div>\n  </div>\n  <ng-container *ngIf=\"usernameOptions.type === 'forwarded'\">\n    <div class=\"form-group\" role=\"listbox\">\n      <label class=\"d-block\">{{ \"service\" | i18n }}</label>\n      <select\n        id=\"ForwardTypeDropdown\"\n        name=\"ForwardType\"\n        [(ngModel)]=\"usernameOptions.forwardedService\"\n        (change)=\"saveUsernameOptions()\"\n        class=\"form-control w-auto\"\n      >\n        <option *ngFor=\"let o of forwardOptions\" [ngValue]=\"o.value\" role=\"option\">\n          {{ o.name }}\n        </option>\n      </select>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'simplelogin'\">\n      <div class=\"form-group col-4\">\n        <label for=\"simplelogin-apikey\">{{ \"apiKey\" | i18n }}</label>\n        <input\n          id=\"simplelogin-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedSimpleLoginApiKey\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'duckduckgo'\">\n      <div class=\"form-group col-4\">\n        <label for=\"duckduckgo-apikey\">{{ \"apiKey\" | i18n }}</label>\n        <input\n          id=\"duckduckgo-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          name=\"DuckDuckGoApiKey\"\n          [(ngModel)]=\"usernameOptions.forwardedDuckDuckGoToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'anonaddy'\">\n      <div class=\"form-group col-4\">\n        <label for=\"anonaddy-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"anonaddy-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedAnonAddyApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"anonaddy-domain\">{{ \"domainName\" | i18n }}</label>\n        <input\n          id=\"anonaddy-domain\"\n          class=\"form-control\"\n          type=\"text\"\n          [(ngModel)]=\"usernameOptions.forwardedAnonAddyDomain\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'firefoxrelay'\">\n      <div class=\"form-group col-4\">\n        <label for=\"firefox-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"firefox-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedFirefoxApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'fastmail'\">\n      <div class=\"form-group col-4\">\n        <label for=\"fastmail-apiToken\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"fastmail-apiToken\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedFastmailApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'subaddress'\">\n    <div class=\"form-group col-4\">\n      <label for=\"subaddress-email\">{{ \"emailAddress\" | i18n }}</label>\n      <input\n        id=\"subaddress-email\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.subaddressEmail\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'catchall'\">\n    <div class=\"form-group col-4\">\n      <label for=\"catchall-domain\">{{ \"domainName\" | i18n }}</label>\n      <input\n        id=\"catchall-domain\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.catchallDomain\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <ng-container *ngIf=\"usernameOptions.type === 'word'\">\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"form-group\">\n        <div class=\"form-check\">\n          <input\n            id=\"capitalizeUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordCapitalize\"\n          />\n          <label for=\"capitalizeUsername\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n        </div>\n        <div class=\"form-check\">\n          <input\n            id=\"includeNumberUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordIncludeNumber\"\n          />\n          <label for=\"includeNumberUsername\" class=\"form-check-label\">{{\n            \"includeNumber\" | i18n\n          }}</label>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <div #form [appApiAction]=\"usernameGeneratingPromise\">\n    <button\n      type=\"button\"\n      class=\"btn btn-submit btn-primary\"\n      (click)=\"$any(form).loading ? false : regenerate()\"\n      [attr.aria-disabled]=\"$any(form).loading ? 'true' : null\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"regenerateUsername\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n      {{ \"copyUsername\" | i18n }}\n    </button>\n  </div>\n</ng-container>\n<ng-template #historyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { GeneratorComponent as BaseGeneratorComponent } from \"@bitwarden/angular/components/generator.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\n\nimport { PasswordGeneratorHistoryComponent } from \"./password-generator-history.component\";\n\n@Component({\n  selector: \"app-generator\",\n  templateUrl: \"generator.component.html\",\n})\nexport class GeneratorComponent extends BaseGeneratorComponent {\n  @ViewChild(\"historyTemplate\", { read: ViewContainerRef, static: true })\n  historyModalRef: ViewContainerRef;\n\n  constructor(\n    passwordGenerationService: PasswordGenerationService,\n    usernameGenerationService: UsernameGenerationService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService,\n    route: ActivatedRoute,\n    private modalService: ModalService\n  ) {\n    super(\n      passwordGenerationService,\n      usernameGenerationService,\n      platformUtilsService,\n      stateService,\n      i18nService,\n      logService,\n      route,\n      window\n    );\n    if (platformUtilsService.isSelfHost()) {\n      // Cannot use Firefox Relay on self hosted web vaults due to CORS issues with Firefox Relay API\n      this.forwardOptions.splice(\n        this.forwardOptions.findIndex((o) => o.value === \"firefoxrelay\"),\n        1\n      );\n      // Also cannot use Duck Duck Go on self hosted web vaults due to CORS issues\n      this.forwardOptions.splice(\n        this.forwardOptions.findIndex((o) => o.value === \"duckduckgo\"),\n        1\n      );\n    }\n  }\n\n  async history() {\n    await this.modalService.openViewRef(PasswordGeneratorHistoryComponent, this.historyModalRef);\n  }\n\n  lengthChanged() {\n    document.getElementById(\"length\").focus();\n  }\n\n  minNumberChanged() {\n    document.getElementById(\"min-number\").focus();\n  }\n\n  minSpecialChanged() {\n    document.getElementById(\"min-special\").focus();\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-tools\",\n  templateUrl: \"tools.component.html\",\n})\nexport class ToolsComponent implements OnInit {\n  canAccessPremium = false;\n\n  constructor(private stateService: StateService, private messagingService: MessagingService) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card mb-4\">\n        <div class=\"card-header\">{{ \"tools\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"generator\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"generator\" | i18n }}\n          </a>\n          <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"importData\" | i18n }}\n          </a>\n          <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"exportVault\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { BulkDeleteDialogComponent } from \"./bulk-delete-dialog/bulk-delete-dialog.component\";\nimport { BulkMoveDialogComponent } from \"./bulk-move-dialog/bulk-move-dialog.component\";\nimport { BulkRestoreDialogComponent } from \"./bulk-restore-dialog/bulk-restore-dialog.component\";\nimport { BulkShareDialogComponent } from \"./bulk-share-dialog/bulk-share-dialog.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [\n    BulkDeleteDialogComponent,\n    BulkMoveDialogComponent,\n    BulkRestoreDialogComponent,\n    BulkShareDialogComponent,\n  ],\n  exports: [\n    BulkDeleteDialogComponent,\n    BulkMoveDialogComponent,\n    BulkRestoreDialogComponent,\n    BulkShareDialogComponent,\n  ],\n})\nexport class BulkDialogsModule {}\n","import { Component } from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { CipherWithIdRequest } from \"@bitwarden/common/models/request/cipher-with-id.request\";\nimport { FolderWithIdRequest } from \"@bitwarden/common/models/request/folder-with-id.request\";\nimport { UpdateKeyRequest } from \"@bitwarden/common/models/request/update-key.request\";\n\n@Component({\n  selector: \"app-update-key\",\n  templateUrl: \"update-key.component.html\",\n})\nexport class UpdateKeyComponent {\n  masterPassword: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (hasEncKey) {\n      return;\n    }\n\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.makeRequest().then((request) => {\n        return this.apiService.postAccountKey(request);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"keyUpdated\"),\n        this.i18nService.t(\"logBackInOthersToo\"),\n        { timeout: 15000 }\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async makeRequest(): Promise<UpdateKeyRequest> {\n    const key = await this.cryptoService.getKey();\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n\n    await this.syncService.fullSync(true);\n\n    const folders = await firstValueFrom(this.folderService.folderViews$);\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    return request;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"updateEncKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"updateEncKeyTitle\">{{ \"updateEncryptionKey\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"updateEncryptionKeyShortDesc\" | i18n }} {{ \"updateEncryptionKeyDesc\" | i18n }}\n          <a\n            href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            >{{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <app-callout type=\"warning\">{{ \"updateEncryptionKeyWarning\" | i18n }}</app-callout>\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appAutofocus\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"updateEncryptionKey\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n  @Input() folderId: string;\n  @Output() onSavedFolder = new EventEmitter<FolderView>();\n  @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n  editMode = false;\n  folder: FolderView = new FolderView();\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  protected componentName = \"\";\n\n  constructor(\n    protected folderService: FolderService,\n    protected folderApiService: FolderApiServiceAbstraction,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.folder.name == null || this.folder.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    try {\n      const folder = await this.folderService.encrypt(this.folder);\n      this.formPromise = this.folderApiService.save(folder);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedFolder\" : \"addedFolder\")\n      );\n      this.onSavedFolder.emit(this.folder);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteFolderConfirmation\"),\n      this.i18nService.t(\"deleteFolder\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      this.componentName != \"\" ? this.componentName + \" .modal-content\" : null\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.folderApiService.delete(this.folder.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedFolder\"));\n      this.onDeletedFolder.emit(this.folder);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  protected async init() {\n    this.editMode = this.folderId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editFolder\");\n      const folder = await this.folderService.get(this.folderId);\n      this.folder = await folder.decrypt();\n    } else {\n      this.title = this.i18nService.t(\"addFolder\");\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"folderAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"folderAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"folder.name\"\n          required\n          appAutofocus\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"$any(deleteBtn).loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { FolderAddEditComponent as BaseFolderAddEditComponent } from \"@bitwarden/angular/components/folder-add-edit.component\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-folder-add-edit\",\n  templateUrl: \"folder-add-edit.component.html\",\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n  protected override componentName = \"app-folder-add-edit\";\n  constructor(\n    folderService: FolderService,\n    folderApiService: FolderApiServiceAbstraction,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(folderService, folderApiService, i18nService, platformUtilsService, logService);\n  }\n}\n","import { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, map, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport {\n  isNotProviderUser,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { Checkable, isChecked } from \"@bitwarden/common/types/checkable\";\n\n@Directive()\nexport class ShareComponent implements OnInit, OnDestroy {\n  @Input() cipherId: string;\n  @Input() organizationId: string;\n  @Output() onSharedCipher = new EventEmitter();\n\n  formPromise: Promise<void>;\n  cipher: CipherView;\n  collections: Checkable<CollectionView>[] = [];\n  organizations$: Observable<Organization[]>;\n\n  protected writeableCollections: Checkable<CollectionView>[] = [];\n\n  private _destroy = new Subject<void>();\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService,\n    protected organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  async load() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n\n    this.organizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => {\n        return orgs\n          .filter(\n            (o) =>\n              o.enabled && o.status === OrganizationUserStatusType.Confirmed && isNotProviderUser(o)\n          )\n          .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n      })\n    );\n\n    this.organizations$.pipe(takeUntil(this._destroy)).subscribe((orgs) => {\n      if (this.organizationId == null && orgs.length > 0) {\n        this.organizationId = orgs[0].id;\n      }\n    });\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipherDomain.decrypt();\n\n    this.filterCollections();\n  }\n\n  filterCollections() {\n    this.writeableCollections.forEach((c) => (c.checked = false));\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    const selectedCollectionIds = this.collections.filter(isChecked).map((c) => c.id);\n    if (selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    const cipherView = await cipherDomain.decrypt();\n    const orgs = await firstValueFrom(this.organizations$);\n    const orgName =\n      orgs.find((o) => o.id === this.organizationId)?.name ?? this.i18nService.t(\"organization\");\n\n    try {\n      this.formPromise = this.cipherService\n        .shareWithServer(cipherView, this.organizationId, selectedCollectionIds)\n        .then(async () => {\n          this.onSharedCipher.emit();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"movedItemToOrg\", cipherView.name, orgName)\n          );\n        });\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  get canSave() {\n    if (this.collections != null) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if (this.collections[i].checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"shareTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"shareTitle\">\n          {{ \"moveToOrganization\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <ng-container *ngIf=\"organizations$ | async as organizations\">\n        <div class=\"modal-body\" *ngIf=\"!organizations || !organizations.length\">\n          {{ \"noOrganizationsList\" | i18n }}\n        </div>\n        <div class=\"modal-body\" *ngIf=\"organizations && organizations.length\">\n          <p>{{ \"moveToOrgDesc\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n            <select\n              id=\"organization\"\n              name=\"OrganizationId\"\n              [(ngModel)]=\"organizationId\"\n              class=\"form-control\"\n              (change)=\"filterCollections()\"\n            >\n              <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"d-flex\">\n            <h3>{{ \"collections\" | i18n }}</h3>\n            <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n              <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"selectAll\" | i18n }}\n              </button>\n              <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"unselectAll\" | i18n }}\n              </button>\n            </div>\n          </div>\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n                <td class=\"table-list-checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td>\n                  {{ c.name }}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary btn-submit manual\"\n            [disabled]=\"form.loading || !canSave\"\n            [ngClass]=\"{ loading: form.loading }\"\n            *ngIf=\"organizations && organizations.length\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"save\" | i18n }}</span>\n          </button>\n          <a\n            href=\"#\"\n            routerLink=\"/create-organization\"\n            class=\"btn btn-primary\"\n            *ngIf=\"!organizations || !organizations.length\"\n          >\n            {{ \"newOrganization\" | i18n }}\n          </a>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"cancel\" | i18n }}\n          </button>\n        </div>\n      </ng-container>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { ShareComponent as BaseShareComponent } from \"@bitwarden/angular/components/share.component\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Component({\n  selector: \"app-vault-share\",\n  templateUrl: \"share.component.html\",\n})\nexport class ShareComponent extends BaseShareComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      collectionService,\n      platformUtilsService,\n      i18nService,\n      cipherService,\n      logService,\n      organizationService\n    );\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\n\n@Component({\n  selector: \"app-verify-email\",\n  templateUrl: \"verify-email.component.html\",\n})\nexport class VerifyEmailComponent {\n  actionPromise: Promise<unknown>;\n\n  @Output() onVerified = new EventEmitter<boolean>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private tokenService: TokenService\n  ) {}\n\n  async verifyEmail(): Promise<void> {\n    await this.apiService.refreshIdentityToken();\n    if (await this.tokenService.getEmailVerified()) {\n      this.onVerified.emit(true);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailVerified\"));\n      return;\n    }\n\n    await this.apiService.postAccountVerifyEmail();\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"checkInboxForVerification\")\n    );\n  }\n\n  async send() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    try {\n      this.actionPromise = this.verifyEmail();\n      await this.actionPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n}\n","<div class=\"card border-warning\">\n  <div class=\"card-header bg-warning text-white\">\n    <i class=\"bwi bwi-envelope bwi-fw\" aria-hidden=\"true\"></i> {{ \"verifyEmail\" | i18n }}\n  </div>\n  <div class=\"card-body\">\n    <p>{{ \"verifyEmailDesc\" | i18n }}</p>\n    <button\n      type=\"button\"\n      class=\"btn btn-block btn-outline-secondary btn-submit\"\n      #sendBtn\n      [appApiAction]=\"actionPromise\"\n      [disabled]=\"$any(sendBtn).loading\"\n      (click)=\"send()\"\n    >\n      <i class=\"bwi bwi-spin bwi-spinner\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>\n        {{ \"sendEmail\" | i18n }}\n      </span>\n    </button>\n  </div>\n</div>\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"groupings\">\n        <div class=\"content\">\n          <div class=\"inner-content\">\n            <app-vault-filter\n              #vaultFilter\n              [activeFilter]=\"activeFilter\"\n              (activeFilterChanged)=\"applyVaultFilter($event)\"\n              (onSearchTextChanged)=\"filterSearchText($event)\"\n              (onAddFolder)=\"addFolder()\"\n              (onEditFolder)=\"editFolder($event)\"\n            ></app-vault-filter>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div [ngClass]=\"{ 'col-6': isShowingCards, 'col-9': !isShowingCards }\">\n      <bit-breadcrumbs *ngIf=\"breadcrumbs.length > 0\">\n        <bit-breadcrumb\n          *ngFor=\"let collection of breadcrumbs; let first = first\"\n          [icon]=\"first ? undefined : 'bwi-collection'\"\n          (click)=\"applyCollectionFilter(collection)\"\n        >\n          <!-- First node in the tree contains a translation key. The rest come from user input. -->\n          <ng-container *ngIf=\"first\">{{ collection.node.name | i18n }}</ng-container>\n          <ng-template *ngIf=\"!first\">{{ collection.node.name }}</ng-template>\n        </bit-breadcrumb>\n      </bit-breadcrumbs>\n      <div class=\"tw-mb-4 tw-flex\">\n        <h1>\n          {{ \"vaultItems\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"vaultItemsComponent.actionPromise\">\n            <ng-container *ngIf=\"$any(actionSpinner).loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <button\n            type=\"button\"\n            bitButton\n            buttonType=\"primary\"\n            (click)=\"addCipher()\"\n            *ngIf=\"!activeFilter.isDeleted\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"newItem\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-callout type=\"warning\" *ngIf=\"activeFilter.isDeleted\" icon=\"bwi-exclamation-triangle\">\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-vault-items\n        [activeFilter]=\"activeFilter\"\n        (activeFilterChanged)=\"applyVaultFilter($event)\"\n        (onCipherClicked)=\"editCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onShareClicked)=\"shareCipher($event)\"\n        (onEditCipherCollectionsClicked)=\"editCipherCollections($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n        (onOrganzationBadgeClicked)=\"applyOrganizationFilter($event)\"\n      >\n      </app-vault-items>\n    </div>\n    <div class=\"col-3\">\n      <div class=\"card border-warning mb-4\" *ngIf=\"showUpdateKey\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateKeyTitle\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateEncryptionKeyShortDesc\" | i18n }}</p>\n          <button class=\"btn btn-block btn-outline-secondary\" type=\"button\" (click)=\"updateKey()\">\n            {{ \"updateEncryptionKey\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <app-verify-email\n        *ngIf=\"showVerifyEmail\"\n        class=\"d-block mb-4\"\n        (onVerified)=\"emailVerified($event)\"\n      ></app-verify-email>\n\n      <div class=\"card border-warning mb-4\" *ngIf=\"showBrowserOutdated\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateBrowser\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateBrowserDesc\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            target=\"_blank\"\n            href=\"https://browser-update.org/update-browser.html\"\n            rel=\"noopener\"\n          >\n            {{ \"updateBrowser\" | i18n }}\n          </a>\n        </div>\n      </div>\n      <div class=\"card border-success mb-4\" *ngIf=\"showPremiumCallout\">\n        <div class=\"card-header bg-success text-white\">\n          <i class=\"bwi bwi-star-f bwi-fw\" aria-hidden=\"true\"></i> {{ \"goPremium\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            routerLink=\"/settings/subscription/premium\"\n          >\n            {{ \"goPremium\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #folderAddEdit></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #share></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #updateKeyTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { firstValueFrom, Subject } from \"rxjs\";\nimport { first, switchMap, takeUntil } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { TokenService } from \"@bitwarden/common/abstractions/token.service\";\nimport { ServiceUtils } from \"@bitwarden/common/misc/serviceUtils\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { UpdateKeyComponent } from \"../settings/update-key.component\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { FolderAddEditComponent } from \"./folder-add-edit.component\";\nimport { ShareComponent } from \"./share.component\";\nimport { VaultFilterComponent } from \"./vault-filter/components/vault-filter.component\";\nimport { VaultFilterService } from \"./vault-filter/services/abstractions/vault-filter.service\";\nimport { VaultFilter } from \"./vault-filter/shared/models/vault-filter.model\";\nimport {\n  CollectionFilter,\n  FolderFilter,\n  OrganizationFilter,\n} from \"./vault-filter/shared/models/vault-filter.type\";\nimport { VaultItemsComponent } from \"./vault-items.component\";\n\nconst BroadcasterSubscriptionId = \"VaultComponent\";\n\n@Component({\n  selector: \"app-vault\",\n  templateUrl: \"vault.component.html\",\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(\"vaultFilter\", { static: true }) filterComponent: VaultFilterComponent;\n  @ViewChild(VaultItemsComponent, { static: true }) vaultItemsComponent: VaultItemsComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"folderAddEdit\", { read: ViewContainerRef, static: true })\n  folderAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"share\", { read: ViewContainerRef, static: true }) shareModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"updateKeyTemplate\", { read: ViewContainerRef, static: true })\n  updateKeyModalRef: ViewContainerRef;\n\n  showVerifyEmail = false;\n  showBrowserOutdated = false;\n  showUpdateKey = false;\n  showPremiumCallout = false;\n  trashCleanupWarning: string = null;\n  activeFilter: VaultFilter = new VaultFilter();\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private tokenService: TokenService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private vaultFilterService: VaultFilterService,\n    private cipherService: CipherService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async ngOnInit() {\n    this.showVerifyEmail = !(await this.tokenService.getEmailVerified());\n    this.showBrowserOutdated = window.navigator.userAgent.indexOf(\"MSIE\") !== -1;\n    this.trashCleanupWarning = this.i18nService.t(\n      this.platformUtilsService.isSelfHost()\n        ? \"trashCleanupWarningSelfHosted\"\n        : \"trashCleanupWarning\"\n    );\n\n    this.route.queryParams\n      .pipe(\n        first(),\n        switchMap(async (params: Params) => {\n          await this.syncService.fullSync(false);\n          await this.vaultFilterService.reloadCollections();\n          await this.vaultItemsComponent.reload();\n\n          const canAccessPremium = await this.stateService.getCanAccessPremium();\n          this.showPremiumCallout =\n            !this.showVerifyEmail && !canAccessPremium && !this.platformUtilsService.isSelfHost();\n          this.showUpdateKey = !(await this.cryptoService.hasEncKey());\n\n          const cipherId = getCipherIdFromParams(params);\n          if (!cipherId) {\n            return;\n          }\n          const cipherView = new CipherView();\n          cipherView.id = cipherId;\n          if (params.action === \"clone\") {\n            await this.cloneCipher(cipherView);\n          } else if (params.action === \"edit\") {\n            await this.editCipher(cipherView);\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n\n    this.route.queryParams\n      .pipe(\n        switchMap(async (params) => {\n          const cipherId = getCipherIdFromParams(params);\n          if (cipherId) {\n            if ((await this.cipherService.get(cipherId)) != null) {\n              this.editCipherId(cipherId);\n            } else {\n              this.platformUtilsService.showToast(\n                \"error\",\n                this.i18nService.t(\"errorOccurred\"),\n                this.i18nService.t(\"unknownCipher\")\n              );\n              this.router.navigate([], {\n                queryParams: { itemId: null, cipherId: null },\n                queryParamsHandling: \"merge\",\n              });\n            }\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await Promise.all([\n                this.vaultFilterService.reloadCollections(),\n                this.vaultItemsComponent.load(this.vaultItemsComponent.filter),\n              ]);\n              this.changeDetectorRef.detectChanges();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  get isShowingCards() {\n    return (\n      this.showBrowserOutdated ||\n      this.showPremiumCallout ||\n      this.showUpdateKey ||\n      this.showVerifyEmail\n    );\n  }\n\n  emailVerified(verified: boolean) {\n    this.showVerifyEmail = !verified;\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async applyVaultFilter(filter: VaultFilter) {\n    this.activeFilter = filter;\n    this.vaultItemsComponent.showAddNew = !this.activeFilter.isDeleted;\n    await this.vaultItemsComponent.reload(\n      this.activeFilter.buildFilter(),\n      this.activeFilter.isDeleted\n    );\n    this.go();\n  }\n\n  async applyOrganizationFilter(orgId: string) {\n    if (orgId == null) {\n      orgId = \"MyVault\";\n    }\n    const orgs = await firstValueFrom(this.filterComponent.filters.organizationFilter.data$);\n    const orgNode = ServiceUtils.getTreeNodeObject(orgs, orgId) as TreeNode<OrganizationFilter>;\n    this.filterComponent.filters?.organizationFilter?.action(orgNode);\n  }\n\n  addFolder = async (): Promise<void> => {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = null;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n        });\n      }\n    );\n  };\n\n  editFolder = async (folder: FolderFilter): Promise<void> => {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = folder.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedFolder.subscribe(async () => {\n          modal.close();\n        });\n      }\n    );\n  };\n\n  filterSearchText(searchText: string) {\n    this.vaultItemsComponent.searchText = searchText;\n    this.vaultItemsComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (cipher.organizationId == null && !canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    } else if (cipher.organizationId != null) {\n      const org = this.organizationService.get(cipher.organizationId);\n      if (org != null && (org.maxStorageGb == null || org.maxStorageGb === 0)) {\n        this.messagingService.send(\"upgradeOrganization\", {\n          organizationId: cipher.organizationId,\n        });\n        return;\n      }\n    }\n\n    let madeAttachmentChanges = false;\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onReuploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.vaultItemsComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async shareCipher(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      ShareComponent,\n      this.shareModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSharedCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.type = this.activeFilter.cipherType;\n    if (this.activeFilter.organizationId !== \"MyVault\") {\n      component.organizationId = this.activeFilter.organizationId;\n      component.collections = (\n        await firstValueFrom(this.vaultFilterService.filteredCollections$)\n      ).filter((c) => !c.readOnly && c.id != null);\n    }\n    const selectedColId = this.activeFilter.collectionId;\n    if (selectedColId !== \"AllCollections\") {\n      component.collectionIds = [selectedColId];\n    }\n    component.folderId = this.activeFilter.folderId;\n  }\n\n  async editCipher(cipher: CipherView) {\n    return this.editCipherId(cipher?.id);\n  }\n\n  async editCipherId(id: string) {\n    const cipher = await this.cipherService.get(id);\n    if (cipher != null && cipher.reprompt != 0) {\n      if (!(await this.passwordRepromptService.showPasswordPrompt())) {\n        this.go({ cipherId: null, itemId: null });\n        return;\n      }\n    }\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n\n    modal.onClosedPromise().then(() => {\n      this.go({ cipherId: null, itemId: null });\n    });\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n  }\n\n  async updateKey() {\n    await this.modalService.openViewRef(UpdateKeyComponent, this.updateKeyModalRef);\n  }\n\n  get breadcrumbs(): TreeNode<CollectionFilter>[] {\n    if (!this.activeFilter.selectedCollectionNode) {\n      return [];\n    }\n\n    const collections = [this.activeFilter.selectedCollectionNode];\n    while (collections[collections.length - 1].parent != undefined) {\n      collections.push(collections[collections.length - 1].parent);\n    }\n\n    return collections\n      .map((c) => c)\n      .slice(1) // 1 for self\n      .reverse();\n  }\n\n  protected applyCollectionFilter(collection: TreeNode<CollectionFilter>) {\n    const filter = this.activeFilter;\n    filter.resetFilter();\n    filter.selectedCollectionNode = collection;\n    this.applyVaultFilter(filter);\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        favorites: this.activeFilter.isFavorites || null,\n        type: this.activeFilter.cipherType,\n        folderId: this.activeFilter.folderId,\n        collectionId: this.activeFilter.collectionId,\n        deleted: this.activeFilter.isDeleted || null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      queryParamsHandling: \"merge\",\n      replaceUrl: true,\n    });\n  }\n}\n\n/**\n * Allows backwards compatibility with\n * old links that used the original `cipherId` param\n */\nconst getCipherIdFromParams = (params: Params): string => {\n  return params[\"itemId\"] || params[\"cipherId\"];\n};\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { VaultComponent } from \"./vault.component\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: VaultComponent,\n    data: { titleId: \"vaults\" },\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VaultRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { CollectionBadgeModule } from \"../organizations/vault/collection-badge/collection-badge.module\";\nimport { GroupBadgeModule } from \"../organizations/vault/group-badge/group-badge.module\";\nimport { SharedModule, LooseComponentsModule } from \"../shared\";\n\nimport { BulkDialogsModule } from \"./bulk-action-dialogs/bulk-dialogs.module\";\nimport { OrganizationBadgeModule } from \"./organization-badge/organization-badge.module\";\nimport { PipesModule } from \"./pipes/pipes.module\";\nimport { VaultFilterModule } from \"./vault-filter/vault-filter.module\";\nimport { VaultItemsComponent } from \"./vault-items.component\";\nimport { VaultRoutingModule } from \"./vault-routing.module\";\nimport { VaultComponent } from \"./vault.component\";\n\n@NgModule({\n  imports: [\n    VaultFilterModule,\n    VaultRoutingModule,\n    OrganizationBadgeModule,\n    GroupBadgeModule,\n    CollectionBadgeModule,\n    PipesModule,\n    SharedModule,\n    LooseComponentsModule,\n    BulkDialogsModule,\n  ],\n  declarations: [VaultComponent, VaultItemsComponent],\n  exports: [VaultComponent],\n})\nexport class VaultModule {}\n","import { NgModule } from \"@angular/core\";\nimport { Route, RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { LockGuard } from \"@bitwarden/angular/guards/lock.guard\";\nimport { UnauthGuard } from \"@bitwarden/angular/guards/unauth.guard\";\n\nimport { flagEnabled, Flags } from \"../utils/flags\";\n\nimport { AcceptEmergencyComponent } from \"./accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"./accounts/accept-organization.component\";\nimport { HintComponent } from \"./accounts/hint.component\";\nimport { LockComponent } from \"./accounts/lock.component\";\nimport { LoginWithDeviceComponent } from \"./accounts/login/login-with-device.component\";\nimport { LoginComponent } from \"./accounts/login/login.component\";\nimport { RecoverDeleteComponent } from \"./accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"./accounts/recover-two-factor.component\";\nimport { RemovePasswordComponent } from \"./accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"./accounts/set-password.component\";\nimport { SsoComponent } from \"./accounts/sso.component\";\nimport { TrialInitiationComponent } from \"./accounts/trial-initiation/trial-initiation.component\";\nimport { TwoFactorComponent } from \"./accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"./accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"./accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"./accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"./accounts/verify-recover-delete.component\";\nimport { HomeGuard } from \"./guards/home.guard\";\nimport { FrontendLayoutComponent } from \"./layouts/frontend-layout.component\";\nimport { UserLayoutComponent } from \"./layouts/user-layout.component\";\nimport { OrganizationModule } from \"./organizations/organization.module\";\nimport { AcceptFamilySponsorshipComponent } from \"./organizations/sponsorships/accept-family-sponsorship.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"./organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ReportsModule } from \"./reports\";\nimport { AccessComponent } from \"./send/access.component\";\nimport { SendComponent } from \"./send/send.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { CreateOrganizationComponent } from \"./settings/create-organization.component\";\nimport { DomainRulesComponent } from \"./settings/domain-rules.component\";\nimport { EmergencyAccessViewComponent } from \"./settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"./settings/emergency-access.component\";\nimport { PreferencesComponent } from \"./settings/preferences.component\";\nimport { SecurityRoutingModule } from \"./settings/security-routing.module\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"./settings/sponsored-families.component\";\nimport { SubscriptionRoutingModule } from \"./settings/subscription-routing.module\";\nimport { GeneratorComponent } from \"./tools/generator.component\";\nimport { ToolsComponent } from \"./tools/tools.component\";\nimport { VaultModule } from \"./vault/vault.module\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    data: { doNotSaveUrl: true },\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        children: [], // Children lets us have an empty component.\n        canActivate: [HomeGuard], // Redirects either to vault, login or lock page.\n      },\n      { path: \"login\", component: LoginComponent, canActivate: [UnauthGuard] },\n      {\n        path: \"login-with-device\",\n        component: LoginWithDeviceComponent,\n        data: { titleId: \"loginWithDevice\" },\n      },\n      { path: \"2fa\", component: TwoFactorComponent, canActivate: [UnauthGuard] },\n      {\n        path: \"register\",\n        component: TrialInitiationComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"createAccount\" },\n      },\n      {\n        path: \"trial\",\n        redirectTo: \"register\",\n        pathMatch: \"full\",\n      },\n      {\n        path: \"sso\",\n        component: SsoComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"enterpriseSingleSignOn\" },\n      },\n      {\n        path: \"set-password\",\n        component: SetPasswordComponent,\n        data: { titleId: \"setMasterPassword\" },\n      },\n      {\n        path: \"hint\",\n        component: HintComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"passwordHint\" },\n      },\n      {\n        path: \"lock\",\n        component: LockComponent,\n        canActivate: [LockGuard],\n      },\n      { path: \"verify-email\", component: VerifyEmailTokenComponent },\n      {\n        path: \"accept-organization\",\n        component: AcceptOrganizationComponent,\n        data: { titleId: \"joinOrganization\", doNotSaveUrl: false },\n      },\n      {\n        path: \"accept-emergency\",\n        component: AcceptEmergencyComponent,\n        data: { titleId: \"acceptEmergency\", doNotSaveUrl: false },\n      },\n      {\n        path: \"accept-families-for-enterprise\",\n        component: AcceptFamilySponsorshipComponent,\n        data: { titleId: \"acceptFamilySponsorship\", doNotSaveUrl: false },\n      },\n      { path: \"recover\", pathMatch: \"full\", redirectTo: \"recover-2fa\" },\n      {\n        path: \"recover-2fa\",\n        component: RecoverTwoFactorComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"recoverAccountTwoStep\" },\n      },\n      {\n        path: \"recover-delete\",\n        component: RecoverDeleteComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"verify-recover-delete\",\n        component: VerifyRecoverDeleteComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"send/:sendId/:key\",\n        component: AccessComponent,\n        data: { title: \"Bitwarden Send\" },\n      },\n      {\n        path: \"update-temp-password\",\n        component: UpdateTempPasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"updateTempPassword\" },\n      },\n      {\n        path: \"update-password\",\n        component: UpdatePasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"updatePassword\" },\n      },\n      {\n        path: \"remove-password\",\n        component: RemovePasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"removeMasterPassword\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    component: UserLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: \"vault\",\n        loadChildren: () => VaultModule,\n      },\n      { path: \"sends\", component: SendComponent, data: { title: \"Send\" } },\n      {\n        path: \"create-organization\",\n        component: CreateOrganizationComponent,\n        data: { titleId: \"newOrganization\" },\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"account\" },\n          { path: \"account\", component: AccountComponent, data: { titleId: \"myAccount\" } },\n          {\n            path: \"preferences\",\n            component: PreferencesComponent,\n            data: { titleId: \"preferences\" },\n          },\n          {\n            path: \"security\",\n            loadChildren: () => SecurityRoutingModule,\n          },\n          {\n            path: \"domain-rules\",\n            component: DomainRulesComponent,\n            data: { titleId: \"domainRules\" },\n          },\n          {\n            path: \"subscription\",\n            loadChildren: () => SubscriptionRoutingModule,\n          },\n          {\n            path: \"emergency-access\",\n            children: [\n              {\n                path: \"\",\n                component: EmergencyAccessComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n              {\n                path: \":id\",\n                component: EmergencyAccessViewComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n            ],\n          },\n          {\n            path: \"sponsored-families\",\n            component: SponsoredFamiliesComponent,\n            data: { titleId: \"sponsoredFamilies\" },\n          },\n        ],\n      },\n      {\n        path: \"tools\",\n        component: ToolsComponent,\n        canActivate: [AuthGuard],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"generator\" },\n          {\n            path: \"\",\n            loadChildren: () =>\n              import(\"./tools/import-export/import-export.module\").then(\n                (m) => m.ImportExportModule\n              ),\n          },\n          {\n            path: \"generator\",\n            component: GeneratorComponent,\n            data: { titleId: \"generator\" },\n          },\n        ],\n      },\n      {\n        path: \"reports\",\n        loadChildren: () => ReportsModule,\n      },\n      { path: \"setup/families-for-enterprise\", component: FamiliesForEnterpriseSetupComponent },\n    ],\n  },\n  {\n    path: \"organizations\",\n    loadChildren: () => OrganizationModule,\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      paramsInheritanceStrategy: \"always\",\n      // enableTracing: true,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class OssRoutingModule {}\n\nexport function buildFlaggedRoute(flagName: keyof Flags, route: Route): Route {\n  return flagEnabled(flagName)\n    ? route\n    : {\n        path: route.path,\n        redirectTo: \"/\",\n      };\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from \"@angular/router\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HasPremiumGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private messagingService: MessagingService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const userHasPremium = await this.stateService.getCanAccessPremium();\n\n    if (!userHasPremium) {\n      this.messagingService.send(\"premiumRequired\");\n    }\n\n    // Prevent trapping the user on the login page, since that's an awful UX flow\n    if (!userHasPremium && this.router.url === \"/login\") {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    return userHasPremium;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"dataBreachReport\" | i18n }}</h1>\n</div>\n<p>{{ \"breachDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"username\">{{ \"username\" | i18n }}</label>\n      <input\n        id=\"username\"\n        type=\"text\"\n        name=\"Username\"\n        class=\"form-control\"\n        [(ngModel)]=\"username\"\n        required\n      />\n      <small class=\"form-text text-muted\">{{ \"breachCheckUsernameEmail\" | i18n }}</small>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"checkBreaches\" | i18n }}\n  </button>\n</form>\n<div class=\"mt-4\" *ngIf=\"!form.loading && checkedUsername\">\n  <p *ngIf=\"error\">{{ \"reportError\" | i18n }}...</p>\n  <ng-container *ngIf=\"!error\">\n    <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!breachedAccounts.length\">\n      {{ \"breachUsernameNotFound\" | i18n: checkedUsername }}\n    </app-callout>\n    <app-callout type=\"danger\" title=\"{{ 'breachFound' | i18n }}\" *ngIf=\"breachedAccounts.length\">\n      {{ \"breachUsernameFound\" | i18n: checkedUsername:breachedAccounts.length }}\n    </app-callout>\n    <ul class=\"list-group list-group-breach\" *ngIf=\"breachedAccounts.length\">\n      <li *ngFor=\"let a of breachedAccounts\" class=\"list-group-item min-height-fix\">\n        <div class=\"row\">\n          <div class=\"col-2 text-center\">\n            <img [src]=\"a.logoPath\" alt=\"\" class=\"img-fluid\" />\n          </div>\n          <div class=\"col-7\">\n            <h3 class=\"text-lg\">{{ a.title }}</h3>\n            <p [innerHTML]=\"a.description\"></p>\n            <p class=\"mb-1\">{{ \"compromisedData\" | i18n }}:</p>\n            <ul>\n              <li *ngFor=\"let d of a.dataClasses\">{{ d }}</li>\n            </ul>\n          </div>\n          <div class=\"col-3\">\n            <dl>\n              <dt>{{ \"website\" | i18n }}</dt>\n              <dd>{{ a.domain }}</dd>\n              <dt>{{ \"affectedUsers\" | i18n }}</dt>\n              <dd>{{ a.pwnCount | number }}</dd>\n              <dt>{{ \"breachOccurred\" | i18n }}</dt>\n              <dd>{{ a.breachDate | date: \"mediumDate\" }}</dd>\n              <dt>{{ \"breachReported\" | i18n }}</dt>\n              <dd>{{ a.addedDate | date: \"mediumDate\" }}</dd>\n            </dl>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </ng-container>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { BreachAccountResponse } from \"@bitwarden/common/models/response/breach-account.response\";\n\n@Component({\n  selector: \"app-breach-report\",\n  templateUrl: \"breach-report.component.html\",\n})\nexport class BreachReportComponent implements OnInit {\n  error = false;\n  username: string;\n  checkedUsername: string;\n  breachedAccounts: BreachAccountResponse[] = [];\n  formPromise: Promise<BreachAccountResponse[]>;\n\n  constructor(private auditService: AuditService, private stateService: StateService) {}\n\n  async ngOnInit() {\n    this.username = await this.stateService.getEmail();\n  }\n\n  async submit() {\n    this.error = false;\n    this.username = this.username.toLowerCase();\n    try {\n      this.formPromise = this.auditService.breachedAccounts(this.username);\n      this.breachedAccounts = await this.formPromise;\n    } catch {\n      this.error = true;\n    }\n    this.checkedUsername = this.username;\n  }\n}\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportBreach = svgIcon`\n  <svg width=\"58\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.569 74H13.007a7 7 0 0 1-7-7V31.077a7 7 0 0 1 7-7h19.101a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.912V67a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M44.576 69.055H18.015a7 7 0 0 1-7-7V26.132a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.911v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M50 63.698H23.439a7 7 0 0 1-7-7V20.775a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.575A7 7 0 0 1 57 28.35v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M44.648 13.599v3.95a8 8 0 0 0 8 8h4.518\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M23.533 37.736H49.49M23.533 46.802H49.49M23.533 42.269H49.49M23.533 55.456H49.49M23.533 50.923H49.49\" />\n    <path d=\"M1 16.483C1 7.944 8.013 1 16.69 1c8.678 0 15.691 6.944 15.691 15.483 0 8.54-7.013 15.484-15.69 15.484C8.012 31.967 1 25.023 1 16.484Z\" fill=\"#518FFF\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"m16.562 7.979.1 11.538\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n    <ellipse rx=\"1.252\" ry=\"1.236\" transform=\"rotate(-.479 2802.219 -1964.476) skewX(.012)\" fill=\"#fff\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportExposedPasswords = svgIcon`\n  <svg width=\"101\" height=\"77\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.374 50.192a26.42 26.42 0 0 0 9.111 1.608c14.34 0 25.965-11.372 25.965-25.4 0-.337-.007-.673-.02-1.008h25.299v34.85H32.374v-10.05Z\" fill=\"currentColor\" />\n    <path d=\"M15.805 26.4c0 14.028 11.625 25.4 25.965 25.4s25.964-11.372 25.964-25.4C67.734 12.372 56.11 1 41.77 1 27.43 1 15.805 12.372 15.805 26.4Z\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M27.914 47.849a1 1 0 0 0-2 0h2Zm68.288-26.792a2.12 2.12 0 0 1 2.14 2.11h2c0-2.253-1.83-4.11-4.14-4.11v2Zm2.14 2.11v40.552h2V23.167h-2Zm0 40.552c0 1.172-.958 2.11-2.14 2.11v2c2.25 0 4.14-1.798 4.14-4.11h-2Zm-2.14 2.11H30.054v2h66.148v-2Zm-66.148 0a2.12 2.12 0 0 1-2.14-2.11h-2a4.12 4.12 0 0 0 4.14 4.11v-2Zm-2.14-2.11V47.85h-2v15.87h2Zm39.254-42.662h29.034v-2H67.168v2Z\" fill=\"#fff\" />\n    <path d=\"M67.203 25.56h25.64v34.85H32.487V50.011\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"M47.343 76h31.571\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M57.557 66.83V76M67.771 66.83V76\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"m20.995 42.873-3.972 3.972-14.61 14.61a3.413 3.413 0 0 0 0 4.826v0a3.413 3.413 0 0 0 4.827 0l14.61-14.61 3.972-3.972\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M86.037 32.488H71.845M86.037 37.81H76.28M71.845 37.81h-6.652M86.037 43.132h-6.209M74.95 43.132H61.2M86.037 48.454H71.845M66.967 48.454h-7.54M86.037 53.776H66.08M61.201 53.776h-11.53M44.793 53.776h-7.096\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n    <rect width=\"40.801\" height=\"9.757\" rx=\"4\" transform=\"matrix(-1 0 0 1 61.201 14.748)\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M16.852 33.375h28.375a4 4 0 0 1 4 4v1.757a4 4 0 0 1-4 4H22.174M66.523 33.375h-3.539a4 4 0 0 0-4 4v3.761c0 1.102.894 1.996 1.996 1.996v0\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportInactiveTwoFactor = svgIcon`\n  <svg width=\"42\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" d=\"M1 13.121h39.595v48.758H1z\" />\n    <rect x=\"1\" y=\"1\" width=\"39.595\" height=\"73\" rx=\"8\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M12.344 8.091h16.907M18.907 67.424h3.025M31.503 32.515c-2.047-4.337-6.717-7.061-11.73-6.414a11.356 11.356 0 0 0-9.125 7.126M10.816 42.016c2.047 4.337 6.718 7.062 11.73 6.414 4.346-.562 7.8-3.51 9.213-7.358\" />\n    <path d=\"m33.584 29.293-1.295 4.625-4.625-1.295M8.523 44.725l1.441-4.581 4.582 1.441\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportReusedPasswords = svgIcon`\n  <svg width=\"102\" height=\"102\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M57.983 15.06a35.664 35.664 0 0 1 14.531 6.27c16.164 11.78 19.585 34.613 7.643 51a37.227 37.227 0 0 1-6.81 7.138m-32.842 6.697a35.708 35.708 0 0 1-11.239-5.495c-16.163-11.78-19.585-34.613-7.642-51a37.55 37.55 0 0 1 3.295-3.929\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M93.909 64.598H7.72c-.708 0-1.275-.662-1.275-1.49V40.273c0-.828.567-1.49 1.275-1.49H93.91c.708 0 1.275.663 1.275 1.49v22.837c.047.827-.567 1.49-1.275 1.49Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M21.532 52.186v-5.965M21.532 52.187l5.748-1.844M21.532 52.186l3.524 4.881M21.531 52.186l-3.47 4.881M21.532 52.187l-5.694-1.844M40.944 52.186v-5.965M40.944 52.187l5.694-1.844M40.944 52.187l3.525 4.88M40.944 52.187l-3.525 4.88M40.944 52.187l-5.694-1.844M54.849 57.337h11.294M74.21 57.337h11.295M41.75 83l.71 4.75-4.75.71M58.664 18.66 56 14.665 59.996 12\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportUnsecuredWebsites = svgIcon`\n  <svg width=\"113\" height=\"76\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1.71 12.983h110.362v55.11a6 6 0 0 1-6 6H7.711a6 6 0 0 1-6-6v-55.11Z\" fill=\"currentColor\" />\n    <rect x=\"1\" y=\"1.073\" width=\"110.5\" height=\"73.454\" rx=\"9\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M89.48 8.048V7.47M96.363 8.048V7.47M103.246 8.048V7.47\" stroke=\"#fff\" stroke-width=\"4\" stroke-linecap=\"round\" />\n    <path d=\"M0 12.983h111.217\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"m93.236 44.384-18.42-11.026 2.93 21.266 5.582-5.237 4.27 6.46 2.98-1.971-4.26-6.446 6.918-3.046Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <rect width=\"96.673\" height=\"6.886\" rx=\"3.443\" transform=\"matrix(-1 0 0 1 104.373 18.721)\" stroke=\"#fff\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportWeakPasswords = svgIcon`\n  <svg width=\"78\" height=\"78\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M66.493 64.415V77H9.979V64.324M9.979 44.065V32.106h56.514v12.148\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"M75.44 64.852H2.085c-.603 0-1.085-.555-1.085-1.25V44.448c0-.694.482-1.25 1.085-1.25H75.44c.603 0 1.085.556 1.085 1.25v19.156c.04.694-.482 1.25-1.085 1.25Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M13.84 54.56v-5.077M13.84 54.56l4.893-1.57M13.84 54.56l3 4.153M13.84 54.56l-2.954 4.153M13.84 54.56l-4.846-1.57M30.363 54.56v-5.077M30.363 54.56l4.846-1.57M30.363 54.56l3 4.153M30.363 54.56l-3 4.153M30.363 54.56l-4.846-1.57M42.197 59.042h9.506M58.57 59.042h9.507\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M20.863 31.364c-.274-5.285 0-15.817 1.093-18.863 1.276-3.554 6.233-10.826 15.856-11.482 4.83-.273 15.2 2.296 18.043 14.763\" stroke=\"#fff\" stroke-width=\"2\" />\n  </svg>\n`;\n","import { ReportBreach } from \"./icons/report-breach.icon\";\nimport { ReportExposedPasswords } from \"./icons/report-exposed-passwords.icon\";\nimport { ReportInactiveTwoFactor } from \"./icons/report-inactive-two-factor.icon\";\nimport { ReportReusedPasswords } from \"./icons/report-reused-passwords.icon\";\nimport { ReportUnsecuredWebsites } from \"./icons/report-unsecured-websites.icon\";\nimport { ReportWeakPasswords } from \"./icons/report-weak-passwords.icon\";\nimport { ReportEntry } from \"./shared\";\n\nexport enum ReportType {\n  ExposedPasswords = \"exposedPasswords\",\n  ReusedPasswords = \"reusedPasswords\",\n  WeakPasswords = \"weakPasswords\",\n  UnsecuredWebsites = \"unsecuredWebsites\",\n  Inactive2fa = \"inactive2fa\",\n  DataBreach = \"dataBreach\",\n}\n\ntype ReportWithoutVariant = Omit<ReportEntry, \"variant\">;\n\nexport const reports: Record<ReportType, ReportWithoutVariant> = {\n  [ReportType.ExposedPasswords]: {\n    title: \"exposedPasswordsReport\",\n    description: \"exposedPasswordsReportDesc\",\n    route: \"exposed-passwords-report\",\n    icon: ReportExposedPasswords,\n  },\n  [ReportType.ReusedPasswords]: {\n    title: \"reusedPasswordsReport\",\n    description: \"reusedPasswordsReportDesc\",\n    route: \"reused-passwords-report\",\n    icon: ReportReusedPasswords,\n  },\n  [ReportType.WeakPasswords]: {\n    title: \"weakPasswordsReport\",\n    description: \"weakPasswordsReportDesc\",\n    route: \"weak-passwords-report\",\n    icon: ReportWeakPasswords,\n  },\n  [ReportType.UnsecuredWebsites]: {\n    title: \"unsecuredWebsitesReport\",\n    description: \"unsecuredWebsitesReportDesc\",\n    route: \"unsecured-websites-report\",\n    icon: ReportUnsecuredWebsites,\n  },\n  [ReportType.Inactive2fa]: {\n    title: \"inactive2faReport\",\n    description: \"inactive2faReportDesc\",\n    route: \"inactive-two-factor-report\",\n    icon: ReportInactiveTwoFactor,\n  },\n  [ReportType.DataBreach]: {\n    title: \"dataBreachReport\",\n    description: \"breachDesc\",\n    route: \"breach-report\",\n    icon: ReportBreach,\n  },\n};\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared/shared.module\";\n\nimport { ReportCardComponent } from \"./report-card/report-card.component\";\nimport { ReportListComponent } from \"./report-list/report-list.component\";\n\n@NgModule({\n  imports: [CommonModule, SharedModule],\n  declarations: [ReportCardComponent, ReportListComponent],\n  exports: [ReportCardComponent, ReportListComponent],\n})\nexport class ReportsSharedModule {}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { reports, ReportType } from \"../reports\";\nimport { ReportEntry, ReportVariant } from \"../shared\";\n\n@Component({\n  selector: \"app-reports-home\",\n  templateUrl: \"reports-home.component.html\",\n})\nexport class ReportsHomeComponent implements OnInit {\n  reports: ReportEntry[];\n\n  constructor(private stateService: StateService) {}\n\n  async ngOnInit(): Promise<void> {\n    const userHasPremium = await this.stateService.getCanAccessPremium();\n\n    const reportRequiresPremium = userHasPremium\n      ? ReportVariant.Enabled\n      : ReportVariant.RequiresPremium;\n\n    this.reports = [\n      {\n        ...reports[ReportType.ExposedPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.ReusedPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.WeakPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.UnsecuredWebsites],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.Inactive2fa],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.DataBreach],\n        variant: ReportVariant.Enabled,\n      },\n    ];\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"reports\" | i18n }}</h1>\n</div>\n\n<p>{{ \"reportsDesc\" | i18n }}</p>\n\n<app-report-list [reports]=\"reports\"></app-report-list>\n","<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n\n  <div class=\"row mt-4\">\n    <div class=\"col\">\n      <a bitButton routerLink=\"./\" *ngIf=\"!homepage\">\n        <i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i>\n        {{ \"backToReports\" | i18n }}\n      </a>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { filter } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-reports-layout\",\n  templateUrl: \"reports-layout.component.html\",\n})\nexport class ReportsLayoutComponent implements OnDestroy {\n  homepage = true;\n  subscription: Subscription;\n\n  constructor(router: Router) {\n    this.subscription = router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n      .subscribe((event) => {\n        this.homepage = (event as NavigationEnd).url == \"/reports\";\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\n\nimport { HasPremiumGuard } from \"../shared/guards/has-premium.guard\";\n\nimport { BreachReportComponent } from \"./pages/breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"./pages/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./pages/inactive-two-factor-report.component\";\nimport { ReportsHomeComponent } from \"./pages/reports-home.component\";\nimport { ReusedPasswordsReportComponent } from \"./pages/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./pages/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./pages/weak-passwords-report.component\";\nimport { ReportsLayoutComponent } from \"./reports-layout.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ReportsLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: \"\", pathMatch: \"full\", component: ReportsHomeComponent, data: { homepage: true } },\n      {\n        path: \"breach-report\",\n        component: BreachReportComponent,\n        data: { titleId: \"dataBreachReport\" },\n      },\n      {\n        path: \"reused-passwords-report\",\n        component: ReusedPasswordsReportComponent,\n        data: { titleId: \"reusedPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"unsecured-websites-report\",\n        component: UnsecuredWebsitesReportComponent,\n        data: { titleId: \"unsecuredWebsitesReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"weak-passwords-report\",\n        component: WeakPasswordsReportComponent,\n        data: { titleId: \"weakPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"exposed-passwords-report\",\n        component: ExposedPasswordsReportComponent,\n        data: { titleId: \"exposedPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"inactive-two-factor-report\",\n        component: InactiveTwoFactorReportComponent,\n        data: { titleId: \"inactive2faReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReportsRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared\";\n\nimport { BreachReportComponent } from \"./pages/breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"./pages/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./pages/inactive-two-factor-report.component\";\nimport { ReportsHomeComponent } from \"./pages/reports-home.component\";\nimport { ReusedPasswordsReportComponent } from \"./pages/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./pages/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./pages/weak-passwords-report.component\";\nimport { ReportsLayoutComponent } from \"./reports-layout.component\";\nimport { ReportsRoutingModule } from \"./reports-routing.module\";\nimport { ReportsSharedModule } from \"./shared\";\n\n@NgModule({\n  imports: [CommonModule, SharedModule, ReportsSharedModule, ReportsRoutingModule],\n  declarations: [\n    BreachReportComponent,\n    ExposedPasswordsReportComponent,\n    InactiveTwoFactorReportComponent,\n    ReportsLayoutComponent,\n    ReportsHomeComponent,\n    ReusedPasswordsReportComponent,\n    UnsecuredWebsitesReportComponent,\n    WeakPasswordsReportComponent,\n    WeakPasswordsReportComponent,\n  ],\n})\nexport class ReportsModule {}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { AddEditComponent as OrgAddEditComponent } from \"../../organizations/vault/add-edit.component\";\nimport { AddEditComponent } from \"../../vault/add-edit.component\";\n\n@Directive()\nexport class CipherReportComponent {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n\n  loading = false;\n  hasLoaded = false;\n  ciphers: CipherView[] = [];\n  organization: Organization;\n\n  constructor(\n    private modalService: ModalService,\n    protected messagingService: MessagingService,\n    public requiresPaid: boolean,\n    private stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async load() {\n    this.loading = true;\n    await this.setCiphers();\n    this.loading = false;\n    this.hasLoaded = true;\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (!(await this.repromptCipher(cipher))) {\n      return;\n    }\n\n    const type = this.organization != null ? OrgAddEditComponent : AddEditComponent;\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      type,\n      this.cipherAddEditModalRef,\n      (comp: OrgAddEditComponent | AddEditComponent) => {\n        if (this.organization != null) {\n          (comp as OrgAddEditComponent).organization = this.organization;\n          comp.organizationId = this.organization.id;\n        }\n\n        comp.cipherId = cipher == null ? null : cipher.id;\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n\n  protected async checkAccess(): Promise<boolean> {\n    if (this.organization != null) {\n      // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n      // since all paid plans include useTotp\n      if (this.requiresPaid && !this.organization.useTotp) {\n        this.messagingService.send(\"upgradeOrganization\", { organizationId: this.organization.id });\n        return false;\n      }\n    }\n    return true;\n  }\n\n  protected async setCiphers() {\n    this.ciphers = [];\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"exposedPasswordsReport\" | i18n }}</h1>\n</div>\n<p>{{ \"exposedPasswordsReportDesc\" | i18n }}</p>\n<button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"loading\" (click)=\"load()\">\n  {{ \"checkExposedPasswords\" | i18n }}\n</button>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noExposedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'exposedPasswordsFound' | i18n }}\" [useAlertRole]=\"true\">\n      {{ \"exposedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"exposedXTimes\" | i18n: (exposedPasswordMap.get(c.id) | number) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-exposed-passwords-report\",\n  templateUrl: \"exposed-passwords-report.component.html\",\n})\nexport class ExposedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  exposedPasswordMap = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected auditService: AuditService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  ngOnInit() {\n    this.checkAccess();\n  }\n\n  async load() {\n    if (await this.checkAccess()) {\n      super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const exposedPasswordCiphers: CipherView[] = [];\n    const promises: Promise<void>[] = [];\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const promise = this.auditService.passwordLeaked(c.login.password).then((exposedCount) => {\n        if (exposedCount > 0) {\n          exposedPasswordCiphers.push(c);\n          this.exposedPasswordMap.set(c.id, exposedCount);\n        }\n      });\n      promises.push(promise);\n    });\n    await Promise.all(promises);\n    this.ciphers = exposedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"inactive2faReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"inactive2faReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noInactive2fa\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'inactive2faFound' | i18n }}\">\n      {{ \"inactive2faFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <a\n              bitBadge\n              href=\"{{ cipherDocs.get(c.id) }}\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              *ngIf=\"cipherDocs.has(c.id)\"\n            >\n              {{ \"instructions\" | i18n }}</a\n            >\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"inactive-two-factor-report.component.html\",\n})\nexport class InactiveTwoFactorReportComponent extends CipherReportComponent implements OnInit {\n  services = new Map<string, string>();\n  cipherDocs = new Map<string, string>();\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    private logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    try {\n      await this.load2fa();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (this.services.size > 0) {\n      const allCiphers = await this.getAllCiphers();\n      const inactive2faCiphers: CipherView[] = [];\n      const promises: Promise<void>[] = [];\n      const docs = new Map<string, string>();\n      allCiphers.forEach((c) => {\n        if (\n          c.type !== CipherType.Login ||\n          (c.login.totp != null && c.login.totp !== \"\") ||\n          !c.login.hasUris ||\n          c.isDeleted\n        ) {\n          return;\n        }\n        for (let i = 0; i < c.login.uris.length; i++) {\n          const u = c.login.uris[i];\n          if (u.uri != null && u.uri !== \"\") {\n            const uri = u.uri.replace(\"www.\", \"\");\n            const domain = Utils.getDomain(uri);\n            if (domain != null && this.services.has(domain)) {\n              if (this.services.get(domain) != null) {\n                docs.set(c.id, this.services.get(domain));\n              }\n              inactive2faCiphers.push(c);\n            }\n          }\n        }\n      });\n      await Promise.all(promises);\n      this.ciphers = inactive2faCiphers;\n      this.cipherDocs = docs;\n    }\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  private async load2fa() {\n    if (this.services.size > 0) {\n      return;\n    }\n    const response = await fetch(new Request(\"https://2fa.directory/api/v3/totp.json\"));\n    if (response.status !== 200) {\n      throw new Error();\n    }\n    const responseJson = await response.json();\n    for (const service of responseJson) {\n      const serviceData = service[1];\n      if (serviceData.domain == null) {\n        continue;\n      }\n      if (serviceData.documentation == null) {\n        continue;\n      }\n      if (serviceData[\"additional-domains\"] != null) {\n        for (const additionalDomain of serviceData[\"additional-domains\"]) {\n          this.services.set(additionalDomain, serviceData.documentation);\n        }\n      }\n      this.services.set(serviceData.domain, serviceData.documentation);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"reusedPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"reusedPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noReusedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'reusedPasswordsFound' | i18n }}\">\n      {{ \"reusedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"reusedXTimes\" | i18n: passwordUseMap.get(c.login.password) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"reused-passwords-report.component.html\",\n})\nexport class ReusedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordUseMap: Map<string, number>;\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const ciphersWithPasswords: CipherView[] = [];\n    this.passwordUseMap = new Map<string, number>();\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      ciphersWithPasswords.push(c);\n      if (this.passwordUseMap.has(c.login.password)) {\n        this.passwordUseMap.set(c.login.password, this.passwordUseMap.get(c.login.password) + 1);\n      } else {\n        this.passwordUseMap.set(c.login.password, 1);\n      }\n    });\n    const reusedPasswordCiphers = ciphersWithPasswords.filter(\n      (c) =>\n        this.passwordUseMap.has(c.login.password) && this.passwordUseMap.get(c.login.password) > 1\n    );\n    this.ciphers = reusedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from an organization view\n    return true;\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"unsecuredWebsitesReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"unsecuredWebsitesReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noUnsecuredWebsites\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'unsecuredWebsitesFound' | i18n }}\">\n      {{ \"unsecuredWebsitesFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"unsecured-websites-report.component.html\",\n})\nexport class UnsecuredWebsitesReportComponent extends CipherReportComponent implements OnInit {\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const unsecuredCiphers = allCiphers.filter((c) => {\n      if (c.type !== CipherType.Login || !c.login.hasUris || c.isDeleted) {\n        return false;\n      }\n      return c.login.uris.some((u) => u.uri != null && u.uri.indexOf(\"http://\") === 0);\n    });\n    this.ciphers = unsecuredCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"weakPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"weakPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noWeakPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'weakPasswordsFound' | i18n }}\">\n      {{ \"weakPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge [badgeType]=\"passwordStrengthMap.get(c.id)[1]\">\n              {{ passwordStrengthMap.get(c.id)[0] | i18n }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { BadgeTypes } from \"@bitwarden/components\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"weak-passwords-report.component.html\",\n})\nexport class WeakPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordStrengthMap = new Map<string, [string, BadgeTypes]>();\n\n  private passwordStrengthCache = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected passwordGenerationService: PasswordGenerationService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, stateService, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const weakPasswordCiphers: CipherView[] = [];\n    const isUserNameNotEmpty = (c: CipherView): boolean => {\n      return c.login.username != null && c.login.username.trim() !== \"\";\n    };\n    const getCacheKey = (c: CipherView): string => {\n      return c.login.password + \"_____\" + (isUserNameNotEmpty(c) ? c.login.username : \"\");\n    };\n\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const hasUserName = isUserNameNotEmpty(c);\n      const cacheKey = getCacheKey(c);\n      if (!this.passwordStrengthCache.has(cacheKey)) {\n        let userInput: string[] = [];\n        if (hasUserName) {\n          const atPosition = c.login.username.indexOf(\"@\");\n          if (atPosition > -1) {\n            userInput = userInput\n              .concat(\n                c.login.username\n                  .substr(0, atPosition)\n                  .trim()\n                  .toLowerCase()\n                  .split(/[^A-Za-z0-9]/)\n              )\n              .filter((i) => i.length >= 3);\n          } else {\n            userInput = c.login.username\n              .trim()\n              .toLowerCase()\n              .split(/[^A-Za-z0-9]/)\n              .filter((i) => i.length >= 3);\n          }\n        }\n        const result = this.passwordGenerationService.passwordStrength(\n          c.login.password,\n          userInput.length > 0 ? userInput : null\n        );\n        this.passwordStrengthCache.set(cacheKey, result.score);\n      }\n      const score = this.passwordStrengthCache.get(cacheKey);\n      if (score != null && score <= 2) {\n        this.passwordStrengthMap.set(c.id, this.scoreKey(score));\n        weakPasswordCiphers.push(c);\n      }\n    });\n    weakPasswordCiphers.sort((a, b) => {\n      return (\n        this.passwordStrengthCache.get(getCacheKey(a)) -\n        this.passwordStrengthCache.get(getCacheKey(b))\n      );\n    });\n    this.ciphers = weakPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n\n  private scoreKey(score: number): [string, BadgeTypes] {\n    switch (score) {\n      case 4:\n        return [\"strong\", \"success\"];\n      case 3:\n        return [\"good\", \"primary\"];\n      case 2:\n        return [\"weak\", \"warning\"];\n      default:\n        return [\"veryWeak\", \"danger\"];\n    }\n  }\n}\n","export enum ReportVariant {\n  Enabled = \"Enabled\",\n  RequiresPremium = \"RequiresPremium\",\n  RequiresUpgrade = \"RequiresUpgrade\",\n}\n","<a\n  class=\"tw-block tw-h-full tw-max-w-72 tw-overflow-hidden tw-rounded tw-border tw-border-solid tw-border-secondary-300 !tw-text-main tw-transition-all hover:tw-scale-105 hover:tw-no-underline focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2\"\n  [routerLink]=\"route\"\n>\n  <div class=\"tw-relative\">\n    <div\n      class=\"tw-flex tw-h-28 tw-bg-background-alt2 tw-text-center tw-text-primary-300\"\n      [ngClass]=\"{ 'tw-grayscale': disabled }\"\n    >\n      <div class=\"tw-m-auto\"><bit-icon [icon]=\"icon\" aria-hidden=\"true\"></bit-icon></div>\n    </div>\n    <div class=\"tw-p-5\" [ngClass]=\"{ 'tw-grayscale': disabled }\">\n      <h3 class=\"tw-mb-4 tw-text-xl tw-font-bold\">{{ title }}</h3>\n      <p class=\"tw-mb-0\">{{ description }}</p>\n    </div>\n    <span\n      bitBadge\n      badgeType=\"success\"\n      class=\"tw-absolute tw-left-2 tw-top-2 tw-leading-none\"\n      *ngIf=\"disabled\"\n    >\n      <ng-container *ngIf=\"requiresPremium\">{{ \"premium\" | i18n }}</ng-container>\n      <ng-container *ngIf=\"!requiresPremium\">{{ \"upgrade\" | i18n }}</ng-container>\n    </span>\n  </div>\n</a>\n","import { Component, Input } from \"@angular/core\";\n\nimport { Icon } from \"@bitwarden/components\";\n\nimport { ReportVariant } from \"../models/report-variant\";\n\n@Component({\n  selector: \"app-report-card\",\n  templateUrl: \"report-card.component.html\",\n})\nexport class ReportCardComponent {\n  @Input() title: string;\n  @Input() description: string;\n  @Input() route: string;\n  @Input() icon: Icon;\n  @Input() variant: ReportVariant;\n\n  protected get disabled() {\n    return this.variant != ReportVariant.Enabled;\n  }\n\n  protected get requiresPremium() {\n    return this.variant == ReportVariant.RequiresPremium;\n  }\n}\n","<div class=\"tw-inline-grid tw-grid-cols-3 tw-gap-4\">\n  <div *ngFor=\"let report of reports\">\n    <app-report-card\n      [title]=\"report.title | i18n\"\n      [description]=\"report.description | i18n\"\n      [route]=\"report.route\"\n      [variant]=\"report.variant\"\n      [icon]=\"report.icon\"\n    ></app-report-card>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ReportEntry } from \"../models/report-entry\";\n\n@Component({\n  selector: \"app-report-list\",\n  templateUrl: \"report-list.component.html\",\n})\nexport class ReportListComponent {\n  @Input() reports: ReportEntry[];\n}\n","export class StorageRequest {\n  storageGbAdjustment: number;\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ (add ? \"addStorage\" : \"removeStorage\") | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"storageAdjustment\">{{\n          (add ? \"gbStorageAdd\" : \"gbStorageRemove\") | i18n\n        }}</label>\n        <input\n          id=\"storageAdjustment\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"StroageGbAdjustment\"\n          [(ngModel)]=\"storageAdjustment\"\n          min=\"0\"\n          max=\"99\"\n          step=\"1\"\n          required\n        />\n      </div>\n    </div>\n    <div *ngIf=\"add\" class=\"mb-3\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ storageAdjustment || 0 }} GB &times;\n      {{ storageGbPrice | currency: \"$\" }} = {{ adjustedStorageTotal | currency: \"$\" }} /{{\n        interval | i18n\n      }}\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n    <small class=\"d-block text-muted mt-3\">\n      {{ (add ? \"storageAddNote\" : \"storageRemoveNote\") | i18n }}\n    </small>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StorageRequest } from \"@bitwarden/common/models/request/storage.request\";\nimport { PaymentResponse } from \"@bitwarden/common/models/response/payment.response\";\n\nimport { PaymentComponent } from \"./payment.component\";\n\n@Component({\n  selector: \"app-adjust-storage\",\n  templateUrl: \"adjust-storage.component.html\",\n})\nexport class AdjustStorageComponent {\n  @Input() storageGbPrice = 0;\n  @Input() add = true;\n  @Input() organizationId: string;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter<number>();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n\n  storageAdjustment = 0;\n  formPromise: Promise<PaymentResponse | void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    try {\n      const request = new StorageRequest();\n      request.storageGbAdjustment = this.storageAdjustment;\n      if (!this.add) {\n        request.storageGbAdjustment *= -1;\n      }\n\n      let paymentFailed = false;\n      const action = async () => {\n        let response: Promise<PaymentResponse>;\n        if (this.organizationId == null) {\n          response = this.formPromise = this.apiService.postAccountStorage(request);\n        } else {\n          response = this.formPromise = this.organizationApiService.updateStorage(\n            this.organizationId,\n            request\n          );\n        }\n        const result = await response;\n        if (result != null && result.paymentIntentClientSecret != null) {\n          try {\n            await this.paymentComponent.handleStripeCardPayment(\n              result.paymentIntentClientSecret,\n              null\n            );\n          } catch {\n            paymentFailed = true;\n          }\n        }\n      };\n      this.formPromise = action();\n      await this.formPromise;\n      this.onAdjusted.emit(this.storageAdjustment);\n      if (paymentFailed) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          null,\n          this.i18nService.t(\"couldNotChargeCardPayInvoice\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"../billing\"], { relativeTo: this.activatedRoute });\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"adjustedStorage\", request.storageGbAdjustment.toString())\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  get adjustedStorageTotal(): number {\n    return this.storageGbPrice * this.storageAdjustment;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"apiKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"apiKeyTitle\">{{ apiKeyTitle | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ apiKeyDescription | i18n }}</p>\n        <app-user-verification\n          [(ngModel)]=\"masterPassword\"\n          ngDefaultControl\n          name=\"secret\"\n          *ngIf=\"!clientSecret\"\n        >\n        </app-user-verification>\n\n        <app-callout type=\"warning\" *ngIf=\"clientSecret\">{{ apiKeyWarning | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          title=\"{{ 'oauth2ClientCredentials' | i18n }}\"\n          icon=\"bwi bwi-key\"\n          *ngIf=\"clientSecret\"\n        >\n          <p class=\"mb-1\">\n            <strong>client_id:</strong><br />\n            <code>{{ clientId }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>client_secret:</strong><br />\n            <code>{{ clientSecret }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>scope:</strong><br />\n            <code>{{ scope }}</code>\n          </p>\n          <p class=\"mb-0\">\n            <strong>grant_type:</strong><br />\n            <code>{{ grantType }}</code>\n          </p>\n        </app-callout>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!clientSecret\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (isRotation ? \"rotateApiKey\" : \"viewApiKey\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/api-key.response\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-api-key\",\n  templateUrl: \"api-key.component.html\",\n})\nexport class ApiKeyComponent {\n  keyType: string;\n  isRotation: boolean;\n  postKey: (entityId: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  entityId: string;\n  scope: string;\n  grantType: string;\n  apiKeyTitle: string;\n  apiKeyWarning: string;\n  apiKeyDescription: string;\n\n  masterPassword: Verification;\n  formPromise: Promise<ApiKeyResponse>;\n  clientId: string;\n  clientSecret: string;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.postKey(this.entityId, request));\n      const response = await this.formPromise;\n      this.clientSecret = response.apiKey;\n      this.clientId = `${this.keyType}.${this.entityId}`;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export enum TransactionType {\n  Charge = 0,\n  Credit = 1,\n  PromotionalCredit = 2,\n  ReferralCredit = 3,\n  Refund = 4,\n}\n","<h2 class=\"mt-3\">{{ \"invoices\" | i18n }}</h2>\n<p *ngIf=\"!invoices || !invoices.length\">{{ \"noInvoices\" | i18n }}</p>\n<table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\">\n  <tbody>\n    <tr *ngFor=\"let i of invoices\">\n      <td>{{ i.date | date: \"mediumDate\" }}</td>\n      <td>\n        <a\n          href=\"{{ i.pdfUrl }}\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          class=\"mr-2\"\n          appA11yTitle=\"{{ 'downloadInvoice' | i18n }}\"\n        >\n          <i class=\"bwi bwi-file-pdf\" aria-hidden=\"true\"></i\n        ></a>\n        <a href=\"{{ i.url }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ 'viewInvoice' | i18n }}\">\n          {{ \"invoiceNumber\" | i18n: i.number }}</a\n        >\n      </td>\n      <td>{{ i.amount | currency: \"$\" }}</td>\n      <td>\n        <span *ngIf=\"i.paid\">\n          <i class=\"bwi bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"paid\" | i18n }}\n        </span>\n        <span *ngIf=\"!i.paid\">\n          <i class=\"bwi bwi-exclamation-circle text-muted\" aria-hidden=\"true\"></i>\n          {{ \"unpaid\" | i18n }}\n        </span>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<h2 class=\"spaced-header\">{{ \"transactions\" | i18n }}</h2>\n<p *ngIf=\"!transactions || !transactions.length\">{{ \"noTransactions\" | i18n }}</p>\n<table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\">\n  <tbody>\n    <tr *ngFor=\"let t of transactions\">\n      <td>{{ t.createdDate | date: \"mediumDate\" }}</td>\n      <td>\n        <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n          {{ \"chargeNoun\" | i18n }}\n        </span>\n        <span *ngIf=\"t.type === transactionType.Refund\">{{ \"refundNoun\" | i18n }}</span>\n      </td>\n      <td>\n        <i\n          class=\"bwi bwi-fw\"\n          *ngIf=\"t.paymentMethodType\"\n          aria-hidden=\"true\"\n          [ngClass]=\"paymentMethodClasses(t.paymentMethodType)\"\n        ></i>\n        {{ t.details }}\n      </td>\n      <td\n        [ngClass]=\"{ 'text-strike': t.refunded }\"\n        title=\"{{ (t.refunded ? 'refunded' : '') | i18n }}\"\n      >\n        {{ t.amount | currency: \"$\" }}\n      </td>\n    </tr>\n  </tbody>\n</table>\n<small class=\"text-muted\">* {{ \"chargesStatement\" | i18n: \"BITWARDEN\" }}</small>\n","import { Component, Input } from \"@angular/core\";\n\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { TransactionType } from \"@bitwarden/common/enums/transactionType\";\nimport { BillingHistoryResponse } from \"@bitwarden/common/models/response/billing-history.response\";\n\n@Component({\n  selector: \"app-billing-history\",\n  templateUrl: \"billing-history.component.html\",\n})\nexport class BillingHistoryComponent {\n  @Input()\n  billing: BillingHistoryResponse;\n\n  paymentMethodType = PaymentMethodType;\n  transactionType = TransactionType;\n\n  get invoices() {\n    return this.billing != null ? this.billing.invoices : null;\n  }\n\n  get transactions() {\n    return this.billing != null ? this.billing.transactions : null;\n  }\n\n  paymentMethodClasses(type: PaymentMethodType) {\n    switch (type) {\n      case PaymentMethodType.Card:\n        return [\"bwi-credit-card\"];\n      case PaymentMethodType.BankAccount:\n      case PaymentMethodType.WireTransfer:\n        return [\"bwi-bank\"];\n      case PaymentMethodType.BitPay:\n        return [\"bwi-bitcoin text-warning\"];\n      case PaymentMethodType.PayPal:\n        return [\"bwi-paypal text-primary\"];\n      default:\n        return [];\n    }\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organization-keys.request\";\n\nexport class OrganizationCreateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  planType: PlanType;\n  key: string;\n  keys: OrganizationKeysRequest;\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n  additionalSeats: number;\n  maxAutoscaleSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  collectionName: string;\n  taxIdNumber: string;\n  billingAddressLine1: string;\n  billingAddressLine2: string;\n  billingAddressCity: string;\n  billingAddressState: string;\n  billingAddressPostalCode: string;\n  billingAddressCountry: string;\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organization-keys.request\";\n\nexport class OrganizationUpgradeRequest {\n  businessName: string;\n  planType: PlanType;\n  additionalSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  billingAddressCountry: string;\n  billingAddressPostalCode: string;\n  keys: OrganizationKeysRequest;\n}\n","import { OrganizationCreateRequest } from \"../organization-create.request\";\n\nexport class ProviderOrganizationCreateRequest {\n  constructor(\n    public clientOwnerEmail: string,\n    public organizationCreateRequest: OrganizationCreateRequest\n  ) {}\n}\n","<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"createOrganization && selfHosted\">\n  <p>{{ \"uploadLicenseFileOrg\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_organization_license.json\"\n      }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n  </form>\n</ng-container>\n<form\n  #form\n  [formGroup]=\"formGroup\"\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n  *ngIf=\"!loading && !selfHosted && this.plans\"\n  class=\"tw-pt-6\"\n>\n  <app-org-info\n    (changedBusinessOwned)=\"changedOwnedBusiness()\"\n    [formGroup]=\"formGroup\"\n    [createOrganization]=\"createOrganization\"\n    [isProvider]=\"!!providerId\"\n    [acceptingSponsorship]=\"acceptingSponsorship\"\n  ></app-org-info>\n  <h2 class=\"mt-5\">{{ \"chooseYourPlan\" | i18n }}</h2>\n  <div *ngFor=\"let selectableProduct of selectableProducts\" class=\"form-check form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"product\"\n      id=\"product{{ selectableProduct.product }}\"\n      [value]=\"selectableProduct.product\"\n      formControlName=\"product\"\n      (change)=\"changedProduct()\"\n    />\n    <label class=\"form-check-label\" for=\"product{{ selectableProduct.product }}\">\n      {{ selectableProduct.nameLocalizationKey | i18n }}\n      <small class=\"mb-1\">{{ selectableProduct.descriptionLocalizationKey | i18n: \"1\" }}</small>\n      <ng-container\n        *ngIf=\"selectableProduct.product === productTypes.Enterprise; else fullFeatureList\"\n      >\n        <small>• {{ \"includeAllTeamsFeatures\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSso\">• {{ \"includeSsoAuthentication\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasPolicies\"\n          >• {{ \"includeEnterprisePolicies\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-container>\n      <ng-template #fullFeatureList>\n        <small *ngIf=\"selectableProduct.product == productTypes.Free\"\n          >• {{ \"limitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"selectableProduct.product != productTypes.Free && selectableProduct.maxUsers\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxUsers\">• {{ \"addShareUnlimitedUsers\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.maxCollections\"\n          >• {{ \"limitedCollections\" | i18n: selectableProduct.maxCollections }}</small\n        >\n        <small *ngIf=\"selectableProduct.maxAdditionalSeats\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxAdditionalSeats }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxCollections\"\n          >• {{ \"createUnlimitedCollections\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.baseStorageGb\"\n          >• {{ \"gbEncryptedFileStorage\" | i18n: selectableProduct.baseStorageGb + \"GB\" }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasGroups\">• {{ \"controlAccessWithGroups\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasApi\">• {{ \"trackAuditLogs\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasDirectory\"\n          >• {{ \"syncUsersFromDirectory\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.usersGetPremium\">• {{ \"usersGetPremium\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.product != productTypes.Free\"\n          >• {{ \"priorityCustomerSupport\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-template>\n      <span *ngIf=\"selectableProduct.product != productTypes.Free\">\n        <ng-container *ngIf=\"selectableProduct.basePrice && !acceptingSponsorship\">\n          {{ selectableProduct.basePrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }},\n          {{ \"includesXUsers\" | i18n: selectableProduct.baseSeats }}\n          <ng-container *ngIf=\"selectableProduct.hasAdditionalSeatsOption\">\n            {{ (\"additionalUsers\" | i18n).toLowerCase() }}\n            {{ selectableProduct.seatPrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </ng-container>\n        </ng-container>\n      </span>\n      <span *ngIf=\"!selectableProduct.basePrice && selectableProduct.hasAdditionalSeatsOption\">\n        {{ \"costPerUser\" | i18n: (selectableProduct.seatPrice / 12 | currency: \"$\") }} /{{\n          \"month\" | i18n\n        }}\n      </span>\n      <span *ngIf=\"selectableProduct.product == productTypes.Free\">{{ \"freeForever\" | i18n }}</span>\n    </label>\n  </div>\n  <div *ngIf=\"formGroup.controls['product'].value !== productTypes.Free\">\n    <ng-container *ngIf=\"selectedPlan.hasAdditionalSeatsOption && !selectedPlan.baseSeats\">\n      <h2 class=\"mt-5\">{{ \"users\" | i18n }}</h2>\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <label for=\"additionalSeats\">{{ \"userSeats\" | i18n }}</label>\n          <input\n            id=\"additionalSeats\"\n            class=\"form-control\"\n            type=\"number\"\n            name=\"additionalSeats\"\n            formControlName=\"additionalSeats\"\n            placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n            required\n          />\n          <small class=\"text-muted form-text\">{{ \"userSeatsHowManyDesc\" | i18n }}</small>\n        </div>\n      </div>\n    </ng-container>\n    <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n    <div class=\"row\" *ngIf=\"selectedPlan.hasAdditionalSeatsOption && selectedPlan.baseSeats\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalSeats\">{{ \"additionalUserSeats\" | i18n }}</label>\n        <input\n          id=\"additionalSeats\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"additionalSeats\"\n          formControlName=\"additionalSeats\"\n          placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"userSeatsAdditionalDesc\"\n            | i18n: selectedPlan.baseSeats:(seatPriceMonthly(selectedPlan) | currency: \"$\")\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n        <input\n          id=\"additionalStorage\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"additionalStorageGb\"\n          formControlName=\"additionalStorage\"\n          step=\"1\"\n          placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"additionalStorageIntervalDesc\"\n            | i18n\n              : \"1 GB\"\n              : (additionalStoragePriceMonthly(selectedPlan) | currency: \"$\")\n              : (\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\" *ngIf=\"selectedPlan.hasPremiumAccessOption\">\n        <div class=\"form-check\">\n          <input\n            id=\"premiumAccess\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"premiumAccessAddon\"\n            formControlName=\"premiumAccessAddon\"\n          />\n          <label for=\"premiumAccess\" class=\"form-check-label bold\">{{\n            \"premiumAccess\" | i18n\n          }}</label>\n        </div>\n        <small class=\"text-muted form-text\">{{\n          \"premiumAccessDesc\" | i18n: (3.33 | currency: \"$\"):(\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n    <div class=\"form-check form-check-block\" *ngFor=\"let selectablePlan of selectablePlans\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"plan\"\n        id=\"interval{{ selectablePlan.type }}\"\n        [value]=\"selectablePlan.type\"\n        formControlName=\"plan\"\n      />\n      <label class=\"form-check-label\" for=\"interval{{ selectablePlan.type }}\">\n        <ng-container *ngIf=\"selectablePlan.isAnnual\">\n          {{ \"annually\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }}\n            =\n            <ng-container *ngIf=\"acceptingSponsorship; else notAcceptingSponsorship\">\n              <span style=\"text-decoration: line-through\">{{\n                selectablePlan.basePrice | currency: \"$\"\n              }}</span>\n              {{ \"freeWithSponsorship\" | i18n }}\n            </ng-container>\n            <ng-template #notAcceptingSponsorship>\n              {{ selectablePlan.basePrice | currency: \"$\" }}\n              /{{ \"year\" | i18n }}\n            </ng-template>\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ formGroup.controls[\"additionalSeats\"].value || 0 }} &times;\n            {{ selectablePlan.seatPrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} = {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{\n              \"year\" | i18n\n            }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}:\n            {{ formGroup.controls[\"additionalStorage\"].value || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"year\" | i18n }}\n          </small>\n        </ng-container>\n        <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n          {{ \"monthly\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }}\n            =\n            {{ selectablePlan.basePrice | currency: \"$\" }}\n            /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ formGroup.controls[\"additionalSeats\"].value || 0 }} &times;\n            {{ selectablePlan.seatPrice | currency: \"$\" }} {{ \"monthAbbr\" | i18n }} =\n            {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}:\n            {{ formGroup.controls[\"additionalStorage\"].value || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n        </ng-container>\n      </label>\n    </div>\n    <hr class=\"my-3\" />\n    <h2 class=\"spaced-header mb-4\">\n      {{ (createOrganization ? \"paymentInformation\" : \"billingInformation\") | i18n }}\n    </h2>\n    <small class=\"text-muted font-italic mb-3 d-block\">\n      {{ paymentDesc }}\n    </small>\n    <app-payment *ngIf=\"createOrganization\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    <div id=\"price\" class=\"my-4\">\n      <div class=\"text-muted text-sm\">\n        {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n        <br />\n        <ng-container>\n          {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n        </ng-container>\n      </div>\n      <hr class=\"my-1 col-3 ml-0\" />\n      <p class=\"text-lg\">\n        <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{\n          selectedPlanInterval | i18n\n        }}\n      </p>\n    </div>\n    <ng-container *ngIf=\"!createOrganization\">\n      <app-payment [showMethods]=\"false\"></app-payment>\n    </ng-container>\n  </div>\n  <div *ngIf=\"singleOrgPolicyBlock\" class=\"mt-4\">\n    <app-callout [type]=\"'error'\">{{ \"singleOrgBlockCreateMessage\" | i18n }}</app-callout>\n  </div>\n  <div class=\"mt-4\">\n    <button\n      type=\"submit\"\n      buttonType=\"primary\"\n      bitButton\n      [loading]=\"form.loading\"\n      [disabled]=\"!formGroup.valid\"\n    >\n      {{ \"submit\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\nimport { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { OrganizationCreateRequest } from \"@bitwarden/common/models/request/organization-create.request\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organization-keys.request\";\nimport { OrganizationUpgradeRequest } from \"@bitwarden/common/models/request/organization-upgrade.request\";\nimport { ProviderOrganizationCreateRequest } from \"@bitwarden/common/models/request/provider/provider-organization-create.request\";\nimport { PlanResponse } from \"@bitwarden/common/models/response/plan.response\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\ninterface OnSuccessArgs {\n  organizationId: string;\n}\n\n@Component({\n  selector: \"app-organization-plans\",\n  templateUrl: \"organization-plans.component.html\",\n})\nexport class OrganizationPlansComponent implements OnInit, OnDestroy {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxComponent: TaxInfoComponent;\n\n  @Input() organizationId: string;\n  @Input() showFree = true;\n  @Input() showCancel = false;\n  @Input() acceptingSponsorship = false;\n  @Input() product: ProductType = ProductType.Free;\n  @Input() plan: PlanType = PlanType.Free;\n  @Input() providerId: string;\n  @Output() onSuccess = new EventEmitter<OnSuccessArgs>();\n  @Output() onCanceled = new EventEmitter<void>();\n  @Output() onTrialBillingSuccess = new EventEmitter();\n\n  loading = true;\n  selfHosted = false;\n  productTypes = ProductType;\n  formPromise: Promise<string>;\n  singleOrgPolicyBlock = false;\n  isInTrialFlow = false;\n  discount = 0;\n\n  formGroup = this.formBuilder.group({\n    name: [\"\"],\n    billingEmail: [\"\", [Validators.email]],\n    businessOwned: [false],\n    premiumAccessAddon: [false],\n    additionalStorage: [0, [Validators.min(0), Validators.max(99)]],\n    additionalSeats: [0, [Validators.min(0), Validators.max(100000)]],\n    clientOwnerEmail: [\"\", [Validators.email]],\n    businessName: [\"\"],\n    plan: [this.plan],\n    product: [this.product],\n  });\n\n  plans: PlanResponse[];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private router: Router,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private organizationService: OrganizationService,\n    private logService: LogService,\n    private messagingService: MessagingService,\n    private formBuilder: UntypedFormBuilder,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    if (!this.selfHosted) {\n      const plans = await this.apiService.getPlans();\n      this.plans = plans.data;\n      if (this.product === ProductType.Enterprise || this.product === ProductType.Teams) {\n        this.formGroup.controls.businessOwned.setValue(true);\n      }\n    }\n\n    if (this.providerId) {\n      this.formGroup.controls.businessOwned.setValue(true);\n      this.changedOwnedBusiness();\n    }\n\n    if (!this.createOrganization || this.acceptingSponsorship) {\n      this.formGroup.controls.product.setValue(ProductType.Families);\n      this.changedProduct();\n    }\n\n    if (this.createOrganization) {\n      this.formGroup.controls.name.addValidators([Validators.required, Validators.maxLength(50)]);\n      this.formGroup.controls.billingEmail.addValidators(Validators.required);\n    }\n\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.SingleOrg)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.singleOrgPolicyBlock = policyAppliesToActiveUser;\n      });\n\n    this.loading = false;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get createOrganization() {\n    return this.organizationId == null;\n  }\n\n  get selectedPlan() {\n    return this.plans.find((plan) => plan.type === this.formGroup.controls.plan.value);\n  }\n\n  get selectedPlanInterval() {\n    return this.selectedPlan.isAnnual ? \"year\" : \"month\";\n  }\n\n  get selectableProducts() {\n    let validPlans = this.plans.filter((plan) => plan.type !== PlanType.Custom);\n\n    if (this.formGroup.controls.businessOwned.value) {\n      validPlans = validPlans.filter((plan) => plan.canBeUsedByBusiness);\n    }\n\n    if (!this.showFree) {\n      validPlans = validPlans.filter((plan) => plan.product !== ProductType.Free);\n    }\n\n    validPlans = validPlans.filter(\n      (plan) =>\n        !plan.legacyYear &&\n        !plan.disabled &&\n        (plan.isAnnual || plan.product === this.productTypes.Free)\n    );\n\n    if (this.acceptingSponsorship) {\n      const familyPlan = this.plans.find((plan) => plan.type === PlanType.FamiliesAnnually);\n      this.discount = familyPlan.basePrice;\n      validPlans = [familyPlan];\n    }\n\n    return validPlans;\n  }\n\n  get selectablePlans() {\n    return this.plans?.filter(\n      (plan) =>\n        !plan.legacyYear && !plan.disabled && plan.product === this.formGroup.controls.product.value\n    );\n  }\n\n  additionalStoragePriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.additionalStoragePricePerGb;\n    }\n    return selectedPlan.additionalStoragePricePerGb / 12;\n  }\n\n  seatPriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.seatPrice;\n    }\n    return selectedPlan.seatPrice / 12;\n  }\n\n  additionalStorageTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalStorageOption) {\n      return 0;\n    }\n\n    return (\n      plan.additionalStoragePricePerGb *\n      Math.abs(this.formGroup.controls.additionalStorage.value || 0)\n    );\n  }\n\n  seatTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalSeatsOption) {\n      return 0;\n    }\n\n    return plan.seatPrice * Math.abs(this.formGroup.controls.additionalSeats.value || 0);\n  }\n\n  get subtotal() {\n    let subTotal = this.selectedPlan.basePrice;\n    if (\n      this.selectedPlan.hasAdditionalSeatsOption &&\n      this.formGroup.controls.additionalSeats.value\n    ) {\n      subTotal += this.seatTotal(this.selectedPlan);\n    }\n    if (\n      this.selectedPlan.hasAdditionalStorageOption &&\n      this.formGroup.controls.additionalStorage.value\n    ) {\n      subTotal += this.additionalStorageTotal(this.selectedPlan);\n    }\n    if (\n      this.selectedPlan.hasPremiumAccessOption &&\n      this.formGroup.controls.premiumAccessAddon.value\n    ) {\n      subTotal += this.selectedPlan.premiumAccessOptionPrice;\n    }\n    return subTotal - this.discount;\n  }\n\n  get freeTrial() {\n    return this.selectedPlan.trialPeriodDays != null;\n  }\n\n  get taxCharges() {\n    return this.taxComponent != null && this.taxComponent.taxRate != null\n      ? (this.taxComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total() {\n    return this.subtotal + this.taxCharges || 0;\n  }\n\n  get paymentDesc() {\n    if (this.acceptingSponsorship) {\n      return this.i18nService.t(\"paymentSponsored\");\n    } else if (this.freeTrial && this.createOrganization) {\n      return this.i18nService.t(\"paymentChargedWithTrial\");\n    } else {\n      return this.i18nService.t(\"paymentCharged\", this.i18nService.t(this.selectedPlanInterval));\n    }\n  }\n\n  changedProduct() {\n    this.formGroup.controls.plan.setValue(this.selectablePlans[0].type);\n    if (!this.selectedPlan.hasPremiumAccessOption) {\n      this.formGroup.controls.premiumAccessAddon.setValue(false);\n    }\n    if (!this.selectedPlan.hasAdditionalStorageOption) {\n      this.formGroup.controls.additionalStorage.setValue(0);\n    }\n    if (!this.selectedPlan.hasAdditionalSeatsOption) {\n      this.formGroup.controls.additionalSeats.setValue(0);\n    } else if (\n      !this.formGroup.controls.additionalSeats.value &&\n      !this.selectedPlan.baseSeats &&\n      this.selectedPlan.hasAdditionalSeatsOption\n    ) {\n      this.formGroup.controls.additionalSeats.setValue(1);\n    }\n  }\n\n  changedOwnedBusiness() {\n    if (!this.formGroup.controls.businessOwned.value || this.selectedPlan.canBeUsedByBusiness) {\n      return;\n    }\n    this.formGroup.controls.product.setValue(ProductType.Teams);\n    this.formGroup.controls.plan.setValue(PlanType.TeamsAnnually);\n    this.changedProduct();\n  }\n\n  changedCountry() {\n    this.paymentComponent.hideBank = this.taxComponent.taxInfo.country !== \"US\";\n    // Bank Account payments are only available for US customers\n    if (\n      this.paymentComponent.hideBank &&\n      this.paymentComponent.method === PaymentMethodType.BankAccount\n    ) {\n      this.paymentComponent.method = PaymentMethodType.Card;\n      this.paymentComponent.changeMethod();\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  async submit() {\n    if (this.singleOrgPolicyBlock) {\n      return;\n    }\n\n    try {\n      const doSubmit = async (): Promise<string> => {\n        let orgId: string = null;\n        if (this.createOrganization) {\n          const shareKey = await this.cryptoService.makeShareKey();\n          const key = shareKey[0].encryptedString;\n          const collection = await this.cryptoService.encrypt(\n            this.i18nService.t(\"defaultCollection\"),\n            shareKey[1]\n          );\n          const collectionCt = collection.encryptedString;\n          const orgKeys = await this.cryptoService.makeKeyPair(shareKey[1]);\n\n          if (this.selfHosted) {\n            orgId = await this.createSelfHosted(key, collectionCt, orgKeys);\n          } else {\n            orgId = await this.createCloudHosted(key, collectionCt, orgKeys, shareKey[1]);\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            this.i18nService.t(\"organizationCreated\"),\n            this.i18nService.t(\"organizationReadyToGo\")\n          );\n        } else {\n          orgId = await this.updateOrganization(orgId);\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"organizationUpgraded\")\n          );\n        }\n\n        await this.apiService.refreshIdentityToken();\n        await this.syncService.fullSync(true);\n\n        if (!this.acceptingSponsorship && !this.isInTrialFlow) {\n          this.router.navigate([\"/organizations/\" + orgId]);\n        }\n\n        if (this.isInTrialFlow) {\n          this.onTrialBillingSuccess.emit({\n            orgId: orgId,\n            subLabelText: this.billingSubLabelText(),\n          });\n        }\n\n        return orgId;\n      };\n\n      this.formPromise = doSubmit();\n      const organizationId = await this.formPromise;\n      this.onSuccess.emit({ organizationId: organizationId });\n      this.messagingService.send(\"organizationCreated\", organizationId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async updateOrganization(orgId: string) {\n    const request = new OrganizationUpgradeRequest();\n    request.businessName = this.formGroup.controls.businessOwned.value\n      ? this.formGroup.controls.businessName.value\n      : null;\n    request.additionalSeats = this.formGroup.controls.additionalSeats.value;\n    request.additionalStorageGb = this.formGroup.controls.additionalStorage.value;\n    request.premiumAccessAddon =\n      this.selectedPlan.hasPremiumAccessOption && this.formGroup.controls.premiumAccessAddon.value;\n    request.planType = this.selectedPlan.type;\n    request.billingAddressCountry = this.taxComponent.taxInfo.country;\n    request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n\n    // Retrieve org info to backfill pub/priv key if necessary\n    const org = await this.organizationService.get(this.organizationId);\n    if (!org.hasPublicAndPrivateKeys) {\n      const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n      const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n      request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    }\n\n    const result = await this.organizationApiService.upgrade(this.organizationId, request);\n    if (!result.success && result.paymentIntentClientSecret != null) {\n      await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n    }\n    return this.organizationId;\n  }\n\n  private async createCloudHosted(\n    key: string,\n    collectionCt: string,\n    orgKeys: [string, EncString],\n    orgKey: SymmetricCryptoKey\n  ) {\n    const request = new OrganizationCreateRequest();\n    request.key = key;\n    request.collectionName = collectionCt;\n    request.name = this.formGroup.controls.name.value;\n    request.billingEmail = this.formGroup.controls.billingEmail.value;\n    request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n\n    if (this.selectedPlan.type === PlanType.Free) {\n      request.planType = PlanType.Free;\n    } else {\n      const tokenResult = await this.paymentComponent.createPaymentToken();\n\n      request.paymentToken = tokenResult[0];\n      request.paymentMethodType = tokenResult[1];\n      request.businessName = this.formGroup.controls.businessOwned.value\n        ? this.formGroup.controls.businessName.value\n        : null;\n      request.additionalSeats = this.formGroup.controls.additionalSeats.value;\n      request.additionalStorageGb = this.formGroup.controls.additionalStorage.value;\n      request.premiumAccessAddon =\n        this.selectedPlan.hasPremiumAccessOption &&\n        this.formGroup.controls.premiumAccessAddon.value;\n      request.planType = this.selectedPlan.type;\n      request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n      request.billingAddressCountry = this.taxComponent.taxInfo.country;\n      if (this.taxComponent.taxInfo.includeTaxId) {\n        request.taxIdNumber = this.taxComponent.taxInfo.taxId;\n        request.billingAddressLine1 = this.taxComponent.taxInfo.line1;\n        request.billingAddressLine2 = this.taxComponent.taxInfo.line2;\n        request.billingAddressCity = this.taxComponent.taxInfo.city;\n        request.billingAddressState = this.taxComponent.taxInfo.state;\n      }\n    }\n\n    if (this.providerId) {\n      const providerRequest = new ProviderOrganizationCreateRequest(\n        this.formGroup.controls.clientOwnerEmail.value,\n        request\n      );\n      const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n      providerRequest.organizationCreateRequest.key = (\n        await this.cryptoService.encrypt(orgKey.key, providerKey)\n      ).encryptedString;\n      const orgId = (\n        await this.apiService.postProviderCreateOrganization(this.providerId, providerRequest)\n      ).organizationId;\n\n      return orgId;\n    } else {\n      return (await this.organizationApiService.create(request)).id;\n    }\n  }\n\n  private async createSelfHosted(key: string, collectionCt: string, orgKeys: [string, EncString]) {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      throw new Error(this.i18nService.t(\"selectFile\"));\n    }\n\n    const fd = new FormData();\n    fd.append(\"license\", files[0]);\n    fd.append(\"key\", key);\n    fd.append(\"collectionName\", collectionCt);\n    const response = await this.organizationApiService.createLicense(fd);\n    const orgId = response.id;\n\n    await this.apiService.refreshIdentityToken();\n\n    // Org Keys live outside of the OrganizationLicense - add the keys to the org here\n    const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    await this.organizationApiService.updateKeys(orgId, request);\n\n    return orgId;\n  }\n\n  private billingSubLabelText(): string {\n    const selectedPlan = this.selectedPlan;\n    const price = selectedPlan.basePrice === 0 ? selectedPlan.seatPrice : selectedPlan.basePrice;\n    let text = \"\";\n\n    if (selectedPlan.isAnnual) {\n      text += `${this.i18nService.t(\"annual\")} ($${price}/${this.i18nService.t(\"yr\")})`;\n    } else {\n      text += `${this.i18nService.t(\"monthly\")} ($${price}/${this.i18nService.t(\"monthAbbr\")})`;\n    }\n\n    return text;\n  }\n}\n","export class VerifyBankRequest {\n  amount1: number;\n  amount2: number;\n}\n","export class BitPayInvoiceRequest {\n  userId: string;\n  organizationId: string;\n  credit: boolean;\n  amount: number;\n  returnUrl: string;\n  name: string;\n  email: string;\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ \"addCredit\" | i18n }}</h3>\n    <div class=\"mb-4 text-lg\" *ngIf=\"showOptions\">\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-paypal\"\n          [value]=\"paymentMethodType.PayPal\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-paypal\">\n          <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n        >\n      </div>\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-bitcoin\"\n          [value]=\"paymentMethodType.BitPay\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-bitcoin\">\n          <i class=\"bwi bwi-fw bwi-bitcoin\" aria-hidden=\"true\"></i> Bitcoin</label\n        >\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"row\">\n        <div class=\"col-4\">\n          <label for=\"creditAmount\">{{ \"amount\" | i18n }}</label>\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\"><span class=\"input-group-text\">$USD</span></div>\n            <input\n              id=\"creditAmount\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"CreditAmount\"\n              [(ngModel)]=\"creditAmount\"\n              (blur)=\"formatAmount()\"\n              required\n            />\n          </div>\n        </div>\n      </div>\n      <small class=\"form-text text-muted\">{{ \"creditDelayed\" | i18n }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading || ppLoading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n<form #ppButtonForm action=\"{{ ppButtonFormAction }}\" method=\"post\" target=\"_top\">\n  <input type=\"hidden\" name=\"cmd\" value=\"_xclick\" />\n  <input type=\"hidden\" name=\"business\" value=\"{{ ppButtonBusinessId }}\" />\n  <input type=\"hidden\" name=\"button_subtype\" value=\"services\" />\n  <input type=\"hidden\" name=\"no_note\" value=\"1\" />\n  <input type=\"hidden\" name=\"no_shipping\" value=\"1\" />\n  <input type=\"hidden\" name=\"rm\" value=\"1\" />\n  <input type=\"hidden\" name=\"return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"cancel_return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\n  <input type=\"hidden\" name=\"image_url\" value=\"https://bitwarden.com/images/paypal-banner.png\" />\n  <input type=\"hidden\" name=\"bn\" value=\"PP-BuyNowBF:btn_buynow_LG.gif:NonHosted\" />\n  <input type=\"hidden\" name=\"amount\" value=\"{{ creditAmount }}\" />\n  <input type=\"hidden\" name=\"custom\" value=\"{{ ppButtonCustomField }}\" />\n  <input type=\"hidden\" name=\"item_name\" value=\"Bitwarden Account Credit\" />\n  <input type=\"hidden\" name=\"item_number\" value=\"{{ subject }}\" />\n</form>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { PayPalConfig } from \"@bitwarden/common/abstractions/environment.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { BitPayInvoiceRequest } from \"@bitwarden/common/models/request/bit-pay-invoice.request\";\n\n@Component({\n  selector: \"app-add-credit\",\n  templateUrl: \"add-credit.component.html\",\n})\nexport class AddCreditComponent implements OnInit {\n  @Input() creditAmount: string;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.PayPal;\n  @Input() organizationId: string;\n  @Output() onAdded = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(\"ppButtonForm\", { read: ElementRef, static: true }) ppButtonFormRef: ElementRef;\n\n  paymentMethodType = PaymentMethodType;\n  ppButtonFormAction: string;\n  ppButtonBusinessId: string;\n  ppButtonCustomField: string;\n  ppLoading = false;\n  subject: string;\n  returnUrl: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private name: string;\n  private email: string;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {\n    const payPalConfig = process.env.PAYPAL_CONFIG as PayPalConfig;\n    this.ppButtonFormAction = payPalConfig.buttonAction;\n    this.ppButtonBusinessId = payPalConfig.businessId;\n  }\n\n  async ngOnInit() {\n    if (this.organizationId != null) {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"20.00\";\n      }\n      this.ppButtonCustomField = \"organization_id:\" + this.organizationId;\n      const org = await this.organizationService.get(this.organizationId);\n      if (org != null) {\n        this.subject = org.name;\n        this.name = org.name;\n      }\n    } else {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"10.00\";\n      }\n      this.userId = await this.stateService.getUserId();\n      this.subject = await this.stateService.getEmail();\n      this.email = this.subject;\n      this.ppButtonCustomField = \"user_id:\" + this.userId;\n    }\n    this.ppButtonCustomField += \",account_credit:1\";\n    this.returnUrl = window.location.href;\n  }\n\n  async submit() {\n    if (this.creditAmount == null || this.creditAmount === \"\") {\n      return;\n    }\n\n    if (this.method === PaymentMethodType.PayPal) {\n      this.ppButtonFormRef.nativeElement.submit();\n      this.ppLoading = true;\n      return;\n    }\n    if (this.method === PaymentMethodType.BitPay) {\n      try {\n        const req = new BitPayInvoiceRequest();\n        req.email = this.email;\n        req.name = this.name;\n        req.credit = true;\n        req.amount = this.creditAmountNumber;\n        req.organizationId = this.organizationId;\n        req.userId = this.userId;\n        req.returnUrl = this.returnUrl;\n        this.formPromise = this.apiService.postBitPayInvoice(req);\n        const bitPayUrl: string = await this.formPromise;\n        this.platformUtilsService.launchUri(bitPayUrl);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      return;\n    }\n    try {\n      this.onAdded.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  formatAmount() {\n    try {\n      if (this.creditAmount != null && this.creditAmount !== \"\") {\n        const floatAmount = Math.abs(parseFloat(this.creditAmount));\n        if (floatAmount > 0) {\n          this.creditAmount = parseFloat((Math.round(floatAmount * 100) / 100).toString())\n            .toFixed(2)\n            .toString();\n          return;\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.creditAmount = \"\";\n  }\n\n  get creditAmountNumber(): number {\n    if (this.creditAmount != null && this.creditAmount !== \"\") {\n      try {\n        return parseFloat(this.creditAmount);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return null;\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\n\nimport { OrganizationTaxInfoUpdateRequest } from \"./organization-tax-info-update.request\";\n\nexport class PaymentRequest extends OrganizationTaxInfoUpdateRequest {\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n}\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { PaymentRequest } from \"@bitwarden/common/models/request/payment.request\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-adjust-payment\",\n  templateUrl: \"adjust-payment.component.html\",\n})\nexport class AdjustPaymentComponent {\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent, { static: true }) taxInfoComponent: TaxInfoComponent;\n\n  @Input() currentType?: PaymentMethodType;\n  @Input() organizationId: string;\n  @Output() onAdjusted = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  paymentMethodType = PaymentMethodType;\n  formPromise: Promise<void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    try {\n      const request = new PaymentRequest();\n      this.formPromise = this.paymentComponent.createPaymentToken().then((result) => {\n        request.paymentToken = result[0];\n        request.paymentMethodType = result[1];\n        request.postalCode = this.taxInfoComponent.taxInfo.postalCode;\n        request.country = this.taxInfoComponent.taxInfo.country;\n        if (this.organizationId == null) {\n          return this.apiService.postAccountPayment(request);\n        } else {\n          request.taxId = this.taxInfoComponent.taxInfo.taxId;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          request.line1 = this.taxInfoComponent.taxInfo.line1;\n          request.line2 = this.taxInfoComponent.taxInfo.line2;\n          request.city = this.taxInfoComponent.taxInfo.city;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          return this.organizationApiService.updatePayment(this.organizationId, request);\n        }\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedPaymentMethod\")\n      );\n      this.onAdjusted.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  changeCountry() {\n    if (this.taxInfoComponent.taxInfo.country === \"US\") {\n      this.paymentComponent.hideBank = !this.organizationId;\n    } else {\n      this.paymentComponent.hideBank = true;\n      if (this.paymentComponent.method === PaymentMethodType.BankAccount) {\n        this.paymentComponent.method = PaymentMethodType.Card;\n        this.paymentComponent.changeMethod();\n      }\n    }\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">\n      {{ (currentType != null ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n    </h3>\n    <app-payment [hideBank]=\"!organizationId\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changeCountry()\"></app-tax-info>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","<div class=\"d-flex\" [ngClass]=\"headerClass\">\n  <h1>\n    {{ \"paymentMethod\" | i18n }}\n  </h1>\n  <button\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    class=\"tw-ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ (isCreditBalance ? \"accountCredit\" : \"accountBalance\") | i18n }}</h2>\n  <p class=\"text-lg\">\n    <strong>{{ creditOrBalance | currency: \"$\" }}</strong>\n  </p>\n  <p>{{ \"creditAppliedDesc\" | i18n }}</p>\n  <button bitButton buttonType=\"secondary\" (click)=\"addCredit()\" *ngIf=\"!showAddCredit\">\n    {{ \"addCredit\" | i18n }}\n  </button>\n  <app-add-credit\n    [organizationId]=\"organizationId\"\n    (onAdded)=\"closeAddCredit(true)\"\n    (onCanceled)=\"closeAddCredit(false)\"\n    *ngIf=\"showAddCredit\"\n  >\n  </app-add-credit>\n  <h2 class=\"spaced-header\">{{ \"paymentMethod\" | i18n }}</h2>\n  <p *ngIf=\"!paymentSource\">{{ \"noPaymentMethod\" | i18n }}</p>\n  <ng-container *ngIf=\"paymentSource\">\n    <app-callout\n      type=\"warning\"\n      title=\"{{ 'verifyBankAccount' | i18n }}\"\n      *ngIf=\"\n        forOrganization &&\n        paymentSource.type === paymentMethodType.BankAccount &&\n        paymentSource.needsVerification\n      \"\n    >\n      <p>{{ \"verifyBankAccountDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}</p>\n      <form\n        #verifyForm\n        class=\"form-inline\"\n        (ngSubmit)=\"verifyBank()\"\n        [formGroup]=\"verifyBankForm\"\n        [appApiAction]=\"verifyBankPromise\"\n        ngNativeValidate\n      >\n        <bit-form-field class=\"tw-mr-2 tw-w-40\">\n          <bit-label>{{ \"amountX\" | i18n: \"1\" }}</bit-label>\n          <input bitInput type=\"number\" step=\"1\" placeholder=\"xx\" formControlName=\"amount1\" />\n          <span bitPrefix>$0.</span>\n        </bit-form-field>\n        <bit-form-field class=\"tw-mr-2 tw-w-40\">\n          <bit-label>{{ \"amountX\" | i18n: \"2\" }}</bit-label>\n          <input bitInput type=\"number\" step=\"1\" placeholder=\"xx\" formControlName=\"amount2\" />\n          <span bitPrefix>$0.</span>\n        </bit-form-field>\n        <button\n          bitButton\n          buttonType=\"primary\"\n          type=\"submit\"\n          class=\"btn-submit\"\n          [disabled]=\"verifyForm.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"verifyBankAccount\" | i18n }}</span>\n        </button>\n      </form>\n    </app-callout>\n    <p>\n      <i class=\"bwi bwi-fw\" [ngClass]=\"paymentSourceClasses\"></i>\n      <span *ngIf=\"paymentSourceInApp\">{{ \"inAppPurchase\" | i18n }}</span>\n      {{ paymentSource.description }}\n    </p>\n  </ng-container>\n  <button bitButton buttonType=\"secondary\" (click)=\"changePayment()\" *ngIf=\"!showAdjustPayment\">\n    {{ (paymentSource ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n  </button>\n  <app-adjust-payment\n    [organizationId]=\"organizationId\"\n    [currentType]=\"paymentSource != null ? paymentSource.type : null\"\n    (onAdjusted)=\"closePayment(true)\"\n    (onCanceled)=\"closePayment(false)\"\n    *ngIf=\"showAdjustPayment\"\n  >\n  </app-adjust-payment>\n  <ng-container *ngIf=\"forOrganization\">\n    <h2 class=\"spaced-header\">{{ \"taxInformation\" | i18n }}</h2>\n    <p>{{ \"taxInformationDesc\" | i18n }}</p>\n    <div *ngIf=\"!org || loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </div>\n    <form\n      *ngIf=\"org && !loading\"\n      #formTax\n      (ngSubmit)=\"submitTaxInfo()\"\n      [appApiAction]=\"taxFormPromise\"\n      ngNativeValidate\n    >\n      <app-tax-info></app-tax-info>\n      <button\n        bitButton\n        buttonType=\"primary\"\n        type=\"submit\"\n        class=\"btn-submit\"\n        [disabled]=\"formTax.loading\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"save\" | i18n }}</span>\n      </button>\n    </form>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { VerifyBankRequest } from \"@bitwarden/common/models/request/verify-bank.request\";\nimport { BillingPaymentResponse } from \"@bitwarden/common/models/response/billing-payment.response\";\nimport { OrganizationResponse } from \"@bitwarden/common/models/response/organization.response\";\n\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-payment-method\",\n  templateUrl: \"payment-method.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PaymentMethodComponent implements OnInit {\n  @ViewChild(TaxInfoComponent) taxInfo: TaxInfoComponent;\n\n  loading = false;\n  firstLoaded = false;\n  showAdjustPayment = false;\n  showAddCredit = false;\n  billing: BillingPaymentResponse;\n  org: OrganizationResponse;\n  paymentMethodType = PaymentMethodType;\n  organizationId: string;\n\n  verifyBankPromise: Promise<any>;\n  taxFormPromise: Promise<any>;\n\n  verifyBankForm = this.formBuilder.group({\n    amount1: new FormControl<number>(null, [\n      Validators.required,\n      Validators.max(99),\n      Validators.min(0),\n    ]),\n    amount2: new FormControl<number>(null, [\n      Validators.required,\n      Validators.max(99),\n      Validators.min(0),\n    ]),\n  });\n\n  constructor(\n    protected apiService: ApiService,\n    protected organizationApiService: OrganizationApiServiceAbstraction,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private logService: LogService,\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.params.subscribe(async (params) => {\n      if (params.organizationId) {\n        this.organizationId = params.organizationId;\n      } else if (this.platformUtilsService.isSelfHost()) {\n        this.router.navigate([\"/settings/subscription\"]);\n        return;\n      }\n\n      await this.load();\n      this.firstLoaded = true;\n    });\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n\n    if (this.forOrganization) {\n      const billingPromise = this.organizationApiService.getBilling(this.organizationId);\n      const orgPromise = this.organizationApiService.get(this.organizationId);\n\n      [this.billing, this.org] = await Promise.all([billingPromise, orgPromise]);\n    } else {\n      this.billing = await this.apiService.getUserBillingPayment();\n    }\n\n    this.loading = false;\n  }\n\n  addCredit() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"addCredit\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAddCredit = true;\n  }\n\n  closeAddCredit(load: boolean) {\n    this.showAddCredit = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  changePayment() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"changePaymentMethod\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAdjustPayment = true;\n  }\n\n  closePayment(load: boolean) {\n    this.showAdjustPayment = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  async verifyBank() {\n    if (this.loading || !this.forOrganization) {\n      return;\n    }\n\n    try {\n      const request = new VerifyBankRequest();\n      request.amount1 = this.verifyBankForm.value.amount1;\n      request.amount2 = this.verifyBankForm.value.amount2;\n      this.verifyBankPromise = this.organizationApiService.verifyBank(this.organizationId, request);\n      await this.verifyBankPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"verifiedBankAccount\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async submitTaxInfo() {\n    this.taxFormPromise = this.taxInfo.submitTaxInfo();\n    await this.taxFormPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"taxInfoUpdated\"));\n  }\n\n  get isCreditBalance() {\n    return this.billing == null || this.billing.balance <= 0;\n  }\n\n  get creditOrBalance() {\n    return Math.abs(this.billing != null ? this.billing.balance : 0);\n  }\n\n  get paymentSource() {\n    return this.billing != null ? this.billing.paymentSource : null;\n  }\n\n  get forOrganization() {\n    return this.organizationId != null;\n  }\n\n  get headerClass() {\n    return this.forOrganization ? [\"page-header\"] : [\"tabbed-header\"];\n  }\n\n  get paymentSourceClasses() {\n    if (this.paymentSource == null) {\n      return [];\n    }\n    switch (this.paymentSource.type) {\n      case PaymentMethodType.Card:\n        return [\"bwi-credit-card\"];\n      case PaymentMethodType.BankAccount:\n        return [\"bwi-bank\"];\n      case PaymentMethodType.Check:\n        return [\"bwi-money\"];\n      case PaymentMethodType.AppleInApp:\n        return [\"bwi-apple text-muted\"];\n      case PaymentMethodType.GoogleInApp:\n        return [\"bwi-google text-muted\"];\n      case PaymentMethodType.PayPal:\n        return [\"bwi-paypal text-primary\"];\n      default:\n        return [];\n    }\n  }\n\n  get paymentSourceInApp() {\n    return (\n      this.paymentSource != null &&\n      (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n        this.paymentSource.type === PaymentMethodType.GoogleInApp)\n    );\n  }\n}\n","<div class=\"mb-4 text-lg\" *ngIf=\"showOptions && showMethods\">\n  <div class=\"form-check form-check-inline mr-4\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-card\"\n      [value]=\"paymentMethodType.Card\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-card\">\n      <i class=\"bwi bwi-fw bwi-credit-card\" aria-hidden=\"true\"></i> {{ \"creditCard\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline mr-4\" *ngIf=\"!hideBank\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-bank\"\n      [value]=\"paymentMethodType.BankAccount\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-bank\">\n      <i class=\"bwi bwi-fw bwi-bank\" aria-hidden=\"true\"></i> {{ \"bankAccount\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hidePaypal\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-paypal\"\n      [value]=\"paymentMethodType.PayPal\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-paypal\">\n      <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hideCredit\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-credit\"\n      [value]=\"paymentMethodType.Credit\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-credit\">\n      <i class=\"bwi bwi-fw bwi-dollar\" aria-hidden=\"true\"></i> {{ \"accountCredit\" | i18n }}</label\n    >\n  </div>\n</div>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Card\">\n  <div class=\"row\">\n    <div [ngClass]=\"trialFlow ? 'col-5' : 'col-4'\" class=\"form-group\">\n      <label for=\"stripe-card-number-element\">{{ \"number\" | i18n }}</label>\n      <div id=\"stripe-card-number-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div *ngIf=\"!trialFlow\" class=\"form-group col-8 d-flex align-items-end\">\n      <img\n        src=\"../../images/cards.png\"\n        alt=\"Visa, MasterCard, Discover, AmEx, JCB, Diners Club, UnionPay\"\n        width=\"323\"\n        height=\"32\"\n      />\n    </div>\n    <div [ngClass]=\"trialFlow ? 'col-3' : 'col-4'\" class=\"form-group\">\n      <label for=\"stripe-card-expiry-element\">{{ \"expiration\" | i18n }}</label>\n      <div id=\"stripe-card-expiry-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div class=\"form-group col-4\">\n      <div class=\"d-flex\">\n        <label for=\"stripe-card-cvc-element\">\n          {{ \"securityCode\" | i18n }}\n        </label>\n        <a\n          href=\"https://www.cvvnumber.com/cvv.html\"\n          tabindex=\"-1\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          class=\"ml-auto\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n      </div>\n      <div id=\"stripe-card-cvc-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.BankAccount\">\n  <app-callout type=\"warning\" title=\"{{ 'verifyBankAccount' | i18n }}\">\n    {{ \"verifyBankAccountInitialDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"routing_number\">{{ \"routingNumber\" | i18n }}</label>\n      <input\n        id=\"routing_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"routing_number\"\n        [(ngModel)]=\"bank.routing_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_number\">{{ \"accountNumber\" | i18n }}</label>\n      <input\n        id=\"account_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_number\"\n        [(ngModel)]=\"bank.account_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_name\">{{ \"accountHolderName\" | i18n }}</label>\n      <input\n        id=\"account_holder_name\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_holder_name\"\n        [(ngModel)]=\"bank.account_holder_name\"\n        required\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_type\">{{ \"bankAccountType\" | i18n }}</label>\n      <select\n        id=\"account_holder_type\"\n        class=\"form-control\"\n        name=\"account_holder_type\"\n        [(ngModel)]=\"bank.account_holder_type\"\n        required\n      >\n        <option value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option value=\"company\">{{ \"bankAccountTypeCompany\" | i18n }}</option>\n        <option value=\"individual\">{{ \"bankAccountTypeIndividual\" | i18n }}</option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.PayPal\">\n  <div class=\"mb-3\">\n    <div id=\"bt-dropin-container\" class=\"mb-1\"></div>\n    <small class=\"text-muted\">{{ \"paypalClickSubmit\" | i18n }}</small>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Credit\">\n  <app-callout type=\"note\">\n    {{ \"makeSureEnoughCredit\" | i18n }}\n  </app-callout>\n</ng-container>\n","import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\n\n@Component({\n  selector: \"app-payment\",\n  templateUrl: \"payment.component.html\",\n})\nexport class PaymentComponent implements OnInit, OnDestroy {\n  @Input() showMethods = true;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.Card;\n  @Input() hideBank = false;\n  @Input() hidePaypal = false;\n  @Input() hideCredit = false;\n  @Input() trialFlow = false;\n\n  private destroy$ = new Subject<void>();\n\n  bank: any = {\n    routing_number: null,\n    account_number: null,\n    account_holder_name: null,\n    account_holder_type: \"\",\n    currency: \"USD\",\n    country: \"US\",\n  };\n\n  paymentMethodType = PaymentMethodType;\n\n  private btScript: HTMLScriptElement;\n  private btInstance: any = null;\n  private stripeScript: HTMLScriptElement;\n  private stripe: any = null;\n  private stripeElements: any = null;\n  private stripeCardNumberElement: any = null;\n  private stripeCardExpiryElement: any = null;\n  private stripeCardCvcElement: any = null;\n  private StripeElementStyle: any;\n  private StripeElementClasses: any;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private themingService: AbstractThemingService\n  ) {\n    this.stripeScript = window.document.createElement(\"script\");\n    this.stripeScript.src = \"https://js.stripe.com/v3/\";\n    this.stripeScript.async = true;\n    this.stripeScript.onload = () => {\n      this.stripe = (window as any).Stripe(process.env.STRIPE_KEY);\n      this.stripeElements = this.stripe.elements();\n      this.setStripeElement();\n    };\n    this.btScript = window.document.createElement(\"script\");\n    this.btScript.src = `scripts/dropin.js?cache=${process.env.CACHE_TAG}`;\n    this.btScript.async = true;\n    this.StripeElementStyle = {\n      base: {\n        color: null,\n        fontFamily:\n          '\"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, ' +\n          '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n        fontSize: \"14px\",\n        fontSmoothing: \"antialiased\",\n        \"::placeholder\": {\n          color: null,\n        },\n      },\n      invalid: {\n        color: null,\n      },\n    };\n    this.StripeElementClasses = {\n      focus: \"is-focused\",\n      empty: \"is-empty\",\n      invalid: \"is-invalid\",\n    };\n  }\n\n  async ngOnInit() {\n    if (!this.showOptions) {\n      this.hidePaypal = this.method !== PaymentMethodType.PayPal;\n      this.hideBank = this.method !== PaymentMethodType.BankAccount;\n      this.hideCredit = this.method !== PaymentMethodType.Credit;\n    }\n    this.subscribeToTheme();\n    window.document.head.appendChild(this.stripeScript);\n    if (!this.hidePaypal) {\n      window.document.head.appendChild(this.btScript);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    window.document.head.removeChild(this.stripeScript);\n    window.setTimeout(() => {\n      Array.from(window.document.querySelectorAll(\"iframe\")).forEach((el) => {\n        if (el.src != null && el.src.indexOf(\"stripe\") > -1) {\n          try {\n            window.document.body.removeChild(el);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      });\n    }, 500);\n    if (!this.hidePaypal) {\n      window.document.head.removeChild(this.btScript);\n      window.setTimeout(() => {\n        Array.from(window.document.head.querySelectorAll(\"script\")).forEach((el) => {\n          if (el.src != null && el.src.indexOf(\"paypal\") > -1) {\n            try {\n              window.document.head.removeChild(el);\n            } catch (e) {\n              this.logService.error(e);\n            }\n          }\n        });\n        const btStylesheet = window.document.head.querySelector(\"#braintree-dropin-stylesheet\");\n        if (btStylesheet != null) {\n          try {\n            window.document.head.removeChild(btStylesheet);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      }, 500);\n    }\n  }\n\n  changeMethod() {\n    this.btInstance = null;\n\n    if (this.method === PaymentMethodType.PayPal) {\n      window.setTimeout(() => {\n        (window as any).braintree.dropin.create(\n          {\n            authorization: process.env.BRAINTREE_KEY,\n            container: \"#bt-dropin-container\",\n            paymentOptionPriority: [\"paypal\"],\n            paypal: {\n              flow: \"vault\",\n              buttonStyle: {\n                label: \"pay\",\n                size: \"medium\",\n                shape: \"pill\",\n                color: \"blue\",\n                tagline: \"false\",\n              },\n            },\n          },\n          (createErr: any, instance: any) => {\n            if (createErr != null) {\n              // eslint-disable-next-line\n              console.error(createErr);\n              return;\n            }\n            this.btInstance = instance;\n          }\n        );\n      }, 250);\n    } else {\n      this.setStripeElement();\n    }\n  }\n\n  createPaymentToken(): Promise<[string, PaymentMethodType]> {\n    return new Promise((resolve, reject) => {\n      if (this.method === PaymentMethodType.Credit) {\n        resolve([null, this.method]);\n      } else if (this.method === PaymentMethodType.PayPal) {\n        this.btInstance\n          .requestPaymentMethod()\n          .then((payload: any) => {\n            resolve([payload.nonce, this.method]);\n          })\n          .catch((err: any) => {\n            reject(err.message);\n          });\n      } else if (\n        this.method === PaymentMethodType.Card ||\n        this.method === PaymentMethodType.BankAccount\n      ) {\n        if (this.method === PaymentMethodType.Card) {\n          this.apiService\n            .postSetupPayment()\n            .then((clientSecret) =>\n              this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n            )\n            .then((result: any) => {\n              if (result.error) {\n                reject(result.error.message);\n              } else if (result.setupIntent && result.setupIntent.status === \"succeeded\") {\n                resolve([result.setupIntent.payment_method, this.method]);\n              } else {\n                reject();\n              }\n            });\n        } else {\n          this.stripe.createToken(\"bank_account\", this.bank).then((result: any) => {\n            if (result.error) {\n              reject(result.error.message);\n            } else if (result.token && result.token.id != null) {\n              resolve([result.token.id, this.method]);\n            } else {\n              reject();\n            }\n          });\n        }\n      }\n    });\n  }\n\n  handleStripeCardPayment(clientSecret: string, successCallback: () => Promise<any>): Promise<any> {\n    return new Promise<void>((resolve, reject) => {\n      if (this.showMethods && this.stripeCardNumberElement == null) {\n        reject();\n        return;\n      }\n      const handleCardPayment = () =>\n        this.showMethods\n          ? this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n          : this.stripe.handleCardSetup(clientSecret);\n      return handleCardPayment().then(async (result: any) => {\n        if (result.error) {\n          reject(result.error.message);\n        } else if (result.paymentIntent && result.paymentIntent.status === \"succeeded\") {\n          if (successCallback != null) {\n            await successCallback();\n          }\n          resolve();\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n\n  private setStripeElement() {\n    window.setTimeout(() => {\n      if (this.showMethods && this.method === PaymentMethodType.Card) {\n        if (this.stripeCardNumberElement == null) {\n          this.stripeCardNumberElement = this.stripeElements.create(\"cardNumber\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        if (this.stripeCardExpiryElement == null) {\n          this.stripeCardExpiryElement = this.stripeElements.create(\"cardExpiry\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n          });\n        }\n        if (this.stripeCardCvcElement == null) {\n          this.stripeCardCvcElement = this.stripeElements.create(\"cardCvc\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        this.stripeCardNumberElement.mount(\"#stripe-card-number-element\");\n        this.stripeCardExpiryElement.mount(\"#stripe-card-expiry-element\");\n        this.stripeCardCvcElement.mount(\"#stripe-card-cvc-element\");\n      }\n    }, 50);\n  }\n\n  private subscribeToTheme() {\n    this.themingService.theme$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      const style = getComputedStyle(document.documentElement);\n      this.StripeElementStyle.base.color = `rgb(${style.getPropertyValue(\"--color-text-main\")})`;\n      this.StripeElementStyle.base[\"::placeholder\"].color = `rgb(${style.getPropertyValue(\n        \"--color-text-muted\"\n      )})`;\n      this.StripeElementStyle.invalid.color = `rgb(${style.getPropertyValue(\"--color-text-main\")})`;\n      this.StripeElementStyle.invalid.borderColor = `rgb(${style.getPropertyValue(\n        \"--color-danger-500\"\n      )})`;\n    });\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-purge-vault\",\n  templateUrl: \"purge-vault.component.html\",\n})\nexport class PurgeVaultComponent {\n  @Input() organizationId?: string = null;\n\n  masterPassword: Verification;\n  formPromise: Promise<unknown>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private router: Router,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postPurgeCiphers(request, this.organizationId));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"vaultPurged\"));\n      if (this.organizationId != null) {\n        this.router.navigate([\"organizations\", this.organizationId, \"vault\"]);\n      } else {\n        this.router.navigate([\"vault\"]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"purgeVaultTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"purgeVaultTitle\">{{ \"purgeVault\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ (organizationId ? \"purgeOrgVaultDesc\" : \"purgeVaultDesc\") | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"purgeVaultWarning\" | i18n }}</app-callout>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"purgeVault\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"row\">\n  <div [ngClass]=\"trialFlow ? 'col-7' : 'col-6'\">\n    <div class=\"form-group\">\n      <label for=\"addressCountry\">{{ \"country\" | i18n }}</label>\n      <select\n        id=\"addressCountry\"\n        class=\"form-control\"\n        [(ngModel)]=\"taxInfo.country\"\n        required\n        name=\"addressCountry\"\n        autocomplete=\"country\"\n        (change)=\"changeCountry()\"\n      >\n        <option value=\"\">-- Select --</option>\n        <option value=\"US\">United States</option>\n        <option value=\"CN\">China</option>\n        <option value=\"FR\">France</option>\n        <option value=\"DE\">Germany</option>\n        <option value=\"CA\">Canada</option>\n        <option value=\"GB\">United Kingdom</option>\n        <option value=\"AU\">Australia</option>\n        <option value=\"IN\">India</option>\n        <option value=\"-\" disabled></option>\n        <option value=\"AF\">Afghanistan</option>\n        <option value=\"AX\">Åland Islands</option>\n        <option value=\"AL\">Albania</option>\n        <option value=\"DZ\">Algeria</option>\n        <option value=\"AS\">American Samoa</option>\n        <option value=\"AD\">Andorra</option>\n        <option value=\"AO\">Angola</option>\n        <option value=\"AI\">Anguilla</option>\n        <option value=\"AQ\">Antarctica</option>\n        <option value=\"AG\">Antigua and Barbuda</option>\n        <option value=\"AR\">Argentina</option>\n        <option value=\"AM\">Armenia</option>\n        <option value=\"AW\">Aruba</option>\n        <option value=\"AT\">Austria</option>\n        <option value=\"AZ\">Azerbaijan</option>\n        <option value=\"BS\">Bahamas</option>\n        <option value=\"BH\">Bahrain</option>\n        <option value=\"BD\">Bangladesh</option>\n        <option value=\"BB\">Barbados</option>\n        <option value=\"BY\">Belarus</option>\n        <option value=\"BE\">Belgium</option>\n        <option value=\"BZ\">Belize</option>\n        <option value=\"BJ\">Benin</option>\n        <option value=\"BM\">Bermuda</option>\n        <option value=\"BT\">Bhutan</option>\n        <option value=\"BO\">Bolivia, Plurinational State of</option>\n        <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\n        <option value=\"BA\">Bosnia and Herzegovina</option>\n        <option value=\"BW\">Botswana</option>\n        <option value=\"BV\">Bouvet Island</option>\n        <option value=\"BR\">Brazil</option>\n        <option value=\"IO\">British Indian Ocean Territory</option>\n        <option value=\"BN\">Brunei Darussalam</option>\n        <option value=\"BG\">Bulgaria</option>\n        <option value=\"BF\">Burkina Faso</option>\n        <option value=\"BI\">Burundi</option>\n        <option value=\"KH\">Cambodia</option>\n        <option value=\"CM\">Cameroon</option>\n        <option value=\"CV\">Cape Verde</option>\n        <option value=\"KY\">Cayman Islands</option>\n        <option value=\"CF\">Central African Republic</option>\n        <option value=\"TD\">Chad</option>\n        <option value=\"CL\">Chile</option>\n        <option value=\"CX\">Christmas Island</option>\n        <option value=\"CC\">Cocos (Keeling) Islands</option>\n        <option value=\"CO\">Colombia</option>\n        <option value=\"KM\">Comoros</option>\n        <option value=\"CG\">Congo</option>\n        <option value=\"CD\">Congo, the Democratic Republic of the</option>\n        <option value=\"CK\">Cook Islands</option>\n        <option value=\"CR\">Costa Rica</option>\n        <option value=\"CI\">Côte d'Ivoire</option>\n        <option value=\"HR\">Croatia</option>\n        <option value=\"CU\">Cuba</option>\n        <option value=\"CW\">Curaçao</option>\n        <option value=\"CY\">Cyprus</option>\n        <option value=\"CZ\">Czech Republic</option>\n        <option value=\"DK\">Denmark</option>\n        <option value=\"DJ\">Djibouti</option>\n        <option value=\"DM\">Dominica</option>\n        <option value=\"DO\">Dominican Republic</option>\n        <option value=\"EC\">Ecuador</option>\n        <option value=\"EG\">Egypt</option>\n        <option value=\"SV\">El Salvador</option>\n        <option value=\"GQ\">Equatorial Guinea</option>\n        <option value=\"ER\">Eritrea</option>\n        <option value=\"EE\">Estonia</option>\n        <option value=\"ET\">Ethiopia</option>\n        <option value=\"FK\">Falkland Islands (Malvinas)</option>\n        <option value=\"FO\">Faroe Islands</option>\n        <option value=\"FJ\">Fiji</option>\n        <option value=\"FI\">Finland</option>\n        <option value=\"GF\">French Guiana</option>\n        <option value=\"PF\">French Polynesia</option>\n        <option value=\"TF\">French Southern Territories</option>\n        <option value=\"GA\">Gabon</option>\n        <option value=\"GM\">Gambia</option>\n        <option value=\"GE\">Georgia</option>\n        <option value=\"GH\">Ghana</option>\n        <option value=\"GI\">Gibraltar</option>\n        <option value=\"GR\">Greece</option>\n        <option value=\"GL\">Greenland</option>\n        <option value=\"GD\">Grenada</option>\n        <option value=\"GP\">Guadeloupe</option>\n        <option value=\"GU\">Guam</option>\n        <option value=\"GT\">Guatemala</option>\n        <option value=\"GG\">Guernsey</option>\n        <option value=\"GN\">Guinea</option>\n        <option value=\"GW\">Guinea-Bissau</option>\n        <option value=\"GY\">Guyana</option>\n        <option value=\"HT\">Haiti</option>\n        <option value=\"HM\">Heard Island and McDonald Islands</option>\n        <option value=\"VA\">Holy See (Vatican City State)</option>\n        <option value=\"HN\">Honduras</option>\n        <option value=\"HK\">Hong Kong</option>\n        <option value=\"HU\">Hungary</option>\n        <option value=\"IS\">Iceland</option>\n        <option value=\"ID\">Indonesia</option>\n        <option value=\"IR\">Iran, Islamic Republic of</option>\n        <option value=\"IQ\">Iraq</option>\n        <option value=\"IE\">Ireland</option>\n        <option value=\"IM\">Isle of Man</option>\n        <option value=\"IL\">Israel</option>\n        <option value=\"IT\">Italy</option>\n        <option value=\"JM\">Jamaica</option>\n        <option value=\"JP\">Japan</option>\n        <option value=\"JE\">Jersey</option>\n        <option value=\"JO\">Jordan</option>\n        <option value=\"KZ\">Kazakhstan</option>\n        <option value=\"KE\">Kenya</option>\n        <option value=\"KI\">Kiribati</option>\n        <option value=\"KP\">Korea, Democratic People's Republic of</option>\n        <option value=\"KR\">Korea, Republic of</option>\n        <option value=\"KW\">Kuwait</option>\n        <option value=\"KG\">Kyrgyzstan</option>\n        <option value=\"LA\">Lao People's Democratic Republic</option>\n        <option value=\"LV\">Latvia</option>\n        <option value=\"LB\">Lebanon</option>\n        <option value=\"LS\">Lesotho</option>\n        <option value=\"LR\">Liberia</option>\n        <option value=\"LY\">Libya</option>\n        <option value=\"LI\">Liechtenstein</option>\n        <option value=\"LT\">Lithuania</option>\n        <option value=\"LU\">Luxembourg</option>\n        <option value=\"MO\">Macao</option>\n        <option value=\"MK\">Macedonia, the former Yugoslav Republic of</option>\n        <option value=\"MG\">Madagascar</option>\n        <option value=\"MW\">Malawi</option>\n        <option value=\"MY\">Malaysia</option>\n        <option value=\"MV\">Maldives</option>\n        <option value=\"ML\">Mali</option>\n        <option value=\"MT\">Malta</option>\n        <option value=\"MH\">Marshall Islands</option>\n        <option value=\"MQ\">Martinique</option>\n        <option value=\"MR\">Mauritania</option>\n        <option value=\"MU\">Mauritius</option>\n        <option value=\"YT\">Mayotte</option>\n        <option value=\"MX\">Mexico</option>\n        <option value=\"FM\">Micronesia, Federated States of</option>\n        <option value=\"MD\">Moldova, Republic of</option>\n        <option value=\"MC\">Monaco</option>\n        <option value=\"MN\">Mongolia</option>\n        <option value=\"ME\">Montenegro</option>\n        <option value=\"MS\">Montserrat</option>\n        <option value=\"MA\">Morocco</option>\n        <option value=\"MZ\">Mozambique</option>\n        <option value=\"MM\">Myanmar</option>\n        <option value=\"NA\">Namibia</option>\n        <option value=\"NR\">Nauru</option>\n        <option value=\"NP\">Nepal</option>\n        <option value=\"NL\">Netherlands</option>\n        <option value=\"NC\">New Caledonia</option>\n        <option value=\"NZ\">New Zealand</option>\n        <option value=\"NI\">Nicaragua</option>\n        <option value=\"NE\">Niger</option>\n        <option value=\"NG\">Nigeria</option>\n        <option value=\"NU\">Niue</option>\n        <option value=\"NF\">Norfolk Island</option>\n        <option value=\"MP\">Northern Mariana Islands</option>\n        <option value=\"NO\">Norway</option>\n        <option value=\"OM\">Oman</option>\n        <option value=\"PK\">Pakistan</option>\n        <option value=\"PW\">Palau</option>\n        <option value=\"PS\">Palestinian Territory, Occupied</option>\n        <option value=\"PA\">Panama</option>\n        <option value=\"PG\">Papua New Guinea</option>\n        <option value=\"PY\">Paraguay</option>\n        <option value=\"PE\">Peru</option>\n        <option value=\"PH\">Philippines</option>\n        <option value=\"PN\">Pitcairn</option>\n        <option value=\"PL\">Poland</option>\n        <option value=\"PT\">Portugal</option>\n        <option value=\"PR\">Puerto Rico</option>\n        <option value=\"QA\">Qatar</option>\n        <option value=\"RE\">Réunion</option>\n        <option value=\"RO\">Romania</option>\n        <option value=\"RU\">Russian Federation</option>\n        <option value=\"RW\">Rwanda</option>\n        <option value=\"BL\">Saint Barthélemy</option>\n        <option value=\"SH\">Saint Helena, Ascension and Tristan da Cunha</option>\n        <option value=\"KN\">Saint Kitts and Nevis</option>\n        <option value=\"LC\">Saint Lucia</option>\n        <option value=\"MF\">Saint Martin (French part)</option>\n        <option value=\"PM\">Saint Pierre and Miquelon</option>\n        <option value=\"VC\">Saint Vincent and the Grenadines</option>\n        <option value=\"WS\">Samoa</option>\n        <option value=\"SM\">San Marino</option>\n        <option value=\"ST\">Sao Tome and Principe</option>\n        <option value=\"SA\">Saudi Arabia</option>\n        <option value=\"SN\">Senegal</option>\n        <option value=\"RS\">Serbia</option>\n        <option value=\"SC\">Seychelles</option>\n        <option value=\"SL\">Sierra Leone</option>\n        <option value=\"SG\">Singapore</option>\n        <option value=\"SX\">Sint Maarten (Dutch part)</option>\n        <option value=\"SK\">Slovakia</option>\n        <option value=\"SI\">Slovenia</option>\n        <option value=\"SB\">Solomon Islands</option>\n        <option value=\"SO\">Somalia</option>\n        <option value=\"ZA\">South Africa</option>\n        <option value=\"GS\">South Georgia and the South Sandwich Islands</option>\n        <option value=\"SS\">South Sudan</option>\n        <option value=\"ES\">Spain</option>\n        <option value=\"LK\">Sri Lanka</option>\n        <option value=\"SD\">Sudan</option>\n        <option value=\"SR\">Suriname</option>\n        <option value=\"SJ\">Svalbard and Jan Mayen</option>\n        <option value=\"SZ\">Swaziland</option>\n        <option value=\"SE\">Sweden</option>\n        <option value=\"CH\">Switzerland</option>\n        <option value=\"SY\">Syrian Arab Republic</option>\n        <option value=\"TW\">Taiwan</option>\n        <option value=\"TJ\">Tajikistan</option>\n        <option value=\"TZ\">Tanzania, United Republic of</option>\n        <option value=\"TH\">Thailand</option>\n        <option value=\"TL\">Timor-Leste</option>\n        <option value=\"TG\">Togo</option>\n        <option value=\"TK\">Tokelau</option>\n        <option value=\"TO\">Tonga</option>\n        <option value=\"TT\">Trinidad and Tobago</option>\n        <option value=\"TN\">Tunisia</option>\n        <option value=\"TR\">Turkey</option>\n        <option value=\"TM\">Turkmenistan</option>\n        <option value=\"TC\">Turks and Caicos Islands</option>\n        <option value=\"TV\">Tuvalu</option>\n        <option value=\"UG\">Uganda</option>\n        <option value=\"UA\">Ukraine</option>\n        <option value=\"AE\">United Arab Emirates</option>\n        <option value=\"UM\">United States Minor Outlying Islands</option>\n        <option value=\"UY\">Uruguay</option>\n        <option value=\"UZ\">Uzbekistan</option>\n        <option value=\"VU\">Vanuatu</option>\n        <option value=\"VE\">Venezuela, Bolivarian Republic of</option>\n        <option value=\"VN\">Viet Nam</option>\n        <option value=\"VG\">Virgin Islands, British</option>\n        <option value=\"VI\">Virgin Islands, U.S.</option>\n        <option value=\"WF\">Wallis and Futuna</option>\n        <option value=\"EH\">Western Sahara</option>\n        <option value=\"YE\">Yemen</option>\n        <option value=\"ZM\">Zambia</option>\n        <option value=\"ZW\">Zimbabwe</option>\n      </select>\n    </div>\n  </div>\n  <div [ngClass]=\"trialFlow ? 'col-5' : 'col-3'\">\n    <div class=\"form-group\">\n      <label for=\"addressPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n      <input\n        id=\"addressPostalCode\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressPostalCode\"\n        [(ngModel)]=\"taxInfo.postalCode\"\n        [required]=\"taxInfo.country === 'US'\"\n        autocomplete=\"postal-code\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\" *ngIf=\"organizationId && taxInfo.country !== 'US'\">\n    <div class=\"form-group form-check\">\n      <input\n        class=\"form-check-input\"\n        id=\"addressIncludeTaxId\"\n        name=\"addressIncludeTaxId\"\n        type=\"checkbox\"\n        [(ngModel)]=\"taxInfo.includeTaxId\"\n      />\n      <label class=\"form-check-label\" for=\"addressIncludeTaxId\">{{ \"includeVAT\" | i18n }}</label>\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"taxId\">{{ \"taxIdNumber\" | i18n }}</label>\n      <input id=\"taxId\" class=\"form-control\" type=\"text\" name=\"taxId\" [(ngModel)]=\"taxInfo.taxId\" />\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine1\">{{ \"address1\" | i18n }}</label>\n      <input\n        id=\"addressLine1\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine1\"\n        [(ngModel)]=\"taxInfo.line1\"\n        autocomplete=\"address-line1\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine2\">{{ \"address2\" | i18n }}</label>\n      <input\n        id=\"addressLine2\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine2\"\n        [(ngModel)]=\"taxInfo.line2\"\n        autocomplete=\"address-line2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressCity\">{{ \"cityTown\" | i18n }}</label>\n      <input\n        id=\"addressCity\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressCity\"\n        [(ngModel)]=\"taxInfo.city\"\n        autocomplete=\"address-level2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressState\">{{ \"stateProvince\" | i18n }}</label>\n      <input\n        id=\"addressState\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressState\"\n        [(ngModel)]=\"taxInfo.state\"\n        autocomplete=\"address-level1\"\n      />\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationTaxInfoUpdateRequest } from \"@bitwarden/common/models/request/organization-tax-info-update.request\";\nimport { TaxInfoUpdateRequest } from \"@bitwarden/common/models/request/tax-info-update.request\";\nimport { TaxInfoResponse } from \"@bitwarden/common/models/response/tax-info.response\";\nimport { TaxRateResponse } from \"@bitwarden/common/models/response/tax-rate.response\";\n\ntype TaxInfoView = Omit<TaxInfoResponse, \"taxIdType\"> & {\n  includeTaxId: boolean;\n  [key: string]: unknown;\n};\n\n@Component({\n  selector: \"app-tax-info\",\n  templateUrl: \"tax-info.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TaxInfoComponent {\n  @Input() trialFlow = false;\n  @Output() onCountryChanged = new EventEmitter();\n\n  loading = true;\n  organizationId: string;\n  taxInfo: TaxInfoView = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  taxRates: TaxRateResponse[];\n\n  private pristine: TaxInfoView = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      if (this.organizationId) {\n        try {\n          const taxInfo = await this.organizationApiService.getTaxInfo(this.organizationId);\n          if (taxInfo) {\n            this.taxInfo.taxId = taxInfo.taxId;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.line1 = taxInfo.line1;\n            this.taxInfo.line2 = taxInfo.line2;\n            this.taxInfo.city = taxInfo.city;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n            this.taxInfo.includeTaxId =\n              this.taxInfo.country !== \"US\" &&\n              (!!taxInfo.taxId ||\n                !!taxInfo.line1 ||\n                !!taxInfo.line2 ||\n                !!taxInfo.city ||\n                !!taxInfo.state);\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      } else {\n        try {\n          const taxInfo = await this.apiService.getTaxInfo();\n          if (taxInfo) {\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.pristine = Object.assign({}, this.taxInfo);\n      // If not the default (US) then trigger onCountryChanged\n      if (this.taxInfo.country !== \"US\") {\n        this.onCountryChanged.emit();\n      }\n    });\n\n    try {\n      const taxRates = await this.apiService.getTaxRates();\n      if (taxRates) {\n        this.taxRates = taxRates.data;\n      }\n    } catch (e) {\n      this.logService.error(e);\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  get taxRate() {\n    if (this.taxRates != null) {\n      const localTaxRate = this.taxRates.find(\n        (x) => x.country === this.taxInfo.country && x.postalCode === this.taxInfo.postalCode\n      );\n      return localTaxRate?.rate ?? null;\n    }\n  }\n\n  getTaxInfoRequest(): TaxInfoUpdateRequest {\n    if (this.organizationId) {\n      const request = new OrganizationTaxInfoUpdateRequest();\n      request.taxId = this.taxInfo.taxId;\n      request.state = this.taxInfo.state;\n      request.line1 = this.taxInfo.line1;\n      request.line2 = this.taxInfo.line2;\n      request.city = this.taxInfo.city;\n      request.state = this.taxInfo.state;\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    } else {\n      const request = new TaxInfoUpdateRequest();\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    }\n  }\n\n  submitTaxInfo(): Promise<any> {\n    if (!this.hasChanged()) {\n      return new Promise<void>((resolve) => {\n        resolve();\n      });\n    }\n    const request = this.getTaxInfoRequest();\n    return this.organizationId\n      ? this.organizationApiService.updateTaxInfo(\n          this.organizationId,\n          request as OrganizationTaxInfoUpdateRequest\n        )\n      : this.apiService.putTaxInfo(request);\n  }\n\n  changeCountry() {\n    if (this.taxInfo.country === \"US\") {\n      this.taxInfo.includeTaxId = false;\n      this.taxInfo.taxId = null;\n      this.taxInfo.line1 = null;\n      this.taxInfo.line2 = null;\n      this.taxInfo.city = null;\n      this.taxInfo.state = null;\n    }\n    this.onCountryChanged.emit();\n  }\n\n  private hasChanged(): boolean {\n    for (const key in this.taxInfo) {\n      // eslint-disable-next-line\n      if (this.pristine.hasOwnProperty(key) && this.pristine[key] !== this.taxInfo[key]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class TwoFactorProviderRequest extends SecretVerificationRequest {\n  type: TwoFactorProviderType;\n}\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\nimport { TwoFactorProviderRequest } from \"@bitwarden/common/models/request/two-factor-provider.request\";\nimport { AuthResponseBase } from \"@bitwarden/common/types/authResponse\";\n\n@Directive()\nexport abstract class TwoFactorBaseComponent {\n  @Output() onUpdated = new EventEmitter<boolean>();\n\n  type: TwoFactorProviderType;\n  organizationId: string;\n  twoFactorProviderType = TwoFactorProviderType;\n  enabled = false;\n  authed = false;\n\n  protected hashedSecret: string;\n  protected verificationType: VerificationType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected userVerificationService: UserVerificationService\n  ) {}\n\n  protected auth(authResponse: AuthResponseBase) {\n    this.hashedSecret = authResponse.secret;\n    this.verificationType = authResponse.verificationType;\n    this.authed = true;\n  }\n\n  protected async enable(enableFunction: () => Promise<void>) {\n    try {\n      await enableFunction();\n      this.onUpdated.emit(true);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async disable(promise: Promise<unknown>) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"twoStepDisableDesc\"),\n      this.i18nService.t(\"disable\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      const request = await this.buildRequestModel(TwoFactorProviderRequest);\n      request.type = this.type;\n      if (this.organizationId != null) {\n        promise = this.apiService.putTwoFactorOrganizationDisable(this.organizationId, request);\n      } else {\n        promise = this.apiService.putTwoFactorDisable(request);\n      }\n      await promise;\n      this.enabled = false;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"twoStepDisabled\"));\n      this.onUpdated.emit(false);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async buildRequestModel<T extends SecretVerificationRequest>(\n    requestClass: new () => T\n  ) {\n    return this.userVerificationService.buildRequest(\n      {\n        secret: this.hashedSecret,\n        type: this.verificationType,\n      },\n      requestClass,\n      true\n    );\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorDuoRequest extends SecretVerificationRequest {\n  integrationKey: string;\n  secretKey: string;\n  host: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faDuoTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faDuoTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>Duo</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($any($event))\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <strong>{{ \"twoFactorDuoIntegrationKey\" | i18n }}:</strong> {{ ikey }}\n            <br />\n            <strong>{{ \"twoFactorDuoSecretKey\" | i18n }}:</strong> {{ skey }}\n            <br />\n            <strong>{{ \"twoFactorDuoApiHostname\" | i18n }}:</strong> {{ host }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <p>{{ \"twoFactorDuoDesc\" | i18n }}</p>\n            <div class=\"form-group\">\n              <label for=\"ikey\">{{ \"twoFactorDuoIntegrationKey\" | i18n }}</label>\n              <input\n                id=\"ikey\"\n                type=\"text\"\n                name=\"IntegrationKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"ikey\"\n                required\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"skey\">{{ \"twoFactorDuoSecretKey\" | i18n }}</label>\n              <input\n                id=\"skey\"\n                type=\"password\"\n                name=\"SecretKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"skey\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"host\">{{ \"twoFactorDuoApiHostname\" | i18n }}</label>\n              <input\n                id=\"host\"\n                type=\"text\"\n                name=\"Host\"\n                class=\"form-control\"\n                [(ngModel)]=\"host\"\n                placeholder=\"{{ 'ex' | i18n }} api-xxxxxxxx.duosecurity.com\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorDuoRequest } from \"@bitwarden/common/models/request/update-two-factor-duo.request\";\nimport { TwoFactorDuoResponse } from \"@bitwarden/common/models/response/two-factor-duo.response\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-duo\",\n  templateUrl: \"two-factor-duo.component.html\",\n})\nexport class TwoFactorDuoComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Duo;\n  ikey: string;\n  skey: string;\n  host: string;\n  formPromise: Promise<TwoFactorDuoResponse>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorDuoResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorDuoRequest);\n    request.integrationKey = this.ikey;\n    request.secretKey = this.skey;\n    request.host = this.host;\n\n    return super.enable(async () => {\n      if (this.organizationId != null) {\n        this.formPromise = this.apiService.putTwoFactorOrganizationDuo(\n          this.organizationId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.putTwoFactorDuo(request);\n      }\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private processResponse(response: TwoFactorDuoResponse) {\n    this.ikey = response.integrationKey;\n    this.skey = response.secretKey;\n    this.host = response.host;\n    this.enabled = response.enabled;\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorAuthenticatorRequest extends SecretVerificationRequest {\n  token: string;\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faAuthenticatorTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faAuthenticatorTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"authenticatorAppTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($any($event))\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorDesc\" | i18n }}</p>\n            <p>\n              <strong>1. {{ \"twoStepAuthenticatorDownloadApp\" | i18n }}</strong>\n            </p>\n          </ng-container>\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              <p>{{ \"twoStepLoginProviderEnabled\" | i18n }}</p>\n              {{ \"twoStepAuthenticatorReaddDesc\" | i18n }}\n            </app-callout>\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorNeedApp\" | i18n }}</p>\n          </ng-container>\n          <ul class=\"bwi-ul\">\n            <li>\n              <i class=\"bwi bwi-li bwi-apple\"></i>{{ \"iosDevices\" | i18n }}:\n              <a\n                href=\"https://itunes.apple.com/us/app/authy/id494168017?mt=8\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-android\"></i>{{ \"androidDevices\" | i18n }}:\n              <a\n                href=\"https://play.google.com/store/apps/details?id=com.authy.authy\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-windows\"></i>{{ \"windowsDevices\" | i18n }}:\n              <a\n                href=\"https://www.microsoft.com/p/authenticator/9wzdncrfj3rj\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Microsoft Authenticator</a\n              >\n            </li>\n          </ul>\n          <p>{{ \"twoStepAuthenticatorAppsRecommended\" | i18n }}</p>\n          <p *ngIf=\"!enabled\">\n            <strong>2. {{ \"twoStepAuthenticatorScanCode\" | i18n }}</strong>\n          </p>\n          <hr *ngIf=\"enabled\" />\n          <p class=\"text-center\" [ngClass]=\"{ 'mb-0': enabled }\">\n            <canvas id=\"qr\"></canvas><br />\n            <code appA11yTitle=\"{{ 'key' | i18n }}\">{{ key }}</code>\n          </p>\n          <ng-container *ngIf=\"!enabled\">\n            <label for=\"token\">3. {{ \"twoStepAuthenticatorEnterCode\" | i18n }}</label>\n            <input\n              id=\"token\"\n              type=\"text\"\n              name=\"Token\"\n              class=\"form-control\"\n              [(ngModel)]=\"token\"\n              required\n              appInputVerbatim\n            />\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"@bitwarden/common/models/request/update-two-factor-authenticator.request\";\nimport { TwoFactorAuthenticatorResponse } from \"@bitwarden/common/models/response/two-factor-authenticator.response\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n// NOTE: There are additional options available but these are just the ones we are current using.\n// See: https://github.com/neocotic/qrious#examples\ninterface QRiousOptions {\n  element: HTMLElement;\n  value: string;\n  size: number;\n}\n\ndeclare global {\n  interface Window {\n    QRious: new (options: QRiousOptions) => unknown;\n  }\n}\n\n@Component({\n  selector: \"app-two-factor-authenticator\",\n  templateUrl: \"two-factor-authenticator.component.html\",\n})\nexport class TwoFactorAuthenticatorComponent\n  extends TwoFactorBaseComponent\n  implements OnInit, OnDestroy\n{\n  type = TwoFactorProviderType.Authenticator;\n  key: string;\n  token: string;\n  formPromise: Promise<TwoFactorAuthenticatorResponse>;\n\n  private qrScript: HTMLScriptElement;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    userVerificationService: UserVerificationService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n    this.qrScript = window.document.createElement(\"script\");\n    this.qrScript.src = \"scripts/qrious.min.js\";\n    this.qrScript.async = true;\n  }\n\n  ngOnInit() {\n    window.document.body.appendChild(this.qrScript);\n  }\n\n  ngOnDestroy() {\n    window.document.body.removeChild(this.qrScript);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorAuthenticatorResponse>) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorAuthenticatorRequest);\n    request.token = this.token;\n    request.key = this.key;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorAuthenticator(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorAuthenticatorResponse) {\n    this.token = null;\n    this.enabled = response.enabled;\n    this.key = response.key;\n    const email = await this.stateService.getEmail();\n    window.setTimeout(() => {\n      new window.QRious({\n        element: document.getElementById(\"qr\"),\n        value:\n          \"otpauth://totp/Bitwarden:\" +\n          encodeURIComponent(email) +\n          \"?secret=\" +\n          encodeURIComponent(this.key) +\n          \"&issuer=Bitwarden\",\n        size: 160,\n      });\n    }, 100);\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorEmailRequest extends SecretVerificationRequest {\n  token: string;\n  email: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faEmailTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faEmailTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"emailTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($any($event))\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <strong>{{ \"email\" | i18n }}:</strong> {{ email }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <p class=\"d-flex\">\n              <span class=\"mr-3\">{{ \"twoFactorEmailDesc\" | i18n }}</span>\n              <img class=\"float-right ml-auto mfaType1\" alt=\"Email logo\" />\n            </p>\n            <div class=\"form-group\">\n              <label for=\"email\">1. {{ \"twoFactorEmailEnterEmail\" | i18n }}</label>\n              <input\n                id=\"email\"\n                type=\"text\"\n                name=\"Email\"\n                class=\"form-control\"\n                [(ngModel)]=\"email\"\n                required\n                inputmode=\"email\"\n                appInputVerbatim=\"false\"\n              />\n            </div>\n            <div class=\"mb-3 d-flex\">\n              <button\n                #sendBtn\n                type=\"button\"\n                class=\"btn btn-outline-primary btn-sm btn-submit align-self-start\"\n                (click)=\"sendEmail()\"\n                [appApiAction]=\"emailPromise\"\n                [disabled]=\"$any(sendBtn).loading\"\n              >\n                <i\n                  class=\"bwi bwi-spinner bwi-spin\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span>{{ \"sendEmail\" | i18n }}</span>\n              </button>\n              <span class=\"text-success ml-3\" *ngIf=\"sentEmail\">\n                {{ \"verificationCodeEmailSent\" | i18n: sentEmail }}\n              </span>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"token\">2. {{ \"twoFactorEmailEnterCode\" | i18n }}</label>\n              <input\n                id=\"token\"\n                type=\"text\"\n                name=\"Token\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/models/request/two-factor-email.request\";\nimport { UpdateTwoFactorEmailRequest } from \"@bitwarden/common/models/request/update-two-factor-email.request\";\nimport { TwoFactorEmailResponse } from \"@bitwarden/common/models/response/two-factor-email.response\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-email\",\n  templateUrl: \"two-factor-email.component.html\",\n})\nexport class TwoFactorEmailComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Email;\n  email: string;\n  token: string;\n  sentEmail: string;\n  formPromise: Promise<TwoFactorEmailResponse>;\n  emailPromise: Promise<unknown>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorEmailResponse>) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  async sendEmail() {\n    try {\n      const request = await this.buildRequestModel(TwoFactorEmailRequest);\n      request.email = this.email;\n      this.emailPromise = this.apiService.postTwoFactorEmailSetup(request);\n      await this.emailPromise;\n      this.sentEmail = this.email;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorEmailRequest);\n    request.email = this.email;\n    request.token = this.token;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorEmail(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorEmailResponse) {\n    this.token = null;\n    this.email = response.email;\n    this.enabled = response.enabled;\n    if (!this.enabled && (this.email == null || this.email === \"\")) {\n      this.email = await this.stateService.getEmail();\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faRecoveryTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faRecoveryTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"recoveryCodeTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\">\n      </app-two-factor-verify>\n      <ng-container *ngIf=\"authed\">\n        <div class=\"modal-body text-center\">\n          <ng-container *ngIf=\"code\">\n            <p>{{ \"twoFactorRecoveryYourCode\" | i18n }}:</p>\n            <code class=\"text-lg\">{{ code }}</code>\n          </ng-container>\n          <ng-container *ngIf=\"!code\">\n            {{ \"twoFactorRecoveryNoCode\" | i18n }}\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"print()\" *ngIf=\"code\">\n            {{ \"printCode\" | i18n }}\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorRecoverResponse } from \"@bitwarden/common/models/response/two-factor-recover.response\";\n\n@Component({\n  selector: \"app-two-factor-recovery\",\n  templateUrl: \"two-factor-recovery.component.html\",\n})\nexport class TwoFactorRecoveryComponent {\n  type = -1;\n  code: string;\n  authed: boolean;\n  twoFactorProviderType = TwoFactorProviderType;\n\n  constructor(private i18nService: I18nService) {}\n\n  auth(authResponse: any) {\n    this.authed = true;\n    this.processResponse(authResponse.response);\n  }\n\n  print() {\n    const w = window.open();\n    w.document.write(\n      '<div style=\"font-size: 18px; text-align: center;\">' +\n        \"<p>\" +\n        this.i18nService.t(\"twoFactorRecoveryYourCode\") +\n        \":</p>\" +\n        \"<code style=\\\"font-family: Menlo, Monaco, Consolas, 'Courier New', monospace;\\\">\" +\n        this.code +\n        \"</code></div>\" +\n        '<p style=\"text-align: center;\">' +\n        new Date() +\n        \"</p>\"\n    );\n    w.onafterprint = () => w.close();\n    w.print();\n  }\n\n  private formatString(s: string) {\n    if (s == null) {\n      return null;\n    }\n    return s\n      .replace(/(.{4})/g, \"$1 \")\n      .trim()\n      .toUpperCase();\n  }\n\n  private processResponse(response: TwoFactorRecoverResponse) {\n    this.code = this.formatString(response.code);\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorWebAuthnDeleteRequest extends SecretVerificationRequest {\n  id: number;\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorWebAuthnRequest extends SecretVerificationRequest {\n  deviceResponse: PublicKeyCredential;\n  name: string;\n  id: number;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faU2fTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faU2fTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"webAuthnTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($any($event))\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorWebAuthnWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorWebAuthnSupportWeb\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right ml-5 mfaType7\" alt=\"FIDO2 WebAuthn logo'\" />\n          <ul class=\"bwi-ul\">\n            <li\n              *ngFor=\"let k of keys; let i = index\"\n              #removeKeyBtn\n              [appApiAction]=\"k.removePromise\"\n            >\n              <i class=\"bwi bwi-li bwi-key\"></i>\n              <strong *ngIf=\"!k.configured || !k.name\">{{ \"webAuthnkeyX\" | i18n: i + 1 }}</strong>\n              <strong *ngIf=\"k.configured && k.name\">{{ k.name }}</strong>\n              <ng-container *ngIf=\"k.configured && !$any(removeKeyBtn).loading\">\n                <ng-container *ngIf=\"k.migrated\">\n                  <span>{{ \"webAuthnMigrated\" | i18n }}</span>\n                </ng-container>\n              </ng-container>\n              <ng-container *ngIf=\"keysConfiguredCount > 1 && k.configured\">\n                <i\n                  class=\"bwi bwi-spin bwi-spinner text-muted bwi-fw\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  *ngIf=\"$any(removeKeyBtn).loading\"\n                  aria-hidden=\"true\"\n                ></i>\n                -\n                <a href=\"#\" appStopClick (click)=\"remove(k)\">{{ \"remove\" | i18n }}</a>\n              </ng-container>\n            </li>\n          </ul>\n          <hr />\n          <p>{{ \"twoFactorWebAuthnAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorU2fGiveName\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fPlugInReadKey\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fSaveForm\" | i18n }}</li>\n          </ol>\n          <div class=\"row\">\n            <div class=\"form-group col-6\">\n              <label for=\"name\">{{ \"name\" | i18n }}</label>\n              <input\n                id=\"name\"\n                type=\"text\"\n                name=\"Name\"\n                class=\"form-control\"\n                [(ngModel)]=\"name\"\n                [disabled]=\"!keyIdAvailable\"\n              />\n            </div>\n          </div>\n          <button\n            type=\"button\"\n            (click)=\"readKey()\"\n            class=\"btn btn-outline-secondary mr-2\"\n            [disabled]=\"$any(readKeyBtn).loading || webAuthnListening || !keyIdAvailable\"\n            #readKeyBtn\n            [appApiAction]=\"challengePromise\"\n          >\n            {{ \"readKey\" | i18n }}\n          </button>\n          <ng-container *ngIf=\"$any(readKeyBtn).loading\">\n            <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n          </ng-container>\n          <ng-container *ngIf=\"!$any(readKeyBtn).loading\">\n            <ng-container *ngIf=\"webAuthnListening\">\n              <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fWaiting\" | i18n }}...\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnResponse\">\n              <i class=\"bwi bwi-check-circle text-success\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fClickSave\" | i18n }}\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnError\">\n              <i class=\"bwi bwi-exclamation-triangle text-danger\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fProblemReadingTryAgain\" | i18n }}\n            </ng-container>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            [disabled]=\"form.loading || !webAuthnResponse\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              *ngIf=\"form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!form.loading\">{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [disabled]=\"$any(disableBtn).loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, NgZone } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"@bitwarden/common/models/request/update-two-factor-web-authn-delete.request\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"@bitwarden/common/models/request/update-two-factor-web-authn.request\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"@bitwarden/common/models/response/two-factor-web-authn.response\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\ninterface Key {\n  id: number;\n  name: string;\n  configured: boolean;\n  migrated?: boolean;\n  removePromise: Promise<TwoFactorWebAuthnResponse> | null;\n}\n\n@Component({\n  selector: \"app-two-factor-webauthn\",\n  templateUrl: \"two-factor-webauthn.component.html\",\n})\nexport class TwoFactorWebAuthnComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.WebAuthn;\n  name: string;\n  keys: Key[];\n  keyIdAvailable: number = null;\n  keysConfiguredCount = 0;\n  webAuthnError: boolean;\n  webAuthnListening: boolean;\n  webAuthnResponse: PublicKeyCredential;\n  challengePromise: Promise<ChallengeResponse>;\n  formPromise: Promise<TwoFactorWebAuthnResponse>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorWebAuthnResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    if (this.webAuthnResponse == null || this.keyIdAvailable == null) {\n      // Should never happen.\n      return Promise.reject();\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnRequest);\n    request.deviceResponse = this.webAuthnResponse;\n    request.id = this.keyIdAvailable;\n    request.name = this.name;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorWebAuthn(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  disable() {\n    return super.disable(this.formPromise);\n  }\n\n  async remove(key: Key) {\n    if (this.keysConfiguredCount <= 1 || key.removePromise != null) {\n      return;\n    }\n    const name = key.name != null ? key.name : this.i18nService.t(\"webAuthnkeyX\", key.id as any);\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeU2fConfirmation\"),\n      name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnDeleteRequest);\n    request.id = key.id;\n    try {\n      key.removePromise = this.apiService.deleteTwoFactorWebAuthn(request);\n      const response = await key.removePromise;\n      key.removePromise = null;\n      await this.processResponse(response);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async readKey() {\n    if (this.keyIdAvailable == null) {\n      return;\n    }\n    const request = await this.buildRequestModel(SecretVerificationRequest);\n    try {\n      this.challengePromise = this.apiService.getTwoFactorWebAuthnChallenge(request);\n      const challenge = await this.challengePromise;\n      this.readDevice(challenge);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private readDevice(webAuthnChallenge: ChallengeResponse) {\n    // eslint-disable-next-line\n    console.log(\"listening for key...\");\n    this.resetWebAuthn(true);\n\n    navigator.credentials\n      .create({\n        publicKey: webAuthnChallenge,\n      })\n      .then((data: PublicKeyCredential) => {\n        this.ngZone.run(() => {\n          this.webAuthnListening = false;\n          this.webAuthnResponse = data;\n        });\n      })\n      .catch((err) => {\n        // eslint-disable-next-line\n        console.error(err);\n        this.resetWebAuthn(false);\n        // TODO: Should we display the actual error?\n        this.webAuthnError = true;\n      });\n  }\n\n  private resetWebAuthn(listening = false) {\n    this.webAuthnResponse = null;\n    this.webAuthnError = false;\n    this.webAuthnListening = listening;\n  }\n\n  private processResponse(response: TwoFactorWebAuthnResponse) {\n    this.resetWebAuthn();\n    this.keys = [];\n    this.keyIdAvailable = null;\n    this.name = null;\n    this.keysConfiguredCount = 0;\n    for (let i = 1; i <= 5; i++) {\n      if (response.keys != null) {\n        const key = response.keys.filter((k) => k.id === i);\n        if (key.length > 0) {\n          this.keysConfiguredCount++;\n          this.keys.push({\n            id: i,\n            name: key[0].name,\n            configured: true,\n            migrated: key[0].migrated,\n            removePromise: null,\n          });\n          continue;\n        }\n      }\n      this.keys.push({ id: i, name: null, configured: false, removePromise: null });\n      if (this.keyIdAvailable == null) {\n        this.keyIdAvailable = i;\n      }\n    }\n    this.enabled = response.enabled;\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorYubioOtpRequest extends SecretVerificationRequest {\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faYubiKeyTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faYubiKeyTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>YubiKey</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($any($event))\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorYubikeyWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorYubikeySupportUsb\" | i18n }}</li>\n              <li>{{ \"twoFactorYubikeySupportMobile\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right mfaType3\" alt=\"YubiKey OTP security key logo\" />\n          <p>{{ \"twoFactorYubikeyAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorYubikeyPlugIn\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySelectKey\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeyTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySaveForm\" | i18n }}</li>\n          </ol>\n          <hr />\n          <div class=\"row\">\n            <div class=\"form-group col-6\" *ngFor=\"let k of keys; let i = index\">\n              <label for=\"key{{ i + 1 }}\">{{ \"yubikeyX\" | i18n: i + 1 }}</label>\n              <input\n                id=\"key{{ i + 1 }}\"\n                type=\"password\"\n                name=\"Key{{ i + 1 }}\"\n                class=\"form-control\"\n                [(ngModel)]=\"k.key\"\n                *ngIf=\"!k.existingKey\"\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <div class=\"d-flex\" *ngIf=\"k.existingKey\">\n                <span class=\"mr-2\">{{ k.existingKey }}</span>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-link text-danger ml-auto\"\n                  (click)=\"remove(k)\"\n                  appA11yTitle=\"{{ 'remove' | i18n }}\"\n                >\n                  <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <strong class=\"d-block mb-2\">{{ \"nfcSupport\" | i18n }}</strong>\n          <div class=\"form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"nfc\" name=\"Nfc\" [(ngModel)]=\"nfc\" />\n            <label class=\"form-check-label\" for=\"nfc\">{{\n              \"twoFactorYubikeySupportsNfc\" | i18n\n            }}</label>\n          </div>\n          <small class=\"form-text text-muted\">{{ \"twoFactorYubikeySupportsNfcDesc\" | i18n }}</small>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [appApiAction]=\"disablePromise\"\n            [disabled]=\"$any(disableBtn).loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"@bitwarden/common/models/request/update-two-factor-yubio-otp.request\";\nimport { TwoFactorYubiKeyResponse } from \"@bitwarden/common/models/response/two-factor-yubi-key.response\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\ninterface Key {\n  key: string;\n  existingKey: string;\n}\n\n@Component({\n  selector: \"app-two-factor-yubikey\",\n  templateUrl: \"two-factor-yubikey.component.html\",\n})\nexport class TwoFactorYubiKeyComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Yubikey;\n  keys: Key[];\n  nfc = false;\n\n  formPromise: Promise<TwoFactorYubiKeyResponse>;\n  disablePromise: Promise<unknown>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorYubiKeyResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    const request = await this.buildRequestModel(UpdateTwoFactorYubioOtpRequest);\n    request.key1 = this.keys != null && this.keys.length > 0 ? this.keys[0].key : null;\n    request.key2 = this.keys != null && this.keys.length > 1 ? this.keys[1].key : null;\n    request.key3 = this.keys != null && this.keys.length > 2 ? this.keys[2].key : null;\n    request.key4 = this.keys != null && this.keys.length > 3 ? this.keys[3].key : null;\n    request.key5 = this.keys != null && this.keys.length > 4 ? this.keys[4].key : null;\n    request.nfc = this.nfc;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorYubiKey(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"yubikeysUpdated\"));\n    });\n  }\n\n  disable() {\n    return super.disable(this.disablePromise);\n  }\n\n  remove(key: Key) {\n    key.existingKey = null;\n    key.key = null;\n  }\n\n  private processResponse(response: TwoFactorYubiKeyResponse) {\n    this.enabled = response.enabled;\n    this.keys = [\n      { key: response.key1, existingKey: this.padRight(response.key1) },\n      { key: response.key2, existingKey: this.padRight(response.key2) },\n      { key: response.key3, existingKey: this.padRight(response.key3) },\n      { key: response.key4, existingKey: this.padRight(response.key4) },\n      { key: response.key5, existingKey: this.padRight(response.key5) },\n    ];\n    this.nfc = response.nfc || !response.enabled;\n  }\n\n  private padRight(str: string, character = \"•\", size = 44) {\n    if (str == null || character == null || str.length >= size) {\n      return str;\n    }\n    const max = (size - str.length) / character.length;\n    for (let i = 0; i < max; i++) {\n      str += character;\n    }\n    return str;\n  }\n}\n","import { Component, OnDestroy, OnInit, Type, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { TwoFactorProviders } from \"@bitwarden/common/services/twoFactor.service\";\n\nimport { TwoFactorAuthenticatorComponent } from \"./two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"./two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"./two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"./two-factor-recovery.component\";\nimport { TwoFactorWebAuthnComponent } from \"./two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"./two-factor-yubikey.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"two-factor-setup.component.html\",\n})\nexport class TwoFactorSetupComponent implements OnInit, OnDestroy {\n  @ViewChild(\"recoveryTemplate\", { read: ViewContainerRef, static: true })\n  recoveryModalRef: ViewContainerRef;\n  @ViewChild(\"authenticatorTemplate\", { read: ViewContainerRef, static: true })\n  authenticatorModalRef: ViewContainerRef;\n  @ViewChild(\"yubikeyTemplate\", { read: ViewContainerRef, static: true })\n  yubikeyModalRef: ViewContainerRef;\n  @ViewChild(\"duoTemplate\", { read: ViewContainerRef, static: true }) duoModalRef: ViewContainerRef;\n  @ViewChild(\"emailTemplate\", { read: ViewContainerRef, static: true })\n  emailModalRef: ViewContainerRef;\n  @ViewChild(\"webAuthnTemplate\", { read: ViewContainerRef, static: true })\n  webAuthnModalRef: ViewContainerRef;\n\n  organizationId: string;\n  providers: any[] = [];\n  canAccessPremium: boolean;\n  showPolicyWarning = false;\n  loading = true;\n  modal: ModalRef;\n  formPromise: Promise<any>;\n\n  private destroy$ = new Subject<void>();\n  private twoFactorAuthPolicyAppliesToActiveUser: boolean;\n\n  constructor(\n    protected apiService: ApiService,\n    protected modalService: ModalService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n\n    for (const key in TwoFactorProviders) {\n      // eslint-disable-next-line\n      if (!TwoFactorProviders.hasOwnProperty(key)) {\n        continue;\n      }\n\n      const p = (TwoFactorProviders as any)[key];\n      if (this.filterProvider(p.type)) {\n        continue;\n      }\n\n      this.providers.push({\n        type: p.type,\n        name: p.name,\n        description: p.description,\n        enabled: false,\n        premium: p.premium,\n        sort: p.sort,\n      });\n    }\n\n    this.providers.sort((a: any, b: any) => a.sort - b.sort);\n\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.TwoFactorAuthentication)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.twoFactorAuthPolicyAppliesToActiveUser = policyAppliesToActiveUser;\n      });\n\n    await this.load();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load() {\n    this.loading = true;\n    const providerList = await this.getTwoFactorProviders();\n    providerList.data.forEach((p) => {\n      this.providers.forEach((p2) => {\n        if (p.type === p2.type) {\n          p2.enabled = p.enabled;\n        }\n      });\n    });\n    this.evaluatePolicies();\n    this.loading = false;\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.Authenticator: {\n        const authComp = await this.openModal(\n          this.authenticatorModalRef,\n          TwoFactorAuthenticatorComponent\n        );\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        authComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Authenticator);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Yubikey: {\n        const yubiComp = await this.openModal(this.yubikeyModalRef, TwoFactorYubiKeyComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        yubiComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Yubikey);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Duo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Duo);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Email: {\n        const emailComp = await this.openModal(this.emailModalRef, TwoFactorEmailComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        emailComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Email);\n        });\n        break;\n      }\n      case TwoFactorProviderType.WebAuthn: {\n        const webAuthnComp = await this.openModal(\n          this.webAuthnModalRef,\n          TwoFactorWebAuthnComponent\n        );\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        webAuthnComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.WebAuthn);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  recoveryCode() {\n    this.openModal(this.recoveryModalRef, TwoFactorRecoveryComponent);\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorProviders();\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type === TwoFactorProviderType.OrganizationDuo;\n  }\n\n  protected async openModal<T>(ref: ViewContainerRef, type: Type<T>): Promise<T> {\n    const [modal, childComponent] = await this.modalService.openViewRef(type, ref);\n    this.modal = modal;\n\n    return childComponent;\n  }\n\n  protected updateStatus(enabled: boolean, type: TwoFactorProviderType) {\n    if (!enabled && this.modal != null) {\n      this.modal.close();\n    }\n    this.providers.forEach((p) => {\n      if (p.type === type) {\n        p.enabled = enabled;\n      }\n    });\n    this.evaluatePolicies();\n  }\n\n  private async evaluatePolicies() {\n    if (this.organizationId == null && this.providers.filter((p) => p.enabled).length === 1) {\n      this.showPolicyWarning = this.twoFactorAuthPolicyAppliesToActiveUser;\n    } else {\n      this.showPolicyWarning = false;\n    }\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/enums/twoFactorProviderType\";\nimport { VerificationType } from \"@bitwarden/common/enums/verificationType\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/models/request/secret-verification.request\";\nimport { AuthResponse } from \"@bitwarden/common/types/authResponse\";\nimport { TwoFactorResponse } from \"@bitwarden/common/types/twoFactorResponse\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-two-factor-verify\",\n  templateUrl: \"two-factor-verify.component.html\",\n})\nexport class TwoFactorVerifyComponent {\n  @Input() type: TwoFactorProviderType;\n  @Input() organizationId: string;\n  @Output() onAuthed = new EventEmitter<AuthResponse<TwoFactorResponse>>();\n\n  secret: Verification;\n  formPromise: Promise<TwoFactorResponse>;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async submit() {\n    let hashedSecret: string;\n\n    try {\n      this.formPromise = this.userVerificationService.buildRequest(this.secret).then((request) => {\n        hashedSecret =\n          this.secret.type === VerificationType.MasterPassword\n            ? request.masterPasswordHash\n            : request.otp;\n        return this.apiCall(request);\n      });\n\n      const response = await this.formPromise;\n      this.onAuthed.emit({\n        response: response,\n        secret: hashedSecret,\n        verificationType: this.secret.type,\n      });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private apiCall(request: SecretVerificationRequest): Promise<TwoFactorResponse> {\n    switch (this.type) {\n      case -1 as TwoFactorProviderType:\n        return this.apiService.getTwoFactorRecover(request);\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        if (this.organizationId != null) {\n          return this.apiService.getTwoFactorOrganizationDuo(this.organizationId, request);\n        } else {\n          return this.apiService.getTwoFactorDuo(request);\n        }\n      case TwoFactorProviderType.Email:\n        return this.apiService.getTwoFactorEmail(request);\n      case TwoFactorProviderType.WebAuthn:\n        return this.apiService.getTwoFactorWebAuthn(request);\n      case TwoFactorProviderType.Authenticator:\n        return this.apiService.getTwoFactorAuthenticator(request);\n      case TwoFactorProviderType.Yubikey:\n        return this.apiService.getTwoFactorYubiKey(request);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"modal-body\">\n    <p>{{ \"twoStepLoginAuthDesc\" | i18n }}</p>\n    <app-user-verification [(ngModel)]=\"secret\" ngDefaultControl name=\"secret\">\n    </app-user-verification>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"continue\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n      {{ \"close\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-update-license\",\n  templateUrl: \"update-license.component.html\",\n})\nexport class UpdateLicenseComponent {\n  @Input() organizationId: string;\n  @Output() onUpdated = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    try {\n      const fd = new FormData();\n      fd.append(\"license\", files[0]);\n\n      let updatePromise: Promise<void | unknown> = null;\n      if (this.organizationId == null) {\n        updatePromise = this.apiService.postAccountLicense(fd);\n      } else {\n        updatePromise = this.organizationApiService.updateLicense(this.organizationId, fd);\n      }\n\n      this.formPromise = updatePromise.then(() => {\n        return this.apiService.refreshIdentityToken();\n      });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedLicense\"));\n      this.onUpdated.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"form-group\">\n    <label for=\"file\" class=\"sr-only\">{{ \"licenseFile\" | i18n }}</label>\n    <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n    <small class=\"form-text text-muted\">{{\n      \"licenseFileDesc\"\n        | i18n\n          : (!organizationId\n              ? \"bitwarden_premium_license.json\"\n              : \"bitwarden_organization_license.json\")\n    }}</small>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"submit\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","import { NgModule } from \"@angular/core\";\n\nimport { AcceptEmergencyComponent } from \"../accounts/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"../accounts/accept-organization.component\";\nimport { HintComponent } from \"../accounts/hint.component\";\nimport { LockComponent } from \"../accounts/lock.component\";\nimport { RecoverDeleteComponent } from \"../accounts/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"../accounts/recover-two-factor.component\";\nimport { RegisterFormModule } from \"../accounts/register-form/register-form.module\";\nimport { RemovePasswordComponent } from \"../accounts/remove-password.component\";\nimport { SetPasswordComponent } from \"../accounts/set-password.component\";\nimport { SsoComponent } from \"../accounts/sso.component\";\nimport { TwoFactorOptionsComponent } from \"../accounts/two-factor-options.component\";\nimport { TwoFactorComponent } from \"../accounts/two-factor.component\";\nimport { UpdatePasswordComponent } from \"../accounts/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"../accounts/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"../accounts/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"../accounts/verify-recover-delete.component\";\nimport { OrganizationSwitcherComponent } from \"../components/organization-switcher.component\";\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\nimport { PremiumBadgeComponent } from \"../components/premium-badge.component\";\nimport { UserVerificationPromptComponent } from \"../components/user-verification-prompt.component\";\nimport { UserVerificationComponent } from \"../components/user-verification.component\";\nimport { FooterComponent } from \"../layouts/footer.component\";\nimport { FrontendLayoutComponent } from \"../layouts/frontend-layout.component\";\nimport { NavbarComponent } from \"../layouts/navbar.component\";\nimport { ProductSwitcherModule } from \"../layouts/product-switcher/product-switcher.module\";\nimport { UserLayoutComponent } from \"../layouts/user-layout.component\";\nimport { OrganizationCreateModule } from \"../organizations/create/organization-create.module\";\nimport { OrganizationLayoutComponent } from \"../organizations/layouts/organization-layout.component\";\nimport { CollectionsComponent as OrgManageCollectionsComponent } from \"../organizations/manage/collections.component\";\nimport { EntityEventsComponent as OrgEntityEventsComponent } from \"../organizations/manage/entity-events.component\";\nimport { EventsComponent as OrgEventsComponent } from \"../organizations/manage/events.component\";\nimport { ManageComponent as OrgManageComponent } from \"../organizations/manage/manage.component\";\nimport { UserConfirmComponent as OrgUserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\nimport { AcceptFamilySponsorshipComponent } from \"../organizations/sponsorships/accept-family-sponsorship.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"../organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent } from \"../organizations/tools/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent } from \"../organizations/tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent } from \"../organizations/tools/reused-passwords-report.component\";\nimport { ToolsComponent as OrgToolsComponent } from \"../organizations/tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent } from \"../organizations/tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent } from \"../organizations/tools/weak-passwords-report.component\";\nimport { AddEditComponent as OrgAddEditComponent } from \"../organizations/vault/add-edit.component\";\nimport { AttachmentsComponent as OrgAttachmentsComponent } from \"../organizations/vault/attachments.component\";\nimport { CollectionsComponent as OrgCollectionsComponent } from \"../organizations/vault/collections.component\";\nimport { ProvidersComponent } from \"../providers/providers.component\";\nimport { AccessComponent } from \"../send/access.component\";\nimport { AddEditComponent as SendAddEditComponent } from \"../send/add-edit.component\";\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from \"../send/efflux-dates.component\";\nimport { SendComponent } from \"../send/send.component\";\nimport { AccountComponent } from \"../settings/account.component\";\nimport { AddCreditComponent } from \"../settings/add-credit.component\";\nimport { AdjustPaymentComponent } from \"../settings/adjust-payment.component\";\nimport { AdjustStorageComponent } from \"../settings/adjust-storage.component\";\nimport { ApiKeyComponent } from \"../settings/api-key.component\";\nimport { BillingHistoryViewComponent } from \"../settings/billing-history-view.component\";\nimport { BillingHistoryComponent } from \"../settings/billing-history.component\";\nimport { BillingSyncKeyComponent } from \"../settings/billing-sync-key.component\";\nimport { ChangeEmailComponent } from \"../settings/change-email.component\";\nimport { ChangeKdfComponent } from \"../settings/change-kdf.component\";\nimport { ChangePasswordComponent } from \"../settings/change-password.component\";\nimport { CreateOrganizationComponent } from \"../settings/create-organization.component\";\nimport { DeauthorizeSessionsComponent } from \"../settings/deauthorize-sessions.component\";\nimport { DeleteAccountComponent } from \"../settings/delete-account.component\";\nimport { DomainRulesComponent } from \"../settings/domain-rules.component\";\nimport { EmergencyAccessAddEditComponent } from \"../settings/emergency-access-add-edit.component\";\nimport { EmergencyAccessAttachmentsComponent } from \"../settings/emergency-access-attachments.component\";\nimport { EmergencyAccessConfirmComponent } from \"../settings/emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"../settings/emergency-access-takeover.component\";\nimport { EmergencyAccessViewComponent } from \"../settings/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"../settings/emergency-access.component\";\nimport { EmergencyAddEditComponent } from \"../settings/emergency-add-edit.component\";\nimport { OrganizationPlansComponent } from \"../settings/organization-plans.component\";\nimport { PaymentMethodComponent } from \"../settings/payment-method.component\";\nimport { PaymentComponent } from \"../settings/payment.component\";\nimport { PreferencesComponent } from \"../settings/preferences.component\";\nimport { PremiumComponent } from \"../settings/premium.component\";\nimport { ProfileComponent } from \"../settings/profile.component\";\nimport { PurgeVaultComponent } from \"../settings/purge-vault.component\";\nimport { SecurityKeysComponent } from \"../settings/security-keys.component\";\nimport { SecurityComponent } from \"../settings/security.component\";\nimport { SettingsComponent } from \"../settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"../settings/sponsored-families.component\";\nimport { SponsoringOrgRowComponent } from \"../settings/sponsoring-org-row.component\";\nimport { SubscriptionComponent } from \"../settings/subscription.component\";\nimport { TaxInfoComponent } from \"../settings/tax-info.component\";\nimport { TwoFactorAuthenticatorComponent } from \"../settings/two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"../settings/two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"../settings/two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"../settings/two-factor-recovery.component\";\nimport { TwoFactorSetupComponent } from \"../settings/two-factor-setup.component\";\nimport { TwoFactorVerifyComponent } from \"../settings/two-factor-verify.component\";\nimport { TwoFactorWebAuthnComponent } from \"../settings/two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"../settings/two-factor-yubikey.component\";\nimport { UpdateKeyComponent } from \"../settings/update-key.component\";\nimport { UpdateLicenseComponent } from \"../settings/update-license.component\";\nimport { UserSubscriptionComponent } from \"../settings/user-subscription.component\";\nimport { VaultTimeoutInputComponent } from \"../settings/vault-timeout-input.component\";\nimport { VerifyEmailComponent } from \"../settings/verify-email.component\";\nimport { GeneratorComponent } from \"../tools/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"../tools/password-generator-history.component\";\nimport { ToolsComponent } from \"../tools/tools.component\";\nimport { AddEditCustomFieldsComponent } from \"../vault/add-edit-custom-fields.component\";\nimport { AddEditComponent } from \"../vault/add-edit.component\";\nimport { AttachmentsComponent } from \"../vault/attachments.component\";\nimport { CollectionsComponent } from \"../vault/collections.component\";\nimport { FolderAddEditComponent } from \"../vault/folder-add-edit.component\";\nimport { ShareComponent } from \"../vault/share.component\";\n\nimport { SharedModule } from \"./shared.module\";\n\n// Please do not add to this list of declarations - we should refactor these into modules when doing so makes sense until there are none left.\n// If you are building new functionality, please create or extend a feature module instead.\n@NgModule({\n  imports: [SharedModule, OrganizationCreateModule, RegisterFormModule, ProductSwitcherModule],\n  declarations: [\n    PremiumBadgeComponent,\n    AcceptEmergencyComponent,\n    AcceptFamilySponsorshipComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    BillingSyncKeyComponent,\n    ChangeEmailComponent,\n    ChangeKdfComponent,\n    ChangePasswordComponent,\n    CollectionsComponent,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DomainRulesComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    HintComponent,\n    LockComponent,\n    NavbarComponent,\n    OrganizationSwitcherComponent,\n    OrgAddEditComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrgAttachmentsComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEventsComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgToolsComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserConfirmComponent,\n    OrgWeakPasswordsReportComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordRepromptComponent,\n    UserVerificationPromptComponent,\n    PaymentComponent,\n    PaymentMethodComponent,\n    PreferencesComponent,\n    PremiumBadgeComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RemovePasswordComponent,\n    SecurityComponent,\n    SecurityKeysComponent,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    SubscriptionComponent,\n    TaxInfoComponent,\n    ToolsComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdatePasswordComponent,\n    UpdateTempPasswordComponent,\n    BillingHistoryComponent,\n    BillingHistoryViewComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyRecoverDeleteComponent,\n  ],\n  exports: [\n    PremiumBadgeComponent,\n    AcceptEmergencyComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    ChangeEmailComponent,\n    ChangeKdfComponent,\n    ChangePasswordComponent,\n    CollectionsComponent,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DomainRulesComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    HintComponent,\n    LockComponent,\n    NavbarComponent,\n    OrganizationSwitcherComponent,\n    OrgAddEditComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrgAttachmentsComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEventsComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgToolsComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserConfirmComponent,\n    OrgWeakPasswordsReportComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordRepromptComponent,\n    PaymentComponent,\n    PaymentMethodComponent,\n    PreferencesComponent,\n    PremiumBadgeComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RemovePasswordComponent,\n    SecurityComponent,\n    SecurityKeysComponent,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    SubscriptionComponent,\n    TaxInfoComponent,\n    ToolsComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdatePasswordComponent,\n    UpdateTempPasswordComponent,\n    BillingHistoryComponent,\n    BillingHistoryViewComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyRecoverDeleteComponent,\n  ],\n})\nexport class LooseComponentsModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared\";\n\nimport { BitActionDirective } from \"./bit-action.directive\";\nimport { BitSubmitDirective } from \"./bit-submit.directive\";\nimport { BitFormButtonDirective } from \"./form-button.directive\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [BitActionDirective, BitFormButtonDirective, BitSubmitDirective],\n  exports: [BitActionDirective, BitFormButtonDirective, BitSubmitDirective],\n})\nexport class AsyncActionsModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AvatarComponent } from \"./avatar.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [AvatarComponent],\n  declarations: [AvatarComponent],\n})\nexport class AvatarModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { BadgeModule } from \"../badge\";\nimport { SharedModule } from \"../shared\";\n\nimport { BadgeListComponent } from \"./badge-list.component\";\n\n@NgModule({\n  imports: [SharedModule, BadgeModule],\n  exports: [BadgeListComponent],\n  declarations: [BadgeListComponent],\n})\nexport class BadgeListModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ButtonComponent } from \"./button.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [ButtonComponent],\n  declarations: [ButtonComponent],\n})\nexport class ButtonModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { CalloutComponent } from \"./callout.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [CalloutComponent],\n  declarations: [CalloutComponent],\n})\nexport class CalloutModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { FormControlModule } from \"../form-control\";\nimport { SharedModule } from \"../shared\";\n\nimport { CheckboxComponent } from \"./checkbox.component\";\n\n@NgModule({\n  imports: [SharedModule, CommonModule, FormControlModule],\n  declarations: [CheckboxComponent],\n  exports: [CheckboxComponent],\n})\nexport class CheckboxModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitIconButtonComponent } from \"./icon-button.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitIconButtonComponent],\n  exports: [BitIconButtonComponent],\n})\nexport class IconButtonModule {}\n","import { DialogModule as CdkDialogModule } from \"@angular/cdk/dialog\";\nimport { NgModule } from \"@angular/core\";\n\nimport { IconButtonModule } from \"../icon-button\";\nimport { SharedModule } from \"../shared\";\n\nimport { DialogService } from \"./dialog.service\";\nimport { DialogComponent } from \"./dialog/dialog.component\";\nimport { DialogCloseDirective } from \"./directives/dialog-close.directive\";\nimport { DialogTitleContainerDirective } from \"./directives/dialog-title-container.directive\";\nimport { IconDirective, SimpleDialogComponent } from \"./simple-dialog/simple-dialog.component\";\n\n@NgModule({\n  imports: [SharedModule, IconButtonModule, CdkDialogModule],\n  declarations: [\n    DialogCloseDirective,\n    DialogTitleContainerDirective,\n    DialogComponent,\n    SimpleDialogComponent,\n    IconDirective,\n  ],\n  exports: [\n    CdkDialogModule,\n    DialogComponent,\n    SimpleDialogComponent,\n    DialogCloseDirective,\n    IconDirective,\n  ],\n  providers: [DialogService],\n})\nexport class DialogModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitIconComponent } from \"./icon.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitIconComponent],\n  exports: [BitIconComponent],\n})\nexport class IconModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AnchorLinkDirective, ButtonLinkDirective } from \"./link.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [AnchorLinkDirective, ButtonLinkDirective],\n  declarations: [AnchorLinkDirective, ButtonLinkDirective],\n})\nexport class LinkModule {}\n","import { A11yModule } from \"@angular/cdk/a11y\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { MenuDividerComponent } from \"./menu-divider.component\";\nimport { MenuItemDirective } from \"./menu-item.directive\";\nimport { MenuTriggerForDirective } from \"./menu-trigger-for.directive\";\nimport { MenuComponent } from \"./menu.component\";\n\n@NgModule({\n  imports: [A11yModule, CommonModule, OverlayModule],\n  declarations: [MenuComponent, MenuTriggerForDirective, MenuItemDirective, MenuDividerComponent],\n  exports: [MenuComponent, MenuTriggerForDirective, MenuItemDirective, MenuDividerComponent],\n})\nexport class MenuModule {}\n","import { OverlayModule } from \"@angular/cdk/overlay\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { IconButtonModule } from \"../icon-button/icon-button.module\";\nimport { SharedModule } from \"../shared/shared.module\";\n\nimport { NavDividerComponent } from \"./nav-divider.component\";\nimport { NavGroupComponent } from \"./nav-group.component\";\nimport { NavItemComponent } from \"./nav-item.component\";\n\n@NgModule({\n  imports: [CommonModule, SharedModule, IconButtonModule, OverlayModule, RouterModule],\n  declarations: [NavDividerComponent, NavGroupComponent, NavItemComponent],\n  exports: [NavDividerComponent, NavGroupComponent, NavItemComponent],\n})\nexport class NavigationModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { CellDirective } from \"./cell.directive\";\nimport { RowDirective } from \"./row.directive\";\nimport { TableComponent } from \"./table.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TableComponent, CellDirective, RowDirective],\n  exports: [TableComponent, CellDirective, RowDirective],\n})\nexport class TableModule {}\n","import { PortalModule } from \"@angular/cdk/portal\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { TabHeaderComponent } from \"./shared/tab-header.component\";\nimport { TabListContainerDirective } from \"./shared/tab-list-container.directive\";\nimport { TabListItemDirective } from \"./shared/tab-list-item.directive\";\nimport { TabBodyComponent } from \"./tab-group/tab-body.component\";\nimport { TabGroupComponent } from \"./tab-group/tab-group.component\";\nimport { TabLabelDirective } from \"./tab-group/tab-label.directive\";\nimport { TabComponent } from \"./tab-group/tab.component\";\nimport { TabLinkComponent } from \"./tab-nav-bar/tab-link.component\";\nimport { TabNavBarComponent } from \"./tab-nav-bar/tab-nav-bar.component\";\n\n@NgModule({\n  imports: [CommonModule, RouterModule, PortalModule],\n  exports: [\n    TabGroupComponent,\n    TabComponent,\n    TabLabelDirective,\n    TabNavBarComponent,\n    TabLinkComponent,\n  ],\n  declarations: [\n    TabGroupComponent,\n    TabComponent,\n    TabLabelDirective,\n    TabListContainerDirective,\n    TabListItemDirective,\n    TabHeaderComponent,\n    TabNavBarComponent,\n    TabLinkComponent,\n    TabBodyComponent,\n  ],\n})\nexport class TabsModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BadgeModule } from \"../badge\";\n\nimport { ToggleGroupComponent } from \"./toggle-group.component\";\nimport { ToggleComponent } from \"./toggle.component\";\n\n@NgModule({\n  imports: [CommonModule, BadgeModule],\n  exports: [ToggleGroupComponent, ToggleComponent],\n  declarations: [ToggleGroupComponent, ToggleComponent],\n})\nexport class ToggleGroupModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ColorPasswordComponent } from \"./color-password.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [ColorPasswordComponent],\n  declarations: [ColorPasswordComponent],\n})\nexport class ColorPasswordModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { IconButtonModule, LinkModule, MenuModule } from \"@bitwarden/components\";\n\nimport { BreadcrumbComponent } from \"./breadcrumb.component\";\nimport { BreadcrumbsComponent } from \"./breadcrumbs.component\";\n\n@NgModule({\n  imports: [CommonModule, LinkModule, IconButtonModule, MenuModule, RouterModule],\n  declarations: [BreadcrumbsComponent, BreadcrumbComponent],\n  exports: [BreadcrumbsComponent, BreadcrumbComponent],\n})\nexport class BreadcrumbsModule {}\n","import { registerLocaleData } from \"@angular/common\";\nimport localeAf from \"@angular/common/locales/af\";\nimport localeAr from \"@angular/common/locales/ar\";\nimport localeAz from \"@angular/common/locales/az\";\nimport localeBe from \"@angular/common/locales/be\";\nimport localeBg from \"@angular/common/locales/bg\";\nimport localeBn from \"@angular/common/locales/bn\";\nimport localeBs from \"@angular/common/locales/bs\";\nimport localeCa from \"@angular/common/locales/ca\";\nimport localeCs from \"@angular/common/locales/cs\";\nimport localeDa from \"@angular/common/locales/da\";\nimport localeDe from \"@angular/common/locales/de\";\nimport localeEl from \"@angular/common/locales/el\";\nimport localeEnGb from \"@angular/common/locales/en-GB\";\nimport localeEnIn from \"@angular/common/locales/en-IN\";\nimport localeEo from \"@angular/common/locales/eo\";\nimport localeEs from \"@angular/common/locales/es\";\nimport localeEt from \"@angular/common/locales/et\";\nimport localeEu from \"@angular/common/locales/eu\";\nimport localeFi from \"@angular/common/locales/fi\";\nimport localeFil from \"@angular/common/locales/fil\";\nimport localeFr from \"@angular/common/locales/fr\";\nimport localeHe from \"@angular/common/locales/he\";\nimport localeHi from \"@angular/common/locales/hi\";\nimport localeHr from \"@angular/common/locales/hr\";\nimport localeHu from \"@angular/common/locales/hu\";\nimport localeId from \"@angular/common/locales/id\";\nimport localeIt from \"@angular/common/locales/it\";\nimport localeJa from \"@angular/common/locales/ja\";\nimport localeKa from \"@angular/common/locales/ka\";\nimport localeKm from \"@angular/common/locales/km\";\nimport localeKn from \"@angular/common/locales/kn\";\nimport localeKo from \"@angular/common/locales/ko\";\nimport localeLv from \"@angular/common/locales/lv\";\nimport localeMl from \"@angular/common/locales/ml\";\nimport localeNb from \"@angular/common/locales/nb\";\nimport localeNl from \"@angular/common/locales/nl\";\nimport localeNn from \"@angular/common/locales/nn\";\nimport localePl from \"@angular/common/locales/pl\";\nimport localePtBr from \"@angular/common/locales/pt\";\nimport localePtPt from \"@angular/common/locales/pt-PT\";\nimport localeRo from \"@angular/common/locales/ro\";\nimport localeRu from \"@angular/common/locales/ru\";\nimport localeSi from \"@angular/common/locales/si\";\nimport localeSk from \"@angular/common/locales/sk\";\nimport localeSl from \"@angular/common/locales/sl\";\nimport localeSr from \"@angular/common/locales/sr\";\nimport localeSv from \"@angular/common/locales/sv\";\nimport localeTr from \"@angular/common/locales/tr\";\nimport localeUk from \"@angular/common/locales/uk\";\nimport localeVi from \"@angular/common/locales/vi\";\nimport localeZhCn from \"@angular/common/locales/zh-Hans\";\nimport localeZhTw from \"@angular/common/locales/zh-Hant\";\n\nregisterLocaleData(localeAf, \"af\");\nregisterLocaleData(localeAr, \"ar\");\nregisterLocaleData(localeAz, \"az\");\nregisterLocaleData(localeBe, \"be\");\nregisterLocaleData(localeBg, \"bg\");\nregisterLocaleData(localeBn, \"bn\");\nregisterLocaleData(localeBs, \"bs\");\nregisterLocaleData(localeCa, \"ca\");\nregisterLocaleData(localeCs, \"cs\");\nregisterLocaleData(localeDa, \"da\");\nregisterLocaleData(localeDe, \"de\");\nregisterLocaleData(localeEl, \"el\");\nregisterLocaleData(localeEnGb, \"en-GB\");\nregisterLocaleData(localeEnIn, \"en-IN\");\nregisterLocaleData(localeEo, \"eo\");\nregisterLocaleData(localeEs, \"es\");\nregisterLocaleData(localeEt, \"et\");\nregisterLocaleData(localeEu, \"eu\");\nregisterLocaleData(localeFi, \"fi\");\nregisterLocaleData(localeFil, \"fil\");\nregisterLocaleData(localeFr, \"fr\");\nregisterLocaleData(localeHe, \"he\");\nregisterLocaleData(localeHi, \"hi\");\nregisterLocaleData(localeHr, \"hr\");\nregisterLocaleData(localeHu, \"hu\");\nregisterLocaleData(localeId, \"id\");\nregisterLocaleData(localeIt, \"it\");\nregisterLocaleData(localeJa, \"ja\");\nregisterLocaleData(localeKa, \"ka\");\nregisterLocaleData(localeKm, \"km\");\nregisterLocaleData(localeKn, \"kn\");\nregisterLocaleData(localeKo, \"ko\");\nregisterLocaleData(localeLv, \"lv\");\nregisterLocaleData(localeMl, \"ml\");\nregisterLocaleData(localeNb, \"nb\");\nregisterLocaleData(localeNl, \"nl\");\nregisterLocaleData(localeNn, \"nn\");\nregisterLocaleData(localePl, \"pl\");\nregisterLocaleData(localePtBr, \"pt-BR\");\nregisterLocaleData(localePtPt, \"pt-PT\");\nregisterLocaleData(localeRo, \"ro\");\nregisterLocaleData(localeRu, \"ru\");\nregisterLocaleData(localeSi, \"si\");\nregisterLocaleData(localeSk, \"sk\");\nregisterLocaleData(localeSl, \"sl\");\nregisterLocaleData(localeSr, \"sr\");\nregisterLocaleData(localeSv, \"sv\");\nregisterLocaleData(localeTr, \"tr\");\nregisterLocaleData(localeUk, \"uk\");\nregisterLocaleData(localeVi, \"vi\");\nregisterLocaleData(localeZhCn, \"zh-CN\");\nregisterLocaleData(localeZhTw, \"zh-TW\");\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\nimport { ToastrModule } from \"ngx-toastr\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport {\n  AsyncActionsModule,\n  AvatarModule,\n  BadgeListModule,\n  BadgeModule,\n  ButtonModule,\n  IconButtonModule,\n  CalloutModule,\n  CheckboxModule,\n  DialogModule,\n  FormFieldModule,\n  IconModule,\n  LinkModule,\n  MenuModule,\n  MultiSelectModule,\n  NavigationModule,\n  TableModule,\n  TabsModule,\n  ToggleGroupModule,\n  ColorPasswordModule,\n} from \"@bitwarden/components\";\n\nimport { BreadcrumbsModule } from \"./components/breadcrumbs/breadcrumbs.module\";\n\n// Register the locales for the application\nimport \"./locales\";\n\n/**\n * This NgModule should contain the most basic shared directives, pipes, and components. They\n * should be widely used by other modules to be considered for adding to this module. If in doubt\n * do not add to this module.\n *\n * See: https://angular.io/guide/module-types#shared-ngmodules\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    DragDropModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InfiniteScrollModule,\n    RouterModule,\n    ToastrModule,\n    JslibModule,\n\n    // Component library\n    AsyncActionsModule,\n    AvatarModule,\n    BadgeModule,\n    BadgeListModule,\n    ButtonModule,\n    CalloutModule,\n    CheckboxModule,\n    DialogModule,\n    FormFieldModule,\n    IconButtonModule,\n    IconModule,\n    LinkModule,\n    MenuModule,\n    MultiSelectModule,\n    NavigationModule,\n    TableModule,\n    TabsModule,\n    ToggleGroupModule,\n    LinkModule,\n    ColorPasswordModule,\n\n    // Web specific\n    BreadcrumbsModule,\n  ],\n  exports: [\n    CommonModule,\n    DragDropModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InfiniteScrollModule,\n    RouterModule,\n    ToastrModule,\n    JslibModule,\n\n    // Component library\n    AsyncActionsModule,\n    AvatarModule,\n    BadgeModule,\n    BadgeListModule,\n    ButtonModule,\n    CalloutModule,\n    CheckboxModule,\n    DialogModule,\n    FormFieldModule,\n    IconButtonModule,\n    IconModule,\n    LinkModule,\n    MenuModule,\n    MultiSelectModule,\n    NavigationModule,\n    TableModule,\n    TabsModule,\n    ToggleGroupModule,\n    LinkModule,\n    ColorPasswordModule,\n\n    // Web specific\n    BreadcrumbsModule,\n  ],\n  providers: [DatePipe],\n  bootstrap: [],\n})\nexport class SharedModule {}\n","import { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { FieldView } from \"@bitwarden/common/models/view/field.view\";\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  @Input() thisCipherType: CipherType;\n  @Input() editMode: boolean;\n\n  addFieldType: FieldType = FieldType.Text;\n  addFieldTypeOptions: any[];\n  addFieldLinkedTypeOption: any;\n  linkedFieldOptions: any[] = [];\n\n  cipherType = CipherType;\n  fieldType = FieldType;\n  eventType = EventType;\n\n  constructor(\n    private i18nService: I18nService,\n    private eventCollectionService: EventCollectionService\n  ) {\n    this.addFieldTypeOptions = [\n      { name: i18nService.t(\"cfTypeText\"), value: FieldType.Text },\n      { name: i18nService.t(\"cfTypeHidden\"), value: FieldType.Hidden },\n      { name: i18nService.t(\"cfTypeBoolean\"), value: FieldType.Boolean },\n    ];\n    this.addFieldLinkedTypeOption = {\n      name: this.i18nService.t(\"cfTypeLinked\"),\n      value: FieldType.Linked,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.thisCipherType != null) {\n      this.setLinkedFieldOptions();\n\n      if (!changes.thisCipherType.firstChange) {\n        this.resetCipherLinkedFields();\n      }\n    }\n  }\n\n  addField() {\n    if (this.cipher.fields == null) {\n      this.cipher.fields = [];\n    }\n\n    const f = new FieldView();\n    f.type = this.addFieldType;\n    f.newField = true;\n\n    if (f.type === FieldType.Linked) {\n      f.linkedId = this.linkedFieldOptions[0].value;\n    }\n\n    this.cipher.fields.push(f);\n  }\n\n  removeField(field: FieldView) {\n    const i = this.cipher.fields.indexOf(field);\n    if (i > -1) {\n      this.cipher.fields.splice(i, 1);\n    }\n  }\n\n  toggleFieldValue(field: FieldView) {\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (this.editMode && f.showValue) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledHiddenFieldVisible,\n        this.cipher.id\n      );\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n  }\n\n  private setLinkedFieldOptions() {\n    if (this.cipher.linkedFieldOptions == null) {\n      return;\n    }\n\n    const options: any = [];\n    this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n      options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id })\n    );\n    this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  private resetCipherLinkedFields() {\n    if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n      return;\n    }\n\n    // Delete any Linked custom fields if the item type does not support them\n    if (this.cipher.linkedFieldOptions == null) {\n      this.cipher.fields = this.cipher.fields.filter((f) => f.type !== FieldType.Linked);\n      return;\n    }\n\n    this.cipher.fields\n      .filter((f) => f.type === FieldType.Linked)\n      .forEach((f) => (f.linkedId = this.linkedFieldOptions[0].value));\n  }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n  selector: \"input[type=checkbox][appTrueFalseValue]\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TrueFalseValueDirective),\n      multi: true,\n    },\n  ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n  @Input() trueValue = true;\n  @Input() falseValue = false;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener(\"change\", [\"$event\"])\n  onHostChange(ev: any) {\n    this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  writeValue(obj: any): void {\n    if (obj === this.trueValue) {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", true);\n    } else {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", false);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    /* nothing */\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    /* nothing */\n  }\n\n  private propagateChange = (_: any) => {\n    /* nothing */\n  };\n}\n","<ng-container>\n  <h3 class=\"mt-4\">{{ \"customFields\" | i18n }}</h3>\n  <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n    <div\n      role=\"group\"\n      class=\"row\"\n      cdkDrag\n      *ngFor=\"let f of cipher.fields; let i = index; trackBy: trackByFunction\"\n      attr.aria-label=\"{{ f.name }}\"\n    >\n      <div class=\"col-5 form-group\">\n        <div class=\"d-flex\">\n          <label for=\"fieldName{{ i }}\">{{ \"name\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/custom-fields/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <input\n          id=\"fieldName{{ i }}\"\n          type=\"text\"\n          name=\"Field.Name{{ i }}\"\n          [(ngModel)]=\"f.name\"\n          class=\"form-control\"\n          appInputVerbatim\n          [disabled]=\"cipher.isDeleted || viewOnly\"\n          [readonly]=\"!cipher.edit && editMode\"\n        />\n      </div>\n      <div class=\"col-7 form-group\">\n        <label for=\"fieldValue{{ i }}\">{{ \"value\" | i18n }}</label>\n        <div class=\"d-flex align-items-center\">\n          <!-- Text -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Text\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              appInputVerbatim\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              [readonly]=\"!cipher.edit && editMode\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', 'Field')\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Hidden -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Hidden\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              type=\"{{ f.showValue ? 'text' : 'password' }}\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              class=\"form-control text-monospace\"\n              appInputVerbatim\n              autocomplete=\"new-password\"\n              [disabled]=\"cipher.isDeleted || viewOnly || (!cipher.viewPassword && !f.newField)\"\n              [readonly]=\"!cipher.edit && editMode\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleFieldValue(f)\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !f.showValue, 'bwi-eye-slash': f.showValue }\"\n                >\n                </i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', f.type === fieldType.Hidden ? 'H_Field' : 'Field')\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Linked -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Linked\">\n            <select\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              class=\"form-control\"\n              [(ngModel)]=\"f.linkedId\"\n              *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            >\n              <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"flex-fill\">\n            <!-- Boolean -->\n            <input\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              type=\"checkbox\"\n              [(ngModel)]=\"f.value\"\n              *ngIf=\"f.type === fieldType.Boolean\"\n              appTrueFalseValue\n              [trueValue]=\"true\"\n              [falseValue]=\"false\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n          </div>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-danger ml-2\"\n            (click)=\"removeField(f)\"\n            appA11yTitle=\"{{ 'remove' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\"\n          >\n            <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-muted cursor-move\"\n            appA11yTitle=\"{{ 'dragToSort' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\"\n          >\n            <i class=\"bwi bwi-hamburger bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Add new custom field -->\n  <a\n    href=\"#\"\n    appStopClick\n    (click)=\"addField()\"\n    class=\"d-inline-block mb-2\"\n    *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\"\n  >\n    <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomField\" | i18n }}\n  </a>\n  <div class=\"row\" *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\">\n    <div class=\"col-5\">\n      <label for=\"addFieldType\" class=\"sr-only\">{{ \"type\" | i18n }}</label>\n      <select id=\"addFieldType\" class=\"form-control\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\">\n        <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        <option\n          *ngIf=\"cipher.linkedFieldOptions != null\"\n          [ngValue]=\"addFieldLinkedTypeOption.value\"\n        >\n          {{ addFieldLinkedTypeOption.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n","import { Component, Input } from \"@angular/core\";\n\nimport { AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent } from \"@bitwarden/angular/components/add-edit-custom-fields.component\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-vault-add-edit-custom-fields\",\n  templateUrl: \"add-edit-custom-fields.component.html\",\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n  @Input() viewOnly: boolean;\n  @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n  constructor(i18nService: I18nService, eventCollectionService: EventCollectionService) {\n    super(i18nService, eventCollectionService);\n  }\n}\n","import { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { Observable, Subject, takeUntil, concatMap } from \"rxjs\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/enums/cipherRepromptType\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SecureNoteType } from \"@bitwarden/common/enums/secureNoteType\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Cipher } from \"@bitwarden/common/models/domain/cipher\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CardView } from \"@bitwarden/common/models/view/card.view\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\nimport { IdentityView } from \"@bitwarden/common/models/view/identity.view\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/login-uri.view\";\nimport { LoginView } from \"@bitwarden/common/models/view/login.view\";\nimport { SecureNoteView } from \"@bitwarden/common/models/view/secure-note.view\";\n\n@Directive()\nexport class AddEditComponent implements OnInit, OnDestroy {\n  @Input() cloneMode = false;\n  @Input() folderId: string = null;\n  @Input() cipherId: string;\n  @Input() type: CipherType;\n  @Input() collectionIds: string[];\n  @Input() organizationId: string = null;\n  @Output() onSavedCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n  @Output() onCancelled = new EventEmitter<CipherView>();\n  @Output() onEditAttachments = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onEditCollections = new EventEmitter<CipherView>();\n  @Output() onGeneratePassword = new EventEmitter();\n  @Output() onGenerateUsername = new EventEmitter();\n\n  editMode = false;\n  cipher: CipherView;\n  folders$: Observable<FolderView[]>;\n  collections: CollectionView[] = [];\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  restorePromise: Promise<any>;\n  checkPasswordPromise: Promise<number>;\n  showPassword = false;\n  showCardNumber = false;\n  showCardCode = false;\n  cipherType = CipherType;\n  typeOptions: any[];\n  cardBrandOptions: any[];\n  cardExpMonthOptions: any[];\n  identityTitleOptions: any[];\n  uriMatchOptions: any[];\n  ownershipOptions: any[] = [];\n  autofillOnPageLoadOptions: any[];\n  currentDate = new Date();\n  allowPersonal = true;\n  reprompt = false;\n  canUseReprompt = true;\n  organization: Organization;\n\n  protected componentName = \"\";\n  protected destroy$ = new Subject<void>();\n  protected writeableCollections: CollectionView[];\n  private personalOwnershipPolicyAppliesToActiveUser: boolean;\n  private previousCipherId: string;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected stateService: StateService,\n    protected collectionService: CollectionService,\n    protected messagingService: MessagingService,\n    protected eventCollectionService: EventCollectionService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"typeLogin\"), value: CipherType.Login },\n      { name: i18nService.t(\"typeCard\"), value: CipherType.Card },\n      { name: i18nService.t(\"typeIdentity\"), value: CipherType.Identity },\n      { name: i18nService.t(\"typeSecureNote\"), value: CipherType.SecureNote },\n    ];\n    this.cardBrandOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"Visa\", value: \"Visa\" },\n      { name: \"Mastercard\", value: \"Mastercard\" },\n      { name: \"American Express\", value: \"Amex\" },\n      { name: \"Discover\", value: \"Discover\" },\n      { name: \"Diners Club\", value: \"Diners Club\" },\n      { name: \"JCB\", value: \"JCB\" },\n      { name: \"Maestro\", value: \"Maestro\" },\n      { name: \"UnionPay\", value: \"UnionPay\" },\n      { name: \"RuPay\", value: \"RuPay\" },\n      { name: i18nService.t(\"cardBrandMir\"), value: \"Mir\" },\n      { name: i18nService.t(\"other\"), value: \"Other\" },\n    ];\n    this.cardExpMonthOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"01 - \" + i18nService.t(\"january\"), value: \"1\" },\n      { name: \"02 - \" + i18nService.t(\"february\"), value: \"2\" },\n      { name: \"03 - \" + i18nService.t(\"march\"), value: \"3\" },\n      { name: \"04 - \" + i18nService.t(\"april\"), value: \"4\" },\n      { name: \"05 - \" + i18nService.t(\"may\"), value: \"5\" },\n      { name: \"06 - \" + i18nService.t(\"june\"), value: \"6\" },\n      { name: \"07 - \" + i18nService.t(\"july\"), value: \"7\" },\n      { name: \"08 - \" + i18nService.t(\"august\"), value: \"8\" },\n      { name: \"09 - \" + i18nService.t(\"september\"), value: \"9\" },\n      { name: \"10 - \" + i18nService.t(\"october\"), value: \"10\" },\n      { name: \"11 - \" + i18nService.t(\"november\"), value: \"11\" },\n      { name: \"12 - \" + i18nService.t(\"december\"), value: \"12\" },\n    ];\n    this.identityTitleOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"mr\"), value: i18nService.t(\"mr\") },\n      { name: i18nService.t(\"mrs\"), value: i18nService.t(\"mrs\") },\n      { name: i18nService.t(\"ms\"), value: i18nService.t(\"ms\") },\n      { name: i18nService.t(\"dr\"), value: i18nService.t(\"dr\") },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"defaultMatchDetection\"), value: null },\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.autofillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadUseDefault\"), value: null },\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.PersonalOwnership)\n      .pipe(\n        concatMap(async (policyAppliesToActiveUser) => {\n          this.personalOwnershipPolicyAppliesToActiveUser = policyAppliesToActiveUser;\n          await this.init();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async init() {\n    if (this.ownershipOptions.length) {\n      this.ownershipOptions = [];\n    }\n    if (this.personalOwnershipPolicyAppliesToActiveUser) {\n      this.allowPersonal = false;\n    } else {\n      const myEmail = await this.stateService.getEmail();\n      this.ownershipOptions.push({ name: myEmail, value: null });\n    }\n\n    const orgs = await this.organizationService.getAll();\n    orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")).forEach((o) => {\n      if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n        this.ownershipOptions.push({ name: o.name, value: o.id });\n      }\n    });\n    if (!this.allowPersonal) {\n      this.organizationId = this.ownershipOptions[0].value;\n    }\n\n    this.writeableCollections = await this.loadCollections();\n\n    this.canUseReprompt = await this.passwordRepromptService.enabled();\n  }\n\n  async load() {\n    this.editMode = this.cipherId != null;\n    if (this.editMode) {\n      this.editMode = true;\n      if (this.cloneMode) {\n        this.cloneMode = true;\n        this.title = this.i18nService.t(\"addItem\");\n      } else {\n        this.title = this.i18nService.t(\"editItem\");\n      }\n    } else {\n      this.title = this.i18nService.t(\"addItem\");\n    }\n\n    const addEditCipherInfo: any = await this.stateService.getAddEditCipherInfo();\n    if (addEditCipherInfo != null) {\n      this.cipher = addEditCipherInfo.cipher;\n      this.collectionIds = addEditCipherInfo.collectionIds;\n    }\n    await this.stateService.setAddEditCipherInfo(null);\n\n    if (this.cipher == null) {\n      if (this.editMode) {\n        const cipher = await this.loadCipher();\n        this.cipher = await cipher.decrypt();\n\n        // Adjust Cipher Name if Cloning\n        if (this.cloneMode) {\n          this.cipher.name += \" - \" + this.i18nService.t(\"clone\");\n          // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n          if (this.cipher.organizationId == null && !this.allowPersonal) {\n            this.cipher.organizationId = this.organizationId;\n          }\n        }\n      } else {\n        this.cipher = new CipherView();\n        this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n        this.cipher.folderId = this.folderId;\n        this.cipher.type = this.type == null ? CipherType.Login : this.type;\n        this.cipher.login = new LoginView();\n        this.cipher.login.uris = [new LoginUriView()];\n        this.cipher.card = new CardView();\n        this.cipher.identity = new IdentityView();\n        this.cipher.secureNote = new SecureNoteView();\n        this.cipher.secureNote.type = SecureNoteType.Generic;\n        this.cipher.reprompt = CipherRepromptType.None;\n      }\n    }\n\n    if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n      await this.organizationChanged();\n      if (\n        this.collectionIds != null &&\n        this.collectionIds.length > 0 &&\n        this.collections.length > 0\n      ) {\n        this.collections.forEach((c) => {\n          if (this.collectionIds.indexOf(c.id) > -1) {\n            (c as any).checked = true;\n          }\n        });\n      }\n    }\n\n    this.folders$ = this.folderService.folderViews$;\n\n    if (this.editMode && this.previousCipherId !== this.cipherId) {\n      this.eventCollectionService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n    this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.cipher.isDeleted) {\n      return this.restore();\n    }\n\n    if (this.cipher.name == null || this.cipher.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      !this.allowPersonal &&\n      this.cipher.organizationId == null\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"personalOwnershipSubmitError\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.uris != null &&\n      this.cipher.login.uris.length === 1 &&\n      (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n    ) {\n      this.cipher.login.uris = null;\n    }\n\n    // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n    if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n      this.cipher.collectionIds =\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n    }\n\n    // Clear current Cipher Id to trigger \"Add\" cipher flow\n    if (this.cloneMode) {\n      this.cipher.id = null;\n    }\n\n    const cipher = await this.encryptCipher();\n    try {\n      this.formPromise = this.saveCipher(cipher);\n      await this.formPromise;\n      this.cipher.id = cipher.id;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode && !this.cloneMode ? \"editedItem\" : \"addedItem\")\n      );\n      this.onSavedCipher.emit(this.cipher);\n      this.messagingService.send(this.editMode && !this.cloneMode ? \"editedCipher\" : \"addedCipher\");\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  addUri() {\n    if (this.cipher.type !== CipherType.Login) {\n      return;\n    }\n\n    if (this.cipher.login.uris == null) {\n      this.cipher.login.uris = [];\n    }\n\n    this.cipher.login.uris.push(new LoginUriView());\n  }\n\n  removeUri(uri: LoginUriView) {\n    if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n      return;\n    }\n\n    const i = this.cipher.login.uris.indexOf(uri);\n    if (i > -1) {\n      this.cipher.login.uris.splice(i, 1);\n    }\n  }\n\n  getCardExpMonthDisplay() {\n    return this.cardExpMonthOptions.find((x) => x.value == this.cipher.card.expMonth)?.name;\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  cancel() {\n    this.onCancelled.emit(this.cipher);\n  }\n\n  attachments() {\n    this.onEditAttachments.emit(this.cipher);\n  }\n\n  share() {\n    this.onShareCipher.emit(this.cipher);\n  }\n\n  editCollections() {\n    this.onEditCollections.emit(this.cipher);\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      this.componentName != \"\" ? this.componentName + \" .modal-content\" : null\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.deleteCipher();\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n      this.messagingService.send(\n        this.cipher.isDeleted ? \"permanentlyDeletedCipher\" : \"deletedCipher\"\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.restorePromise = this.restoreCipher();\n      await this.restorePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n      this.messagingService.send(\"restoredCipher\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async generateUsername(): Promise<boolean> {\n    if (this.cipher.login?.username?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwriteUsernameConfirmation\"),\n        this.i18nService.t(\"overwriteUsername\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGenerateUsername.emit();\n    return true;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    if (this.cipher.login?.password?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwritePasswordConfirmation\"),\n        this.i18nService.t(\"overwritePassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGeneratePassword.emit();\n    return true;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"loginPassword\").focus();\n    if (this.editMode && this.showPassword) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledPasswordVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  async toggleCardNumber() {\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledCardNumberVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  toggleCardCode() {\n    this.showCardCode = !this.showCardCode;\n    document.getElementById(\"cardCode\").focus();\n    if (this.editMode && this.showCardCode) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledCardCodeVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  toggleUriOptions(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n  }\n\n  loginUriMatchChanged(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null ? true : u.showOptions;\n  }\n\n  async organizationChanged() {\n    if (this.writeableCollections != null) {\n      this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    }\n    if (this.cipher.organizationId != null) {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.cipher.organizationId\n      );\n      const org = await this.organizationService.get(this.cipher.organizationId);\n      if (org != null) {\n        this.cipher.organizationUseTotp = org.useTotp;\n      }\n    } else {\n      this.collections = [];\n    }\n  }\n\n  async checkPassword() {\n    if (this.checkPasswordPromise != null) {\n      return;\n    }\n\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n    this.checkPasswordPromise = null;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  repromptChanged() {\n    this.reprompt = !this.reprompt;\n    if (this.reprompt) {\n      this.cipher.reprompt = CipherRepromptType.Password;\n    } else {\n      this.cipher.reprompt = CipherRepromptType.None;\n    }\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter((c) => !c.readOnly);\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected encryptCipher() {\n    return this.cipherService.encrypt(this.cipher);\n  }\n\n  protected saveCipher(cipher: Cipher) {\n    return this.cipher.id == null\n      ? this.cipherService.createWithServer(cipher)\n      : this.cipherService.updateWithServer(cipher);\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n}\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/add-edit.component\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { LoginUriView } from \"@bitwarden/common/models/view/login-uri.view\";\n\n@Component({\n  selector: \"app-vault-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent implements OnInit, OnDestroy {\n  canAccessPremium: boolean;\n  totpCode: string;\n  totpCodeFormatted: string;\n  totpDash: number;\n  totpSec: number;\n  totpLow: boolean;\n  showRevisionDate = false;\n  hasPasswordHistory = false;\n  viewingPasswordHistory = false;\n  viewOnly = false;\n  showPasswordCount = false;\n\n  protected totpInterval: number;\n  protected override componentName = \"app-vault-add-edit\";\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    protected totpService: TotpService,\n    protected passwordGenerationService: PasswordGenerationService,\n    protected messagingService: MessagingService,\n    eventCollectionService: EventCollectionService,\n    protected policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      messagingService,\n      eventCollectionService,\n      policyService,\n      logService,\n      passwordRepromptService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n    this.showRevisionDate = this.cipher.passwordRevisionDisplayDate != null;\n    this.hasPasswordHistory = this.cipher.hasPasswordHistory;\n    this.cleanUp();\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.totp &&\n      (this.cipher.organizationUseTotp || this.canAccessPremium)\n    ) {\n      await this.totpUpdateCode();\n      const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n      await this.totpTick(interval);\n\n      this.totpInterval = window.setInterval(async () => {\n        await this.totpTick(interval);\n      }, 1000);\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n\n  toggleFavorite() {\n    this.cipher.favorite = !this.cipher.favorite;\n  }\n\n  togglePassword() {\n    super.togglePassword();\n\n    // Hide password count when password is hidden to be safe\n    if (!this.showPassword && this.showPasswordCount) {\n      this.togglePasswordCount();\n    }\n  }\n\n  togglePasswordCount() {\n    this.showPasswordCount = !this.showPasswordCount;\n\n    if (this.editMode && this.showPasswordCount) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledPasswordVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  launch(uri: LoginUriView) {\n    if (!uri.canLaunch) {\n      return;\n    }\n\n    this.platformUtilsService.launchUri(uri.launchUri);\n  }\n\n  copy(value: string, typeI18nKey: string, aType: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (this.editMode) {\n      if (typeI18nKey === \"password\") {\n        this.eventCollectionService.collect(\n          EventType.Cipher_ClientToggledHiddenFieldVisible,\n          this.cipherId\n        );\n      } else if (typeI18nKey === \"securityCode\") {\n        this.eventCollectionService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n      } else if (aType === \"H_Field\") {\n        this.eventCollectionService.collect(\n          EventType.Cipher_ClientCopiedHiddenField,\n          this.cipherId\n        );\n      }\n    }\n  }\n\n  async generatePassword(): Promise<boolean> {\n    const confirmed = await super.generatePassword();\n    if (confirmed) {\n      const options = (await this.passwordGenerationService.getOptions())?.[0] ?? {};\n      this.cipher.login.password = await this.passwordGenerationService.generatePassword(options);\n    }\n    return confirmed;\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  upgradeOrganization() {\n    this.messagingService.send(\"upgradeOrganization\", {\n      organizationId: this.cipher.organizationId,\n    });\n  }\n\n  showGetPremium() {\n    if (this.canAccessPremium) {\n      return;\n    }\n    if (this.cipher.organizationUseTotp) {\n      this.upgradeOrganization();\n    } else {\n      this.premiumRequired();\n    }\n  }\n\n  viewHistory() {\n    this.viewingPasswordHistory = !this.viewingPasswordHistory;\n  }\n\n  protected cleanUp() {\n    if (this.totpInterval) {\n      window.clearInterval(this.totpInterval);\n    }\n  }\n\n  protected async totpUpdateCode() {\n    if (\n      this.cipher == null ||\n      this.cipher.type !== CipherType.Login ||\n      this.cipher.login.totp == null\n    ) {\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n      return;\n    }\n\n    this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n    if (this.totpCode != null) {\n      if (this.totpCode.length > 4) {\n        const half = Math.floor(this.totpCode.length / 2);\n        this.totpCodeFormatted =\n          this.totpCode.substring(0, half) + \" \" + this.totpCode.substring(half);\n      } else {\n        this.totpCodeFormatted = this.totpCode;\n      }\n    } else {\n      this.totpCodeFormatted = null;\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n    }\n  }\n\n  protected allowOwnershipAssignment() {\n    return (\n      (!this.editMode || this.cloneMode) &&\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    );\n  }\n\n  private async totpTick(intervalSeconds: number) {\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const mod = epoch % intervalSeconds;\n\n    this.totpSec = intervalSeconds - mod;\n    this.totpDash = +(Math.round(((78.6 / intervalSeconds) * mod + \"e+2\") as any) + \"e-2\");\n    this.totpLow = this.totpSec <= 7;\n    if (mod === 0) {\n      await this.totpUpdateCode();\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { OrganizationNameBadgeComponent } from \"./organization-name-badge.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [OrganizationNameBadgeComponent],\n  exports: [OrganizationNameBadgeComponent],\n})\nexport class OrganizationBadgeModule {}\n","import { Observable } from \"rxjs\";\n\nimport { Organization } from \"@bitwarden/common/src/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/src/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/src/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/src/models/view/folder.view\";\n\nimport {\n  CipherTypeFilter,\n  CollectionFilter,\n  FolderFilter,\n  OrganizationFilter,\n} from \"../../shared/models/vault-filter.type\";\n\nexport abstract class VaultFilterService {\n  collapsedFilterNodes$: Observable<Set<string>>;\n  filteredFolders$: Observable<FolderView[]>;\n  filteredCollections$: Observable<CollectionView[]>;\n  organizationTree$: Observable<TreeNode<OrganizationFilter>>;\n  folderTree$: Observable<TreeNode<FolderFilter>>;\n  collectionTree$: Observable<TreeNode<CollectionFilter>>;\n  reloadCollections: () => Promise<void>;\n  getCollectionNodeFromTree: (id: string) => Promise<TreeNode<CollectionFilter>>;\n  setCollapsedFilterNodes: (collapsedFilterNodes: Set<string>) => Promise<void>;\n  expandOrgFilter: () => Promise<void>;\n  setOrganizationFilter: (organization: Organization) => void;\n  buildTypeTree: (\n    head: CipherTypeFilter,\n    array: CipherTypeFilter[]\n  ) => Observable<TreeNode<CipherTypeFilter>>;\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  BehaviorSubject,\n  combineLatestWith,\n  firstValueFrom,\n  map,\n  Observable,\n  of,\n  ReplaySubject,\n  switchMap,\n} from \"rxjs\";\n\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { FolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ServiceUtils } from \"@bitwarden/common/misc/serviceUtils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/models/view/folder.view\";\n\nimport { CollectionAdminView } from \"../../../organizations/core\";\nimport {\n  CipherTypeFilter,\n  CollectionFilter,\n  FolderFilter,\n  OrganizationFilter,\n} from \"../shared/models/vault-filter.type\";\n\nimport { VaultFilterService as VaultFilterServiceAbstraction } from \"./abstractions/vault-filter.service\";\n\nconst NestingDelimiter = \"/\";\n\n@Injectable()\nexport class VaultFilterService implements VaultFilterServiceAbstraction {\n  protected _collapsedFilterNodes = new BehaviorSubject<Set<string>>(null);\n  collapsedFilterNodes$: Observable<Set<string>> = this._collapsedFilterNodes.pipe(\n    switchMap(async (nodes) => nodes ?? (await this.getCollapsedFilterNodes()))\n  );\n\n  organizationTree$: Observable<TreeNode<OrganizationFilter>> =\n    this.organizationService.organizations$.pipe(\n      switchMap((orgs) => this.buildOrganizationTree(orgs))\n    );\n\n  protected _organizationFilter = new BehaviorSubject<Organization>(null);\n\n  filteredFolders$: Observable<FolderView[]> = this.folderService.folderViews$.pipe(\n    combineLatestWith(this._organizationFilter),\n    switchMap(([folders, org]) => {\n      return this.filterFolders(folders, org);\n    })\n  );\n  folderTree$: Observable<TreeNode<FolderFilter>> = this.filteredFolders$.pipe(\n    map((folders) => this.buildFolderTree(folders))\n  );\n\n  // TODO: Remove once collections is refactored with observables\n  // replace with collection service observable\n  private collectionViews$ = new ReplaySubject<CollectionView[]>(1);\n  filteredCollections$: Observable<CollectionView[]> = this.collectionViews$.pipe(\n    combineLatestWith(this._organizationFilter),\n    switchMap(([collections, org]) => {\n      return this.filterCollections(collections, org);\n    })\n  );\n  collectionTree$: Observable<TreeNode<CollectionFilter>> = this.filteredCollections$.pipe(\n    map((collections) => this.buildCollectionTree(collections))\n  );\n\n  constructor(\n    protected stateService: StateService,\n    protected organizationService: OrganizationService,\n    protected folderService: FolderService,\n    protected cipherService: CipherService,\n    protected collectionService: CollectionService,\n    protected policyService: PolicyService,\n    protected i18nService: I18nService\n  ) {}\n\n  // TODO: Remove once collections is refactored with observables\n  async reloadCollections() {\n    this.collectionViews$.next(await this.collectionService.getAllDecrypted());\n  }\n\n  async getCollectionNodeFromTree(id: string) {\n    const collections = await firstValueFrom(this.collectionTree$);\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionFilter>;\n  }\n\n  async setCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await this.stateService.setCollapsedGroupings(Array.from(collapsedFilterNodes));\n    this._collapsedFilterNodes.next(collapsedFilterNodes);\n  }\n\n  protected async getCollapsedFilterNodes(): Promise<Set<string>> {\n    const nodes = new Set(await this.stateService.getCollapsedGroupings());\n    return nodes;\n  }\n\n  setOrganizationFilter(organization: Organization) {\n    if (organization?.id != \"AllVaults\") {\n      this._organizationFilter.next(organization);\n    } else {\n      this._organizationFilter.next(null);\n    }\n  }\n\n  async expandOrgFilter() {\n    const collapsedFilterNodes = await firstValueFrom(this.collapsedFilterNodes$);\n    if (!collapsedFilterNodes.has(\"AllVaults\")) {\n      return;\n    }\n    collapsedFilterNodes.delete(\"AllVaults\");\n    await this.setCollapsedFilterNodes(collapsedFilterNodes);\n  }\n\n  protected async buildOrganizationTree(\n    orgs?: Organization[]\n  ): Promise<TreeNode<OrganizationFilter>> {\n    const headNode = this.getOrganizationFilterHead();\n    if (!(await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership))) {\n      const myVaultNode = this.getOrganizationFilterMyVault();\n      headNode.children.push(myVaultNode);\n    }\n    if (await this.policyService.policyAppliesToUser(PolicyType.SingleOrg)) {\n      orgs = orgs.slice(0, 1);\n    }\n    if (orgs) {\n      orgs.forEach((org) => {\n        const orgCopy = org as OrganizationFilter;\n        orgCopy.icon = \"bwi-business\";\n        const node = new TreeNode<OrganizationFilter>(orgCopy, headNode, orgCopy.name);\n        headNode.children.push(node);\n      });\n    }\n    return headNode;\n  }\n\n  protected getOrganizationFilterHead(): TreeNode<OrganizationFilter> {\n    const head = new Organization() as OrganizationFilter;\n    head.enabled = true;\n    return new TreeNode<OrganizationFilter>(head, null, \"allVaults\", \"AllVaults\");\n  }\n\n  protected getOrganizationFilterMyVault(): TreeNode<OrganizationFilter> {\n    const myVault = new Organization() as OrganizationFilter;\n    myVault.id = \"MyVault\";\n    myVault.icon = \"bwi-user\";\n    myVault.enabled = true;\n    myVault.hideOptions = true;\n    return new TreeNode<OrganizationFilter>(myVault, null, this.i18nService.t(\"myVault\"));\n  }\n\n  buildTypeTree(\n    head: CipherTypeFilter,\n    array?: CipherTypeFilter[]\n  ): Observable<TreeNode<CipherTypeFilter>> {\n    const headNode = new TreeNode<CipherTypeFilter>(head, null);\n    array?.forEach((filter) => {\n      const node = new TreeNode<CipherTypeFilter>(filter, headNode, filter.name);\n      headNode.children.push(node);\n    });\n    return of(headNode);\n  }\n\n  protected async filterCollections(\n    storedCollections: CollectionView[],\n    org?: Organization\n  ): Promise<CollectionView[]> {\n    return org?.id != null\n      ? storedCollections.filter((c) => c.organizationId === org.id)\n      : storedCollections;\n  }\n\n  protected buildCollectionTree(collections?: CollectionView[]): TreeNode<CollectionFilter> {\n    const headNode = this.getCollectionFilterHead();\n    if (!collections) {\n      return headNode;\n    }\n    const nodes: TreeNode<CollectionFilter>[] = [];\n    collections\n      .sort((a, b) => this.i18nService.collator.compare(a.name, b.name))\n      .forEach((c) => {\n        const collectionCopy = new CollectionView() as CollectionFilter;\n        collectionCopy.id = c.id;\n        collectionCopy.organizationId = c.organizationId;\n        collectionCopy.icon = \"bwi-collection\";\n        if (c instanceof CollectionAdminView) {\n          collectionCopy.groups = c.groups;\n        }\n        const parts =\n          c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n        ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n      });\n    nodes.forEach((n) => {\n      n.parent = headNode;\n      headNode.children.push(n);\n    });\n    return headNode;\n  }\n\n  protected getCollectionFilterHead(): TreeNode<CollectionFilter> {\n    const head = new CollectionView() as CollectionFilter;\n    return new TreeNode<CollectionFilter>(head, null, \"collections\", \"AllCollections\");\n  }\n\n  protected async filterFolders(\n    storedFolders: FolderView[],\n    org?: Organization\n  ): Promise<FolderView[]> {\n    if (org?.id == null) {\n      return storedFolders;\n    }\n    const ciphers = await this.cipherService.getAllDecrypted();\n    const orgCiphers = ciphers.filter((c) => c.organizationId == org?.id);\n    return storedFolders.filter(\n      (f) =>\n        orgCiphers.filter((oc) => oc.folderId == f.id).length > 0 ||\n        ciphers.filter((c) => c.folderId == f.id).length < 1\n    );\n  }\n\n  protected buildFolderTree(folders?: FolderView[]): TreeNode<FolderFilter> {\n    const headNode = this.getFolderFilterHead();\n    if (!folders) {\n      return headNode;\n    }\n    const nodes: TreeNode<FolderFilter>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView() as FolderFilter;\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      folderCopy.icon = \"bwi-folder\";\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n\n    nodes.forEach((n) => {\n      n.parent = headNode;\n      headNode.children.push(n);\n    });\n    return headNode;\n  }\n\n  protected getFolderFilterHead(): TreeNode<FolderFilter> {\n    const head = new FolderView() as FolderFilter;\n    return new TreeNode<FolderFilter>(head, null, \"folders\", \"AllFolders\");\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\n\nimport { VaultFilterSectionComponent } from \"./components/vault-filter-section.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [VaultFilterSectionComponent],\n  exports: [SharedModule, VaultFilterSectionComponent],\n})\nexport class VaultFilterSharedModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { LinkSsoComponent } from \"./components/link-sso.component\";\nimport { OrganizationOptionsComponent } from \"./components/organization-options.component\";\nimport { VaultFilterComponent } from \"./components/vault-filter.component\";\nimport { VaultFilterService as VaultFilterServiceAbstraction } from \"./services/abstractions/vault-filter.service\";\nimport { VaultFilterService } from \"./services/vault-filter.service\";\nimport { VaultFilterSharedModule } from \"./shared/vault-filter-shared.module\";\n\n@NgModule({\n  imports: [VaultFilterSharedModule],\n  declarations: [VaultFilterComponent, OrganizationOptionsComponent, LinkSsoComponent],\n  exports: [VaultFilterComponent],\n  providers: [\n    {\n      provide: VaultFilterServiceAbstraction,\n      useClass: VaultFilterService,\n    },\n  ],\n})\nexport class VaultFilterModule {}\n","import {\n  flagEnabled as baseFlagEnabled,\n  devFlagEnabled as baseDevFlagEnabled,\n  devFlagValue as baseDevFlagValue,\n  SharedFlags,\n  SharedDevFlags,\n} from \"@bitwarden/common/misc/flags\";\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable-next-line @typescript-eslint/ban-types */\nexport type Flags = {\n  secretsManager?: boolean;\n  showPasswordless?: boolean;\n} & SharedFlags;\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable-next-line @typescript-eslint/ban-types */\nexport type DevFlags = {} & SharedDevFlags;\n\nexport function flagEnabled(flag: keyof Flags): boolean {\n  return baseFlagEnabled<Flags>(flag);\n}\n\nexport function devFlagEnabled(flag: keyof DevFlags) {\n  return baseDevFlagEnabled<DevFlags>(flag);\n}\n\nexport function devFlagValue(flag: keyof DevFlags) {\n  return baseDevFlagValue(flag);\n}\n","export abstract class AccountService {}\n\nexport abstract class InternalAccountService extends AccountService {\n  abstract delete(): void;\n}\n","import { ServerConfigResponse } from \"../../models/response/server-config.response\";\n\nexport abstract class ConfigApiServiceAbstraction {\n  get: () => Promise<ServerConfigResponse>;\n}\n","export abstract class EventUploadService {\n  uploadEvents: (userId?: string) => Promise<void>;\n}\n","import { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\n\nexport abstract class FileUploadService {\n  uploadSendFile: (\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n  uploadCipherAttachment: (\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n}\n","export abstract class NotificationsService {\n  init: () => Promise<void>;\n  updateConnection: (sync?: boolean) => Promise<void>;\n  reconnectFromActivity: () => Promise<void>;\n  disconnectFromInactivity: () => Promise<void>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { AccountSettingsSettings } from \"../models/domain/account\";\n\nexport abstract class SettingsService {\n  settings$: Observable<AccountSettingsSettings>;\n\n  setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n  clear: (userId?: string) => Promise<void>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { SyncEventArgs } from \"../../types/syncEventArgs\";\n\nexport abstract class SyncNotifierService {\n  sync$: Observable<SyncEventArgs>;\n  next: (event: SyncEventArgs) => void;\n}\n","import { VerifyOTPRequest } from \"../../models/request/account/verify-otp.request\";\n\nexport abstract class UserVerificationApiServiceAbstraction {\n  postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n  postAccountRequestOTP: () => Promise<void>;\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/global-state\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/global-state\";\n\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Five = 5, // Migrate to new storage of encrypted organization keys\n  Six = 6, // Delete account.keys.legacyEtmKey property\n  Latest = Six,\n}\n","import { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { EnvironmentUrls } from \"./environment-urls\";\nimport { WindowState } from \"./window-state\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string;\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n  enableDuckDuckGoBrowserIntegration?: boolean;\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n\n  AuthRequest = 15,\n  AuthRequestResponse = 16,\n}\n","import { NotificationType } from \"../../enums/notificationType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n        break;\n      case NotificationType.AuthRequest:\n      case NotificationType.AuthRequestResponse:\n        this.payload = new AuthRequestPushNotification(payload);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class AuthRequestPushNotification extends BaseResponse {\n  id: string;\n  userId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  HttpTransportType,\n  HubConnection,\n  HubConnectionBuilder,\n  IHubProtocol,\n} from \"@microsoft/signalr\";\nimport { MessagePackHubProtocol } from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { AnonymousHubService as AnonymousHubServiceAbstraction } from \"../abstractions/anonymousHub.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\n\nimport {\n  AuthRequestPushNotification,\n  NotificationResponse,\n} from \"./../models/response/notification.response\";\n\n@Injectable()\nexport class AnonymousHubService implements AnonymousHubServiceAbstraction {\n  private anonHubConnection: HubConnection;\n  private url: string;\n\n  constructor(\n    private environmentService: EnvironmentService,\n    private authService: AuthService,\n    private logService: LogService\n  ) {}\n\n  async createHubConnection(token: string) {\n    this.url = this.environmentService.getNotificationsUrl();\n\n    this.anonHubConnection = new HubConnectionBuilder()\n      .withUrl(this.url + \"/anonymous-hub?Token=\" + token, {\n        skipNegotiation: true,\n        transport: HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new MessagePackHubProtocol() as IHubProtocol)\n      .build();\n\n    this.anonHubConnection.start().catch((error) => this.logService.error(error));\n\n    this.anonHubConnection.on(\"AuthRequestResponseRecieved\", (data: any) => {\n      this.ProcessNotification(new NotificationResponse(data));\n    });\n  }\n\n  stopHubConnection() {\n    if (this.anonHubConnection) {\n      this.anonHubConnection.stop();\n    }\n  }\n\n  private async ProcessNotification(notification: NotificationResponse) {\n    await this.authService.authResponsePushNotifiction(\n      notification.payload as AuthRequestPushNotification\n    );\n  }\n}\n","import { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { DeviceType } from \"../../enums/deviceType\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","import { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\n\nexport abstract class TokenRequest {\n  protected device?: DeviceRequest;\n  protected passwordlessAuthRequest: string;\n\n  constructor(protected twoFactor: TokenTwoFactorRequest, device?: DeviceRequest) {\n    this.device = device != null ? device : null;\n  }\n\n  // eslint-disable-next-line\n  alterIdentityTokenHeaders(headers: Headers) {\n    // Implemented in subclass if required\n  }\n\n  setTwoFactor(twoFactor: TokenTwoFactorRequest) {\n    this.twoFactor = twoFactor;\n  }\n\n  setPasswordlessAccessCode(accessCode: string) {\n    this.passwordlessAuthRequest = accessCode;\n  }\n\n  protected toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    //passswordless login\n    if (this.passwordlessAuthRequest) {\n      obj.authRequest = this.passwordlessAuthRequest;\n    }\n\n    if (this.twoFactor) {\n      if (this.twoFactor.token && this.twoFactor.provider != null) {\n        obj.twoFactorToken = this.twoFactor.token;\n        obj.twoFactorProvider = this.twoFactor.provider;\n        obj.twoFactorRemember = this.twoFactor.remember ? \"1\" : \"0\";\n      }\n    }\n\n    return obj;\n  }\n}\n","import { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\nimport { TokenRequest } from \"./token.request\";\n\nexport class UserApiTokenRequest extends TokenRequest {\n  constructor(\n    public clientId: string,\n    public clientSecret: string,\n    protected twoFactor: TokenTwoFactorRequest,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken() {\n    const obj = super.toIdentityToken(this.clientId);\n\n    obj.scope = this.clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n    obj.grant_type = \"client_credentials\";\n    obj.client_secret = this.clientSecret;\n\n    return obj;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class AuthRequestResponse extends BaseResponse {\n  id: string;\n  publicKey: string;\n  requestDeviceType: DeviceType;\n  requestIpAddress: string;\n  key: string;\n  masterPasswordHash: string;\n  creationDate: string;\n  requestApproved: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n    this.requestDeviceType = this.getResponseProperty(\"RequestDeviceType\");\n    this.requestIpAddress = this.getResponseProperty(\"RequestIpAddress\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.masterPasswordHash = this.getResponseProperty(\"MasterPasswordHash\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.requestApproved = this.getResponseProperty(\"RequestApproved\");\n  }\n}\n","import { BaseResponse } from \"../base.response\";\n\nimport { ICaptchaProtectedResponse } from \"./captcha-protected.response\";\n\nexport class RegisterResponse extends BaseResponse implements ICaptchaProtectedResponse {\n  captchaBypassToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaBypassToken = this.getResponseProperty(\"CaptchaBypassToken\");\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { BillingInvoiceResponse, BillingTransactionResponse } from \"./billing.response\";\n\nexport class BillingHistoryResponse extends BaseResponse {\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { BillingSourceResponse } from \"./billing.response\";\n\nexport class BillingPaymentResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { SelectionReadOnlyResponse } from \"./selection-read-only.response\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionAccessDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n  users: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n\n    const users = this.getResponseProperty(\"Users\");\n    if (users != null) {\n      this.users = users.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class DeviceVerificationResponse extends BaseResponse {\n  isDeviceVerificationSectionEnabled: boolean;\n  unknownDeviceVerificationEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.isDeviceVerificationSectionEnabled = this.getResponseProperty(\n      \"IsDeviceVerificationSectionEnabled\"\n    );\n    this.unknownDeviceVerificationEnabled = this.getResponseProperty(\n      \"UnknownDeviceVerificationEnabled\"\n    );\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { GlobalDomainResponse } from \"./global-domain.response\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\nimport { EventSystemUser } from \"../../enums/event-system-user\";\nimport { EventType } from \"../../enums/eventType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n  installationId: string;\n  systemUser: EventSystemUser;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n    this.installationId = this.getResponseProperty(\"InstallationId\");\n    this.systemUser = this.getResponseProperty(\"SystemUser\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        // eslint-disable-next-line\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\nimport { BillingSyncConfigApi } from \"../api/billing-sync-config.api\";\nimport { ScimConfigApi } from \"../api/scim-config.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\n/**API response config types for OrganizationConnectionResponse */\nexport type OrganizationConnectionConfigApis = BillingSyncConfigApi | ScimConfigApi;\n\nexport class OrganizationConnectionResponse<\n  TConfig extends OrganizationConnectionConfigApis\n> extends BaseResponse {\n  id: string;\n  type: OrganizationConnectionType;\n  organizationId: string;\n  enabled: boolean;\n  config: TConfig;\n\n  constructor(response: any, configType: { new (response: any): TConfig }) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const rawConfig = this.getResponseProperty(\"Config\");\n    this.config = rawConfig == null ? null : new configType(rawConfig);\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\nimport { CollectionResponse } from \"./collection.response\";\n\nexport class OrganizationExportResponse extends BaseResponse {\n  collections: CollectionResponse[];\n  ciphers: CipherResponse[];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionResponse(c));\n    }\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class OrganizationSponsorshipSyncStatusResponse extends BaseResponse {\n  lastSyncDate?: Date;\n\n  constructor(response: any) {\n    super(response);\n    const lastSyncDate = this.getResponseProperty(\"LastSyncDate\");\n    if (lastSyncDate) {\n      this.lastSyncDate = new Date(lastSyncDate);\n    }\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useCustomPermissions: boolean;\n  useResetPassword: boolean;\n  useSecretsManager: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useScim = this.getResponseProperty(\"UseScim\") ?? false;\n    this.useCustomPermissions = this.getResponseProperty(\"UseCustomPermissions\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.useSecretsManager = this.getResponseProperty(\"UseSecretsManager\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n    const familySponsorshipLastSyncDateString = this.getResponseProperty(\n      \"FamilySponsorshipLastSyncDate\"\n    );\n    if (familySponsorshipLastSyncDateString) {\n      this.familySponsorshipLastSyncDate = new Date(familySponsorshipLastSyncDateString);\n    }\n    const familySponsorshipValidUntilString = this.getResponseProperty(\n      \"FamilySponsorshipValidUntil\"\n    );\n    if (familySponsorshipValidUntilString) {\n      this.familySponsorshipValidUntil = new Date(familySponsorshipValidUntilString);\n    }\n    this.familySponsorshipToDelete = this.getResponseProperty(\"FamilySponsorshipToDelete\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profile-organization.response\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { ProfileOrganizationResponse } from \"./profile-organization.response\";\nimport { ProfileProviderOrganizationResponse } from \"./profile-provider-organization.response\";\nimport { ProfileProviderResponse } from \"./profile-provider.response\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premiumPersonally: boolean;\n  premiumFromOrganization: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premiumPersonally = this.getResponseProperty(\"Premium\");\n    this.premiumFromOrganization = this.getResponseProperty(\"PremiumFromOrganization\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { ProfileResponse } from \"./profile.response\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n","import { BaseResponse } from \"../base.response\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n  userCount: number;\n  seats?: number;\n  plan?: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.userCount = this.getResponseProperty(\"UserCount\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.plan = this.getResponseProperty(\"Plan\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../../../abstractions/organization-user/responses\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../base.response\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\nimport { PermissionsApi } from \"../../api/permissions.api\";\nimport { BaseResponse } from \"../base.response\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"../base.response\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/send-file.api\";\nimport { SendTextApi } from \"../api/send-text.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/send-file.api\";\nimport { SendTextApi } from \"../api/send-text.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { SendResponse } from \"./send.response\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SsoPreValidateResponse extends BaseResponse {\n  token: string;\n\n  constructor(response: any) {\n    super(response);\n    this.token = this.getResponseProperty(\"Token\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\nimport { CollectionDetailsResponse } from \"./collection.response\";\nimport { DomainsResponse } from \"./domains.response\";\nimport { FolderResponse } from \"./folder.response\";\nimport { PolicyResponse } from \"./policy.response\";\nimport { ProfileResponse } from \"./profile.response\";\nimport { SendResponse } from \"./send.response\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\nimport { BreachAccountResponse } from \"../models/response/breach-account.response\";\nimport { ErrorResponse } from \"../models/response/error.response\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","import { ClientType } from \"../../../enums/clientType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { CaptchaProtectedRequest } from \"../captcha-protected.request\";\nimport { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\nimport { TokenRequest } from \"./token.request\";\n\nexport class PasswordTokenRequest extends TokenRequest implements CaptchaProtectedRequest {\n  constructor(\n    public email: string,\n    public masterPasswordHash: string,\n    public captchaResponse: string,\n    protected twoFactor: TokenTwoFactorRequest,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: ClientType) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"password\";\n    obj.username = this.email;\n    obj.password = this.masterPasswordHash;\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n  }\n}\n","import { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class AuthResult {\n  captchaSiteKey = \"\";\n  resetMasterPassword = false;\n  forcePasswordReset = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n\n  get requiresCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  get requiresTwoFactor() {\n    return this.twoFactorProviders != null;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../../enums/twoFactorProviderType\";\nimport { Account, AccountProfile, AccountTokens } from \"../../models/domain/account\";\nimport { AuthResult } from \"../../models/domain/auth-result\";\nimport {\n  UserApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../../models/domain/log-in-credentials\";\nimport { DeviceRequest } from \"../../models/request/device.request\";\nimport { PasswordTokenRequest } from \"../../models/request/identity-token/password-token.request\";\nimport { SsoTokenRequest } from \"../../models/request/identity-token/sso-token.request\";\nimport { TokenTwoFactorRequest } from \"../../models/request/identity-token/token-two-factor.request\";\nimport { UserApiTokenRequest } from \"../../models/request/identity-token/user-api-token.request\";\nimport { KeysRequest } from \"../../models/request/keys.request\";\nimport { IdentityCaptchaResponse } from \"../../models/response/identity-captcha.response\";\nimport { IdentityTokenResponse } from \"../../models/response/identity-token.response\";\nimport { IdentityTwoFactorResponse } from \"../../models/response/identity-two-factor.response\";\n\nexport abstract class LogInStrategy {\n  protected abstract tokenRequest: UserApiTokenRequest | PasswordTokenRequest | SsoTokenRequest;\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService\n  ) {}\n\n  abstract logIn(\n    credentials:\n      | UserApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ): Promise<AuthResult>;\n\n  // The user key comes from different sources depending on the login strategy\n  protected abstract setUserKey(response: IdentityTokenResponse): Promise<void>;\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string = null\n  ): Promise<AuthResult> {\n    this.tokenRequest.setTwoFactor(twoFactor);\n    return this.startLogIn();\n  }\n\n  protected async startLogIn(): Promise<AuthResult> {\n    this.twoFactorService.clearSelectedProvider();\n\n    const response = await this.apiService.postIdentityToken(this.tokenRequest);\n\n    if (response instanceof IdentityTwoFactorResponse) {\n      return this.processTwoFactorResponse(response);\n    } else if (response instanceof IdentityCaptchaResponse) {\n      return this.processCaptchaResponse(response);\n    } else if (response instanceof IdentityTokenResponse) {\n      return this.processTokenResponse(response);\n    }\n\n    throw new Error(\"Invalid response object.\");\n  }\n\n  protected async buildDeviceRequest() {\n    const appId = await this.appIdService.getAppId();\n    return new DeviceRequest(appId, this.platformUtilsService);\n  }\n\n  protected async buildTwoFactor(userProvidedTwoFactor?: TokenTwoFactorRequest) {\n    if (userProvidedTwoFactor != null) {\n      return userProvidedTwoFactor;\n    }\n\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken();\n    if (storedTwoFactorToken != null) {\n      return new TokenTwoFactorRequest(TwoFactorProviderType.Remember, storedTwoFactorToken, false);\n    }\n\n    return new TokenTwoFactorRequest();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            name: accountInformation.name,\n            email: accountInformation.email,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n  }\n\n  protected async processTokenResponse(response: IdentityTokenResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.resetMasterPassword = response.resetMasterPassword;\n    result.forcePasswordReset = response.forcePasswordReset;\n\n    await this.saveAccountInformation(response);\n\n    if (response.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(response);\n    }\n\n    await this.setUserKey(response);\n\n    // Must come after the user Key is set, otherwise createKeyPairForOldAccount will fail\n    const newSsoUser = response.key == null;\n    if (!newSsoUser) {\n      await this.cryptoService.setEncKey(response.key);\n      await this.cryptoService.setEncPrivateKey(\n        response.privateKey ?? (await this.createKeyPairForOldAccount())\n      );\n    }\n\n    this.messagingService.send(\"loggedIn\");\n\n    return result;\n  }\n\n  private async processTwoFactorResponse(response: IdentityTwoFactorResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.twoFactorProviders = response.twoFactorProviders2;\n    this.twoFactorService.setProviders(response);\n    this.captchaBypassToken = response.captchaToken ?? null;\n    return result;\n  }\n\n  private async processCaptchaResponse(response: IdentityCaptchaResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.captchaSiteKey = response.siteKey;\n    return result;\n  }\n\n  private async createKeyPairForOldAccount() {\n    try {\n      const [publicKey, privateKey] = await this.cryptoService.makeKeyPair();\n      await this.apiService.postAccountKeys(new KeysRequest(publicKey, privateKey.encryptedString));\n      return privateKey.encryptedString;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { HashPurpose } from \"../../enums/hashPurpose\";\nimport { AuthResult } from \"../../models/domain/auth-result\";\nimport { PasswordLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { PasswordTokenRequest } from \"../../models/request/identity-token/password-token.request\";\nimport { TokenTwoFactorRequest } from \"../../models/request/identity-token/token-two-factor.request\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async setUserKey() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordLogInCredentials) {\n    const { email, masterPassword, captchaToken, twoFactor } = credentials;\n\n    this.key = await this.authService.makePreloginKey(masterPassword, email);\n\n    // Hash the password early (before authentication) so we don't persist it in memory in plaintext\n    this.localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      this.key,\n      HashPurpose.LocalAuthorization\n    );\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, this.key);\n\n    this.tokenRequest = new PasswordTokenRequest(\n      email,\n      hashedPassword,\n      captchaToken,\n      await this.buildTwoFactor(twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { AuthResult } from \"../../models/domain/auth-result\";\nimport { PasswordlessLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { PasswordTokenRequest } from \"../../models/request/identity-token/password-token.request\";\nimport { TokenTwoFactorRequest } from \"../../models/request/identity-token/token-two-factor.request\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class PasswordlessLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get accessCode() {\n    return this.passwordlessCredentials.accessCode;\n  }\n\n  get authRequestId() {\n    return this.passwordlessCredentials.authRequestId;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n  private passwordlessCredentials: PasswordlessLogInCredentials;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async setUserKey() {\n    await this.cryptoService.setKey(this.passwordlessCredentials.decKey);\n    await this.cryptoService.setKeyHash(this.passwordlessCredentials.localPasswordHash);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordlessLogInCredentials) {\n    this.passwordlessCredentials = credentials;\n\n    this.tokenRequest = new PasswordTokenRequest(\n      credentials.email,\n      credentials.accessCode,\n      null,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    this.tokenRequest.setPasswordlessAccessCode(credentials.authRequestId);\n    return this.startLogIn();\n  }\n}\n","import { DeviceRequest } from \"../device.request\";\n\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\nimport { TokenRequest } from \"./token.request\";\n\nexport class SsoTokenRequest extends TokenRequest {\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUri: string,\n    protected twoFactor: TokenTwoFactorRequest,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"authorization_code\";\n    obj.code = this.code;\n    obj.code_verifier = this.codeVerifier;\n    obj.redirect_uri = this.redirectUri;\n\n    return obj;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { SsoLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { SsoTokenRequest } from \"../../models/request/identity-token/sso-token.request\";\nimport { IdentityTokenResponse } from \"../../models/response/identity-token.response\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class SsoLogInStrategy extends LogInStrategy {\n  tokenRequest: SsoTokenRequest;\n  orgId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async setUserKey(tokenResponse: IdentityTokenResponse) {\n    const newSsoUser = tokenResponse.key == null;\n\n    if (tokenResponse.keyConnectorUrl != null) {\n      if (!newSsoUser) {\n        await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n      } else {\n        await this.keyConnectorService.convertNewSsoUserToKeyConnector(tokenResponse, this.orgId);\n      }\n    }\n  }\n\n  async logIn(credentials: SsoLogInCredentials) {\n    this.orgId = credentials.orgId;\n    this.tokenRequest = new SsoTokenRequest(\n      credentials.code,\n      credentials.codeVerifier,\n      credentials.redirectUrl,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { TwoFactorService } from \"../../abstractions/twoFactor.service\";\nimport { UserApiLogInCredentials } from \"../../models/domain/log-in-credentials\";\nimport { UserApiTokenRequest } from \"../../models/request/identity-token/user-api-token.request\";\nimport { IdentityTokenResponse } from \"../../models/response/identity-token.response\";\n\nimport { LogInStrategy } from \"./logIn.strategy\";\n\nexport class UserApiLogInStrategy extends LogInStrategy {\n  tokenRequest: UserApiTokenRequest;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private environmentService: EnvironmentService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async setUserKey(tokenResponse: IdentityTokenResponse) {\n    if (tokenResponse.apiUseKeyConnector) {\n      const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n      await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n    }\n  }\n\n  async logIn(credentials: UserApiLogInCredentials) {\n    this.tokenRequest = new UserApiTokenRequest(\n      credentials.clientId,\n      credentials.clientSecret,\n      await this.buildTwoFactor(),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    await super.saveAccountInformation(tokenResponse);\n    await this.stateService.setApiKeyClientId(this.tokenRequest.clientId);\n    await this.stateService.setApiKeyClientSecret(this.tokenRequest.clientSecret);\n  }\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { CipherView } from \"../view/cipher.view\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherWithIdRequest } from \"./cipher-with-id.request\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nexport class CipherPartialRequest {\n  folderId: string;\n  favorite: boolean;\n\n  constructor(cipher: Cipher) {\n    this.folderId = cipher.folderId;\n    this.favorite = cipher.favorite;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipher.request\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService } from \"../abstractions/search.service\";\nimport { SettingsService } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { AccountSettingsSettings } from \"../models/domain/account\";\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport Domain from \"../models/domain/domain-base\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/login-uri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secure-note\";\nimport { SortedCiphersCache } from \"../models/domain/sorted-ciphers-cache\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { AttachmentRequest } from \"../models/request/attachment.request\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipher-bulk-delete.request\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipher-bulk-move.request\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipher-bulk-restore.request\";\nimport { CipherBulkShareRequest } from \"../models/request/cipher-bulk-share.request\";\nimport { CipherCollectionsRequest } from \"../models/request/cipher-collections.request\";\nimport { CipherCreateRequest } from \"../models/request/cipher-create.request\";\nimport { CipherPartialRequest } from \"../models/request/cipher-partial.request\";\nimport { CipherShareRequest } from \"../models/request/cipher-share.request\";\nimport { CipherRequest } from \"../models/request/cipher.request\";\nimport { CipherResponse } from \"../models/response/cipher.response\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { AttachmentView } from \"../models/view/attachment.view\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { FieldView } from \"../models/view/field.view\";\nimport { PasswordHistoryView } from \"../models/view/password-history.view\";\nimport { View } from \"../models/view/view\";\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n  [\"google.com\", new Set([\"script.google.com\"])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService,\n    private encryptService: EncryptService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n    cipher.edit = model.edit;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    if ((await this.getDecryptedCipherCache()) != null) {\n      await this.reindexCiphers();\n      return await this.getDecryptedCipherCache();\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const ciphers = await this.getAll();\n    const orgKeys = await this.cryptoService.getOrgKeys();\n    const userKey = await this.cryptoService.getKeyForUserEncryption();\n\n    // Group ciphers by orgId or under 'null' for the user's ciphers\n    const grouped = ciphers.reduce((agg, c) => {\n      agg[c.organizationId] ??= [];\n      agg[c.organizationId].push(c);\n      return agg;\n    }, {} as Record<string, Cipher[]>);\n\n    const decCiphers = (\n      await Promise.all(\n        Object.entries(grouped).map(([orgId, groupedCiphers]) =>\n          this.encryptService.decryptItems(groupedCiphers, orgKeys.get(orgId) ?? userKey)\n        )\n      )\n    )\n      .flat()\n      .sort(this.getLocaleSortingFunction());\n\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  private async reindexCiphers() {\n    const userId = await this.stateService.getUserId();\n    const reindexRequired =\n      this.searchService != null && (this.searchService().indexedEntityId ?? userId) !== userId;\n    if (reindexRequired) {\n      await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n    }\n  }\n\n  async getAllDecryptedForGrouping(groupingId: string, folder = true): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : firstValueFrom(this.settingsService.settings$).then(\n            (settings: AccountSettingsSettings) => {\n              let matches: any[] = [];\n              settings?.equivalentDomains?.forEach((eqDomain: any) => {\n                if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                  matches = matches.concat(eqDomain);\n                }\n              });\n\n              if (!matches.length) {\n                matches.push(domain);\n              }\n\n              return matches;\n            }\n          );\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host: {\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            }\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const response = await this.apiService.getCiphersOrganization(organizationId);\n    if (response?.data == null || response.data.length < 1) {\n      return [];\n    }\n\n    const ciphers = response.data.map((cr) => new Cipher(new CipherData(cr)));\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const decCiphers = await this.encryptService.decryptItems(ciphers, key);\n\n    decCiphers.sort(this.getLocaleSortingFunction());\n    return decCiphers;\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async createWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.collectionIds != null) {\n      const request = new CipherCreateRequest(cipher);\n      response = await this.apiService.postCipherCreate(request);\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.postCipher(request);\n    }\n    cipher.id = response.id;\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async updateWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.edit) {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    } else {\n      const request = new CipherPartialRequest(cipher);\n      response = await this.apiService.putPartialCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    try {\n      await this.apiService.putShareCiphers(request);\n    } catch (e) {\n      for (const cipher of ciphers) {\n        cipher.organizationId = null;\n        cipher.collectionIds = null;\n      }\n      throw e;\n    }\n    await this.upsert(encCiphers.map((c) => c.toCipherData()));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(response, cipher.collectionIds);\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData();\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === Array.name) {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const encBuf = await EncArrayBuffer.fromResponse(attachmentResponse);\n    const decBuf = await this.cryptoService.decryptFromBytes(encBuf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class ServerConfigResponse extends BaseResponse {\n  version: string;\n  gitHash: string;\n  server: ThirdPartyServerConfigResponse;\n  environment: EnvironmentServerConfigResponse;\n\n  constructor(response: any) {\n    super(response);\n\n    if (response == null) {\n      return;\n    }\n\n    this.version = this.getResponseProperty(\"Version\");\n    this.gitHash = this.getResponseProperty(\"GitHash\");\n    this.server = new ThirdPartyServerConfigResponse(this.getResponseProperty(\"Server\"));\n    this.environment = new EnvironmentServerConfigResponse(this.getResponseProperty(\"Environment\"));\n  }\n}\n\nexport class EnvironmentServerConfigResponse extends BaseResponse {\n  vault: string;\n  api: string;\n  identity: string;\n  notifications: string;\n  sso: string;\n\n  constructor(data: any = null) {\n    super(data);\n\n    if (data == null) {\n      return;\n    }\n\n    this.vault = this.getResponseProperty(\"Vault\");\n    this.api = this.getResponseProperty(\"Api\");\n    this.identity = this.getResponseProperty(\"Identity\");\n    this.notifications = this.getResponseProperty(\"Notifications\");\n    this.sso = this.getResponseProperty(\"Sso\");\n  }\n}\n\nexport class ThirdPartyServerConfigResponse extends BaseResponse {\n  name: string;\n  url: string;\n\n  constructor(data: any = null) {\n    super(data);\n\n    if (data == null) {\n      return;\n    }\n\n    this.name = this.getResponseProperty(\"Name\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import {\n  ServerConfigData,\n  ThirdPartyServerConfigData,\n  EnvironmentServerConfigData,\n} from \"../../models/data/server-config.data\";\n\nconst dayInMilliseconds = 24 * 3600 * 1000;\nconst eighteenHoursInMilliseconds = 18 * 3600 * 1000;\n\nexport class ServerConfig {\n  version: string;\n  gitHash: string;\n  server?: ThirdPartyServerConfigData;\n  environment?: EnvironmentServerConfigData;\n  utcDate: Date;\n\n  constructor(serverConfigData: ServerConfigData) {\n    this.version = serverConfigData.version;\n    this.gitHash = serverConfigData.gitHash;\n    this.server = serverConfigData.server;\n    this.utcDate = new Date(serverConfigData.utcDate);\n    this.environment = serverConfigData.environment;\n\n    if (this.server?.name == null && this.server?.url == null) {\n      this.server = null;\n    }\n  }\n\n  private getAgeInMilliseconds(): number {\n    return new Date().getTime() - this.utcDate?.getTime();\n  }\n\n  isValid(): boolean {\n    return this.getAgeInMilliseconds() <= dayInMilliseconds;\n  }\n\n  expiresSoon(): boolean {\n    return this.getAgeInMilliseconds() >= eighteenHoursInMilliseconds;\n  }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EFFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptedOrganizationKeyData } from \"../data/encrypted-organization-key.data\";\n\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport abstract class BaseEncryptedOrganizationKey {\n  decrypt: (cryptoService: CryptoService) => Promise<SymmetricCryptoKey>;\n\n  static fromData(data: EncryptedOrganizationKeyData) {\n    switch (data.type) {\n      case \"organization\":\n        return new EncryptedOrganizationKey(data.key);\n\n      case \"provider\":\n        return new ProviderEncryptedOrganizationKey(data.key, data.providerId);\n\n      default:\n        return null;\n    }\n  }\n}\n\nexport class EncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const decValue = await cryptoService.rsaDecrypt(this.key);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"organization\",\n      key: this.key,\n    };\n  }\n}\n\nexport class ProviderEncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string, private providerId: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const providerKey = await cryptoService.getProviderKey(this.providerId);\n    const decValue = await cryptoService.decryptToBytes(new EncString(this.key), providerKey);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"provider\",\n      key: this.key,\n      providerId: this.providerId,\n    };\n  }\n}\n","import * as bigInt from \"big-integer\";\n\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EFFLongWordList } from \"../misc/wordlist\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encrypted-organization-key.data\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { BaseEncryptedOrganizationKey } from \"../models/domain/encrypted-organization-key\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { ProfileOrganizationResponse } from \"../models/response/profile-organization.response\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profile-provider-organization.response\";\nimport { ProfileProviderResponse } from \"../models/response/profile-provider.response\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private encryptService: EncryptService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[] = [],\n    providerOrgs: ProfileProviderOrganizationResponse[] = []\n  ): Promise<void> {\n    const encOrgKeyData: { [orgId: string]: EncryptedOrganizationKeyData } = {};\n\n    orgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"organization\",\n        key: org.key,\n      };\n    });\n\n    providerOrgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"provider\",\n        providerId: org.providerId,\n        key: org.key,\n      };\n    });\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(encOrgKeyData);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    return this.getEncKeyHelper(key);\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const result: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeyData = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeyData == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId of Object.keys(encOrgKeyData)) {\n      if (result.has(orgId)) {\n        continue;\n      }\n\n      const encOrgKey = BaseEncryptedOrganizationKey.fromData(encOrgKeyData[orgId]);\n      const decOrgKey = await encOrgKey.decrypt(this);\n      result.set(orgId, decOrgKey);\n\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(result);\n    }\n\n    return result;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      // eslint-disable-next-line\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfIterations == null) {\n        kdfIterations = 5000;\n      } else if (kdfIterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfIterations);\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForUserEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encrypt\n   */\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.encrypt(plainValue, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encryptToBytes\n   */\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    key = await this.getKeyForUserEncryption(key);\n    return this.encryptService.encryptToBytes(plainValue, key);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64: // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForUserEncryption(key);\n    return this.encryptService.decryptToBytes(encString, keyForEnc);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToUtf8\n   */\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.decryptToUtf8(encString, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptFromBytes(encBuffer: EncArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuffer == null) {\n      throw new Error(\"No buffer provided for decryption.\");\n    }\n\n    key = await this.getKeyForUserEncryption(key);\n\n    return this.encryptService.decryptToBytes(encBuffer, key);\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKeyHelper(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // ---HELPERS---\n\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  async getKeyForUserEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    // Legacy support: encryption used to be done with the user key (derived from master password).\n    // Users who have not migrated will have a null encKey and must use the user key instead.\n    return await this.getKey();\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy = 64) {\n    const entropyPerWord = Math.log(EFFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EFFLongWordList.length);\n      hashNumber = hashNumber.divide(EFFLongWordList.length);\n      phrase.push(EFFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n\n  private async getEncKeyHelper(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n}\n","import { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","import { CryptoFunctionService } from \"../../abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"../../abstractions/encrypt.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Utils } from \"../../misc/utils\";\nimport { EncArrayBuffer } from \"../../models/domain/enc-array-buffer\";\nimport { EncString } from \"../../models/domain/enc-string\";\nimport { EncryptedObject } from \"../../models/domain/encrypted-object\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\n\nexport class EncryptServiceImplementation implements EncryptService {\n  constructor(\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected logMacFailures: boolean\n  ) {}\n\n  async encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async decryptToUtf8(encString: EncString, key: SymmetricCryptoKey): Promise<string> {\n    if (key == null) {\n      throw new Error(\"No key provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encString);\n\n    if (key.macKey != null && encString?.mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (key.encType !== encString.encryptionType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  async decryptToBytes(encThing: IEncrypted, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (encThing == null) {\n      throw new Error(\"Nothing provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encThing);\n\n    if (key.macKey != null && encThing.macBytes == null) {\n      return null;\n    }\n\n    if (key.encType !== encThing.encryptionType) {\n      return null;\n    }\n\n    if (key.macKey != null && encThing.macBytes != null) {\n      const macData = new Uint8Array(encThing.ivBytes.byteLength + encThing.dataBytes.byteLength);\n      macData.set(new Uint8Array(encThing.ivBytes), 0);\n      macData.set(new Uint8Array(encThing.dataBytes), encThing.ivBytes.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        key.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(encThing.macBytes, computedMac);\n      if (!macsMatch) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    const result = await this.cryptoFunctionService.aesDecrypt(\n      encThing.dataBytes,\n      encThing.ivBytes,\n      key.encKey\n    );\n\n    return result ?? null;\n  }\n\n  async decryptItems<T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ): Promise<T[]> {\n    if (items == null || items.length < 1) {\n      return [];\n    }\n\n    return await Promise.all(items.map((item) => item.decrypt(key)));\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = key;\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private logMacFailed(msg: string) {\n    if (this.logMacFailures) {\n      this.logService.error(msg);\n    }\n  }\n\n  /**\n   * Transform into new key for the old encrypt-then-mac scheme if required, otherwise return the current key unchanged\n   * @param encThing The encrypted object (e.g. encString or encArrayBuffer) that you want to decrypt\n   */\n  resolveLegacyKey(key: SymmetricCryptoKey, encThing: IEncrypted): SymmetricCryptoKey {\n    if (\n      encThing.encryptionType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      return new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n    }\n\n    return key;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Cipher } from \"../../models/domain/cipher\";\nimport { CipherView } from \"../../models/view/cipher.view\";\n\nimport { InitializerKey } from \"./initializer-key\";\n\n/**\n * Internal reference of classes so we can reconstruct objects properly.\n * Each entry should be keyed using the Decryptable.initializerKey property\n */\nconst classInitializers: Record<InitializerKey, (obj: any) => any> = {\n  [InitializerKey.Cipher]: Cipher.fromJSON,\n  [InitializerKey.CipherView]: CipherView.fromJSON,\n};\n\nexport function getClassInitializer<T extends InitializerMetadata>(\n  className: InitializerKey\n): (obj: Jsonify<T>) => T {\n  return classInitializers[className];\n}\n","import { defaultIfEmpty, filter, firstValueFrom, fromEvent, map, Subject, takeUntil } from \"rxjs\";\nimport { Jsonify } from \"type-fest\";\n\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Utils } from \"../../misc/utils\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\n\nimport { EncryptServiceImplementation } from \"./encrypt.service.implementation\";\nimport { getClassInitializer } from \"./get-class-initializer\";\n\n// TTL (time to live) is not strictly required but avoids tying up memory resources if inactive\nconst workerTTL = 3 * 60000; // 3 minutes\n\nexport class MultithreadEncryptServiceImplementation extends EncryptServiceImplementation {\n  private worker: Worker;\n  private timeout: any;\n\n  private clear$ = new Subject<void>();\n\n  /**\n   * Sends items to a web worker to decrypt them.\n   * This utilises multithreading to decrypt items faster without interrupting other operations (e.g. updating UI).\n   */\n  async decryptItems<T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ): Promise<T[]> {\n    if (items == null || items.length < 1) {\n      return [];\n    }\n\n    this.logService.info(\"Starting decryption using multithreading\");\n\n    this.worker ??= new Worker(\n      new URL(\n        /* webpackChunkName: 'encrypt-worker' */\n        \"@bitwarden/common/services/cryptography/encrypt.worker.ts\",\n        import.meta.url\n      )\n    );\n\n    this.restartTimeout();\n\n    const request = {\n      id: Utils.newGuid(),\n      items: items,\n      key: key,\n    };\n\n    this.worker.postMessage(JSON.stringify(request));\n\n    return await firstValueFrom(\n      fromEvent(this.worker, \"message\").pipe(\n        filter((response: MessageEvent) => response.data?.id === request.id),\n        map((response) => JSON.parse(response.data.items)),\n        map((items) =>\n          items.map((jsonItem: Jsonify<T>) => {\n            const initializer = getClassInitializer<T>(jsonItem.initializerKey);\n            return initializer(jsonItem);\n          })\n        ),\n        takeUntil(this.clear$),\n        defaultIfEmpty([])\n      )\n    );\n  }\n\n  private clear() {\n    this.clear$.next();\n    this.worker?.terminate();\n    this.worker = null;\n    this.clearTimeout();\n  }\n\n  private restartTimeout() {\n    this.clearTimeout();\n    this.timeout = setTimeout(() => this.clear(), workerTTL);\n  }\n\n  private clearTimeout() {\n    if (this.timeout != null) {\n      clearTimeout(this.timeout);\n    }\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/event.view\";\n\nexport class EventExport {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n  installationId: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n    this.installationId = event.installationId;\n  }\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","import { LogService } from \"../abstractions/log.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    // eslint-disable-next-line\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\n\nexport class BitwardenFileUploadService {\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../keys.request\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","import { LoginService as LoginServiceAbstraction } from \"../abstractions/login.service\";\nimport { StateService } from \"../abstractions/state.service\";\n\nexport class LoginService implements LoginServiceAbstraction {\n  private _email: string;\n  private _rememberEmail: boolean;\n\n  constructor(private stateService: StateService) {}\n\n  getEmail() {\n    return this._email;\n  }\n\n  getRememberEmail() {\n    return this._rememberEmail;\n  }\n\n  setEmail(value: string) {\n    this._email = value;\n  }\n\n  setRememberEmail(value: boolean) {\n    this._rememberEmail = value;\n  }\n\n  clearValues() {\n    this._email = null;\n    this._rememberEmail = null;\n  }\n\n  async saveEmailSettings() {\n    await this.stateService.setRememberedEmail(this._rememberEmail ? this._email : null);\n    this.clearValues();\n  }\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../../../models/api/permissions.api\";\nimport { BaseResponse } from \"../../../models/response/base.response\";\nimport { SelectionReadOnlyResponse } from \"../../../models/response/selection-read-only.response\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  collections: SelectionReadOnlyResponse[] = [];\n  groups: string[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups;\n    }\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","export class OrganizationUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export enum SsoType {\n  None = 0,\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nexport enum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nexport enum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n}\n\nexport enum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nexport enum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class OrganizationApiKeyInformationResponse extends BaseResponse {\n  keyType: OrganizationApiKeyType;\n\n  constructor(response: any) {\n    super(response);\n    this.keyType = this.getResponseProperty(\"KeyType\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { KeysResponse } from \"./keys.response\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { PlanResponse } from \"./plan.response\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  identifier: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { OrganizationResponse } from \"./organization.response\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscription.response\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { BaseResponse } from \"../response/base.response\";\nimport { SsoConfigView } from \"../view/sso-config.view\";\n\nexport class SsoConfigApi extends BaseResponse {\n  static fromView(view: SsoConfigView, api = new SsoConfigApi()) {\n    api.configType = view.configType;\n\n    api.keyConnectorEnabled = view.keyConnectorEnabled;\n    api.keyConnectorUrl = view.keyConnectorUrl;\n\n    if (api.configType === SsoType.OpenIdConnect) {\n      api.authority = view.openId.authority;\n      api.clientId = view.openId.clientId;\n      api.clientSecret = view.openId.clientSecret;\n      api.metadataAddress = view.openId.metadataAddress;\n      api.redirectBehavior = view.openId.redirectBehavior;\n      api.getClaimsFromUserInfoEndpoint = view.openId.getClaimsFromUserInfoEndpoint;\n      api.additionalScopes = view.openId.additionalScopes;\n      api.additionalUserIdClaimTypes = view.openId.additionalUserIdClaimTypes;\n      api.additionalEmailClaimTypes = view.openId.additionalEmailClaimTypes;\n      api.additionalNameClaimTypes = view.openId.additionalNameClaimTypes;\n      api.acrValues = view.openId.acrValues;\n      api.expectedReturnAcrValue = view.openId.expectedReturnAcrValue;\n    } else if (api.configType === SsoType.Saml2) {\n      api.spNameIdFormat = view.saml.spNameIdFormat;\n      api.spOutboundSigningAlgorithm = view.saml.spOutboundSigningAlgorithm;\n      api.spSigningBehavior = view.saml.spSigningBehavior;\n      api.spMinIncomingSigningAlgorithm = view.saml.spMinIncomingSigningAlgorithm;\n      api.spWantAssertionsSigned = view.saml.spWantAssertionsSigned;\n      api.spValidateCertificates = view.saml.spValidateCertificates;\n\n      api.idpEntityId = view.saml.idpEntityId;\n      api.idpBindingType = view.saml.idpBindingType;\n      api.idpSingleSignOnServiceUrl = view.saml.idpSingleSignOnServiceUrl;\n      api.idpSingleLogoutServiceUrl = view.saml.idpSingleLogoutServiceUrl;\n      api.idpX509PublicCert = view.saml.idpX509PublicCert;\n      api.idpOutboundSigningAlgorithm = view.saml.idpOutboundSigningAlgorithm;\n      api.idpAllowUnsolicitedAuthnResponse = view.saml.idpAllowUnsolicitedAuthnResponse;\n      api.idpWantAuthnRequestsSigned = view.saml.idpWantAuthnRequestsSigned;\n\n      // Value is inverted in the api model (disable instead of allow)\n      api.idpDisableOutboundLogoutRequests = !view.saml.idpAllowOutboundLogoutRequests;\n    }\n\n    return api;\n  }\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: string;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { SsoConfigApi } from \"../../api/sso-config.api\";\nimport { BaseResponse } from \"../base.response\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  identifier: string;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.data =\n      this.getResponseProperty(\"Data\") != null\n        ? new SsoConfigApi(this.getResponseProperty(\"Data\"))\n        : null;\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import Domain from \"./domain-base\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType = \"\";\n  minLength = 0;\n  useUppercase = false;\n  useLowercase = false;\n  useNumbers = false;\n  numberCount = 0;\n  useSpecial = false;\n  specialCount = 0;\n  minNumberWords = 0;\n  capitalize = false;\n  includeNumber = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"../abstractions/passwordGeneration.service\";\nimport { PolicyService } from \"../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { PolicyType } from \"../enums/policyType\";\nimport { EFFLongWordList } from \"../misc/wordlist\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { PasswordGeneratorOptions } from \"../models/domain/password-generator-options\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/password-generator-policy-options\";\n\nconst DefaultOptions: PasswordGeneratorOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: PasswordGeneratorOptions): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: PasswordGeneratorOptions): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EFFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EFFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EFFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: PasswordGeneratorOptions\n  ): Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies = await this.policyService?.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: PasswordGeneratorOptions) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<void> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    await this.stateService.setDecryptedPasswordGenerationHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(\n    options: PasswordGeneratorOptions,\n    enforcedPolicyOptions: PasswordGeneratorPolicyOptions\n  ) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","import Domain from \"./domain-base\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled = false;\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1, // Not used, compile-time support only\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/provider.data\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","import * as lunr from \"lunr\";\n\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  private static registeredPipeline = false;\n\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private readonly immediateSearchLocales: string[] = [\"zh-CN\", \"zh-TW\", \"ja\", \"ko\", \"vi\"];\n  private readonly defaultSearchableMinLength: number = 2;\n  private searchableMinLength: number = this.defaultSearchableMinLength;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    this.i18nService.locale$.subscribe((locale) => {\n      if (this.immediateSearchLocales.indexOf(locale) !== -1) {\n        this.searchableMinLength = 1;\n      } else {\n        this.searchableMinLength = this.defaultSearchableMinLength;\n      }\n    });\n\n    // Currently have to ensure this is only done a single time. Lunr allows you to register a function\n    // multiple times but they will add a warning message to the console. The way they do that breaks when ran on a service worker.\n    if (!SearchService.registeredPipeline) {\n      SearchService.registeredPipeline = true;\n      //register lunr pipeline function\n      lunr.Pipeline.registerFunction(this.normalizeAccentsPipelineFunction, \"normalizeAccents\");\n    }\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    query = SearchService.normalizeSearchQuery(query);\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.pipeline.add(this.normalizeAccentsPipelineFunction);\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", {\n      boost: 10,\n    });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.info(\"Finished search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted = false) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        c.login &&\n        c.login.hasUris &&\n        c.login.uris.some((loginUri) => loginUri?.uri?.toLowerCase().indexOf(query) > -1)\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLocaleLowerCase());\n    if (query === null) {\n      return sends;\n    }\n    const sendsMatched: SendView[] = [];\n    const lowPriorityMatched: SendView[] = [];\n    sends.forEach((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        sendsMatched.push(s);\n      } else if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        lowPriorityMatched.push(s);\n      } else if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      }\n    });\n    return sendsMatched.concat(lowPriorityMatched);\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n\n  private normalizeAccentsPipelineFunction(token: lunr.Token): any {\n    const searchableFields = [\"name\", \"login.username\", \"subtitle\", \"notes\"];\n    const fields = (token as any).metadata[\"fields\"];\n    const checkFields = fields.every((i: any) => searchableFields.includes(i));\n\n    if (checkFields) {\n      return SearchService.normalizeSearchQuery(token.toString());\n    }\n\n    return token;\n  }\n\n  // Remove accents/diacritics characters from text. This regex is equivalent to the Diacritic unicode property escape, i.e. it will match all diacritic characters.\n  static normalizeSearchQuery(query: string): string {\n    return query?.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SendData } from \"../data/send.data\";\nimport { SendView } from \"../view/send.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SendFile } from \"./send-file\";\nimport { SendText } from \"./send-text\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      [\"id\", \"accessId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    const cryptoService = Utils.getContainerService().getCryptoService();\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","import { StateService } from \"../abstractions/state.service\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\nimport { Utils } from \"../misc/utils\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async setTwoFactorToken(tokenResponse: IdentityTokenResponse): Promise<any> {\n    return await this.stateService.setTwoFactorToken(tokenResponse.twoFactorToken);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","import { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { EventData } from \"../models/data/event.data\";\nimport { FolderData } from \"../models/data/folder.data\";\nimport { OrganizationData } from \"../models/data/organization.data\";\nimport { PolicyData } from \"../models/data/policy.data\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { SendData } from \"../models/data/send.data\";\nimport {\n  Account,\n  AccountSettings,\n  AccountSettingsSettings,\n  EncryptionPair,\n} from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { GlobalState } from \"../models/domain/global-state\";\nimport { StorageOptions } from \"../models/domain/storage-options\";\n\nimport { TokenService } from \"./token.service\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n        case StateVersion.Four: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom4To5(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Five);\n          break;\n        }\n        case StateVersion.Five: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom5To6(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Six);\n          break;\n        }\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: Object.assign(new EncryptionPair<string, EncString>(), {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      }),\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings:\n        userId == null\n          ? null\n          : await this.get<AccountSettingsSettings>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateAccountFrom4To5(account: TAccount): Promise<TAccount> {\n    const encryptedOrgKeys = account.keys?.organizationKeys?.encrypted;\n    if (encryptedOrgKeys != null) {\n      for (const [orgId, encKey] of Object.entries(encryptedOrgKeys)) {\n        encryptedOrgKeys[orgId] = {\n          type: \"organization\",\n          key: encKey as unknown as string, // Account v4 does not reflect the current account model so we have to cast\n        };\n      }\n    }\n\n    return account;\n  }\n\n  protected async migrateAccountFrom5To6(account: TAccount): Promise<TAccount> {\n    delete (account as any).keys?.legacyEtmKey;\n    return account;\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n\n  protected async setCurrentStateVersion(newVersion: StateVersion): Promise<void> {\n    const globals = await this.getGlobals();\n    globals.stateVersion = newVersion;\n    await this.set(keys.global, globals);\n  }\n\n  protected async getAuthenticatedAccounts(): Promise<TAccount[]> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    return Promise.all(authenticatedUserIds.map((id) => this.get<TAccount>(id)));\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\nimport { ProfileOrganizationResponse } from \"../response/profile-organization.response\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useCustomPermissions: boolean;\n  useResetPassword: boolean;\n  useSecretsManager: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useScim = response.useScim;\n    this.useCustomPermissions = response.useCustomPermissions;\n    this.useResetPassword = response.useResetPassword;\n    this.useSecretsManager = response.useSecretsManager;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = response.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = response.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = response.familySponsorshipToDelete;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CollectionService } from \"../../abstractions/collection.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { FolderApiServiceAbstraction } from \"../../abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { InternalOrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { InternalPolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { ProviderService } from \"../../abstractions/provider.service\";\nimport { SendService } from \"../../abstractions/send.service\";\nimport { SettingsService } from \"../../abstractions/settings.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { SyncService as SyncServiceAbstraction } from \"../../abstractions/sync/sync.service.abstraction\";\nimport { sequentialize } from \"../../misc/sequentialize\";\nimport { CipherData } from \"../../models/data/cipher.data\";\nimport { CollectionData } from \"../../models/data/collection.data\";\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { OrganizationData } from \"../../models/data/organization.data\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { ProviderData } from \"../../models/data/provider.data\";\nimport { SendData } from \"../../models/data/send.data\";\nimport { CipherResponse } from \"../../models/response/cipher.response\";\nimport { CollectionDetailsResponse } from \"../../models/response/collection.response\";\nimport { DomainsResponse } from \"../../models/response/domains.response\";\nimport { FolderResponse } from \"../../models/response/folder.response\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../../models/response/notification.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\nimport { ProfileResponse } from \"../../models/response/profile.response\";\nimport { SendResponse } from \"../../models/response/send.response\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress = false;\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: InternalFolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: InternalPolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private providerService: ProviderService,\n    private folderApiService: FolderApiServiceAbstraction,\n    private organizationService: InternalOrganizationService,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  @sequentialize(() => \"fullSync\")\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(response.ciphers);\n      await this.syncSends(response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.folderApiService.get(notification.id);\n          if (remoteFolder != null) {\n            await this.folderService.upsert(new FolderData(remoteFolder));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getFullCipherDetails(notification.id);\n          if (remoteCipher != null) {\n            await this.cipherService.upsert(new CipherData(remoteCipher));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            await this.sendService.upsert(new SendData(remoteSend));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setHasPremiumPersonally(response.premiumPersonally);\n    await this.stateService.setHasPremiumFromOrganization(response.premiumFromOrganization);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await this.organizationService.replace(organizations);\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class AnonAddyForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    if (options.anonaddy?.domain == null || options.anonaddy.domain === \"\") {\n      throw \"Invalid AnonAddy domain.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://app.anonaddy.com/api/v1/aliases\";\n    requestInit.body = JSON.stringify({\n      domain: options.anonaddy.domain,\n      description:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.data?.email;\n    }\n    if (response.status === 401) {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    throw \"Unknown AnonAddy error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class DuckDuckGoForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://quack.duckduckgo.com/api/email/addresses\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      if (json.address) {\n        return `${json.address}@duck.com`;\n      }\n    } else if (response.status === 401) {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    throw \"Unknown DuckDuckGo error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class FastmailForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Fastmail API token.\";\n    }\n\n    const accountId = await this.getAccountId(apiService, options);\n    if (accountId == null || accountId === \"\") {\n      throw \"Unable to obtain Fastmail masked email account ID.\";\n    }\n\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://api.fastmail.com/jmap/api/\";\n    requestInit.body = JSON.stringify({\n      using: [\"https://www.fastmail.com/dev/maskedemail\", \"urn:ietf:params:jmap:core\"],\n      methodCalls: [\n        [\n          \"MaskedEmail/set\",\n          {\n            accountId: accountId,\n            create: {\n              \"new-masked-email\": {\n                state: \"enabled\",\n                description: \"\",\n                url: options.website,\n                emailPrefix: options.fastmail.prefix,\n              },\n            },\n          },\n          \"0\",\n        ],\n      ],\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (\n        json.methodResponses != null &&\n        json.methodResponses.length > 0 &&\n        json.methodResponses[0].length > 0\n      ) {\n        if (json.methodResponses[0][0] === \"MaskedEmail/set\") {\n          if (json.methodResponses[0][1]?.created?.[\"new-masked-email\"] != null) {\n            return json.methodResponses[0][1]?.created?.[\"new-masked-email\"]?.email;\n          }\n          if (json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"] != null) {\n            throw (\n              \"Fastmail error: \" +\n              json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"]?.description\n            );\n          }\n        } else if (json.methodResponses[0][0] === \"error\") {\n          throw \"Fastmail error: \" + json.methodResponses[0][1]?.description;\n        }\n      }\n    }\n    if (response.status === 401 || response.status === 403) {\n      throw \"Invalid Fastmail API token.\";\n    }\n    throw \"Unknown Fastmail error occurred.\";\n  }\n\n  private async getAccountId(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      method: \"GET\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n      }),\n    };\n    const url = \"https://api.fastmail.com/.well-known/jmap\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (json.primaryAccounts != null) {\n        return json.primaryAccounts[\"https://www.fastmail.com/dev/maskedemail\"];\n      }\n    }\n    return null;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class FirefoxRelayForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Token \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://relay.firefox.com/api/v1/relayaddresses/\";\n    requestInit.body = JSON.stringify({\n      enabled: true,\n      generated_for: options.website,\n      description:\n        (options.website != null ? options.website + \" - \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.full_address;\n    }\n    if (response.status === 401) {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    throw \"Unknown Firefox Relay error occurred.\";\n  }\n}\n","export class ForwarderOptions {\n  apiKey: string;\n  website: string;\n  fastmail = new FastmailForwarderOptions();\n  anonaddy = new AnonAddyForwarderOptions();\n}\n\nexport class FastmailForwarderOptions {\n  prefix: string;\n}\n\nexport class AnonAddyForwarderOptions {\n  domain: string;\n}\n","import { ApiService } from \"../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class SimpleLoginForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authentication: options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    let url = \"https://app.simplelogin.io/api/alias/random/new\";\n    if (options.website != null) {\n      url += \"?hostname=\" + options.website;\n    }\n    requestInit.body = JSON.stringify({\n      note:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json.alias;\n    }\n    if (response.status === 401) {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    try {\n      const json = await response.json();\n      if (json?.error != null) {\n        throw \"SimpleLogin error:\" + json.error;\n      }\n    } catch {\n      // Do nothing...\n    }\n    throw \"Unknown SimpleLogin error occurred.\";\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { UsernameGenerationService as BaseUsernameGenerationService } from \"../abstractions/usernameGeneration.service\";\nimport { AnonAddyForwarder } from \"../email-forwarders/anon-addy-forwarder\";\nimport { DuckDuckGoForwarder } from \"../email-forwarders/duck-duck-go-forwarder\";\nimport { FastmailForwarder } from \"../email-forwarders/fastmail-forwarder\";\nimport { FirefoxRelayForwarder } from \"../email-forwarders/firefox-relay-forwarder\";\nimport { Forwarder } from \"../email-forwarders/forwarder\";\nimport { ForwarderOptions } from \"../email-forwarders/forwarder-options\";\nimport { SimpleLoginForwarder } from \"../email-forwarders/simple-login-forwarder\";\nimport { EFFLongWordList } from \"../misc/wordlist\";\n\nconst DefaultOptions = {\n  type: \"word\",\n  wordCapitalize: true,\n  wordIncludeNumber: true,\n  subaddressType: \"random\",\n  catchallType: \"random\",\n  forwardedService: \"\",\n  forwardedAnonAddyDomain: \"anonaddy.me\",\n};\n\nexport class UsernameGenerationService implements BaseUsernameGenerationService {\n  constructor(\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  generateUsername(options: any): Promise<string> {\n    if (options.type === \"catchall\") {\n      return this.generateCatchall(options);\n    } else if (options.type === \"subaddress\") {\n      return this.generateSubaddress(options);\n    } else if (options.type === \"forwarded\") {\n      return this.generateForwarded(options);\n    } else {\n      return this.generateWord(options);\n    }\n  }\n\n  async generateWord(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.wordCapitalize == null) {\n      o.wordCapitalize = true;\n    }\n    if (o.wordIncludeNumber == null) {\n      o.wordIncludeNumber = true;\n    }\n\n    const wordIndex = await this.cryptoService.randomNumber(0, EFFLongWordList.length - 1);\n    let word = EFFLongWordList[wordIndex];\n    if (o.wordCapitalize) {\n      word = word.charAt(0).toUpperCase() + word.slice(1);\n    }\n    if (o.wordIncludeNumber) {\n      const num = await this.cryptoService.randomNumber(1, 9999);\n      word = word + this.zeroPad(num.toString(), 4);\n    }\n    return word;\n  }\n\n  async generateSubaddress(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    const subaddressEmail = o.subaddressEmail;\n    if (subaddressEmail == null || subaddressEmail.length < 3) {\n      return o.subaddressEmail;\n    }\n    const atIndex = subaddressEmail.indexOf(\"@\");\n    if (atIndex < 1 || atIndex >= subaddressEmail.length - 1) {\n      return subaddressEmail;\n    }\n    if (o.subaddressType == null) {\n      o.subaddressType = \"random\";\n    }\n\n    const emailBeginning = subaddressEmail.substr(0, atIndex);\n    const emailEnding = subaddressEmail.substr(atIndex + 1, subaddressEmail.length);\n\n    let subaddressString = \"\";\n    if (o.subaddressType === \"random\") {\n      subaddressString = await this.randomString(8);\n    } else if (o.subaddressType === \"website-name\") {\n      subaddressString = o.website;\n    }\n    return emailBeginning + \"+\" + subaddressString + \"@\" + emailEnding;\n  }\n\n  async generateCatchall(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.catchallDomain == null || o.catchallDomain === \"\") {\n      return null;\n    }\n    if (o.catchallType == null) {\n      o.catchallType = \"random\";\n    }\n\n    let startString = \"\";\n    if (o.catchallType === \"random\") {\n      startString = await this.randomString(8);\n    } else if (o.catchallType === \"website-name\") {\n      startString = o.website;\n    }\n    return startString + \"@\" + o.catchallDomain;\n  }\n\n  async generateForwarded(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.forwardedService == null) {\n      return null;\n    }\n\n    let forwarder: Forwarder = null;\n    const forwarderOptions = new ForwarderOptions();\n    forwarderOptions.website = o.website;\n    if (o.forwardedService === \"simplelogin\") {\n      forwarder = new SimpleLoginForwarder();\n      forwarderOptions.apiKey = o.forwardedSimpleLoginApiKey;\n    } else if (o.forwardedService === \"anonaddy\") {\n      forwarder = new AnonAddyForwarder();\n      forwarderOptions.apiKey = o.forwardedAnonAddyApiToken;\n      forwarderOptions.anonaddy.domain = o.forwardedAnonAddyDomain;\n    } else if (o.forwardedService === \"firefoxrelay\") {\n      forwarder = new FirefoxRelayForwarder();\n      forwarderOptions.apiKey = o.forwardedFirefoxApiToken;\n    } else if (o.forwardedService === \"fastmail\") {\n      forwarder = new FastmailForwarder();\n      forwarderOptions.apiKey = o.forwardedFastmailApiToken;\n    } else if (o.forwardedService === \"duckduckgo\") {\n      forwarder = new DuckDuckGoForwarder();\n      forwarderOptions.apiKey = o.forwardedDuckDuckGoToken;\n    }\n\n    if (forwarder == null) {\n      return null;\n    }\n\n    return forwarder.generate(this.apiService, forwarderOptions);\n  }\n\n  async getOptions(): Promise<any> {\n    let options = await this.stateService.getUsernameGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setUsernameGenerationOptions(options);\n    return options;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setUsernameGenerationOptions(options);\n  }\n\n  private async randomString(length: number) {\n    let str = \"\";\n    const charSet = \"abcdefghijklmnopqrstuvwxyz1234567890\";\n    for (let i = 0; i < length; i++) {\n      const randomCharIndex = await this.cryptoService.randomNumber(0, charSet.length - 1);\n      str += charSet.charAt(randomCharIndex);\n    }\n    return str;\n  }\n\n  // ref: https://stackoverflow.com/a/10073788\n  private zeroPad(number: string, width: number) {\n    return number.length >= width\n      ? number\n      : new Array(width - number.length + 1).join(\"0\") + number;\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService as BaseBroadcasterService } from \"@bitwarden/common/services/broadcaster.service\";\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {}\n","import {\n  BroadcasterService as BroadcasterServiceAbstraction,\n  MessageBase,\n} from \"../abstractions/broadcaster.service\";\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n  subscribers: Map<string, (message: MessageBase) => void> = new Map<\n    string,\n    (message: MessageBase) => void\n  >();\n\n  send(message: MessageBase, id?: string) {\n    if (id != null) {\n      if (this.subscribers.has(id)) {\n        this.subscribers.get(id)(message);\n      }\n      return;\n    }\n\n    this.subscribers.forEach((value) => {\n      value(message);\n    });\n  }\n\n  subscribe(id: string, messageCallback: (message: MessageBase) => void) {\n    this.subscribers.set(id, messageCallback);\n  }\n\n  unsubscribe(id: string) {\n    if (this.subscribers.has(id)) {\n      this.subscribers.delete(id);\n    }\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { ModalRef } from \"./modal/modal.ref\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationComponent for any other situation where you need to verify the user's identity.\n */\n@Directive()\nexport class PasswordRepromptComponent {\n  showPassword = false;\n  masterPassword = \"\";\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async submit() {\n    if (!(await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\nimport { ModalService } from \"./modal.service\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationService for any other situation where you need to verify the user's identity.\n */\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n  protected component = PasswordRepromptComponent;\n\n  constructor(\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  protectedFields() {\n    return [\"TOTP\", \"Password\", \"H_Field\", \"Card Number\", \"Security Code\"];\n  }\n\n  async showPasswordPrompt() {\n    if (!(await this.enabled())) {\n      return true;\n    }\n\n    const ref = this.modalService.open(this.component, { allowMultipleModals: true });\n\n    if (ref == null) {\n      return false;\n    }\n\n    const result = await ref.onClosedPromise();\n    return result === true;\n  }\n\n  async enabled() {\n    return !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport class ThemeBuilder implements Theme {\n  get effectiveTheme(): ThemeType {\n    return this.configuredTheme != ThemeType.System ? this.configuredTheme : this.systemTheme;\n  }\n\n  constructor(readonly configuredTheme: ThemeType, readonly systemTheme: ThemeType) {}\n\n  updateSystemTheme(systemTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(this.configuredTheme, systemTheme);\n  }\n\n  updateConfiguredTheme(configuredTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(configuredTheme, this.systemTheme);\n  }\n}\n","import { DOCUMENT } from \"@angular/common\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, filter, fromEvent, Observable } from \"rxjs\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { WINDOW } from \"../injection-tokens\";\n\nimport { Theme } from \"./theme\";\nimport { ThemeBuilder } from \"./themeBuilder\";\nimport { AbstractThemingService } from \"./theming.service.abstraction\";\n\n@Injectable()\nexport class ThemingService implements AbstractThemingService {\n  private _theme = new BehaviorSubject<ThemeBuilder | null>(null);\n  theme$: Observable<Theme> = this._theme.pipe(filter((x) => x !== null));\n\n  constructor(\n    private stateService: StateService,\n    @Inject(WINDOW) private window: Window,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.monitorThemeChanges();\n  }\n\n  async monitorThemeChanges(): Promise<void> {\n    this._theme.next(\n      new ThemeBuilder(await this.stateService.getTheme(), await this.getSystemTheme())\n    );\n    this.monitorConfiguredThemeChanges();\n    this.monitorSystemThemeChanges();\n  }\n\n  updateSystemTheme(systemTheme: ThemeType): void {\n    this._theme.next(this._theme.getValue().updateSystemTheme(systemTheme));\n  }\n\n  async updateConfiguredTheme(theme: ThemeType): Promise<void> {\n    await this.stateService.setTheme(theme);\n    this._theme.next(this._theme.getValue().updateConfiguredTheme(theme));\n  }\n\n  protected monitorConfiguredThemeChanges(): void {\n    this.theme$.subscribe((theme: Theme) => {\n      this.document.documentElement.classList.remove(\n        \"theme_\" + ThemeType.Light,\n        \"theme_\" + ThemeType.Dark,\n        \"theme_\" + ThemeType.Nord,\n        \"theme_\" + ThemeType.SolarizedDark\n      );\n      this.document.documentElement.classList.add(\"theme_\" + theme.effectiveTheme);\n    });\n  }\n\n  // We use a media match query for monitoring the system theme on web and browser, but this doesn't work for electron apps on Linux.\n  // In desktop we override these methods to track systemTheme with the electron renderer instead, which works for all OSs.\n  protected async getSystemTheme(): Promise<ThemeType> {\n    return this.window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      ? ThemeType.Dark\n      : ThemeType.Light;\n  }\n\n  protected monitorSystemThemeChanges(): void {\n    fromEvent<MediaQueryListEvent>(\n      this.window.matchMedia(\"(prefers-color-scheme: dark)\"),\n      \"change\"\n    ).subscribe((event) => {\n      this.updateSystemTheme(event.matches ? ThemeType.Dark : ThemeType.Light);\n    });\n  }\n}\n","import { Injector, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { AccountApiService as AccountApiServiceAbstraction } from \"@bitwarden/common/abstractions/account/account-api.service\";\nimport {\n  AccountService as AccountServiceAbstraction,\n  InternalAccountService,\n} from \"@bitwarden/common/abstractions/account/account.service\";\nimport { AnonymousHubService as AnonymousHubServiceAbstraction } from \"@bitwarden/common/abstractions/anonymousHub.service\";\nimport { ApiService as ApiServiceAbstraction } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"@bitwarden/common/abstractions/audit.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService as BroadcasterServiceAbstraction } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService as CipherServiceAbstraction } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"@bitwarden/common/abstractions/collection.service\";\nimport { ConfigApiServiceAbstraction } from \"@bitwarden/common/abstractions/config/config-api.service.abstraction\";\nimport { ConfigServiceAbstraction } from \"@bitwarden/common/abstractions/config/config.service.abstraction\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"@bitwarden/common/abstractions/encrypt.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventCollectionService as EventCollectionServiceAbstraction } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { EventUploadService as EventUploadServiceAbstraction } from \"@bitwarden/common/abstractions/event/event-upload.service\";\nimport { ExportService as ExportServiceAbstraction } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/abstractions/folder/folder-api.service.abstraction\";\nimport {\n  FolderService as FolderServiceAbstraction,\n  InternalFolderService,\n} from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { FormValidationErrorsService as FormValidationErrorsServiceAbstraction } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { LoginService as LoginServiceAbstraction } from \"@bitwarden/common/abstractions/login.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport {\n  InternalOrganizationService,\n  OrganizationService as OrganizationServiceAbstraction,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PasswordGenerationService as PasswordGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport {\n  InternalPolicyService,\n  PolicyService as PolicyServiceAbstraction,\n} from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { ProviderService as ProviderServiceAbstraction } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { SyncService as SyncServiceAbstraction } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { SyncNotifierService as SyncNotifierServiceAbstraction } from \"@bitwarden/common/abstractions/sync/syncNotifier.service.abstraction\";\nimport { TokenService as TokenServiceAbstraction } from \"@bitwarden/common/abstractions/token.service\";\nimport { TotpService as TotpServiceAbstraction } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { UserVerificationApiServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { UsernameGenerationService as UsernameGenerationServiceAbstraction } from \"@bitwarden/common/abstractions/usernameGeneration.service\";\nimport { ValidationService as ValidationServiceAbstraction } from \"@bitwarden/common/abstractions/validation.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { flagEnabled } from \"@bitwarden/common/misc/flags\";\nimport { Account } from \"@bitwarden/common/models/domain/account\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/global-state\";\nimport { AccountApiServiceImplementation } from \"@bitwarden/common/services/account/account-api.service\";\nimport { AccountServiceImplementation } from \"@bitwarden/common/services/account/account.service\";\nimport { AnonymousHubService } from \"@bitwarden/common/services/anonymousHub.service\";\nimport { ApiService } from \"@bitwarden/common/services/api.service\";\nimport { AppIdService } from \"@bitwarden/common/services/appId.service\";\nimport { AuditService } from \"@bitwarden/common/services/audit.service\";\nimport { AuthService } from \"@bitwarden/common/services/auth.service\";\nimport { CipherService } from \"@bitwarden/common/services/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/services/collection.service\";\nimport { ConfigApiService } from \"@bitwarden/common/services/config/config-api.service\";\nimport { ConfigService } from \"@bitwarden/common/services/config/config.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { CryptoService } from \"@bitwarden/common/services/crypto.service\";\nimport { EncryptServiceImplementation } from \"@bitwarden/common/services/cryptography/encrypt.service.implementation\";\nimport { MultithreadEncryptServiceImplementation } from \"@bitwarden/common/services/cryptography/multithread-encrypt.service.implementation\";\nimport { EnvironmentService } from \"@bitwarden/common/services/environment.service\";\nimport { EventCollectionService } from \"@bitwarden/common/services/event/event-collection.service\";\nimport { EventUploadService } from \"@bitwarden/common/services/event/event-upload.service\";\nimport { ExportService } from \"@bitwarden/common/services/export.service\";\nimport { FileUploadService } from \"@bitwarden/common/services/fileUpload.service\";\nimport { FolderApiService } from \"@bitwarden/common/services/folder/folder-api.service\";\nimport { FolderService } from \"@bitwarden/common/services/folder/folder.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/services/formValidationErrors.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/services/keyConnector.service\";\nimport { LoginService } from \"@bitwarden/common/services/login.service\";\nimport { NotificationsService } from \"@bitwarden/common/services/notifications.service\";\nimport { OrganizationUserServiceImplementation } from \"@bitwarden/common/services/organization-user/organization-user.service.implementation\";\nimport { OrganizationApiService } from \"@bitwarden/common/services/organization/organization-api.service\";\nimport { OrganizationService } from \"@bitwarden/common/services/organization/organization.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/services/passwordGeneration.service\";\nimport { PolicyApiService } from \"@bitwarden/common/services/policy/policy-api.service\";\nimport { PolicyService } from \"@bitwarden/common/services/policy/policy.service\";\nimport { ProviderService } from \"@bitwarden/common/services/provider.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\nimport { SendService } from \"@bitwarden/common/services/send.service\";\nimport { SettingsService } from \"@bitwarden/common/services/settings.service\";\nimport { StateService } from \"@bitwarden/common/services/state.service\";\nimport { StateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\nimport { SyncService } from \"@bitwarden/common/services/sync/sync.service\";\nimport { SyncNotifierService } from \"@bitwarden/common/services/sync/syncNotifier.service\";\nimport { TokenService } from \"@bitwarden/common/services/token.service\";\nimport { TotpService } from \"@bitwarden/common/services/totp.service\";\nimport { TwoFactorService } from \"@bitwarden/common/services/twoFactor.service\";\nimport { UserVerificationApiService } from \"@bitwarden/common/services/userVerification/userVerification-api.service\";\nimport { UserVerificationService } from \"@bitwarden/common/services/userVerification/userVerification.service\";\nimport { UsernameGenerationService } from \"@bitwarden/common/services/usernameGeneration.service\";\nimport { ValidationService } from \"@bitwarden/common/services/validation.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeoutSettings.service\";\nimport { WebCryptoFunctionService } from \"@bitwarden/common/services/webCryptoFunction.service\";\n\nimport { AuthGuard } from \"../guards/auth.guard\";\nimport { LockGuard } from \"../guards/lock.guard\";\nimport { UnauthGuard } from \"../guards/unauth.guard\";\n\nimport { BroadcasterService } from \"./broadcaster.service\";\nimport {\n  LOCALES_DIRECTORY,\n  LOCKED_CALLBACK,\n  LOG_MAC_FAILURES,\n  LOGOUT_CALLBACK,\n  MEMORY_STORAGE,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n  SYSTEM_LANGUAGE,\n  WINDOW,\n} from \"./injection-tokens\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./passwordReprompt.service\";\nimport { ThemingService } from \"./theming/theming.service\";\nimport { AbstractThemingService } from \"./theming/theming.service.abstraction\";\n\n@NgModule({\n  declarations: [],\n  providers: [\n    AuthGuard,\n    UnauthGuard,\n    LockGuard,\n    ModalService,\n    { provide: WINDOW, useValue: window },\n    {\n      provide: LOCALE_ID,\n      useFactory: (i18nService: I18nServiceAbstraction) => i18nService.translationLocale,\n      deps: [I18nServiceAbstraction],\n    },\n    {\n      provide: LOCALES_DIRECTORY,\n      useValue: \"./locales\",\n    },\n    {\n      provide: SYSTEM_LANGUAGE,\n      useFactory: (window: Window) => window.navigator.language,\n      deps: [WINDOW],\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: true,\n    },\n    {\n      provide: LOGOUT_CALLBACK,\n      useFactory:\n        (messagingService: MessagingServiceAbstraction) => (expired: boolean, userId?: string) =>\n          messagingService.send(\"logout\", { expired: expired, userId: userId }),\n      deps: [MessagingServiceAbstraction],\n    },\n    {\n      provide: LOCKED_CALLBACK,\n      useValue: null,\n    },\n    {\n      provide: LOG_MAC_FAILURES,\n      useValue: true,\n    },\n    {\n      provide: AppIdServiceAbstraction,\n      useClass: AppIdService,\n      deps: [AbstractStorageService],\n    },\n    {\n      provide: AuditServiceAbstraction,\n      useClass: AuditService,\n      deps: [CryptoFunctionServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useClass: AuthService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        AppIdServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        StateServiceAbstraction,\n        TwoFactorServiceAbstraction,\n        I18nServiceAbstraction,\n      ],\n    },\n    {\n      provide: CipherServiceAbstraction,\n      useFactory: (\n        cryptoService: CryptoServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        fileUploadService: FileUploadServiceAbstraction,\n        i18nService: I18nServiceAbstraction,\n        injector: Injector,\n        logService: LogService,\n        stateService: StateServiceAbstraction,\n        encryptService: EncryptService\n      ) =>\n        new CipherService(\n          cryptoService,\n          settingsService,\n          apiService,\n          fileUploadService,\n          i18nService,\n          () => injector.get(SearchServiceAbstraction),\n          logService,\n          stateService,\n          encryptService\n        ),\n      deps: [\n        CryptoServiceAbstraction,\n        SettingsServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        Injector, // TODO: Get rid of this circular dependency!\n        LogService,\n        StateServiceAbstraction,\n        EncryptService,\n      ],\n    },\n    {\n      provide: FolderServiceAbstraction,\n      useClass: FolderService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: InternalFolderService,\n      useExisting: FolderServiceAbstraction,\n    },\n    {\n      provide: FolderApiServiceAbstraction,\n      useClass: FolderApiService,\n      deps: [FolderServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AccountApiServiceAbstraction,\n      useClass: AccountApiServiceImplementation,\n      deps: [\n        ApiServiceAbstraction,\n        UserVerificationServiceAbstraction,\n        LogService,\n        InternalAccountService,\n      ],\n    },\n    {\n      provide: AccountServiceAbstraction,\n      useClass: AccountServiceImplementation,\n      deps: [MessagingServiceAbstraction, LogService],\n    },\n    {\n      provide: InternalAccountService,\n      useExisting: AccountServiceAbstraction,\n    },\n    { provide: LogService, useFactory: () => new ConsoleLogService(false) },\n    {\n      provide: CollectionServiceAbstraction,\n      useClass: CollectionService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: EnvironmentServiceAbstraction,\n      useClass: EnvironmentService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TotpServiceAbstraction,\n      useClass: TotpService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, StateServiceAbstraction],\n    },\n    { provide: TokenServiceAbstraction, useClass: TokenService, deps: [StateServiceAbstraction] },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        EncryptService,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: PasswordGenerationServiceAbstraction,\n      useClass: PasswordGenerationService,\n      deps: [CryptoServiceAbstraction, PolicyServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: UsernameGenerationServiceAbstraction,\n      useClass: UsernameGenerationService,\n      deps: [CryptoServiceAbstraction, StateServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: ApiServiceAbstraction,\n      useClass: ApiService,\n      deps: [\n        TokenServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        AppIdServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: FileUploadServiceAbstraction,\n      useClass: FileUploadService,\n      deps: [LogService, ApiServiceAbstraction],\n    },\n    {\n      provide: SyncServiceAbstraction,\n      useClass: SyncService,\n      deps: [\n        ApiServiceAbstraction,\n        SettingsServiceAbstraction,\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        CryptoServiceAbstraction,\n        CollectionServiceAbstraction,\n        MessagingServiceAbstraction,\n        PolicyServiceAbstraction,\n        SendServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        ProviderServiceAbstraction,\n        FolderApiServiceAbstraction,\n        OrganizationServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    { provide: BroadcasterServiceAbstraction, useClass: BroadcasterService },\n    {\n      provide: SettingsServiceAbstraction,\n      useClass: SettingsService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultTimeoutSettingsServiceAbstraction,\n      useClass: VaultTimeoutSettingsService,\n      deps: [\n        CryptoServiceAbstraction,\n        TokenServiceAbstraction,\n        PolicyServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: VaultTimeoutServiceAbstraction,\n      useClass: VaultTimeoutService,\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        CollectionServiceAbstraction,\n        CryptoServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        SearchServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n        VaultTimeoutSettingsServiceAbstraction,\n        LOCKED_CALLBACK,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useClass: StateService,\n      deps: [\n        AbstractStorageService,\n        SECURE_STORAGE,\n        MEMORY_STORAGE,\n        LogService,\n        StateMigrationServiceAbstraction,\n        STATE_FACTORY,\n        STATE_SERVICE_USE_CACHE,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    {\n      provide: ExportServiceAbstraction,\n      useClass: ExportService,\n      deps: [\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        ApiServiceAbstraction,\n        CryptoServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n      ],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useClass: SearchService,\n      deps: [CipherServiceAbstraction, LogService, I18nServiceAbstraction],\n    },\n    {\n      provide: NotificationsServiceAbstraction,\n      useClass: NotificationsService,\n      deps: [\n        SyncServiceAbstraction,\n        AppIdServiceAbstraction,\n        ApiServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        LOGOUT_CALLBACK,\n        LogService,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoFunctionServiceAbstraction,\n      useClass: WebCryptoFunctionService,\n      deps: [WINDOW],\n    },\n    {\n      provide: EncryptService,\n      useFactory: encryptServiceFactory,\n      deps: [CryptoFunctionServiceAbstraction, LogService, LOG_MAC_FAILURES],\n    },\n    {\n      provide: EventUploadServiceAbstraction,\n      useClass: EventUploadService,\n      deps: [ApiServiceAbstraction, StateServiceAbstraction, LogService],\n    },\n    {\n      provide: EventCollectionServiceAbstraction,\n      useClass: EventCollectionService,\n      deps: [\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n        EventUploadServiceAbstraction,\n      ],\n    },\n    {\n      provide: PolicyServiceAbstraction,\n      useClass: PolicyService,\n      deps: [StateServiceAbstraction, OrganizationServiceAbstraction],\n    },\n    {\n      provide: InternalPolicyService,\n      useExisting: PolicyServiceAbstraction,\n    },\n    {\n      provide: PolicyApiServiceAbstraction,\n      useClass: PolicyApiService,\n      deps: [\n        PolicyServiceAbstraction,\n        ApiServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n      ],\n    },\n    {\n      provide: SendServiceAbstraction,\n      useClass: SendService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: KeyConnectorServiceAbstraction,\n      useClass: KeyConnectorService,\n      deps: [\n        StateServiceAbstraction,\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        SyncNotifierServiceAbstraction,\n        MessagingServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: UserVerificationServiceAbstraction,\n      useClass: UserVerificationService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        UserVerificationApiServiceAbstraction,\n      ],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationServiceAbstraction,\n      useClass: OrganizationService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: InternalOrganizationService,\n      useExisting: OrganizationServiceAbstraction,\n    },\n    {\n      provide: OrganizationUserService,\n      useClass: OrganizationUserServiceImplementation,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: ProviderServiceAbstraction,\n      useClass: ProviderService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TwoFactorServiceAbstraction,\n      useClass: TwoFactorService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: AbstractThemingService,\n      useClass: ThemingService,\n    },\n    {\n      provide: FormValidationErrorsServiceAbstraction,\n      useClass: FormValidationErrorsService,\n    },\n    {\n      provide: UserVerificationApiServiceAbstraction,\n      useClass: UserVerificationApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: OrganizationApiServiceAbstraction,\n      useClass: OrganizationApiService,\n      // This is a slightly odd dependency tree for a specialized api service\n      // it depends on SyncService so that new data can be retrieved through the sync\n      // rather than updating the OrganizationService directly. Instead OrganizationService\n      // subscribes to sync notifications and will update itself based on that.\n      deps: [ApiServiceAbstraction, SyncServiceAbstraction],\n    },\n    {\n      provide: SyncNotifierServiceAbstraction,\n      useClass: SyncNotifierService,\n    },\n    {\n      provide: ConfigServiceAbstraction,\n      useClass: ConfigService,\n      deps: [StateServiceAbstraction, ConfigApiServiceAbstraction],\n    },\n    {\n      provide: ConfigApiServiceAbstraction,\n      useClass: ConfigApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: AnonymousHubServiceAbstraction,\n      useClass: AnonymousHubService,\n      deps: [EnvironmentServiceAbstraction, AuthServiceAbstraction, LogService],\n    },\n    {\n      provide: ValidationServiceAbstraction,\n      useClass: ValidationService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: LoginServiceAbstraction,\n      useClass: LoginService,\n      deps: [StateServiceAbstraction],\n    },\n  ],\n})\nexport class JslibServicesModule {}\n\nfunction encryptServiceFactory(\n  cryptoFunctionservice: CryptoFunctionServiceAbstraction,\n  logService: LogService,\n  logMacFailures: boolean\n): EncryptService {\n  return flagEnabled(\"multithreadDecryption\")\n    ? new MultithreadEncryptServiceImplementation(cryptoFunctionservice, logService, logMacFailures)\n    : new EncryptServiceImplementation(cryptoFunctionservice, logService, logMacFailures);\n}\n","import { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { Utils } from \"../misc/utils\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: AbstractStorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { KeyConnectorService } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/twoFactor.service\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthenticationType } from \"../enums/authenticationType\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { PasswordLogInStrategy } from \"../misc/logInStrategies/passwordLogin.strategy\";\nimport { PasswordlessLogInStrategy } from \"../misc/logInStrategies/passwordlessLogin.strategy\";\nimport { SsoLogInStrategy } from \"../misc/logInStrategies/ssoLogin.strategy\";\nimport { UserApiLogInStrategy } from \"../misc/logInStrategies/user-api-login.strategy\";\nimport { AuthResult } from \"../models/domain/auth-result\";\nimport {\n  UserApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\nimport { PreloginRequest } from \"../models/request/prelogin.request\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { AuthRequestPushNotification } from \"../models/response/notification.response\";\n\nconst sessionTimeoutLength = 2 * 60 * 1000; // 2 minutes\n\nexport class AuthService implements AuthServiceAbstraction {\n  get email(): string {\n    if (\n      this.logInStrategy instanceof PasswordLogInStrategy ||\n      this.logInStrategy instanceof PasswordlessLogInStrategy\n    ) {\n      return this.logInStrategy.email;\n    }\n\n    return null;\n  }\n\n  get masterPasswordHash(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy\n      ? this.logInStrategy.masterPasswordHash\n      : null;\n  }\n\n  get accessCode(): string {\n    return this.logInStrategy instanceof PasswordlessLogInStrategy\n      ? this.logInStrategy.accessCode\n      : null;\n  }\n\n  get authRequestId(): string {\n    return this.logInStrategy instanceof PasswordlessLogInStrategy\n      ? this.logInStrategy.authRequestId\n      : null;\n  }\n\n  private logInStrategy:\n    | UserApiLogInStrategy\n    | PasswordLogInStrategy\n    | SsoLogInStrategy\n    | PasswordlessLogInStrategy;\n  private sessionTimeout: any;\n\n  private pushNotificationSubject = new Subject<string>();\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService,\n    protected i18nService: I18nService\n  ) {}\n\n  async logIn(\n    credentials:\n      | UserApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ): Promise<AuthResult> {\n    this.clearState();\n\n    let strategy:\n      | UserApiLogInStrategy\n      | PasswordLogInStrategy\n      | SsoLogInStrategy\n      | PasswordlessLogInStrategy;\n\n    switch (credentials.type) {\n      case AuthenticationType.Password:\n        strategy = new PasswordLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this\n        );\n        break;\n      case AuthenticationType.Sso:\n        strategy = new SsoLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this.keyConnectorService\n        );\n        break;\n      case AuthenticationType.UserApi:\n        strategy = new UserApiLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this.environmentService,\n          this.keyConnectorService\n        );\n        break;\n      case AuthenticationType.Passwordless:\n        strategy = new PasswordlessLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this\n        );\n        break;\n    }\n\n    const result = await strategy.logIn(credentials as any);\n\n    if (result?.requiresTwoFactor) {\n      this.saveState(strategy);\n    }\n    return result;\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    if (this.logInStrategy == null) {\n      throw new Error(this.i18nService.t(\"sessionTimeout\"));\n    }\n\n    try {\n      const result = await this.logInStrategy.logInTwoFactor(twoFactor, captchaResponse);\n\n      // Only clear state if 2FA token has been accepted, otherwise we need to be able to try again\n      if (!result.requiresTwoFactor && !result.requiresCaptcha) {\n        this.clearState();\n      }\n      return result;\n    } catch (e) {\n      // API exceptions are okay, but if there are any unhandled client-side errors then clear state to be safe\n      if (!(e instanceof ErrorResponse)) {\n        this.clearState();\n      }\n      throw e;\n    }\n  }\n\n  logOut(callback: () => void) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  authingWithUserApiKey(): boolean {\n    return this.logInStrategy instanceof UserApiLogInStrategy;\n  }\n\n  authingWithSso(): boolean {\n    return this.logInStrategy instanceof SsoLogInStrategy;\n  }\n\n  authingWithPassword(): boolean {\n    return this.logInStrategy instanceof PasswordLogInStrategy;\n  }\n\n  authingWithPasswordless(): boolean {\n    return this.logInStrategy instanceof PasswordlessLogInStrategy;\n  }\n\n  async getAuthStatus(userId?: string): Promise<AuthenticationStatus> {\n    const isAuthenticated = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!isAuthenticated) {\n      return AuthenticationStatus.LoggedOut;\n    }\n\n    // Keys aren't stored for a device that is locked or logged out\n    // Make sure we're logged in before checking this, otherwise we could mix up those states\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    const hasKeyInMemory = await this.cryptoService.hasKeyInMemory(userId);\n    if (!hasKeyInMemory) {\n      return AuthenticationStatus.Locked;\n    }\n\n    return AuthenticationStatus.Unlocked;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfIterations: number = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfIterations = preloginResponse.kdfIterations;\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n  }\n\n  async authResponsePushNotifiction(notification: AuthRequestPushNotification): Promise<any> {\n    this.pushNotificationSubject.next(notification.id);\n  }\n\n  getPushNotifcationObs$(): Observable<any> {\n    return this.pushNotificationSubject.asObservable();\n  }\n\n  private saveState(\n    strategy:\n      | UserApiLogInStrategy\n      | PasswordLogInStrategy\n      | SsoLogInStrategy\n      | PasswordlessLogInStrategy\n  ) {\n    this.logInStrategy = strategy;\n    this.startSessionTimeout();\n  }\n\n  private clearState() {\n    this.logInStrategy = null;\n    this.clearSessionTimeout();\n  }\n\n  private startSessionTimeout() {\n    this.clearSessionTimeout();\n    this.sessionTimeout = setTimeout(() => this.clearState(), sessionTimeoutLength);\n  }\n\n  private clearSessionTimeout() {\n    if (this.sessionTimeout != null) {\n      clearTimeout(this.sessionTimeout);\n    }\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { InternalFolderService as InternalFolderServiceAbstraction } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { CipherData } from \"../../models/data/cipher.data\";\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { FolderView } from \"../../models/view/folder.view\";\n\nexport class FolderService implements InternalFolderServiceAbstraction {\n  protected _folders: BehaviorSubject<Folder[]> = new BehaviorSubject([]);\n  protected _folderViews: BehaviorSubject<FolderView[]> = new BehaviorSubject([]);\n\n  folders$ = this._folders.asObservable();\n  folderViews$ = this._folderViews.asObservable();\n\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._folders.next([]);\n            this._folderViews.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getEncryptedFolders();\n\n          await this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async clearCache(): Promise<void> {\n    this._folderViews.next([]);\n  }\n\n  // TODO: This should be moved to EncryptService or something\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = this._folders.getValue();\n\n    return folders.find((folder) => folder.id === id);\n  }\n\n  async getAllFromState(): Promise<Folder[]> {\n    const folders = await this.stateService.getEncryptedFolders();\n    const response: Folder[] = [];\n    for (const id in folders) {\n      // eslint-disable-next-line\n      if (folders.hasOwnProperty(id)) {\n        response.push(new Folder(folders[id]));\n      }\n    }\n    return response;\n  }\n\n  /**\n   * @deprecated For the CLI only\n   * @param id id of the folder\n   */\n  async getFromState(id: string): Promise<Folder> {\n    const foldersMap = await this.stateService.getEncryptedFolders();\n    const folder = foldersMap[id];\n    if (folder == null) {\n      return null;\n    }\n\n    return new Folder(folder);\n  }\n\n  /**\n   * @deprecated Only use in CLI!\n   */\n  async getAllDecryptedFromState(): Promise<FolderView[]> {\n    const data = await this.stateService.getEncryptedFolders();\n    const folders = Object.values(data || {}).map((f) => new Folder(f));\n\n    return this.decryptFolders(folders);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<void> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<void> {\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._folders.next([]);\n      this._folderViews.next([]);\n    }\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  private async updateObservables(foldersMap: { [id: string]: FolderData }) {\n    const folders = Object.values(foldersMap || {}).map((f) => new Folder(f));\n\n    this._folders.next(folders);\n\n    if (await this.cryptoService.hasKey()) {\n      this._folderViews.next(await this.decryptFolders(folders));\n    }\n  }\n\n  private async decryptFolders(folders: Folder[]) {\n    const decryptFolderPromises = folders.map((f) => f.decrypt());\n    const decryptedFolders = await Promise.all(decryptFolderPromises);\n\n    decryptedFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decryptedFolders.push(noneFolder);\n\n    return decryptedFolders;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { FolderApiServiceAbstraction } from \"../../abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { FolderRequest } from \"../../models/request/folder.request\";\nimport { FolderResponse } from \"../../models/response/folder.response\";\n\nexport class FolderApiService implements FolderApiServiceAbstraction {\n  constructor(private folderService: InternalFolderService, private apiService: ApiService) {}\n\n  async save(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.putFolder(folder.id, request);\n    }\n\n    const data = new FolderData(response);\n    await this.folderService.upsert(data);\n  }\n\n  async delete(id: string): Promise<any> {\n    await this.deleteFolder(id);\n    await this.folderService.delete(id);\n  }\n\n  async get(id: string): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  private async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  private deleteFolder(id: string): Promise<any> {\n    return this.apiService.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n}\n","import { AccountApiService } from \"../../abstractions/account/account-api.service\";\nimport { InternalAccountService } from \"../../abstractions/account/account.service\";\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { UserVerificationService } from \"../../abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"../../types/verification\";\n\nexport class AccountApiServiceImplementation implements AccountApiService {\n  constructor(\n    private apiService: ApiService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService,\n    private accountService: InternalAccountService\n  ) {}\n\n  async deleteAccount(verification: Verification): Promise<void> {\n    try {\n      const verificationRequest = await this.userVerificationService.buildRequest(verification);\n      await this.apiService.send(\"DELETE\", \"/accounts\", verificationRequest, true, false);\n      this.accountService.delete();\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  }\n}\n","import { InternalAccountService } from \"../../abstractions/account/account.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\n\nexport class AccountServiceImplementation implements InternalAccountService {\n  constructor(private messagingService: MessagingService, private logService: LogService) {}\n\n  async delete(): Promise<void> {\n    try {\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  }\n}\n","import { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/tree-node\";\nimport { CollectionView } from \"../models/view/collection.view\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    // eslint-disable-next-line\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      // eslint-disable-next-line\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  /**\n   * @deprecated August 30 2022: Moved to new Vault Filter Service\n   * Remove when Desktop and Browser are updated\n   */\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObjectFromList(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","import { concatMap, Observable, Subject } from \"rxjs\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject;\n\n  protected baseUrl: string;\n  protected webVaultUrl: string;\n  protected apiUrl: string;\n  protected identityUrl: string;\n  protected iconsUrl: string;\n  protected notificationsUrl: string;\n  protected eventsUrl: string;\n  private keyConnectorUrl: string;\n  private scimUrl: string = null;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount$\n      .pipe(\n        concatMap(async () => {\n          await this.setUrlsFromStorage();\n        })\n      )\n      .subscribe();\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  getScimUrl() {\n    if (this.scimUrl != null) {\n      return this.scimUrl + \"/v2\";\n    }\n\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://scim.bitwarden.com/v2\"\n      : this.getWebVaultUrl() + \"/scim/v2\";\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    // scimUrl is not saved to storage\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    // scimUrl cannot be cleared\n    urls.scim = this.formatUrl(urls.scim) ?? this.scimUrl;\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n      // scimUrl is not saved to storage\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    this.scimUrl = urls.scim;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n      scim: this.scimUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n\n  isCloud(): boolean {\n    return [\"https://api.bitwarden.com\", \"https://vault.bitwarden.com/api\"].includes(\n      this.getApiUrl()\n    );\n  }\n}\n","import { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { Utils } from \"../misc/utils\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/set-key-connector-key.request\";\nimport { AttachmentRequest } from \"../models/request/attachment.request\";\nimport { BitPayInvoiceRequest } from \"../models/request/bit-pay-invoice.request\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipher-bulk-delete.request\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipher-bulk-move.request\";\nimport { CipherBulkShareRequest } from \"../models/request/cipher-bulk-share.request\";\nimport { CipherCollectionsRequest } from \"../models/request/cipher-collections.request\";\nimport { CipherCreateRequest } from \"../models/request/cipher-create.request\";\nimport { CipherPartialRequest } from \"../models/request/cipher-partial.request\";\nimport { CipherShareRequest } from \"../models/request/cipher-share.request\";\nimport { CipherRequest } from \"../models/request/cipher.request\";\nimport { CollectionBulkDeleteRequest } from \"../models/request/collection-bulk-delete.request\";\nimport { CollectionRequest } from \"../models/request/collection.request\";\nimport { DeleteRecoverRequest } from \"../models/request/delete-recover.request\";\nimport { DeviceVerificationRequest } from \"../models/request/device-verification.request\";\nimport { DeviceRequest } from \"../models/request/device.request\";\nimport { EmailTokenRequest } from \"../models/request/email-token.request\";\nimport { EmailRequest } from \"../models/request/email.request\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergency-access-accept.request\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergency-access-confirm.request\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergency-access-invite.request\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergency-access-password.request\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergency-access-update.request\";\nimport { EventRequest } from \"../models/request/event.request\";\nimport { IapCheckRequest } from \"../models/request/iap-check.request\";\nimport { PasswordTokenRequest } from \"../models/request/identity-token/password-token.request\";\nimport { SsoTokenRequest } from \"../models/request/identity-token/sso-token.request\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\nimport { UserApiTokenRequest } from \"../models/request/identity-token/user-api-token.request\";\nimport { ImportCiphersRequest } from \"../models/request/import-ciphers.request\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/import-organization-ciphers.request\";\nimport { KdfRequest } from \"../models/request/kdf.request\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/key-connector-user-key.request\";\nimport { KeysRequest } from \"../models/request/keys.request\";\nimport { OrganizationConnectionRequest } from \"../models/request/organization-connection.request\";\nimport { OrganizationImportRequest } from \"../models/request/organization-import.request\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organization-sponsorship-create.request\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organization-sponsorship-redeem.request\";\nimport { PasswordHintRequest } from \"../models/request/password-hint.request\";\nimport { PasswordRequest } from \"../models/request/password.request\";\nimport { PasswordlessCreateAuthRequest } from \"../models/request/passwordless-create-auth.request\";\nimport { PaymentRequest } from \"../models/request/payment.request\";\nimport { PreloginRequest } from \"../models/request/prelogin.request\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/provider-add-organization.request\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/provider-organization-create.request\";\nimport { ProviderSetupRequest } from \"../models/request/provider/provider-setup.request\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/provider-update.request\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/provider-user-accept.request\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/provider-user-bulk-confirm.request\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/provider-user-bulk.request\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/provider-user-confirm.request\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/provider-user-invite.request\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/provider-user-update.request\";\nimport { RegisterRequest } from \"../models/request/register.request\";\nimport { SecretVerificationRequest } from \"../models/request/secret-verification.request\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selection-read-only.request\";\nimport { SendAccessRequest } from \"../models/request/send-access.request\";\nimport { SendRequest } from \"../models/request/send.request\";\nimport { SetPasswordRequest } from \"../models/request/set-password.request\";\nimport { StorageRequest } from \"../models/request/storage.request\";\nimport { TaxInfoUpdateRequest } from \"../models/request/tax-info-update.request\";\nimport { TwoFactorEmailRequest } from \"../models/request/two-factor-email.request\";\nimport { TwoFactorProviderRequest } from \"../models/request/two-factor-provider.request\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/two-factor-recovery.request\";\nimport { UpdateDomainsRequest } from \"../models/request/update-domains.request\";\nimport { UpdateKeyRequest } from \"../models/request/update-key.request\";\nimport { UpdateProfileRequest } from \"../models/request/update-profile.request\";\nimport { UpdateTempPasswordRequest } from \"../models/request/update-temp-password.request\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/update-two-factor-authenticator.request\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/update-two-factor-duo.request\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/update-two-factor-email.request\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/update-two-factor-web-authn-delete.request\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/update-two-factor-web-authn.request\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/update-two-factor-yubio-otp.request\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verify-delete-recover.request\";\nimport { VerifyEmailRequest } from \"../models/request/verify-email.request\";\nimport { ApiKeyResponse } from \"../models/response/api-key.response\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { AttachmentResponse } from \"../models/response/attachment.response\";\nimport { AuthRequestResponse } from \"../models/response/auth-request.response\";\nimport { RegisterResponse } from \"../models/response/authentication/register.response\";\nimport { BillingHistoryResponse } from \"../models/response/billing-history.response\";\nimport { BillingPaymentResponse } from \"../models/response/billing-payment.response\";\nimport { BreachAccountResponse } from \"../models/response/breach-account.response\";\nimport { CipherResponse } from \"../models/response/cipher.response\";\nimport {\n  CollectionAccessDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collection.response\";\nimport { DeviceVerificationResponse } from \"../models/response/device-verification.response\";\nimport { DomainsResponse } from \"../models/response/domains.response\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergency-access.response\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { EventResponse } from \"../models/response/event.response\";\nimport { IdentityCaptchaResponse } from \"../models/response/identity-captcha.response\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/key-connector-user-key.response\";\nimport { ListResponse } from \"../models/response/list.response\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organization-connection.response\";\nimport { OrganizationExportResponse } from \"../models/response/organization-export.response\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organization-sponsorship-sync-status.response\";\nimport { PaymentResponse } from \"../models/response/payment.response\";\nimport { PlanResponse } from \"../models/response/plan.response\";\nimport { PolicyResponse } from \"../models/response/policy.response\";\nimport { PreloginResponse } from \"../models/response/prelogin.response\";\nimport { ProfileResponse } from \"../models/response/profile.response\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/provider-organization.response\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/provider-user-bulk-public-key.response\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/provider-user-bulk.response\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/provider-user.response\";\nimport { ProviderResponse } from \"../models/response/provider/provider.response\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selection-read-only.response\";\nimport { SendAccessResponse } from \"../models/response/send-access.response\";\nimport { SendFileDownloadDataResponse } from \"../models/response/send-file-download-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\nimport { SendResponse } from \"../models/response/send.response\";\nimport { SsoPreValidateResponse } from \"../models/response/sso-pre-validate.response\";\nimport { SubscriptionResponse } from \"../models/response/subscription.response\";\nimport { SyncResponse } from \"../models/response/sync.response\";\nimport { TaxInfoResponse } from \"../models/response/tax-info.response\";\nimport { TaxRateResponse } from \"../models/response/tax-rate.response\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/two-factor-authenticator.response\";\nimport { TwoFactorDuoResponse } from \"../models/response/two-factor-duo.response\";\nimport { TwoFactorEmailResponse } from \"../models/response/two-factor-email.response\";\nimport { TwoFactorProviderResponse } from \"../models/response/two-factor-provider.response\";\nimport { TwoFactorRecoverResponse } from \"../models/response/two-factor-recover.response\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/two-factor-web-authn.response\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/two-factor-yubi-key.response\";\nimport { UserKeyResponse } from \"../models/response/user-key.response\";\nimport { SendAccessView } from \"../models/view/send-access.view\";\n\n/**\n * @deprecated The `ApiService` class is deprecated and calls should be extracted into individual\n * api services. The `send` method is still allowed to be used within api services. For background\n * of this decision please read https://contributing.bitwarden.com/architecture/adr/refactor-api-service.\n */\nexport class ApiService implements ApiServiceAbstraction {\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private appIdService: AppIdService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: UserApiTokenRequest | PasswordTokenRequest | SsoTokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n\n    const identityToken =\n      request instanceof UserApiTokenRequest\n        ? request.toIdentityToken()\n        : request.toIdentityToken(this.platformUtilsService.getClientType());\n\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(identityToken),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken();\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  async postAuthRequest(request: PasswordlessCreateAuthRequest): Promise<AuthRequestResponse> {\n    const r = await this.send(\"POST\", \"/auth-requests/\", request, false, true);\n    return new AuthRequestResponse(r);\n  }\n\n  async getAuthResponse(id: string, accessCode: string): Promise<AuthRequestResponse> {\n    const path = `/auth-requests/${id}/response?code=${accessCode}`;\n    const r = await this.send(\"GET\", path, null, false, true);\n    return new AuthRequestResponse(r);\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/prelogin\",\n      request,\n      false,\n      true,\n      this.environmentService.getIdentityUrl()\n    );\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  async postRegister(request: RegisterRequest): Promise<RegisterResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/register\",\n      request,\n      false,\n      true,\n      this.environmentService.getIdentityUrl()\n    );\n    return new RegisterResponse(r);\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<void> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Account Billing APIs\n\n  async getUserBillingHistory(): Promise<BillingHistoryResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/history\", null, true, true);\n    return new BillingHistoryResponse(r);\n  }\n\n  async getUserBillingPayment(): Promise<BillingPaymentResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/payment-method\", null, true, true);\n    return new BillingPaymentResponse(r);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getFullCipherDetails(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/details\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putPartialCipher(id: string, request: CipherPartialRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/partial\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/import\", request, true, false);\n  }\n\n  postImportOrganizationCiphers(\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/import-organization?organizationId=\" + organizationId,\n      request,\n      true,\n      false\n    );\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionAccessDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionAccessDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionAccessDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getManyCollectionsWithAccessDetails(\n    organizationId: string\n  ): Promise<ListResponse<CollectionAccessDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/details\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionAccessDetailsResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteManyCollections(request: CollectionBulkDeleteRequest): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + request.organizationId + \"/collections\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, false, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  async getDeviceVerificationSettings(): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/two-factor/get-device-verification-settings\",\n      null,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  async putDeviceVerificationSettings(\n    request: DeviceVerificationRequest\n  ): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/two-factor/device-verification-settings\",\n      request,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  async getKnownDevice(email: string, deviceIdentifier: string): Promise<boolean> {\n    const path = `/devices/knowndevice/${email}/${deviceIdentifier}`;\n    const r = await this.send(\"GET\", path, null, false, true);\n    return r as boolean;\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getCloudCommunicationsEnabled(): Promise<boolean> {\n    const r = await this.send(\"GET\", \"/organizations/connections/enabled\", null, true, true);\n    return r as boolean;\n  }\n\n  async getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"GET\", `/organizations/connections/${id}/${type}`, null, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"POST\", \"/organizations/connections/\", request, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId?: string\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/connections/\" + organizationConnectionId,\n      request,\n      true,\n      true\n    );\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async deleteOrganizationConnection(id: string): Promise<void> {\n    return this.send(\"DELETE\", \"/organizations/connections/\" + id, null, true, false);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getOrganizationExport(organizationId: string): Promise<OrganizationExportResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/export\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationExportResponse(r);\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    request.headers.set(\"Bitwarden-Client-Name\", this.platformUtilsService.getClientType());\n    request.headers.set(\n      \"Bitwarden-Client-Version\",\n      await this.platformUtilsService.getApplicationVersionNumber()\n    );\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<SsoPreValidateResponse> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      const body = await response.json();\n      return new SsoPreValidateResponse(body);\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoredOrgId +\n        \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getSponsorshipSyncStatus(\n    sponsoredOrgId: string\n  ): Promise<OrganizationSponsorshipSyncStatusResponse> {\n    const response = await this.send(\n      \"GET\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/sync-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSponsorshipSyncStatusResponse(response);\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const appId = await this.appIdService.getAppId();\n    const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n    const tokenRequest = new UserApiTokenRequest(\n      clientId,\n      clientSecret,\n      new TokenTwoFactorRequest(),\n      deviceRequest\n    );\n\n    const response = await this.postIdentityToken(tokenRequest);\n    if (!(response instanceof IdentityTokenResponse)) {\n      throw new Error(\"Invalid response received when refreshing api token\");\n    }\n\n    await this.tokenService.setToken(response.accessToken);\n  }\n\n  async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    const requestUrl = apiUrl + path;\n    // Prevent directory traversal from malicious paths\n    if (new URL(requestUrl).href !== requestUrl) {\n      return Promise.reject(\"Invalid request url path.\");\n    }\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    const responseType = response.headers.get(\"content-type\");\n    const responseIsJson = responseType != null && responseType.indexOf(\"application/json\") !== -1;\n    if (hasResponse && response.status === 200 && responseIsJson) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    if (authed) {\n      if (\n        response.status === 401 ||\n        response.status === 403 ||\n        (tokenError &&\n          response.status === 400 &&\n          responseJson != null &&\n          responseJson.error === \"invalid_grant\")\n      ) {\n        await this.logoutCallback(true);\n        return null;\n      }\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { FileUploadType } from \"../enums/fileUploadType\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService();\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { Utils } from \"../misc/utils\";\nimport { AccountSettingsSettings } from \"../models/domain/account\";\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  protected _settings: BehaviorSubject<AccountSettingsSettings> = new BehaviorSubject({});\n\n  settings$ = this._settings.asObservable();\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._settings.next({});\n            return;\n          }\n\n          const data = await this.stateService.getSettings();\n\n          this._settings.next(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    const settings = this._settings.getValue() ?? {};\n\n    settings.equivalentDomains = equivalentDomains;\n\n    this._settings.next(settings);\n    await this.stateService.setSettings(settings);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._settings.next({});\n    }\n\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { PolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../abstractions/token.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"../../abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { PolicyType } from \"../../enums/policyType\";\n\nexport class VaultTimeoutSettingsService implements VaultTimeoutSettingsServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { AuthService } from \"../../abstractions/auth.service\";\nimport { CipherService } from \"../../abstractions/cipher.service\";\nimport { CollectionService } from \"../../abstractions/collection.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { FolderService } from \"../../abstractions/folder/folder.service.abstraction\";\nimport { KeyConnectorService } from \"../../abstractions/keyConnector.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { SearchService } from \"../../abstractions/search.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../../abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"../../abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { AuthenticationStatus } from \"../../enums/authenticationStatus\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private authService: AuthService,\n    private vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (expired: boolean, userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    const accounts = await firstValueFrom(this.stateService.accounts$);\n    for (const userId in accounts) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.vaultTimeoutSettingsService.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      await this.folderService.clearCache();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(false, userId);\n    }\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    const authStatus = await this.authService.getAuthStatus(userId);\n    if (\n      authStatus === AuthenticationStatus.Locked ||\n      authStatus === AuthenticationStatus.LoggedOut\n    ) {\n      return false;\n    }\n\n    const vaultTimeout = await this.vaultTimeoutSettingsService.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(userId);\n  }\n}\n","import * as papa from \"papaparse\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CipherService } from \"../abstractions/cipher.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport {\n  ExportFormat,\n  ExportService as ExportServiceAbstraction,\n} from \"../abstractions/export.service\";\nimport { FolderService } from \"../abstractions/folder/folder.service.abstraction\";\nimport { CipherType } from \"../enums/cipherType\";\nimport { DEFAULT_KDF_ITERATIONS, KdfType } from \"../enums/kdfType\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Collection } from \"../models/domain/collection\";\nimport { Folder } from \"../models/domain/folder\";\nimport { CipherWithIdExport as CipherExport } from \"../models/export/cipher-with-ids.export\";\nimport { CollectionWithIdExport as CollectionExport } from \"../models/export/collection-with-id.export\";\nimport { EventExport } from \"../models/export/event.export\";\nimport { FolderWithIdExport as FolderExport } from \"../models/export/folder-with-id.export\";\nimport { CollectionDetailsResponse } from \"../models/response/collection.response\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { CollectionView } from \"../models/view/collection.view\";\nimport { EventView } from \"../models/view/event.view\";\nimport { FolderView } from \"../models/view/folder.view\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  async getExport(format: ExportFormat = \"csv\", organizationId?: string): Promise<string> {\n    if (organizationId) {\n      return await this.getOrganizationExport(organizationId, format);\n    }\n\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getPasswordProtectedExport(password: string, organizationId?: string): Promise<string> {\n    const clearText = organizationId\n      ? await this.getOrganizationExport(organizationId, \"json\")\n      : await this.getExport(\"json\");\n\n    const salt = Utils.fromBufferToB64(await this.cryptoFunctionService.randomBytes(16));\n    const kdfIterations = DEFAULT_KDF_ITERATIONS;\n    const key = await this.cryptoService.makePinKey(\n      password,\n      salt,\n      KdfType.PBKDF2_SHA256,\n      kdfIterations\n    );\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), key);\n    const encText = await this.cryptoService.encrypt(clearText, key);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      passwordProtected: true,\n      salt: salt,\n      kdfIterations: kdfIterations,\n      kdfType: KdfType.PBKDF2_SHA256,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      data: encText.encryptedString,\n    };\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: ExportFormat = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new EventExport(e)));\n  }\n\n  getFileName(prefix: string = null, extension = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAllDecryptedFromState().then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAllFromState().then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getOrganizationExport(organizationId).then((exportData) => {\n        const exportPromises: any = [];\n        if (exportData != null) {\n          if (exportData.collections != null && exportData.collections.length > 0) {\n            exportData.collections.forEach((c) => {\n              const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n              exportPromises.push(\n                collection.decrypt().then((decCol) => {\n                  decCollections.push(decCol);\n                })\n              );\n            });\n          }\n          if (exportData.ciphers != null && exportData.ciphers.length > 0) {\n            exportData.ciphers\n              .filter((c) => c.deletedDate === null)\n              .forEach((c) => {\n                const cipher = new Cipher(new CipherData(c));\n                exportPromises.push(\n                  cipher.decrypt().then((decCipher) => {\n                    decCiphers.push(decCipher);\n                  })\n                );\n              });\n          }\n        }\n        return Promise.all(exportPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SyncService } from \"../abstractions/sync/sync.service.abstraction\";\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { NotificationType } from \"../enums/notificationType\";\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notification.response\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService,\n    private authService: AuthService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    // eslint-disable-next-line\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback(true);\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    const authStatus = await this.authService.getAuthStatus();\n    return authStatus >= AuthenticationStatus.Unlocked;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { Utils } from \"../misc/utils\";\nimport { DecryptParameters } from \"../models/domain/decrypt-parameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n\n  constructor(win: Window | typeof global) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if (algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = forge.hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = forge.hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = forge.util.createBuffer(parameters.data);\n    const decipher = forge.cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString();\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { EventUploadService as EventUploadServiceAbstraction } from \"../../abstractions/event/event-upload.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { EventRequest } from \"../../models/request/event.request\";\n\nexport class EventUploadService implements EventUploadServiceAbstraction {\n  private inited = false;\n  constructor(\n    private apiService: ApiService,\n    private stateService: StateService,\n    private logService: LogService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      req.organizationId = e.organizationId;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","import { CipherService } from \"../../abstractions/cipher.service\";\nimport { EventCollectionService as EventCollectionServiceAbstraction } from \"../../abstractions/event/event-collection.service\";\nimport { EventUploadService } from \"../../abstractions/event/event-upload.service\";\nimport { OrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { EventType } from \"../../enums/eventType\";\nimport { EventData } from \"../../models/data/event.data\";\n\nexport class EventCollectionService implements EventCollectionServiceAbstraction {\n  constructor(\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private eventUploadService: EventUploadService\n  ) {}\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false,\n    organizationId: string = null\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    if (organizationId != null) {\n      if (!orgIds.has(organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    event.organizationId = organizationId;\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.eventUploadService.uploadEvents();\n    }\n  }\n}\n","import { of, concatMap, BehaviorSubject, Observable, map } from \"rxjs\";\n\nimport { OrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { InternalPolicyService as InternalPolicyServiceAbstraction } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PolicyType } from \"../../enums/policyType\";\nimport { Utils } from \"../../misc/utils\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/reset-password-policy-options\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport class PolicyService implements InternalPolicyServiceAbstraction {\n  protected _policies: BehaviorSubject<Policy[]> = new BehaviorSubject([]);\n\n  policies$ = this._policies.asObservable();\n\n  constructor(\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._policies.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getEncryptedPolicies();\n\n          await this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  /**\n   * @deprecated Do not call this, use the policies$ observable collection\n   */\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        if (Object.prototype.hasOwnProperty.call(diskPolicies, id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  masterPasswordPolicyOptions$(policies?: Policy[]): Observable<MasterPasswordPolicyOptions> {\n    const observable = policies ? of(policies) : this.policies$;\n    return observable.pipe(\n      map((obsPolicies) => {\n        let enforcedOptions: MasterPasswordPolicyOptions = null;\n        const filteredPolicies = obsPolicies.filter((p) => p.type === PolicyType.MasterPassword);\n\n        if (filteredPolicies == null || filteredPolicies.length === 0) {\n          return enforcedOptions;\n        }\n\n        filteredPolicies.forEach((currentPolicy) => {\n          if (!currentPolicy.enabled || currentPolicy.data == null) {\n            return;\n          }\n\n          if (enforcedOptions == null) {\n            enforcedOptions = new MasterPasswordPolicyOptions();\n          }\n\n          if (\n            currentPolicy.data.minComplexity != null &&\n            currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n          ) {\n            enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n          }\n\n          if (\n            currentPolicy.data.minLength != null &&\n            currentPolicy.data.minLength > enforcedOptions.minLength\n          ) {\n            enforcedOptions.minLength = currentPolicy.data.minLength;\n          }\n\n          if (currentPolicy.data.requireUpper) {\n            enforcedOptions.requireUpper = true;\n          }\n\n          if (currentPolicy.data.requireLower) {\n            enforcedOptions.requireLower = true;\n          }\n\n          if (currentPolicy.data.requireNumbers) {\n            enforcedOptions.requireNumbers = true;\n          }\n\n          if (currentPolicy.data.requireSpecial) {\n            enforcedOptions.requireSpecial = true;\n          }\n        });\n\n        return enforcedOptions;\n      })\n    );\n  }\n\n  policyAppliesToActiveUser$(policyType: PolicyType, policyFilter?: (policy: Policy) => boolean) {\n    return this.policies$.pipe(\n      concatMap(async (policies) => {\n        const userId = await this.stateService.getUserId();\n        return await this.checkPoliciesThatApplyToUser(policies, policyType, policyFilter, userId);\n      })\n    );\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    // eslint-disable-next-line\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n\n    return this.checkPoliciesThatApplyToUser(policies, policyType, policyFilter, userId);\n  }\n\n  async upsert(policy: PolicyData): Promise<any> {\n    let policies = await this.stateService.getEncryptedPolicies();\n    if (policies == null) {\n      policies = {};\n    }\n\n    policies[policy.id] = policy;\n\n    await this.updateObservables(policies);\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<void> {\n    await this.updateObservables(policies);\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._policies.next([]);\n    }\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n\n  private async updateObservables(policiesMap: { [id: string]: PolicyData }) {\n    const policies = Object.values(policiesMap || {}).map((f) => new Policy(f));\n\n    this._policies.next(policies);\n  }\n\n  private async checkPoliciesThatApplyToUser(\n    policies: Policy[],\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const organizations = await this.organizationService.getAll(userId);\n    const filteredPolicies = policies.filter(\n      (p) => p.type === policyType && p.enabled && (policyFilter == null || policyFilter(p))\n    );\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        policySet.has(o.id) &&\n        !this.isExcemptFromPolicies(o, policyType)\n    );\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { OrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { PolicyApiServiceAbstraction } from \"../../abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { PolicyRequest } from \"../../models/request/policy.request\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport class PolicyApiService implements PolicyApiServiceAbstraction {\n  constructor(\n    private policyService: InternalPolicyService,\n    private apiService: ApiService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        encodeURIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.policyService.mapPoliciesFromToken(response);\n    return await firstValueFrom(this.policyService.masterPasswordPolicyOptions$(policies));\n  }\n\n  async putPolicy(organizationId: string, type: PolicyType, request: PolicyRequest): Promise<any> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    const response = new PolicyResponse(r);\n    const data = new PolicyData(response);\n    await this.policyService.upsert(data);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SEND_KDF_ITERATIONS } from \"../enums/kdfType\";\nimport { SendType } from \"../enums/sendType\";\nimport { Utils } from \"../misc/utils\";\nimport { SendData } from \"../models/data/send.data\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/send-file\";\nimport { SendText } from \"../models/domain/send-text\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { SendRequest } from \"../models/request/send.request\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { SendResponse } from \"../models/response/send.response\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    // eslint-disable-next-line\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      // eslint-disable-next-line\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/keyConnector.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { OrganizationService } from \"../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { OrganizationUserType } from \"../enums/organizationUserType\";\nimport { Utils } from \"../misc/utils\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/set-key-connector-key.request\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/key-connector-user-key.request\";\nimport { KeysRequest } from \"../models/request/keys.request\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private logoutCallback: (expired: boolean, userId?: string) => void\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async convertNewSsoUserToKeyConnector(tokenResponse: IdentityTokenResponse, orgId: string) {\n    const { kdf, kdfIterations, keyConnectorUrl } = tokenResponse;\n    const password = await this.cryptoFunctionService.randomBytes(64);\n\n    const k = await this.cryptoService.makeKey(\n      Utils.fromBufferToB64(password),\n      await this.tokenService.getEmail(),\n      kdf,\n      kdfIterations\n    );\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n    await this.cryptoService.setKey(k);\n\n    const encKey = await this.cryptoService.makeEncKey(k);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n    const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(keyConnectorUrl, keyConnectorRequest);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    const keys = new KeysRequest(pubKey, privKey.encryptedString);\n    const setPasswordRequest = new SetKeyConnectorKeyRequest(\n      encKey[1].encryptedString,\n      kdf,\n      kdfIterations,\n      orgId,\n      keys\n    );\n    await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n\n  private handleKeyConnectorError(e: any) {\n    this.logService.error(e);\n    if (this.logoutCallback != null) {\n      this.logoutCallback(false);\n    }\n    throw new Error(\"Key Connector error\");\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"../../abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"../../enums/verificationType\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verify-otp.request\";\nimport { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { Verification } from \"../../types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Use it to verify the input collected by UserVerificationComponent.\n */\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private userVerificationApiService: UserVerificationApiServiceAbstraction\n  ) {}\n\n  /**\n   * Create a new request model to be used for server-side verification\n   * @param verification User-supplied verification data (Master Password or OTP)\n   * @param requestClass The request model to create\n   * @param alreadyHashed Whether the master password is already hashed\n   */\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  /**\n   * Used to verify the Master Password client-side, or send the OTP to the server for verification (with no other data)\n   * Generally used for client-side verification only.\n   * @param verification User-supplied verification data (Master Password or OTP)\n   */\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.userVerificationApiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.userVerificationApiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPasswordRequired\"));\n      }\n    }\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { InternalOrganizationService as InternalOrganizationServiceAbstraction } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { OrganizationData } from \"../../models/data/organization.data\";\nimport { Organization } from \"../../models/domain/organization\";\n\nexport class OrganizationService implements InternalOrganizationServiceAbstraction {\n  protected _organizations = new BehaviorSubject<Organization[]>([]);\n\n  organizations$ = this._organizations.asObservable();\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (!unlocked) {\n            this._organizations.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getOrganizations();\n          this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizationsMap = await this.stateService.getOrganizations({ userId: userId });\n    return Object.values(organizationsMap || {}).map((o) => new Organization(o));\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const organizations = this._organizations.getValue();\n    return organizations.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n\n  hasOrganizations(): boolean {\n    const organizations = this._organizations.getValue();\n    return organizations.length > 0;\n  }\n\n  async upsert(organization: OrganizationData): Promise<void> {\n    let organizations = await this.stateService.getOrganizations();\n    if (organizations == null) {\n      organizations = {};\n    }\n\n    organizations[organization.id] = organization;\n\n    await this.replace(organizations);\n  }\n\n  async delete(id: string): Promise<void> {\n    const organizations = await this.stateService.getOrganizations();\n    if (organizations == null) {\n      return;\n    }\n\n    if (organizations[id] == null) {\n      return;\n    }\n\n    delete organizations[id];\n    await this.replace(organizations);\n  }\n\n  get(id: string): Organization {\n    const organizations = this._organizations.getValue();\n\n    return organizations.find((organization) => organization.id === id);\n  }\n\n  /**\n   * @deprecated For the CLI only\n   * @param id id of the organization\n   */\n  async getFromState(id: string): Promise<Organization> {\n    const organizationsMap = await this.stateService.getOrganizations();\n    const organization = organizationsMap[id];\n    if (organization == null) {\n      return null;\n    }\n\n    return new Organization(organization);\n  }\n\n  getByIdentifier(identifier: string): Organization {\n    const organizations = this._organizations.getValue();\n\n    return organizations.find((organization) => organization.identifier === identifier);\n  }\n\n  async replace(organizations: { [id: string]: OrganizationData }) {\n    await this.stateService.setOrganizations(organizations);\n    this.updateObservables(organizations);\n  }\n\n  private updateObservables(organizationsMap: { [id: string]: OrganizationData }) {\n    const organizations = Object.values(organizationsMap || {}).map((o) => new Organization(o));\n    this._organizations.next(organizations);\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { OrganizationUserService } from \"../../abstractions/organization-user/organization-user.service\";\nimport {\n  OrganizationUserAcceptRequest,\n  OrganizationUserBulkConfirmRequest,\n  OrganizationUserConfirmRequest,\n  OrganizationUserInviteRequest,\n  OrganizationUserResetPasswordEnrollmentRequest,\n  OrganizationUserResetPasswordRequest,\n  OrganizationUserUpdateGroupsRequest,\n  OrganizationUserUpdateRequest,\n} from \"../../abstractions/organization-user/requests\";\nimport {\n  OrganizationUserBulkPublicKeyResponse,\n  OrganizationUserBulkResponse,\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../../abstractions/organization-user/responses\";\nimport { ListResponse } from \"../../models/response/list.response\";\n\nimport { OrganizationUserBulkRequest } from \"./requests\";\n\nexport class OrganizationUserServiceImplementation implements OrganizationUserService {\n  constructor(private apiService: ApiService) {}\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string,\n    options?: {\n      includeGroups?: boolean;\n    }\n  ): Promise<OrganizationUserDetailsResponse> {\n    const params = new URLSearchParams();\n\n    if (options?.includeGroups) {\n      params.set(\"includeGroups\", \"true\");\n    }\n\n    const r = await this.apiService.send(\n      \"GET\",\n      `/organizations/${organizationId}/users/${id}?${params.toString()}`,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getAllUsers(\n    organizationId: string,\n    options?: {\n      includeCollections?: boolean;\n      includeGroups?: boolean;\n    }\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const params = new URLSearchParams();\n\n    if (options?.includeCollections) {\n      params.set(\"includeCollections\", \"true\");\n    }\n    if (options?.includeGroups) {\n      params.set(\"includeGroups\", \"true\");\n    }\n\n    const r = await this.apiService.send(\n      \"GET\",\n      `/organizations/${organizationId}/users?${params.toString()}`,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.apiService.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  revokeOrganizationUser(organizationId: string, id: string): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/revoke\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async revokeManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/revoke\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  restoreOrganizationUser(organizationId: string, id: string): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/restore\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async restoreManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/restore\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    // eslint-disable-next-line\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      // eslint-disable-next-line\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","import { UntypedFormGroup, ValidationErrors } from \"@angular/forms\";\n\nimport {\n  FormGroupControls,\n  FormValidationErrorsService as FormValidationErrorsAbstraction,\n  AllValidationErrors,\n} from \"../abstractions/formValidationErrors.service\";\n\nexport class FormValidationErrorsService implements FormValidationErrorsAbstraction {\n  getFormValidationErrors(controls: FormGroupControls): AllValidationErrors[] {\n    let errors: AllValidationErrors[] = [];\n    Object.keys(controls).forEach((key) => {\n      const control = controls[key];\n      if (control instanceof UntypedFormGroup) {\n        errors = errors.concat(this.getFormValidationErrors(control.controls));\n      }\n\n      const controlErrors: ValidationErrors = controls[key].errors;\n      if (controlErrors !== null) {\n        Object.keys(controlErrors).forEach((keyError) => {\n          errors.push({\n            controlName: key,\n            errorName: keyError,\n          });\n        });\n      }\n    });\n\n    return errors;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { VerifyOTPRequest } from \"../../models/request/account/verify-otp.request\";\n\nexport class UserVerificationApiService implements UserVerificationApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n  async postAccountRequestOTP(): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { OrganizationApiServiceAbstraction } from \"../../abstractions/organization/organization-api.service.abstraction\";\nimport { SyncService } from \"../../abstractions/sync/sync.service.abstraction\";\nimport { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\nimport { ImportDirectoryRequest } from \"../../models/request/import-directory.request\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organization-api-key.request\";\nimport { OrganizationCreateRequest } from \"../../models/request/organization-create.request\";\nimport { OrganizationKeysRequest } from \"../../models/request/organization-keys.request\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organization-subscription-update.request\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organization-tax-info-update.request\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organization-update.request\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organization-upgrade.request\";\nimport { OrganizationSsoRequest } from \"../../models/request/organization/organization-sso.request\";\nimport { PaymentRequest } from \"../../models/request/payment.request\";\nimport { SeatRequest } from \"../../models/request/seat.request\";\nimport { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { StorageRequest } from \"../../models/request/storage.request\";\nimport { VerifyBankRequest } from \"../../models/request/verify-bank.request\";\nimport { ApiKeyResponse } from \"../../models/response/api-key.response\";\nimport { BillingResponse } from \"../../models/response/billing.response\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organization-api-key-information.response\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organization-auto-enroll-status.response\";\nimport { OrganizationKeysResponse } from \"../../models/response/organization-keys.response\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organization-subscription.response\";\nimport { OrganizationResponse } from \"../../models/response/organization.response\";\nimport { OrganizationSsoResponse } from \"../../models/response/organization/organization-sso.response\";\nimport { PaymentResponse } from \"../../models/response/payment.response\";\nimport { TaxInfoResponse } from \"../../models/response/tax-info.response\";\n\nexport class OrganizationApiService implements OrganizationApiServiceAbstraction {\n  constructor(private apiService: ApiService, private syncService: SyncService) {}\n\n  async get(id: string): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getBilling(id: string): Promise<BillingResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/billing\",\n      null,\n      true,\n      true\n    );\n    return new BillingResponse(r);\n  }\n\n  async getSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/subscription\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getLicense(id: string, installationId: string): Promise<unknown> {\n    return this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getAutoEnrollStatus(identifier: string): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  async create(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"POST\", \"/organizations\", request, true, true);\n    // Forcing a sync will notify organization service that they need to repull\n    await this.syncService.fullSync(true);\n    return new OrganizationResponse(r);\n  }\n\n  async createLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"POST\", \"/organizations/license\", data, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async save(id: string, request: OrganizationUpdateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    const data = new OrganizationResponse(r);\n    await this.syncService.fullSync(true);\n    return data;\n  }\n\n  async updatePayment(id: string, request: PaymentRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  async upgrade(id: string, request: OrganizationUpgradeRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/upgrade\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/subscription\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async updateSeats(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/seat\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/storage\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async verifyBank(id: string, request: VerifyBankRequest): Promise<void> {\n    await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/verify-bank\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async cancel(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  async reinstate(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  async leave(id: string): Promise<void> {\n    await this.apiService.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n    await this.syncService.fullSync(true);\n  }\n\n  async delete(id: string, request: SecretVerificationRequest): Promise<void> {\n    await this.apiService.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n    await this.syncService.fullSync(true);\n  }\n\n  async updateLicense(id: string, data: FormData): Promise<void> {\n    await this.apiService.send(\"POST\", \"/organizations/\" + id + \"/license\", data, true, false);\n  }\n\n  async importDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/import\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getOrCreateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getApiKeyInformation(\n    id: string,\n    organizationApiKeyType: OrganizationApiKeyType = null\n  ): Promise<ListResponse<OrganizationApiKeyInformationResponse>> {\n    const uri =\n      organizationApiKeyType === null\n        ? \"/organizations/\" + id + \"/api-key-information\"\n        : \"/organizations/\" + id + \"/api-key-information/\" + organizationApiKeyType;\n    const r = await this.apiService.send(\"GET\", uri, null, true, true);\n    return new ListResponse(r, OrganizationApiKeyInformationResponse);\n  }\n\n  async rotateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async updateTaxInfo(id: string, request: OrganizationTaxInfoUpdateRequest): Promise<void> {\n    // Can't broadcast anything because the response doesn't have content\n    return this.apiService.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  async getKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async updateKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/keys\",\n      request,\n      true,\n      true\n    );\n    // Not broadcasting anything because data on this response doesn't correspond to `Organization`\n    return new OrganizationKeysResponse(r);\n  }\n\n  async getSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async updateSso(id: string, request: OrganizationSsoRequest): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/sso\",\n      request,\n      true,\n      true\n    );\n    // Not broadcasting anything because data on this response doesn't correspond to `Organization`\n    return new OrganizationSsoResponse(r);\n  }\n}\n","import { Subject } from \"rxjs\";\n\nimport { SyncNotifierService as SyncNotifierServiceAbstraction } from \"../../abstractions/sync/syncNotifier.service.abstraction\";\nimport { SyncEventArgs } from \"../../types/syncEventArgs\";\n\n/**\n * This class should most likely have 0 dependencies because it will hopefully\n * be rolled into SyncService once upon a time.\n */\nexport class SyncNotifierService implements SyncNotifierServiceAbstraction {\n  private _sync = new Subject<SyncEventArgs>();\n\n  sync$ = this._sync.asObservable();\n\n  next(event: SyncEventArgs): void {\n    this._sync.next(event);\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { ServerConfig } from \"./server-config\";\n\nexport abstract class ConfigServiceAbstraction {\n  serverConfig$: Observable<ServerConfig | null>;\n}\n","import { BehaviorSubject, concatMap, map, switchMap, timer, EMPTY } from \"rxjs\";\n\nimport { ConfigApiServiceAbstraction } from \"../../abstractions/config/config-api.service.abstraction\";\nimport { ConfigServiceAbstraction } from \"../../abstractions/config/config.service.abstraction\";\nimport { ServerConfig } from \"../../abstractions/config/server-config\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { ServerConfigData } from \"../../models/data/server-config.data\";\n\nexport class ConfigService implements ConfigServiceAbstraction {\n  private _serverConfig = new BehaviorSubject<ServerConfig | null>(null);\n  serverConfig$ = this._serverConfig.asObservable();\n\n  constructor(\n    private stateService: StateService,\n    private configApiService: ConfigApiServiceAbstraction\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        switchMap((unlocked) => {\n          if (!unlocked) {\n            this._serverConfig.next(null);\n            return EMPTY;\n          }\n\n          // Re-fetch the server config every hour\n          return timer(0, 3600 * 1000).pipe(map(() => unlocked));\n        }),\n        concatMap(async (unlocked) => {\n          return unlocked ? await this.buildServerConfig() : null;\n        })\n      )\n      .subscribe((serverConfig) => {\n        this._serverConfig.next(serverConfig);\n      });\n  }\n\n  private async buildServerConfig(): Promise<ServerConfig> {\n    const data = await this.stateService.getServerConfig();\n    const domain = data ? new ServerConfig(data) : null;\n\n    if (domain == null || !domain.isValid() || domain.expiresSoon()) {\n      const value = await this.fetchServerConfig();\n      return value ?? domain;\n    }\n\n    return domain;\n  }\n\n  private async fetchServerConfig(): Promise<ServerConfig> {\n    try {\n      const response = await this.configApiService.get();\n\n      if (response != null) {\n        const data = new ServerConfigData(response);\n        await this.stateService.setServerConfig(data);\n        return new ServerConfig(data);\n      }\n    } catch {\n      return null;\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { ConfigApiServiceAbstraction as ConfigApiServiceAbstraction } from \"../../abstractions/config/config-api.service.abstraction\";\nimport { ServerConfigResponse } from \"../../models/response/server-config.response\";\n\nexport class ConfigApiService implements ConfigApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  async get(): Promise<ServerConfigResponse> {\n    const r = await this.apiService.send(\"GET\", \"/config\", null, true, true);\n    return new ServerConfigResponse(r);\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { ValidationService as ValidationServiceAbstraction } from \"../abstractions/validation.service\";\nimport { ErrorResponse } from \"../models/response/error.response\";\n\nexport class ValidationService implements ValidationServiceAbstraction {\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  showError(data: any): string[] {\n    const defaultErrorMessage = this.i18nService.t(\"unexpectedError\");\n    let errors: string[] = [];\n\n    if (data != null && typeof data === \"string\") {\n      errors.push(data);\n    } else if (data == null || typeof data !== \"object\") {\n      errors.push(defaultErrorMessage);\n    } else if (data.validationErrors != null) {\n      errors = errors.concat((data as ErrorResponse).getAllMessages());\n    } else {\n      errors.push(data.message ? data.message : defaultErrorMessage);\n    }\n\n    if (errors.length === 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors[0]);\n    } else if (errors.length > 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors, {\n        timeout: 5000 * errors.length,\n      });\n    }\n\n    return errors;\n  }\n}\n","import {\n  AbstractStorageService,\n  MemoryStorageServiceInterface,\n} from \"../abstractions/storage.service\";\n\nexport class MemoryStorageService\n  extends AbstractStorageService\n  implements MemoryStorageServiceInterface\n{\n  private store = new Map<string, any>();\n\n  get<T>(key: string): Promise<T> {\n    if (this.store.has(key)) {\n      const obj = this.store.get(key);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string): Promise<boolean> {\n    return (await this.get(key)) != null;\n  }\n\n  save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      return this.remove(key);\n    }\n    this.store.set(key, obj);\n    return Promise.resolve();\n  }\n\n  remove(key: string): Promise<any> {\n    this.store.delete(key);\n    return Promise.resolve();\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\n@Injectable()\nexport class BroadcasterMessagingService implements MessagingService {\n  constructor(private broadcasterService: BroadcasterService) {}\n\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    this.broadcasterService.send(message);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"@bitwarden/common/enums/htmlStorageLocation\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storage-options\";\n\n@Injectable()\nexport class HtmlStorageService implements AbstractStorageService {\n  get defaultOptions(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Session };\n  }\n\n  get<T>(key: string, options: StorageOptions = this.defaultOptions): Promise<T> {\n    let json: string = null;\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        json = window.localStorage.getItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        json = window.sessionStorage.getItem(key);\n        break;\n    }\n\n    if (json != null) {\n      const obj = JSON.parse(json);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string, options: StorageOptions = this.defaultOptions): Promise<boolean> {\n    return (await this.get(key, options)) != null;\n  }\n\n  save(key: string, obj: any, options: StorageOptions = this.defaultOptions): Promise<any> {\n    if (obj == null) {\n      return this.remove(key, options);\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const json = JSON.stringify(obj);\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.setItem(key, json);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.setItem(key, json);\n        break;\n    }\n    return Promise.resolve();\n  }\n\n  remove(key: string, options: StorageOptions = this.defaultOptions): Promise<any> {\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.removeItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.removeItem(key);\n        break;\n    }\n    return Promise.resolve();\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\n\nexport class ContainerService {\n  constructor(private cryptoService: CryptoService, private encryptService: EncryptService) {}\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  /**\n   * @throws Will throw if CryptoService was not instantiated and provided to the ContainerService constructor\n   */\n  getCryptoService(): CryptoService {\n    if (this.cryptoService == null) {\n      throw new Error(\"ContainerService.cryptoService not initialized.\");\n    }\n    return this.cryptoService;\n  }\n\n  /**\n   * @throws Will throw if EncryptService was not instantiated and provided to the ContainerService constructor\n   */\n  getEncryptService(): EncryptService {\n    if (this.encryptService == null) {\n      throw new Error(\"ContainerService.encryptService not initialized.\");\n    }\n    return this.encryptService;\n  }\n}\n","import { Inject, Injectable } from \"@angular/core\";\n\nimport { WINDOW } from \"@bitwarden/angular/services/injection-tokens\";\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EncryptService } from \"@bitwarden/common/abstractions/encrypt.service\";\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventUploadService as EventUploadServiceAbstraction } from \"@bitwarden/common/abstractions/event/event-upload.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/abstractions/twoFactor.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { ContainerService } from \"@bitwarden/common/services/container.service\";\nimport { EventUploadService } from \"@bitwarden/common/services/event/event-upload.service\";\nimport { VaultTimeoutService as VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeout.service\";\n\nimport { I18nService } from \"./i18n.service\";\n\n@Injectable()\nexport class InitService {\n  constructor(\n    @Inject(WINDOW) private win: Window,\n    private environmentService: EnvironmentServiceAbstraction,\n    private notificationsService: NotificationsServiceAbstraction,\n    private vaultTimeoutService: VaultTimeoutServiceAbstraction,\n    private i18nService: I18nServiceAbstraction,\n    private eventUploadService: EventUploadServiceAbstraction,\n    private twoFactorService: TwoFactorServiceAbstraction,\n    private stateService: StateServiceAbstraction,\n    private cryptoService: CryptoServiceAbstraction,\n    private themingService: AbstractThemingService,\n    private encryptService: EncryptService\n  ) {}\n\n  init() {\n    return async () => {\n      await this.stateService.init();\n\n      const urls = process.env.URLS as Urls;\n      urls.base ??= this.win.location.origin;\n      this.environmentService.setUrls(urls);\n\n      setTimeout(() => this.notificationsService.init(), 3000);\n      (this.vaultTimeoutService as VaultTimeoutService).init(true);\n      const locale = await this.stateService.getLocale();\n      await (this.i18nService as I18nService).init(locale);\n      (this.eventUploadService as EventUploadService).init(true);\n      this.twoFactorService.init();\n      const htmlEl = this.win.document.documentElement;\n      htmlEl.classList.add(\"locale_\" + this.i18nService.translationLocale);\n      await this.themingService.monitorThemeChanges();\n      const containerService = new ContainerService(this.cryptoService, this.encryptService);\n      containerService.attachToGlobal(this.win);\n    };\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, Injectable, Injector } from \"@angular/core\";\nimport * as jq from \"jquery\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService as BaseModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Injectable()\nexport class ModalService extends BaseModalService {\n  el: any = null;\n  modalOpen = false;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    applicationRef: ApplicationRef,\n    injector: Injector,\n    private messagingService: MessagingService\n  ) {\n    super(componentFactoryResolver, applicationRef, injector);\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    modalRef.onCreated.pipe(first()).subscribe(() => {\n      const modals = Array.from(document.querySelectorAll(\".modal\"));\n      if (modals.length > 0) {\n        this.el = jq(modals[0]);\n        this.el.modal(\"show\");\n\n        this.el.on(\"show.bs.modal\", () => {\n          modalRef.show();\n          this.messagingService.send(\"modalShow\");\n        });\n        this.el.on(\"shown.bs.modal\", () => {\n          modalRef.shown();\n          this.messagingService.send(\"modalShown\");\n          if (!Utils.isMobileBrowser) {\n            this.el.find(\"*[appAutoFocus]\").focus();\n          }\n        });\n        this.el.on(\"hide.bs.modal\", () => {\n          this.messagingService.send(\"modalClose\");\n        });\n        this.el.on(\"hidden.bs.modal\", () => {\n          modalRef.closed();\n          this.messagingService.send(\"modalClosed\");\n        });\n      }\n    });\n\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      if (this.el != null) {\n        this.el.modal(\"hide\");\n      }\n    });\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from \"@bitwarden/angular/components/password-reprompt.component\";\n\n@Component({\n  templateUrl: \"password-reprompt.component.html\",\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"passwordConfirmation\" | i18n }}\n        </h1>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"passwordConfirmationDesc\" | i18n }}\n\n        <div class=\"form-group\">\n          <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n          <div class=\"d-flex\">\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appAutofocus\n              appInputVerbatim\n            />\n            <button\n              type=\"button\"\n              class=\"ml-1 btn btn-link\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\">\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from \"@bitwarden/angular/services/passwordReprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n  component = PasswordRepromptComponent;\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport class FileDownloadBuilder {\n  get blobOptions(): any {\n    const options = this._request.blobOptions ?? {};\n    if (options.type == null) {\n      options.type = this.fileType;\n    }\n    return options;\n  }\n\n  get blob(): Blob {\n    if (this.blobOptions != null) {\n      return new Blob([this._request.blobData], this.blobOptions);\n    } else {\n      return new Blob([this._request.blobData]);\n    }\n  }\n\n  get downloadMethod(): \"save\" | \"open\" {\n    if (this._request.downloadMethod != null) {\n      return this._request.downloadMethod;\n    }\n    return this.fileType != \"application/pdf\" ? \"save\" : \"open\";\n  }\n\n  private get fileType() {\n    const fileNameLower = this._request.fileName.toLowerCase();\n    if (fileNameLower.endsWith(\".pdf\")) {\n      return \"application/pdf\";\n    } else if (fileNameLower.endsWith(\".xlsx\")) {\n      return \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    } else if (fileNameLower.endsWith(\".docx\")) {\n      return \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n    } else if (fileNameLower.endsWith(\".pptx\")) {\n      return \"application/vnd.openxmlformats-officedocument.presentationml.presentation\";\n    } else if (fileNameLower.endsWith(\".csv\")) {\n      return \"text/csv\";\n    } else if (fileNameLower.endsWith(\".png\")) {\n      return \"image/png\";\n    } else if (fileNameLower.endsWith(\".jpg\") || fileNameLower.endsWith(\".jpeg\")) {\n      return \"image/jpeg\";\n    } else if (fileNameLower.endsWith(\".gif\")) {\n      return \"image/gif\";\n    }\n    return null;\n  }\n\n  constructor(private readonly _request: FileDownloadRequest) {}\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FileDownloadBuilder } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadBuilder\";\nimport { FileDownloadRequest } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadRequest\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Injectable()\nexport class WebFileDownloadService implements FileDownloadService {\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  download(request: FileDownloadRequest): void {\n    const builder = new FileDownloadBuilder(request);\n    const a = window.document.createElement(\"a\");\n    if (builder.downloadMethod === \"save\") {\n      a.download = request.fileName;\n    } else if (!this.platformUtilsService.isSafari()) {\n      a.target = \"_blank\";\n    }\n    a.href = URL.createObjectURL(builder.blob);\n    a.style.position = \"fixed\";\n    window.document.body.appendChild(a);\n    a.click();\n    window.document.body.removeChild(a);\n  }\n}\n","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  Mobile = \"mobile\",\n  Cli = \"cli\",\n  DirectoryConnector = \"connector\",\n}\n","import { Injectable } from \"@angular/core\";\nimport Swal, { SweetAlertIcon } from \"sweetalert2\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ClientType } from \"@bitwarden/common/enums/clientType\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\n\n@Injectable()\nexport class WebPlatformUtilsService implements PlatformUtilsService {\n  private browserCache: DeviceType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.browserCache != null) {\n      return this.browserCache;\n    }\n\n    if (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    ) {\n      this.browserCache = DeviceType.FirefoxBrowser;\n    } else if (navigator.userAgent.indexOf(\" OPR/\") >= 0) {\n      this.browserCache = DeviceType.OperaBrowser;\n    } else if (navigator.userAgent.indexOf(\" Edg/\") !== -1) {\n      this.browserCache = DeviceType.EdgeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Vivaldi/\") !== -1) {\n      this.browserCache = DeviceType.VivaldiBrowser;\n    } else if (\n      navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n      navigator.userAgent.indexOf(\"Chrome\") === -1\n    ) {\n      this.browserCache = DeviceType.SafariBrowser;\n    } else if ((window as any).chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1) {\n      this.browserCache = DeviceType.ChromeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Trident/\") !== -1) {\n      this.browserCache = DeviceType.IEBrowser;\n    } else {\n      this.browserCache = DeviceType.UnknownBrowser;\n    }\n\n    return this.browserCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"browser\", \"\");\n  }\n\n  getClientType() {\n    return ClientType.Web;\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxBrowser;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeBrowser;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeBrowser;\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaBrowser;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiBrowser;\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariBrowser;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  isViewOpen(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  launchUri(uri: string, options?: any): void {\n    const a = document.createElement(\"a\");\n    a.href = uri;\n    if (options == null || !options.sameWindow) {\n      a.target = \"_blank\";\n      a.rel = \"noreferrer noopener\";\n    }\n    a.classList.add(\"d-none\");\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(process.env.APPLICATION_VERSION || \"-\");\n  }\n\n  async getApplicationVersionNumber(): Promise<string> {\n    return (await this.getApplicationVersion()).split(RegExp(\"[+|-]\"))[0].trim();\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  async showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml = false,\n    target?: string\n  ) {\n    let iconClasses: string = null;\n    if (type != null) {\n      // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n      switch (type) {\n        case \"success\":\n          iconClasses = \"bwi-check text-success\";\n          break;\n        case \"warning\":\n          iconClasses = \"bwi-exclamation-triangle text-warning\";\n          break;\n        case \"error\":\n          iconClasses = \"bwi-error text-danger\";\n          break;\n        case \"info\":\n          iconClasses = \"bwi-info-circle text-info\";\n          break;\n        default:\n          break;\n      }\n    }\n\n    const bootstrapModal = document.querySelector(\"div.modal\");\n    if (bootstrapModal != null) {\n      bootstrapModal.removeAttribute(\"tabindex\");\n    }\n\n    const iconHtmlStr =\n      iconClasses != null ? `<i class=\"swal-custom-icon bwi ${iconClasses}\"></i>` : undefined;\n    const confirmed = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n      iconHtml: iconHtmlStr,\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      titleText: title,\n      showCancelButton: cancelText != null,\n      cancelButtonText: cancelText,\n      showConfirmButton: true,\n      confirmButtonText: confirmText == null ? this.i18nService.t(\"ok\") : confirmText,\n      target: target != null ? target : \"body\",\n    });\n\n    if (bootstrapModal != null) {\n      bootstrapModal.setAttribute(\"tabindex\", \"-1\");\n    }\n\n    return confirmed.value;\n  }\n\n  isDev(): boolean {\n    return process.env.NODE_ENV === \"development\";\n  }\n\n  isSelfHost(): boolean {\n    return process.env.ENV.toString() === \"selfhosted\";\n  }\n\n  copyToClipboard(text: string, options?: any): void | boolean {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      let copyEl = doc.body;\n      // For some reason copy command won't work when modal is open if appending to body\n      if (doc.body.classList.contains(\"modal-open\")) {\n        copyEl = doc.body.querySelector<HTMLElement>(\".modal\");\n      }\n      copyEl.appendChild(textarea);\n      textarea.select();\n      let success = false;\n      try {\n        // Security exception may be thrown by some browsers.\n        success = doc.execCommand(\"copy\");\n        if (!success) {\n          this.logService.debug(\"Copy command unsupported or disabled.\");\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        copyEl.removeChild(textarea);\n      }\n      return success;\n    }\n  }\n\n  readFromClipboard(options?: any): Promise<string> {\n    throw new Error(\"Cannot read from clipboard on web.\");\n  }\n\n  supportsBiometric() {\n    return Promise.resolve(false);\n  }\n\n  authenticateBiometric() {\n    return Promise.resolve(false);\n  }\n\n  supportsSecureStorage() {\n    return false;\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { APP_INITIALIZER, NgModule, Optional, SkipSelf } from \"@angular/core\";\n\nimport {\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n  LOCALES_DIRECTORY,\n  SYSTEM_LANGUAGE,\n  MEMORY_STORAGE,\n} from \"@bitwarden/angular/services/injection-tokens\";\nimport { JslibServicesModule } from \"@bitwarden/angular/services/jslib-services.module\";\nimport { ModalService as ModalServiceAbstraction } from \"@bitwarden/angular/services/modal.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LoginService as LoginServiceAbstraction } from \"@bitwarden/common/abstractions/login.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/abstractions/passwordReprompt.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService as BaseStateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { LoginService } from \"@bitwarden/common/services/login.service\";\nimport { MemoryStorageService } from \"@bitwarden/common/services/memoryStorage.service\";\n\nimport { BroadcasterMessagingService } from \"./broadcaster-messaging.service\";\nimport { EventService } from \"./event.service\";\nimport { HtmlStorageService } from \"./html-storage.service\";\nimport { I18nService } from \"./i18n.service\";\nimport { InitService } from \"./init.service\";\nimport { ModalService } from \"./modal.service\";\nimport { PasswordRepromptService } from \"./password-reprompt.service\";\nimport { PolicyListService } from \"./policy-list.service\";\nimport { RouterService } from \"./router.service\";\nimport { Account, GlobalState, StateService } from \"./state\";\nimport { StateMigrationService } from \"./state-migration.service\";\nimport { WebFileDownloadService } from \"./web-file-download.service\";\nimport { WebPlatformUtilsService } from \"./web-platform-utils.service\";\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, JslibServicesModule],\n  providers: [\n    InitService,\n    RouterService,\n    EventService,\n    PolicyListService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (initService: InitService) => initService.init(),\n      deps: [InitService],\n      multi: true,\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: false,\n    },\n    {\n      provide: I18nServiceAbstraction,\n      useClass: I18nService,\n      deps: [SYSTEM_LANGUAGE, LOCALES_DIRECTORY],\n    },\n    { provide: AbstractStorageService, useClass: HtmlStorageService },\n    {\n      provide: SECURE_STORAGE,\n      // TODO: platformUtilsService.isDev has a helper for this, but using that service here results in a circular dependency.\n      // We have a tech debt item in the backlog to break up platformUtilsService, but in the meantime simply checking the environement here is less cumbersome.\n      useClass: process.env.NODE_ENV === \"development\" ? HtmlStorageService : MemoryStorageService,\n    },\n    {\n      provide: MEMORY_STORAGE,\n      useClass: MemoryStorageService,\n    },\n    {\n      provide: PlatformUtilsServiceAbstraction,\n      useClass: WebPlatformUtilsService,\n    },\n    { provide: MessagingServiceAbstraction, useClass: BroadcasterMessagingService },\n    { provide: ModalServiceAbstraction, useClass: ModalService },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    StateService,\n    {\n      provide: BaseStateServiceAbstraction,\n      useExisting: StateService,\n    },\n    {\n      provide: PasswordRepromptServiceAbstraction,\n      useClass: PasswordRepromptService,\n    },\n    {\n      provide: FileDownloadService,\n      useClass: WebFileDownloadService,\n    },\n    {\n      provide: LoginServiceAbstraction,\n      useClass: LoginService,\n      deps: [StateService],\n    },\n  ],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule?: CoreModule) {\n    if (parentModule) {\n      throw new Error(\"CoreModule is already loaded. Import it in the AppModule only\");\n    }\n  }\n}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { GlobalState as BaseGlobalState } from \"@bitwarden/common/models/domain/global-state\";\n\nexport class GlobalState extends BaseGlobalState {\n  theme?: ThemeType = ThemeType.Light;\n  rememberEmail = true;\n}\n","import { I18nService as BaseI18nService } from \"@bitwarden/common/services/i18n.service\";\n\nexport class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string, localesDirectory: string) {\n    super(systemLanguage || \"en-US\", localesDirectory, async (formattedLocale: string) => {\n      const filePath =\n        this.localesDirectory +\n        \"/\" +\n        formattedLocale +\n        \"/messages.json?cache=\" +\n        process.env.CACHE_TAG;\n      const localesResult = await fetch(filePath);\n      const locales = await localesResult.json();\n      return locales;\n    });\n\n    // Please leave 'en' where it is, as it's our fallback language in case no translation can be found\n    this.supportedTranslationLocales = [\n      \"en\",\n      \"af\",\n      \"ar\",\n      \"az\",\n      \"be\",\n      \"bg\",\n      \"bn\",\n      \"bs\",\n      \"ca\",\n      \"cs\",\n      \"da\",\n      \"de\",\n      \"el\",\n      \"en-GB\",\n      \"en-IN\",\n      \"eo\",\n      \"es\",\n      \"et\",\n      \"eu\",\n      \"fi\",\n      \"fil\",\n      \"fr\",\n      \"he\",\n      \"hi\",\n      \"hr\",\n      \"hu\",\n      \"id\",\n      \"it\",\n      \"ja\",\n      \"ka\",\n      \"km\",\n      \"kn\",\n      \"ko\",\n      \"lv\",\n      \"ml\",\n      \"nb\",\n      \"nl\",\n      \"nn\",\n      \"pl\",\n      \"pt-PT\",\n      \"pt-BR\",\n      \"ro\",\n      \"ru\",\n      \"si\",\n      \"sk\",\n      \"sl\",\n      \"sr\",\n      \"sv\",\n      \"tr\",\n      \"uk\",\n      \"vi\",\n      \"zh-CN\",\n      \"zh-TW\",\n    ];\n  }\n}\n","import { Observable, ReplaySubject } from \"rxjs\";\n\nimport { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nexport class I18nService implements I18nServiceAbstraction {\n  private _locale = new ReplaySubject<string>(1);\n  locale$: Observable<string> = this._locale.asObservable();\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"ar\", \"العربية الفصحى\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"eu\", \"euskara\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.translationLocale = locale != null ? locale : this.systemLanguage;\n    this._locale.next(this.translationLocale);\n\n    try {\n      this.collator = new Intl.Collator(this.translationLocale, {\n        numeric: true,\n        sensitivity: \"base\",\n      });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.supportedTranslationLocales[0];\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n        await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string | number, p2?: string | number, p3?: string | number): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1.toString());\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2.toString());\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3.toString());\n      }\n    }\n\n    return result;\n  }\n\n  private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import { StateMigrationService as BaseStateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\n\nimport { Account } from \"./state/account\";\nimport { GlobalState } from \"./state/global-state\";\n\nexport class StateMigrationService extends BaseStateMigrationService<GlobalState, Account> {\n  protected async migrationStateFrom1To2(): Promise<void> {\n    await super.migrateStateFrom1To2();\n    const globals = (await this.get<GlobalState>(\"global\")) ?? this.stateFactory.createGlobal(null);\n    globals.rememberEmail = (await this.get<boolean>(\"rememberEmail\")) ?? globals.rememberEmail;\n    await this.set(\"global\", globals);\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { LoginWithDeviceComponent } from \"./login-with-device.component\";\nimport { LoginComponent } from \"./login.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [LoginComponent, LoginWithDeviceComponent],\n  exports: [LoginComponent, LoginWithDeviceComponent],\n})\nexport class LoginModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\n\nimport { VerticalStepContentComponent } from \"./vertical-step-content.component\";\nimport { VerticalStep } from \"./vertical-step.component\";\nimport { VerticalStepperComponent } from \"./vertical-stepper.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [VerticalStepperComponent, VerticalStep, VerticalStepContentComponent],\n  exports: [VerticalStepperComponent, VerticalStep],\n})\nexport class VerticalStepperModule {}\n","import { CdkStepperModule } from \"@angular/cdk/stepper\";\nimport { TitleCasePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { FormFieldModule } from \"@bitwarden/components\";\n\nimport { OrganizationCreateModule } from \"../../organizations/create/organization-create.module\";\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\nimport { RegisterFormModule } from \"../register-form/register-form.module\";\n\nimport { BillingComponent } from \"./billing.component\";\nimport { ConfirmationDetailsComponent } from \"./confirmation-details.component\";\nimport { AbmEnterpriseContentComponent } from \"./content/abm-enterprise-content.component\";\nimport { AbmTeamsContentComponent } from \"./content/abm-teams-content.component\";\nimport { CnetEnterpriseContentComponent } from \"./content/cnet-enterprise-content.component\";\nimport { CnetIndividualContentComponent } from \"./content/cnet-individual-content.component\";\nimport { CnetTeamsContentComponent } from \"./content/cnet-teams-content.component\";\nimport { DefaultContentComponent } from \"./content/default-content.component\";\nimport { EnterpriseContentComponent } from \"./content/enterprise-content.component\";\nimport { Enterprise1ContentComponent } from \"./content/enterprise1-content.component\";\nimport { Enterprise2ContentComponent } from \"./content/enterprise2-content.component\";\nimport { LogoCnetComponent } from \"./content/logo-cnet.component\";\nimport { LogoForbesComponent } from \"./content/logo-forbes.component\";\nimport { LogoUSNewsComponent } from \"./content/logo-us-news.component\";\nimport { TeamsContentComponent } from \"./content/teams-content.component\";\nimport { Teams1ContentComponent } from \"./content/teams1-content.component\";\nimport { Teams2ContentComponent } from \"./content/teams2-content.component\";\nimport { TrialInitiationComponent } from \"./trial-initiation.component\";\nimport { VerticalStepperModule } from \"./vertical-stepper/vertical-stepper.module\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    CdkStepperModule,\n    VerticalStepperModule,\n    FormFieldModule,\n    RegisterFormModule,\n    OrganizationCreateModule,\n    LooseComponentsModule,\n  ],\n  declarations: [\n    TrialInitiationComponent,\n    EnterpriseContentComponent,\n    TeamsContentComponent,\n    ConfirmationDetailsComponent,\n    BillingComponent,\n    DefaultContentComponent,\n    EnterpriseContentComponent,\n    Enterprise1ContentComponent,\n    Enterprise2ContentComponent,\n    TeamsContentComponent,\n    Teams1ContentComponent,\n    Teams2ContentComponent,\n    CnetEnterpriseContentComponent,\n    CnetIndividualContentComponent,\n    CnetTeamsContentComponent,\n    AbmEnterpriseContentComponent,\n    AbmTeamsContentComponent,\n    LogoCnetComponent,\n    LogoForbesComponent,\n    LogoUSNewsComponent,\n  ],\n  exports: [TrialInitiationComponent],\n  providers: [TitleCasePipe],\n})\nexport class TrialInitiationModule {}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\n\n@NgModule({\n  imports: [SharedModule, ScrollingModule],\n  declarations: [EntityUsersComponent],\n  exports: [EntityUsersComponent],\n})\nexport class OrganizationManageModule {}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\n\nimport { EnrollMasterPasswordReset } from \"./enroll-master-password-reset.component\";\n\n@NgModule({\n  imports: [SharedModule, ScrollingModule, LooseComponentsModule],\n  declarations: [EnrollMasterPasswordReset],\n  exports: [EnrollMasterPasswordReset],\n})\nexport class OrganizationUserModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { LoginModule } from \"./accounts/login/login.module\";\nimport { TrialInitiationModule } from \"./accounts/trial-initiation/trial-initiation.module\";\nimport { OrganizationCreateModule } from \"./organizations/create/organization-create.module\";\nimport { OrganizationManageModule } from \"./organizations/manage/organization-manage.module\";\nimport { OrganizationUserModule } from \"./organizations/users/organization-user.module\";\nimport { LooseComponentsModule, SharedModule } from \"./shared\";\nimport { OrganizationBadgeModule } from \"./vault/organization-badge/organization-badge.module\";\nimport { VaultFilterModule } from \"./vault/vault-filter/vault-filter.module\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    LooseComponentsModule,\n    TrialInitiationModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    OrganizationManageModule,\n    OrganizationUserModule,\n    OrganizationCreateModule,\n    LoginModule,\n  ],\n  exports: [\n    SharedModule,\n    LooseComponentsModule,\n    TrialInitiationModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    LoginModule,\n  ],\n  bootstrap: [],\n})\nexport class OssModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nconst routes: Routes = [{ path: \"**\", redirectTo: \"\" }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WildcardRoutingModule {}\n","export class ProviderAddOrganizationRequest {\n  organizationId: string;\n  key: string;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProviderAddOrganizationRequest } from \"@bitwarden/common/models/request/provider/provider-add-organization.request\";\n\n@Injectable()\nexport class WebProviderService {\n  constructor(\n    private cryptoService: CryptoService,\n    private syncService: SyncService,\n    private apiService: ApiService\n  ) {}\n\n  async addOrganizationToProvider(providerId: string, organizationId: string) {\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const providerKey = await this.cryptoService.getProviderKey(providerId);\n\n    const encryptedOrgKey = await this.cryptoService.encrypt(orgKey.key, providerKey);\n\n    const request = new ProviderAddOrganizationRequest();\n    request.organizationId = organizationId;\n    request.key = encryptedOrgKey.encryptedString;\n\n    const response = await this.apiService.postProviderAddOrganization(providerId, request);\n    await this.syncService.fullSync(true);\n    return response;\n  }\n\n  async detachOrganizastion(providerId: string, organizationId: string): Promise<any> {\n    await this.apiService.deleteProviderOrganization(providerId, organizationId);\n    await this.syncService.fullSync(true);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"addTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"addTitle\">\n          {{ \"addExistingOrganization\" | i18n }}\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <ng-container *ngIf=\"!loading\">\n          <table class=\"table table-hover table-list\">\n            <tr *ngFor=\"let o of organizations\">\n              <td width=\"30\">\n                <bit-avatar [text]=\"o.name\" [id]=\"o.id\" size=\"small\"></bit-avatar>\n              </td>\n              <td>\n                {{ o.name }}\n              </td>\n              <td>\n                <button\n                  class=\"btn btn-outline-secondary pull-right\"\n                  (click)=\"add(o)\"\n                  [disabled]=\"formPromise\"\n                >\n                  Add\n                </button>\n              </td>\n            </tr>\n          </table>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\n@Component({\n  selector: \"provider-add-organization\",\n  templateUrl: \"add-organization.component.html\",\n})\nexport class AddOrganizationComponent implements OnInit {\n  @Input() providerId: string;\n  @Input() organizations: Organization[];\n  @Output() onAddedOrganization = new EventEmitter();\n\n  provider: Provider;\n  formPromise: Promise<any>;\n  loading = true;\n\n  constructor(\n    private providerService: ProviderService,\n    private webProviderService: WebProviderService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private validationService: ValidationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    if (this.providerId == null) {\n      return;\n    }\n\n    this.provider = await this.providerService.get(this.providerId);\n\n    this.loading = false;\n  }\n\n  async add(organization: Organization) {\n    if (this.formPromise) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"addOrganizationConfirmation\", organization.name, this.provider.name),\n      organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.formPromise = this.webProviderService.addOrganizationToProvider(\n        this.providerId,\n        organization.id\n      );\n      await this.formPromise;\n    } catch (e) {\n      this.validationService.showError(e);\n      return;\n    } finally {\n      this.formPromise = null;\n    }\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"organizationJoinedProvider\")\n    );\n    this.onAddedOrganization.emit();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Injectable()\nexport class ProviderPermissionsGuard implements CanActivate {\n  constructor(\n    private providerService: ProviderService,\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const provider = await this.providerService.get(route.params.providerId);\n    if (provider == null) {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    if (!provider.isProviderAdmin && !provider.enabled) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"providerIsDisabled\"));\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    const permissionsCallback: (provider: Provider) => boolean = route.data?.providerPermissions;\n    const hasSpecifiedPermissions = permissionsCallback == null || permissionsCallback(provider);\n\n    if (!hasSpecifiedPermissions) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"accessDenied\"));\n      return this.router.createUrlTree([\"/providers\", provider.id]);\n    }\n\n    return true;\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"container page-content\">\n  <div class=\"page-header d-flex\">\n    <h1>{{ \"providers\" | i18n }}</h1>\n  </div>\n  <p *ngIf=\"!loaded\" class=\"text-muted\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"loaded\">\n    <table class=\"table table-hover table-list\" *ngIf=\"providers && providers.length\">\n      <tbody>\n        <tr *ngFor=\"let p of providers\">\n          <td width=\"30\">\n            <bit-avatar [text]=\"p.name\" [id]=\"p.id\" size=\"small\"></bit-avatar>\n          </td>\n          <td>\n            <a href=\"#\" [routerLink]=\"['/providers', p.id]\">{{ p.name }}</a>\n            <ng-container *ngIf=\"!p.enabled\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-danger\"\n                title=\"{{ 'providerIsDisabled' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"providerIsDisabled\" | i18n }}</span>\n            </ng-container>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"app-providers\",\n  templateUrl: \"providers.component.html\",\n})\nexport class ProvidersComponent implements OnInit {\n  providers: Provider[];\n  loaded = false;\n  actionPromise: Promise<any>;\n\n  constructor(private providerService: ProviderService, private i18nService: I18nService) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    await this.load();\n  }\n\n  async load() {\n    const providers = await this.providerService.getAll();\n    providers.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n    this.providers = providers;\n    this.loaded = true;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"clients\" | i18n }}</h1>\n\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <a class=\"btn btn-sm btn-outline-primary ml-3\" routerLink=\"create\" *ngIf=\"manageOrganizations\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newClientOrganization\" | i18n }}\n    </a>\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"addExistingOrganization()\"\n      *ngIf=\"manageOrganizations && showAddExisting\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"addExistingOrganization\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<ng-container\n  *ngIf=\"!loading && (clients | search: searchText:'organizationName':'id') as searchedClients\"\n>\n  <p *ngIf=\"!searchedClients.length\">{{ \"noClientsInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedClients.length\">\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <thead>\n        <tr>\n          <th colspan=\"2\">{{ \"name\" | i18n }}</th>\n          <th>{{ \"numberOfUsers\" | i18n }}</th>\n          <th>{{ \"billingPlan\" | i18n }}</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let o of searchedClients\">\n          <td width=\"30\">\n            <bit-avatar [text]=\"o.organizationName\" [id]=\"o.id\" size=\"small\"></bit-avatar>\n          </td>\n          <td>\n            <a [routerLink]=\"['/organizations', o.organizationId]\">{{ o.organizationName }}</a>\n          </td>\n          <td>\n            <span>{{ o.userCount }}</span>\n            <span *ngIf=\"o.seats != null\"> / {{ o.seats }}</span>\n          </td>\n          <td>\n            <span>{{ o.plan }}</span>\n          </td>\n          <td class=\"table-list-options\" *ngIf=\"manageOrganizations\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(o)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n\n<ng-template #add></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ProviderOrganizationOrganizationDetailsResponse } from \"@bitwarden/common/models/response/provider/provider-organization.response\";\n\nimport { WebProviderService } from \"../services/webProvider.service\";\n\nimport { AddOrganizationComponent } from \"./add-organization.component\";\n\nconst DisallowedPlanTypes = [\n  PlanType.Free,\n  PlanType.FamiliesAnnually2019,\n  PlanType.FamiliesAnnually,\n];\n\n@Component({\n  templateUrl: \"clients.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ClientsComponent implements OnInit {\n  @ViewChild(\"add\", { read: ViewContainerRef, static: true }) addModalRef: ViewContainerRef;\n\n  providerId: string;\n  searchText: string;\n  addableOrganizations: Organization[];\n  loading = true;\n  manageOrganizations = false;\n  showAddExisting = false;\n\n  clients: ProviderOrganizationOrganizationDetailsResponse[];\n  pagedClients: ProviderOrganizationOrganizationDetailsResponse[];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n  protected actionPromise: Promise<unknown>;\n  private pagedClientsCount = 0;\n\n  constructor(\n    private route: ActivatedRoute,\n    private providerService: ProviderService,\n    private apiService: ApiService,\n    private searchService: SearchService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private validationService: ValidationService,\n    private webProviderService: WebProviderService,\n    private logService: LogService,\n    private modalService: ModalService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n\n      await this.load();\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderClients(this.providerId);\n    this.clients = response.data != null && response.data.length > 0 ? response.data : [];\n    this.manageOrganizations =\n      (await this.providerService.get(this.providerId)).type === ProviderUserType.ProviderAdmin;\n    const candidateOrgs = (await this.organizationService.getAll()).filter(\n      (o) => o.isOwner && o.providerId == null\n    );\n    const allowedOrgsIds = await Promise.all(\n      candidateOrgs.map((o) => this.organizationApiService.get(o.id))\n    ).then((orgs) =>\n      orgs.filter((o) => !DisallowedPlanTypes.includes(o.planType)).map((o) => o.id)\n    );\n    this.addableOrganizations = candidateOrgs.filter((o) => allowedOrgsIds.includes(o.id));\n\n    this.showAddExisting = this.addableOrganizations.length !== 0;\n    this.loading = false;\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.clients && this.clients.length > this.pageSize;\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  async resetPaging() {\n    this.pagedClients = [];\n    this.loadMore();\n  }\n\n  loadMore() {\n    if (!this.clients || this.clients.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedClients.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedClientsCount > this.pageSize) {\n      pagedSize = this.pagedClientsCount;\n    }\n    if (this.clients.length > pagedLength) {\n      this.pagedClients = this.pagedClients.concat(\n        this.clients.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedClientsCount = this.pagedClients.length;\n    this.didScroll = this.pagedClients.length > this.pageSize;\n  }\n\n  async addExistingOrganization() {\n    const [modal] = await this.modalService.openViewRef(\n      AddOrganizationComponent,\n      this.addModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.organizations = this.addableOrganizations;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onAddedOrganization.subscribe(async () => {\n          try {\n            await this.load();\n            modal.close();\n          } catch (e) {\n            this.logService.error(`Handled exception: ${e}`);\n          }\n        });\n      }\n    );\n  }\n\n  async remove(organization: ProviderOrganizationOrganizationDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"detachOrganizationConfirmation\"),\n      organization.organizationName,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    this.actionPromise = this.webProviderService.detachOrganizastion(\n      this.providerId,\n      organization.id\n    );\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"detachedOrganization\", organization.organizationName)\n      );\n      await this.load();\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationPlansComponent } from \"@bitwarden/web-vault/app/settings/organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  providerId: string;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n    });\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"newClientOrganization\" | i18n }}</h1>\n</div>\n<p>{{ \"newClientOrganizationDesc\" | i18n }}</p>\n<app-organization-plans [providerId]=\"providerId\"></app-organization-plans>\n","export class ProviderUserAcceptRequest {\n  token: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ providerName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinProviderDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ProviderUserAcceptRequest } from \"@bitwarden/common/models/request/provider/provider-user-accept.request\";\nimport { BaseAcceptComponent } from \"@bitwarden/web-vault/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-provider\",\n  templateUrl: \"accept-provider.component.html\",\n})\nexport class AcceptProviderComponent extends BaseAcceptComponent {\n  providerName: string;\n\n  failedMessage = \"providerInviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"providerUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    private apiService: ApiService,\n    platformUtilService: PlatformUtilsService\n  ) {\n    super(router, platformUtilService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params) {\n    const request = new ProviderUserAcceptRequest();\n    request.token = qParams.token;\n\n    await this.apiService.postProviderUserAccept(\n      qParams.providerId,\n      qParams.providerUserId,\n      request\n    );\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"providerInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params) {\n    this.providerName = qParams.providerName;\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"eventLogs\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"form-inline\">\n      <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"start\"\n        placeholder=\"{{ 'startDate' | i18n }}\"\n        [(ngModel)]=\"start\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n      <span class=\"mx-2\">-</span>\n      <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n      <input\n        type=\"datetime-local\"\n        class=\"form-control form-control-sm\"\n        id=\"end\"\n        placeholder=\"{{ 'endDate' | i18n }}\"\n        [(ngModel)]=\"end\"\n        placeholder=\"YYYY-MM-DDTHH:MM\"\n        (change)=\"dirtyDates = true\"\n      />\n    </div>\n    <form #refreshForm [appApiAction]=\"refreshPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary ml-3\"\n        (click)=\"loadEvents(true)\"\n        [disabled]=\"loaded && refreshForm.loading\"\n      >\n        <i\n          class=\"bwi bwi-refresh bwi-fw\"\n          aria-hidden=\"true\"\n          [ngClass]=\"{ 'bwi-spin': loaded && refreshForm.loading }\"\n        ></i>\n        {{ \"refresh\" | i18n }}\n      </button>\n    </form>\n    <form #exportForm [appApiAction]=\"exportPromise\" class=\"d-inline\">\n      <button\n        type=\"button\"\n        class=\"btn btn-sm btn-outline-primary btn-submit manual ml-3\"\n        [ngClass]=\"{ loading: exportForm.loading }\"\n        (click)=\"exportEvents()\"\n        [disabled]=\"(loaded && exportForm.loading) || dirtyDates\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" aria-hidden=\"true\"></i>\n        <span>{{ \"export\" | i18n }}</span>\n      </button>\n    </form>\n  </div>\n</div>\n<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"loaded\">\n  <p *ngIf=\"!events || !events.length\">{{ \"noEventsInList\" | i18n }}</p>\n  <table class=\"table table-hover\" *ngIf=\"events && events.length\">\n    <thead>\n      <tr>\n        <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n        <th class=\"border-top-0\" width=\"40\">\n          <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n        </th>\n        <th class=\"border-top-0\" width=\"150\">{{ \"user\" | i18n }}</th>\n        <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let e of events\">\n        <td>{{ e.date | date: \"medium\" }}</td>\n        <td>\n          <i\n            class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n            title=\"{{ e.appName }}, {{ e.ip }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n        </td>\n        <td>\n          <span title=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n        </td>\n        <td [innerHTML]=\"e.message\"></td>\n      </tr>\n    </tbody>\n  </table>\n  <button\n    #moreBtn\n    [appApiAction]=\"morePromise\"\n    type=\"button\"\n    class=\"btn btn-block btn-link btn-submit\"\n    (click)=\"loadEvents(false)\"\n    [disabled]=\"loaded && $any(moreBtn).loading\"\n    *ngIf=\"continuationToken\"\n  >\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"loadMore\" | i18n }}</span>\n  </button>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { ExportService } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/event.response\";\nimport { BaseEventsComponent } from \"@bitwarden/web-vault/app/common/base.events.component\";\nimport { EventService } from \"@bitwarden/web-vault/app/core\";\n\n@Component({\n  selector: \"provider-events\",\n  templateUrl: \"events.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EventsComponent extends BaseEventsComponent implements OnInit {\n  exportFileName = \"provider-events\";\n  providerId: string;\n\n  private providerUsersUserIdMap = new Map<string, any>();\n  private providerUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    eventService: EventService,\n    i18nService: I18nService,\n    private providerService: ProviderService,\n    exportService: ExportService,\n    platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    logService: LogService,\n    private userNamePipe: UserNamePipe,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      eventService,\n      i18nService,\n      exportService,\n      platformUtilsService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n      if (provider == null || !provider.useEvents) {\n        this.router.navigate([\"/providers\", this.providerId]);\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async load() {\n    const response = await this.apiService.getProviderUsers(this.providerId);\n    response.data.forEach((u) => {\n      const name = this.userNamePipe.transform(u);\n      this.providerUsersIdMap.set(u.id, { name: name, email: u.email });\n      this.providerUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n    });\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  protected requestEvents(startDate: string, endDate: string, continuationToken: string) {\n    return this.apiService.getEventsProvider(\n      this.providerId,\n      startDate,\n      endDate,\n      continuationToken\n    );\n  }\n\n  protected getUserName(r: EventResponse, userId: string) {\n    if (r.installationId != null) {\n      return `Installation: ${r.installationId}`;\n    }\n\n    if (userId != null && this.providerUsersUserIdMap.has(userId)) {\n      return this.providerUsersUserIdMap.get(userId);\n    }\n\n    return null;\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"provider\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"people\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canManageUsers\"\n          >\n            {{ \"people\" | i18n }}\n          </a>\n          <a\n            routerLink=\"events\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"provider.canAccessEventLogs && accessEvents\"\n          >\n            {{ \"eventLogs\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"provider-manage\",\n  templateUrl: \"manage.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ManageComponent implements OnInit {\n  provider: Provider;\n  accessEvents = false;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.provider = await this.providerService.get(params.providerId);\n      this.accessEvents = this.provider.useEvents;\n    });\n  }\n}\n","export class ProviderUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export class ProviderUserConfirmRequest {\n  key: string;\n}\n","type ProviderUserBulkRequestEntry = {\n  id: string;\n  key: string;\n};\n\nexport class ProviderUserBulkConfirmRequest {\n  keys: ProviderUserBulkRequestEntry[];\n\n  constructor(keys: ProviderUserBulkRequestEntry[]) {\n    this.keys = keys;\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserBulkConfirmRequest } from \"@bitwarden/common/models/request/provider/provider-user-bulk-confirm.request\";\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/provider-user-bulk.request\";\nimport { BulkConfirmComponent as OrganizationBulkConfirmComponent } from \"@bitwarden/web-vault/app/organizations/members/components/bulk/bulk-confirm.component\";\nimport { BulkUserDetails } from \"@bitwarden/web-vault/app/organizations/members/components/bulk/bulk-status.component\";\n\n@Component({\n  templateUrl:\n    \"../../../../../../../apps/web/src/app/organizations/members/components/bulk/bulk-confirm.component.html\",\n})\nexport class BulkConfirmComponent extends OrganizationBulkConfirmComponent {\n  @Input() providerId: string;\n\n  protected isAccepted(user: BulkUserDetails) {\n    return user.status === ProviderUserStatusType.Accepted;\n  }\n\n  protected async getPublicKeys() {\n    const request = new ProviderUserBulkRequest(this.filteredUsers.map((user) => user.id));\n    return await this.apiService.postProviderUsersPublicKey(this.providerId, request);\n  }\n\n  protected getCryptoKey() {\n    return this.cryptoService.getProviderKey(this.providerId);\n  }\n\n  protected async postConfirmRequest(userIdsWithKeys: any[]) {\n    const request = new ProviderUserBulkConfirmRequest(userIdsWithKeys);\n    return await this.apiService.postProviderUserBulkConfirm(this.providerId, request);\n  }\n}\n","import { Component, Input } from \"@angular/core\";\n\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/provider-user-bulk.request\";\nimport { BulkRemoveComponent as OrganizationBulkRemoveComponent } from \"@bitwarden/web-vault/app/organizations/members/components/bulk/bulk-remove.component\";\n\n@Component({\n  templateUrl:\n    \"../../../../../../../apps/web/src/app/organizations/members/components/bulk/bulk-remove.component.html\",\n})\nexport class BulkRemoveComponent extends OrganizationBulkRemoveComponent {\n  @Input() providerId: string;\n\n  async deleteUsers() {\n    const request = new ProviderUserBulkRequest(this.users.map((user) => user.id));\n    return await this.apiService.deleteManyProviderUsers(this.providerId, request);\n  }\n\n  protected get removeUsersWarning() {\n    return this.i18nService.t(\"removeUsersWarning\");\n  }\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserInviteRequest {\n  emails: string[] = [];\n  type: ProviderUserType;\n}\n","import { ProviderUserType } from \"../../../enums/providerUserType\";\n\nexport class ProviderUserUpdateRequest {\n  type: ProviderUserType;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"providerInviteUserDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"emails\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"emails\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Emails\"\n              [(ngModel)]=\"emails\"\n              required\n              appAutoFocus\n            />\n            <small class=\"text-muted\">{{ \"inviteMultipleEmailDesc\" | i18n: \"20\" }}</small>\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userType\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/provider-users/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeServiceUser\"\n            [value]=\"userType.ServiceUser\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeServiceUser\">\n            {{ \"serviceUser\" | i18n }}\n            <small>{{ \"serviceUserDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"userTypeProviderAdmin\"\n            [value]=\"userType.ProviderAdmin\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"userTypeProviderAdmin\">\n            {{ \"providerAdmin\" | i18n }}\n            <small>{{ \"providerAdminDesc\" | i18n }}</small>\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"$any(deleteBtn).loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { PermissionsApi } from \"@bitwarden/common/models/api/permissions.api\";\nimport { ProviderUserInviteRequest } from \"@bitwarden/common/models/request/provider/provider-user-invite.request\";\nimport { ProviderUserUpdateRequest } from \"@bitwarden/common/models/request/provider/provider-user-update.request\";\n\n@Component({\n  selector: \"provider-user-add-edit\",\n  templateUrl: \"user-add-edit.component.html\",\n})\nexport class UserAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() providerUserId: string;\n  @Input() providerId: string;\n  @Output() onSavedUser = new EventEmitter();\n  @Output() onDeletedUser = new EventEmitter();\n\n  loading = true;\n  editMode = false;\n  title: string;\n  emails: string;\n  type: ProviderUserType = ProviderUserType.ServiceUser;\n  permissions = new PermissionsApi();\n  showCustom = false;\n  access: \"all\" | \"selected\" = \"selected\";\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  userType = ProviderUserType;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.providerUserId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editUser\");\n      try {\n        const user = await this.apiService.getProviderUser(this.providerId, this.providerUserId);\n        this.type = user.type;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteUser\");\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new ProviderUserUpdateRequest();\n        request.type = this.type;\n        this.formPromise = this.apiService.putProviderUser(\n          this.providerId,\n          this.providerUserId,\n          request\n        );\n      } else {\n        const request = new ProviderUserInviteRequest();\n        request.emails = this.emails.trim().split(/\\s*,\\s*/);\n        request.type = this.type;\n        this.formPromise = this.apiService.postProviderUserInvite(this.providerId, request);\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSavedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.apiService.deleteProviderUser(this.providerId, this.providerUserId);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.name)\n      );\n      this.onDeletedUser.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"people\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div class=\"btn-group btn-group-sm\" role=\"group\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == null }\"\n        (click)=\"filter(null)\"\n      >\n        {{ \"all\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"allCount\">{{ allCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Invited }\"\n        (click)=\"filter(userStatusType.Invited)\"\n      >\n        {{ \"invited\" | i18n }}\n        <span bitBadge badgeType=\"info\" *ngIf=\"invitedCount\">{{ invitedCount }}</span>\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        [ngClass]=\"{ active: status == userStatusType.Accepted }\"\n        (click)=\"filter(userStatusType.Accepted)\"\n      >\n        {{ \"accepted\" | i18n }}\n        <span bitBadge badgeType=\"warning\" *ngIf=\"acceptedCount\">{{ acceptedCount }}</span>\n      </button>\n    </div>\n    <div class=\"ml-3\">\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <div class=\"dropdown ml-3\" appListDropdown>\n      <button\n        class=\"btn btn-sm btn-outline-secondary dropdown-toggle\"\n        type=\"button\"\n        id=\"bulkActionsButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n        appA11yTitle=\"{{ 'options' | i18n }}\"\n      >\n        <i class=\"bwi bwi-cog\" aria-hidden=\"true\"></i>\n      </button>\n      <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkReinvite()\">\n          <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n          {{ \"reinviteSelected\" | i18n }}\n        </button>\n        <button\n          class=\"dropdown-item text-success\"\n          appStopClick\n          (click)=\"bulkConfirm()\"\n          *ngIf=\"showBulkConfirmUsers\"\n        >\n          <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n          {{ \"confirmSelected\" | i18n }}\n        </button>\n        <button class=\"dropdown-item text-danger\" appStopClick (click)=\"bulkRemove()\">\n          <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n          {{ \"remove\" | i18n }}\n        </button>\n        <div class=\"dropdown-divider\"></div>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n          <i class=\"bwi bwi-fw bwi-check-square\" aria-hidden=\"true\"></i>\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n          <i class=\"bwi bwi-fw bwi-minus-square\" aria-hidden=\"true\"></i>\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"inviteUser\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging() ? pagedUsers : (users | search: searchText:'name':'email':'id')) as searchedUsers\n  \"\n>\n  <p *ngIf=\"!searchedUsers.length\">{{ \"noUsersInList\" | i18n }}</p>\n  <ng-container *ngIf=\"searchedUsers.length\">\n    <app-callout\n      type=\"info\"\n      title=\"{{ 'confirmUsers' | i18n }}\"\n      icon=\"bwi bwi-check-circle\"\n      *ngIf=\"showConfirmUsers\"\n    >\n      {{ \"providerUsersNeedConfirmed\" | i18n }}\n    </app-callout>\n    <table\n      class=\"table table-hover table-list\"\n      infiniteScroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <tbody>\n        <tr *ngFor=\"let u of searchedUsers\">\n          <td (click)=\"checkUser(u)\" class=\"table-list-checkbox\">\n            <input type=\"checkbox\" [(ngModel)]=\"$any(u).checked\" appStopProp />\n          </td>\n          <td width=\"30\">\n            <bit-avatar [text]=\"u | userName\" [id]=\"u.userId\" size=\"small\"></bit-avatar>\n          </td>\n          <td>\n            <a href=\"#\" appStopClick (click)=\"edit(u)\">{{ u.email }}</a>\n            <span bitBadge badgeType=\"secondary\" *ngIf=\"u.status === userStatusType.Invited\">{{\n              \"invited\" | i18n\n            }}</span>\n            <span bitBadge badgeType=\"warning\" *ngIf=\"u.status === userStatusType.Accepted\">{{\n              \"accepted\" | i18n\n            }}</span>\n            <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n          </td>\n          <td>\n            <ng-container *ngIf=\"$any(u).twoFactorEnabled\">\n              <i\n                class=\"bwi bwi-lock\"\n                title=\"{{ 'userUsingTwoStep' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"userUsingTwoStep\" | i18n }}</span>\n            </ng-container>\n          </td>\n          <td>\n            <span *ngIf=\"u.type === userType.ProviderAdmin\">{{ \"providerAdmin\" | i18n }}</span>\n            <span *ngIf=\"u.type === userType.ServiceUser\">{{ \"serviceUser\" | i18n }}</span>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown>\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\">\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"reinvite(u)\"\n                  *ngIf=\"u.status === userStatusType.Invited\"\n                >\n                  <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n                  {{ \"resendInvitation\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item text-success\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"confirm(u)\"\n                  *ngIf=\"u.status === userStatusType.Accepted\"\n                >\n                  <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n                  {{ \"confirm\" | i18n }}\n                </a>\n                <a\n                  class=\"dropdown-item\"\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"events(u)\"\n                  *ngIf=\"accessEvents && u.status === userStatusType.Confirmed\"\n                >\n                  <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n                  {{ \"eventLogs\" | i18n }}\n                </a>\n                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"remove\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n<ng-template #bulkStatusTemplate></ng-template>\n<ng-template #bulkConfirmTemplate></ng-template>\n<ng-template #bulkRemoveTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { ProviderUserStatusType } from \"@bitwarden/common/enums/providerUserStatusType\";\nimport { ProviderUserType } from \"@bitwarden/common/enums/providerUserType\";\nimport { ProviderUserBulkRequest } from \"@bitwarden/common/models/request/provider/provider-user-bulk.request\";\nimport { ProviderUserConfirmRequest } from \"@bitwarden/common/models/request/provider/provider-user-confirm.request\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { ProviderUserBulkResponse } from \"@bitwarden/common/models/response/provider/provider-user-bulk.response\";\nimport { ProviderUserUserDetailsResponse } from \"@bitwarden/common/models/response/provider/provider-user.response\";\nimport { BasePeopleComponent } from \"@bitwarden/web-vault/app/common/base.people.component\";\nimport { EntityEventsComponent } from \"@bitwarden/web-vault/app/organizations/manage/entity-events.component\";\nimport { BulkStatusComponent } from \"@bitwarden/web-vault/app/organizations/members/components/bulk/bulk-status.component\";\n\nimport { BulkConfirmComponent } from \"./bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./bulk/bulk-remove.component\";\nimport { UserAddEditComponent } from \"./user-add-edit.component\";\n\n@Component({\n  selector: \"provider-people\",\n  templateUrl: \"people.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PeopleComponent\n  extends BasePeopleComponent<ProviderUserUserDetailsResponse>\n  implements OnInit\n{\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"groupsTemplate\", { read: ViewContainerRef, static: true })\n  groupsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n  @ViewChild(\"bulkStatusTemplate\", { read: ViewContainerRef, static: true })\n  bulkStatusModalRef: ViewContainerRef;\n  @ViewChild(\"bulkConfirmTemplate\", { read: ViewContainerRef, static: true })\n  bulkConfirmModalRef: ViewContainerRef;\n  @ViewChild(\"bulkRemoveTemplate\", { read: ViewContainerRef, static: true })\n  bulkRemoveModalRef: ViewContainerRef;\n\n  userType = ProviderUserType;\n  userStatusType = ProviderUserStatusType;\n  providerId: string;\n  accessEvents = false;\n\n  constructor(\n    apiService: ApiService,\n    private route: ActivatedRoute,\n    i18nService: I18nService,\n    modalService: ModalService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    private router: Router,\n    searchService: SearchService,\n    validationService: ValidationService,\n    logService: LogService,\n    searchPipe: SearchPipe,\n    userNamePipe: UserNamePipe,\n    stateService: StateService,\n    private providerService: ProviderService\n  ) {\n    super(\n      apiService,\n      searchService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      validationService,\n      modalService,\n      logService,\n      searchPipe,\n      userNamePipe,\n      stateService\n    );\n  }\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      const provider = await this.providerService.get(this.providerId);\n\n      if (!provider.canManageUsers) {\n        this.router.navigate([\"../\"], { relativeTo: this.route });\n        return;\n      }\n\n      this.accessEvents = provider.useEvents;\n\n      await this.load();\n\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n        if (qParams.viewEvents != null) {\n          const user = this.users.filter((u) => u.id === qParams.viewEvents);\n          if (user.length > 0 && user[0].status === ProviderUserStatusType.Confirmed) {\n            this.events(user[0]);\n          }\n        }\n      });\n    });\n  }\n\n  getUsers(): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    return this.apiService.getProviderUsers(this.providerId);\n  }\n\n  deleteUser(id: string): Promise<any> {\n    return this.apiService.deleteProviderUser(this.providerId, id);\n  }\n\n  revokeUser(id: string): Promise<any> {\n    // Not implemented.\n    return null;\n  }\n\n  restoreUser(id: string): Promise<any> {\n    // Not implemented.\n    return null;\n  }\n\n  reinviteUser(id: string): Promise<any> {\n    return this.apiService.postProviderUserReinvite(this.providerId, id);\n  }\n\n  async confirmUser(user: ProviderUserUserDetailsResponse, publicKey: Uint8Array): Promise<any> {\n    const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n    const key = await this.cryptoService.rsaEncrypt(providerKey.key, publicKey.buffer);\n    const request = new ProviderUserConfirmRequest();\n    request.key = key.encryptedString;\n    await this.apiService.postProviderUserConfirm(this.providerId, user.id, request);\n  }\n\n  async edit(user: ProviderUserUserDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      UserAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(user);\n        comp.providerId = this.providerId;\n        comp.providerUserId = user != null ? user.id : null;\n        comp.onSavedUser.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        comp.onDeletedUser.subscribe(() => {\n          modal.close();\n          this.removeUser(user);\n        });\n      }\n    );\n  }\n\n  async events(user: ProviderUserUserDetailsResponse) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = this.userNamePipe.transform(user);\n      comp.providerId = this.providerId;\n      comp.entityId = user.id;\n      comp.showUser = false;\n      comp.entity = \"user\";\n    });\n  }\n\n  async bulkRemove() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkRemoveComponent,\n      this.bulkRemoveModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  async bulkReinvite() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const users = this.getCheckedUsers();\n    const filteredUsers = users.filter((u) => u.status === ProviderUserStatusType.Invited);\n\n    if (filteredUsers.length <= 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"noSelectedUsersApplicable\")\n      );\n      return;\n    }\n\n    try {\n      const request = new ProviderUserBulkRequest(filteredUsers.map((user) => user.id));\n      const response = this.apiService.postManyProviderUserReinvite(this.providerId, request);\n      this.showBulkStatus(\n        users,\n        filteredUsers,\n        response,\n        this.i18nService.t(\"bulkReinviteMessage\")\n      );\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkConfirm() {\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const [modal] = await this.modalService.openViewRef(\n      BulkConfirmComponent,\n      this.bulkConfirmModalRef,\n      (comp) => {\n        comp.providerId = this.providerId;\n        comp.users = this.getCheckedUsers();\n      }\n    );\n\n    await modal.onClosedPromise();\n    await this.load();\n  }\n\n  private async showBulkStatus(\n    users: ProviderUserUserDetailsResponse[],\n    filteredUsers: ProviderUserUserDetailsResponse[],\n    request: Promise<ListResponse<ProviderUserBulkResponse>>,\n    successfullMessage: string\n  ) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      BulkStatusComponent,\n      this.bulkStatusModalRef,\n      (comp) => {\n        comp.loading = true;\n      }\n    );\n\n    // Workaround to handle closing the modal shortly after it has been opened\n    let close = false;\n    modal.onShown.subscribe(() => {\n      if (close) {\n        modal.close();\n      }\n    });\n\n    try {\n      const response = await request;\n\n      if (modal) {\n        const keyedErrors: any = response.data\n          .filter((r) => r.error !== \"\")\n          .reduce((a, x) => ({ ...a, [x.id]: x.error }), {});\n        const keyedFilteredUsers: any = filteredUsers.reduce((a, x) => ({ ...a, [x.id]: x }), {});\n\n        childComponent.users = users.map((user) => {\n          let message = keyedErrors[user.id] ?? successfullMessage;\n          // eslint-disable-next-line\n          if (!keyedFilteredUsers.hasOwnProperty(user.id)) {\n            message = this.i18nService.t(\"bulkFilteredMessage\");\n          }\n\n          return {\n            user: user,\n            error: keyedErrors.hasOwnProperty(user.id), // eslint-disable-line\n            message: message,\n          };\n        });\n        childComponent.loading = false;\n      }\n    } catch {\n      close = true;\n      modal.close();\n    }\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav\" *ngIf=\"provider\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <div class=\"my-auto d-flex align-items-center pl-1\">\n        <bit-avatar [text]=\"provider.name\" [id]=\"provider.id\"></bit-avatar>\n        <div class=\"org-name ml-3\">\n          <span>{{ provider.name }}</span>\n          <small class=\"text-muted\">{{ \"provider\" | i18n }}</small>\n        </div>\n        <div class=\"ml-3 card border-danger text-danger bg-transparent\" *ngIf=\"!provider.enabled\">\n          <div class=\"card-body py-2\">\n            <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n            {{ \"providerIsDisabled\" | i18n }}\n          </div>\n        </div>\n      </div>\n      <ul class=\"nav nav-tabs\" *ngIf=\"showMenuBar\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"clients\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-bank\" aria-hidden=\"true\"></i>\n            {{ \"clients\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showManageTab\">\n          <a class=\"nav-link\" [routerLink]=\"manageRoute\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-sliders\" aria-hidden=\"true\"></i>\n            {{ \"manage\" | i18n }}\n          </a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"showSettingsTab\">\n          <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\">\n            <i class=\"bwi bwi-cogs\" aria-hidden=\"true\"></i>\n            {{ \"settings\" | i18n }}\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n</div>\n<app-footer></app-footer>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\n\n@Component({\n  selector: \"providers-layout\",\n  templateUrl: \"providers-layout.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ProvidersLayoutComponent {\n  provider: Provider;\n  private providerId: string;\n\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    this.provider = await this.providerService.get(this.providerId);\n  }\n\n  get showMenuBar() {\n    return this.showManageTab || this.showSettingsTab;\n  }\n\n  get showManageTab() {\n    return this.provider.canManageUsers || this.provider.canAccessEventLogs;\n  }\n\n  get showSettingsTab() {\n    return this.provider.isProviderAdmin;\n  }\n\n  get manageRoute(): string {\n    switch (true) {\n      case this.provider.canManageUsers:\n        return \"manage/people\";\n      case this.provider.canAccessEventLogs:\n        return \"manage/events\";\n    }\n  }\n}\n","export class ProviderUpdateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n}\n","<div class=\"page-header\">\n  <h1>{{ \"myProvider\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"provider && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"provider.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"provider.billingEmail\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <bit-avatar [text]=\"provider.name\" [id]=\"provider.id\" size=\"large\"></bit-avatar>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ProviderUpdateRequest } from \"@bitwarden/common/models/request/provider/provider-update.request\";\nimport { ProviderResponse } from \"@bitwarden/common/models/response/provider/provider.response\";\n\n@Component({\n  selector: \"provider-account\",\n  templateUrl: \"account.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccountComponent {\n  selfHosted = false;\n  loading = true;\n  provider: ProviderResponse;\n  formPromise: Promise<any>;\n  taxFormPromise: Promise<any>;\n\n  private providerId: string;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.providerId = params.providerId;\n      try {\n        this.provider = await this.apiService.getProvider(this.providerId);\n      } catch (e) {\n        this.logService.error(`Handled exception: ${e}`);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new ProviderUpdateRequest();\n      request.name = this.provider.name;\n      request.businessName = this.provider.businessName;\n      request.billingEmail = this.provider.billingEmail;\n\n      this.formPromise = this.apiService.putProvider(this.providerId, request).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerUpdated\"));\n    } catch (e) {\n      this.logService.error(`Handled exception: ${e}`);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\n\n@Component({\n  selector: \"provider-settings\",\n  templateUrl: \"settings.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SettingsComponent {\n  constructor(private route: ActivatedRoute, private providerService: ProviderService) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      await this.providerService.get(params.providerId);\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myProvider\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setupProvider\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"setupProviderLoginDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Params } from \"@angular/router\";\n\nimport { BaseAcceptComponent } from \"@bitwarden/web-vault/app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-setup-provider\",\n  templateUrl: \"setup-provider.component.html\",\n})\nexport class SetupProviderComponent extends BaseAcceptComponent {\n  failedShortMessage = \"inviteAcceptFailedShort\";\n  failedMessage = \"inviteAcceptFailed\";\n\n  requiredParameters = [\"providerId\", \"email\", \"token\"];\n\n  async authedHandler(qParams: Params) {\n    this.router.navigate([\"/providers/setup\"], { queryParams: qParams });\n  }\n\n  async unauthedHandler(qParams: Params) {\n    // Empty\n  }\n}\n","export class ProviderSetupRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  token: string;\n  key: string;\n}\n","<app-navbar></app-navbar>\n<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"setupProvider\" | i18n }}</h1>\n  </div>\n  <p>{{ \"setupProviderDesc\" | i18n }}</p>\n\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"loading\">\n    <h2 class=\"mt-5\">{{ \"generalInformation\" | i18n }}</h2>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"name\">{{ \"providerName\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required />\n      </div>\n      <div class=\"form-group col-6\">\n        <label for=\"billingEmail\">{{ \"billingEmail\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"billingEmail\"\n          required\n        />\n      </div>\n    </div>\n\n    <div class=\"mt-4\">\n      <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"submit\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n</div>\n<app-footer></app-footer>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { ProviderSetupRequest } from \"@bitwarden/common/models/request/provider/provider-setup.request\";\n\n@Component({\n  selector: \"provider-setup\",\n  templateUrl: \"setup.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SetupComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  formPromise: Promise<any>;\n\n  providerId: string;\n  token: string;\n  name: string;\n  billingEmail: string;\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService\n  ) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.providerId == null || qParams.email == null || qParams.token == null;\n\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"emergencyInviteAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.providerId = qParams.providerId;\n      this.token = qParams.token;\n\n      // Check if provider exists, redirect if it does\n      try {\n        const provider = await this.apiService.getProvider(this.providerId);\n        if (provider.name != null) {\n          this.router.navigate([\"/providers\", provider.id], { replaceUrl: true });\n        }\n      } catch (e) {\n        this.validationService.showError(e);\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit();\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  async doSubmit() {\n    try {\n      const shareKey = await this.cryptoService.makeShareKey();\n      const key = shareKey[0].encryptedString;\n\n      const request = new ProviderSetupRequest();\n      request.name = this.name;\n      request.billingEmail = this.billingEmail;\n      request.token = this.token;\n      request.key = key;\n\n      const provider = await this.apiService.postProviderSetup(this.providerId, request);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"providerSetup\"));\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/providers\", provider.id]);\n    } catch (e) {\n      this.validationService.showError(e);\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\nimport { FrontendLayoutComponent } from \"@bitwarden/web-vault/app/layouts/frontend-layout.component\";\nimport { ProvidersComponent } from \"@bitwarden/web-vault/app/providers/providers.component\";\n\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\nimport { ProviderPermissionsGuard } from \"./guards/provider-permissions.guard\";\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    component: ProvidersComponent,\n  },\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    children: [\n      {\n        path: \"setup-provider\",\n        component: SetupProviderComponent,\n        data: { titleId: \"setupProvider\" },\n      },\n      {\n        path: \"accept-provider\",\n        component: AcceptProviderComponent,\n        data: { titleId: \"acceptProvider\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: \"setup\",\n        component: SetupComponent,\n      },\n      {\n        path: \":providerId\",\n        component: ProvidersLayoutComponent,\n        canActivate: [ProviderPermissionsGuard],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"clients\" },\n          { path: \"clients/create\", component: CreateOrganizationComponent },\n          { path: \"clients\", component: ClientsComponent, data: { titleId: \"clients\" } },\n          {\n            path: \"manage\",\n            component: ManageComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"people\",\n              },\n              {\n                path: \"people\",\n                component: PeopleComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"people\",\n                  providerPermissions: (provider: Provider) => provider.canManageUsers,\n                },\n              },\n              {\n                path: \"events\",\n                component: EventsComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"eventLogs\",\n                  providerPermissions: (provider: Provider) => provider.canAccessEventLogs,\n                },\n              },\n            ],\n          },\n          {\n            path: \"settings\",\n            component: SettingsComponent,\n            children: [\n              {\n                path: \"\",\n                pathMatch: \"full\",\n                redirectTo: \"account\",\n              },\n              {\n                path: \"account\",\n                component: AccountComponent,\n                canActivate: [ProviderPermissionsGuard],\n                data: {\n                  titleId: \"myProvider\",\n                  providerPermissions: (provider: Provider) => provider.isProviderAdmin,\n                },\n              },\n            ],\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProvidersRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { ComponentFactoryResolver, NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { OssModule } from \"@bitwarden/web-vault/app/oss.module\";\n\nimport { AddOrganizationComponent } from \"./clients/add-organization.component\";\nimport { ClientsComponent } from \"./clients/clients.component\";\nimport { CreateOrganizationComponent } from \"./clients/create-organization.component\";\nimport { ProviderPermissionsGuard } from \"./guards/provider-permissions.guard\";\nimport { AcceptProviderComponent } from \"./manage/accept-provider.component\";\nimport { BulkConfirmComponent } from \"./manage/bulk/bulk-confirm.component\";\nimport { BulkRemoveComponent } from \"./manage/bulk/bulk-remove.component\";\nimport { EventsComponent } from \"./manage/events.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\nimport { PeopleComponent } from \"./manage/people.component\";\nimport { UserAddEditComponent } from \"./manage/user-add-edit.component\";\nimport { ProvidersLayoutComponent } from \"./providers-layout.component\";\nimport { ProvidersRoutingModule } from \"./providers-routing.module\";\nimport { WebProviderService } from \"./services/webProvider.service\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SetupProviderComponent } from \"./setup/setup-provider.component\";\nimport { SetupComponent } from \"./setup/setup.component\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, OssModule, JslibModule, ProvidersRoutingModule],\n  declarations: [\n    AcceptProviderComponent,\n    AccountComponent,\n    AddOrganizationComponent,\n    BulkConfirmComponent,\n    BulkRemoveComponent,\n    ClientsComponent,\n    CreateOrganizationComponent,\n    EventsComponent,\n    ManageComponent,\n    PeopleComponent,\n    ProvidersLayoutComponent,\n    SettingsComponent,\n    SetupComponent,\n    SetupProviderComponent,\n    UserAddEditComponent,\n  ],\n  providers: [WebProviderService, ProviderPermissionsGuard],\n})\nexport class ProvidersModule {\n  constructor(modalService: ModalService, componentFactoryResolver: ComponentFactoryResolver) {\n    modalService.registerComponentFactoryResolver(\n      AddOrganizationComponent,\n      componentFactoryResolver\n    );\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { ProvidersModule } from \"./providers/providers.module\";\n\nconst routes: Routes = [\n  {\n    path: \"providers\",\n    loadChildren: () => ProvidersModule,\n  },\n  {\n    path: \"sm\",\n    loadChildren: async () =>\n      (await import(\"./secrets-manager/secrets-manager.module\")).SecretsManagerModule,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { DOCUMENT } from \"@angular/common\";\nimport { Component, Inject, NgZone, OnDestroy, OnInit, SecurityContext } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport * as jq from \"jquery\";\nimport { IndividualConfig, ToastrService } from \"ngx-toastr\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport Swal from \"sweetalert2\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CipherService } from \"@bitwarden/common/abstractions/cipher.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventUploadService } from \"@bitwarden/common/abstractions/event/event-upload.service\";\nimport { InternalFolderService } from \"@bitwarden/common/abstractions/folder/folder.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SettingsService } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SyncService } from \"@bitwarden/common/abstractions/sync/sync.service.abstraction\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\n\nimport { PolicyListService, RouterService } from \"./core\";\nimport {\n  DisableSendPolicy,\n  MasterPasswordPolicy,\n  PasswordGeneratorPolicy,\n  PersonalOwnershipPolicy,\n  RequireSsoPolicy,\n  ResetPasswordPolicy,\n  SendOptionsPolicy,\n  SingleOrgPolicy,\n  TwoFactorAuthenticationPolicy,\n} from \"./organizations/policies\";\n\nconst BroadcasterSubscriptionId = \"AppComponent\";\nconst IdleTimeout = 60000 * 10; // 10 minutes\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"app.component.html\",\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  private lastActivity: number = null;\n  private idleTimer: number = null;\n  private isIdle = false;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private broadcasterService: BroadcasterService,\n    private folderService: InternalFolderService,\n    private settingsService: SettingsService,\n    private syncService: SyncService,\n    private passwordGenerationService: PasswordGenerationService,\n    private cipherService: CipherService,\n    private authService: AuthService,\n    private router: Router,\n    private toastrService: ToastrService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    private vaultTimeoutService: VaultTimeoutService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private sanitizer: DomSanitizer,\n    private searchService: SearchService,\n    private notificationsService: NotificationsService,\n    private routerService: RouterService,\n    private stateService: StateService,\n    private eventUploadService: EventUploadService,\n    private policyService: InternalPolicyService,\n    protected policyListService: PolicyListService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  ngOnInit() {\n    this.i18nService.locale$.pipe(takeUntil(this.destroy$)).subscribe((locale) => {\n      this.document.documentElement.lang = locale;\n    });\n\n    this.ngZone.runOutsideAngular(() => {\n      window.onmousemove = () => this.recordActivity();\n      window.onmousedown = () => this.recordActivity();\n      window.ontouchstart = () => this.recordActivity();\n      window.onclick = () => this.recordActivity();\n      window.onscroll = () => this.recordActivity();\n      window.onkeypress = () => this.recordActivity();\n    });\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"loggedIn\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"loggedOut\":\n            this.routerService.setPreviousUrl(null);\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"unlocked\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"authBlocked\":\n            this.routerService.setPreviousUrl(message.url);\n            this.router.navigate([\"/\"]);\n            break;\n          case \"logout\":\n            this.logOut(!!message.expired);\n            break;\n          case \"lockVault\":\n            await this.vaultTimeoutService.lock();\n            break;\n          case \"locked\":\n            this.notificationsService.updateConnection(false);\n            this.router.navigate([\"lock\"]);\n            break;\n          case \"lockedUrl\":\n            this.routerService.setPreviousUrl(message.url);\n            break;\n          case \"syncStarted\":\n            break;\n          case \"syncCompleted\":\n            break;\n          case \"upgradeOrganization\": {\n            const upgradeConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"upgradeOrganizationDesc\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (upgradeConfirmed) {\n              this.router.navigate([\n                \"organizations\",\n                message.organizationId,\n                \"settings\",\n                \"billing\",\n              ]);\n            }\n            break;\n          }\n          case \"premiumRequired\": {\n            const premiumConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"premiumRequiredDesc\"),\n              this.i18nService.t(\"premiumRequired\"),\n              this.i18nService.t(\"upgrade\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (premiumConfirmed) {\n              this.router.navigate([\"settings/subscription/premium\"]);\n            }\n            break;\n          }\n          case \"emailVerificationRequired\": {\n            const emailVerificationConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"emailVerificationRequiredDesc\"),\n              this.i18nService.t(\"emailVerificationRequired\"),\n              this.i18nService.t(\"learnMore\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (emailVerificationConfirmed) {\n              this.platformUtilsService.launchUri(\n                \"https://bitwarden.com/help/create-bitwarden-account/\"\n              );\n            }\n            break;\n          }\n          case \"showToast\":\n            this.showToast(message);\n            break;\n          case \"setFullWidth\":\n            this.setFullWidth();\n            break;\n          case \"convertAccountToKeyConnector\":\n            this.router.navigate([\"/remove-password\"]);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n\n    this.router.events.pipe(takeUntil(this.destroy$)).subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        const modals = Array.from(document.querySelectorAll(\".modal\"));\n        for (const modal of modals) {\n          (jq(modal) as any).modal(\"hide\");\n        }\n\n        if (document.querySelector(\".swal-modal\") != null) {\n          Swal.close(undefined);\n        }\n      }\n    });\n\n    this.policyListService.addPolicies([\n      new TwoFactorAuthenticationPolicy(),\n      new MasterPasswordPolicy(),\n      new ResetPasswordPolicy(),\n      new PasswordGeneratorPolicy(),\n      new SingleOrgPolicy(),\n      new RequireSsoPolicy(),\n      new PersonalOwnershipPolicy(),\n      new DisableSendPolicy(),\n      new SendOptionsPolicy(),\n    ]);\n\n    this.setFullWidth();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private async logOut(expired: boolean) {\n    await this.eventUploadService.uploadEvents();\n    const userId = await this.stateService.getUserId();\n    await Promise.all([\n      this.syncService.setLastSync(new Date(0)),\n      this.cryptoService.clearKeys(),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(),\n      this.keyConnectorService.clear(),\n    ]);\n\n    this.searchService.clearIndex();\n    this.authService.logOut(async () => {\n      if (expired) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          this.i18nService.t(\"loggedOut\"),\n          this.i18nService.t(\"loginExpired\")\n        );\n      }\n\n      await this.stateService.clean({ userId: userId });\n      Swal.close();\n      this.router.navigate([\"/\"]);\n    });\n  }\n\n  private async recordActivity() {\n    const now = new Date().getTime();\n    if (this.lastActivity != null && now - this.lastActivity < 250) {\n      return;\n    }\n\n    this.lastActivity = now;\n    this.stateService.setLastActive(now);\n    // Idle states\n    if (this.isIdle) {\n      this.isIdle = false;\n      this.idleStateChanged();\n    }\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idleTimer = window.setTimeout(() => {\n      if (!this.isIdle) {\n        this.isIdle = true;\n        this.idleStateChanged();\n      }\n    }, IdleTimeout);\n  }\n\n  private showToast(msg: any) {\n    let message = \"\";\n\n    const options: Partial<IndividualConfig> = {};\n\n    if (typeof msg.text === \"string\") {\n      message = msg.text;\n    } else if (msg.text.length === 1) {\n      message = msg.text[0];\n    } else {\n      msg.text.forEach(\n        (t: string) =>\n          (message += \"<p>\" + this.sanitizer.sanitize(SecurityContext.HTML, t) + \"</p>\")\n      );\n      options.enableHtml = true;\n    }\n    if (msg.options != null) {\n      if (msg.options.trustedHtml === true) {\n        options.enableHtml = true;\n      }\n      if (msg.options.timeout != null && msg.options.timeout > 0) {\n        options.timeOut = msg.options.timeout;\n      }\n    }\n\n    this.toastrService.show(message, msg.title, options, \"toast-\" + msg.type);\n  }\n\n  private idleStateChanged() {\n    if (this.isIdle) {\n      this.notificationsService.disconnectFromInactivity();\n    } else {\n      this.notificationsService.reconnectFromActivity();\n    }\n  }\n\n  private async setFullWidth() {\n    const enableFullWidth = await this.stateService.getEnableFullWidth();\n    if (enableFullWidth) {\n      document.body.classList.add(\"full-width\");\n    } else {\n      document.body.classList.remove(\"full-width\");\n    }\n  }\n}\n","<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport {\n  BasePolicy,\n  BasePolicyComponent,\n} from \"@bitwarden/web-vault/app/organizations/policies/base-policy.component\";\n\nexport class DisablePersonalVaultExportPolicy extends BasePolicy {\n  name = \"disablePersonalVaultExport\";\n  description = \"disablePersonalVaultExportDesc\";\n  type = PolicyType.DisablePersonalVaultExport;\n  component = DisablePersonalVaultExportPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-personal-vault-export\",\n  templateUrl: \"disable-personal-vault-export.component.html\",\n})\nexport class DisablePersonalVaultExportPolicyComponent extends BasePolicyComponent {}\n","<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\nimport {\n  BasePolicy,\n  BasePolicyComponent,\n} from \"@bitwarden/web-vault/app/organizations/policies/base-policy.component\";\n\nexport class MaximumVaultTimeoutPolicy extends BasePolicy {\n  name = \"maximumVaultTimeout\";\n  description = \"maximumVaultTimeoutDesc\";\n  type = PolicyType.MaximumVaultTimeout;\n  component = MaximumVaultTimeoutPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-maximum-timeout\",\n  templateUrl: \"maximum-vault-timeout.component.html\",\n})\nexport class MaximumVaultTimeoutPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    hours: [null],\n    minutes: [null],\n  });\n\n  constructor(private formBuilder: UntypedFormBuilder, private i18nService: I18nService) {\n    super();\n  }\n\n  loadData() {\n    const minutes = this.policyResponse.data?.minutes;\n\n    if (minutes == null) {\n      return;\n    }\n\n    this.data.patchValue({\n      hours: Math.floor(minutes / 60),\n      minutes: minutes % 60,\n    });\n  }\n\n  buildRequestData() {\n    if (this.data.value.hours == null && this.data.value.minutes == null) {\n      return null;\n    }\n\n    return {\n      minutes: this.data.value.hours * 60 + this.data.value.minutes,\n    };\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    const data = this.buildRequestData();\n    if (data?.minutes == null || data?.minutes <= 0) {\n      throw new Error(this.i18nService.t(\"invalidMaximumVaultTimeout\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <label for=\"hours\">{{ \"maximumVaultTimeoutLabel\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AppComponent as BaseAppComponent } from \"@bitwarden/web-vault/app/app.component\";\n\nimport { DisablePersonalVaultExportPolicy } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicy } from \"./policies/maximum-vault-timeout.component\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"../../../../apps/web/src/app/app.component.html\",\n})\nexport class AppComponent extends BaseAppComponent {\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.policyListService.addPolicies([\n      new MaximumVaultTimeoutPolicy(),\n      new DisablePersonalVaultExportPolicy(),\n    ]);\n  }\n}\n","import { ScimProviderType } from \"../../enums/scimProviderType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class ScimConfigApi extends BaseResponse {\n  enabled: boolean;\n  scimProvider: ScimProviderType;\n\n  constructor(data: any) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.scimProvider = this.getResponseProperty(\"ScimProvider\");\n  }\n}\n","import { ScimProviderType } from \"../../enums/scimProviderType\";\n\nexport class ScimConfigRequest {\n  constructor(private enabled: boolean, private scimProvider: ScimProviderType = null) {}\n}\n","<div class=\"page-header\">\n  <h1>{{ \"scim\" | i18n }}</h1>\n</div>\n\n<p>{{ \"scimDescription\" | i18n }}</p>\n\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  [formGroup]=\"formData\"\n  *ngIf=\"!loading\"\n>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n        aria-describedby=\"scimEnabledCheckboxDescHelpText\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"scimEnabledCheckboxDesc\" | i18n }}</label>\n      <div id=\"scimEnabledCheckboxDescHelpText\">\n        <small class=\"form-text text-muted\">{{ \"scimEnabledCheckboxDescHelpText\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n\n  <bit-form-field *ngIf=\"showScimSettings\">\n    <bit-label>{{ \"scimUrl\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"endpointUrl\" />\n    <button\n      type=\"button\"\n      bitSuffix\n      bitIconButton=\"bwi-clone\"\n      (click)=\"copyScimUrl()\"\n      [appA11yTitle]=\"'copyScimUrl' | i18n\"\n    ></button>\n  </bit-form-field>\n\n  <bit-form-field *ngIf=\"showScimSettings\">\n    <bit-label>{{ \"scimApiKey\" | i18n }}</bit-label>\n    <input\n      bitInput\n      [type]=\"showScimKey ? 'text' : 'password'\"\n      formControlName=\"clientSecret\"\n      id=\"clientSecret\"\n    />\n    <ng-container>\n      <button\n        type=\"button\"\n        bitSuffix\n        [disabled]=\"$any(rotateButton).loading\"\n        [bitIconButton]=\"showScimKey ? 'bwi-eye-slash' : 'bwi-eye'\"\n        (click)=\"toggleScimKey()\"\n        [appA11yTitle]=\"'toggleVisibility' | i18n\"\n      ></button>\n    </ng-container>\n    <ng-container #rotateButton [appApiAction]=\"rotatePromise\">\n      <!-- TODO: Convert to async actions -->\n      <button\n        [loading]=\"$any(rotateButton).loading\"\n        type=\"button\"\n        bitSuffix\n        bitIconButton=\"bwi-generate\"\n        (click)=\"rotateScimKey()\"\n        [appA11yTitle]=\"'rotateScimKey' | i18n\"\n      ></button>\n    </ng-container>\n    <button\n      type=\"button\"\n      bitSuffix\n      bitIconButton=\"bwi-clone\"\n      (click)=\"copyScimKey()\"\n      [appA11yTitle]=\"'copyScimKey' | i18n\"\n    ></button>\n    <bit-hint>{{ \"scimApiKeyHelperText\" | i18n }}</bit-hint>\n  </bit-form-field>\n\n  <button\n    type=\"submit\"\n    buttonType=\"primary\"\n    bitButton\n    [loading]=\"form.loading\"\n    [disabled]=\"form.loading\"\n  >\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormBuilder, FormControl } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationApiKeyType } from \"@bitwarden/common/enums/organizationApiKeyType\";\nimport { OrganizationConnectionType } from \"@bitwarden/common/enums/organizationConnectionType\";\nimport { ScimConfigApi } from \"@bitwarden/common/models/api/scim-config.api\";\nimport { OrganizationApiKeyRequest } from \"@bitwarden/common/models/request/organization-api-key.request\";\nimport { OrganizationConnectionRequest } from \"@bitwarden/common/models/request/organization-connection.request\";\nimport { ScimConfigRequest } from \"@bitwarden/common/models/request/scim-config.request\";\nimport { ApiKeyResponse } from \"@bitwarden/common/models/response/api-key.response\";\nimport { OrganizationConnectionResponse } from \"@bitwarden/common/models/response/organization-connection.response\";\n\n@Component({\n  selector: \"app-org-manage-scim\",\n  templateUrl: \"scim.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ScimComponent implements OnInit {\n  loading = true;\n  organizationId: string;\n  existingConnectionId: string;\n  formPromise: Promise<OrganizationConnectionResponse<ScimConfigApi>>;\n  rotatePromise: Promise<ApiKeyResponse>;\n  enabled = new FormControl(false);\n  showScimSettings = false;\n  showScimKey = false;\n\n  formData = this.formBuilder.group({\n    endpointUrl: new FormControl({ value: \"\", disabled: true }),\n    clientSecret: new FormControl({ value: \"\", disabled: true }),\n  });\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private environmentService: EnvironmentService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n    });\n  }\n\n  async load() {\n    const connection = await this.apiService.getOrganizationConnection(\n      this.organizationId,\n      OrganizationConnectionType.Scim,\n      ScimConfigApi\n    );\n    await this.setConnectionFormValues(connection);\n  }\n\n  async loadApiKey() {\n    const apiKeyRequest = new OrganizationApiKeyRequest();\n    apiKeyRequest.type = OrganizationApiKeyType.Scim;\n    apiKeyRequest.masterPasswordHash = \"N/A\";\n    const apiKeyResponse = await this.organizationApiService.getOrCreateApiKey(\n      this.organizationId,\n      apiKeyRequest\n    );\n    this.formData.setValue({\n      endpointUrl: this.getScimEndpointUrl(),\n      clientSecret: apiKeyResponse.apiKey,\n    });\n  }\n\n  async copyScimUrl() {\n    this.platformUtilsService.copyToClipboard(this.getScimEndpointUrl());\n  }\n\n  async rotateScimKey() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"rotateScimKeyWarning\"),\n      this.i18nService.t(\"rotateScimKey\"),\n      this.i18nService.t(\"rotateKey\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    const request = new OrganizationApiKeyRequest();\n    request.type = OrganizationApiKeyType.Scim;\n    request.masterPasswordHash = \"N/A\";\n\n    this.rotatePromise = this.organizationApiService.rotateApiKey(this.organizationId, request);\n\n    try {\n      const response = await this.rotatePromise;\n      this.formData.setValue({\n        endpointUrl: this.getScimEndpointUrl(),\n        clientSecret: response.apiKey,\n      });\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"scimApiKeyRotated\"));\n    } catch {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.rotatePromise = null;\n  }\n\n  async copyScimKey() {\n    this.platformUtilsService.copyToClipboard(this.formData.get(\"clientSecret\").value);\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationConnectionRequest(\n        this.organizationId,\n        OrganizationConnectionType.Scim,\n        true,\n        new ScimConfigRequest(this.enabled.value)\n      );\n      if (this.existingConnectionId == null) {\n        this.formPromise = this.apiService.createOrganizationConnection(request, ScimConfigApi);\n      } else {\n        this.formPromise = this.apiService.updateOrganizationConnection(\n          request,\n          ScimConfigApi,\n          this.existingConnectionId\n        );\n      }\n      const response = (await this.formPromise) as OrganizationConnectionResponse<ScimConfigApi>;\n      await this.setConnectionFormValues(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"scimSettingsSaved\"));\n    } catch (e) {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.formPromise = null;\n  }\n\n  getScimEndpointUrl() {\n    return this.environmentService.getScimUrl() + \"/\" + this.organizationId;\n  }\n\n  toggleScimKey() {\n    this.showScimKey = !this.showScimKey;\n    document.getElementById(\"clientSecret\").focus();\n  }\n\n  private async setConnectionFormValues(connection: OrganizationConnectionResponse<ScimConfigApi>) {\n    this.existingConnectionId = connection?.id;\n    if (connection !== null && connection.config?.enabled) {\n      this.showScimSettings = true;\n      this.enabled.setValue(true);\n      this.formData.setValue({\n        endpointUrl: this.getScimEndpointUrl(),\n        clientSecret: \"\",\n      });\n      await this.loadApiKey();\n    } else {\n      this.showScimSettings = false;\n      this.enabled.setValue(false);\n    }\n    this.loading = false;\n  }\n}\n","import { SsoConfigApi } from \"../../api/sso-config.api\";\n\nexport class OrganizationSsoRequest {\n  enabled = false;\n  identifier: string;\n  data: SsoConfigApi;\n}\n","import {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/ssoEnums\";\nimport { SsoConfigApi } from \"../api/sso-config.api\";\n\nimport { View } from \"./view\";\n\nexport class SsoConfigView extends View {\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  openId: {\n    authority: string;\n    clientId: string;\n    clientSecret: string;\n    metadataAddress: string;\n    redirectBehavior: OpenIdConnectRedirectBehavior;\n    getClaimsFromUserInfoEndpoint: boolean;\n    additionalScopes: string;\n    additionalUserIdClaimTypes: string;\n    additionalEmailClaimTypes: string;\n    additionalNameClaimTypes: string;\n    acrValues: string;\n    expectedReturnAcrValue: string;\n  };\n\n  saml: {\n    spNameIdFormat: Saml2NameIdFormat;\n    spOutboundSigningAlgorithm: string;\n    spSigningBehavior: Saml2SigningBehavior;\n    spMinIncomingSigningAlgorithm: string;\n    spWantAssertionsSigned: boolean;\n    spValidateCertificates: boolean;\n\n    idpEntityId: string;\n    idpBindingType: Saml2BindingType;\n    idpSingleSignOnServiceUrl: string;\n    idpSingleLogoutServiceUrl: string;\n    idpX509PublicCert: string;\n    idpOutboundSigningAlgorithm: string;\n    idpAllowUnsolicitedAuthnResponse: boolean;\n    idpAllowOutboundLogoutRequests: boolean;\n    idpWantAuthnRequestsSigned: boolean;\n  };\n\n  constructor(api: SsoConfigApi) {\n    super();\n    if (api == null) {\n      return;\n    }\n\n    this.configType = api.configType;\n\n    this.keyConnectorEnabled = api.keyConnectorEnabled;\n    this.keyConnectorUrl = api.keyConnectorUrl;\n\n    if (this.configType === SsoType.OpenIdConnect) {\n      this.openId = {\n        authority: api.authority,\n        clientId: api.clientId,\n        clientSecret: api.clientSecret,\n        metadataAddress: api.metadataAddress,\n        redirectBehavior: api.redirectBehavior,\n        getClaimsFromUserInfoEndpoint: api.getClaimsFromUserInfoEndpoint,\n        additionalScopes: api.additionalScopes,\n        additionalUserIdClaimTypes: api.additionalUserIdClaimTypes,\n        additionalEmailClaimTypes: api.additionalEmailClaimTypes,\n        additionalNameClaimTypes: api.additionalNameClaimTypes,\n        acrValues: api.acrValues,\n        expectedReturnAcrValue: api.expectedReturnAcrValue,\n      };\n    } else if (this.configType === SsoType.Saml2) {\n      this.saml = {\n        spNameIdFormat: api.spNameIdFormat,\n        spOutboundSigningAlgorithm: api.spOutboundSigningAlgorithm,\n        spSigningBehavior: api.spSigningBehavior,\n        spMinIncomingSigningAlgorithm: api.spMinIncomingSigningAlgorithm,\n        spWantAssertionsSigned: api.spWantAssertionsSigned,\n        spValidateCertificates: api.spValidateCertificates,\n\n        idpEntityId: api.idpEntityId,\n        idpBindingType: api.idpBindingType,\n        idpSingleSignOnServiceUrl: api.idpSingleSignOnServiceUrl,\n        idpSingleLogoutServiceUrl: api.idpSingleLogoutServiceUrl,\n        idpX509PublicCert: api.idpX509PublicCert,\n        idpOutboundSigningAlgorithm: api.idpOutboundSigningAlgorithm,\n        idpAllowUnsolicitedAuthnResponse: api.idpAllowUnsolicitedAuthnResponse,\n        idpWantAuthnRequestsSigned: api.idpWantAuthnRequestsSigned,\n\n        // Value is inverted in the view model (allow instead of disable)\n        idpAllowOutboundLogoutRequests:\n          api.idpDisableOutboundLogoutRequests == null\n            ? null\n            : !api.idpDisableOutboundLogoutRequests,\n      };\n    }\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"input[appInputStripSpaces]\",\n})\nexport class InputStripSpacesDirective {\n  constructor(private el: ElementRef<HTMLInputElement>) {}\n\n  @HostListener(\"input\") onInput() {\n    this.el.nativeElement.value = this.el.nativeElement.value.replace(/ /g, \"\");\n  }\n}\n","import { Directive, HostListener, Input } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appCopyClick]\",\n})\nexport class CopyClickDirective {\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  @Input(\"appCopyClick\") valueToCopy = \"\";\n\n  @HostListener(\"click\") onClick() {\n    this.platformUtilsService.copyToClipboard(this.valueToCopy);\n  }\n}\n","import { Directive, HostListener, Input } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive({\n  selector: \"[appLaunchClick]\",\n})\nexport class LaunchClickDirective {\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  @Input(\"appLaunchClick\") uriToLaunch = \"\";\n\n  @HostListener(\"click\") onClick() {\n    if (!Utils.isNullOrWhitespace(this.uriToLaunch)) {\n      this.platformUtilsService.launchUri(this.uriToLaunch);\n    }\n  }\n}\n","import { Directive, Input, OnInit, Self } from \"@angular/core\";\nimport { ControlValueAccessor, UntypedFormControl, NgControl, Validators } from \"@angular/forms\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Directive()\nexport abstract class BaseCvaComponent implements ControlValueAccessor, OnInit {\n  get describedById() {\n    return this.showDescribedBy ? this.controlId + \"Desc\" : null;\n  }\n\n  get showDescribedBy() {\n    return this.helperText != null || this.controlDir.control.hasError(\"required\");\n  }\n\n  get isRequired() {\n    return this.controlDir.control.hasValidator(Validators.required);\n  }\n\n  @Input() label: string;\n  @Input() controlId: string;\n  @Input() helperText: string;\n\n  internalControl = new UntypedFormControl(\"\");\n\n  protected onChange: any;\n  protected onTouched: any;\n\n  constructor(@Self() public controlDir: NgControl) {\n    this.controlDir.valueAccessor = this;\n  }\n\n  ngOnInit() {\n    this.internalControl.valueChanges.subscribe(this.onValueChangesInternal);\n  }\n\n  onBlurInternal() {\n    this.onTouched();\n  }\n\n  // CVA interfaces\n  writeValue(value: string) {\n    this.internalControl.setValue(value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    if (isDisabled) {\n      this.internalControl.disable();\n    } else {\n      this.internalControl.enable();\n    }\n  }\n\n  protected onValueChangesInternal: any = (value: string) => this.onChange(value);\n  // End CVA interfaces\n}\n","<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      [attr.id]=\"controlId\"\n      [attr.aria-describedby]=\"describedById\"\n      [formControl]=\"internalControl\"\n      (blur)=\"onBlurInternal()\"\n    />\n    <label class=\"form-check-label\" [attr.for]=\"controlId\">{{ label }}</label>\n  </div>\n  <small *ngIf=\"showDescribedBy\" [attr.id]=\"describedById\" class=\"form-text text-muted\">{{\n    helperText\n  }}</small>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { BaseCvaComponent } from \"./base-cva.component\";\n\n/** For use in the SSO Config Form only - will be deprecated by the Component Library */\n@Component({\n  selector: \"app-input-checkbox\",\n  templateUrl: \"input-checkbox.component.html\",\n})\nexport class InputCheckboxComponent extends BaseCvaComponent {}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"singleSignOn\" | i18n }}</h1>\n</div>\n\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [formGroup]=\"ssoConfigForm\"\n  [appApiAction]=\"formPromise\"\n  *ngIf=\"!loading\"\n>\n  <p>\n    {{ \"ssoPolicyHelpStart\" | i18n }}\n    <a routerLink=\"../policies\">{{ \"ssoPolicyHelpLink\" | i18n }}</a>\n    {{ \"ssoPolicyHelpEnd\" | i18n }}\n    <br />\n    {{ \"ssoPolicyHelpKeyConnector\" | i18n }}\n  </p>\n\n  <!-- Root form -->\n  <ng-container>\n    <app-input-checkbox\n      controlId=\"enabled\"\n      [formControl]=\"enabled\"\n      [label]=\"'allowSso' | i18n\"\n      [helperText]=\"'allowSsoDesc' | i18n\"\n    ></app-input-checkbox>\n\n    <bit-form-field>\n      <bit-label>{{ \"ssoIdentifier\" | i18n }}</bit-label>\n      <input bitInput type=\"text\" [formControl]=\"ssoIdentifier\" />\n      <bit-hint>{{ \"ssoIdentifierHint\" | i18n }}</bit-hint>\n    </bit-form-field>\n\n    <hr />\n\n    <div class=\"form-group\">\n      <label>{{ \"memberDecryptionOption\" | i18n }}</label>\n      <div class=\"form-check form-check-block\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"memberDecryptionPass\"\n          [value]=\"false\"\n          formControlName=\"keyConnectorEnabled\"\n        />\n        <label class=\"form-check-label\" for=\"memberDecryptionPass\">\n          {{ \"masterPass\" | i18n }}\n          <small>{{ \"memberDecryptionPassDesc\" | i18n }}</small>\n        </label>\n      </div>\n      <div class=\"form-check mt-2 form-check-block\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          id=\"memberDecryptionKey\"\n          [value]=\"true\"\n          formControlName=\"keyConnectorEnabled\"\n          [attr.disabled]=\"!organization.useKeyConnector || null\"\n        />\n        <label class=\"form-check-label\" for=\"memberDecryptionKey\">\n          {{ \"keyConnector\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/about-key-connector/\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n          <small>{{ \"memberDecryptionKeyConnectorDesc\" | i18n }}</small>\n        </label>\n      </div>\n    </div>\n\n    <!-- Key Connector -->\n    <ng-container *ngIf=\"ssoConfigForm.get('keyConnectorEnabled').value\">\n      <app-callout type=\"warning\" [useAlertRole]=\"true\">\n        {{ \"keyConnectorWarning\" | i18n }}\n      </app-callout>\n\n      <bit-form-field>\n        <bit-label>{{ \"keyConnectorUrl\" | i18n }}</bit-label>\n        <input\n          bitInput\n          type=\"text\"\n          required\n          formControlName=\"keyConnectorUrl\"\n          appInputStripSpaces\n          (input)=\"haveTestedKeyConnector = false\"\n        />\n        <button\n          bitSuffix\n          bitButton\n          [disabled]=\"!enableTestKeyConnector\"\n          type=\"button\"\n          (click)=\"validateKeyConnectorUrl()\"\n        >\n          <i\n            class=\"bwi bwi-spinner bwi-spin\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n            *ngIf=\"keyConnectorUrl.pending\"\n          ></i>\n          <span *ngIf=\"!keyConnectorUrl.pending\">\n            {{ \"keyConnectorTest\" | i18n }}\n          </span>\n        </button>\n        <bit-hint\n          aria-live=\"polite\"\n          *ngIf=\"haveTestedKeyConnector && !keyConnectorUrl.hasError('invalidUrl')\"\n        >\n          <small class=\"text-success\">\n            <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n            {{ \"keyConnectorTestSuccess\" | i18n }}\n          </small>\n        </bit-hint>\n      </bit-form-field>\n    </ng-container>\n\n    <hr />\n\n    <bit-form-field>\n      <bit-label>{{ \"type\" | i18n }}</bit-label>\n      <select bitInput formControlName=\"configType\">\n        <option *ngFor=\"let o of ssoTypeOptions\" [ngValue]=\"o.value\" disabled=\"{{ o.disabled }}\">\n          {{ o.name }}\n        </option>\n      </select>\n    </bit-form-field>\n  </ng-container>\n\n  <!-- OIDC -->\n  <div\n    *ngIf=\"ssoConfigForm.get('configType').value === ssoType.OpenIdConnect\"\n    [formGroup]=\"openIdForm\"\n  >\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"openIdConnectConfig\" | i18n }}</h2>\n\n      <bit-form-field>\n        <bit-label>{{ \"callbackPath\" | i18n }}</bit-label>\n        <input bitInput disabled [value]=\"callbackPath\" />\n        <button\n          bitIconButton=\"bwi-clone\"\n          bitSuffix\n          type=\"button\"\n          [appCopyClick]=\"callbackPath\"\n          [appA11yTitle]=\"'copyValue' | i18n\"\n        ></button>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"signedOutCallbackPath\" | i18n }}</bit-label>\n        <input bitInput disabled [value]=\"signedOutCallbackPath\" />\n        <button\n          bitIconButton=\"bwi-clone\"\n          bitSuffix\n          type=\"button\"\n          [appCopyClick]=\"signedOutCallbackPath\"\n          [appA11yTitle]=\"'copyValue' | i18n\"\n        ></button>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"authority\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"authority\" appInputStripSpaces />\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"clientId\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"clientId\" appInputStripSpaces />\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"clientSecret\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"clientSecret\" appInputStripSpaces />\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"metadataAddress\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"metadataAddress\" appInputStripSpaces />\n        <bit-hint>{{ \"openIdAuthorityRequired\" | i18n }}</bit-hint>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"oidcRedirectBehavior\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"redirectBehavior\">\n          <option\n            *ngFor=\"let o of connectRedirectOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <app-input-checkbox\n        controlId=\"getClaimsFromUserInfoEndpoint\"\n        formControlName=\"getClaimsFromUserInfoEndpoint\"\n        [label]=\"'getClaimsFromUserInfoEndpoint' | i18n\"\n      ></app-input-checkbox>\n\n      <!-- Optional customizations -->\n      <div\n        class=\"section-header d-flex flex-row align-items-center mt-3 mb-3\"\n        (click)=\"toggleOpenIdCustomizations()\"\n      >\n        <h3 class=\"mb-0 mr-2\" id=\"customizations-header\">\n          {{ \"openIdOptionalCustomizations\" | i18n }}\n        </h3>\n        <button\n          class=\"mb-1 btn btn-link\"\n          type=\"button\"\n          appStopClick\n          role=\"button\"\n          aria-controls=\"customizations\"\n          [attr.aria-expanded]=\"showOpenIdCustomizations\"\n          aria-labelledby=\"customizations-header\"\n        >\n          <i\n            class=\"bwi\"\n            aria-hidden=\"true\"\n            [ngClass]=\"{\n              'bwi-angle-right': !showOpenIdCustomizations,\n              'bwi-angle-down': showOpenIdCustomizations\n            }\"\n          ></i>\n        </button>\n      </div>\n      <div id=\"customizations\" [hidden]=\"!showOpenIdCustomizations\">\n        <bit-form-field>\n          <bit-label>{{ \"additionalScopes\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"additionalScopes\" />\n          <bit-hint>{{ \"separateMultipleWithComma\" | i18n }}</bit-hint>\n        </bit-form-field>\n\n        <bit-form-field>\n          <bit-label>{{ \"additionalUserIdClaimTypes\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"additionalUserIdClaimTypes\" />\n          <bit-hint>{{ \"separateMultipleWithComma\" | i18n }}</bit-hint>\n        </bit-form-field>\n\n        <bit-form-field>\n          <bit-label>{{ \"additionalEmailClaimTypes\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"additionalEmailClaimTypes\" />\n          <bit-hint>{{ \"separateMultipleWithComma\" | i18n }}</bit-hint>\n        </bit-form-field>\n\n        <bit-form-field>\n          <bit-label>{{ \"additionalNameClaimTypes\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"additionalNameClaimTypes\" />\n          <bit-hint>{{ \"separateMultipleWithComma\" | i18n }}</bit-hint>\n        </bit-form-field>\n\n        <bit-form-field>\n          <bit-label>{{ \"acrValues\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"acrValues\" />\n          <bit-hint>acr_values</bit-hint>\n        </bit-form-field>\n\n        <bit-form-field>\n          <bit-label>{{ \"expectedReturnAcrValue\" | i18n }}</bit-label>\n          <input bitInput type=\"text\" formControlName=\"expectedReturnAcrValue\" />\n          <bit-hint>acr_validaton</bit-hint>\n        </bit-form-field>\n      </div>\n    </div>\n  </div>\n\n  <!-- SAML2 SP -->\n  <div *ngIf=\"ssoConfigForm.get('configType').value === ssoType.Saml2\" [formGroup]=\"samlForm\">\n    <!-- SAML2 SP -->\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"samlSpConfig\" | i18n }}</h2>\n\n      <bit-form-field>\n        <bit-label>{{ \"spEntityId\" | i18n }}</bit-label>\n        <input bitInput disabled [value]=\"spEntityId\" />\n        <button\n          bitIconButton=\"bwi-clone\"\n          bitSuffix\n          type=\"button\"\n          [appCopyClick]=\"spEntityId\"\n          [appA11yTitle]=\"'copyValue' | i18n\"\n        ></button>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spMetadataUrl\" | i18n }}</bit-label>\n        <input bitInput disabled [value]=\"spMetadataUrl\" />\n        <button\n          bitButton\n          bitSuffix\n          type=\"button\"\n          [appLaunchClick]=\"spMetadataUrl\"\n          [appA11yTitle]=\"'launch' | i18n\"\n        >\n          <i class=\"bwi bwi-lg bwi-external-link\" aria-hidden=\"true\"></i>\n        </button>\n        <button\n          bitIconButton=\"bwi-clone\"\n          bitSuffix\n          type=\"button\"\n          [appCopyClick]=\"spMetadataUrl\"\n          [appA11yTitle]=\"'copyValue' | i18n\"\n        ></button>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spAcsUrl\" | i18n }}</bit-label>\n        <input bitInput disabled [value]=\"spAcsUrl\" />\n        <button\n          bitIconButton=\"bwi-clone\"\n          bitSuffix\n          type=\"button\"\n          [appCopyClick]=\"spAcsUrl\"\n          [appA11yTitle]=\"'copyValue' | i18n\"\n        ></button>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spNameIdFormat\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"spNameIdFormat\">\n          <option\n            *ngFor=\"let o of saml2NameIdFormatOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spOutboundSigningAlgorithm\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"spOutboundSigningAlgorithm\">\n          <option\n            *ngFor=\"let o of samlSigningAlgorithmOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spSigningBehavior\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"spSigningBehavior\">\n          <option\n            *ngFor=\"let o of saml2SigningBehaviourOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"spMinIncomingSigningAlgorithm\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"spMinIncomingSigningAlgorithm\">\n          <option\n            *ngFor=\"let o of samlSigningAlgorithmOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <app-input-checkbox\n        controlId=\"spWantAssertionsSigned\"\n        formControlName=\"spWantAssertionsSigned\"\n        [label]=\"'spWantAssertionsSigned' | i18n\"\n      ></app-input-checkbox>\n\n      <app-input-checkbox\n        controlId=\"spValidateCertificates\"\n        formControlName=\"spValidateCertificates\"\n        [label]=\"'spValidateCertificates' | i18n\"\n      ></app-input-checkbox>\n    </div>\n\n    <!-- SAML2 IDP -->\n    <div class=\"config-section\">\n      <h2 class=\"secondary-header\">{{ \"samlIdpConfig\" | i18n }}</h2>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpEntityId\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"idpEntityId\" />\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpBindingType\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"idpBindingType\">\n          <option\n            *ngFor=\"let o of saml2BindingTypeOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpSingleSignOnServiceUrl\" | i18n }}</bit-label>\n        <input\n          bitInput\n          type=\"text\"\n          formControlName=\"idpSingleSignOnServiceUrl\"\n          appInputStripSpaces\n        />\n        <bit-hint>{{ \"idpSingleSignOnServiceUrlRequired\" | i18n }}</bit-hint>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpSingleLogoutServiceUrl\" | i18n }}</bit-label>\n        <input\n          bitInput\n          type=\"text\"\n          formControlName=\"idpSingleLogoutServiceUrl\"\n          appInputStripSpaces\n        />\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpX509PublicCert\" | i18n }}</bit-label>\n        <textarea bitInput rows=\"6\" formControlName=\"idpX509PublicCert\"></textarea>\n      </bit-form-field>\n\n      <bit-form-field>\n        <bit-label>{{ \"idpOutboundSigningAlgorithm\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"idpOutboundSigningAlgorithm\">\n          <option\n            *ngFor=\"let o of samlSigningAlgorithmOptions\"\n            [ngValue]=\"o.value\"\n            disabled=\"{{ o.disabled }}\"\n          >\n            {{ o.name }}\n          </option>\n        </select>\n      </bit-form-field>\n\n      <!--TODO: Uncomment once Unsolicited IdP Response is supported-->\n      <!-- <app-input-checkbox\n        controlId=\"idpAllowUnsolicitedAuthnResponse\"\n        formControlName=\"idpAllowUnsolicitedAuthnResponse\"\n        [label]=\"'idpAllowUnsolicitedAuthnResponse' | i18n\"\n      ></app-input-checkbox> -->\n\n      <app-input-checkbox\n        controlId=\"idpAllowOutboundLogoutRequests\"\n        formControlName=\"idpAllowOutboundLogoutRequests\"\n        [label]=\"'idpAllowOutboundLogoutRequests' | i18n\"\n      ></app-input-checkbox>\n\n      <app-input-checkbox\n        controlId=\"idpWantAuthnRequestsSigned\"\n        formControlName=\"idpWantAuthnRequestsSigned\"\n        [label]=\"'idpSignAuthenticationRequests' | i18n\"\n      ></app-input-checkbox>\n    </div>\n  </div>\n\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"save\" | i18n }}\n  </button>\n  <bit-error-summary [formGroup]=\"ssoConfigForm\"></bit-error-summary>\n</form>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  UntypedFormGroup,\n  Validators,\n} from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { concatMap, Subject, takeUntil } from \"rxjs\";\n\nimport { SelectOptions } from \"@bitwarden/angular/interfaces/selectOptions\";\nimport { ControlsOf } from \"@bitwarden/angular/types/controls-of\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"@bitwarden/common/enums/ssoEnums\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SsoConfigApi } from \"@bitwarden/common/models/api/sso-config.api\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationSsoRequest } from \"@bitwarden/common/models/request/organization/organization-sso.request\";\nimport { OrganizationSsoResponse } from \"@bitwarden/common/models/response/organization/organization-sso.response\";\nimport { SsoConfigView } from \"@bitwarden/common/models/view/sso-config.view\";\n\nconst defaultSigningAlgorithm = \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\";\n\n@Component({\n  selector: \"app-org-manage-sso\",\n  templateUrl: \"sso.component.html\",\n})\nexport class SsoComponent implements OnInit, OnDestroy {\n  readonly ssoType = SsoType;\n\n  readonly ssoTypeOptions: SelectOptions[] = [\n    { name: this.i18nService.t(\"selectType\"), value: SsoType.None, disabled: true },\n    { name: \"OpenID Connect\", value: SsoType.OpenIdConnect },\n    { name: \"SAML 2.0\", value: SsoType.Saml2 },\n  ];\n\n  readonly samlSigningAlgorithms = [\n    \"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha384\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha512\",\n    \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\",\n  ];\n\n  readonly saml2SigningBehaviourOptions: SelectOptions[] = [\n    {\n      name: \"If IdP Wants Authn Requests Signed\",\n      value: Saml2SigningBehavior.IfIdpWantAuthnRequestsSigned,\n    },\n    { name: \"Always\", value: Saml2SigningBehavior.Always },\n    { name: \"Never\", value: Saml2SigningBehavior.Never },\n  ];\n  readonly saml2BindingTypeOptions: SelectOptions[] = [\n    { name: \"Redirect\", value: Saml2BindingType.HttpRedirect },\n    { name: \"HTTP POST\", value: Saml2BindingType.HttpPost },\n  ];\n  readonly saml2NameIdFormatOptions: SelectOptions[] = [\n    { name: \"Not Configured\", value: Saml2NameIdFormat.NotConfigured },\n    { name: \"Unspecified\", value: Saml2NameIdFormat.Unspecified },\n    { name: \"Email Address\", value: Saml2NameIdFormat.EmailAddress },\n    { name: \"X.509 Subject Name\", value: Saml2NameIdFormat.X509SubjectName },\n    { name: \"Windows Domain Qualified Name\", value: Saml2NameIdFormat.WindowsDomainQualifiedName },\n    { name: \"Kerberos Principal Name\", value: Saml2NameIdFormat.KerberosPrincipalName },\n    { name: \"Entity Identifier\", value: Saml2NameIdFormat.EntityIdentifier },\n    { name: \"Persistent\", value: Saml2NameIdFormat.Persistent },\n    { name: \"Transient\", value: Saml2NameIdFormat.Transient },\n  ];\n\n  readonly connectRedirectOptions: SelectOptions[] = [\n    { name: \"Redirect GET\", value: OpenIdConnectRedirectBehavior.RedirectGet },\n    { name: \"Form POST\", value: OpenIdConnectRedirectBehavior.FormPost },\n  ];\n\n  private destory$ = new Subject<void>();\n\n  showOpenIdCustomizations = false;\n\n  loading = true;\n  haveTestedKeyConnector = false;\n  organizationId: string;\n  organization: Organization;\n  formPromise: Promise<OrganizationSsoResponse>;\n\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  protected enabled = this.formBuilder.control(false);\n\n  protected ssoIdentifier = this.formBuilder.control(\"\", {\n    validators: [Validators.maxLength(50), Validators.required],\n  });\n\n  protected openIdForm = this.formBuilder.group<ControlsOf<SsoConfigView[\"openId\"]>>(\n    {\n      authority: new FormControl(\"\", Validators.required),\n      clientId: new FormControl(\"\", Validators.required),\n      clientSecret: new FormControl(\"\", Validators.required),\n      metadataAddress: new FormControl(),\n      redirectBehavior: new FormControl(\n        OpenIdConnectRedirectBehavior.RedirectGet,\n        Validators.required\n      ),\n      getClaimsFromUserInfoEndpoint: new FormControl(),\n      additionalScopes: new FormControl(),\n      additionalUserIdClaimTypes: new FormControl(),\n      additionalEmailClaimTypes: new FormControl(),\n      additionalNameClaimTypes: new FormControl(),\n      acrValues: new FormControl(),\n      expectedReturnAcrValue: new FormControl(),\n    },\n    {\n      updateOn: \"blur\",\n    }\n  );\n\n  protected samlForm = this.formBuilder.group<ControlsOf<SsoConfigView[\"saml\"]>>(\n    {\n      spNameIdFormat: new FormControl(Saml2NameIdFormat.NotConfigured),\n      spOutboundSigningAlgorithm: new FormControl(defaultSigningAlgorithm),\n      spSigningBehavior: new FormControl(Saml2SigningBehavior.IfIdpWantAuthnRequestsSigned),\n      spMinIncomingSigningAlgorithm: new FormControl(defaultSigningAlgorithm),\n      spWantAssertionsSigned: new FormControl(),\n      spValidateCertificates: new FormControl(),\n\n      idpEntityId: new FormControl(\"\", Validators.required),\n      idpBindingType: new FormControl(Saml2BindingType.HttpRedirect),\n      idpSingleSignOnServiceUrl: new FormControl(),\n      idpSingleLogoutServiceUrl: new FormControl(),\n      idpX509PublicCert: new FormControl(\"\", Validators.required),\n      idpOutboundSigningAlgorithm: new FormControl(defaultSigningAlgorithm),\n      idpAllowUnsolicitedAuthnResponse: new FormControl(),\n      idpAllowOutboundLogoutRequests: new FormControl(true),\n      idpWantAuthnRequestsSigned: new FormControl(),\n    },\n    {\n      updateOn: \"blur\",\n    }\n  );\n\n  protected ssoConfigForm = this.formBuilder.group<ControlsOf<SsoConfigView>>({\n    configType: new FormControl(SsoType.None),\n    keyConnectorEnabled: new FormControl(false),\n    keyConnectorUrl: new FormControl(\"\"),\n    openId: this.openIdForm,\n    saml: this.samlForm,\n  });\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.ssoConfigForm\n      .get(\"configType\")\n      .valueChanges.pipe(takeUntil(this.destory$))\n      .subscribe((newType: SsoType) => {\n        if (newType === SsoType.OpenIdConnect) {\n          this.openIdForm.enable();\n          this.samlForm.disable();\n        } else if (newType === SsoType.Saml2) {\n          this.openIdForm.disable();\n          this.samlForm.enable();\n        } else {\n          this.openIdForm.disable();\n          this.samlForm.disable();\n        }\n      });\n\n    this.samlForm\n      .get(\"spSigningBehavior\")\n      .valueChanges.pipe(takeUntil(this.destory$))\n      .subscribe(() => this.samlForm.get(\"idpX509PublicCert\").updateValueAndValidity());\n\n    this.route.params\n      .pipe(\n        concatMap(async (params) => {\n          this.organizationId = params.organizationId;\n          await this.load();\n        }),\n        takeUntil(this.destory$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.destory$.next();\n    this.destory$.complete();\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    const ssoSettings = await this.organizationApiService.getSso(this.organizationId);\n    this.populateForm(ssoSettings);\n\n    this.callbackPath = ssoSettings.urls.callbackPath;\n    this.signedOutCallbackPath = ssoSettings.urls.signedOutCallbackPath;\n    this.spEntityId = ssoSettings.urls.spEntityId;\n    this.spMetadataUrl = ssoSettings.urls.spMetadataUrl;\n    this.spAcsUrl = ssoSettings.urls.spAcsUrl;\n\n    this.loading = false;\n  }\n\n  async submit() {\n    this.validateForm(this.ssoConfigForm);\n\n    if (this.ssoConfigForm.value.keyConnectorEnabled) {\n      this.haveTestedKeyConnector = false;\n      await this.validateKeyConnectorUrl();\n    }\n\n    if (!this.ssoConfigForm.valid) {\n      this.readOutErrors();\n      return;\n    }\n\n    const request = new OrganizationSsoRequest();\n    request.enabled = this.enabled.value;\n    request.identifier = this.ssoIdentifier.value;\n    request.data = SsoConfigApi.fromView(this.ssoConfigForm.getRawValue());\n\n    this.formPromise = this.organizationApiService.updateSso(this.organizationId, request);\n\n    try {\n      const response = await this.formPromise;\n      this.populateForm(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"ssoSettingsSaved\"));\n    } catch {\n      // Logged by appApiAction, do nothing\n    }\n\n    this.formPromise = null;\n  }\n\n  async validateKeyConnectorUrl() {\n    if (this.haveTestedKeyConnector) {\n      return;\n    }\n\n    this.keyConnectorUrl.markAsPending();\n\n    try {\n      await this.apiService.getKeyConnectorAlive(this.keyConnectorUrl.value);\n      this.keyConnectorUrl.updateValueAndValidity();\n    } catch {\n      this.keyConnectorUrl.setErrors({\n        invalidUrl: { message: this.i18nService.t(\"keyConnectorTestFail\") },\n      });\n    }\n\n    this.haveTestedKeyConnector = true;\n  }\n\n  toggleOpenIdCustomizations() {\n    this.showOpenIdCustomizations = !this.showOpenIdCustomizations;\n  }\n\n  getErrorCount(form: UntypedFormGroup): number {\n    return Object.values(form.controls).reduce((acc: number, control: AbstractControl) => {\n      if (control instanceof UntypedFormGroup) {\n        return acc + this.getErrorCount(control);\n      }\n\n      if (control.errors == null) {\n        return acc;\n      }\n      return acc + Object.keys(control.errors).length;\n    }, 0);\n  }\n\n  get enableTestKeyConnector() {\n    return (\n      this.ssoConfigForm.get(\"keyConnectorEnabled\").value &&\n      !Utils.isNullOrWhitespace(this.keyConnectorUrl?.value)\n    );\n  }\n\n  get keyConnectorUrl() {\n    return this.ssoConfigForm.get(\"keyConnectorUrl\");\n  }\n\n  get samlSigningAlgorithmOptions(): SelectOptions[] {\n    return this.samlSigningAlgorithms.map((algorithm) => ({ name: algorithm, value: algorithm }));\n  }\n\n  private validateForm(form: UntypedFormGroup) {\n    Object.values(form.controls).forEach((control: AbstractControl) => {\n      if (control.disabled) {\n        return;\n      }\n\n      if (control instanceof UntypedFormGroup) {\n        this.validateForm(control);\n      } else {\n        control.markAsDirty();\n        control.markAsTouched();\n        control.updateValueAndValidity();\n      }\n    });\n  }\n\n  private populateForm(ssoSettings: OrganizationSsoResponse) {\n    this.enabled.setValue(ssoSettings.enabled);\n    this.ssoIdentifier.setValue(ssoSettings.identifier);\n    if (ssoSettings.data != null) {\n      const ssoConfigView = new SsoConfigView(ssoSettings.data);\n      this.ssoConfigForm.patchValue(ssoConfigView);\n    }\n  }\n\n  private readOutErrors() {\n    const errorText = this.i18nService.t(\"error\");\n    const errorCount = this.getErrorCount(this.ssoConfigForm);\n    const errorCountText = this.i18nService.t(\n      errorCount === 1 ? \"formErrorSummarySingle\" : \"formErrorSummaryPlural\",\n      errorCount.toString()\n    );\n\n    const div = document.createElement(\"div\");\n    div.className = \"sr-only\";\n    div.id = \"srErrorCount\";\n    div.setAttribute(\"aria-live\", \"polite\");\n    div.innerText = errorText + \": \" + errorCountText;\n\n    const existing = document.getElementById(\"srErrorCount\");\n    if (existing != null) {\n      existing.remove();\n    }\n\n    document.body.append(div);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/guards/auth.guard\";\nimport { canAccessSettingsTab } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationPermissionsGuard } from \"@bitwarden/web-vault/app/organizations/guards/org-permissions.guard\";\nimport { OrganizationLayoutComponent } from \"@bitwarden/web-vault/app/organizations/layouts/organization-layout.component\";\nimport { SettingsComponent } from \"@bitwarden/web-vault/app/organizations/settings/settings.component\";\n\nimport { ScimComponent } from \"./manage/scim.component\";\nimport { SsoComponent } from \"./manage/sso.component\";\n\nconst routes: Routes = [\n  {\n    path: \"organizations/:organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuard, OrganizationPermissionsGuard],\n    children: [\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: canAccessSettingsTab,\n        },\n        children: [\n          {\n            path: \"sso\",\n            component: SsoComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              organizationPermissions: (org: Organization) => org.canManageSso,\n            },\n          },\n          {\n            path: \"scim\",\n            component: ScimComponent,\n            canActivate: [OrganizationPermissionsGuard],\n            data: {\n              organizationPermissions: (org: Organization) => org.canManageScim,\n            },\n          },\n        ],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"@bitwarden/web-vault/app/shared/shared.module\";\n\nimport { InputCheckboxComponent } from \"./components/input-checkbox.component\";\nimport { ScimComponent } from \"./manage/scim.component\";\nimport { SsoComponent } from \"./manage/sso.component\";\nimport { OrganizationsRoutingModule } from \"./organizations-routing.module\";\n\n@NgModule({\n  imports: [SharedModule, OrganizationsRoutingModule],\n  declarations: [InputCheckboxComponent, SsoComponent, ScimComponent],\n})\nexport class OrganizationsModule {}\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport { CoreModule } from \"@bitwarden/web-vault/app/core/core.module\";\nimport { OssRoutingModule } from \"@bitwarden/web-vault/app/oss-routing.module\";\nimport { OssModule } from \"@bitwarden/web-vault/app/oss.module\";\nimport { WildcardRoutingModule } from \"@bitwarden/web-vault/app/wildcard-routing.module\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { OrganizationsModule } from \"./organizations/organizations.module\";\nimport { DisablePersonalVaultExportPolicyComponent } from \"./policies/disable-personal-vault-export.component\";\nimport { MaximumVaultTimeoutPolicyComponent } from \"./policies/maximum-vault-timeout.component\";\n\n@NgModule({\n  imports: [\n    OverlayModule,\n    OssModule,\n    JslibModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CoreModule,\n    InfiniteScrollModule,\n    DragDropModule,\n    AppRoutingModule,\n    OssRoutingModule,\n    OrganizationsModule, // Must be after OssRoutingModule for competing routes to resolve properly\n    RouterModule,\n    WildcardRoutingModule, // Needs to be last to catch all non-existing routes\n  ],\n  declarations: [\n    AppComponent,\n    DisablePersonalVaultExportPolicyComponent,\n    MaximumVaultTimeoutPolicyComponent,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport \"bootstrap\";\nimport \"jquery\";\nimport \"popper.js\";\n\nrequire(\"@bitwarden/web-vault/scss/styles.scss\");\nrequire(\"@bitwarden/web-vault/scss/tailwind.css\");\n\nimport { AppModule } from \"./app/app.module\";\n\nif (process.env.NODE_ENV === \"production\") {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n","<div\n  #callout\n  class=\"callout callout-{{ calloutStyle }}\"\n  [ngClass]=\"{ clickable: clickable }\"\n  [attr.role]=\"useAlertRole ? 'alert' : null\"\n>\n  <h3 class=\"callout-heading\" *ngIf=\"title\">\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\">\n    {{ enforcedPolicyMessage }}\n    <ul>\n      <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n        {{ \"policyInEffectMinComplexity\" | i18n: getPasswordScoreAlertDisplay() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n        {{ \"policyInEffectMinLength\" | i18n: enforcedPolicyOptions?.minLength.toString() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n        {{ \"policyInEffectUppercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n        {{ \"policyInEffectLowercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n        {{ \"policyInEffectNumbers\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n        {{ \"policyInEffectSpecial\" | i18n: \"!@#$%^&*\" }}\n      </li>\n    </ul>\n  </div>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\n\n@Component({\n  selector: \"app-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() clickable: boolean;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() enforcedPolicyMessage: string;\n  @Input() useAlertRole = false;\n\n  calloutStyle: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.calloutStyle = this.type;\n\n    if (this.enforcedPolicyMessage === undefined) {\n      this.enforcedPolicyMessage = this.i18nService.t(\"masterPasswordPolicyInEffect\");\n    }\n\n    if (this.type === \"warning\" || this.type === \"danger\") {\n      if (this.type === \"danger\") {\n        this.calloutStyle = \"danger\";\n      }\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"warning\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-exclamation-triangle\";\n      }\n    } else if (this.type === \"error\") {\n      this.calloutStyle = \"danger\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"error\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-error\";\n      }\n    } else if (this.type === \"tip\") {\n      this.calloutStyle = \"success\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"tip\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-lightbulb\";\n      }\n    }\n  }\n\n  getPasswordScoreAlertDisplay() {\n    if (this.enforcedPolicyOptions == null) {\n      return \"\";\n    }\n\n    let str: string;\n    switch (this.enforcedPolicyOptions.minComplexity) {\n      case 4:\n        str = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        str = this.i18nService.t(\"good\");\n        break;\n      default:\n        str = this.i18nService.t(\"weak\");\n        break;\n    }\n    return str + \" (\" + this.enforcedPolicyOptions.minComplexity + \")\";\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appFallbackSrc]\",\n})\nexport class FallbackSrcDirective {\n  @Input(\"appFallbackSrc\") appFallbackSrc: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"error\") onError() {\n    this.el.nativeElement.src = this.appFallbackSrc;\n  }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n  <img\n    [src]=\"image\"\n    appFallbackSrc=\"{{ fallbackImage }}\"\n    *ngIf=\"imageEnabled && image\"\n    alt=\"\"\n    decoding=\"async\"\n    loading=\"lazy\"\n  />\n  <i class=\"bwi bwi-fw bwi-lg {{ icon }}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherType } from \"@bitwarden/common/enums/cipherType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherView } from \"@bitwarden/common/models/view/cipher.view\";\n\n/**\n * Provides a mapping from supported card brands to\n * the filenames of icon that should be present in images/cards folder of clients.\n */\nconst cardIcons: Record<string, string> = {\n  Visa: \"card-visa\",\n  Mastercard: \"card-mastercard\",\n  Amex: \"card-amex\",\n  Discover: \"card-discover\",\n  \"Diners Club\": \"card-diners-club\",\n  JCB: \"card-jcb\",\n  Maestro: \"card-maestro\",\n  UnionPay: \"card-union-pay\",\n  RuPay: \"card-ru-pay\",\n  Mir: \"card-mir\",\n};\n\n@Component({\n  selector: \"app-vault-icon\",\n  templateUrl: \"icon.component.html\",\n})\nexport class IconComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  icon: string;\n  image: string;\n  fallbackImage: string;\n  imageEnabled: boolean;\n\n  private iconsUrl: string;\n\n  constructor(environmentService: EnvironmentService, private stateService: StateService) {\n    this.iconsUrl = environmentService.getIconsUrl();\n  }\n\n  async ngOnChanges() {\n    // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n    // to avoid this we reset all state variables.\n    this.image = null;\n    this.fallbackImage = null;\n    this.imageEnabled = !(await this.stateService.getDisableFavicon());\n    this.load();\n  }\n\n  protected load() {\n    switch (this.cipher.type) {\n      case CipherType.Login:\n        this.icon = \"bwi-globe\";\n        this.setLoginIcon();\n        break;\n      case CipherType.SecureNote:\n        this.icon = \"bwi-sticky-note\";\n        break;\n      case CipherType.Card:\n        this.icon = \"bwi-credit-card\";\n        this.setCardIcon();\n        break;\n      case CipherType.Identity:\n        this.icon = \"bwi-id-card\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  private setLoginIcon() {\n    if (this.cipher.login.uri) {\n      let hostnameUri = this.cipher.login.uri;\n      let isWebsite = false;\n\n      if (hostnameUri.indexOf(\"androidapp://\") === 0) {\n        this.icon = \"bwi-android\";\n        this.image = null;\n      } else if (hostnameUri.indexOf(\"iosapp://\") === 0) {\n        this.icon = \"bwi-apple\";\n        this.image = null;\n      } else if (\n        this.imageEnabled &&\n        hostnameUri.indexOf(\"://\") === -1 &&\n        hostnameUri.indexOf(\".\") > -1\n      ) {\n        hostnameUri = \"http://\" + hostnameUri;\n        isWebsite = true;\n      } else if (this.imageEnabled) {\n        isWebsite = hostnameUri.indexOf(\"http\") === 0 && hostnameUri.indexOf(\".\") > -1;\n      }\n\n      if (this.imageEnabled && isWebsite) {\n        try {\n          this.image = this.iconsUrl + \"/\" + Utils.getHostname(hostnameUri) + \"/icon.png\";\n          this.fallbackImage = \"images/bwi-globe.png\";\n        } catch (e) {\n          // Ignore error since the fallback icon will be shown if image is null.\n        }\n      }\n    } else {\n      this.image = null;\n    }\n  }\n\n  private setCardIcon() {\n    const brand = this.cipher.card.brand;\n    if (this.imageEnabled && brand in cardIcons) {\n      this.icon = \"credit-card-icon \" + cardIcons[brand];\n    }\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nexport class ModalRef {\n  onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n  onClose: Observable<any>; // Initiated close.\n  onClosed: Observable<any>; // Modal was closed (Remove element from DOM)\n  onShow: Observable<void>; // Start showing modal\n  onShown: Observable<void>; // Modal is fully visible\n\n  private readonly _onCreated = new Subject<HTMLElement>();\n  private readonly _onClose = new Subject<any>();\n  private readonly _onClosed = new Subject<any>();\n  private readonly _onShow = new Subject<void>();\n  private readonly _onShown = new Subject<void>();\n  private lastResult: any;\n\n  constructor() {\n    this.onCreated = this._onCreated.asObservable();\n    this.onClose = this._onClose.asObservable();\n    this.onClosed = this._onClosed.asObservable();\n    this.onShow = this._onShow.asObservable();\n    this.onShown = this._onShow.asObservable();\n  }\n\n  show() {\n    this._onShow.next();\n  }\n\n  shown() {\n    this._onShown.next();\n  }\n\n  close(result?: any) {\n    this.lastResult = result;\n    this._onClose.next(result);\n  }\n\n  closed() {\n    this._onClosed.next(this.lastResult);\n  }\n\n  created(el: HTMLElement) {\n    this._onCreated.next(el);\n  }\n\n  onClosedPromise(): Promise<any> {\n    return this.onClosed.pipe(first()).toPromise();\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appA11yTitle]\",\n})\nexport class A11yTitleDirective {\n  @Input() set appA11yTitle(title: string) {\n    this.title = title;\n  }\n\n  private title: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (!this.el.nativeElement.hasAttribute(\"title\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"title\", this.title);\n    }\n    if (!this.el.nativeElement.hasAttribute(\"aria-label\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"aria-label\", this.title);\n    }\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\n\n/**\n * Provides error handling, in particular for any error returned by the server in an api call.\n * Attach it to a <form> element and provide the name of the class property that will hold the api call promise.\n * e.g. <form [appApiAction]=\"this.formPromise\">\n * Any errors/rejections that occur will be intercepted and displayed as error toasts.\n */\n@Directive({\n  selector: \"[appApiAction]\",\n})\nexport class ApiActionDirective implements OnChanges {\n  @Input() appApiAction: Promise<any>;\n\n  constructor(\n    private el: ElementRef,\n    private validationService: ValidationService,\n    private logService: LogService\n  ) {}\n\n  ngOnChanges(changes: any) {\n    if (this.appApiAction == null || this.appApiAction.then == null) {\n      return;\n    }\n\n    this.el.nativeElement.loading = true;\n\n    this.appApiAction.then(\n      (response: any) => {\n        this.el.nativeElement.loading = false;\n      },\n      (e: any) => {\n        this.el.nativeElement.loading = false;\n\n        if ((e as ErrorResponse).captchaRequired) {\n          this.logService.error(\"Captcha required error response: \" + e.getSingleMessage());\n          return;\n        }\n        this.logService?.error(`Received API exception: ${e}`);\n        this.validationService.showError(e);\n      }\n    );\n  }\n}\n","import { Directive, ElementRef, Input, NgZone } from \"@angular/core\";\nimport { take } from \"rxjs/operators\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective {\n  @Input() set appAutofocus(condition: boolean | string) {\n    this.autofocus = condition === \"\" || condition === true;\n  }\n\n  private autofocus: boolean;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!Utils.isMobileBrowser && this.autofocus) {\n      if (this.ngZone.isStable) {\n        this.el.nativeElement.focus();\n      } else {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n      }\n    }\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInputVerbatim]\",\n})\nexport class InputVerbatimDirective {\n  @Input() set appInputVerbatim(condition: boolean | string) {\n    this.disableComplete = condition === \"\" || condition === true;\n  }\n\n  private disableComplete: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.disableComplete && !this.el.nativeElement.hasAttribute(\"autocomplete\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocomplete\", \"off\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocapitalize\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocapitalize\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocorrect\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocorrect\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"spellcheck\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"spellcheck\", \"false\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"inputmode\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"inputmode\", \"verbatim\");\n    }\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopClick]\",\n})\nexport class StopClickDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopProp]\",\n})\nexport class StopPropDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/abstractions/keyConnector.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      this.messagingService.send(\"authBlocked\", { url: routerState.url });\n      return false;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (routerState != null) {\n        this.messagingService.send(\"lockedUrl\", { url: routerState.url });\n      }\n      return this.router.createUrlTree([\"lock\"], { queryParams: { promptBiometric: true } });\n    }\n\n    if (\n      !routerState.url.includes(\"remove-password\") &&\n      (await this.keyConnectorService.getConvertAccountRequired())\n    ) {\n      return this.router.createUrlTree([\"/remove-password\"]);\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class LockGuard implements CanActivate {\n  protected homepage = \"vault\";\n  protected loginpage = \"login\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return true;\n    }\n\n    const redirectUrl =\n      authStatus === AuthenticationStatus.LoggedOut ? this.loginpage : this.homepage;\n\n    return this.router.createUrlTree([redirectUrl]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/enums/authenticationStatus\";\n\n@Injectable()\nexport class UnauthGuard implements CanActivate {\n  protected homepage = \"vault\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return true;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"lock\"]);\n    }\n\n    return this.router.createUrlTree([this.homepage]);\n  }\n}\n","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, ModuleWithProviders, NgModule } from \"@angular/core\";\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  Toast as BaseToast,\n  ToastPackage,\n  ToastrService,\n  TOAST_CONFIG,\n} from \"ngx-toastr\";\n\n@Component({\n  selector: \"[toast-component2]\",\n  template: `\n    <button\n      *ngIf=\"options.closeButton\"\n      (click)=\"remove()\"\n      type=\"button\"\n      class=\"toast-close-button\"\n      aria-label=\"Close\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"icon\">\n      <i></i>\n    </div>\n    <div>\n      <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n        {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n      </div>\n      <div\n        *ngIf=\"message && options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [innerHTML]=\"message\"\n      ></div>\n      <div\n        *ngIf=\"message && !options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    </div>\n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n  `,\n  animations: [\n    trigger(\"flyInOut\", [\n      state(\"inactive\", style({ opacity: 0 })),\n      state(\"active\", style({ opacity: 1 })),\n      state(\"removed\", style({ opacity: 0 })),\n      transition(\"inactive => active\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n      transition(\"active => removed\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class BitwardenToast extends BaseToast {\n  constructor(protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n    super(toastrService, toastPackage);\n  }\n}\n\nexport const BitwardenToastGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: BitwardenToast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitwardenToast],\n  exports: [BitwardenToast],\n})\nexport class BitwardenToastModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<BitwardenToastModule> {\n    return {\n      ngModule: BitwardenToastModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: BitwardenToastGlobalConfig,\n            config: config,\n          },\n        },\n      ],\n    };\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface CardRuleEntry {\n  cardLength: number;\n  blocks: number[];\n}\n\n// See https://baymard.com/checkout-usability/credit-card-patterns for\n// all possible credit card spacing patterns. For now, we just handle\n// the below.\nconst numberFormats: Record<string, CardRuleEntry[]> = {\n  Visa: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Mastercard: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Maestro: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 13, blocks: [4, 4, 5] },\n    { cardLength: 15, blocks: [4, 6, 5] },\n    { cardLength: 19, blocks: [4, 4, 4, 4, 3] },\n  ],\n  Discover: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  \"Diners Club\": [{ cardLength: 14, blocks: [4, 6, 4] }],\n  JCB: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  UnionPay: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 19, blocks: [6, 13] },\n  ],\n  Amex: [{ cardLength: 15, blocks: [4, 6, 5] }],\n  Mir: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 17, blocks: [5, 4, 4, 4] },\n    { cardLength: 18, blocks: [6, 4, 4, 4] },\n    { cardLength: 19, blocks: [7, 4, 4, 4] },\n  ],\n  Other: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n};\n\n@Pipe({ name: \"creditCardNumber\" })\nexport class CreditCardNumberPipe implements PipeTransform {\n  transform(creditCardNumber: string, brand: string): string {\n    let rules = numberFormats[brand];\n\n    if (rules == null) {\n      rules = numberFormats[\"Other\"];\n    }\n\n    const cardLength = creditCardNumber.length;\n\n    let matchingRule = rules.find((r) => r.cardLength == cardLength);\n    if (matchingRule == null) {\n      matchingRule = rules[0];\n    }\n\n    const blocks = matchingRule.blocks;\n\n    const chunks: string[] = [];\n    let total = 0;\n\n    blocks.forEach((c) => {\n      chunks.push(creditCardNumber.slice(total, total + c));\n      total += c;\n    });\n\n    // Append the remaining part\n    if (cardLength > total) {\n      chunks.push(creditCardNumber.slice(total));\n    }\n\n    return chunks.join(\" \");\n  }\n}\n","import { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { CalloutComponent } from \"./components/callout.component\";\nimport { ExportScopeCalloutComponent } from \"./components/export-scope-callout.component\";\nimport { IconComponent } from \"./components/icon.component\";\nimport { BitwardenToastModule } from \"./components/toastr.component\";\nimport { A11yInvalidDirective } from \"./directives/a11y-invalid.directive\";\nimport { A11yTitleDirective } from \"./directives/a11y-title.directive\";\nimport { ApiActionDirective } from \"./directives/api-action.directive\";\nimport { AutofocusDirective } from \"./directives/autofocus.directive\";\nimport { BoxRowDirective } from \"./directives/box-row.directive\";\nimport { CopyClickDirective } from \"./directives/copy-click.directive\";\nimport { FallbackSrcDirective } from \"./directives/fallback-src.directive\";\nimport { InputStripSpacesDirective } from \"./directives/input-strip-spaces.directive\";\nimport { InputVerbatimDirective } from \"./directives/input-verbatim.directive\";\nimport { LaunchClickDirective } from \"./directives/launch-click.directive\";\nimport { NotPremiumDirective } from \"./directives/not-premium.directive\";\nimport { SelectCopyDirective } from \"./directives/select-copy.directive\";\nimport { StopClickDirective } from \"./directives/stop-click.directive\";\nimport { StopPropDirective } from \"./directives/stop-prop.directive\";\nimport { TrueFalseValueDirective } from \"./directives/true-false-value.directive\";\nimport { CreditCardNumberPipe } from \"./pipes/credit-card-number.pipe\";\nimport { EllipsisPipe } from \"./pipes/ellipsis.pipe\";\nimport { I18nPipe } from \"./pipes/i18n.pipe\";\nimport { SearchCiphersPipe } from \"./pipes/search-ciphers.pipe\";\nimport { SearchPipe } from \"./pipes/search.pipe\";\nimport { UserNamePipe } from \"./pipes/user-name.pipe\";\nimport { UserTypePipe } from \"./pipes/user-type.pipe\";\nimport { PasswordStrengthComponent } from \"./shared/components/password-strength/password-strength.component\";\n\n@NgModule({\n  imports: [\n    BitwardenToastModule.forRoot({\n      maxOpened: 5,\n      autoDismiss: true,\n      closeButton: true,\n    }),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    BoxRowDirective,\n    CalloutComponent,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    CopyClickDirective,\n    LaunchClickDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n    UserTypePipe,\n  ],\n  exports: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    BitwardenToastModule,\n    BoxRowDirective,\n    CalloutComponent,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    CopyClickDirective,\n    LaunchClickDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n    UserTypePipe,\n  ],\n  providers: [CreditCardNumberPipe, DatePipe, I18nPipe, SearchPipe, UserNamePipe, UserTypePipe],\n})\nexport class JslibModule {}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string | number, p2?: string | number, p3?: string | number): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ntype PropertyValueFunction<T> = (item: T) => { toString: () => string };\n\n@Pipe({\n  name: \"search\",\n})\nexport class SearchPipe implements PipeTransform {\n  transform<T>(\n    items: T[],\n    searchText: string,\n    prop1?: keyof T,\n    prop2?: keyof T,\n    prop3?: keyof T\n  ): T[];\n  transform<T>(\n    items: T[],\n    searchText: string,\n    prop1?: PropertyValueFunction<T>,\n    prop2?: PropertyValueFunction<T>,\n    prop3?: PropertyValueFunction<T>\n  ): T[];\n  transform<T>(\n    items: T[],\n    searchText: string,\n    prop1?: keyof T | PropertyValueFunction<T>,\n    prop2?: keyof T | PropertyValueFunction<T>,\n    prop3?: keyof T | PropertyValueFunction<T>\n  ): T[] {\n    if (items == null || items.length === 0) {\n      return [];\n    }\n\n    if (searchText == null || searchText.length < 2) {\n      return items;\n    }\n\n    searchText = searchText.trim().toLowerCase();\n    return items.filter((i) => {\n      if (prop1 != null) {\n        const propValue = typeof prop1 === \"function\" ? prop1(i) : i[prop1];\n\n        if (propValue?.toString().toLowerCase().indexOf(searchText) > -1) {\n          return true;\n        }\n      }\n\n      if (prop2 != null) {\n        const propValue = typeof prop2 === \"function\" ? prop2(i) : i[prop2];\n\n        if (propValue?.toString().toLowerCase().indexOf(searchText) > -1) {\n          return true;\n        }\n      }\n\n      if (prop3 != null) {\n        const propValue = typeof prop3 === \"function\" ? prop3(i) : i[prop3];\n\n        if (propValue?.toString().toLowerCase().indexOf(searchText) > -1) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface User {\n  name?: string;\n  email: string;\n}\n\n@Pipe({\n  name: \"userName\",\n})\nexport class UserNamePipe implements PipeTransform {\n  transform(user?: User): string {\n    if (user == null) {\n      return null;\n    }\n\n    return user.name == null || user.name.trim() === \"\" ? user.email : user.name;\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\n\n@Pipe({\n  name: \"userType\",\n})\nexport class UserTypePipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(value?: OrganizationUserType): string {\n    if (value == null) {\n      return this.i18nService.t(\"unknown\");\n    }\n    switch (value) {\n      case OrganizationUserType.Owner:\n        return this.i18nService.t(\"owner\");\n      case OrganizationUserType.Admin:\n        return this.i18nService.t(\"admin\");\n      case OrganizationUserType.User:\n        return this.i18nService.t(\"user\");\n      case OrganizationUserType.Manager:\n        return this.i18nService.t(\"manager\");\n      case OrganizationUserType.Custom:\n        return this.i18nService.t(\"custom\");\n    }\n  }\n}\n","import { InjectionToken } from \"@angular/core\";\n\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\n\nexport const WINDOW = new InjectionToken<Window>(\"WINDOW\");\nexport const MEMORY_STORAGE = new InjectionToken<AbstractStorageService>(\"MEMORY_STORAGE\");\nexport const SECURE_STORAGE = new InjectionToken<AbstractStorageService>(\"SECURE_STORAGE\");\nexport const STATE_FACTORY = new InjectionToken<StateFactory>(\"STATE_FACTORY\");\nexport const STATE_SERVICE_USE_CACHE = new InjectionToken<boolean>(\"STATE_SERVICE_USE_CACHE\");\nexport const LOGOUT_CALLBACK = new InjectionToken<(expired: boolean, userId?: string) => void>(\n  \"LOGOUT_CALLBACK\"\n);\nexport const LOCKED_CALLBACK = new InjectionToken<() => void>(\"LOCKED_CALLBACK\");\nexport const CLIENT_TYPE = new InjectionToken<boolean>(\"CLIENT_TYPE\");\nexport const LOCALES_DIRECTORY = new InjectionToken<string>(\"LOCALES_DIRECTORY\");\nexport const SYSTEM_LANGUAGE = new InjectionToken<string>(\"SYSTEM_LANGUAGE\");\nexport const LOG_MAC_FAILURES = new InjectionToken<string>(\"LOG_MAC_FAILURES\");\n","import { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from \"@angular/cdk/a11y\";\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ModalService } from \"../../services/modal.service\";\n\nimport { ModalRef } from \"./modal.ref\";\n\n@Component({\n  selector: \"app-modal\",\n  template: \"<ng-template #modalContent></ng-template>\",\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n  componentRef: ComponentRef<any>;\n\n  @ViewChild(\"modalContent\", { read: ViewContainerRef, static: true })\n  modalContentRef: ViewContainerRef;\n\n  childComponentType: Type<any>;\n  setComponentParameters: (component: any) => void;\n\n  private focusTrap: ConfigurableFocusTrap;\n\n  constructor(\n    private modalService: ModalService,\n    private cd: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    public modalRef: ModalRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    if (this.setComponentParameters != null) {\n      this.setComponentParameters(this.componentRef.instance);\n    }\n    this.cd.detectChanges();\n\n    this.modalRef.created(this.el.nativeElement);\n    this.focusTrap = this.focusTrapFactory.create(\n      this.el.nativeElement.querySelector(\".modal-dialog\")\n    );\n    if (this.el.nativeElement.querySelector(\"[appAutoFocus]\") == null) {\n      this.focusTrap.focusFirstTabbableElementWhenReady();\n    }\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n    this.modalContentRef.clear();\n    this.componentRef = this.modalContentRef.createComponent(componentFactory);\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n    this.focusTrap.destroy();\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  getFocus() {\n    const autoFocusEl = this.el.nativeElement.querySelector(\"[appAutoFocus]\") as HTMLElement;\n    autoFocusEl?.focus();\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class ModalInjector implements Injector {\n  constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any, flags?: any) {\n    return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\nimport { DynamicModalComponent } from \"../components/modal/dynamic-modal.component\";\nimport { ModalInjector } from \"../components/modal/modal-injector\";\nimport { ModalRef } from \"../components/modal/modal.ref\";\n\nexport class ModalConfig<D = any> {\n  data?: D;\n  allowMultipleModals?: boolean;\n  replaceTopModal?: boolean;\n}\n\n@Injectable()\nexport class ModalService {\n  protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n  // Lazy loaded modules are not available in componentFactoryResolver,\n  // therefore modules needs to manually initialize their resolvers.\n  private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === \"Escape\" && this.modalCount > 0) {\n        this.topModal.instance.close();\n      }\n    });\n  }\n\n  get modalCount() {\n    return this.modalList.length;\n  }\n\n  private get topModal() {\n    return this.modalList[this.modalCount - 1];\n  }\n\n  /**\n   * @deprecated Use `dialogService.open` (in web) or `modalService.open` (in desktop/browser) instead.\n   * If replacing an existing call to this method, also remove any `@ViewChild` and `<ng-template>` associated with the\n   * existing usage.\n   */\n  async openViewRef<T>(\n    componentType: Type<T>,\n    viewContainerRef: ViewContainerRef,\n    setComponentParameters: (component: T) => void = null\n  ): Promise<[ModalRef, T]> {\n    const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n    modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n    viewContainerRef.insert(modalComponentRef.hostView);\n\n    await modalRef.onCreated.pipe(first()).toPromise();\n\n    return [modalRef, modalComponentRef.instance.componentRef.instance];\n  }\n\n  open(componentType: Type<any>, config: ModalConfig = {}) {\n    const { replaceTopModal = false, allowMultipleModals = false } = config;\n\n    if (this.modalCount > 0 && replaceTopModal) {\n      this.topModal.instance.close();\n    }\n\n    if (this.modalCount > 0 && !allowMultipleModals) {\n      return;\n    }\n\n    const [modalRef] = this.openInternal(componentType, config, true);\n\n    return modalRef;\n  }\n\n  registerComponentFactoryResolver<T>(\n    componentType: Type<T>,\n    componentFactoryResolver: ComponentFactoryResolver\n  ): void {\n    this.factoryResolvers.set(componentType, componentFactoryResolver);\n  }\n\n  resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n    if (this.factoryResolvers.has(componentType)) {\n      return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n    }\n\n    return this.componentFactoryResolver.resolveComponentFactory(componentType);\n  }\n\n  closeAll(): void {\n    this.modalList.forEach((modal) => modal.instance.close());\n  }\n\n  protected openInternal(\n    componentType: Type<any>,\n    config?: ModalConfig,\n    attachToDom?: boolean\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const [modalRef, componentRef] = this.createModalComponent(config);\n    componentRef.instance.childComponentType = componentType;\n\n    if (attachToDom) {\n      this.applicationRef.attachView(componentRef.hostView);\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      document.body.appendChild(domElem);\n    }\n\n    modalRef.onClosed.pipe(first()).subscribe(() => {\n      if (attachToDom) {\n        this.applicationRef.detachView(componentRef.hostView);\n      }\n      componentRef.destroy();\n\n      this.modalList.pop();\n      if (this.modalCount > 0) {\n        this.topModal.instance.getFocus();\n      }\n    });\n\n    this.setupHandlers(modalRef);\n\n    this.modalList.push(componentRef);\n\n    return [modalRef, componentRef];\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    let backdrop: HTMLElement = null;\n\n    // Add backdrop, setup [data-dismiss] handler.\n    modalRef.onCreated.pipe(first()).subscribe((el) => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalEl: HTMLElement = el.querySelector(\".modal\");\n      const dialogEl = modalEl.querySelector(\".modal-dialog\") as HTMLElement;\n\n      backdrop = document.createElement(\"div\");\n      backdrop.className = \"modal-backdrop fade\";\n      backdrop.style.zIndex = `${this.modalCount}040`;\n      modalEl.prepend(backdrop);\n\n      dialogEl.addEventListener(\"click\", (e: Event) => {\n        e.stopPropagation();\n      });\n      dialogEl.style.zIndex = `${this.modalCount}050`;\n\n      const modals = Array.from(\n        el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]')\n      );\n      for (const closeElement of modals) {\n        closeElement.addEventListener(\"click\", () => {\n          modalRef.close();\n        });\n      }\n    });\n\n    // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      modalRef.closed();\n\n      if (this.modalCount === 0) {\n        document.body.classList.remove(\"modal-open\");\n      }\n    });\n  }\n\n  protected createModalComponent(\n    config: ModalConfig\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const modalRef = new ModalRef();\n\n    const map = new WeakMap();\n    map.set(ModalConfig, config);\n    map.set(ModalRef, modalRef);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n    const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n    return [modalRef, componentRef];\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport abstract class AbstractThemingService {\n  theme$: Observable<Theme>;\n  monitorThemeChanges: () => Promise<void>;\n  updateSystemTheme: (systemTheme: ThemeType) => void;\n  updateConfiguredTheme: (theme: ThemeType) => Promise<void>;\n}\n","<div class=\"progress\">\n  <div\n    class=\"progress-bar {{ color }}\"\n    role=\"progressbar\"\n    [ngStyle]=\"{ width: scoreWidth + '%' }\"\n    attr.aria-valuenow=\"{{ scoreWidth }}\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n  >\n    <ng-container *ngIf=\"showText && text\">\n      {{ text }}\n    </ng-container>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationService } from \"@bitwarden/common/abstractions/passwordGeneration.service\";\n\nexport interface PasswordColorText {\n  color: string;\n  text: string;\n}\n\n@Component({\n  selector: \"app-password-strength\",\n  templateUrl: \"password-strength.component.html\",\n})\nexport class PasswordStrengthComponent implements OnChanges {\n  @Input() showText = false;\n  @Input() email: string;\n  @Input() name: string;\n  @Input() set password(value: string) {\n    this.updatePasswordStrength(value);\n  }\n  @Output() passwordStrengthResult = new EventEmitter<any>();\n  @Output() passwordScoreColor = new EventEmitter<PasswordColorText>();\n\n  masterPasswordScore: number;\n  scoreWidth = 0;\n  color = \"bg-danger\";\n  text: string;\n\n  private masterPasswordStrengthTimeout: any;\n\n  //used by desktop and browser to display strength text color\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  //used by desktop and browser to display strength text\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n\n  constructor(\n    private i18nService: I18nService,\n    private passwordGenerationService: PasswordGenerationService\n  ) {}\n\n  ngOnChanges(): void {\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      this.scoreWidth = this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n\n      switch (this.masterPasswordScore) {\n        case 4:\n          this.color = \"bg-success\";\n          this.text = this.i18nService.t(\"strong\");\n          break;\n        case 3:\n          this.color = \"bg-primary\";\n          this.text = this.i18nService.t(\"good\");\n          break;\n        case 2:\n          this.color = \"bg-warning\";\n          this.text = this.i18nService.t(\"weak\");\n          break;\n        default:\n          this.color = \"bg-danger\";\n          this.text = this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n          break;\n      }\n\n      this.setPasswordScoreText(this.color, this.text);\n    }, 300);\n  }\n\n  updatePasswordStrength(password: string) {\n    const masterPassword = password;\n\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n    this.passwordStrengthResult.emit(strengthResult);\n    this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n  }\n\n  getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const email = this.email;\n    const name = this.name;\n    const atPosition = email?.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (name != null && name !== \"\") {\n      userInput = userInput.concat(name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n\n  setPasswordScoreText(color: string, text: string) {\n    color = color.slice(3);\n    this.passwordScoreColor.emit({ color: color, text: text });\n  }\n}\n","import { Verification } from \"../../types/verification\";\n\nexport abstract class AccountApiService {\n  abstract deleteAccount(verification: Verification): Promise<void>;\n}\n","export abstract class AnonymousHubService {\n  createHubConnection: (token: string) => void;\n  stopHubConnection: () => void;\n}\n","import { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/account/set-key-connector-key.request\";\nimport { AttachmentRequest } from \"../models/request/attachment.request\";\nimport { BitPayInvoiceRequest } from \"../models/request/bit-pay-invoice.request\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipher-bulk-delete.request\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipher-bulk-move.request\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipher-bulk-restore.request\";\nimport { CipherBulkShareRequest } from \"../models/request/cipher-bulk-share.request\";\nimport { CipherCollectionsRequest } from \"../models/request/cipher-collections.request\";\nimport { CipherCreateRequest } from \"../models/request/cipher-create.request\";\nimport { CipherPartialRequest } from \"../models/request/cipher-partial.request\";\nimport { CipherShareRequest } from \"../models/request/cipher-share.request\";\nimport { CipherRequest } from \"../models/request/cipher.request\";\nimport { CollectionBulkDeleteRequest } from \"../models/request/collection-bulk-delete.request\";\nimport { CollectionRequest } from \"../models/request/collection.request\";\nimport { DeleteRecoverRequest } from \"../models/request/delete-recover.request\";\nimport { DeviceVerificationRequest } from \"../models/request/device-verification.request\";\nimport { EmailTokenRequest } from \"../models/request/email-token.request\";\nimport { EmailRequest } from \"../models/request/email.request\";\nimport { EmergencyAccessAcceptRequest } from \"../models/request/emergency-access-accept.request\";\nimport { EmergencyAccessConfirmRequest } from \"../models/request/emergency-access-confirm.request\";\nimport { EmergencyAccessInviteRequest } from \"../models/request/emergency-access-invite.request\";\nimport { EmergencyAccessPasswordRequest } from \"../models/request/emergency-access-password.request\";\nimport { EmergencyAccessUpdateRequest } from \"../models/request/emergency-access-update.request\";\nimport { EventRequest } from \"../models/request/event.request\";\nimport { IapCheckRequest } from \"../models/request/iap-check.request\";\nimport { PasswordTokenRequest } from \"../models/request/identity-token/password-token.request\";\nimport { SsoTokenRequest } from \"../models/request/identity-token/sso-token.request\";\nimport { UserApiTokenRequest } from \"../models/request/identity-token/user-api-token.request\";\nimport { ImportCiphersRequest } from \"../models/request/import-ciphers.request\";\nimport { ImportOrganizationCiphersRequest } from \"../models/request/import-organization-ciphers.request\";\nimport { KdfRequest } from \"../models/request/kdf.request\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/key-connector-user-key.request\";\nimport { KeysRequest } from \"../models/request/keys.request\";\nimport { OrganizationConnectionRequest } from \"../models/request/organization-connection.request\";\nimport { OrganizationImportRequest } from \"../models/request/organization-import.request\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organization-sponsorship-create.request\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organization-sponsorship-redeem.request\";\nimport { PasswordHintRequest } from \"../models/request/password-hint.request\";\nimport { PasswordRequest } from \"../models/request/password.request\";\nimport { PasswordlessCreateAuthRequest } from \"../models/request/passwordless-create-auth.request\";\nimport { PaymentRequest } from \"../models/request/payment.request\";\nimport { PreloginRequest } from \"../models/request/prelogin.request\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/provider-add-organization.request\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/provider-organization-create.request\";\nimport { ProviderSetupRequest } from \"../models/request/provider/provider-setup.request\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/provider-update.request\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/provider-user-accept.request\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/provider-user-bulk-confirm.request\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/provider-user-bulk.request\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/provider-user-confirm.request\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/provider-user-invite.request\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/provider-user-update.request\";\nimport { RegisterRequest } from \"../models/request/register.request\";\nimport { SecretVerificationRequest } from \"../models/request/secret-verification.request\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selection-read-only.request\";\nimport { SendAccessRequest } from \"../models/request/send-access.request\";\nimport { SendRequest } from \"../models/request/send.request\";\nimport { SetPasswordRequest } from \"../models/request/set-password.request\";\nimport { StorageRequest } from \"../models/request/storage.request\";\nimport { TaxInfoUpdateRequest } from \"../models/request/tax-info-update.request\";\nimport { TwoFactorEmailRequest } from \"../models/request/two-factor-email.request\";\nimport { TwoFactorProviderRequest } from \"../models/request/two-factor-provider.request\";\nimport { TwoFactorRecoveryRequest } from \"../models/request/two-factor-recovery.request\";\nimport { UpdateDomainsRequest } from \"../models/request/update-domains.request\";\nimport { UpdateKeyRequest } from \"../models/request/update-key.request\";\nimport { UpdateProfileRequest } from \"../models/request/update-profile.request\";\nimport { UpdateTempPasswordRequest } from \"../models/request/update-temp-password.request\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../models/request/update-two-factor-authenticator.request\";\nimport { UpdateTwoFactorDuoRequest } from \"../models/request/update-two-factor-duo.request\";\nimport { UpdateTwoFactorEmailRequest } from \"../models/request/update-two-factor-email.request\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../models/request/update-two-factor-web-authn-delete.request\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../models/request/update-two-factor-web-authn.request\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../models/request/update-two-factor-yubio-otp.request\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verify-delete-recover.request\";\nimport { VerifyEmailRequest } from \"../models/request/verify-email.request\";\nimport { ApiKeyResponse } from \"../models/response/api-key.response\";\nimport { AttachmentUploadDataResponse } from \"../models/response/attachment-upload-data.response\";\nimport { AttachmentResponse } from \"../models/response/attachment.response\";\nimport { AuthRequestResponse } from \"../models/response/auth-request.response\";\nimport { RegisterResponse } from \"../models/response/authentication/register.response\";\nimport { BillingHistoryResponse } from \"../models/response/billing-history.response\";\nimport { BillingPaymentResponse } from \"../models/response/billing-payment.response\";\nimport { BreachAccountResponse } from \"../models/response/breach-account.response\";\nimport { CipherResponse } from \"../models/response/cipher.response\";\nimport {\n  CollectionAccessDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collection.response\";\nimport { DeviceVerificationResponse } from \"../models/response/device-verification.response\";\nimport { DomainsResponse } from \"../models/response/domains.response\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../models/response/emergency-access.response\";\nimport { EventResponse } from \"../models/response/event.response\";\nimport { IdentityCaptchaResponse } from \"../models/response/identity-captcha.response\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\nimport { KeyConnectorUserKeyResponse } from \"../models/response/key-connector-user-key.response\";\nimport { ListResponse } from \"../models/response/list.response\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organization-connection.response\";\nimport { OrganizationExportResponse } from \"../models/response/organization-export.response\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organization-sponsorship-sync-status.response\";\nimport { PaymentResponse } from \"../models/response/payment.response\";\nimport { PlanResponse } from \"../models/response/plan.response\";\nimport { PolicyResponse } from \"../models/response/policy.response\";\nimport { PreloginResponse } from \"../models/response/prelogin.response\";\nimport { ProfileResponse } from \"../models/response/profile.response\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/provider-organization.response\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/provider-user-bulk-public-key.response\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/provider-user-bulk.response\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/provider-user.response\";\nimport { ProviderResponse } from \"../models/response/provider/provider.response\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selection-read-only.response\";\nimport { SendAccessResponse } from \"../models/response/send-access.response\";\nimport { SendFileDownloadDataResponse } from \"../models/response/send-file-download-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\nimport { SendResponse } from \"../models/response/send.response\";\nimport { SsoPreValidateResponse } from \"../models/response/sso-pre-validate.response\";\nimport { SubscriptionResponse } from \"../models/response/subscription.response\";\nimport { SyncResponse } from \"../models/response/sync.response\";\nimport { TaxInfoResponse } from \"../models/response/tax-info.response\";\nimport { TaxRateResponse } from \"../models/response/tax-rate.response\";\nimport { TwoFactorAuthenticatorResponse } from \"../models/response/two-factor-authenticator.response\";\nimport { TwoFactorDuoResponse } from \"../models/response/two-factor-duo.response\";\nimport { TwoFactorEmailResponse } from \"../models/response/two-factor-email.response\";\nimport { TwoFactorProviderResponse } from \"../models/response/two-factor-provider.response\";\nimport { TwoFactorRecoverResponse } from \"../models/response/two-factor-recover.response\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../models/response/two-factor-web-authn.response\";\nimport { TwoFactorYubiKeyResponse } from \"../models/response/two-factor-yubi-key.response\";\nimport { UserKeyResponse } from \"../models/response/user-key.response\";\nimport { SendAccessView } from \"../models/view/send-access.view\";\n\n/**\n * @deprecated The `ApiService` class is deprecated and calls should be extracted into individual\n * api services. The `send` method is still allowed to be used within api services. For background\n * of this decision please read https://contributing.bitwarden.com/architecture/adr/refactor-api-service.\n */\nexport abstract class ApiService {\n  send: (\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ) => Promise<any>;\n\n  postIdentityToken: (\n    request: PasswordTokenRequest | SsoTokenRequest | UserApiTokenRequest\n  ) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n  refreshIdentityToken: () => Promise<any>;\n\n  getProfile: () => Promise<ProfileResponse>;\n  getUserSubscription: () => Promise<SubscriptionResponse>;\n  getTaxInfo: () => Promise<TaxInfoResponse>;\n  putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n  putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n  postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n  postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n  postEmail: (request: EmailRequest) => Promise<any>;\n  postPassword: (request: PasswordRequest) => Promise<any>;\n  setPassword: (request: SetPasswordRequest) => Promise<any>;\n  postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n  postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n  getAccountRevisionDate: () => Promise<number>;\n  postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n  postRegister: (request: RegisterRequest) => Promise<RegisterResponse>;\n  postPremium: (data: FormData) => Promise<PaymentResponse>;\n  postIapCheck: (request: IapCheckRequest) => Promise<any>;\n  postReinstatePremium: () => Promise<any>;\n  postCancelPremium: () => Promise<any>;\n  postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n  postAccountPayment: (request: PaymentRequest) => Promise<void>;\n  postAccountLicense: (data: FormData) => Promise<any>;\n  postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n  postAccountKeys: (request: KeysRequest) => Promise<any>;\n  postAccountVerifyEmail: () => Promise<any>;\n  postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n  postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n  postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n  postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n  postAccountKdf: (request: KdfRequest) => Promise<any>;\n  postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n  postConvertToKeyConnector: () => Promise<void>;\n  //passwordless\n  postAuthRequest: (request: PasswordlessCreateAuthRequest) => Promise<AuthRequestResponse>;\n  getAuthResponse: (id: string, accessCode: string) => Promise<AuthRequestResponse>;\n\n  getUserBillingHistory: () => Promise<BillingHistoryResponse>;\n  getUserBillingPayment: () => Promise<BillingPaymentResponse>;\n\n  getSend: (id: string) => Promise<SendResponse>;\n  postSendAccess: (\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendAccessResponse>;\n  getSends: () => Promise<ListResponse<SendResponse>>;\n  postSend: (request: SendRequest) => Promise<SendResponse>;\n  postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n  postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n  putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n  putSendRemovePassword: (id: string) => Promise<SendResponse>;\n  deleteSend: (id: string) => Promise<any>;\n  getSendFileDownloadData: (\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendFileDownloadDataResponse>;\n  renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n  getCipher: (id: string) => Promise<CipherResponse>;\n  getFullCipherDetails: (id: string) => Promise<CipherResponse>;\n  getCipherAdmin: (id: string) => Promise<CipherResponse>;\n  getAttachmentData: (\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ) => Promise<AttachmentResponse>;\n  getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n  postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n  postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  putPartialCipher: (id: string, request: CipherPartialRequest) => Promise<CipherResponse>;\n  putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  deleteCipher: (id: string) => Promise<any>;\n  deleteCipherAdmin: (id: string) => Promise<any>;\n  deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n  putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n  putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n  putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n  postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n  postImportOrganizationCiphers: (\n    organizationId: string,\n    request: ImportOrganizationCiphersRequest\n  ) => Promise<any>;\n  putDeleteCipher: (id: string) => Promise<any>;\n  putDeleteCipherAdmin: (id: string) => Promise<any>;\n  putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putRestoreCipher: (id: string) => Promise<CipherResponse>;\n  putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n  putRestoreManyCiphers: (\n    request: CipherBulkRestoreRequest\n  ) => Promise<ListResponse<CipherResponse>>;\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  postCipherAttachment: (\n    id: string,\n    request: AttachmentRequest\n  ) => Promise<AttachmentUploadDataResponse>;\n  deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n  deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n  postShareCipherAttachment: (\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ) => Promise<any>;\n  renewAttachmentUploadUrl: (\n    id: string,\n    attachmentId: string\n  ) => Promise<AttachmentUploadDataResponse>;\n  postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n  getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n  getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n  getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n  getCollectionAccessDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<CollectionAccessDetailsResponse>;\n  getManyCollectionsWithAccessDetails: (\n    orgId: string\n  ) => Promise<ListResponse<CollectionAccessDetailsResponse>>;\n  postCollection: (\n    organizationId: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  putCollectionUsers: (\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ) => Promise<any>;\n  putCollection: (\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  deleteCollection: (organizationId: string, id: string) => Promise<any>;\n  deleteManyCollections: (request: CollectionBulkDeleteRequest) => Promise<any>;\n  deleteCollectionUser: (\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ) => Promise<any>;\n\n  getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n  putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n  deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n  getSync: () => Promise<SyncResponse>;\n  postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n  getSettingsDomains: () => Promise<DomainsResponse>;\n  putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n  getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorOrganizationProviders: (\n    organizationId: string\n  ) => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorAuthenticator: (\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n  getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n  getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n  getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n  getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n  putTwoFactorAuthenticator: (\n    request: UpdateTwoFactorAuthenticatorRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n  putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorYubiKey: (\n    request: UpdateTwoFactorYubioOtpRequest\n  ) => Promise<TwoFactorYubiKeyResponse>;\n  putTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  deleteTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n  putTwoFactorOrganizationDisable: (\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ) => Promise<TwoFactorProviderResponse>;\n  postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n  postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n  postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n  getDeviceVerificationSettings: () => Promise<DeviceVerificationResponse>;\n  putDeviceVerificationSettings: (\n    request: DeviceVerificationRequest\n  ) => Promise<DeviceVerificationResponse>;\n  getKnownDevice: (email: string, deviceIdentifier: string) => Promise<boolean>;\n\n  getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n  getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n  getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n  getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n  putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n  deleteEmergencyAccess: (id: string) => Promise<any>;\n  postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n  postEmergencyAccessReinvite: (id: string) => Promise<any>;\n  postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n  postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n  postEmergencyAccessInitiate: (id: string) => Promise<any>;\n  postEmergencyAccessApprove: (id: string) => Promise<any>;\n  postEmergencyAccessReject: (id: string) => Promise<any>;\n  postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n  postEmergencyAccessPassword: (\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ) => Promise<any>;\n  postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n  getCloudCommunicationsEnabled: () => Promise<boolean>;\n  abstract getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId: string\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  deleteOrganizationConnection: (id: string) => Promise<void>;\n  getPlans: () => Promise<ListResponse<PlanResponse>>;\n  getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n\n  postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n  getProvider: (id: string) => Promise<ProviderResponse>;\n  putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n  getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n  getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n  postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n  postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n  postManyProviderUserReinvite: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  postProviderUserAccept: (\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ) => Promise<any>;\n  postProviderUserConfirm: (\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ) => Promise<any>;\n  postProviderUsersPublicKey: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n  postProviderUserBulkConfirm: (\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  putProviderUser: (\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ) => Promise<any>;\n  deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyProviderUsers: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  getProviderClients: (\n    providerId: string\n  ) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n  postProviderAddOrganization: (\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ) => Promise<any>;\n  postProviderCreateOrganization: (\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ) => Promise<ProviderOrganizationResponse>;\n  deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n  getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n  getEventsCipher: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganization: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganizationUser: (\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProvider: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProviderUser: (\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n  deleteSsoUser: (organizationId: string) => Promise<void>;\n  getSsoUserIdentifier: () => Promise<string>;\n\n  getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n  getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n  postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n  postSetupPayment: () => Promise<string>;\n\n  getActiveBearerToken: () => Promise<string>;\n  fetch: (request: Request) => Promise<Response>;\n  nativeFetch: (request: Request) => Promise<Response>;\n\n  preValidateSso: (identifier: string) => Promise<SsoPreValidateResponse>;\n\n  postCreateSponsorship: (\n    sponsorshipOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ) => Promise<void>;\n  getSponsorshipSyncStatus: (\n    sponsoredOrgId: string\n  ) => Promise<OrganizationSponsorshipSyncStatusResponse>;\n  deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n  deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n  postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n  postRedeemSponsorship: (\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ) => Promise<void>;\n  postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n  getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n  postUserKeyToKeyConnector: (\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ) => Promise<void>;\n  getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n  getOrganizationExport: (organizationId: string) => Promise<OrganizationExportResponse>;\n}\n","export abstract class AppIdService {\n  getAppId: () => Promise<string>;\n  getAnonymousAppId: () => Promise<string>;\n}\n","import { BreachAccountResponse } from \"../models/response/breach-account.response\";\n\nexport abstract class AuditService {\n  passwordLeaked: (password: string) => Promise<number>;\n  breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { AuthenticationStatus } from \"../enums/authenticationStatus\";\nimport { AuthResult } from \"../models/domain/auth-result\";\nimport {\n  UserApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../models/domain/log-in-credentials\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\nimport { AuthRequestPushNotification } from \"../models/response/notification.response\";\n\nexport abstract class AuthService {\n  masterPasswordHash: string;\n  email: string;\n  accessCode: string;\n  authRequestId: string;\n\n  logIn: (\n    credentials:\n      | UserApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ) => Promise<AuthResult>;\n  logInTwoFactor: (\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ) => Promise<AuthResult>;\n  logOut: (callback: () => void) => void;\n  makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n  authingWithUserApiKey: () => boolean;\n  authingWithSso: () => boolean;\n  authingWithPassword: () => boolean;\n  authingWithPasswordless: () => boolean;\n  getAuthStatus: (userId?: string) => Promise<AuthenticationStatus>;\n  authResponsePushNotifiction: (notification: AuthRequestPushNotification) => Promise<any>;\n\n  getPushNotifcationObs$: () => Observable<any>;\n}\n","export interface MessageBase {\n  command: string;\n}\n\nexport abstract class BroadcasterService {\n  send: (message: MessageBase, id?: string) => void;\n  subscribe: (id: string, messageCallback: (message: MessageBase) => void) => void;\n  unsubscribe: (id: string) => void;\n}\n","import { CipherType } from \"../enums/cipherType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { FieldView } from \"../models/view/field.view\";\n\nexport abstract class CipherService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher?: Cipher\n  ) => Promise<Cipher>;\n  encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n  encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n  get: (id: string) => Promise<Cipher>;\n  getAll: () => Promise<Cipher[]>;\n  getAllDecrypted: () => Promise<CipherView[]>;\n  getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n  getAllDecryptedForUrl: (\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch?: UriMatchType\n  ) => Promise<CipherView[]>;\n  getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n  getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getNextCipherForUrl: (url: string) => Promise<CipherView>;\n  updateLastUsedIndexForUrl: (url: string) => void;\n  updateLastUsedDate: (id: string) => Promise<void>;\n  updateLastLaunchedDate: (id: string) => Promise<void>;\n  saveNeverDomain: (domain: string) => Promise<void>;\n  createWithServer: (cipher: Cipher) => Promise<any>;\n  updateWithServer: (cipher: Cipher) => Promise<any>;\n  shareWithServer: (\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  shareManyWithServer: (\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  saveAttachmentWithServer: (\n    cipher: Cipher,\n    unencryptedFile: any,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveAttachmentRawWithServer: (\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n  upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n  replace: (ciphers: { [id: string]: CipherData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  deleteManyWithServer: (ids: string[]) => Promise<any>;\n  deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n  deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n  sortCiphersByLastUsed: (a: any, b: any) => number;\n  sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n  getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n  softDelete: (id: string | string[]) => Promise<any>;\n  softDeleteWithServer: (id: string) => Promise<any>;\n  softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n  restore: (\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) => Promise<any>;\n  restoreWithServer: (id: string) => Promise<any>;\n  restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { CollectionData } from \"../models/data/collection.data\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/tree-node\";\nimport { CollectionView } from \"../models/view/collection.view\";\n\nexport abstract class CollectionService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: CollectionView) => Promise<Collection>;\n  decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n  get: (id: string) => Promise<Collection>;\n  getAll: () => Promise<Collection[]>;\n  getAllDecrypted: () => Promise<CollectionView[]>;\n  getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n  getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n  upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n  replace: (collections: { [id: string]: CollectionData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { ProfileOrganizationResponse } from \"../models/response/profile-organization.response\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profile-provider-organization.response\";\nimport { ProfileProviderResponse } from \"../models/response/profile-provider.response\";\n\nexport abstract class CryptoService {\n  setKey: (key: SymmetricCryptoKey) => Promise<any>;\n  setKeyHash: (keyHash: string) => Promise<void>;\n  setEncKey: (encKey: string) => Promise<void>;\n  setEncPrivateKey: (encPrivateKey: string) => Promise<void>;\n  setOrgKeys: (\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ) => Promise<void>;\n  setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<void>;\n  getKey: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyFromStorage: (keySuffix: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyHash: () => Promise<string>;\n  compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n  getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  getPublicKey: () => Promise<ArrayBuffer>;\n  getPrivateKey: () => Promise<ArrayBuffer>;\n  getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n  getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n  getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n  getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n  getKeyForUserEncryption: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  hasKey: () => Promise<boolean>;\n  hasKeyInMemory: (userId?: string) => Promise<boolean>;\n  hasKeyStored: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<boolean>;\n  hasEncKey: () => Promise<boolean>;\n  clearKey: (clearSecretStorage?: boolean, userId?: string) => Promise<any>;\n  clearKeyHash: () => Promise<any>;\n  clearEncKey: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearKeyPair: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearOrgKeys: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n  clearPinProtectedKey: () => Promise<any>;\n  clearKeys: (userId?: string) => Promise<any>;\n  toggleKey: () => Promise<any>;\n  makeKey: (\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeKeyFromPin: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number,\n    protectedKeyCs?: EncString\n  ) => Promise<SymmetricCryptoKey>;\n  makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n  makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n  makePinKey: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfIterations: number\n  ) => Promise<SymmetricCryptoKey>;\n  makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n  hashPassword: (\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ) => Promise<string>;\n  makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n  remakeEncKey: (\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ) => Promise<[SymmetricCryptoKey, EncString]>;\n  encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n  encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n  rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n  rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n  decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n  decryptFromBytes: (encBuffer: EncArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  randomNumber: (min: number, max: number) => Promise<number>;\n  validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","import { DecryptParameters } from \"../models/domain/decrypt-parameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport abstract class CryptoFunctionService {\n  pbkdf2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ) => Promise<ArrayBuffer>;\n  hkdf: (\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hkdfExpand: (\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hash: (\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ) => Promise<ArrayBuffer>;\n  hmac: (\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n  hmacFast: (\n    value: ArrayBuffer | string,\n    key: ArrayBuffer | string,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer | string>;\n  compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n  aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  aesDecryptFastParameters: (\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ) => DecryptParameters<ArrayBuffer | string>;\n  aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n  aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaEncrypt: (\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaDecrypt: (\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n  randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { IEncrypted } from \"../interfaces/IEncrypted\";\nimport { Decryptable } from \"../interfaces/decryptable.interface\";\nimport { InitializerMetadata } from \"../interfaces/initializer-metadata.interface\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport abstract class EncryptService {\n  abstract encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString>;\n  abstract encryptToBytes: (\n    plainValue: ArrayBuffer,\n    key?: SymmetricCryptoKey\n  ) => Promise<EncArrayBuffer>;\n  abstract decryptToUtf8: (encString: EncString, key: SymmetricCryptoKey) => Promise<string>;\n  abstract decryptToBytes: (encThing: IEncrypted, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  abstract resolveLegacyKey: (key: SymmetricCryptoKey, encThing: IEncrypted) => SymmetricCryptoKey;\n  abstract decryptItems: <T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ) => Promise<T[]>;\n}\n","import { Observable } from \"rxjs\";\n\nexport type Urls = {\n  base?: string;\n  webVault?: string;\n  api?: string;\n  identity?: string;\n  icons?: string;\n  notifications?: string;\n  events?: string;\n  keyConnector?: string;\n  scim?: string;\n};\n\nexport type PayPalConfig = {\n  businessId?: string;\n  buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n  urls: Observable<Urls>;\n\n  hasBaseUrl: () => boolean;\n  getNotificationsUrl: () => string;\n  getWebVaultUrl: () => string;\n  getSendUrl: () => string;\n  getIconsUrl: () => string;\n  getApiUrl: () => string;\n  getIdentityUrl: () => string;\n  getEventsUrl: () => string;\n  getKeyConnectorUrl: () => string;\n  getScimUrl: () => string;\n  setUrlsFromStorage: () => Promise<void>;\n  setUrls: (urls: Urls) => Promise<Urls>;\n  getUrls: () => Urls;\n  isCloud: () => boolean;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport abstract class EventCollectionService {\n  collect: (\n    eventType: EventType,\n    cipherId?: string,\n    uploadImmediately?: boolean,\n    organizationId?: string\n  ) => Promise<any>;\n}\n","import { EventView } from \"../models/view/event.view\";\n\nexport type ExportFormat = \"csv\" | \"json\" | \"encrypted_json\";\n\nexport abstract class ExportService {\n  getExport: (format?: ExportFormat, organizationId?: string) => Promise<string>;\n  getPasswordProtectedExport: (password: string, organizationId?: string) => Promise<string>;\n  getOrganizationExport: (organizationId: string, format?: ExportFormat) => Promise<string>;\n  getEventExport: (events: EventView[]) => Promise<string>;\n  getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport abstract class FileDownloadService {\n  download: (request: FileDownloadRequest) => void;\n}\n","import { Folder } from \"../../models/domain/folder\";\nimport { FolderResponse } from \"../../models/response/folder.response\";\n\nexport class FolderApiServiceAbstraction {\n  save: (folder: Folder) => Promise<any>;\n  delete: (id: string) => Promise<any>;\n  get: (id: string) => Promise<FolderResponse>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { FolderView } from \"../../models/view/folder.view\";\n\nexport abstract class FolderService {\n  folders$: Observable<Folder[]>;\n  folderViews$: Observable<FolderView[]>;\n\n  clearCache: () => Promise<void>;\n  encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n  get: (id: string) => Promise<Folder>;\n  getAllFromState: () => Promise<Folder[]>;\n  /**\n   * @deprecated Only use in CLI!\n   */\n  getFromState: (id: string) => Promise<Folder>;\n  /**\n   * @deprecated Only use in CLI!\n   */\n  getAllDecryptedFromState: () => Promise<FolderView[]>;\n}\n\nexport abstract class InternalFolderService extends FolderService {\n  upsert: (folder: FolderData | FolderData[]) => Promise<void>;\n  replace: (folders: { [id: string]: FolderData }) => Promise<void>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { AbstractControl } from \"@angular/forms\";\nexport interface AllValidationErrors {\n  controlName: string;\n  errorName: string;\n}\n\nexport interface FormGroupControls {\n  [key: string]: AbstractControl;\n}\n\nexport abstract class FormValidationErrorsService {\n  getFormValidationErrors: (controls: FormGroupControls) => AllValidationErrors[];\n}\n","import { Observable } from \"rxjs\";\n\nexport abstract class I18nService {\n  locale$: Observable<string>;\n  supportedTranslationLocales: string[];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames: Map<string, string>;\n  t: (id: string, p1?: string | number, p2?: string | number, p3?: string | number) => string;\n  translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { Organization } from \"../models/domain/organization\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport abstract class KeyConnectorService {\n  getAndSetKey: (url?: string) => Promise<void>;\n  getManagingOrganization: () => Promise<Organization>;\n  getUsesKeyConnector: () => Promise<boolean>;\n  migrateUser: () => Promise<void>;\n  userNeedsMigration: () => Promise<boolean>;\n  convertNewSsoUserToKeyConnector: (\n    tokenResponse: IdentityTokenResponse,\n    orgId: string\n  ) => Promise<void>;\n  setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n  setConvertAccountRequired: (status: boolean) => Promise<void>;\n  getConvertAccountRequired: () => Promise<boolean>;\n  removeConvertAccountRequired: () => Promise<void>;\n  clear: () => Promise<void>;\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nexport abstract class LogService {\n  debug: (message: string) => void;\n  info: (message: string) => void;\n  warning: (message: string) => void;\n  error: (message: string) => void;\n  write: (level: LogLevelType, message: string) => void;\n}\n","export abstract class LoginService {\n  getEmail: () => string;\n  getRememberEmail: () => boolean;\n  setEmail: (value: string) => void;\n  setRememberEmail: (value: boolean) => void;\n  clearValues: () => void;\n  saveEmailSettings: () => Promise<void>;\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","import { ListResponse } from \"../../models/response/list.response\";\n\nimport {\n  OrganizationUserAcceptRequest,\n  OrganizationUserBulkConfirmRequest,\n  OrganizationUserConfirmRequest,\n  OrganizationUserInviteRequest,\n  OrganizationUserResetPasswordEnrollmentRequest,\n  OrganizationUserResetPasswordRequest,\n  OrganizationUserUpdateGroupsRequest,\n  OrganizationUserUpdateRequest,\n} from \"./requests\";\nimport {\n  OrganizationUserBulkPublicKeyResponse,\n  OrganizationUserBulkResponse,\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"./responses\";\n\n/**\n * Service for interacting with Organization Users via the API\n */\nexport abstract class OrganizationUserService {\n  /**\n   * Retrieve a single organization user by Id\n   * @param organizationId - Identifier for the user's organization\n   * @param id - Organization user identifier\n   * @param options - Options for the request\n   */\n  abstract getOrganizationUser(\n    organizationId: string,\n    id: string,\n    options?: {\n      includeGroups?: boolean;\n    }\n  ): Promise<OrganizationUserDetailsResponse>;\n\n  /**\n   * Retrieve a list of groups Ids the specified organization user belongs to\n   * @param organizationId - Identifier for the user's organization\n   * @param id - Organization user identifier\n   */\n  abstract getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]>;\n\n  /**\n   * Retrieve a list of all users that belong to the specified organization\n   * @param organizationId - Identifier for the organization\n   * @param options - Options for the request\n   */\n  abstract getAllUsers(\n    organizationId: string,\n    options?: {\n      includeCollections?: boolean;\n      includeGroups?: boolean;\n    }\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n\n  /**\n   * Retrieve reset password details for the specified organization user\n   * @param organizationId - Identifier for the user's organization\n   * @param id - Organization user identifier\n   */\n  abstract getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse>;\n\n  /**\n   * Create new organization user invite(s) for the specified organization\n   * @param organizationId - Identifier for the organization\n   * @param request - New user invitation request details\n   */\n  abstract postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<void>;\n\n  /**\n   * Re-invite the specified organization user\n   * @param organizationId - Identifier for the user's organization\n   * @param id - Organization user identifier\n   */\n  abstract postOrganizationUserReinvite(organizationId: string, id: string): Promise<any>;\n\n  /**\n   * Re-invite many organization users for the specified organization\n   * @param organizationId - Identifier for the organization\n   * @param ids - A list of organization user identifiers\n   * @return List of user ids, including both those that were successfully re-invited and those that had an error\n   */\n  abstract postManyOrganizationUserReinvite(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  /**\n   * Accept an organization user invitation\n   * @param organizationId - Identifier for the organization to accept\n   * @param id - Organization user identifier\n   * @param request - Request details for accepting the invitation\n   */\n  abstract postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<void>;\n\n  /**\n   * Confirm an organization user that has accepted their invitation\n   * @param organizationId - Identifier for the organization to confirm\n   * @param id - Organization user identifier\n   * @param request - Request details for confirming the user\n   */\n  abstract postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<void>;\n\n  /**\n   * Retrieve a list of the specified users' public keys\n   * @param organizationId - Identifier for the organization to accept\n   * @param ids - A list of organization user identifiers to retrieve public keys for\n   */\n  abstract postOrganizationUsersPublicKey(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n\n  /**\n   * Confirm many organization users that have accepted their invitations\n   * @param organizationId - Identifier for the organization to confirm users\n   * @param request - Bulk request details for confirming the user\n   */\n  abstract postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  /**\n   * Update an organization users\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   * @param request - Request details for updating the user\n   */\n  abstract putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<void>;\n\n  /**\n   * Update an organization user's groups\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   * @param groupIds - List of group ids to associate the user with\n   */\n  abstract putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    groupIds: OrganizationUserUpdateGroupsRequest\n  ): Promise<void>;\n\n  /**\n   * Update an organization user's reset password enrollment\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param userId - Organization user identifier\n   * @param request - Reset password enrollment details\n   */\n  abstract putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<void>;\n\n  /**\n   * Reset an organization user's password\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   * @param request - Reset password details\n   */\n  abstract putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<void>;\n\n  /**\n   * Delete an organization user\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   */\n  abstract deleteOrganizationUser(organizationId: string, id: string): Promise<void>;\n\n  /**\n   * Delete many organization users\n   * @param organizationId - Identifier for the organization the users belongs to\n   * @param ids - List of organization user identifiers to delete\n   * @return List of user ids, including both those that were successfully deleted and those that had an error\n   */\n  abstract deleteManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  /**\n   * Revoke an organization user's access to the organization\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   */\n  abstract revokeOrganizationUser(organizationId: string, id: string): Promise<void>;\n\n  /**\n   * Revoke many organization users' access to the organization\n   * @param organizationId - Identifier for the organization the users belongs to\n   * @param ids - List of organization user identifiers to revoke\n   * @return List of user ids, including both those that were successfully revoked and those that had an error\n   */\n  abstract revokeManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  /**\n   * Restore an organization user's access to the organization\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   */\n  abstract restoreOrganizationUser(organizationId: string, id: string): Promise<void>;\n\n  /**\n   * Restore many organization users' access to the organization\n   * @param organizationId - Identifier for the organization the users belongs to\n   * @param ids - List of organization user identifiers to restore\n   * @return List of user ids, including both those that were successfully restored and those that had an error\n   */\n  abstract restoreManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\nimport { ImportDirectoryRequest } from \"../../models/request/import-directory.request\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organization-api-key.request\";\nimport { OrganizationCreateRequest } from \"../../models/request/organization-create.request\";\nimport { OrganizationKeysRequest } from \"../../models/request/organization-keys.request\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organization-subscription-update.request\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organization-tax-info-update.request\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organization-update.request\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organization-upgrade.request\";\nimport { OrganizationSsoRequest } from \"../../models/request/organization/organization-sso.request\";\nimport { PaymentRequest } from \"../../models/request/payment.request\";\nimport { SeatRequest } from \"../../models/request/seat.request\";\nimport { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { StorageRequest } from \"../../models/request/storage.request\";\nimport { VerifyBankRequest } from \"../../models/request/verify-bank.request\";\nimport { ApiKeyResponse } from \"../../models/response/api-key.response\";\nimport { BillingResponse } from \"../../models/response/billing.response\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organization-api-key-information.response\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organization-auto-enroll-status.response\";\nimport { OrganizationKeysResponse } from \"../../models/response/organization-keys.response\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organization-subscription.response\";\nimport { OrganizationResponse } from \"../../models/response/organization.response\";\nimport { OrganizationSsoResponse } from \"../../models/response/organization/organization-sso.response\";\nimport { PaymentResponse } from \"../../models/response/payment.response\";\nimport { TaxInfoResponse } from \"../../models/response/tax-info.response\";\n\nexport class OrganizationApiServiceAbstraction {\n  get: (id: string) => Promise<OrganizationResponse>;\n  getBilling: (id: string) => Promise<BillingResponse>;\n  getSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n  getLicense: (id: string, installationId: string) => Promise<unknown>;\n  getAutoEnrollStatus: (identifier: string) => Promise<OrganizationAutoEnrollStatusResponse>;\n  create: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n  createLicense: (data: FormData) => Promise<OrganizationResponse>;\n  save: (id: string, request: OrganizationUpdateRequest) => Promise<OrganizationResponse>;\n  updatePayment: (id: string, request: PaymentRequest) => Promise<void>;\n  upgrade: (id: string, request: OrganizationUpgradeRequest) => Promise<PaymentResponse>;\n  updateSubscription: (id: string, request: OrganizationSubscriptionUpdateRequest) => Promise<void>;\n  updateSeats: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n  updateStorage: (id: string, request: StorageRequest) => Promise<PaymentResponse>;\n  verifyBank: (id: string, request: VerifyBankRequest) => Promise<void>;\n  cancel: (id: string) => Promise<void>;\n  reinstate: (id: string) => Promise<void>;\n  leave: (id: string) => Promise<void>;\n  delete: (id: string, request: SecretVerificationRequest) => Promise<void>;\n  updateLicense: (id: string, data: FormData) => Promise<void>;\n  importDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<void>;\n  getOrCreateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getApiKeyInformation: (\n    id: string,\n    organizationApiKeyType?: OrganizationApiKeyType\n  ) => Promise<ListResponse<OrganizationApiKeyInformationResponse>>;\n  rotateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n  updateTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<void>;\n  getKeys: (id: string) => Promise<OrganizationKeysResponse>;\n  updateKeys: (id: string, request: OrganizationKeysRequest) => Promise<OrganizationKeysResponse>;\n  getSso: (id: string) => Promise<OrganizationSsoResponse>;\n  updateSso: (id: string, request: OrganizationSsoRequest) => Promise<OrganizationSsoResponse>;\n}\n","import { map, Observable } from \"rxjs\";\n\nimport { Utils } from \"../../misc/utils\";\nimport { OrganizationData } from \"../../models/data/organization.data\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { I18nService } from \"../i18n.service\";\n\nexport function canAccessVaultTab(org: Organization): boolean {\n  return org.canViewAssignedCollections || org.canViewAllCollections || org.canManageGroups;\n}\n\nexport function canAccessSettingsTab(org: Organization): boolean {\n  return (\n    org.isOwner ||\n    org.canManagePolicies ||\n    org.canManageSso ||\n    org.canManageScim ||\n    org.canAccessImportExport\n  );\n}\n\nexport function canAccessMembersTab(org: Organization): boolean {\n  return org.canManageUsers || org.canManageUsersPassword;\n}\n\nexport function canAccessGroupsTab(org: Organization): boolean {\n  return org.canManageGroups;\n}\n\nexport function canAccessReportingTab(org: Organization): boolean {\n  return org.canAccessReports || org.canAccessEventLogs;\n}\n\nexport function canAccessBillingTab(org: Organization): boolean {\n  return org.canManageBilling;\n}\n\nexport function canAccessOrgAdmin(org: Organization): boolean {\n  return (\n    canAccessMembersTab(org) ||\n    canAccessGroupsTab(org) ||\n    canAccessReportingTab(org) ||\n    canAccessBillingTab(org) ||\n    canAccessSettingsTab(org) ||\n    canAccessVaultTab(org)\n  );\n}\n\nexport function getOrganizationById(id: string) {\n  return map<Organization[], Organization | undefined>((orgs) => orgs.find((o) => o.id === id));\n}\n\nexport function canAccessAdmin(i18nService: I18nService) {\n  return map<Organization[], Organization[]>((orgs) =>\n    orgs.filter(canAccessOrgAdmin).sort(Utils.getSortFunction(i18nService, \"name\"))\n  );\n}\n\nexport function isNotProviderUser(org: Organization): boolean {\n  return !org.isProviderUser;\n}\n\nexport abstract class OrganizationService {\n  organizations$: Observable<Organization[]>;\n\n  get: (id: string) => Organization;\n  getByIdentifier: (identifier: string) => Organization;\n  getAll: (userId?: string) => Promise<Organization[]>;\n  /**\n   * @deprecated For the CLI only\n   * @param id id of the organization\n   */\n  getFromState: (id: string) => Promise<Organization>;\n  canManageSponsorships: () => Promise<boolean>;\n  hasOrganizations: () => boolean;\n}\n\nexport abstract class InternalOrganizationService extends OrganizationService {\n  replace: (organizations: { [id: string]: OrganizationData }) => Promise<void>;\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { PasswordGeneratorOptions } from \"../models/domain/password-generator-options\";\nimport { PasswordGeneratorPolicyOptions } from \"../models/domain/password-generator-policy-options\";\n\nexport abstract class PasswordGenerationService {\n  generatePassword: (options: PasswordGeneratorOptions) => Promise<string>;\n  generatePassphrase: (options: PasswordGeneratorOptions) => Promise<string>;\n  getOptions: () => Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]>;\n  enforcePasswordGeneratorPoliciesOnOptions: (\n    options: PasswordGeneratorOptions\n  ) => Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]>;\n  getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n  saveOptions: (options: PasswordGeneratorOptions) => Promise<void>;\n  getHistory: () => Promise<GeneratedPasswordHistory[]>;\n  addHistory: (password: string) => Promise<void>;\n  clear: (userId?: string) => Promise<void>;\n  passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n  normalizeOptions: (\n    options: PasswordGeneratorOptions,\n    enforcedPolicyOptions: PasswordGeneratorPolicyOptions\n  ) => void;\n}\n","export abstract class PasswordRepromptService {\n  protectedFields: () => string[];\n  showPasswordPrompt: () => Promise<boolean>;\n  enabled: () => Promise<boolean>;\n}\n","import { ClientType } from \"../enums/clientType\";\nimport { DeviceType } from \"../enums/deviceType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  getClientType: () => ClientType;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  getApplicationVersion: () => Promise<string>;\n  getApplicationVersionNumber: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean,\n    target?: string\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  supportsSecureStorage: () => boolean;\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { PolicyRequest } from \"../../models/request/policy.request\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport class PolicyApiServiceAbstraction {\n  getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n  getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByToken: (\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByInvitedUser: (\n    organizationId: string,\n    userId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n  putPolicy: (organizationId: string, type: PolicyType, request: PolicyRequest) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/reset-password-policy-options\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport abstract class PolicyService {\n  policies$: Observable<Policy[]>;\n  masterPasswordPolicyOptions$: (policies?: Policy[]) => Observable<MasterPasswordPolicyOptions>;\n  policyAppliesToActiveUser$: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean\n  ) => Observable<boolean>;\n\n  /**\n   * @deprecated Do not call this, use the policies$ observable collection\n   */\n  getAll: (type?: PolicyType, userId?: string) => Promise<Policy[]>;\n  evaluateMasterPassword: (\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions?: MasterPasswordPolicyOptions\n  ) => boolean;\n  getResetPasswordPolicyOptions: (\n    policies: Policy[],\n    orgId: string\n  ) => [ResetPasswordPolicyOptions, boolean];\n  mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n  policyAppliesToUser: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) => Promise<boolean>;\n}\n\nexport abstract class InternalPolicyService extends PolicyService {\n  upsert: (policy: PolicyData) => Promise<any>;\n  replace: (policies: { [id: string]: PolicyData }) => Promise<void>;\n  clear: (userId?: string) => Promise<any>;\n}\n","import { ProviderData } from \"../models/data/provider.data\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport abstract class ProviderService {\n  get: (id: string) => Promise<Provider>;\n  getAll: () => Promise<Provider[]>;\n  save: (providers: { [id: string]: ProviderData }) => Promise<any>;\n}\n","import { CipherView } from \"../models/view/cipher.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport abstract class SearchService {\n  indexedEntityId?: string = null;\n  clearIndex: () => void;\n  isSearchable: (query: string) => boolean;\n  indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n  searchCiphers: (\n    query: string,\n    filter?: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[],\n    ciphers?: CipherView[]\n  ) => Promise<CipherView[]>;\n  searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n  searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { SendData } from \"../models/data/send.data\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { Send } from \"../models/domain/send\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport abstract class SendService {\n  clearCache: () => Promise<void>;\n  encrypt: (\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ) => Promise<[Send, EncArrayBuffer]>;\n  get: (id: string) => Promise<Send>;\n  getAll: () => Promise<Send[]>;\n  getAllDecrypted: () => Promise<SendView[]>;\n  saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n  upsert: (send: SendData | SendData[]) => Promise<any>;\n  replace: (sends: { [id: string]: SendData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  removePasswordWithServer: (id: string) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { KdfType } from \"../enums/kdfType\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encrypted-organization-key.data\";\nimport { EventData } from \"../models/data/event.data\";\nimport { FolderData } from \"../models/data/folder.data\";\nimport { LocalData } from \"../models/data/local.data\";\nimport { OrganizationData } from \"../models/data/organization.data\";\nimport { PolicyData } from \"../models/data/policy.data\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { SendData } from \"../models/data/send.data\";\nimport { ServerConfigData } from \"../models/data/server-config.data\";\nimport { Account, AccountSettingsSettings } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { Policy } from \"../models/domain/policy\";\nimport { StorageOptions } from \"../models/domain/storage-options\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { WindowState } from \"../models/domain/window-state\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { CollectionView } from \"../models/view/collection.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport abstract class StateService<T extends Account = Account> {\n  accounts$: Observable<{ [userId: string]: T }>;\n  activeAccount$: Observable<string>;\n  activeAccountUnlocked$: Observable<boolean>;\n\n  addAccount: (account: T) => Promise<void>;\n  setActiveUser: (userId: string) => Promise<void>;\n  clean: (options?: StorageOptions) => Promise<void>;\n  init: () => Promise<void>;\n\n  getAccessToken: (options?: StorageOptions) => Promise<string>;\n  setAccessToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getAddEditCipherInfo: (options?: StorageOptions) => Promise<any>;\n  setAddEditCipherInfo: (value: any, options?: StorageOptions) => Promise<void>;\n  getAlwaysShowDock: (options?: StorageOptions) => Promise<boolean>;\n  setAlwaysShowDock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientId: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientId: (value: string, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientSecret: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientSecret: (value: string, options?: StorageOptions) => Promise<void>;\n  getAutoConfirmFingerPrints: (options?: StorageOptions) => Promise<boolean>;\n  setAutoConfirmFingerprints: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getAutoFillOnPageLoadDefault: (options?: StorageOptions) => Promise<boolean>;\n  setAutoFillOnPageLoadDefault: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricAwaitingAcceptance: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricAwaitingAcceptance: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricFingerprintValidated: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricFingerprintValidated: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricText: (options?: StorageOptions) => Promise<string>;\n  setBiometricText: (value: string, options?: StorageOptions) => Promise<void>;\n  getBiometricUnlock: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricUnlock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCanAccessPremium: (options?: StorageOptions) => Promise<boolean>;\n  getHasPremiumPersonally: (options?: StorageOptions) => Promise<boolean>;\n  setHasPremiumPersonally: (value: boolean, options?: StorageOptions) => Promise<void>;\n  setHasPremiumFromOrganization: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getHasPremiumFromOrganization: (options?: StorageOptions) => Promise<boolean>;\n  getClearClipboard: (options?: StorageOptions) => Promise<number>;\n  setClearClipboard: (value: number, options?: StorageOptions) => Promise<void>;\n  getCollapsedGroupings: (options?: StorageOptions) => Promise<string[]>;\n  setCollapsedGroupings: (value: string[], options?: StorageOptions) => Promise<void>;\n  getConvertAccountToKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setConvertAccountToKeyConnector: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setCryptoMasterKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyAuto: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyAuto: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyB64: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyB64: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<string>;\n  hasCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setCryptoMasterKeyBiometric: (value: string, options?: StorageOptions) => Promise<void>;\n  getDecryptedCiphers: (options?: StorageOptions) => Promise<CipherView[]>;\n  setDecryptedCiphers: (value: CipherView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCollections: (options?: StorageOptions) => Promise<CollectionView[]>;\n  setDecryptedCollections: (value: CollectionView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setDecryptedCryptoSymmetricKey: (\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setDecryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPinProtected: (options?: StorageOptions) => Promise<EncString>;\n  setDecryptedPinProtected: (value: EncString, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this, use PolicyService\n   */\n  getDecryptedPolicies: (options?: StorageOptions) => Promise<Policy[]>;\n  /**\n   * @deprecated Do not call this, use PolicyService\n   */\n  setDecryptedPolicies: (value: Policy[], options?: StorageOptions) => Promise<void>;\n  getDecryptedPrivateKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setDecryptedPrivateKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getDecryptedProviderKeys: (options?: StorageOptions) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedProviderKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedSends: (options?: StorageOptions) => Promise<SendView[]>;\n  setDecryptedSends: (value: SendView[], options?: StorageOptions) => Promise<void>;\n  getDefaultUriMatch: (options?: StorageOptions) => Promise<UriMatchType>;\n  setDefaultUriMatch: (value: UriMatchType, options?: StorageOptions) => Promise<void>;\n  getDisableAddLoginNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAddLoginNotification: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoBiometricsPrompt: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoBiometricsPrompt: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoTotpCopy: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoTotpCopy: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableBadgeCounter: (options?: StorageOptions) => Promise<boolean>;\n  setDisableBadgeCounter: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableChangedPasswordNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableChangedPasswordNotification: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDisableContextMenuItem: (options?: StorageOptions) => Promise<boolean>;\n  setDisableContextMenuItem: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableFavicon: (options?: StorageOptions) => Promise<boolean>;\n  setDisableFavicon: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableGa: (options?: StorageOptions) => Promise<boolean>;\n  setDisableGa: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowCardsCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowCardsCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowIdentitiesCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowIdentitiesCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDuckDuckGoSharedKey: (options?: StorageOptions) => Promise<string>;\n  setDuckDuckGoSharedKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmail: (options?: StorageOptions) => Promise<string>;\n  setEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmailVerified: (options?: StorageOptions) => Promise<boolean>;\n  setEmailVerified: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAlwaysOnTop: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAlwaysOnTop: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAutoFillOnPageLoad: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAutoFillOnPageLoad: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBiometric: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegration: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegrationFingerprint: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegrationFingerprint: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableCloseToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableCloseToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableDuckDuckGoBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableDuckDuckGoBrowserIntegration: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableFullWidth: (options?: StorageOptions) => Promise<boolean>;\n  setEnableFullWidth: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableMinimizeToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableMinimizeToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableStartToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableStartToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEncryptedCiphers: (options?: StorageOptions) => Promise<{ [id: string]: CipherData }>;\n  setEncryptedCiphers: (\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCollections: (options?: StorageOptions) => Promise<{ [id: string]: CollectionData }>;\n  setEncryptedCollections: (\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedCryptoSymmetricKey: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  getEncryptedFolders: (options?: StorageOptions) => Promise<{ [id: string]: FolderData }>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  setEncryptedFolders: (\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<{ [orgId: string]: EncryptedOrganizationKeyData }>;\n  setEncryptedOrganizationKeys: (\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setEncryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPinProtected: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPinProtected: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use PolicyService\n   */\n  getEncryptedPolicies: (options?: StorageOptions) => Promise<{ [id: string]: PolicyData }>;\n  /**\n   * @deprecated Do not call this directly, use PolicyService\n   */\n  setEncryptedPolicies: (\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPrivateKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPrivateKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedProviderKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedProviderKeys: (value: any, options?: StorageOptions) => Promise<void>;\n  getEncryptedSends: (options?: StorageOptions) => Promise<{ [id: string]: SendData }>;\n  setEncryptedSends: (value: { [id: string]: SendData }, options?: StorageOptions) => Promise<void>;\n  getEntityId: (options?: StorageOptions) => Promise<string>;\n  setEntityId: (value: string, options?: StorageOptions) => Promise<void>;\n  getEntityType: (options?: StorageOptions) => Promise<any>;\n  setEntityType: (value: string, options?: StorageOptions) => Promise<void>;\n  getEnvironmentUrls: (options?: StorageOptions) => Promise<EnvironmentUrls>;\n  setEnvironmentUrls: (value: EnvironmentUrls, options?: StorageOptions) => Promise<void>;\n  getEquivalentDomains: (options?: StorageOptions) => Promise<any>;\n  setEquivalentDomains: (value: string, options?: StorageOptions) => Promise<void>;\n  getEventCollection: (options?: StorageOptions) => Promise<EventData[]>;\n  setEventCollection: (value: EventData[], options?: StorageOptions) => Promise<void>;\n  getEverBeenUnlocked: (options?: StorageOptions) => Promise<boolean>;\n  setEverBeenUnlocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getForcePasswordReset: (options?: StorageOptions) => Promise<boolean>;\n  setForcePasswordReset: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getInstalledVersion: (options?: StorageOptions) => Promise<string>;\n  setInstalledVersion: (value: string, options?: StorageOptions) => Promise<void>;\n  getIsAuthenticated: (options?: StorageOptions) => Promise<boolean>;\n  getKdfIterations: (options?: StorageOptions) => Promise<number>;\n  setKdfIterations: (value: number, options?: StorageOptions) => Promise<void>;\n  getKdfType: (options?: StorageOptions) => Promise<KdfType>;\n  setKdfType: (value: KdfType, options?: StorageOptions) => Promise<void>;\n  getKeyHash: (options?: StorageOptions) => Promise<string>;\n  setKeyHash: (value: string, options?: StorageOptions) => Promise<void>;\n  getLastActive: (options?: StorageOptions) => Promise<number>;\n  setLastActive: (value: number, options?: StorageOptions) => Promise<void>;\n  getLastSync: (options?: StorageOptions) => Promise<string>;\n  setLastSync: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocalData: (options?: StorageOptions) => Promise<{ [cipherId: string]: LocalData }>;\n  setLocalData: (\n    value: { [cipherId: string]: LocalData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getLocale: (options?: StorageOptions) => Promise<string>;\n  setLocale: (value: string, options?: StorageOptions) => Promise<void>;\n  getMainWindowSize: (options?: StorageOptions) => Promise<number>;\n  setMainWindowSize: (value: number, options?: StorageOptions) => Promise<void>;\n  getMinimizeOnCopyToClipboard: (options?: StorageOptions) => Promise<boolean>;\n  setMinimizeOnCopyToClipboard: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNeverDomains: (options?: StorageOptions) => Promise<{ [id: string]: any }>;\n  setNeverDomains: (value: { [id: string]: any }, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometrics: (options?: StorageOptions) => Promise<boolean>;\n  setNoAutoPromptBiometrics: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometricsText: (options?: StorageOptions) => Promise<string>;\n  setNoAutoPromptBiometricsText: (value: string, options?: StorageOptions) => Promise<void>;\n  getOpenAtLogin: (options?: StorageOptions) => Promise<boolean>;\n  setOpenAtLogin: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getOrganizationInvitation: (options?: StorageOptions) => Promise<any>;\n  setOrganizationInvitation: (value: any, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  getOrganizations: (options?: StorageOptions) => Promise<{ [id: string]: OrganizationData }>;\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  setOrganizations: (\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getPasswordGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setPasswordGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getUsernameGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setUsernameGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getGeneratorOptions: (options?: StorageOptions) => Promise<any>;\n  setGeneratorOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getProtectedPin: (options?: StorageOptions) => Promise<string>;\n  setProtectedPin: (value: string, options?: StorageOptions) => Promise<void>;\n  getProviders: (options?: StorageOptions) => Promise<{ [id: string]: ProviderData }>;\n  setProviders: (value: { [id: string]: ProviderData }, options?: StorageOptions) => Promise<void>;\n  getPublicKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setPublicKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getRefreshToken: (options?: StorageOptions) => Promise<string>;\n  setRefreshToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getRememberedEmail: (options?: StorageOptions) => Promise<string>;\n  setRememberedEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getSecurityStamp: (options?: StorageOptions) => Promise<string>;\n  setSecurityStamp: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use SettingsService\n   */\n  getSettings: (options?: StorageOptions) => Promise<AccountSettingsSettings>;\n  /**\n   * @deprecated Do not call this directly, use SettingsService\n   */\n  setSettings: (value: AccountSettingsSettings, options?: StorageOptions) => Promise<void>;\n  getSsoCodeVerifier: (options?: StorageOptions) => Promise<string>;\n  setSsoCodeVerifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoOrgIdentifier: (options?: StorageOptions) => Promise<string>;\n  setSsoOrganizationIdentifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoState: (options?: StorageOptions) => Promise<string>;\n  setSsoState: (value: string, options?: StorageOptions) => Promise<void>;\n  getTheme: (options?: StorageOptions) => Promise<ThemeType>;\n  setTheme: (value: ThemeType, options?: StorageOptions) => Promise<void>;\n  getTwoFactorToken: (options?: StorageOptions) => Promise<string>;\n  setTwoFactorToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getUserId: (options?: StorageOptions) => Promise<string>;\n  getUsesKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setUsesKeyConnector: (vaule: boolean, options?: StorageOptions) => Promise<void>;\n  getVaultTimeout: (options?: StorageOptions) => Promise<number>;\n  setVaultTimeout: (value: number, options?: StorageOptions) => Promise<void>;\n  getVaultTimeoutAction: (options?: StorageOptions) => Promise<string>;\n  setVaultTimeoutAction: (value: string, options?: StorageOptions) => Promise<void>;\n  getStateVersion: () => Promise<number>;\n  setStateVersion: (value: number) => Promise<void>;\n  getWindow: () => Promise<WindowState>;\n  setWindow: (value: WindowState) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use ConfigService\n   */\n  getServerConfig: (options?: StorageOptions) => Promise<ServerConfigData>;\n  /**\n   * @deprecated Do not call this directly, use ConfigService\n   */\n  setServerConfig: (value: ServerConfigData, options?: StorageOptions) => Promise<void>;\n}\n","export abstract class StateMigrationService {\n  needsMigration: () => Promise<boolean>;\n  migrate: () => Promise<void>;\n}\n","import { MemoryStorageOptions, StorageOptions } from \"../models/domain/storage-options\";\n\nexport abstract class AbstractStorageService {\n  abstract get<T>(key: string, options?: StorageOptions): Promise<T>;\n  abstract has(key: string, options?: StorageOptions): Promise<boolean>;\n  abstract save<T>(key: string, obj: T, options?: StorageOptions): Promise<void>;\n  abstract remove(key: string, options?: StorageOptions): Promise<void>;\n}\n\nexport abstract class AbstractCachedStorageService extends AbstractStorageService {\n  abstract getBypassCache<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T>;\n}\n\nexport interface MemoryStorageServiceInterface {\n  get<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T>;\n}\n","import {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../../models/response/notification.response\";\n\nexport abstract class SyncService {\n  syncInProgress: boolean;\n\n  getLastSync: () => Promise<Date>;\n  setLastSync: (date: Date, userId?: string) => Promise<any>;\n  fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n  syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","import { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport abstract class TokenService {\n  setTokens: (\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ) => Promise<any>;\n  setToken: (token: string) => Promise<any>;\n  getToken: () => Promise<string>;\n  setRefreshToken: (refreshToken: string) => Promise<any>;\n  getRefreshToken: () => Promise<string>;\n  setClientId: (clientId: string) => Promise<any>;\n  getClientId: () => Promise<string>;\n  setClientSecret: (clientSecret: string) => Promise<any>;\n  getClientSecret: () => Promise<string>;\n  setTwoFactorToken: (tokenResponse: IdentityTokenResponse) => Promise<any>;\n  getTwoFactorToken: () => Promise<string>;\n  clearTwoFactorToken: () => Promise<any>;\n  clearToken: (userId?: string) => Promise<any>;\n  decodeToken: (token?: string) => any;\n  getTokenExpirationDate: () => Promise<Date>;\n  tokenSecondsRemaining: (offsetSeconds?: number) => Promise<number>;\n  tokenNeedsRefresh: (minutes?: number) => Promise<boolean>;\n  getUserId: () => Promise<string>;\n  getEmail: () => Promise<string>;\n  getEmailVerified: () => Promise<boolean>;\n  getName: () => Promise<string>;\n  getIssuer: () => Promise<string>;\n  getIsExternal: () => Promise<boolean>;\n}\n","export abstract class TotpService {\n  getCode: (key: string) => Promise<string>;\n  getTimeInterval: (key: string) => number;\n}\n","import { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\n\nexport interface TwoFactorProviderDetails {\n  type: TwoFactorProviderType;\n  name: string;\n  description: string;\n  priority: number;\n  sort: number;\n  premium: boolean;\n}\n\nexport abstract class TwoFactorService {\n  init: () => void;\n  getSupportedProviders: (win: Window) => TwoFactorProviderDetails[];\n  getDefaultProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n  setSelectedProvider: (type: TwoFactorProviderType) => void;\n  clearSelectedProvider: () => void;\n\n  setProviders: (response: IdentityTwoFactorResponse) => void;\n  clearProviders: () => void;\n  getProviders: () => Map<TwoFactorProviderType, { [key: string]: string }>;\n}\n","import { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { Verification } from \"../../types/verification\";\n\nexport abstract class UserVerificationService {\n  buildRequest: <T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) => Promise<T>;\n  verifyUser: (verification: Verification) => Promise<boolean>;\n  requestOTP: () => Promise<void>;\n}\n","export abstract class UsernameGenerationService {\n  generateUsername: (options: any) => Promise<string>;\n  generateWord: (options: any) => Promise<string>;\n  generateSubaddress: (options: any) => Promise<string>;\n  generateCatchall: (options: any) => Promise<string>;\n  generateForwarded: (options: any) => Promise<string>;\n  getOptions: () => Promise<any>;\n  saveOptions: (options: any) => Promise<void>;\n}\n","export abstract class ValidationService {\n  showError: (data: any) => string[];\n}\n","export abstract class VaultTimeoutService {\n  checkVaultTimeout: () => Promise<void>;\n  lock: (userId?: string) => Promise<void>;\n  logOut: (userId?: string) => Promise<void>;\n}\n","export abstract class VaultTimeoutSettingsService {\n  setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n  getVaultTimeout: (userId?: string) => Promise<number>;\n  isPinLockSet: () => Promise<[boolean, boolean]>;\n  isBiometricLockSet: () => Promise<boolean>;\n  clear: (userId?: string) => Promise<void>;\n}\n","export enum AuthenticationStatus {\n  LoggedOut = 0,\n  Locked = 1,\n  Unlocked = 2,\n}\n","export enum AuthenticationType {\n  Password = 0,\n  Sso = 1,\n  UserApi = 2,\n  Passwordless = 3,\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","export enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n  OrganizationUser_Revoked = 1511,\n  OrganizationUser_Restored = 1512,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n  Organization_SponsorshipsSynced = 1608,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","export enum KdfType {\n  PBKDF2_SHA256 = 0,\n}\n\nexport const DEFAULT_KDF_TYPE = KdfType.PBKDF2_SHA256;\nexport const DEFAULT_KDF_ITERATIONS = 100000;\nexport const SEND_KDF_ITERATIONS = 100000;\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","export enum OrganizationApiKeyType {\n  Default = 0,\n  BillingSync = 1,\n  Scim = 2,\n}\n","export enum OrganizationConnectionType {\n  CloudBillingSync = 1,\n  Scim = 2,\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1,\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","export enum PaymentMethodType {\n  Card = 0,\n  BankAccount = 1,\n  PayPal = 2,\n  BitPay = 3,\n  Credit = 4,\n  WireTransfer = 5,\n  AppleInApp = 6,\n  GoogleInApp = 7,\n  Check = 8,\n}\n","export enum PlanType {\n  Free = 0,\n  FamiliesAnnually2019 = 1,\n  TeamsMonthly2019 = 2,\n  TeamsAnnually2019 = 3,\n  EnterpriseMonthly2019 = 4,\n  EnterpriseAnnually2019 = 5,\n  Custom = 6,\n  FamiliesAnnually = 7,\n  TeamsMonthly = 8,\n  TeamsAnnually = 9,\n  EnterpriseMonthly = 10,\n  EnterpriseAnnually = 11,\n}\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n}\n","export enum ProductType {\n  Free = 0,\n  Families = 1,\n  Teams = 2,\n  Enterprise = 3,\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","// required to avoid linting errors when there are no flags\n/* eslint-disable @typescript-eslint/ban-types */\nexport type SharedFlags = {\n  multithreadDecryption: boolean;\n};\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable @typescript-eslint/ban-types */\nexport type SharedDevFlags = {};\n\nfunction getFlags<T>(envFlags: string | T): T {\n  if (typeof envFlags === \"string\") {\n    return JSON.parse(envFlags) as T;\n  } else {\n    return envFlags as T;\n  }\n}\n\n/**\n * Gets the value of a feature flag from environment.\n * All flags default to \"on\" (true).\n * Only use for shared code in `libs`, otherwise use the client-specific function.\n * @param flag The name of the feature flag to check\n * @returns The value of the flag\n */\nexport function flagEnabled<Flags extends SharedFlags>(flag: keyof Flags): boolean {\n  const flags = getFlags<Flags>(process.env.FLAGS);\n  return flags[flag] == null || !!flags[flag];\n}\n\n/**\n * Gets the value of a dev flag from environment.\n * Will always return false unless in development.\n * Only use for shared code in `libs`, otherwise use the client-specific function.\n * @param flag The name of the dev flag to check\n * @returns The value of the flag\n */\nexport function devFlagEnabled<DevFlags extends SharedDevFlags>(flag: keyof DevFlags): boolean {\n  if (process.env.ENV !== \"development\") {\n    return false;\n  }\n\n  const devFlags = getFlags<DevFlags>(process.env.DEV_FLAGS);\n  return devFlags[flag] == null || !!devFlags[flag];\n}\n\n/**\n * Gets the value of a dev flag from environment.\n * Will always return false unless in development.\n * @param flag The name of the dev flag to check\n * @returns The value of the flag\n * @throws Error if the flag is not enabled\n */\nexport function devFlagValue<DevFlags extends SharedDevFlags>(\n  flag: keyof DevFlags\n): DevFlags[keyof DevFlags] {\n  if (!devFlagEnabled(flag)) {\n    throw new Error(`This method should not be called, it is protected by a disabled dev flag.`);\n  }\n\n  const devFlags = getFlags<DevFlags>(process.env.DEV_FLAGS);\n  return devFlags[flag];\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../models/view/item.view\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/tree-node\";\n\nexport class ServiceUtils {\n  /**\n   * Recursively adds a node to nodeTree\n   * @param {TreeNode<ITreeNodeObject>[]} nodeTree - An array of TreeNodes that the node will be added to\n   * @param {number} partIndex - Index of the `parts` array that is being processed\n   * @param {string[]} parts - Array of strings that represent the path to the `obj` node\n   * @param {ITreeNodeObject} obj - The node to be added to the tree\n   * @param {ITreeNodeObject} parent - The parent node of the `obj` node\n   * @param {string} delimiter - The delimiter used to split the path string, will be used to combine the path for missing nodes\n   */\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: TreeNode<ITreeNodeObject> | undefined,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end: boolean = partIndex === parts.length - 1;\n    const partName: string = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== partName) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node exists with the same name as the node being added\n        nodeTree.push(new TreeNode(obj, parent, partName));\n        return;\n      }\n      // Move down the tree to the next level\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i],\n        delimiter\n      );\n      return;\n    }\n\n    // If there's no node here with the same name...\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      // And we're at the end of the path given, add the node\n      if (end) {\n        nodeTree.push(new TreeNode(obj, parent, partName));\n        return;\n      }\n      // And we're not at the end of the path, combine the current name with the next name\n      // 1, *1.2, 1.2.1 becomes\n      // 1, *1.2/1.2.1\n      const newPartName = partName + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  /**\n   * Searches a tree for a node with a matching `id`\n   * @param {TreeNode<ITreeNodeObject>} nodeTree - A single TreeNode branch that will be searched\n   * @param {string} id - The id of the node to be found\n   * @returns {TreeNode<ITreeNodeObject>} The node with a matching `id`\n   */\n  static getTreeNodeObject(\n    nodeTree: TreeNode<ITreeNodeObject>,\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    if (nodeTree.node.id === id) {\n      return nodeTree;\n    }\n    for (let i = 0; i < nodeTree.children.length; i++) {\n      if (nodeTree.children[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree.children[i], id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Searches an array of tree nodes for a node with a matching `id`\n   * @param {TreeNode<ITreeNodeObject>} nodeTree - An array of TreeNode branches that will be searched\n   * @param {string} id - The id of the node to be found\n   * @returns {TreeNode<ITreeNodeObject>} The node with a matching `id`\n   */\n  static getTreeNodeObjectFromList(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObjectFromList(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","/* eslint-disable no-useless-escape */\nimport { getHostname, parse } from \"tldts\";\nimport { Merge } from \"type-fest\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\ndeclare global {\n  /* eslint-disable-next-line no-var */\n  var bitwardenContainerService: BitwardenContainerService;\n}\n\ninterface BitwardenContainerService {\n  getCryptoService: () => CryptoService;\n  getEncryptService: () => EncryptService;\n}\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: typeof global = null;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n  static readonly validHosts: string[] = [\"localhost\"];\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n\n    if (Utils.isNode) {\n      Utils.global = global;\n    } else if (Utils.isBrowser) {\n      Utils.global = window;\n    } else {\n      // If it's not browser or node then it must be a service worker\n      Utils.global = self;\n    }\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (str == null) {\n      return null;\n    }\n\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = Utils.global.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    if (str == null) {\n      return null;\n    }\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (buffer == null) {\n      return null;\n    }\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return Utils.global.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    if (Utils.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"about:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"file:\")) {\n      return null;\n    }\n\n    // Does uriString contain invalid characters\n    // TODO Needs to possibly be extended, although '!' is a reserved character\n    if (uriString.indexOf(\"!\") > 0) {\n      return null;\n    }\n\n    try {\n      const hostname = getHostname(uriString, { validHosts: this.validHosts });\n      if (hostname != null) {\n        return hostname;\n      }\n    } catch {\n      return null;\n    }\n    return null;\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (Utils.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"about:\")) {\n      return null;\n    }\n\n    try {\n      const parseResult = parse(uriString, { validHosts: this.validHosts });\n      if (parseResult != null && parseResult.hostname != null) {\n        if (parseResult.hostname === \"localhost\" || parseResult.isIp) {\n          return parseResult.hostname;\n        }\n\n        if (parseResult.domain != null) {\n          return parseResult.domain;\n        }\n        return null;\n      }\n    } catch {\n      return null;\n    }\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction<T>(\n    i18nService: I18nService,\n    prop: { [K in keyof T]: T[K] extends string ? K : never }[keyof T]\n  ): (a: T, b: T) => number {\n    return (a, b) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      // The `as unknown as string` here is unfortunate because typescript doesn't property understand that the return of T[prop] will be a string\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop] as unknown as string, b[prop] as unknown as string)\n        : (a[prop] as unknown as string).localeCompare(b[prop] as unknown as string);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static isPromise(obj: any): obj is Promise<unknown> {\n    return (\n      obj != undefined && typeof obj[\"then\"] === \"function\" && typeof obj[\"catch\"] === \"function\"\n    );\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (this.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  /**\n   * There are a few ways to calculate text color for contrast, this one seems to fit accessibility guidelines best.\n   * https://stackoverflow.com/a/3943023/6869691\n   *\n   * @param {string} bgColor\n   * @param {number} [threshold] see stackoverflow link above\n   * @param {boolean} [svgTextFill]\n   * Indicates if this method is performed on an SVG <text> 'fill' attribute (e.g. <text fill=\"black\"></text>).\n   * This check is necessary because the '!important' tag cannot be used in a 'fill' attribute.\n   */\n  static pickTextColorBasedOnBgColor(bgColor: string, threshold = 186, svgTextFill = false) {\n    const bgColorHexNums = bgColor.charAt(0) === \"#\" ? bgColor.substring(1, 7) : bgColor;\n    const r = parseInt(bgColorHexNums.substring(0, 2), 16); // hexToR\n    const g = parseInt(bgColorHexNums.substring(2, 4), 16); // hexToG\n    const b = parseInt(bgColorHexNums.substring(4, 6), 16); // hexToB\n    const blackColor = svgTextFill ? \"black\" : \"black !important\";\n    const whiteColor = svgTextFill ? \"white\" : \"white !important\";\n    return r * 0.299 + g * 0.587 + b * 0.114 > threshold ? blackColor : whiteColor;\n  }\n\n  static stringToColor(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = \"#\";\n    for (let i = 0; i < 3; i++) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return color;\n  }\n\n  /**\n   * @throws Will throw an error if the ContainerService has not been attached to the window object\n   */\n  static getContainerService(): BitwardenContainerService {\n    if (this.global.bitwardenContainerService == null) {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n    return this.global.bitwardenContainerService;\n  }\n\n  /**\n   * Converts map to a Record<string, V> with the same data. Inverse of recordToMap\n   * Useful in toJSON methods, since Maps are not serializable\n   * @param map\n   * @returns\n   */\n  static mapToRecord<K extends string | number, V>(map: Map<K, V>): Record<string, V> {\n    if (map == null) {\n      return null;\n    }\n    if (!(map instanceof Map)) {\n      return map;\n    }\n    return Object.fromEntries(map);\n  }\n\n  /**\n   * Converts record to a Map<string, V> with the same data. Inverse of mapToRecord\n   * Useful in fromJSON methods, since Maps are not serializable\n   *\n   * Warning: If the record has string keys that are numbers, they will be converted to numbers in the map\n   * @param record\n   * @returns\n   */\n  static recordToMap<K extends string | number, V>(record: Record<K, V>): Map<K, V> {\n    if (record == null) {\n      return null;\n    } else if (record instanceof Map) {\n      return record;\n    }\n\n    const entries = Object.entries(record);\n    if (entries.length === 0) {\n      return new Map();\n    }\n\n    if (isNaN(Number(entries[0][0]))) {\n      return new Map(entries) as Map<K, V>;\n    } else {\n      return new Map(entries.map((e) => [Number(e[0]), e[1]])) as Map<K, V>;\n    }\n  }\n\n  /** Applies Object.assign, but converts the type nicely using Type-Fest Merge<Destination, Source> */\n  static merge<Destination, Source>(\n    destination: Destination,\n    source: Source\n  ): Merge<Destination, Source> {\n    return Object.assign(destination, source) as unknown as Merge<Destination, Source>;\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  static delay(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (typeof window !== \"undefined\") {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nimport { LoginUriApi } from \"./login-uri.api\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `createNewCollections`, `editAnyCollection`, and\n   * `deleteAnyCollection`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAllCollections: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  /**\n   * @deprecated Sep 29 2021: This permission has been split out to `editAssignedCollections` and\n   * `deleteAssignedCollections`. It exists here for backwards compatibility with Server versions <= 1.43.0\n   */\n  manageAssignedCollections: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n  manageScim: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    // For backwards compatibility with Server <= 1.43.0\n    this.manageAllCollections = this.getResponseProperty(\"ManageAllCollections\");\n    this.manageAssignedCollections = this.getResponseProperty(\"ManageAssignedCollections\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n    this.manageScim = this.getResponseProperty(\"ManageScim\");\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import { AttachmentResponse } from \"../response/attachment.response\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../api/card.api\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CipherResponse } from \"../response/cipher.response\";\n\nimport { AttachmentData } from \"./attachment.data\";\nimport { CardData } from \"./card.data\";\nimport { FieldData } from \"./field.data\";\nimport { IdentityData } from \"./identity.data\";\nimport { LoginData } from \"./login.data\";\nimport { PasswordHistoryData } from \"./password-history.data\";\nimport { SecureNoteData } from \"./secure-note.data\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  creationDate: string;\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.creationDate = response.creationDate;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collection.response\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldApi } from \"../api/field.api\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { FolderResponse } from \"../response/folder.response\";\n\nexport class FolderData {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse) {\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","import { IdentityApi } from \"../api/identity.api\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../api/login-uri.api\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { LoginApi } from \"../api/login.api\";\n\nimport { LoginUriData } from \"./login-uri.data\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/password-history.response\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyResponse } from \"../response/policy.response\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProfileProviderResponse } from \"../response/profile-provider.response\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../api/secure-note.api\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { SendFileApi } from \"../api/send-file.api\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/send-text.api\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendResponse } from \"../response/send.response\";\n\nimport { SendFileData } from \"./send-file.data\";\nimport { SendTextData } from \"./send-text.data\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport {\n  ServerConfigResponse,\n  ThirdPartyServerConfigResponse,\n  EnvironmentServerConfigResponse,\n} from \"../response/server-config.response\";\n\nexport class ServerConfigData {\n  version: string;\n  gitHash: string;\n  server?: ThirdPartyServerConfigData;\n  environment?: EnvironmentServerConfigData;\n  utcDate: string;\n\n  constructor(serverConfigResponse: Partial<ServerConfigResponse>) {\n    this.version = serverConfigResponse?.version;\n    this.gitHash = serverConfigResponse?.gitHash;\n    this.server = serverConfigResponse?.server\n      ? new ThirdPartyServerConfigData(serverConfigResponse.server)\n      : null;\n    this.utcDate = new Date().toISOString();\n    this.environment = serverConfigResponse?.environment\n      ? new EnvironmentServerConfigData(serverConfigResponse.environment)\n      : null;\n  }\n\n  static fromJSON(obj: Jsonify<ServerConfigData>): ServerConfigData {\n    return Object.assign(new ServerConfigData({}), obj, {\n      server: obj?.server ? ThirdPartyServerConfigData.fromJSON(obj.server) : null,\n      environment: obj?.environment ? EnvironmentServerConfigData.fromJSON(obj.environment) : null,\n    });\n  }\n}\n\nexport class ThirdPartyServerConfigData {\n  name: string;\n  url: string;\n\n  constructor(response: Partial<ThirdPartyServerConfigResponse>) {\n    this.name = response.name;\n    this.url = response.url;\n  }\n\n  static fromJSON(obj: Jsonify<ThirdPartyServerConfigData>): ThirdPartyServerConfigData {\n    return Object.assign(new ThirdPartyServerConfigData({}), obj);\n  }\n}\n\nexport class EnvironmentServerConfigData {\n  vault: string;\n  api: string;\n  identity: string;\n  notifications: string;\n  sso: string;\n\n  constructor(response: Partial<EnvironmentServerConfigResponse>) {\n    this.vault = response.vault;\n    this.api = response.api;\n    this.identity = response.identity;\n    this.notifications = response.notifications;\n    this.sso = response.sso;\n  }\n\n  static fromJSON(obj: Jsonify<EnvironmentServerConfigData>): EnvironmentServerConfigData {\n    return Object.assign(new EnvironmentServerConfigData({}), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { AuthenticationStatus } from \"../../enums/authenticationStatus\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { CipherData } from \"../data/cipher.data\";\nimport { CollectionData } from \"../data/collection.data\";\nimport { EncryptedOrganizationKeyData } from \"../data/encrypted-organization-key.data\";\nimport { EventData } from \"../data/event.data\";\nimport { FolderData } from \"../data/folder.data\";\nimport { OrganizationData } from \"../data/organization.data\";\nimport { PolicyData } from \"../data/policy.data\";\nimport { ProviderData } from \"../data/provider.data\";\nimport { SendData } from \"../data/send.data\";\nimport { ServerConfigData } from \"../data/server-config.data\";\nimport { CipherView } from \"../view/cipher.view\";\nimport { CollectionView } from \"../view/collection.view\";\nimport { SendView } from \"../view/send.view\";\n\nimport { EncString } from \"./enc-string\";\nimport { EnvironmentUrls } from \"./environment-urls\";\nimport { GeneratedPasswordHistory } from \"./generated-password-history\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n\n  toJSON() {\n    return {\n      encrypted: this.encrypted,\n      decrypted:\n        this.decrypted instanceof ArrayBuffer\n          ? Utils.fromBufferToByteString(this.decrypted)\n          : this.decrypted,\n    };\n  }\n\n  static fromJSON<TEncrypted, TDecrypted>(\n    obj: { encrypted?: Jsonify<TEncrypted>; decrypted?: string | Jsonify<TDecrypted> },\n    decryptedFromJson?: (decObj: Jsonify<TDecrypted> | string) => TDecrypted,\n    encryptedFromJson?: (encObj: Jsonify<TEncrypted>) => TEncrypted\n  ) {\n    if (obj == null) {\n      return null;\n    }\n\n    const pair = new EncryptionPair<TEncrypted, TDecrypted>();\n    if (obj?.encrypted != null) {\n      pair.encrypted = encryptedFromJson\n        ? encryptedFromJson(obj.encrypted)\n        : (obj.encrypted as TEncrypted);\n    }\n    if (obj?.decrypted != null) {\n      pair.decrypted = decryptedFromJson\n        ? decryptedFromJson(obj.decrypted)\n        : (obj.decrypted as TDecrypted);\n    }\n    return pair;\n  }\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\n// This is a temporary structure to handle migrated `DataEncryptionPair` to\n//  avoid needing a data migration at this stage. It should be replaced with\n//  proper data migrations when `DataEncryptionPair` is deprecated.\nexport class TemporaryDataEncryption<TEncrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders? = new TemporaryDataEncryption<FolderData>();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Record<string, SymmetricCryptoKey>\n  > = new EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Record<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Record<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Record<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  publicKey?: ArrayBuffer;\n  apiKeyClientSecret?: string;\n\n  toJSON() {\n    return Utils.merge(this, {\n      publicKey: Utils.fromBufferToByteString(this.publicKey),\n    });\n  }\n\n  static fromJSON(obj: DeepJsonify<AccountKeys>): AccountKeys {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(\n      new AccountKeys(),\n      { cryptoMasterKey: SymmetricCryptoKey.fromJSON(obj?.cryptoMasterKey) },\n      {\n        cryptoSymmetricKey: EncryptionPair.fromJSON(\n          obj?.cryptoSymmetricKey,\n          SymmetricCryptoKey.fromJSON\n        ),\n      },\n      { organizationKeys: AccountKeys.initRecordEncryptionPairsFromJSON(obj?.organizationKeys) },\n      { providerKeys: AccountKeys.initRecordEncryptionPairsFromJSON(obj?.providerKeys) },\n      {\n        privateKey: EncryptionPair.fromJSON<string, ArrayBuffer>(\n          obj?.privateKey,\n          (decObj: string) => Utils.fromByteStringToArray(decObj).buffer\n        ),\n      },\n      {\n        publicKey: Utils.fromByteStringToArray(obj?.publicKey)?.buffer,\n      }\n    );\n  }\n\n  static initRecordEncryptionPairsFromJSON(obj: any) {\n    return EncryptionPair.fromJSON(obj, (decObj: any) => {\n      if (obj == null) {\n        return null;\n      }\n\n      const record: Record<string, SymmetricCryptoKey> = {};\n      for (const id in decObj) {\n        record[id] = SymmetricCryptoKey.fromJSON(decObj[id]);\n      }\n      return record;\n    });\n  }\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  name?: string;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  hasPremiumFromOrganization?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfType?: KdfType;\n\n  static fromJSON(obj: Jsonify<AccountProfile>): AccountProfile {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountProfile(), obj);\n  }\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  collapsedGroupings?: string[];\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  usernameGenerationOptions?: any;\n  generatorOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: AccountSettingsSettings; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n  serverConfig?: ServerConfigData;\n\n  static fromJSON(obj: Jsonify<AccountSettings>): AccountSettings {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountSettings(), obj, {\n      environmentUrls: EnvironmentUrls.fromJSON(obj?.environmentUrls),\n      pinProtected: EncryptionPair.fromJSON<string, EncString>(\n        obj?.pinProtected,\n        EncString.fromJSON\n      ),\n      serverConfig: ServerConfigData.fromJSON(obj?.serverConfig),\n    });\n  }\n}\n\nexport type AccountSettingsSettings = {\n  equivalentDomains?: string[][];\n};\n\nexport class AccountTokens {\n  accessToken?: string;\n  refreshToken?: string;\n  securityStamp?: string;\n\n  static fromJSON(obj: Jsonify<AccountTokens>): AccountTokens {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountTokens(), obj);\n  }\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n\n  static fromJSON(json: Jsonify<Account>): Account {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new Account({}), json, {\n      keys: AccountKeys.fromJSON(json?.keys),\n      profile: AccountProfile.fromJSON(json?.profile),\n      settings: AccountSettings.fromJSON(json?.settings),\n      tokens: AccountTokens.fromJSON(json?.tokens),\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Utils } from \"../../misc/utils\";\nimport { AttachmentData } from \"../data/attachment.data\";\nimport { AttachmentView } from \"../view/attachment.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string; // Readable size, ex: \"4.2 KB\" or \"1.43 GB\"\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      view.key = await this.decryptAttachmentKey(orgId, encKey);\n    }\n\n    return view;\n  }\n\n  private async decryptAttachmentKey(orgId: string, encKey?: SymmetricCryptoKey) {\n    try {\n      if (encKey == null) {\n        encKey = await this.getKeyForDecryption(orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      const decValue = await encryptService.decryptToBytes(this.key, encKey);\n      return new SymmetricCryptoKey(decValue);\n    } catch (e) {\n      // TODO: error?\n    }\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Attachment>>): Attachment {\n    if (obj == null) {\n      return null;\n    }\n\n    const key = EncString.fromJSON(obj.key);\n    const fileName = EncString.fromJSON(obj.fileName);\n\n    return Object.assign(new Attachment(), obj, {\n      key,\n      fileName,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardData } from \"../data/card.data\";\nimport { CardView } from \"../view/card.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Card>>): Card {\n    if (obj == null) {\n      return null;\n    }\n\n    const cardholderName = EncString.fromJSON(obj.cardholderName);\n    const brand = EncString.fromJSON(obj.brand);\n    const number = EncString.fromJSON(obj.number);\n    const expMonth = EncString.fromJSON(obj.expMonth);\n    const expYear = EncString.fromJSON(obj.expYear);\n    const code = EncString.fromJSON(obj.code);\n    return Object.assign(new Card(), obj, {\n      cardholderName,\n      brand,\n      number,\n      expMonth,\n      expYear,\n      code,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { InitializerKey } from \"../../services/cryptography/initializer-key\";\nimport { CipherData } from \"../data/cipher.data\";\nimport { LocalData } from \"../data/local.data\";\nimport { CipherView } from \"../view/cipher.view\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secure-note\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Cipher extends Domain implements Decryptable<CipherView> {\n  readonly initializerKey = InitializerKey.Cipher;\n\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: LocalData;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  creationDate: Date;\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, localData: LocalData = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      [\"id\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.creationDate = obj.creationDate != null ? new Date(obj.creationDate) : null;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.creationDate = this.creationDate != null ? this.creationDate.toISOString() : null;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n\n  static fromJSON(obj: Jsonify<Cipher>) {\n    if (obj == null) {\n      return null;\n    }\n\n    const domain = new Cipher();\n    const name = EncString.fromJSON(obj.name);\n    const notes = EncString.fromJSON(obj.notes);\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => Attachment.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => Field.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => Password.fromJSON(ph));\n\n    Object.assign(domain, obj, {\n      name,\n      notes,\n      revisionDate,\n      deletedDate,\n      attachments,\n      fields,\n      passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        domain.card = Card.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = Identity.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        domain.login = Login.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNote.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return domain;\n  }\n}\n","import { CollectionData } from \"../data/collection.data\";\nimport { CollectionView } from \"../view/collection.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Utils } from \"../../misc/utils\";\n\nconst ENC_TYPE_LENGTH = 1;\nconst IV_LENGTH = 16;\nconst MAC_LENGTH = 32;\nconst MIN_DATA_LENGTH = 1;\n\nexport class EncArrayBuffer implements IEncrypted {\n  readonly encryptionType: EncryptionType = null;\n  readonly dataBytes: ArrayBuffer = null;\n  readonly ivBytes: ArrayBuffer = null;\n  readonly macBytes: ArrayBuffer = null;\n\n  constructor(readonly buffer: ArrayBuffer) {\n    const encBytes = new Uint8Array(buffer);\n    const encType = encBytes[0];\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.macBytes = encBytes.slice(\n          ENC_TYPE_LENGTH + IV_LENGTH,\n          ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH\n        ).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH).buffer;\n        break;\n      }\n      case EncryptionType.AesCbc256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        break;\n      }\n      default:\n        this.throwDecryptionError();\n    }\n\n    this.encryptionType = encType;\n  }\n\n  private throwDecryptionError() {\n    throw new Error(\n      \"Error parsing encrypted ArrayBuffer: data is corrupted or has an invalid format.\"\n    );\n  }\n\n  static async fromResponse(response: {\n    arrayBuffer: () => Promise<ArrayBuffer>;\n  }): Promise<EncArrayBuffer> {\n    const buffer = await response.arrayBuffer();\n    if (buffer == null) {\n      throw new Error(\"Cannot create EncArrayBuffer from Response - Response is empty\");\n    }\n    return new EncArrayBuffer(buffer);\n  }\n\n  static fromB64(b64: string) {\n    const buffer = Utils.fromB64ToArray(b64).buffer;\n    return new EncArrayBuffer(buffer);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncString implements IEncrypted {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      this.initFromData(encryptedStringOrType as EncryptionType, data, iv, mac);\n    } else {\n      this.initFromEncryptedString(encryptedStringOrType as string);\n    }\n  }\n\n  get ivBytes(): ArrayBuffer {\n    return this.iv == null ? null : Utils.fromB64ToArray(this.iv).buffer;\n  }\n\n  get macBytes(): ArrayBuffer {\n    return this.mac == null ? null : Utils.fromB64ToArray(this.mac).buffer;\n  }\n\n  get dataBytes(): ArrayBuffer {\n    return this.data == null ? null : Utils.fromB64ToArray(this.data).buffer;\n  }\n\n  toJSON() {\n    return this.encryptedString;\n  }\n\n  static fromJSON(obj: Jsonify<EncString>): EncString {\n    if (obj == null) {\n      return null;\n    }\n\n    return new EncString(obj);\n  }\n\n  private initFromData(encType: EncryptionType, data: string, iv: string, mac: string) {\n    if (iv != null) {\n      this.encryptedString = encType + \".\" + iv + \"|\" + data;\n    } else {\n      this.encryptedString = encType + \".\" + data;\n    }\n\n    // mac\n    if (mac != null) {\n      this.encryptedString += \"|\" + mac;\n    }\n\n    this.encryptionType = encType;\n    this.data = data;\n    this.iv = iv;\n    this.mac = mac;\n  }\n\n  private initFromEncryptedString(encryptedString: string) {\n    this.encryptedString = encryptedString as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const { encType, encPieces } = this.parseEncryptedString(this.encryptedString);\n    this.encryptionType = encType;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  private parseEncryptedString(encryptedString: string): {\n    encType: EncryptionType;\n    encPieces: string[];\n  } {\n    const headerPieces = encryptedString.split(\".\");\n    let encType: EncryptionType;\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = encryptedString.split(\"|\");\n      encType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    return {\n      encType,\n      encPieces,\n    };\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    try {\n      if (key == null) {\n        key = await this.getKeyForDecryption(orgId);\n      }\n      if (key == null) {\n        throw new Error(\"No key to decrypt EncString with orgId \" + orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      this.decryptedValue = await encryptService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nexport class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n\n  static fromJSON(obj: Jsonify<EnvironmentUrls>): EnvironmentUrls {\n    return Object.assign(new EnvironmentUrls(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { FieldData } from \"../data/field.data\";\nimport { FieldView } from \"../view/field.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Field>>): Field {\n    if (obj == null) {\n      return null;\n    }\n\n    const name = EncString.fromJSON(obj.name);\n    const value = EncString.fromJSON(obj.value);\n\n    return Object.assign(new Field(), obj, {\n      name,\n      value,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FolderData } from \"../data/folder.data\";\nimport { FolderView } from \"../view/folder.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n\n  static fromJSON(obj: Jsonify<Folder>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new Folder(), obj, { name: EncString.fromJSON(obj.name), revisionDate });\n  }\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IdentityData } from \"../data/identity.data\";\nimport { IdentityView } from \"../view/identity.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n\n  static fromJSON(obj: Jsonify<Identity>): Identity {\n    if (obj == null) {\n      return null;\n    }\n\n    const title = EncString.fromJSON(obj.title);\n    const firstName = EncString.fromJSON(obj.firstName);\n    const middleName = EncString.fromJSON(obj.middleName);\n    const lastName = EncString.fromJSON(obj.lastName);\n    const address1 = EncString.fromJSON(obj.address1);\n    const address2 = EncString.fromJSON(obj.address2);\n    const address3 = EncString.fromJSON(obj.address3);\n    const city = EncString.fromJSON(obj.city);\n    const state = EncString.fromJSON(obj.state);\n    const postalCode = EncString.fromJSON(obj.postalCode);\n    const country = EncString.fromJSON(obj.country);\n    const company = EncString.fromJSON(obj.company);\n    const email = EncString.fromJSON(obj.email);\n    const phone = EncString.fromJSON(obj.phone);\n    const ssn = EncString.fromJSON(obj.ssn);\n    const username = EncString.fromJSON(obj.username);\n    const passportNumber = EncString.fromJSON(obj.passportNumber);\n    const licenseNumber = EncString.fromJSON(obj.licenseNumber);\n\n    return Object.assign(new Identity(), obj, {\n      title,\n      firstName,\n      middleName,\n      lastName,\n      address1,\n      address2,\n      address3,\n      city,\n      state,\n      postalCode,\n      country,\n      company,\n      email,\n      phone,\n      ssn,\n      username,\n      passportNumber,\n      licenseNumber,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUriData } from \"../data/login-uri.data\";\nimport { LoginUriView } from \"../view/login-uri.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n        match: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n\n  static fromJSON(obj: Jsonify<LoginUri>): LoginUri {\n    if (obj == null) {\n      return null;\n    }\n\n    const uri = EncString.fromJSON(obj.uri);\n    return Object.assign(new LoginUri(), obj, {\n      uri,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LoginData } from \"../data/login.data\";\nimport { LoginView } from \"../view/login.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { LoginUri } from \"./login-uri\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Login>>): Login {\n    if (obj == null) {\n      return null;\n    }\n\n    const username = EncString.fromJSON(obj.username);\n    const password = EncString.fromJSON(obj.password);\n    const totp = EncString.fromJSON(obj.totp);\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUri.fromJSON(uri));\n\n    return Object.assign(new Login(), obj, {\n      username,\n      password,\n      totp,\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import Domain from \"./domain-base\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity = 0;\n  minLength = 0;\n  requireUpper = false;\n  requireLower = false;\n  requireNumbers = false;\n  requireSpecial = false;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\nimport { OrganizationData } from \"../data/organization.data\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useCustomPermissions: boolean;\n  useResetPassword: boolean;\n  useSecretsManager: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useScim = obj.useScim;\n    this.useCustomPermissions = obj.useCustomPermissions;\n    this.useResetPassword = obj.useResetPassword;\n    this.useSecretsManager = obj.useSecretsManager;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = obj.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = obj.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = obj.familySponsorshipToDelete;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return (this.isAdmin || this.permissions.accessEventLogs) && this.useEvents;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.createNewCollections ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canEditAnyCollection() {\n    return (\n      this.isAdmin || (this.permissions.editAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canUseAdminCollections() {\n    return this.canEditAnyCollection;\n  }\n\n  get canDeleteAnyCollection() {\n    return (\n      this.isAdmin ||\n      (this.permissions.deleteAnyCollection ?? this.permissions.manageAllCollections)\n    );\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.editAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canDeleteAssignedCollections() {\n    return (\n      this.isManager ||\n      (this.permissions.deleteAssignedCollections ?? this.permissions.manageAssignedCollections)\n    );\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return (this.isAdmin || this.permissions.manageGroups) && this.useGroups;\n  }\n\n  get canManageSso() {\n    return (this.isAdmin || this.permissions.manageSso) && this.useSso;\n  }\n\n  get canManageScim() {\n    return (this.isAdmin || this.permissions.manageScim) && this.useScim;\n  }\n\n  get canManagePolicies() {\n    return (this.isAdmin || this.permissions.managePolicies) && this.usePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n\n  get canManageBilling() {\n    return this.isOwner && (this.isProviderUser || !this.hasProvider);\n  }\n\n  get hasProvider() {\n    return this.providerId != null || this.providerName != null;\n  }\n\n  get canAccessSecretsManager() {\n    return this.useSecretsManager;\n  }\n\n  static fromJSON(json: Jsonify<Organization>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new Organization(), json, {\n      familySponsorshipLastSyncDate: new Date(json.familySponsorshipLastSyncDate),\n      familySponsorshipValidUntil: new Date(json.familySponsorshipValidUntil),\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { PasswordHistoryData } from \"../data/password-history.data\";\nimport { PasswordHistoryView } from \"../view/password-history.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(this, obj, {\n      password: null,\n    });\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Password>>): Password {\n    if (obj == null) {\n      return null;\n    }\n\n    const password = EncString.fromJSON(obj.password);\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new Password(), obj, {\n      password,\n      lastUsedDate,\n    });\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../data/policy.data\";\n\nimport Domain from \"./domain-base\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNoteData } from \"../data/secure-note.data\";\nimport { SecureNoteView } from \"../view/secure-note.view\";\n\nimport Domain from \"./domain-base\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n\n  static fromJSON(obj: Jsonify<SecureNote>): SecureNote {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new SecureNote(), obj);\n  }\n}\n","import { SendFileData } from \"../data/send-file.data\";\nimport { SendFileView } from \"../view/send-file.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import { SendTextData } from \"../data/send-text.data\";\nimport { SendTextView } from \"../view/send-text.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n\n  toJSON() {\n    // The whole object is constructed from the initial key, so just store the B64 key\n    return { keyB64: this.keyB64 };\n  }\n\n  static fromJSON(obj: Jsonify<SymmetricCryptoKey>): SymmetricCryptoKey {\n    if (obj == null) {\n      return null;\n    }\n\n    const arrayBuffer = Utils.fromB64ToArray(obj.keyB64).buffer;\n    return new SymmetricCryptoKey(arrayBuffer);\n  }\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  node: T;\n  parent: TreeNode<T>;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, parent: TreeNode<T>, name?: string, id?: string) {\n    this.parent = parent;\n    this.node = node;\n    if (name) {\n      this.node.name = name;\n    }\n    if (id) {\n      this.node.id = id;\n    }\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n  zoomFactor?: number;\n}\n","import { Card as CardDomain } from \"../domain/card\";\nimport { EncString } from \"../domain/enc-string\";\nimport { CardView } from \"../view/card.view\";\n\nexport class CardExport {\n  static template(): CardExport {\n    const req = new CardExport();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: CardExport, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: CardExport, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { EncString } from \"../domain/enc-string\";\nimport { Field as FieldDomain } from \"../domain/field\";\nimport { FieldView } from \"../view/field.view\";\n\nexport class FieldExport {\n  static template(): FieldExport {\n    const req = new FieldExport();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: FieldExport, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: FieldExport, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { EncString } from \"../domain/enc-string\";\nimport { Identity as IdentityDomain } from \"../domain/identity\";\nimport { IdentityView } from \"../view/identity.view\";\n\nexport class IdentityExport {\n  static template(): IdentityExport {\n    const req = new IdentityExport();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: IdentityExport, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: IdentityExport, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { EncString } from \"../domain/enc-string\";\nimport { LoginUri as LoginUriDomain } from \"../domain/login-uri\";\nimport { LoginUriView } from \"../view/login-uri.view\";\n\nexport class LoginUriExport {\n  static template(): LoginUriExport {\n    const req = new LoginUriExport();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUriExport, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUriExport, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { EncString } from \"../domain/enc-string\";\nimport { Login as LoginDomain } from \"../domain/login\";\nimport { LoginView } from \"../view/login.view\";\n\nimport { LoginUriExport } from \"./login-uri.export\";\n\nexport class LoginExport {\n  static template(): LoginExport {\n    const req = new LoginExport();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: LoginExport, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUriExport.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: LoginExport, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUriExport.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUriExport[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote as SecureNoteDomain } from \"../domain/secure-note\";\nimport { SecureNoteView } from \"../view/secure-note.view\";\n\nexport class SecureNoteExport {\n  static template(): SecureNoteExport {\n    const req = new SecureNoteExport();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNoteExport, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNoteExport, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { EncString } from \"../domain/enc-string\";\nimport { CipherView } from \"../view/cipher.view\";\n\nimport { CardExport } from \"./card.export\";\nimport { FieldExport } from \"./field.export\";\nimport { IdentityExport } from \"./identity.export\";\nimport { LoginExport } from \"./login.export\";\nimport { SecureNoteExport } from \"./secure-note.export\";\n\nexport class CipherExport {\n  static template(): CipherExport {\n    const req = new CipherExport();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: CipherExport, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => FieldExport.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = LoginExport.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteExport.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = CardExport.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityExport.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: CipherExport, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => FieldExport.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = LoginExport.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNoteExport.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = CardExport.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = IdentityExport.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: FieldExport[];\n  login: LoginExport;\n  secureNote: SecureNoteExport;\n  card: CardExport;\n  identity: IdentityExport;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      } else {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new LoginExport(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteExport(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardExport(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityExport(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher as CipherDomain } from \"../domain/cipher\";\nimport { CipherView } from \"../view/cipher.view\";\n\nimport { CipherExport } from \"./cipher.export\";\n\nexport class CipherWithIdExport extends CipherExport {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/enc-string\";\nimport { CollectionView } from \"../view/collection.view\";\n\nexport class CollectionExport {\n  static template(): CollectionExport {\n    const req = new CollectionExport();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: CollectionExport, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: CollectionExport, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { CollectionView } from \"../view/collection.view\";\n\nimport { CollectionExport } from \"./collection.export\";\n\nexport class CollectionWithIdExport extends CollectionExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { EncString } from \"../domain/enc-string\";\nimport { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folder.view\";\n\nexport class FolderExport {\n  static template(): FolderExport {\n    const req = new FolderExport();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: FolderExport, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: FolderExport, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder as FolderDomain } from \"../domain/folder\";\nimport { FolderView } from \"../view/folder.view\";\n\nimport { FolderExport } from \"./folder.export\";\n\nexport class FolderWithIdExport extends FolderExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipher.request\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipher.request\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { CardApi } from \"../api/card.api\";\nimport { FieldApi } from \"../api/field.api\";\nimport { IdentityApi } from \"../api/identity.api\";\nimport { LoginUriApi } from \"../api/login-uri.api\";\nimport { LoginApi } from \"../api/login.api\";\nimport { SecureNoteApi } from \"../api/secure-note.api\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentRequest } from \"./attachment.request\";\nimport { PasswordHistoryRequest } from \"./password-history.request\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { Collection } from \"../domain/collection\";\n\nimport { SelectionReadOnlyRequest } from \"./selection-read-only.request\";\n\nexport class CollectionRequest {\n  name: string;\n  externalId: string;\n  groups: SelectionReadOnlyRequest[] = [];\n  users: SelectionReadOnlyRequest[] = [];\n\n  constructor(collection?: Collection) {\n    if (collection == null) {\n      return;\n    }\n    this.name = collection.name ? collection.name.encryptedString : null;\n    this.externalId = collection.externalId;\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","import { TwoFactorProviderType } from \"../../../enums/twoFactorProviderType\";\n\nexport class TokenTwoFactorRequest {\n  constructor(\n    public provider: TwoFactorProviderType = null,\n    public token: string = null,\n    public remember: boolean = false\n  ) {}\n}\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","import { OrganizationApiKeyType } from \"../../enums/organizationApiKeyType\";\n\nimport { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class OrganizationApiKeyRequest extends SecretVerificationRequest {\n  type: OrganizationApiKeyType = OrganizationApiKeyType.Default;\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\n\nimport { BillingSyncConfigRequest } from \"./billing-sync-config.request\";\nimport { ScimConfigRequest } from \"./scim-config.request\";\n\n/**API request config types for OrganizationConnectionRequest */\nexport type OrganizationConnectionRequestConfigs = BillingSyncConfigRequest | ScimConfigRequest;\n\nexport class OrganizationConnectionRequest {\n  constructor(\n    public organizationId: string,\n    public type: OrganizationConnectionType,\n    public enabled: boolean,\n    public config: OrganizationConnectionRequestConfigs\n  ) {}\n}\n","import { KeysRequest } from \"./keys.request\";\n\nexport class OrganizationKeysRequest extends KeysRequest {\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    super(publicKey, encryptedPrivateKey);\n  }\n}\n","import { TaxInfoUpdateRequest } from \"./tax-info-update.request\";\n\nexport class OrganizationTaxInfoUpdateRequest extends TaxInfoUpdateRequest {\n  taxId: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n  authRequestAccessCode: string;\n}\n","export class SelectionReadOnlyRequest {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(id: string, readOnly: boolean, hidePasswords: boolean) {\n    this.id = id;\n    this.readOnly = readOnly;\n    this.hidePasswords = hidePasswords;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/send-file.api\";\nimport { SendTextApi } from \"../api/send-text.api\";\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","export class TaxInfoUpdateRequest {\n  country: string;\n  postalCode: string;\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n  deviceIdentifier: string;\n  authRequestId: string;\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CardApi } from \"../api/card.api\";\nimport { FieldApi } from \"../api/field.api\";\nimport { IdentityApi } from \"../api/identity.api\";\nimport { LoginApi } from \"../api/login.api\";\nimport { SecureNoteApi } from \"../api/secure-note.api\";\n\nimport { AttachmentResponse } from \"./attachment.response\";\nimport { BaseResponse } from \"./base.response\";\nimport { PasswordHistoryResponse } from \"./password-history.response\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  creationDate: string;\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { EmergencyAccessStatusType } from \"../../enums/emergencyAccessStatusType\";\nimport { EmergencyAccessType } from \"../../enums/emergencyAccessType\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { CipherResponse } from \"./cipher.response\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (status === 429) {\n      this.message = \"Rate limit exceeded. Try again later.\";\n    } else if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Attachment } from \"../domain/attachment\";\nimport { SymmetricCryptoKey } from \"../domain/symmetric-crypto-key\";\n\nimport { View } from \"./view\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<AttachmentView>>): AttachmentView {\n    const key = obj.key == null ? null : SymmetricCryptoKey.fromJSON(obj.key);\n    return Object.assign(new AttachmentView(), obj, { key: key });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CardView>>): CardView {\n    return Object.assign(new CardView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CipherRepromptType } from \"../../enums/cipherRepromptType\";\nimport { CipherType } from \"../../enums/cipherType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { InitializerKey } from \"../../services/cryptography/initializer-key\";\nimport { LocalData } from \"../data/local.data\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachment.view\";\nimport { CardView } from \"./card.view\";\nimport { FieldView } from \"./field.view\";\nimport { IdentityView } from \"./identity.view\";\nimport { LoginView } from \"./login.view\";\nimport { PasswordHistoryView } from \"./password-history.view\";\nimport { SecureNoteView } from \"./secure-note.view\";\nimport { View } from \"./view\";\n\nexport class CipherView implements View, InitializerMetadata {\n  readonly initializerKey = InitializerKey.CipherView;\n\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: LocalData;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  creationDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.creationDate = c.creationDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CipherView>>): CipherView {\n    const view = new CipherView();\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => AttachmentView.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => FieldView.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => PasswordHistoryView.fromJSON(ph));\n\n    Object.assign(view, obj, {\n      revisionDate: revisionDate,\n      deletedDate: deletedDate,\n      attachments: attachments,\n      fields: fields,\n      passwordHistory: passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        view.card = CardView.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityView.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        view.login = LoginView.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteView.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return view;\n  }\n}\n","import { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/tree-node\";\nimport { CollectionAccessDetailsResponse } from \"../response/collection.response\";\n\nimport { View } from \"./view\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionAccessDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Field } from \"../domain/field\";\n\nimport { View } from \"./view\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<FieldView>>): FieldView {\n    return Object.assign(new FieldView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Folder } from \"../domain/folder\";\nimport { ITreeNodeObject } from \"../domain/tree-node\";\n\nimport { View } from \"./view\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n\n  static fromJSON(obj: Jsonify<FolderView>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new FolderView(), obj, { revisionDate });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IdentityLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<IdentityView>>): IdentityView {\n    return Object.assign(new IdentityView(), obj);\n  }\n}\n","import { LinkedMetadata } from \"../../misc/linkedFieldOption.decorator\";\n\nimport { View } from \"./view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { LoginUri } from \"../domain/login-uri\";\n\nimport { View } from \"./view\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && !Utils.isNullOrWhitespace(Utils.getDomain(this.uri))))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && !Utils.isNullOrWhitespace(Utils.getDomain(this.uri))\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginUriView>>): LoginUriView {\n    return Object.assign(new LoginUriView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LoginLinkedId as LinkedId } from \"../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./item.view\";\nimport { LoginUriView } from \"./login-uri.view\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginView>>): LoginView {\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUriView.fromJSON(uri));\n\n    return Object.assign(new LoginView(), obj, {\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Password } from \"../domain/password\";\n\nimport { View } from \"./view\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<PasswordHistoryView>>): PasswordHistoryView {\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new PasswordHistoryView(), obj, {\n      lastUsedDate: lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secure-note\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<SecureNoteView>>): SecureNoteView {\n    return Object.assign(new SecureNoteView(), obj);\n  }\n}\n","import { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { SendFile } from \"../domain/send-file\";\n\nimport { View } from \"./view\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n\n  static fromJSON(json: DeepJsonify<SendFileView>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new SendFileView(), json);\n  }\n}\n","import { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { SendText } from \"../domain/send-text\";\n\nimport { View } from \"./view\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n\n  static fromJSON(json: DeepJsonify<SendTextView>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new SendTextView(), json);\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetric-crypto-key\";\n\nimport { SendFileView } from \"./send-file.view\";\nimport { SendTextView } from \"./send-text.view\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled = false;\n  hideEmail = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n\n  toJSON() {\n    return Utils.merge(this, {\n      key: Utils.fromBufferToB64(this.key),\n    });\n  }\n\n  static fromJSON(json: DeepJsonify<SendView>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new SendView(), json, {\n      key: Utils.fromB64ToArray(json.key)?.buffer,\n      cryptoKey: SymmetricCryptoKey.fromJSON(json.cryptoKey),\n      text: SendTextView.fromJSON(json.text),\n      file: SendFileView.fromJSON(json.file),\n      revisionDate: json.revisionDate == null ? null : new Date(json.revisionDate),\n      deletionDate: json.deletionDate == null ? null : new Date(json.deletionDate),\n      expirationDate: json.expirationDate == null ? null : new Date(json.expirationDate),\n    });\n  }\n}\n","export class View {}\n","import { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","export enum InitializerKey {\n  Cipher = 0,\n  CipherView = 1,\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Account } from \"./account\";\nimport { GlobalState } from \"./global-state\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n\n  // TODO, make Jsonify<State,TGlobalState,TAccount> work. It currently doesn't because Globals doesn't implement Jsonify.\n  static fromJSON<TGlobalState extends GlobalState, TAccount extends Account>(\n    obj: any,\n    accountDeserializer: (json: Jsonify<TAccount>) => TAccount\n  ): State<TGlobalState, TAccount> {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new State(null), obj, {\n      accounts: State.buildAccountMapFromJSON(obj?.accounts, accountDeserializer),\n    });\n  }\n\n  private static buildAccountMapFromJSON<TAccount extends Account>(\n    jsonAccounts: { [userId: string]: Jsonify<TAccount> },\n    accountDeserializer: (json: Jsonify<TAccount>) => TAccount\n  ) {\n    if (!jsonAccounts) {\n      return {};\n    }\n    const accounts: { [userId: string]: TAccount } = {};\n    for (const userId in jsonAccounts) {\n      accounts[userId] = accountDeserializer(jsonAccounts[userId]);\n    }\n    return accounts;\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\nimport { Jsonify } from \"type-fest\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport {\n  MemoryStorageServiceInterface,\n  AbstractStorageService,\n} from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { Utils } from \"../misc/utils\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encrypted-organization-key.data\";\nimport { EventData } from \"../models/data/event.data\";\nimport { FolderData } from \"../models/data/folder.data\";\nimport { LocalData } from \"../models/data/local.data\";\nimport { OrganizationData } from \"../models/data/organization.data\";\nimport { PolicyData } from \"../models/data/policy.data\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { SendData } from \"../models/data/send.data\";\nimport { ServerConfigData } from \"../models/data/server-config.data\";\nimport {\n  Account,\n  AccountData,\n  AccountSettings,\n  AccountSettingsSettings,\n} from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { EnvironmentUrls } from \"../models/domain/environment-urls\";\nimport { GeneratedPasswordHistory } from \"../models/domain/generated-password-history\";\nimport { GlobalState } from \"../models/domain/global-state\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storage-options\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { WindowState } from \"../models/domain/window-state\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { CollectionView } from \"../models/view/collection.view\";\nimport { SendView } from \"../models/view/send.view\";\n\nconst keys = {\n  state: \"state\",\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nconst DDG_SHARED_KEY = \"DuckDuckGoSharedKey\";\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  protected accountsSubject = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  accounts$ = this.accountsSubject.asObservable();\n\n  protected activeAccountSubject = new BehaviorSubject<string | null>(null);\n  activeAccount$ = this.activeAccountSubject.asObservable();\n\n  protected activeAccountUnlockedSubject = new BehaviorSubject<boolean>(false);\n  activeAccountUnlocked$ = this.activeAccountUnlockedSubject.asObservable();\n\n  private hasBeenInited = false;\n  private isRecoveredSession = false;\n\n  protected accountDiskCache = new BehaviorSubject<Record<string, TAccount>>({});\n\n  // default account serializer, must be overridden by child class\n  protected accountDeserializer = Account.fromJSON as (json: Jsonify<TAccount>) => TAccount;\n\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected memoryStorageService: AbstractStorageService & MemoryStorageServiceInterface,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>,\n    protected useAccountCache: boolean = true\n  ) {\n    // If the account gets changed, verify the new account is unlocked\n    this.activeAccountSubject\n      .pipe(\n        concatMap(async (userId) => {\n          if (userId == null && this.activeAccountUnlockedSubject.getValue() == false) {\n            return;\n          } else if (userId == null) {\n            this.activeAccountUnlockedSubject.next(false);\n          }\n\n          // FIXME: This should be refactored into AuthService or a similar service,\n          //  as checking for the existance of the crypto key is a low level\n          //  implementation detail.\n          this.activeAccountUnlockedSubject.next((await this.getCryptoMasterKey()) != null);\n        })\n      )\n      .subscribe();\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.state().then(async (state) => {\n      if (state == null) {\n        await this.setState(new State<TGlobalState, TAccount>(this.createGlobals()));\n      } else {\n        this.isRecoveredSession = true;\n      }\n    });\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    if (this.isRecoveredSession) {\n      return;\n    }\n\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts =\n        (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n      for (const i in state.authenticatedAccounts) {\n        if (i != null) {\n          await this.syncAccountFromDisk(state.authenticatedAccounts[i]);\n        }\n      }\n      const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n      if (storedActiveUser != null) {\n        state.activeUserId = storedActiveUser;\n      }\n      await this.pushAccounts();\n      this.activeAccountSubject.next(state.activeUserId);\n\n      return state;\n    });\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    await this.updateState(async (state) => {\n      if (state.accounts == null) {\n        state.accounts = {};\n      }\n      state.accounts[userId] = this.createAccount();\n      const diskAccount = await this.getAccountFromDisk({ userId: userId });\n      state.accounts[userId].profile = diskAccount.profile;\n      return state;\n    });\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts.push(account.profile.userId);\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n      state.accounts[account.profile.userId] = account;\n      return state;\n    });\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccountSubject.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    await this.updateState(async (state) => {\n      state.activeUserId = userId;\n      await this.storageService.save(keys.activeUserId, userId);\n      this.activeAccountSubject.next(state.activeUserId);\n      return state;\n    });\n\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === (await this.state())?.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? false\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? true\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    return (\n      (await this.getHasPremiumPersonally(options)) ||\n      (await this.getHasPremiumFromOrganization(options))\n    );\n  }\n\n  async getHasPremiumPersonally(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.profile?.hasPremiumPersonally;\n  }\n\n  async setHasPremiumPersonally(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumPersonally = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getHasPremiumFromOrganization(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    if (account.profile?.hasPremiumFromOrganization) {\n      return true;\n    }\n\n    // TODO: older server versions won't send the hasPremiumFromOrganization flag, so we're keeping the old logic\n    // for backwards compatibility. It can be removed after everyone has upgraded.\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async setHasPremiumFromOrganization(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumFromOrganization = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<string[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: string[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.collapsedGroupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n\n    if (options.userId == this.activeAccountSubject.getValue()) {\n      const nextValue = value != null;\n\n      // Avoid emitting if we are already unlocked\n      if (this.activeAccountUnlockedSubject.getValue() != nextValue) {\n        this.activeAccountUnlockedSubject.next(nextValue);\n      }\n    }\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.autoKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.autoKey, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.masterKey, value, options);\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.biometricKey, value, options);\n  }\n\n  @withPrototypeForArrayMembers(CipherView, CipherView.fromJSON)\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(CollectionView)\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return Utils.recordToMap(account?.keys?.organizationKeys?.decrypted);\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.organizationKeys.decrypted = Utils.mapToRecord(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(Policy)\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.privateKey.decrypted;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.privateKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return Utils.recordToMap(account?.keys?.providerKeys?.decrypted);\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.providerKeys.decrypted = Utils.mapToRecord(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(SendView)\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDuckDuckGoSharedKey(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(DDG_SHARED_KEY, options);\n  }\n\n  async setDuckDuckGoSharedKey(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    value == null\n      ? await this.secureStorageService.remove(DDG_SHARED_KEY, options)\n      : await this.secureStorageService.save(DDG_SHARED_KEY, value, options);\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.email = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableDuckDuckGoBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableDuckDuckGoBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableDuckDuckGoBrowserIntegration(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableDuckDuckGoBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CipherData)\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CollectionData)\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(FolderData)\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<{ [orgId: string]: EncryptedOrganizationKeyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(PolicyData)\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(SendData)\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if ((await this.state())?.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(EventData)\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfIterations(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n  }\n\n  async setKdfIterations(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<{ [cipherId: string]: LocalData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n\n  async setLocalData(\n    value: { [cipherId: string]: LocalData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUsernameGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.usernameGenerationOptions;\n  }\n\n  async setUsernameGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.usernameGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getGeneratorOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.generatorOptions;\n  }\n\n  async setGeneratorOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.generatorOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(ProviderData)\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    const keys = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys;\n    return keys?.publicKey;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.publicKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getSettings(options?: StorageOptions): Promise<AccountSettingsSettings> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: AccountSettingsSettings, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async setServerConfig(value: ServerConfigData, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.serverConfig = value;\n    return await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getServerConfig(options: StorageOptions): Promise<ServerConfigData> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.serverConfig;\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = await this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected async getGlobalsFromMemory(): Promise<TGlobalState> {\n    return (await this.state()).globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected async saveGlobalsToMemory(globals: TGlobalState): Promise<void> {\n    await this.updateState(async (state) => {\n      state.globals = globals;\n      return state;\n    });\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = await this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async getAccountFromMemory(options: StorageOptions): Promise<TAccount> {\n    return await this.state().then(async (state) => {\n      if (state.accounts == null) {\n        return null;\n      }\n      return state.accounts[await this.getUserIdFromMemory(options)];\n    });\n  }\n\n  protected async getUserIdFromMemory(options: StorageOptions): Promise<string> {\n    return await this.state().then((state) => {\n      return options?.userId != null\n        ? state.accounts[options.userId]?.profile?.userId\n        : state.activeUserId;\n    });\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && (await this.state())?.activeUserId == null) {\n      return null;\n    }\n\n    if (this.useAccountCache) {\n      const cachedAccount = this.accountDiskCache.value[options.userId];\n      if (cachedAccount != null) {\n        return cachedAccount;\n      }\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    this.setDiskCache(options.userId, account);\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n\n    this.deleteDiskCache(options.userId);\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      await this.updateState((state) => {\n        return new Promise((resolve) => {\n          state.accounts[account.profile.userId] = account;\n          resolve(state);\n        });\n      });\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<AccountSettings>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    await this.state().then((state) => {\n      if (state.accounts == null || Object.keys(state.accounts).length < 1) {\n        this.accountsSubject.next({});\n        return;\n      }\n\n      this.accountsSubject.next(state.accounts);\n    });\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected async defaultInMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Memory,\n      userId: (await this.state()).activeUserId,\n    };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: (await this.state())?.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected async removeAccountFromMemory(userId: string = null): Promise<void> {\n    await this.updateState(async (state) => {\n      userId = userId ?? state.activeUserId;\n      delete state.accounts[userId];\n\n      this.deleteDiskCache(userId);\n\n      return state;\n    });\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in (await this.state())?.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        await this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected async clearDecryptedDataForActiveUser(): Promise<void> {\n    await this.updateState(async (state) => {\n      const userId = state?.activeUserId;\n      if (userId != null && state?.accounts[userId]?.data != null) {\n        state.accounts[userId].data = new AccountData();\n      }\n\n      return state;\n    });\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string): Promise<void> {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts = state.authenticatedAccounts.filter((id) => id !== userId);\n\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n\n      return state;\n    });\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    const accounts = (await this.state())?.accounts;\n    if (accounts == null || Object.keys(accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? await this.defaultInMemoryOptions()\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n\n  private async saveSecureStorageKey(key: string, value: string, options?: StorageOptions) {\n    return value == null\n      ? await this.secureStorageService.remove(`${options.userId}${key}`, options)\n      : await this.secureStorageService.save(`${options.userId}${key}`, value, options);\n  }\n\n  protected async state(): Promise<State<TGlobalState, TAccount>> {\n    const state = await this.memoryStorageService.get<State<TGlobalState, TAccount>>(keys.state, {\n      deserializer: (s) => State.fromJSON(s, this.accountDeserializer),\n    });\n    return state;\n  }\n\n  private async setState(state: State<TGlobalState, TAccount>): Promise<void> {\n    await this.memoryStorageService.save(keys.state, state);\n  }\n\n  protected async updateState(\n    stateUpdater: (state: State<TGlobalState, TAccount>) => Promise<State<TGlobalState, TAccount>>\n  ) {\n    await this.state().then(async (state) => {\n      const updatedState = await stateUpdater(state);\n      if (updatedState == null) {\n        throw new Error(\"Attempted to update state to null value\");\n      }\n\n      await this.setState(updatedState);\n    });\n  }\n\n  private setDiskCache(key: string, value: TAccount, options?: StorageOptions) {\n    if (this.useAccountCache) {\n      this.accountDiskCache.value[key] = value;\n      this.accountDiskCache.next(this.accountDiskCache.value);\n    }\n  }\n\n  private deleteDiskCache(key: string) {\n    if (this.useAccountCache) {\n      delete this.accountDiskCache.value[key];\n      this.accountDiskCache.next(this.accountDiskCache.value);\n    }\n  }\n}\n\nfunction withPrototypeForArrayMembers<T>(\n  memberConstructor: new (...args: any[]) => T,\n  memberConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T[]> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<any[]> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else if (!(result instanceof Array)) {\n            throw new Error(\n              `Attempted to retrieve non array type from state as an array for method ${String(\n                propertyKey\n              )}`\n            );\n          } else {\n            return result.map((r) => {\n              return r == null ||\n                r.constructor.name === memberConstructor.prototype.constructor.name\n                ? r\n                : memberConverter(\n                    Object.create(memberConstructor.prototype, Object.getOwnPropertyDescriptors(r))\n                  );\n            });\n          }\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForObjectValues<T>(\n  valuesConstructor: new (...args: any[]) => T,\n  valuesConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<{ [key: string]: T }> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<{ [key: string]: T }> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else {\n            for (const [key, val] of Object.entries(result)) {\n              result[key] =\n                val == null || val.constructor.name === valuesConstructor.prototype.constructor.name\n                  ? valuesConverter(val)\n                  : valuesConverter(\n                      Object.create(\n                        valuesConstructor.prototype,\n                        Object.getOwnPropertyDescriptors(val)\n                      )\n                    );\n            }\n\n            return result as { [key: string]: T };\n          }\n        });\n      },\n    };\n  };\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport {\n  TwoFactorProviderDetails,\n  TwoFactorService as TwoFactorServiceAbstraction,\n} from \"../abstractions/twoFactor.service\";\nimport { TwoFactorProviderType } from \"../enums/twoFactorProviderType\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\n\nexport const TwoFactorProviders: Partial<Record<TwoFactorProviderType, TwoFactorProviderDetails>> =\n  {\n    [TwoFactorProviderType.Authenticator]: {\n      type: TwoFactorProviderType.Authenticator,\n      name: null as string,\n      description: null as string,\n      priority: 1,\n      sort: 1,\n      premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n      type: TwoFactorProviderType.Yubikey,\n      name: null as string,\n      description: null as string,\n      priority: 3,\n      sort: 2,\n      premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n      type: TwoFactorProviderType.Duo,\n      name: \"Duo\",\n      description: null as string,\n      priority: 2,\n      sort: 3,\n      premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n      type: TwoFactorProviderType.OrganizationDuo,\n      name: \"Duo (Organization)\",\n      description: null as string,\n      priority: 10,\n      sort: 4,\n      premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n      type: TwoFactorProviderType.Email,\n      name: null as string,\n      description: null as string,\n      priority: 0,\n      sort: 6,\n      premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n      type: TwoFactorProviderType.WebAuthn,\n      name: null as string,\n      description: null as string,\n      priority: 4,\n      sort: 5,\n      premium: true,\n    },\n  };\n\nexport class TwoFactorService implements TwoFactorServiceAbstraction {\n  private twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  private selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  getSupportedProviders(win: Window): TwoFactorProviderDetails[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  setSelectedProvider(type: TwoFactorProviderType) {\n    this.selectedTwoFactorProviderType = type;\n  }\n\n  clearSelectedProvider() {\n    this.selectedTwoFactorProviderType = null;\n  }\n\n  setProviders(response: IdentityTwoFactorResponse) {\n    this.twoFactorProvidersData = response.twoFactorProviders2;\n  }\n\n  clearProviders() {\n    this.twoFactorProvidersData = null;\n  }\n\n  getProviders() {\n    return this.twoFactorProvidersData;\n  }\n}\n","import { Directive, HostListener, Input, OnDestroy, Optional } from \"@angular/core\";\nimport { BehaviorSubject, finalize, Subject, takeUntil, tap } from \"rxjs\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\n\nimport { ButtonLikeAbstraction } from \"../shared/button-like.abstraction\";\nimport { FunctionReturningAwaitable, functionToObservable } from \"../utils/function-to-observable\";\n\n/**\n * Allow a single button to perform async actions on click and reflect the progress in the UI by automatically\n * activating the loading effect while the action is processed.\n */\n@Directive({\n  selector: \"[bitAction]\",\n})\nexport class BitActionDirective implements OnDestroy {\n  private destroy$ = new Subject<void>();\n  private _loading$ = new BehaviorSubject<boolean>(false);\n\n  disabled = false;\n\n  @Input(\"bitAction\") protected handler: FunctionReturningAwaitable;\n\n  readonly loading$ = this._loading$.asObservable();\n\n  constructor(\n    private buttonComponent: ButtonLikeAbstraction,\n    @Optional() private validationService?: ValidationService,\n    @Optional() private logService?: LogService\n  ) {}\n\n  get loading() {\n    return this._loading$.value;\n  }\n\n  set loading(value: boolean) {\n    this._loading$.next(value);\n    this.buttonComponent.loading = value;\n  }\n\n  @HostListener(\"click\")\n  protected async onClick() {\n    if (!this.handler || this.loading || this.disabled || this.buttonComponent.disabled) {\n      return;\n    }\n\n    this.loading = true;\n    functionToObservable(this.handler)\n      .pipe(\n        tap({\n          error: (err: unknown) => {\n            this.logService?.error(`Async action exception: ${err}`);\n            this.validationService?.showError(err);\n          },\n        }),\n        finalize(() => (this.loading = false)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { Directive, Input, OnDestroy, OnInit, Optional } from \"@angular/core\";\nimport { FormGroupDirective } from \"@angular/forms\";\nimport { BehaviorSubject, catchError, filter, of, Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\n\nimport { FunctionReturningAwaitable, functionToObservable } from \"../utils/function-to-observable\";\n\n/**\n * Allow a form to perform async actions on submit, disabling the form while the action is processing.\n */\n@Directive({\n  selector: \"[formGroup][bitSubmit]\",\n})\nexport class BitSubmitDirective implements OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n  private _loading$ = new BehaviorSubject<boolean>(false);\n  private _disabled$ = new BehaviorSubject<boolean>(false);\n\n  @Input(\"bitSubmit\") protected handler: FunctionReturningAwaitable;\n\n  readonly loading$ = this._loading$.asObservable();\n  readonly disabled$ = this._disabled$.asObservable();\n\n  constructor(\n    private formGroupDirective: FormGroupDirective,\n    @Optional() validationService?: ValidationService,\n    @Optional() logService?: LogService\n  ) {\n    formGroupDirective.ngSubmit\n      .pipe(\n        filter(() => !this.disabled),\n        switchMap(() => {\n          // Calling functionToObservable exectues the sync part of the handler\n          // allowing the function to check form validity before it gets disabled.\n          const awaitable = functionToObservable(this.handler);\n\n          // Disable form\n          this.loading = true;\n\n          return awaitable.pipe(\n            catchError((err: unknown) => {\n              logService?.error(`Async submit exception: ${err}`);\n              validationService?.showError(err);\n              return of(undefined);\n            })\n          );\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe({\n        next: () => (this.loading = false),\n        complete: () => (this.loading = false),\n      });\n  }\n\n  ngOnInit(): void {\n    this.formGroupDirective.statusChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((c) => this._disabled$.next(c === \"DISABLED\"));\n  }\n\n  get disabled() {\n    return this._disabled$.value;\n  }\n\n  set disabled(value: boolean) {\n    this._disabled$.next(value);\n  }\n\n  get loading() {\n    return this._loading$.value;\n  }\n\n  set loading(value: boolean) {\n    this.disabled = value;\n    this._loading$.next(value);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { Directive, Input, OnDestroy, Optional } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { ButtonLikeAbstraction } from \"../shared/button-like.abstraction\";\n\nimport { BitActionDirective } from \"./bit-action.directive\";\nimport { BitSubmitDirective } from \"./bit-submit.directive\";\n\n/**\n * This directive has two purposes:\n *\n * When attached to a submit button:\n * - Activates the button loading effect while the form is processing an async submit action.\n * - Disables the button while a `bitAction` directive on another button is being processed.\n *\n * When attached to a button with `bitAction` directive inside of a form:\n * - Disables the button while the `bitSubmit` directive is processing an async submit action.\n * - Disables the button while a `bitAction` directive on another button is being processed.\n * - Disables form submission while the `bitAction` directive is processing an async action.\n */\n@Directive({\n  selector: \"button[bitFormButton]\",\n})\nexport class BitFormButtonDirective implements OnDestroy {\n  private destroy$ = new Subject<void>();\n\n  @Input() type: string;\n\n  constructor(\n    buttonComponent: ButtonLikeAbstraction,\n    @Optional() submitDirective?: BitSubmitDirective,\n    @Optional() actionDirective?: BitActionDirective\n  ) {\n    if (submitDirective && buttonComponent) {\n      submitDirective.loading$.pipe(takeUntil(this.destroy$)).subscribe((loading) => {\n        if (this.type === \"submit\") {\n          buttonComponent.loading = loading;\n        } else {\n          buttonComponent.disabled = loading;\n        }\n      });\n\n      submitDirective.disabled$.pipe(takeUntil(this.destroy$)).subscribe((disabled) => {\n        buttonComponent.disabled = disabled;\n      });\n    }\n\n    if (submitDirective && actionDirective) {\n      actionDirective.loading$.pipe(takeUntil(this.destroy$)).subscribe((disabled) => {\n        submitDirective.disabled = disabled;\n      });\n\n      submitDirective.disabled$.pipe(takeUntil(this.destroy$)).subscribe((disabled) => {\n        actionDirective.disabled = disabled;\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { Component, Input, OnChanges } from \"@angular/core\";\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\ntype SizeTypes = \"large\" | \"default\" | \"small\";\n\nconst SizeClasses: Record<SizeTypes, string[]> = {\n  large: [\"tw-h-16\", \"tw-w-16\"],\n  default: [\"tw-h-10\", \"tw-w-10\"],\n  small: [\"tw-h-7\", \"tw-w-7\"],\n};\n\n@Component({\n  selector: \"bit-avatar\",\n  template: `<img *ngIf=\"src\" [src]=\"src\" title=\"{{ text }}\" [ngClass]=\"classList\" />`,\n})\nexport class AvatarComponent implements OnChanges {\n  @Input() border = false;\n  @Input() color?: string;\n  @Input() id?: string;\n  @Input() text?: string;\n  @Input() size: SizeTypes = \"default\";\n\n  private svgCharCount = 2;\n  private svgFontSize = 20;\n  private svgFontWeight = 300;\n  private svgSize = 48;\n  src: SafeResourceUrl;\n\n  constructor(public sanitizer: DomSanitizer) {}\n\n  ngOnChanges() {\n    this.generate();\n  }\n\n  get classList() {\n    return [\"tw-rounded-full\"]\n      .concat(SizeClasses[this.size] ?? [])\n      .concat(this.border ? [\"tw-border\", \"tw-border-solid\", \"tw-border-secondary-500\"] : []);\n  }\n\n  private generate() {\n    let chars: string = null;\n    const upperCaseText = this.text?.toUpperCase() ?? \"\";\n\n    chars = this.getFirstLetters(upperCaseText, this.svgCharCount);\n\n    if (chars == null) {\n      chars = this.unicodeSafeSubstring(upperCaseText, this.svgCharCount);\n    }\n\n    // If the chars contain an emoji, only show it.\n    if (chars.match(Utils.regexpEmojiPresentation)) {\n      chars = chars.match(Utils.regexpEmojiPresentation)[0];\n    }\n\n    let svg: HTMLElement;\n    let hexColor = this.color;\n\n    if (!Utils.isNullOrWhitespace(this.color)) {\n      svg = this.createSvgElement(this.svgSize, hexColor);\n    } else if (!Utils.isNullOrWhitespace(this.id)) {\n      hexColor = Utils.stringToColor(this.id.toString());\n      svg = this.createSvgElement(this.svgSize, hexColor);\n    } else {\n      hexColor = Utils.stringToColor(upperCaseText);\n      svg = this.createSvgElement(this.svgSize, hexColor);\n    }\n\n    const charObj = this.createTextElement(chars, hexColor);\n    svg.appendChild(charObj);\n    const html = window.document.createElement(\"div\").appendChild(svg).outerHTML;\n    const svgHtml = window.btoa(unescape(encodeURIComponent(html)));\n    this.src = this.sanitizer.bypassSecurityTrustResourceUrl(\n      \"data:image/svg+xml;base64,\" + svgHtml\n    );\n  }\n\n  private getFirstLetters(data: string, count: number): string {\n    const parts = data.split(\" \");\n    if (parts.length > 1) {\n      let text = \"\";\n      for (let i = 0; i < count; i++) {\n        text += this.unicodeSafeSubstring(parts[i], 1);\n      }\n      return text;\n    }\n    return null;\n  }\n\n  private createSvgElement(size: number, color: string): HTMLElement {\n    const svgTag = window.document.createElement(\"svg\");\n    svgTag.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    svgTag.setAttribute(\"pointer-events\", \"none\");\n    svgTag.setAttribute(\"width\", size.toString());\n    svgTag.setAttribute(\"height\", size.toString());\n    svgTag.style.backgroundColor = color;\n    svgTag.style.width = size + \"px\";\n    svgTag.style.height = size + \"px\";\n    return svgTag;\n  }\n\n  private createTextElement(character: string, color: string): HTMLElement {\n    const textTag = window.document.createElement(\"text\");\n    textTag.setAttribute(\"text-anchor\", \"middle\");\n    textTag.setAttribute(\"y\", \"50%\");\n    textTag.setAttribute(\"x\", \"50%\");\n    textTag.setAttribute(\"dy\", \"0.35em\");\n    textTag.setAttribute(\"pointer-events\", \"auto\");\n    textTag.setAttribute(\"fill\", Utils.pickTextColorBasedOnBgColor(color, 135, true));\n    textTag.setAttribute(\n      \"font-family\",\n      '\"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,' +\n        'sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\"'\n    );\n    textTag.textContent = character;\n    textTag.style.fontWeight = this.svgFontWeight.toString();\n    textTag.style.fontSize = this.svgFontSize + \"px\";\n    return textTag;\n  }\n\n  private unicodeSafeSubstring(str: string, count: number) {\n    const characters = str.match(/./gu);\n    return characters != null ? characters.slice(0, count).join(\"\") : \"\";\n  }\n}\n","<div class=\"tw-inline-flex tw-gap-2\">\n  <span *ngFor=\"let item of filteredItems; let last = last\" bitBadge [badgeType]=\"badgeType\">\n    {{ item }}\n    <span class=\"tw-sr-only\" *ngIf=\"!last || isFiltered\">, </span>\n  </span>\n  <span *ngIf=\"isFiltered\" bitBadge [badgeType]=\"badgeType\">\n    {{ \"plusNMore\" | i18n: (items.length - filteredItems.length).toString() }}\n  </span>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { BadgeTypes } from \"../badge\";\n\n@Component({\n  selector: \"bit-badge-list\",\n  templateUrl: \"badge-list.component.html\",\n})\nexport class BadgeListComponent implements OnChanges {\n  private _maxItems: number;\n\n  protected filteredItems: string[] = [];\n  protected isFiltered = false;\n\n  @Input() badgeType: BadgeTypes = \"primary\";\n  @Input() items: string[] = [];\n\n  @Input()\n  get maxItems(): number | undefined {\n    return this._maxItems;\n  }\n\n  set maxItems(value: number | undefined) {\n    this._maxItems = value == undefined ? undefined : Math.max(1, value);\n  }\n\n  ngOnChanges() {\n    if (this.maxItems == undefined || this.items.length <= this.maxItems) {\n      this.filteredItems = this.items;\n    } else {\n      this.filteredItems = this.items.slice(0, this.maxItems - 1);\n    }\n    this.isFiltered = this.items.length > this.filteredItems.length;\n  }\n}\n","import { Directive, ElementRef, HostBinding, Input } from \"@angular/core\";\n\nexport type BadgeTypes = \"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\";\n\nconst styles: Record<BadgeTypes, string[]> = {\n  primary: [\"tw-bg-primary-500\"],\n  secondary: [\"tw-bg-text-muted\"],\n  success: [\"tw-bg-success-500\"],\n  danger: [\"tw-bg-danger-500\"],\n  warning: [\"tw-bg-warning-500\"],\n  info: [\"tw-bg-info-500\"],\n};\n\nconst hoverStyles: Record<BadgeTypes, string[]> = {\n  primary: [\"hover:tw-bg-primary-700\"],\n  secondary: [\"hover:tw-bg-secondary-700\"],\n  success: [\"hover:tw-bg-success-700\"],\n  danger: [\"hover:tw-bg-danger-700\"],\n  warning: [\"hover:tw-bg-warning-700\"],\n  info: [\"hover:tw-bg-info-700\"],\n};\n\n@Directive({\n  selector: \"span[bitBadge], a[bitBadge], button[bitBadge]\",\n})\nexport class BadgeDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-inline\",\n      \"tw-py-0.5\",\n      \"tw-px-1.5\",\n      \"tw-font-bold\",\n      \"tw-text-center\",\n      \"!tw-text-contrast\",\n      \"tw-rounded\",\n      \"tw-border-none\",\n      \"tw-box-border\",\n      \"tw-whitespace-no-wrap\",\n      \"tw-text-xs\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n      \"focus:tw-ring\",\n      \"focus:tw-ring-offset-2\",\n      \"focus:tw-ring-primary-700\",\n    ]\n      .concat(styles[this.badgeType])\n      .concat(this.hasHoverEffects ? hoverStyles[this.badgeType] : []);\n  }\n\n  @Input() badgeType: BadgeTypes = \"primary\";\n\n  private hasHoverEffects = false;\n\n  constructor(el: ElementRef<Element>) {\n    this.hasHoverEffects = el?.nativeElement?.nodeName != \"SPAN\";\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BadgeDirective } from \"./badge.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [BadgeDirective],\n  declarations: [BadgeDirective],\n})\nexport class BadgeModule {}\n","import { Input, HostBinding, Component } from \"@angular/core\";\n\nimport { ButtonLikeAbstraction, ButtonType } from \"../shared/button-like.abstraction\";\n\nconst focusRing = [\n  \"focus-visible:tw-ring\",\n  \"focus-visible:tw-ring-offset-2\",\n  \"focus-visible:tw-ring-primary-700\",\n  \"focus-visible:tw-z-10\",\n];\n\nconst buttonStyles: Record<ButtonType, string[]> = {\n  primary: [\n    \"tw-border-primary-500\",\n    \"tw-bg-primary-500\",\n    \"!tw-text-contrast\",\n    \"hover:tw-bg-primary-700\",\n    \"hover:tw-border-primary-700\",\n    \"disabled:tw-bg-primary-500/60\",\n    \"disabled:tw-border-primary-500/60\",\n    \"disabled:!tw-text-contrast/60\",\n    \"disabled:tw-bg-clip-padding\",\n    ...focusRing,\n  ],\n  secondary: [\n    \"tw-bg-transparent\",\n    \"tw-border-text-muted\",\n    \"!tw-text-muted\",\n    \"hover:tw-bg-text-muted\",\n    \"hover:tw-border-text-muted\",\n    \"hover:!tw-text-contrast\",\n    \"disabled:tw-bg-transparent\",\n    \"disabled:tw-border-text-muted/60\",\n    \"disabled:!tw-text-muted/60\",\n    ...focusRing,\n  ],\n  danger: [\n    \"tw-bg-transparent\",\n    \"tw-border-danger-500\",\n    \"!tw-text-danger\",\n    \"hover:tw-bg-danger-500\",\n    \"hover:tw-border-danger-500\",\n    \"hover:!tw-text-contrast\",\n    \"disabled:tw-bg-transparent\",\n    \"disabled:tw-border-danger-500/60\",\n    \"disabled:!tw-text-danger/60\",\n    ...focusRing,\n  ],\n  unstyled: [],\n};\n\n@Component({\n  selector: \"button[bitButton], a[bitButton]\",\n  templateUrl: \"button.component.html\",\n  providers: [{ provide: ButtonLikeAbstraction, useExisting: ButtonComponent }],\n})\nexport class ButtonComponent implements ButtonLikeAbstraction {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-font-semibold\",\n      \"tw-py-1.5\",\n      \"tw-px-3\",\n      \"tw-rounded\",\n      \"tw-transition\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      \"tw-text-center\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n    ]\n      .concat(\n        this.block == null || this.block === false ? [\"tw-inline-block\"] : [\"tw-w-full\", \"tw-block\"]\n      )\n      .concat(buttonStyles[this.buttonType ?? \"secondary\"]);\n  }\n\n  @HostBinding(\"attr.disabled\")\n  get disabledAttr() {\n    const disabled = this.disabled != null && this.disabled !== false;\n    return disabled || this.loading ? true : null;\n  }\n\n  @Input() buttonType: ButtonType;\n  @Input() block?: boolean;\n\n  @Input() loading = false;\n\n  @Input() disabled = false;\n\n  setButtonType(value: \"primary\" | \"secondary\" | \"danger\" | \"unstyled\") {\n    this.buttonType = value;\n  }\n}\n","<span class=\"tw-relative\">\n  <span [ngClass]=\"{ 'tw-invisible': loading }\">\n    <ng-content></ng-content>\n  </span>\n  <span\n    class=\"tw-absolute tw-inset-0 tw-flex tw-items-center tw-justify-center\"\n    [ngClass]=\"{ 'tw-invisible': !loading }\"\n  >\n    <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" aria-hidden=\"true\"></i>\n  </span>\n</span>\n","<div\n  class=\"tw-mb-4 tw-box-border tw-rounded tw-border tw-border-l-8 tw-border-solid tw-border-secondary-300 tw-bg-background-alt tw-py-3 tw-px-5 tw-leading-5 tw-text-main\"\n  [ngClass]=\"calloutClass\"\n>\n  <h3\n    class=\"tw-mt-0 tw-mb-2 tw-text-base tw-font-bold tw-uppercase\"\n    [ngClass]=\"headerClass\"\n    *ngIf=\"title\"\n  >\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\ntype CalloutTypes = \"success\" | \"info\" | \"warning\" | \"danger\";\n\nconst defaultIcon: Record<CalloutTypes, string> = {\n  success: \"bwi-check\",\n  info: \"bwi-info-circle\",\n  warning: \"bwi-exclamation-triangle\",\n  danger: \"bwi-error\",\n};\n\nconst defaultI18n: Partial<Record<CalloutTypes, string>> = {\n  warning: \"warning\",\n  danger: \"error\",\n};\n\n@Component({\n  selector: \"bit-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type: CalloutTypes = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() useAlertRole = false;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.icon ??= defaultIcon[this.type];\n    if (this.title == null && defaultI18n[this.type] != null) {\n      this.title = this.i18nService.t(defaultI18n[this.type]);\n    }\n  }\n\n  get calloutClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"tw-border-l-danger-500\";\n      case \"info\":\n        return \"tw-border-l-info-500\";\n      case \"success\":\n        return \"tw-border-l-success-500\";\n      case \"warning\":\n        return \"tw-border-l-warning-500\";\n    }\n  }\n\n  get headerClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"!tw-text-danger\";\n      case \"info\":\n        return \"!tw-text-info\";\n      case \"success\":\n        return \"!tw-text-success\";\n      case \"warning\":\n        return \"!tw-text-warning\";\n    }\n  }\n}\n","import { Component, HostBinding, Input } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nenum CharacterType {\n  Letter,\n  Emoji,\n  Special,\n  Number,\n}\n\n@Component({\n  selector: \"bit-color-password\",\n  template: `<div\n    *ngFor=\"let character of passwordArray; index as i\"\n    [class]=\"getCharacterClass(character)\"\n  >\n    <span>{{ character }}</span>\n    <span *ngIf=\"showCount\" class=\"tw-whitespace-nowrap tw-text-xs tw-leading-5 tw-text-main\">{{\n      i + 1\n    }}</span>\n  </div>`,\n})\nexport class ColorPasswordComponent {\n  @Input() private password: string = null;\n  @Input() showCount = false;\n\n  characterStyles: Record<CharacterType, string[]> = {\n    [CharacterType.Emoji]: [],\n    [CharacterType.Letter]: [\"tw-text-main\"],\n    [CharacterType.Special]: [\"tw-text-danger\"],\n    [CharacterType.Number]: [\"tw-text-primary-500\"],\n  };\n\n  @HostBinding(\"class\")\n  get classList() {\n    return [\"tw-min-w-0\", \"tw-whitespace-pre-wrap\", \"tw-break-all\"];\n  }\n\n  get passwordArray() {\n    // Convert to an array to handle cases that strings have special characters, i.e.: emoji.\n    return Array.from(this.password);\n  }\n\n  getCharacterClass(character: string) {\n    const charType = this.getCharacterType(character);\n    const charClass = this.characterStyles[charType].concat(\"tw-inline-flex\");\n\n    if (this.showCount) {\n      return charClass.concat([\n        \"tw-flex-col\",\n        \"tw-items-center\",\n        \"tw-w-7\",\n        \"tw-py-1\",\n        \"odd:tw-bg-secondary-100\",\n        \"even:tw-bg-background\",\n      ]);\n    }\n\n    return charClass;\n  }\n\n  private getCharacterType(character: string): CharacterType {\n    if (character.match(Utils.regexpEmojiPresentation)) {\n      return CharacterType.Emoji;\n    }\n\n    if (character.match(/\\d/)) {\n      return CharacterType.Number;\n    }\n\n    const specials = [\"&\", \"<\", \">\", \" \"];\n    if (specials.includes(character) || character.match(/[^\\w ]/)) {\n      return CharacterType.Special;\n    }\n\n    return CharacterType.Letter;\n  }\n}\n","import { Dialog, DialogConfig, DialogRef } from \"@angular/cdk/dialog\";\nimport { ComponentType } from \"@angular/cdk/overlay\";\nimport { Injectable, TemplateRef } from \"@angular/core\";\n\n@Injectable()\nexport class DialogService extends Dialog {\n  override open<R = unknown, D = unknown, C = unknown>(\n    componentOrTemplateRef: ComponentType<C> | TemplateRef<C>,\n    config?: DialogConfig<D, DialogRef<R, C>>\n  ): DialogRef<R, C> {\n    config = {\n      backdropClass: [\"tw-fixed\", \"tw-bg-black\", \"tw-bg-opacity-30\", \"tw-inset-0\", \"tw-z-40\"],\n      ...config,\n    };\n\n    return super.open(componentOrTemplateRef, config);\n  }\n}\n","import { coerceBooleanProperty } from \"@angular/cdk/coercion\";\nimport { Component, HostBinding, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-dialog\",\n  templateUrl: \"./dialog.component.html\",\n})\nexport class DialogComponent {\n  @Input() dialogSize: \"small\" | \"default\" | \"large\" = \"default\";\n\n  private _disablePadding = false;\n  @Input() set disablePadding(value: boolean | \"\") {\n    this._disablePadding = coerceBooleanProperty(value);\n  }\n  get disablePadding() {\n    return this._disablePadding;\n  }\n\n  @HostBinding(\"class\") classes = [\"tw-flex\", \"tw-flex-col\", \"tw-py-4\", \"tw-max-h-screen\"];\n\n  get width() {\n    switch (this.dialogSize) {\n      case \"small\": {\n        return \"tw-w-96\";\n      }\n      case \"large\": {\n        return \"tw-w-75vw\";\n      }\n      default: {\n        return \"tw-w-50vw\";\n      }\n    }\n  }\n}\n","<div\n  [ngClass]=\"width\"\n  class=\"tw-flex tw-flex-col tw-overflow-hidden tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-text-contrast tw-text-main\"\n>\n  <div\n    class=\"tw-flex tw-items-center tw-gap-4 tw-border-0 tw-border-b tw-border-solid tw-border-secondary-300 tw-p-4\"\n  >\n    <h1 bitDialogTitleContainer class=\"tw-mb-0 tw-grow tw-text-lg tw-uppercase\">\n      <ng-content select=\"[bitDialogTitle]\"></ng-content>\n    </h1>\n    <button\n      type=\"button\"\n      bitIconButton=\"bwi-close\"\n      buttonType=\"main\"\n      size=\"default\"\n      bitDialogClose\n      [attr.title]=\"'close' | i18n\"\n      [attr.aria-label]=\"'close' | i18n\"\n    ></button>\n  </div>\n\n  <div class=\"tw-overflow-y-auto tw-pb-8\" [ngClass]=\"{ 'tw-p-4': !disablePadding }\">\n    <ng-content select=\"[bitDialogContent]\"></ng-content>\n  </div>\n\n  <div\n    class=\"tw-border-0 tw-border-t tw-border-solid tw-border-secondary-300 tw-bg-background-alt tw-p-4\"\n  >\n    <ng-content select=\"[bitDialogFooter]\"></ng-content>\n  </div>\n</div>\n","import { DialogRef } from \"@angular/cdk/dialog\";\nimport { Directive, HostListener, Input, Optional } from \"@angular/core\";\n\n@Directive({\n  selector: \"[bitDialogClose]\",\n})\nexport class DialogCloseDirective {\n  @Input(\"bit-dialog-close\") dialogResult: any;\n\n  constructor(@Optional() public dialogRef: DialogRef<any>) {}\n\n  @HostListener(\"click\") close(): void {\n    this.dialogRef.close(this.dialogResult);\n  }\n}\n","import { CdkDialogContainer, DialogRef } from \"@angular/cdk/dialog\";\nimport { Directive, HostBinding, Input, OnInit, Optional } from \"@angular/core\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"[bitDialogTitleContainer]\",\n})\nexport class DialogTitleContainerDirective implements OnInit {\n  @HostBinding(\"id\") id = `bit-dialog-title-${nextId++}`;\n\n  @Input() simple = false;\n\n  constructor(@Optional() private dialogRef: DialogRef<any>) {}\n\n  ngOnInit(): void {\n    // Based on angular/components, licensed under MIT\n    // https://github.com/angular/components/blob/14.2.0/src/material/dialog/dialog-content-directives.ts#L121-L128\n    if (this.dialogRef) {\n      Promise.resolve().then(() => {\n        const container = this.dialogRef.containerInstance as CdkDialogContainer;\n\n        if (container && !container._ariaLabelledBy) {\n          container._ariaLabelledBy = this.id;\n        }\n      });\n    }\n  }\n}\n","<div\n  class=\"tw-my-4 tw-flex tw-max-h-screen tw-w-96 tw-max-w-90vw tw-flex-col tw-overflow-hidden tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-text-contrast tw-text-main\"\n>\n  <div class=\"tw-flex tw-flex-col tw-items-center tw-gap-2 tw-px-4 tw-pt-4 tw-text-center\">\n    <ng-content *ngIf=\"hasIcon; else elseBlock\" select=\"[bit-dialog-icon]\"></ng-content>\n    <ng-template #elseBlock>\n      <i class=\"bwi bwi-exclamation-triangle tw-text-3xl tw-text-warning\" aria-hidden=\"true\"></i>\n    </ng-template>\n    <h1 bitDialogTitleContainer class=\"tw-mb-0 tw-text-base tw-font-semibold\">\n      <ng-content select=\"[bitDialogTitle]\"></ng-content>\n    </h1>\n  </div>\n  <div class=\"tw-overflow-y-auto tw-px-4 tw-pt-2 tw-pb-4 tw-text-center tw-text-base\">\n    <ng-content select=\"[bitDialogContent]\"></ng-content>\n  </div>\n  <div class=\"tw-border-0 tw-border-t tw-border-solid tw-border-secondary-300 tw-p-4\">\n    <ng-content select=\"[bitDialogFooter]\"></ng-content>\n  </div>\n</div>\n","import { Component, ContentChild, Directive } from \"@angular/core\";\n\n@Directive({ selector: \"[bit-dialog-icon]\" })\nexport class IconDirective {}\n\n@Component({\n  selector: \"bit-simple-dialog\",\n  templateUrl: \"./simple-dialog.component.html\",\n})\nexport class SimpleDialogComponent {\n  @ContentChild(IconDirective) icon!: IconDirective;\n\n  get hasIcon() {\n    return this.icon != null;\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared\";\n\nimport { FormControlComponent } from \"./form-control.component\";\nimport { BitHintComponent } from \"./hint.component\";\nimport { BitLabel } from \"./label.directive\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [FormControlComponent, BitLabel, BitHintComponent],\n  exports: [FormControlComponent, BitLabel, BitHintComponent],\n})\nexport class FormControlModule {}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"bit-hint\",\n  host: {\n    class: \"tw-text-muted tw-inline-block tw-mt-1\",\n  },\n})\nexport class BitHintComponent {\n  @HostBinding() id = `bit-hint-${nextId++}`;\n}\n","import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"bit-label\",\n})\nexport class BitLabel {}\n","import { Component, Input } from \"@angular/core\";\nimport { AbstractControl, UntypedFormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"bit-error-summary\",\n  template: ` <ng-container *ngIf=\"errorCount > 0\">\n    <i class=\"bwi bwi-error\"></i> {{ \"fieldsNeedAttention\" | i18n: errorString }}\n  </ng-container>`,\n  host: {\n    class: \"tw-block tw-text-danger tw-mt-2\",\n    \"aria-live\": \"assertive\",\n  },\n})\nexport class BitErrorSummary {\n  @Input()\n  formGroup: UntypedFormGroup;\n\n  get errorCount(): number {\n    return this.getErrorCount(this.formGroup);\n  }\n\n  get errorString() {\n    return this.errorCount.toString();\n  }\n\n  private getErrorCount(form: UntypedFormGroup): number {\n    return Object.values(form.controls).reduce((acc: number, control: AbstractControl) => {\n      if (control instanceof UntypedFormGroup) {\n        return acc + this.getErrorCount(control);\n      }\n\n      if (control.errors == null) {\n        return acc;\n      }\n\n      if (!control.dirty && control.untouched) {\n        return acc;\n      }\n\n      return acc + Object.keys(control.errors).length;\n    }, 0);\n  }\n}\n","export type InputTypes =\n  | \"text\"\n  | \"password\"\n  | \"number\"\n  | \"datetime-local\"\n  | \"email\"\n  | \"checkbox\"\n  | \"search\";\n\nexport abstract class BitFormFieldControl {\n  ariaDescribedBy: string;\n  id: string;\n  labelForId: string;\n  required: boolean;\n  hasError: boolean;\n  error: [string, any];\n  type?: InputTypes;\n  spellcheck?: boolean;\n  focus?: () => void;\n}\n","import { Component, HostBinding, Input } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Component({\n  selector: \"bit-error\",\n  template: `<i class=\"bwi bwi-error\"></i> {{ displayError }}`,\n  host: {\n    class: \"tw-block tw-mt-1 tw-text-danger\",\n    \"aria-live\": \"assertive\",\n  },\n})\nexport class BitErrorComponent {\n  @HostBinding() id = `bit-error-${nextId++}`;\n\n  @Input() error: [string, any];\n\n  constructor(private i18nService: I18nService) {}\n\n  get displayError() {\n    switch (this.error[0]) {\n      case \"required\":\n        return this.i18nService.t(\"inputRequired\");\n      case \"email\":\n        return this.i18nService.t(\"inputEmail\");\n      case \"minlength\":\n        return this.i18nService.t(\"inputMinLength\", this.error[1]?.requiredLength);\n      case \"maxlength\":\n        return this.i18nService.t(\"inputMaxLength\", this.error[1]?.requiredLength);\n      case \"forbiddenCharacters\":\n        return this.i18nService.t(\"inputForbiddenCharacters\", this.error[1]?.characters.join(\", \"));\n      default:\n        // Attempt to show a custom error message.\n        if (this.error[1]?.message) {\n          return this.error[1]?.message;\n        }\n\n        return this.error;\n    }\n  }\n}\n","<label class=\"tw-mb-1 tw-block tw-font-semibold tw-text-main\" [attr.for]=\"input.labelForId\">\n  <ng-content select=\"bit-label\"></ng-content>\n  <span *ngIf=\"input.required\" class=\"tw-text-xs tw-font-normal\"> ({{ \"required\" | i18n }})</span>\n</label>\n<div class=\"tw-flex\">\n  <div *ngIf=\"prefixChildren.length\" class=\"tw-flex\">\n    <ng-content select=\"[bitPrefix]\"></ng-content>\n  </div>\n  <ng-content></ng-content>\n  <div *ngIf=\"suffixChildren.length\" class=\"tw-flex\">\n    <ng-content select=\"[bitSuffix]\"></ng-content>\n  </div>\n</div>\n<ng-container [ngSwitch]=\"input.hasError\">\n  <ng-content select=\"bit-hint\" *ngSwitchCase=\"false\"></ng-content>\n  <bit-error [error]=\"input.error\" *ngSwitchCase=\"true\"></bit-error>\n</ng-container>\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChild,\n  ContentChildren,\n  QueryList,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { BitHintComponent } from \"../form-control/hint.component\";\n\nimport { BitErrorComponent } from \"./error.component\";\nimport { BitFormFieldControl } from \"./form-field-control\";\nimport { BitPrefixDirective } from \"./prefix.directive\";\nimport { BitSuffixDirective } from \"./suffix.directive\";\n\n@Component({\n  selector: \"bit-form-field\",\n  templateUrl: \"./form-field.component.html\",\n  host: {\n    class: \"tw-mb-6 tw-block\",\n  },\n})\nexport class BitFormFieldComponent implements AfterContentChecked {\n  @ContentChild(BitFormFieldControl) input: BitFormFieldControl;\n  @ContentChild(BitHintComponent) hint: BitHintComponent;\n\n  @ViewChild(BitErrorComponent) error: BitErrorComponent;\n\n  @ContentChildren(BitPrefixDirective) prefixChildren: QueryList<BitPrefixDirective>;\n  @ContentChildren(BitSuffixDirective) suffixChildren: QueryList<BitSuffixDirective>;\n\n  ngAfterContentChecked(): void {\n    if (this.error) {\n      this.input.ariaDescribedBy = this.error.id;\n    } else if (this.hint) {\n      this.input.ariaDescribedBy = this.hint.id;\n    } else {\n      this.input.ariaDescribedBy = undefined;\n    }\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitInputDirective } from \"./input.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitInputDirective],\n  exports: [BitInputDirective],\n})\nexport class InputModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { FormControlModule } from \"../form-control\";\nimport { BitInputDirective } from \"../input/input.directive\";\nimport { InputModule } from \"../input/input.module\";\nimport { MultiSelectComponent } from \"../multi-select/multi-select.component\";\nimport { MultiSelectModule } from \"../multi-select/multi-select.module\";\nimport { SharedModule } from \"../shared\";\n\nimport { BitErrorSummary } from \"./error-summary.component\";\nimport { BitErrorComponent } from \"./error.component\";\nimport { BitFormFieldComponent } from \"./form-field.component\";\nimport { BitPasswordInputToggleDirective } from \"./password-input-toggle.directive\";\nimport { BitPrefixDirective } from \"./prefix.directive\";\nimport { BitSuffixDirective } from \"./suffix.directive\";\n\n@NgModule({\n  imports: [SharedModule, FormControlModule, InputModule, MultiSelectModule],\n  declarations: [\n    BitErrorComponent,\n    BitErrorSummary,\n    BitFormFieldComponent,\n    BitPasswordInputToggleDirective,\n    BitPrefixDirective,\n    BitSuffixDirective,\n  ],\n  exports: [\n    BitErrorComponent,\n    BitErrorSummary,\n    BitFormFieldComponent,\n    BitInputDirective,\n    BitPasswordInputToggleDirective,\n    BitPrefixDirective,\n    BitSuffixDirective,\n    MultiSelectComponent,\n    FormControlModule,\n  ],\n})\nexport class FormFieldModule {}\n","import {\n  AfterContentInit,\n  Directive,\n  EventEmitter,\n  Host,\n  HostBinding,\n  HostListener,\n  Input,\n  OnChanges,\n  Output,\n} from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\nimport { BitIconButtonComponent } from \"../icon-button/icon-button.component\";\n\nimport { BitFormFieldComponent } from \"./form-field.component\";\n\n@Directive({\n  selector: \"[bitPasswordInputToggle]\",\n})\nexport class BitPasswordInputToggleDirective implements AfterContentInit, OnChanges {\n  /**\n   * Whether the input is toggled to show the password.\n   */\n  @HostBinding(\"attr.aria-pressed\") @Input() toggled = false;\n  @Output() toggledChange = new EventEmitter<boolean>();\n\n  @HostBinding(\"attr.title\") title = this.i18nService.t(\"toggleVisibility\");\n  @HostBinding(\"attr.aria-label\") label = this.i18nService.t(\"toggleVisibility\");\n\n  /**\n   * Click handler to toggle the state of the input type.\n   */\n  @HostListener(\"click\") onClick() {\n    this.toggled = !this.toggled;\n    this.toggledChange.emit(this.toggled);\n\n    this.update();\n\n    this.formField.input?.focus();\n  }\n\n  constructor(\n    @Host() private button: BitIconButtonComponent,\n    private formField: BitFormFieldComponent,\n    private i18nService: I18nService\n  ) {}\n\n  get icon() {\n    return this.toggled ? \"bwi-eye-slash\" : \"bwi-eye\";\n  }\n\n  ngOnChanges(): void {\n    this.update();\n  }\n\n  ngAfterContentInit(): void {\n    this.toggled = this.formField.input.type !== \"password\";\n    this.button.icon = this.icon;\n  }\n\n  private update() {\n    this.button.icon = this.icon;\n    if (this.formField.input?.type != null) {\n      this.formField.input.type = this.toggled ? \"text\" : \"password\";\n      this.formField.input.spellcheck = this.toggled ? false : undefined;\n    }\n  }\n}\n","import { Directive, HostBinding, Input, OnInit, Optional } from \"@angular/core\";\n\nimport { ButtonLikeAbstraction } from \"../shared/button-like.abstraction\";\n\nexport const PrefixClasses = [\n  \"tw-bg-background-alt\",\n  \"tw-border\",\n  \"tw-border-solid\",\n  \"tw-border-secondary-500\",\n  \"tw-text-muted\",\n  \"tw-rounded-none\",\n];\n\nexport const PrefixButtonClasses = [\n  \"hover:tw-bg-text-muted\",\n  \"hover:tw-text-contrast\",\n  \"disabled:tw-opacity-100\",\n  \"disabled:tw-bg-secondary-100\",\n  \"disabled:hover:tw-bg-secondary-100\",\n  \"disabled:hover:tw-text-muted\",\n  \"focus-visible:tw-ring-primary-700\",\n\n  \"focus-visible:tw-border-primary-700\",\n  \"focus-visible:tw-ring-1\",\n  \"focus-visible:tw-ring-inset\",\n  \"focus-visible:tw-ring-primary-700\",\n  \"focus-visible:tw-z-10\",\n];\n\nexport const PrefixStaticContentClasses = [\"tw-block\", \"tw-px-3\", \"tw-py-1.5\"];\n\n@Directive({\n  selector: \"[bitPrefix]\",\n})\nexport class BitPrefixDirective implements OnInit {\n  constructor(@Optional() private buttonComponent: ButtonLikeAbstraction) {}\n\n  @HostBinding(\"class\") @Input() get classList() {\n    return PrefixClasses.concat([\n      \"tw-border-r-0\",\n      \"first:tw-rounded-l\",\n\n      \"focus-visible:tw-border-r\",\n      \"focus-visible:tw-mr-[-1px]\",\n    ]).concat(this.buttonComponent != undefined ? PrefixButtonClasses : PrefixStaticContentClasses);\n  }\n\n  ngOnInit(): void {\n    this.buttonComponent?.setButtonType(\"unstyled\");\n  }\n}\n","import { Directive, HostBinding, Input, Optional } from \"@angular/core\";\n\nimport { ButtonLikeAbstraction } from \"../shared/button-like.abstraction\";\n\nimport { PrefixButtonClasses, PrefixClasses, PrefixStaticContentClasses } from \"./prefix.directive\";\n\n@Directive({\n  selector: \"[bitSuffix]\",\n})\nexport class BitSuffixDirective {\n  constructor(@Optional() private buttonComponent: ButtonLikeAbstraction) {}\n\n  @HostBinding(\"class\") @Input() get classList() {\n    return PrefixClasses.concat([\n      \"tw-border-l-0\",\n      \"last:tw-rounded-r\",\n\n      \"focus-visible:tw-border-l\",\n      \"focus-visible:tw-ml-[-1px]\",\n    ]).concat(this.buttonComponent != undefined ? PrefixButtonClasses : PrefixStaticContentClasses);\n  }\n\n  ngOnInit(): void {\n    this.buttonComponent?.setButtonType(\"unstyled\");\n  }\n}\n","import { Component, HostBinding, Input } from \"@angular/core\";\n\nimport { ButtonLikeAbstraction, ButtonType } from \"../shared/button-like.abstraction\";\n\nexport type IconButtonType = ButtonType | \"contrast\" | \"main\" | \"muted\" | \"light\";\n\nconst focusRing = [\n  // Workaround for box-shadow with transparent offset issue:\n  // https://github.com/tailwindlabs/tailwindcss/issues/3595\n  // Remove `before:` and use regular `tw-ring` when browser no longer has bug, or better:\n  // switch to `outline` with `outline-offset` when Safari supports border radius on outline.\n  // Using `box-shadow` to create outlines is a hack and as such `outline` should be preferred.\n  \"tw-relative\",\n  \"before:tw-content-['']\",\n  \"before:tw-block\",\n  \"before:tw-absolute\",\n  \"before:-tw-inset-[3px]\",\n  \"before:tw-rounded-md\",\n  \"before:tw-transition\",\n  \"before:tw-ring\",\n  \"before:tw-ring-transparent\",\n  \"focus-visible:tw-z-10\",\n];\n\nconst styles: Record<IconButtonType, string[]> = {\n  contrast: [\n    \"tw-bg-transparent\",\n    \"!tw-text-contrast\",\n    \"tw-border-transparent\",\n    \"hover:tw-bg-transparent-hover\",\n    \"hover:tw-border-text-contrast\",\n    \"focus-visible:before:tw-ring-text-contrast\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-transparent\",\n    \"disabled:hover:tw-bg-transparent\",\n    ...focusRing,\n  ],\n  main: [\n    \"tw-bg-transparent\",\n    \"!tw-text-main\",\n    \"tw-border-transparent\",\n    \"hover:tw-bg-transparent-hover\",\n    \"hover:tw-border-text-main\",\n    \"focus-visible:before:tw-ring-text-main\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-transparent\",\n    \"disabled:hover:tw-bg-transparent\",\n    ...focusRing,\n  ],\n  muted: [\n    \"tw-bg-transparent\",\n    \"!tw-text-muted\",\n    \"tw-border-transparent\",\n    \"hover:tw-bg-transparent-hover\",\n    \"hover:tw-border-primary-700\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-transparent\",\n    \"disabled:hover:tw-bg-transparent\",\n    ...focusRing,\n  ],\n  primary: [\n    \"tw-bg-primary-500\",\n    \"!tw-text-contrast\",\n    \"tw-border-primary-500\",\n    \"hover:tw-bg-primary-700\",\n    \"hover:tw-border-primary-700\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-primary-500\",\n    \"disabled:hover:tw-bg-primary-500\",\n    ...focusRing,\n  ],\n  secondary: [\n    \"tw-bg-transparent\",\n    \"!tw-text-muted\",\n    \"tw-border-text-muted\",\n    \"hover:!tw-text-contrast\",\n    \"hover:tw-bg-text-muted\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-text-muted\",\n    \"disabled:hover:tw-bg-transparent\",\n    \"disabled:hover:!tw-text-muted\",\n    \"disabled:hover:tw-border-text-muted\",\n    ...focusRing,\n  ],\n  danger: [\n    \"tw-bg-transparent\",\n    \"!tw-text-danger\",\n    \"tw-border-danger-500\",\n    \"hover:!tw-text-contrast\",\n    \"hover:tw-bg-danger-500\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-danger-500\",\n    \"disabled:hover:tw-bg-transparent\",\n    \"disabled:hover:!tw-text-danger\",\n    \"disabled:hover:tw-border-danger-500\",\n    ...focusRing,\n  ],\n  light: [\n    \"tw-bg-transparent\",\n    \"!tw-text-alt2\",\n    \"tw-border-transparent\",\n    \"hover:tw-bg-transparent-hover\",\n    \"hover:tw-border-text-alt2\",\n    \"focus-visible:before:tw-ring-text-alt2\",\n    \"disabled:hover:tw-border-transparent\",\n    \"disabled:hover:tw-bg-transparent\",\n    ...focusRing,\n  ],\n  unstyled: [],\n};\n\nexport type IconButtonSize = \"default\" | \"small\";\n\nconst sizes: Record<IconButtonSize, string[]> = {\n  default: [\"tw-px-2.5\", \"tw-py-1.5\"],\n  small: [\"tw-leading-none\", \"tw-text-base\", \"tw-p-1\"],\n};\n\n@Component({\n  selector: \"button[bitIconButton]:not(button[bitButton])\",\n  templateUrl: \"icon-button.component.html\",\n  providers: [{ provide: ButtonLikeAbstraction, useExisting: BitIconButtonComponent }],\n})\nexport class BitIconButtonComponent implements ButtonLikeAbstraction {\n  @Input(\"bitIconButton\") icon: string;\n\n  @Input() buttonType: IconButtonType;\n\n  @Input() size: IconButtonSize = \"default\";\n\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-font-semibold\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      \"tw-rounded\",\n      \"tw-transition\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n    ]\n      .concat(styles[this.buttonType ?? \"main\"])\n      .concat(sizes[this.size]);\n  }\n\n  get iconClass() {\n    return [this.icon, \"!tw-m-0\"];\n  }\n\n  @HostBinding(\"attr.disabled\")\n  get disabledAttr() {\n    const disabled = this.disabled != null && this.disabled !== false;\n    return disabled || this.loading ? true : null;\n  }\n\n  @Input() loading = false;\n  @Input() disabled = false;\n\n  setButtonType(value: \"primary\" | \"secondary\" | \"danger\" | \"unstyled\") {\n    this.buttonType = value;\n  }\n}\n","<span class=\"tw-relative\">\n  <span [ngClass]=\"{ 'tw-invisible': loading }\">\n    <i class=\"bwi\" [ngClass]=\"iconClass\" aria-hidden=\"true\"></i>\n  </span>\n  <span\n    class=\"tw-absolute tw-inset-0 tw-flex tw-items-center tw-justify-center\"\n    [ngClass]=\"{ 'tw-invisible': !loading }\"\n  >\n    <i\n      class=\"bwi bwi-spinner bwi-spin\"\n      aria-hidden=\"true\"\n      [ngClass]=\"{ 'bwi-lg': size === 'default' }\"\n    ></i>\n  </span>\n</span>\n","import { Component, HostBinding, Input } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\nimport { Icon, isIcon } from \"./icon\";\n\n@Component({\n  selector: \"bit-icon\",\n  template: ``,\n})\nexport class BitIconComponent {\n  @Input() icon: Icon;\n\n  @HostBinding()\n  protected get innerHtml() {\n    if (!isIcon(this.icon)) {\n      return \"\";\n    }\n\n    const svg = this.icon.svg;\n    return this.domSanitizer.bypassSecurityTrustHtml(svg);\n  }\n\n  constructor(private domSanitizer: DomSanitizer) {}\n}\n","class Icon {\n  constructor(readonly svg: string) {}\n}\n\n// We only export the type to prohibit the creation of Icons without using\n// the `svgIcon` template literal tag.\nexport type { Icon };\n\nexport function isIcon(icon: unknown): icon is Icon {\n  return icon instanceof Icon;\n}\n\nexport class DynamicContentNotAllowedError extends Error {\n  constructor() {\n    super(\"Dynamic content in icons is not allowed due to risk of user-injected XSS.\");\n  }\n}\n\nexport function svgIcon(strings: TemplateStringsArray, ...values: unknown[]): Icon {\n  if (values.length > 0) {\n    throw new DynamicContentNotAllowedError();\n  }\n\n  return new Icon(strings[0]);\n}\n","import { svgIcon } from \"../icon\";\n\nexport const Search = svgIcon`\n<svg width=\"120\" height=\"120\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <g opacity=\".49\">\n    <path class=\"tw-fill-secondary-300\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M40.36 73.256a30.004 30.004 0 0 0 10.346 1.826c16.282 0 29.482-12.912 29.482-28.84 0-.384-.008-.766-.023-1.145h28.726v39.57H40.36v-11.41Z\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M21.546 46.241c0 15.929 13.2 28.841 29.482 28.841S80.51 62.17 80.51 46.241c0-15.928-13.2-28.841-29.482-28.841S21.546 30.313 21.546 46.241Z\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path class=\"tw-fill-secondary-500\" d=\"M35.36 70.595a1.2 1.2 0 0 0-2.4 0h2.4Zm77.475-30.356a2.343 2.343 0 0 1 2.365 2.33h2.4c0-2.593-2.107-4.73-4.765-4.73v2.4Zm2.365 2.33v46.047h2.4V42.57h-2.4Zm0 46.047c0 1.293-1.058 2.33-2.365 2.33v2.4c2.59 0 4.765-2.069 4.765-4.73h-2.4Zm-2.365 2.33h-75.11v2.4h75.11v-2.4Zm-75.11 0a2.343 2.343 0 0 1-2.365-2.33h-2.4c0 2.594 2.107 4.73 4.766 4.73v-2.4Zm-2.365-2.33v-18.02h-2.4v18.02h2.4Zm44.508-48.377h32.967v-2.4H79.868v2.4Z\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M79.907 45.287h29.114v39.57H40.487V73.051\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M57.356 102.56h35.849\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M68.954 92.147v10.413m11.599-10.413v10.413\" stroke-width=\"4\" stroke-linejoin=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"m27.44 64.945-4.51 4.51L5.72 86.663a3 3 0 0 0 0 4.243l1.238 1.238a3 3 0 0 0 4.243 0L28.41 74.936l4.51-4.51\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M101.293 53.154H85.178m16.115 6.043H90.214m-5.036 0h-7.553m23.668 6.043h-7.05m-5.54 0h-15.61m28.2 6.042H85.178m-5.538 0h-8.562m30.215 6.043H78.632m-5.539 0H60m-5.54 0h-8.057\" stroke-width=\"2\" stroke-linecap=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M29.164 33.01h41.529a2.4 2.4 0 0 1 2.4 2.4v6.28a2.4 2.4 0 0 1-2.4 2.4h-41.53a2.4 2.4 0 0 1-2.4-2.4v-6.28a2.4 2.4 0 0 1 2.4-2.4Z\" stroke-width=\"4\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M22.735 54.16h34.361a2.4 2.4 0 0 1 2.4 2.4v6.28a2.4 2.4 0 0 1-2.4 2.4H28.778m50.358-11.08h-6.161a2.4 2.4 0 0 0-2.4 2.4v6.414a2.266 2.266 0 0 0 2.266 2.265\" stroke-width=\"4\" stroke-linecap=\"round\" />\n  </g>\n</svg>\n`;\n","import { Directive, ElementRef, HostBinding, Input, NgZone, Optional, Self } from \"@angular/core\";\nimport { NgControl, Validators } from \"@angular/forms\";\n\nimport { BitFormFieldControl, InputTypes } from \"../form-field/form-field-control\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"input[bitInput], select[bitInput], textarea[bitInput]\",\n  providers: [{ provide: BitFormFieldControl, useExisting: BitInputDirective }],\n})\nexport class BitInputDirective implements BitFormFieldControl {\n  @HostBinding(\"class\") @Input() get classList() {\n    return [\n      \"tw-block\",\n      \"tw-w-full\",\n      \"tw-px-3\",\n      \"tw-py-1.5\",\n      \"tw-bg-background-alt\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      this.hasError ? \"tw-border-danger-500\" : \"tw-border-secondary-500\",\n      \"tw-text-main\",\n      \"tw-placeholder-text-muted\",\n      // Rounded\n      \"tw-rounded-none\",\n      \"first:tw-rounded-l\",\n      \"last:tw-rounded-r\",\n      // Focus\n      \"focus:tw-outline-none\",\n      \"focus:tw-border-primary-700\",\n      \"focus:tw-ring-1\",\n      \"focus:tw-ring-inset\",\n      \"focus:tw-ring-primary-700\",\n      \"focus:tw-z-10\",\n      \"disabled:tw-bg-secondary-100\",\n    ].filter((s) => s != \"\");\n  }\n\n  @HostBinding() @Input() id = `bit-input-${nextId++}`;\n\n  @HostBinding(\"attr.aria-describedby\") ariaDescribedBy: string;\n\n  @HostBinding(\"attr.aria-invalid\") get ariaInvalid() {\n    return this.hasError ? true : undefined;\n  }\n\n  @HostBinding(\"attr.type\") @Input() type?: InputTypes;\n\n  @HostBinding(\"attr.spellcheck\") @Input() spellcheck?: boolean;\n\n  @HostBinding()\n  @Input()\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value: any) {\n    this._required = value != null && value !== false;\n  }\n  private _required: boolean;\n\n  @Input() hasPrefix = false;\n  @Input() hasSuffix = false;\n\n  get labelForId(): string {\n    return this.id;\n  }\n\n  get hasError() {\n    return this.ngControl?.status === \"INVALID\" && this.ngControl?.touched;\n  }\n\n  get error(): [string, any] {\n    const key = Object.keys(this.ngControl.errors)[0];\n    return [key, this.ngControl.errors[key]];\n  }\n\n  constructor(\n    @Optional() @Self() private ngControl: NgControl,\n    private ngZone: NgZone,\n    private elementRef: ElementRef<HTMLInputElement>\n  ) {}\n\n  focus() {\n    this.ngZone.runOutsideAngular(() => {\n      const end = this.elementRef.nativeElement.value.length;\n      this.elementRef.nativeElement.setSelectionRange(end, end);\n      this.elementRef.nativeElement.focus();\n    });\n  }\n}\n","import { Input, HostBinding, Directive } from \"@angular/core\";\n\nexport type LinkType = \"primary\" | \"secondary\" | \"contrast\";\n\nconst linkStyles: Record<LinkType, string[]> = {\n  primary: [\n    \"!tw-text-primary-500\",\n    \"hover:!tw-text-primary-500\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:!tw-text-primary-500/60\",\n  ],\n  secondary: [\n    \"!tw-text-main\",\n    \"hover:!tw-text-main\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:!tw-text-muted/60\",\n  ],\n  contrast: [\n    \"!tw-text-contrast\",\n    \"hover:!tw-text-contrast\",\n    \"focus-visible:before:tw-ring-text-contrast\",\n    \"disabled:!tw-text-contrast/60\",\n  ],\n};\n\nconst commonStyles = [\n  \"tw-leading-none\",\n  \"tw-p-0\",\n  \"tw-font-semibold\",\n  \"tw-bg-transparent\",\n  \"tw-border-0\",\n  \"tw-border-none\",\n  \"tw-rounded\",\n  \"tw-transition\",\n  \"hover:tw-underline\",\n  \"hover:tw-decoration-1\",\n  \"disabled:tw-no-underline\",\n  \"disabled:tw-cursor-not-allowed\",\n  \"focus-visible:tw-outline-none\",\n  \"focus-visible:tw-underline\",\n  \"focus-visible:tw-decoration-1\",\n\n  // Workaround for html button tag not being able to be set to `display: inline`\n  // and at the same time not being able to use `tw-ring-offset` because of box-shadow issue.\n  // https://github.com/w3c/csswg-drafts/issues/3226\n  // Add `tw-inline`, add `tw-py-0.5` and use regular `tw-ring` if issue is fixed.\n  //\n  // https://github.com/tailwindlabs/tailwindcss/issues/3595\n  // Remove `before:` and use regular `tw-ring` when browser no longer has bug, or better:\n  // switch to `outline` with `outline-offset` when Safari supports border radius on outline.\n  // Using `box-shadow` to create outlines is a hack and as such `outline` should be preferred.\n  \"tw-relative\",\n  \"before:tw-content-['']\",\n  \"before:tw-block\",\n  \"before:tw-absolute\",\n  \"before:-tw-inset-x-[0.1em]\",\n  \"before:tw-rounded-md\",\n  \"before:tw-transition\",\n  \"focus-visible:before:tw-ring-2\",\n  \"focus-visible:before:tw-ring-text-contrast\",\n  \"focus-visible:tw-z-10\",\n];\n\n@Directive()\nabstract class LinkDirective {\n  @Input()\n  linkType: LinkType = \"primary\";\n}\n\n@Directive({\n  selector: \"a[bitLink]\",\n})\nexport class AnchorLinkDirective extends LinkDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\"before:-tw-inset-y-[0.125rem]\"]\n      .concat(commonStyles)\n      .concat(linkStyles[this.linkType] ?? []);\n  }\n}\n\n@Directive({\n  selector: \"button[bitLink]\",\n})\nexport class ButtonLinkDirective extends LinkDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\"before:-tw-inset-y-[0.25rem]\"]\n      .concat(commonStyles)\n      .concat(linkStyles[this.linkType] ?? []);\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-menu-divider\",\n  templateUrl: \"./menu-divider.component.html\",\n})\nexport class MenuDividerComponent {}\n","<div\n  class=\"tw-my-2 tw-border-0 tw-border-t tw-border-solid tw-border-t-secondary-500\"\n  role=\"separator\"\n></div>\n","import { FocusableOption } from \"@angular/cdk/a11y\";\nimport { Directive, ElementRef, HostBinding } from \"@angular/core\";\n\n@Directive({\n  selector: \"[bitMenuItem]\",\n})\nexport class MenuItemDirective implements FocusableOption {\n  @HostBinding(\"class\") classList = [\n    \"tw-block\",\n    \"tw-py-1\",\n    \"tw-px-4\",\n    \"!tw-text-main\",\n    \"!tw-no-underline\",\n    \"tw-cursor-pointer\",\n    \"tw-border-none\",\n    \"tw-bg-background\",\n    \"tw-text-left\",\n    \"hover:tw-bg-secondary-100\",\n    \"focus:tw-bg-secondary-100\",\n    \"focus:tw-z-50\",\n    \"focus:tw-outline-none\",\n    \"focus:tw-ring\",\n    \"focus:tw-ring-offset-2\",\n    \"focus:tw-ring-primary-700\",\n    \"active:!tw-ring-0\",\n    \"active:!tw-ring-offset-0\",\n  ];\n  @HostBinding(\"attr.role\") role = \"menuitem\";\n  @HostBinding(\"tabIndex\") tabIndex = \"-1\";\n\n  constructor(private elementRef: ElementRef) {}\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n}\n","import { Overlay, OverlayConfig, OverlayRef } from \"@angular/cdk/overlay\";\nimport { TemplatePortal } from \"@angular/cdk/portal\";\nimport {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { filter, mergeWith } from \"rxjs/operators\";\n\nimport { MenuComponent } from \"./menu.component\";\n\n@Directive({\n  selector: \"[bitMenuTriggerFor]\",\n})\nexport class MenuTriggerForDirective implements OnDestroy {\n  @HostBinding(\"attr.aria-expanded\") isOpen = false;\n  @HostBinding(\"attr.aria-haspopup\") get hasPopup(): \"menu\" | \"dialog\" {\n    return this.menu?.ariaRole || \"menu\";\n  }\n  @HostBinding(\"attr.role\") role = \"button\";\n\n  @Input(\"bitMenuTriggerFor\") menu: MenuComponent;\n\n  private overlayRef: OverlayRef;\n  private defaultMenuConfig: OverlayConfig = {\n    panelClass: \"bit-menu-panel\",\n    hasBackdrop: true,\n    backdropClass: \"cdk-overlay-transparent-backdrop\",\n    scrollStrategy: this.overlay.scrollStrategies.reposition(),\n    positionStrategy: this.overlay\n      .position()\n      .flexibleConnectedTo(this.elementRef)\n      .withPositions([\n        {\n          originX: \"start\",\n          originY: \"bottom\",\n          overlayX: \"start\",\n          overlayY: \"top\",\n        },\n        {\n          originX: \"end\",\n          originY: \"bottom\",\n          overlayX: \"end\",\n          overlayY: \"top\",\n        },\n      ])\n      .withLockedPosition(true)\n      .withFlexibleDimensions(false)\n      .withPush(true),\n  };\n  private closedEventsSub: Subscription;\n  private keyDownEventsSub: Subscription;\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    private viewContainerRef: ViewContainerRef,\n    private overlay: Overlay\n  ) {}\n\n  @HostListener(\"click\") toggleMenu() {\n    this.isOpen ? this.destroyMenu() : this.openMenu();\n  }\n\n  ngOnDestroy() {\n    this.disposeAll();\n  }\n\n  private openMenu() {\n    if (this.menu == null) {\n      throw new Error(\"Cannot find bit-menu element\");\n    }\n\n    this.isOpen = true;\n    this.overlayRef = this.overlay.create(this.defaultMenuConfig);\n\n    const templatePortal = new TemplatePortal(this.menu.templateRef, this.viewContainerRef);\n    this.overlayRef.attach(templatePortal);\n\n    this.closedEventsSub = this.getClosedEvents().subscribe((event: KeyboardEvent | undefined) => {\n      if (event?.key === \"Tab\") {\n        // Required to ensure tab order resumes correctly\n        this.elementRef.nativeElement.focus();\n      }\n      this.destroyMenu();\n    });\n    this.keyDownEventsSub =\n      this.menu.keyManager &&\n      this.overlayRef\n        .keydownEvents()\n        .subscribe((event: KeyboardEvent) => this.menu.keyManager.onKeydown(event));\n  }\n\n  private destroyMenu() {\n    if (this.overlayRef == null || !this.isOpen) {\n      return;\n    }\n\n    this.isOpen = false;\n    this.disposeAll();\n  }\n\n  private getClosedEvents(): Observable<any> {\n    const detachments = this.overlayRef.detachments();\n    const escKey = this.overlayRef.keydownEvents().pipe(\n      filter((event: KeyboardEvent) => {\n        const keys = this.menu.ariaRole === \"menu\" ? [\"Escape\", \"Tab\"] : [\"Escape\"];\n        return keys.includes(event.key);\n      })\n    );\n    const backdrop = this.overlayRef.backdropClick();\n    const menuClosed = this.menu.closed;\n\n    return detachments.pipe(mergeWith(escKey, backdrop, menuClosed));\n  }\n\n  private disposeAll() {\n    this.closedEventsSub?.unsubscribe();\n    this.overlayRef?.dispose();\n    this.keyDownEventsSub?.unsubscribe();\n  }\n}\n","<ng-template>\n  <div\n    (click)=\"closed.emit()\"\n    class=\"tw-flex tw-shrink-0 tw-flex-col tw-rounded tw-border tw-border-solid tw-border-secondary-500 tw-bg-background tw-bg-clip-padding tw-py-2\"\n    [attr.role]=\"ariaRole\"\n    [attr.aria-label]=\"ariaLabel\"\n    cdkTrapFocus\n    [cdkTrapFocusAutoCapture]=\"true\"\n  >\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","import { FocusKeyManager } from \"@angular/cdk/a11y\";\nimport {\n  Component,\n  Output,\n  TemplateRef,\n  ViewChild,\n  EventEmitter,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  Input,\n} from \"@angular/core\";\n\nimport { MenuItemDirective } from \"./menu-item.directive\";\n\n@Component({\n  selector: \"bit-menu\",\n  templateUrl: \"./menu.component.html\",\n  exportAs: \"menuComponent\",\n})\nexport class MenuComponent implements AfterContentInit {\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n  @Output() closed = new EventEmitter<void>();\n  @ContentChildren(MenuItemDirective, { descendants: true })\n  menuItems: QueryList<MenuItemDirective>;\n  keyManager?: FocusKeyManager<MenuItemDirective>;\n\n  @Input() ariaRole: \"menu\" | \"dialog\" = \"menu\";\n\n  @Input() ariaLabel: string;\n\n  ngAfterContentInit() {\n    if (this.ariaRole === \"menu\") {\n      this.keyManager = new FocusKeyManager(this.menuItems).withWrap();\n    }\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { NgSelectModule } from \"@ng-select/ng-select\";\n\nimport { BadgeModule } from \"../badge\";\nimport { SharedModule } from \"../shared\";\n\nimport { MultiSelectComponent } from \"./multi-select.component\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, NgSelectModule, BadgeModule, SharedModule],\n  exports: [MultiSelectComponent],\n  declarations: [MultiSelectComponent],\n})\nexport class MultiSelectModule {}\n","export type ButtonType = \"primary\" | \"secondary\" | \"danger\" | \"unstyled\";\n\nexport abstract class ButtonLikeAbstraction {\n  loading: boolean;\n  disabled: boolean;\n  setButtonType: (value: ButtonType) => void;\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n/**\n * Temporarily duplicate this pipe\n */\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { I18nPipe } from \"./i18n.pipe\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [I18nPipe],\n  exports: [CommonModule, I18nPipe],\n})\nexport class SharedModule {}\n","import { HostBinding, Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"th[bitCell], td[bitCell]\",\n})\nexport class CellDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\"tw-p-3\"];\n  }\n}\n","import { Directive, HostBinding, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"tr[bitRow]\",\n})\nexport class RowDirective {\n  @Input() alignContent: \"top\" | \"middle\" | \"bottom\" | \"baseline\" = \"baseline\";\n\n  get alignmentClass(): string {\n    switch (this.alignContent) {\n      case \"top\":\n        return \"tw-align-top\";\n      case \"middle\":\n        return \"tw-align-middle\";\n      case \"bottom\":\n        return \"tw-align-bottom\";\n      default:\n        return \"tw-align-baseline\";\n    }\n  }\n\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-border-0\",\n      \"tw-border-b\",\n      \"tw-border-secondary-300\",\n      \"tw-border-solid\",\n      \"hover:tw-bg-background-alt\",\n      \"last:tw-border-0\",\n      this.alignmentClass,\n    ];\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-table\",\n  templateUrl: \"./table.component.html\",\n})\nexport class TableComponent {}\n","<table class=\"tw-w-full tw-table-auto tw-leading-normal tw-text-main\">\n  <thead\n    class=\"tw-text-bold tw-border-0 tw-border-b-2 tw-border-solid tw-border-secondary-300 tw-text-muted\"\n  >\n    <ng-content select=\"[header]\"></ng-content>\n  </thead>\n  <tbody>\n    <ng-content select=\"[body]\"></ng-content>\n  </tbody>\n</table>\n","import { Component } from \"@angular/core\";\n\n/**\n * Component used for styling the tab header/background for both content and navigation tabs\n */\n@Component({\n  selector: \"bit-tab-header\",\n  host: {\n    class:\n      \"tw-h-16 tw-pl-4 tw-bg-background-alt tw-flex tw-items-end tw-border-0 tw-border-b tw-border-solid tw-border-secondary-300\",\n  },\n  template: `<ng-content></ng-content>`,\n})\nexport class TabHeaderComponent {}\n","import { Directive } from \"@angular/core\";\n\n/**\n * Directive used for styling the container for bit tab labels\n */\n@Directive({\n  selector: \"[bitTabListContainer]\",\n  host: {\n    class: \"tw-inline-flex tw-flex-wrap tw-leading-5\",\n  },\n})\nexport class TabListContainerDirective {}\n","import { FocusableOption } from \"@angular/cdk/a11y\";\nimport { Directive, ElementRef, HostBinding, Input } from \"@angular/core\";\n\n/**\n * Directive used for styling tab header items for both nav links (anchor tags)\n * and content tabs (button tags)\n */\n@Directive({ selector: \"[bitTabListItem]\" })\nexport class TabListItemDirective implements FocusableOption {\n  @Input() active: boolean;\n  @Input() disabled: boolean;\n\n  @HostBinding(\"attr.disabled\")\n  get disabledAttr() {\n    return this.disabled || null; // native disabled attr must be null when false\n  }\n\n  constructor(private elementRef: ElementRef) {}\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n\n  click() {\n    this.elementRef.nativeElement.click();\n  }\n\n  @HostBinding(\"class\")\n  get classList(): string[] {\n    return this.baseClassList\n      .concat(this.active ? this.activeClassList : [])\n      .concat(this.disabled ? this.disabledClassList : [])\n      .concat(this.textColorClassList);\n  }\n\n  /**\n   * Classes used for styling tab item text color.\n   * Separate text color class list required to override bootstrap classes in Web.\n   */\n  get textColorClassList(): string[] {\n    if (this.disabled) {\n      return [\"!tw-text-muted\", \"hover:!tw-text-muted\"];\n    }\n    if (this.active) {\n      return [\"!tw-text-primary-500\", \"hover:!tw-text-primary-700\"];\n    }\n    return [\"!tw-text-main\", \"hover:!tw-text-main\"];\n  }\n\n  get baseClassList(): string[] {\n    return [\n      \"tw-block\",\n      \"tw-relative\",\n      \"tw-py-2\",\n      \"tw-px-4\",\n      \"tw-font-semibold\",\n      \"tw-transition\",\n      \"tw-rounded-t\",\n      \"tw-border-0\",\n      \"tw-border-x\",\n      \"tw-border-t-4\",\n      \"tw-border-transparent\",\n      \"tw-border-solid\",\n      \"tw-bg-transparent\",\n      \"hover:tw-underline\",\n      \"focus-visible:tw-z-10\",\n      \"focus-visible:tw-outline-none\",\n      \"focus-visible:tw-ring-2\",\n      \"focus-visible:tw-ring-primary-700\",\n    ];\n  }\n\n  get disabledClassList(): string[] {\n    return [\"!tw-bg-secondary-100\", \"!tw-no-underline\", \"tw-cursor-not-allowed\"];\n  }\n\n  get activeClassList(): string[] {\n    return [\n      \"tw--mb-px\",\n      \"tw-border-x-secondary-300\",\n      \"tw-border-t-primary-500\",\n      \"tw-border-b\",\n      \"tw-border-b-background\",\n      \"tw-bg-background\",\n      \"hover:tw-border-t-primary-700\",\n      \"focus-visible:tw-border-t-primary-700\",\n      \"focus-visible:!tw-text-primary-700\",\n    ];\n  }\n}\n","import { TemplatePortal } from \"@angular/cdk/portal\";\nimport { Component, HostBinding, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-tab-body\",\n  templateUrl: \"tab-body.component.html\",\n})\nexport class TabBodyComponent {\n  private _firstRender: boolean;\n\n  @Input() content: TemplatePortal;\n  @Input() preserveContent = false;\n\n  @HostBinding(\"attr.hidden\") get hidden() {\n    return !this.active || null;\n  }\n\n  @Input()\n  get active() {\n    return this._active;\n  }\n  set active(value: boolean) {\n    this._active = value;\n    if (this._active) {\n      this._firstRender = true;\n    }\n  }\n  private _active: boolean;\n\n  /**\n   * The tab content to render.\n   * Inactive tabs that have never been rendered/active do not have their\n   * content rendered by default for performance. If `preserveContent` is `true`\n   * then the content persists after the first time content is rendered.\n   */\n  get tabContent() {\n    if (this.active) {\n      return this.content;\n    }\n    if (this.preserveContent && this._firstRender) {\n      return this.content;\n    }\n    return null;\n  }\n}\n","<bit-tab-header>\n  <div\n    bitTabListContainer\n    role=\"tablist\"\n    [attr.aria-label]=\"label\"\n    (keydown)=\"keyManager.onKeydown($event)\"\n  >\n    <button\n      bitTabListItem\n      *ngFor=\"let tab of tabs; let i = index\"\n      type=\"button\"\n      role=\"tab\"\n      [id]=\"getTabLabelId(i)\"\n      [active]=\"tab.isActive\"\n      [disabled]=\"tab.disabled\"\n      [attr.aria-selected]=\"selectedIndex === i\"\n      [attr.tabindex]=\"selectedIndex === i ? 0 : -1\"\n      (click)=\"selectTab(i)\"\n    >\n      <ng-container [ngTemplateOutlet]=\"content\"></ng-container>\n\n      <ng-template #content>\n        <ng-template [ngIf]=\"tab.templateLabel\" [ngIfElse]=\"tabTextLabel\">\n          <ng-container [ngTemplateOutlet]=\"tab.templateLabel.templateRef\"></ng-container>\n        </ng-template>\n\n        <ng-template #tabTextLabel>{{ tab.textLabel }}</ng-template>\n      </ng-template>\n    </button>\n  </div>\n</bit-tab-header>\n<div class=\"tw-px-4 tw-pt-5\">\n  <bit-tab-body\n    role=\"tabpanel\"\n    *ngFor=\"let tab of tabs; let i = index\"\n    [id]=\"getTabContentId(i)\"\n    [attr.tabindex]=\"tab.contentTabIndex\"\n    [attr.labeledby]=\"getTabLabelId(i)\"\n    [active]=\"tab.isActive\"\n    [content]=\"tab.content\"\n    [preserveContent]=\"preserveContent\"\n  >\n  </bit-tab-body>\n</div>\n","<ng-template [cdkPortalOutlet]=\"tabContent\"></ng-template>\n","import { FocusKeyManager } from \"@angular/cdk/a11y\";\nimport { coerceNumberProperty } from \"@angular/cdk/coercion\";\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChildren,\n} from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { TabListItemDirective } from \"../shared/tab-list-item.directive\";\n\nimport { TabComponent } from \"./tab.component\";\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n@Component({\n  selector: \"bit-tab-group\",\n  templateUrl: \"./tab-group.component.html\",\n})\nexport class TabGroupComponent\n  implements AfterContentChecked, AfterContentInit, AfterViewInit, OnDestroy\n{\n  private readonly _groupId: number;\n  private readonly destroy$ = new Subject<void>();\n  private _indexToSelect: number | null = 0;\n\n  /**\n   * Aria label for the tab list menu\n   */\n  @Input() label = \"\";\n\n  /**\n   * Keep the content of off-screen tabs in the DOM.\n   * Useful for keeping <audio> or <video> elements from re-initializing\n   * after navigating between tabs.\n   */\n  @Input() preserveContent = false;\n\n  @ContentChildren(TabComponent) tabs: QueryList<TabComponent>;\n  @ViewChildren(TabListItemDirective) tabLabels: QueryList<TabListItemDirective>;\n\n  /** The index of the active tab. */\n  @Input()\n  get selectedIndex(): number | null {\n    return this._selectedIndex;\n  }\n  set selectedIndex(value: number) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n  private _selectedIndex: number | null = null;\n\n  /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n  @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when the tab selection has changed. */\n  @Output() readonly selectedTabChange: EventEmitter<BitTabChangeEvent> =\n    new EventEmitter<BitTabChangeEvent>();\n\n  /**\n   * Focus key manager for keeping tab controls accessible.\n   * https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tablist_role#keyboard_interactions\n   */\n  keyManager: FocusKeyManager<TabListItemDirective>;\n\n  constructor() {\n    this._groupId = nextId++;\n  }\n\n  protected getTabContentId(id: number): string {\n    return `bit-tab-content-${this._groupId}-${id}`;\n  }\n\n  protected getTabLabelId(id: number): string {\n    return `bit-tab-label-${this._groupId}-${id}`;\n  }\n\n  selectTab(index: number) {\n    this.selectedIndex = index;\n  }\n\n  /**\n   * After content is checked, the tab group knows what tabs are defined and which index\n   * should be currently selected.\n   */\n  ngAfterContentChecked(): void {\n    const indexToSelect = (this._indexToSelect = this._clampTabIndex(this._indexToSelect));\n\n    if (this._selectedIndex != indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n\n      if (!isFirstRun) {\n        this.selectedTabChange.emit({\n          index: indexToSelect,\n          tab: this.tabs.toArray()[indexToSelect],\n        });\n      }\n\n      // These values need to be updated after change detection as\n      // the checked content may have references to them.\n      Promise.resolve().then(() => {\n        this.tabs.forEach((tab, index) => (tab.isActive = index === indexToSelect));\n\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n        }\n      });\n\n      // Manually update the _selectedIndex and keyManager active item\n      this._selectedIndex = indexToSelect;\n      if (this.keyManager) {\n        this.keyManager.setActiveItem(indexToSelect);\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.keyManager = new FocusKeyManager(this.tabLabels)\n      .withHorizontalOrientation(\"ltr\")\n      .withWrap()\n      .withHomeAndEnd();\n  }\n\n  ngAfterContentInit() {\n    // Subscribe to any changes in the number of tabs, in order to be able\n    // to re-render content when new tabs are added or removed.\n    this.tabs.changes.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n      // If the selected tab didn't explicitly change, keep the previously\n      // selected tab selected/active\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this.tabs.toArray();\n        let selectedTab: TabComponent | undefined;\n\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Set both _indexToSelect and _selectedIndex to avoid firing a change\n            // event which could cause an infinite loop if adding a tab within the\n            // selectedIndexChange event\n            this._indexToSelect = this._selectedIndex = i;\n            selectedTab = tabs[i];\n            break;\n          }\n        }\n\n        // No active tab found and a tab does exist means the active tab\n        // was removed, so a new active tab must be set manually\n        if (!selectedTab && tabs[indexToSelect]) {\n          tabs[indexToSelect].isActive = true;\n          this.selectedTabChange.emit({\n            index: indexToSelect,\n            tab: tabs[indexToSelect],\n          });\n        }\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private _clampTabIndex(index: number): number {\n    return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n  }\n}\n\nexport class BitTabChangeEvent {\n  /**\n   * The currently selected tab index\n   */\n  index: number;\n  /**\n   * The currently selected tab\n   */\n  tab: TabComponent;\n}\n","import { Directive, TemplateRef } from \"@angular/core\";\n\n/**\n * Used to identify template based tab labels (allows complex labels instead of just plaintext)\n *\n * @example\n * ```\n * <bit-tab>\n *   <ng-template bitTabLabel>\n *     <i class=\"bwi bwi-search\"></i> Search\n *   </ng-template>\n *\n *   <p>Tab Content</p>\n * </bit-tab>\n * ```\n */\n@Directive({\n  selector: \"[bitTabLabel]\",\n})\nexport class TabLabelDirective {\n  constructor(public templateRef: TemplateRef<unknown>) {}\n}\n","<ng-template><ng-content></ng-content></ng-template>\n","import { TemplatePortal } from \"@angular/cdk/portal\";\nimport {\n  Component,\n  ContentChild,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { TabLabelDirective } from \"./tab-label.directive\";\n\n@Component({\n  selector: \"bit-tab\",\n  templateUrl: \"./tab.component.html\",\n  host: {\n    role: \"tabpanel\",\n  },\n})\nexport class TabComponent implements OnInit {\n  @Input() disabled = false;\n  @Input(\"label\") textLabel = \"\";\n\n  /**\n   * Optional tabIndex for the tabPanel that contains this tab's content.\n   *\n   * If the tabpanel does not contain any focusable elements or the first element with content is not focusable,\n   * this should be set to 0 to include it in the tab sequence of the page.\n   *\n   * @remarks See note 4 of https://www.w3.org/WAI/ARIA/apg/patterns/tabpanel/\n   */\n  @Input() contentTabIndex: number | undefined;\n\n  @ViewChild(TemplateRef, { static: true }) implicitContent: TemplateRef<unknown>;\n  @ContentChild(TabLabelDirective) templateLabel: TabLabelDirective;\n\n  private _contentPortal: TemplatePortal | null = null;\n\n  get content(): TemplatePortal | null {\n    return this._contentPortal;\n  }\n\n  isActive: boolean;\n\n  constructor(private _viewContainerRef: ViewContainerRef) {}\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(this.implicitContent, this._viewContainerRef);\n  }\n}\n","import { FocusableOption } from \"@angular/cdk/a11y\";\nimport { AfterViewInit, Component, HostListener, Input, OnDestroy, ViewChild } from \"@angular/core\";\nimport { IsActiveMatchOptions, RouterLinkActive } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { TabListItemDirective } from \"../shared/tab-list-item.directive\";\n\nimport { TabNavBarComponent } from \"./tab-nav-bar.component\";\n\n@Component({\n  selector: \"bit-tab-link\",\n  templateUrl: \"tab-link.component.html\",\n})\nexport class TabLinkComponent implements FocusableOption, AfterViewInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n\n  @ViewChild(TabListItemDirective) tabItem: TabListItemDirective;\n  @ViewChild(\"rla\") routerLinkActive: RouterLinkActive;\n\n  readonly routerLinkMatchOptions: IsActiveMatchOptions = {\n    queryParams: \"ignored\",\n    matrixParams: \"ignored\",\n    paths: \"subset\",\n    fragment: \"ignored\",\n  };\n\n  @Input() route: string | any[];\n  @Input() disabled = false;\n\n  @HostListener(\"keydown\", [\"$event\"]) onKeyDown(event: KeyboardEvent) {\n    if (event.code === \"Space\") {\n      this.tabItem.click();\n    }\n  }\n\n  get active() {\n    return this.routerLinkActive?.isActive ?? false;\n  }\n\n  constructor(private _tabNavBar: TabNavBarComponent) {}\n\n  focus(): void {\n    this.tabItem.focus();\n  }\n\n  ngAfterViewInit() {\n    // The active state of tab links are tracked via the routerLinkActive directive\n    // We need to watch for changes to tell the parent nav group when the tab is active\n    this.routerLinkActive.isActiveChange\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((_) => this._tabNavBar.updateActiveLink());\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<a\n  bitTabListItem\n  [routerLink]=\"disabled ? null : route\"\n  routerLinkActive\n  [routerLinkActiveOptions]=\"routerLinkMatchOptions\"\n  #rla=\"routerLinkActive\"\n  [active]=\"rla.isActive\"\n  [disabled]=\"disabled\"\n  [attr.aria-disabled]=\"disabled\"\n  ariaCurrentWhenActive=\"page\"\n  role=\"link\"\n>\n  <ng-content></ng-content>\n</a>\n","import { FocusKeyManager } from \"@angular/cdk/a11y\";\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  forwardRef,\n  Input,\n  QueryList,\n} from \"@angular/core\";\n\nimport { TabLinkComponent } from \"./tab-link.component\";\n\n@Component({\n  selector: \"bit-tab-nav-bar\",\n  templateUrl: \"tab-nav-bar.component.html\",\n})\nexport class TabNavBarComponent implements AfterContentInit {\n  @ContentChildren(forwardRef(() => TabLinkComponent)) tabLabels: QueryList<TabLinkComponent>;\n  @Input() label = \"\";\n\n  /**\n   * Focus key manager for keeping tab controls accessible.\n   * https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tablist_role#keyboard_interactions\n   */\n  keyManager: FocusKeyManager<TabLinkComponent>;\n\n  ngAfterContentInit(): void {\n    this.keyManager = new FocusKeyManager(this.tabLabels)\n      .withHorizontalOrientation(\"ltr\")\n      .withWrap()\n      .withHomeAndEnd();\n  }\n\n  updateActiveLink() {\n    // Keep the keyManager in sync with active tabs\n    const items = this.tabLabels.toArray();\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].active) {\n        this.keyManager.updateActiveItem(i);\n      }\n    }\n  }\n}\n","<bit-tab-header>\n  <nav bitTabListContainer [attr.aria-label]=\"label\" (keydown)=\"keyManager.onKeydown($event)\">\n    <ng-content></ng-content>\n  </nav>\n</bit-tab-header>\n","import { from, Observable, of, throwError } from \"rxjs\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nexport type FunctionReturningAwaitable =\n  | (() => unknown)\n  | (() => Promise<unknown>)\n  | (() => Observable<unknown>);\n\nexport function functionToObservable(func: FunctionReturningAwaitable): Observable<unknown> {\n  let awaitable: unknown;\n  try {\n    awaitable = func();\n  } catch (error) {\n    return throwError(() => error);\n  }\n\n  if (Utils.isPromise(awaitable)) {\n    return from(awaitable);\n  }\n\n  if (awaitable instanceof Observable) {\n    return awaitable;\n  }\n\n  return of(awaitable);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + (chunkId === 768 ? \"encrypt-worker\" : chunkId) + \".\" + {\"136\":\"d6cbb1a4008c7094346b\",\"167\":\"ceb6f4fd21a7ea018844\",\"182\":\"0213c9ca535f6fe6aef1\",\"271\":\"c8b1e1a8d5e6f6fc6f9a\",\"488\":\"77144198d88d9c035bc9\",\"584\":\"238f402a694e2a33f299\",\"612\":\"88f86a403f06e9ec77cd\",\"754\":\"8aacbab414f946ccfb6f\",\"768\":\"61627911fb72258358f8\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t148: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_web_vault\"] = self[\"webpackChunk_bitwarden_web_vault\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [734], () => (__webpack_require__(82746)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","inProgress","dataWebpackPrefix","RegisterFormModule","BaseAcceptComponent","constructor","router","platformUtilService","i18nService","route","stateService","loading","authed","requiredParameters","failedShortMessage","failedMessage","ngOnInit","this","queryParams","pipe","subscribe","qParams","error","some","e","errorMessage","getIsAuthenticated","authedHandler","message","email","unauthedHandler","t","showToast","timeout","navigate","EventView","data","humanReadableMessage","appIcon","appName","userId","userName","userEmail","date","ip","type","installationId","systemUser","BaseEventsComponent","eventService","exportService","platformUtilsService","logService","fileDownloadService","loaded","dirtyDates","defaultDates","getDefaultDateFilters","start","end","exportEvents","appApiPromiseUnfulfilled","dates","parseDates","exportPromise","export","loadEvents","clearExisting","events","promise","loadAndParseEvents","continuationToken","refreshPromise","morePromise","result","length","concat","startDate","endDate","response","requestEvents","Promise","all","map","r","actingUserId","eventInfo","getEventInfo","user","getUserName","name","ipAddress","formatDateFilters","getEventExport","fileName","getFileName","exportFileName","download","blobData","blobOptions","UserConfirmComponent","cryptoService","onConfirmedUser","dontAskAgain","publicKey","fingerprint","getFingerprint","buffer","join","submit","setAutoConfirmFingerprints","emit","BasePeopleComponent","apiService","searchService","validationService","modalService","searchPipe","userNamePipe","statusMap","Map","users","pagedUsers","allUsers","activeUsers","didScroll","pageSize","pagedUsersCount","allCount","invitedCount","has","userStatusType","Invited","get","acceptedCount","Accepted","confirmedCount","Confirmed","revokedCount","Revoked","showConfirmUsers","showBulkConfirmUsers","load","getUsers","clear","status","set","L","Array","isArray","sort","forEach","u","push","filter","selectAll","resetPaging","loadMore","pagedLength","pagedSize","slice","checkUser","select","checked","filteredUsers","transform","searchText","selectCount","i","invite","edit","removeUserConfirmationDialog","showDialog","remove","actionPromise","deleteUser","id","removeUser","showError","revoke","revokeWarningMessage","revokeUser","restore","restoreUser","reinvite","reinviteUser","confirm","confirmUser","self","mapIndex","indexOf","splice","updateUser","publicKeyResponse","getUserPublicKey","autoConfirm","getAutoConfirmFingerPrints","modal","openViewRef","confirmModalRef","comp","formPromise","close","info","isSearching","isSearchable","isPaging","searching","getCheckedUsers","index","NotPremiumDirective","templateRef","viewContainer","getCanAccessPremium","createEmbeddedView","premiumRequired","PremiumBadgeComponent","messagingService","send","keyConnectorService","userVerificationService","usesKeyConnector","disableRequestOTP","sentCode","secret","getUsesKeyConnector","processChanges","value","valueChanges","requestOTP","writeValue","obj","setValue","registerOnChange","fn","onChange","registerOnTouched","setDisabledState","isDisabled","disable","enable","UserVerificationComponent","provide","multi","useExisting","opacity","EventService","policyService","policies$","policies","d","Date","getFullYear","getMonth","getDate","setDate","toDateTimeLocalString","filterStart","filterEnd","isNaN","getTime","Error","toISOString","ev","options","EventOptions","appInfo","getAppInfo","deviceType","getEventMessage","msg","humanReadableMsg","formatCipherId","getShortId","cipherId","formatCollectionId","collectionId","formatGroupId","groupId","formatOrgUserId","organizationUserId","formatPolicyId","policy","p","policyId","p1","formatProviderUserId","providerUserId","formatProviderOrganizationId","providerOrganizationId","shortId","organizationId","cipherInfo","a","makeAnchor","setAttribute","outerHTML","providerId","document","createElement","title","innerHTML","substring","pad","getHours","getMinutes","num","norm","Math","floor","abs","PolicyListService","addPolicies","getPolicies","RouterService","activatedRoute","titleService","previousUrl","undefined","currentUrl","url","event","child","firstChild","titleId","snapshot","rawTitle","updateUrl","doNotSaveUrl","newTitle","setTitle","setPreviousUrl","getPreviousUrl","AccountSettings","vaultTimeout","Account","init","super","settings","Object","assign","StateService","storageService","secureStorageService","memoryStorageService","stateMigrationService","stateFactory","useAccountCache","addAccount","account","getEncryptedCiphers","reconcileOptions","defaultInMemoryOptions","setEncryptedCiphers","getEncryptedCollections","setEncryptedCollections","getEncryptedFolders","setEncryptedFolders","getEncryptedSends","setEncryptedSends","getLastSync","setLastSync","FooterComponent","year","toString","version","getApplicationVersion","FrontendLayoutComponent","body","classList","add","ngOnDestroy","NavbarComponent","tokenService","providerService","syncService","organizationService","selfHosted","providers","isSelfHost","getName","getEmail","getUserId","trim","fullSync","getAll","organizations$","orgs","lock","logOut","ProductSwitcherContentComponent","products$","combineLatest","paramMap","routeOrg","find","o","smOrg","canAccessSecretsManager","products","pm","icon","appRoute","marketingRoute","sm","bento","other","ProductSwitcherComponent","changeDetector","isEnabled","buttonType","ngAfterViewInit","detectChanges","ProductSwitcherModule","CoreOrganizationModule","OrganizationUserUpdateRequest","collections","groups","OrganizationUserInviteRequest","emails","OrganizationUserAdminView","UserAdminService","organizationUserService","userResponse","getOrganizationUser","includeGroups","view","decryptMany","save","request","accessAll","permissions","putOrganizationUser","postOrganizationUserInvite","promises","resetPasswordEnrolled","c","hidePasswords","readOnly","CollectionAdminService","collectionResponse","getManyCollectionsWithAccessDetails","getCollectionAccessDetails","collection","encrypt","postCollection","putCollection","delete","deleteCollection","orgKey","getOrgKey","decryptToUtf8","externalId","anyResponse","isCollectionAccessDetailsResponse","model","key","encryptedString","group","GroupRequest","OrganizationGroupBulkRequest","ids","GroupService","orgId","deleteMany","groupIds","listResponse","gr","members","postGroup","putGroup","GroupResponse","getResponseProperty","GroupDetailsResponse","CollectionAccessSelectionView","CollectionAdminView","g","GroupView","static","OrganizationCreateModule","changedBusinessOwned","OrganizationInformationComponent","nameOnly","createOrganization","isProvider","acceptingSponsorship","OrganizationPermissionsGuard","canActivate","state","org","params","createUrlTree","isOwner","enabled","permissionsCallback","organizationPermissions","root","queryParamMap","itemId","OrganizationRedirectGuard","customRedirect","autoRedirectCallback","redirectPath","OrganizationSwitcherComponent","activeOrganization","OrganizationLayoutComponent","_destroy","Subject","organization$","takeUntil","mergeMap","next","complete","canShowVaultTab","organization","canShowSettingsTab","canShowMembersTab","canShowGroupsTab","canShowReportsTab","canShowBillingTab","getReportTabLabel","useEvents","EntityEventsComponent","showUser","orgUsersUserIdMap","orgUsersIdMap","getAllUsers","entity","getEventsProviderUser","entityId","getEventsOrganizationUser","getEventsCipher","dialogRef","OrgUpgradeDialogComponent","OrganizationUserBulkConfirmRequest","keys","BulkConfirmComponent","publicKeys","fingerprints","statuses","done","excludedUsers","isAccepted","getPublicKeys","entry","getCryptoKey","userIdsWithKeys","encryptedKey","rsaEncrypt","postConfirmRequest","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","BulkRemoveComponent","deleteUsers","deleteManyOrganizationUsers","removeUsersWarning","BulkStatusComponent","PolicyRequest","BasePolicy","display","BasePolicyComponent","policyResponse","loadData","patchValue","buildRequestData","buildRequest","policiesEnabledMap","resolve","PoliciesModule","DisableSendPolicy","description","component","DisableSendPolicyComponent","MasterPasswordPolicy","MasterPasswordPolicyComponent","formBuilder","minComplexity","minLength","requireUpper","requireLower","requireNumbers","requireSpecial","showKeyConnectorInfo","passwordScores","keyConnectorEnabled","PasswordGeneratorPolicy","PasswordGeneratorPolicyComponent","defaultType","useUpper","useLower","useNumbers","useSpecial","minNumbers","minSpecial","minNumberWords","capitalize","includeNumber","defaultTypes","PersonalOwnershipPolicy","PersonalOwnershipPolicyComponent","RequireSsoPolicy","RequireSsoPolicyComponent","useSso","singleOrgEnabled","ResetPasswordPolicy","ResetPasswordPolicyComponent","useResetPassword","autoEnrollEnabled","SendOptionsPolicy","SendOptionsPolicyComponent","disableHideEmail","SingleOrgPolicy","SingleOrgPolicyComponent","TwoFactorAuthenticationPolicy","TwoFactorAuthenticationPolicyComponent","PolicyEditComponent","policyApiService","componentFactoryResolver","cdr","onSavedPolicy","policyType","factory","resolveComponentFactory","policyComponent","policyFormRef","createComponent","instance","getPolicy","statusCode","Enabled","putPolicy","PoliciesComponent","policyListService","parent","first","policyIdFromEvents","orgPolicy","orgPolicies","op","editModalRef","OrganizationUpdateRequest","CountBasedLocalizationKey","singular","plural","getKey","count","OrganizationContentSummaryItem","localizationKeyOptions","localizationKey","OrganizationContentSummary","totalItemCount","itemCountByType","DeleteOrganizationComponent","cipherService","organizationApiService","deleteOrganizationRequestType","organizationContentSummary","onSuccess","masterPassword","then","organizationName","buildOrganizationContentSummary","organizationItems","getAllFromApiForOrganization","item","deletedDate","cipherType","getOrganizationItemCountByType","getOrganizationItemLocalizationKeysByType","items","viewApiKey","rotateApiKey","AccountComponent","canManageBilling","canUseApi","useApi","businessName","billingEmail","identifier","hasPublicAndPrivateKeys","orgShareKey","orgKeys","makeKeyPair","deleteOrganization","deleteModalRef","purgeVault","purgeModalRef","apiKeyModalRef","keyType","postKey","getOrCreateApiKey","bind","scope","grantType","apiKeyTitle","apiKeyWarning","apiKeyDescription","rotateApiKeyModalRef","isRotation","recoveryCode","manage","TwoFactorSetupComponent","duoComp","openModal","duoModalRef","onUpdated","updateStatus","getTwoFactorProviders","getTwoFactorOrganizationProviders","filterProvider","routes","path","children","pathMatch","canManagePolicies","canAccessImportExport","canManageSso","canManageScim","loadChildren","m","OrganizationImportExportModule","OrganizationSettingsRoutingModule","OrganizationSettingsModule","SettingsComponent","destroy$","findSortedIndex","sortedArray","val","compareFn","low","high","mid","FormSelectionList","controlFactory","allItems","selectedItems","deselectedItems","formArray","selectItems","initialValue","selectItem","deselectItems","deselectItem","deselectAll","findIndex","selectedOption","sortedInsertIndex","newControl","insert","deselectedOption","removeAt","populateItems","selectedItem","nextId","MultiSelectComponent","ngControl","removeSelectedItems","disabled","searchInputId","onItemsConfirmed","valueAccessor","placeholder","loadingText","isSelected","selected","onDropdownClosed","updatedBaseItems","baseItems","notifyOnChange","notifyOnTouched","onBlur","ariaDescribedBy","_ariaDescribedBy","searchInput","nativeElement","labelForId","required","_required","control","hasValidator","hasError","touched","errors","UserTypePipe","unknownText","handleBlur","selectionList","PermissionMode","AccessSelectorComponent","permissionControl","initialPermission","fg","permission","readonly","accessAllItems","permissionMode","Edit","_itemComparator","formGroup","itemType","permissionList","perm","labelId","_permissionMode","Hidden","getRawValue","itemIcon","controls","notifyOnTouch","pauseChangeNotification","v","permissionLabelId","accessAllLabelId","canEditItemPermission","b","collator","compare","listName","labelName","CollectionPermission","AccessItemType","convertToPermission","ViewExceptPass","View","EditExceptPass","convertToSelectionView","hidePassword","includes","AccessSelectorModule","CollectionDialogTabType","CollectionDialogResult","CollectionDialogComponent","groupService","collectionService","characters","nestOptions","accessItems","String","char","forbiddenCharacters","access","invalid","collectionView","Saved","Deleted","tabIndex","initialTab","Info","of","shareReplay","refCount","bufferSize","groups$","switchMap","useGroups","collectionDetails","mapGroupToAccessItemView","mapUserToAccessItemView","nameParts","split","parseName","deletedParentName","accessSelections","selection","mapToAccessSelections","parentCollectionId","editMode","cancel","Canceled","role","openCollectionDialog","dialogService","config","open","CollectionDialogModule","SharedOrganizationModule","cipher","copy","generatePassword","checkPassword","togglePasswordCount","upgradeOrganization","removeUri","launch","loginUriMatchChanged","addUri","togglePassword","toggleCardNumber","toggleCardCode","organizationChanged","viewHistory","repromptChanged","toggleFavorite","AddEditComponent","folderService","auditService","totpService","passwordGenerationService","eventCollectionService","passwordRepromptService","originalCipher","componentName","allowOwnershipAssignment","ownershipOptions","allowPersonal","cloneMode","canEditAnyCollection","loadCollections","loadCipher","getCipherAdmin","encryptCipher","saveCipher","putCipherAdmin","postCipherAdmin","deleteCipher","isDeleted","deleteCipherAdmin","putDeleteCipherAdmin","EmergencyAccessAcceptRequest","AcceptEmergencyComponent","token","postEmergencyAccessAccept","replace","OrganizationUserAcceptRequest","AcceptOrganizationComponent","prepareAcceptRequest","postOrganizationUserAccept","setOrganizationInvitation","orgName","performResetPasswordAutoEnroll","getKeys","encKey","getEncKey","resetPasswordKey","policyList","getPoliciesByToken","mapPoliciesFromToken","getResetPasswordPolicyOptions","PasswordHintRequest","loginService","successRoute","postPasswordHint","onSuccessfulSubmit","HintComponent","vaultTimeoutService","vaultTimeoutSettingsService","environmentService","ngZone","pin","showPassword","pinLock","webVaultHostname","invalidPinAttempts","activeAccount$","concatMap","handlePinRequiredUnlock","handleMasterPasswordRequiredUnlock","unlockBiometric","biometricLock","success","doContinue","input","getElementById","isStable","focus","onStable","take","doUnlockWithPin","failed","kdf","getKdfType","kdfIterations","getKdfIterations","pinSet","makeKeyFromPin","getDecryptedPinProtected","protectedPin","getProtectedPin","setKeyAndContinue","doUnlockWithMasterPassword","makeKey","passwordValid","getKeyHash","compareAndUpdateKeyHash","serverKeyHash","hashPassword","masterPasswordHash","postAccountVerifyPassword","localKeyHash","setKeyHash","decPin","pinKey","makePinKey","setDecryptedPinProtected","setKey","setEverBeenUnlocked","disableFavicon","getDisableFavicon","setDisableFavicon","isPinLockSet","supportsBiometric","isBiometricLockSet","hasKeyStored","supportsSecureStorage","biometricText","getBiometricText","hideInput","webVaultUrl","getWebVaultUrl","vaultUrl","LockComponent","routerService","navigateByUrl","CaptchaIFrame","win","iframeId","successCallback","errorCallback","infoCallback","parseFunction","parseMessage","connectorLink","stop","sendMessage","iframe","src","contentWindow","postMessage","base64Encode","str","btoa","encodeURIComponent","match","fromCharCode","cleanup","removeEventListener","createParams","URLSearchParams","JSON","stringify","location","href","initComponent","addEventListener","validMessage","parts","origin","parsedMessage","parse","height","width","siteKey","locale","translationLocale","AuthRequestType","CaptchaProtectedComponent","captchaSiteKey","captchaToken","setupCaptcha","captcha","window","showCaptcha","handleCaptchaRequired","PasswordLogInCredentials","twoFactor","SsoLogInCredentials","code","codeVerifier","redirectUrl","PasswordlessLogInCredentials","accessCode","authRequestId","decKey","localPasswordHash","PasswordlessCreateAuthRequest","deviceIdentifier","fingerprintPhrase","startPasswordlessLogin","LoginWithDeviceComponent","cryptoFunctionService","appIdService","authService","anonymousHubService","showResendNotification","twoFactorRoute","forcePasswordResetRoute","getCurrentNavigation","getPushNotifcationObs$","confirmResponse","buildAuthRequest","reqResponse","postAuthRequest","passwordlessRequest","createHubConnection","setTimeout","stopHubConnection","requestId","getAuthResponse","requestApproved","credentials","buildLoginCredntials","loginResponse","logIn","requiresTwoFactor","onSuccessfulLoginTwoFactorNavigate","forcePasswordReset","onSuccessfulLoginForceResetNavigate","saveEmailSettings","onSuccessfulLogin","onSuccessfulLoginNavigate","authRequestKeyPair","rsaGenerateKeyPair","getAppId","AuthenticateAndUnlock","rsaDecrypt","decMasterPasswordHash","localHashedPassword","formValidationErrorService","validatedEmail","paramEmailSet","rememberEmail","loggedEmail","selfHostedDomain","hasBaseUrl","queryParamsEmail","setEmail","getRememberedEmail","getRememberEmail","markAllAsTouched","errorText","getErrorToastMessage","setFormValues","launchSsoBrowser","clientId","ssoRedirectUri","passwordOptions","uppercase","lowercase","numbers","special","ssoCodeVerifier","codeVerifierHash","hash","codeChallenge","setSsoState","setSsoCodeVerifier","webUrl","launchUri","validateEmail","markAsTouched","toggleValidateEmail","getLoginWithDevice","reset","setRememberEmail","getFormValidationErrors","shift","errorName","errorTag","charAt","toUpperCase","controlName","res","getKnownDevice","showLoginWithDevice","goToHint","LoginComponent","showResetPasswordAutoEnrollWarning","showPasswordless","goAfterLogIn","premium","plan","sponsorshipToken","getOrganizationInvitation","resetPasswordPolicy","masterPasswordPolicyOptions$","enforcedPasswordPolicyOptions","strengthResult","passwordStrength","getPasswordStrengthUserInput","masterPasswordScore","score","evaluateMasterPassword","policiesData","clearValues","setRememberedEmail","clearValidators","updateValueAndValidity","valid","userInput","atPosition","substr","toLowerCase","DeleteRecoverRequest","RecoverDeleteComponent","postAccountRecoverDelete","TwoFactorRecoveryRequest","RecoverTwoFactorComponent","makePreloginKey","postTwoFactorRecover","continuing","leaving","getManagingOrganization","convert","migrateUser","removeConvertAccountRequired","leave","RemovePasswordComponent","OrganizationUserResetPasswordEnrollmentRequest","SetPasswordRequest","masterPasswordHint","orgIdentifier","enforcedPolicyOptions","strongPassword","setupSubmitActions","makeEncKey","remakeEncKey","performSubmitActions","masterPasswordRetype","passwordStrengthResult","getStrengthResult","getPasswordScoreText","color","text","syncLoading","hint","resetPasswordAutoEnroll","getAutoEnrollStatus","resetPasswordEnabled","getMasterPasswordPoliciesForInvitedUsers","setPassword","onSetPasswordSuccess","userEncKey","resetRequest","putOrganizationUserResetPasswordEnrollment","onSuccessfulChangePassword","confirmField","setKdfType","setKdfIterations","setEncKey","setEncPrivateKey","SetPasswordComponent","loggingIn","changePasswordRoute","getSsoCodeVerifier","getSsoState","checkState","getOrgIdentifierFromState","redirectUri","returnUri","includeUserIdentifier","initiateSsoFormPromise","preValidateSso","authorizeUrl","buildAuthorizeUrl","sameWindow","getIdentityUrl","userIdentifier","getSsoUserIdentifier","orgIdFromState","sso","resetMasterPassword","onSuccessfulLoginChangePasswordNavigate","stateSplit","checkStateSplit","SsoComponent","storedIdentifier","getSsoOrgIdentifier","setSsoOrganizationIdentifier","cookie","ReferenceEventRequest","VerticalStep","subLabel","applyBorder","VerticalStepContentComponent","onSelectStep","selectStep","selectStepByIndex","VerticalStepperComponent","activeClass","isNextButtonHidden","steps","selectedIndex","isStepDisabled","_","completed","RegisterRequest","referenceData","captchaResponse","InputsFieldMatch","matchTo","inputsMatchError","inputsDoesntMatchError","field","fieldMatchTo","fieldCtrl","fieldMatchToCtrl","setErrors","RegisterComponent","isInTrialFlow","createdAccount","showTerms","showErrorSummary","confirmMasterPassword","validateInputsDoesntMatch","acceptPolicies","acceptPoliciesValidation","validator","validateFormInputsMatch","accountCreated","captchaBypassToken","registerResponse","registerAccount","buildRegisterRequest","successful","captchaRequired","validateRegistration","isValid","hashedPassword","orgInvite","postRegister","RegisterFormComponent","referenceDataValue","queryParamEmail","LogoForbesComponent","LogoUSNewsComponent","EnterpriseContentComponent","TeamsContentComponent","ConfirmationDetailsComponent","BillingComponent","previousStep","additionalSeats","product","orgInfoForm","stepBack","changedCountry","DefaultContentComponent","Enterprise1ContentComponent","Enterprise2ContentComponent","Teams1ContentComponent","Teams2ContentComponent","LogoCnetComponent","CnetEnterpriseContentComponent","CnetIndividualContentComponent","CnetTeamsContentComponent","AbmEnterpriseContentComponent","AbmTeamsContentComponent","billingSuccess","stepSelectionChange","navigateToOrgVault","navigateToOrgInvite","ValidOrgParams","ValidLayoutParams","TrialInitiationComponent","titleCasePipe","orgInfoSubLabel","orgLabel","billingSubLabel","layout","accountCreateOnly","useTrialStepper","trialFlowOrgs","teams","enterprise","families","routeFlowOrgs","free","individual","layouts","orgInfoFormGroup","validators","updateOn","referenceDataId","referenceId","pop","reference","values","flow","setupFamilySponsorship","previouslySelectedIndex","verticalStepper","subLabelText","previous","WebAuthnIFrame","webAuthnNewTab","btnText","append","allow","URL","twoFactorService","remember","webAuthnReady","providerType","selectedProviderType","webAuthnSupported","webAuthn","twoFactorEmail","loginRoute","supportsWebAuthn","webAuthnAllow","authing","getProviders","needsLock","getDefaultProvider","cleanupWebAuthn","providerData","authWebAuthn","host","Host","sig_request","Signature","submit_callback","f","sig","querySelector","Email","size","sendEmail","doSubmit","logInTwoFactor","doToast","emailPromise","authRequestAccessCode","postTwoFactorEmail","authingWithPassword","authingWithSso","authingWithUserApiKey","authingWithPasswordless","Window","onProviderSelected","onRecoverSelected","getSupportedProviders","choose","recover","TwoFactorOptionsComponent","TwoFactorComponent","anotherMethod","twoFactorOptionsModal","provider","PasswordRequest","currentMasterPassword","verifyUser","newMasterPasswordHash","postPassword","UpdatePasswordComponent","UpdateTempPasswordRequest","newKey","newPasswordHash","newEncKey","putUpdateTempPassword","UpdateTempPasswordComponent","VerifyEmailRequest","VerifyEmailTokenComponent","postAccountVerifyEmailToken","refreshIdentityToken","VerifyDeleteRecoverRequest","VerifyRecoverDeleteComponent","postAccountRecoverDeleteToken","HomeGuard","authStatus","getAuthStatus","UserLayoutComponent","check","selectedChanged","filterSelected","EntityUsersComponent","search","onEditedUsers","organizationUserType","organizationUserStatusType","showSelected","selectedCount","loadUsers","searchedUsers","scrollViewportStyle","getGroupUsers","s","getCollectionUsers","selections","putGroupUsers","putCollectionUsers","CollectionsComponent","canCreate","pagedCollectionsCount","canCreateNewCollections","decryptCollections","canViewAssignedCollections","getUserCollections","assignedCollections","canViewAllCollections","getCollections","pagedCollections","canEdit","canDelete","planProductType","maxCollections","dialogBodyText","orgCanManageBilling","dialog","lastValueFrom","closed","removeCollection","usersModalRef","entityName","canEditAssignedCollections","canDeleteAnyCollection","canDeleteAssignedCollections","GroupAddEditTabType","GroupAddEditDialogResultType","GroupAddEditComponent","changeDetectorRef","ResultType","groupForm","groupView","formValue","orgCollections$","from","orgMembers$","groupDetails$","catchError","gc","toggleAllVisible","deleteAllSelected","GroupsComponent","ModalTabType","pagedGroupsCount","refreshGroups$","BehaviorSubject","_searchText","updateSearchedGroups","visibleGroups","pagedGroups","searchedGroups","tap","toCollectionMap","collectionMap","details","collectionNames","startingTabIndex","removeGroup","groupRow","groupsToDelete","deleteMessage","target","decryptedCollections","ManageComponent","PipesModule","CollectionBadgeModule","GroupBadgeModule","VaultFilterService","collectionAdminService","_collections","ReplaySubject","filteredCollections$","asObservable","collectionTree$","buildCollectionTree","loadSubscriptions","_organizationFilter","reloadCollections","getValue","noneCollection","VaultFilterModule","useClass","VaultFilter","isFavorites","selectedCipherTypeNode","node","selectedOrganizationNode","cipherStatus","cipherTypeId","folderId","selectedFolderNode","selectedCollectionNode","resetFilter","resetOrganization","buildFilter","cipherPassesFilter","favorite","collectionIds","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","emergencyAccessId","hasUpdatedKey","fileEl","files","saveCipherAttachment","cipherDomain","decrypt","attachment","deleteCipherAttachment","attachments","downloading","canAccessAttachments","getAttachmentData","getSingleMessage","fetch","Request","cache","encBuf","decBuf","decryptFromBytes","hasEncKey","canAccessPremium","reuploadCipherAttachment","admin","saveAttachmentRawWithServer","foundAttachment","a2","file","saveAttachmentWithServer","attachmentId","deleteAttachmentWithServer","reupload","viewOnly","showFixOldAttachments","AttachmentsComponent","deleteCipherAttachmentAdmin","allowSelectNone","onSavedCollections","loadCipherCollections","selectedCollectionIds","saveCollections","getAllDecrypted","saveCollectionsWithServer","putCipherCollectionsAdmin","EnrollMasterPasswordReset","modalRef","toastStringRef","verification","keyString","onFilterSelect","onAdd","toggleCollapse","onEdit","VaultFilterSectionComponent","vaultFilterService","injector","collapsedFilterNodes","Set","injectors","collapsedFilterNodes$","nodes","section","data$","headerNode","headerInfo","header","filters","isOrganizationFilter","isAllVaultsSelected","activeFilter","isNodeSelected","filterNode","action","editInfo","addInfo","showAddButton","showAddLink","optionsInfo","divider","isCollapsed","setCollapsedFilterNodes","createInjector","inject","OptionsInput","useValue","LinkSsoComponent","ngAfterContentInit","toggleResetPasswordEnrollment","unlinkSso","OrganizationOptionsComponent","allowEnrollmentChanges","usePolicies","showEnrolledStatus","deleteSsoUser","allowMultipleModals","searchTextChanged","activeFilterChanged","onSearchTextChanged","onAddFolder","onEditFolder","isLoaded","applyOrganizationFilter","orgNode","setOrganizationFilter","expandOrgFilter","applyVaultFilter","applyTypeFilter","applyFolderFilter","folderNode","applyCollectionFilter","collectionNode","addFolder","editFolder","folder","filtersList","searchPlaceholder","buildAllFilters","getDefaultFilter","filteredFolders$","folders","removeInvalidFolderSelection","removeInvalidCollectionSelection","firstValueFrom","typeFilter","builderFilter","organizationFilter","addOrganizationFilter","addTypeFilter","folderFilter","addFolderFilter","collectionFilter","addCollectionFilter","trashFilter","addTrashFilter","singleOrgPolicy","policyAppliesToUser","personalVaultPolicy","addAction","organizationTree$","showHeader","isSelectable","buildTypeTree","folderTree$","VaultFilterComponent","_organization","CollectionBulkDeleteRequest","BulkDeleteDialogResult","openBulkDeleteDialog","BulkDeleteDialogComponent","permanent","cipherIds","deleteCiphersAdmin","deleteCiphers","deleteCollections","deleteManyWithServer","softDeleteManyWithServer","deleteRequest","deleteManyCiphersAdmin","putDeleteManyCiphersAdmin","deleteManyCollections","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","ciphers","deleted","accessEvents","searchPending","searchTimeout","deletedFilter","applyFilter","reload","refresh","indexedCiphers","clearTimeout","doSearch","selectCipher","rightClickCipher","addCipher","addCipherOptions","searchCiphers","BulkMoveDialogResult","BulkMoveDialogComponent","moveManyWithServer","Moved","folders$","folderViews$","BulkRestoreDialogResult","BulkRestoreDialogComponent","restoreManyWithServer","Restored","isChecked","BulkShareDialogResult","BulkShareDialogComponent","nonShareableCount","organizations","shareableCiphers","writeableCollections","checkedCollectionIds","shareManyWithServer","Shared","hasOldAttachments","allCollections","filterCollections","canSave","EllipsisPipe","limit","completeWords","ellipsis","lastIndexOf","OrganizationNameBadgeComponent","onOrganizationClicked","profileName","textColor","emitOnOrganizationClicked","GetGroupNameFromIdPipe","GroupNameBadgeComponent","shownGroups","showXMore","selectedGroups","xMoreCount","GetCollectionNameFromIdPipe","CollectionNameBadgeComponent","shownCollections","GetOrgNameFromIdPipe","bulkMove","bulkShare","bulkRestore","editCollection","selectRow","navigateCollection","clone","share","editCipherCollections","checkAll","bulkDelete","showAddNew","onAttachmentsClicked","onShareClicked","onEditCipherCollectionsClicked","onCloneClicked","onOrganzationBadgeClicked","userHasPremiumAccess","noItemIcon","pageSizeLimit","isAllChecked","currentPagedCiphersCount","currentPagedCollectionsCount","refreshing","pagedCiphers","searchedCollections","filteredCollections","filteredCiphers","updateSearchedCollections","pageSpaceLeft","collectionsToAdd","totalRows","uri","repromptCipher","deleteCipherWithServer","selectedIds","selectedCipherIds","restoreWithServer","selectedCiphers","typeI18nKey","aType","protectedFields","displayTotpCopyButton","login","totp","getCode","viewPassword","copyToClipboard","collect","checkRow","hasTotp","organizationUseTotp","tab","deleteWithServer","softDeleteWithServer","reprompt","showPasswordPrompt","VaultItemsComponent","onEventsClicked","allCiphers","initOrganization","changeOrganization","loadCiphers","indexCiphers","refreshCollections","getCollectionNodeFromTree","selectedCollections","tabType","BreadcrumbComponent","click","onClick","args","BreadcrumbsComponent","show","breadcrumbs","breadcrumbList","toArray","beforeOverflow","hasOverflow","overflow","afterOverflow","addCollection","BroadcasterSubscriptionId","VaultComponent","broadcasterService","trashCleanupWarning","vaultItemsComponent","vaultFilterComponent","getCipherIdFromParams","canUseAdminCollections","editCipherId","queryParamsHandling","run","command","successfully","unsubscribe","go","filterSearchText","editCipherAttachments","maxStorageGb","madeAttachmentChanges","attachmentsModalRef","onClosed","currCollections","collectionsModalRef","editCipher","childComponent","cipherAddEditModalRef","onSavedCipher","onDeletedCipher","onRestoredCipher","onClosedPromise","cloneCipher","viewEvents","eventsModalRef","reverse","relativeTo","replaceUrl","VaultRoutingModule","VaultModule","MembersModule","OrganizationReportingModule","OrganizationBillingModule","OrganizationsRoutingModule","OrganizationModule","PlanSponsorshipType","AcceptFamilySponsorshipComponent","register","OrganizationSponsorshipRedeemRequest","FamiliesForEnterpriseSetupComponent","badToken","showNewOrganization","_selectedFamilyOrganizationId","organizationPlansComponent","onOrganizationCreateSuccess","postPreValidateSponsorshipToken","existingFamilyOrganizations$","selectedFamilyOrganizationId","planSponsorshipType","FamiliesForEnterprise","sponsoredOrganizationId","postRedeemSponsorship","SendAccessView","expirationDate","creatorIdentifier","SendAccess","buildDomainModel","decryptObj","SendAccessRequest","toggleText","copyText","AccessComponent","sendType","passwordRequired","showText","unavailable","hideEmail","sendText","maskedText","sendId","downloadData","getSendFileDownloadData","accessRequest","downloadMethod","keyArray","password","passwordHash","pbkdf2","sendResponse","postSendAccess","sendAccess","makeSendKey","hidden","sendService","disableSend","expired","sends","filteredSends","hasSearched","policyAppliesToActiveUser$","policyAppliesToActiveUser","onSuccessfulLoad","applyTextSearch","removePassword","removePasswordWithServer","onSuccessfulRemovePassword","onSuccessfulDelete","link","getSendUrl","accessId","urlB64Key","clearSelections","selectedAll","selectType","selectedType","searchSends","BrowserPath","DateField","DatePreset","datePipe","onSavedSend","onDeletedSend","onCancelled","copyLink","emailVerified","alertShown","showOptions","typeOptions","sendLinkBaseUrl","isSafari","isDateTimeLocalSupported","isFirefox","setDates","deletionDate","getEmailVerified","loadSend","hasPassword","encryptSend","encSend","uploadPromise","saveWithServer","copySuccess","copyLinkToClipboard","deletePromise","typeChanged","toggleOptions","sendData","togglePasswordVisible","datesChanged","datesForm","selectedDeletionDatePreset","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","Custom","expirationDatePresets","Never","browserPath","Firefox","Safari","Default","formattedDeletionDate","now","miliseconds","setTime","formattedExpirationDate","safariDeletionTimePresetOptions","safariTimePresetOptions","DeletionDate","safariExpirationTimePresetOptions","ExpriationDate","nextWeek","setInitialFormValues","emitDates","onDeletionDatePresetSelect","clearExpiration","initialDeletionDate","toTimeString","initialExpirationDate","twentyFourHour","noon","midnight","ams","pms","h","hour","minutes","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","EffluxDatesComponent","editSend","addSend","SendComponent","sendAddEditModalRef","DeauthorizeSessionsComponent","postSecurityStamp","DeleteAccountComponent","accountApiService","deleteForm","deleteAccount","EmailTokenRequest","EmailRequest","ChangeEmailComponent","tokenSent","showTwoFactorEmailWarning","twoFactorProviders","newEmail","postEmail","postEmailToken","UpdateProfileRequest","culture","profile","ProfileComponent","getProfile","putProfile","showChangeEmail","deauthorizeSessions","deauthModalRef","CreateOrganizationComponent","orgPlansComponent","UpdateDomainsRequest","toggleExcluded","customize","DomainRulesComponent","custom","global","getSettingsDomains","equivalentDomains","globalEquivalentDomains","domains","excluded","globalDomain","excludedGlobalEquivalentDomains","d2","putSettingsDomains","indexTrackBy","EmergencyAccessAttachmentsComponent","EmergencyAddEditComponent","viewAttachments","EmergencyAccessViewComponent","postEmergencyAccessView","getAllCiphers","decCiphers","oldKeyBuffer","keyEncrypted","oldEncKey","cipherResponse","cipherData","getLocaleSortingFunction","EmergencyAccessStatusType","EmergencyAccessType","EmergencyAccessConfirmRequest","EmergencyAccessInviteRequest","EmergencyAccessUpdateRequest","EmergencyAccessAddEditComponent","onSaved","onDeleted","emergencyAccessType","waitTimes","emergencyAccess","getEmergencyAccess","waitTime","waitTimeDays","putEmergencyAccess","postEmergencyAccessInvite","EmergencyAccessConfirmComponent","onConfirmed","EmergencyAccessPasswordRequest","EmergencyAccessTakeoverComponent","onDone","getEmergencyGrantorPolicies","takeoverResponse","postEmergencyAccessTakeover","postEmergencyAccessPassword","approve","reject","requestAccess","takeover","EmergencyAccessComponent","emergencyAccessStatusType","isOrganizationOwner","trustedContacts","getEmergencyAccessTrusted","grantedContacts","getEmergencyAccessGranted","addEditModalRef","contact","postEmergencyAccessReinvite","doConfirmation","granteeId","deleteEmergencyAccess","removeGrantee","removeGrantor","postEmergencyAccessInitiate","RecoveryInitiated","postEmergencyAccessApprove","RecoveryApproved","postEmergencyAccessReject","takeoverModalRef","debug","postEmergencyAccessConfirm","form","hours","showCustom","CUSTOM_VALUE","exceedsMinimumTimout","customTimeInMinutes","MIN_CUSTOM_MINUTES","combineLatestWith","vaultTimeoutPolicy","applyVaultTimeoutPolicy","getVaultTimeout","current","max","ngOnChanges","vaultTimeouts","every","onTouched","validate","policyError","minTimeoutError","registerOnValidatorChange","validatorChange","vaultTimeoutPolicyHours","vaultTimeoutPolicyMinutes","VaultTimeoutInputComponent","PreferencesComponent","themingService","vaultTimeoutAction","isDev","localeOptions","supportedTranslationLocales","localeNames","themeOptions","getVaultTimeoutAction","enableFavicons","enableFullWidth","getEnableFullWidth","getLocale","startingLocale","theme","getTheme","startingTheme","setVaultTimeoutOptions","setEnableFullWidth","updateConfiguredTheme","setLocale","vaultTimeoutActionChanged","newValue","FolderWithIdRequest","SendWithIdRequest","UpdateKeyRequest","ChangePasswordComponent","rotateEncKey","rotateEncKeyClicked","updateKey","privateKey","getPrivateKey","encPrivateKey","cryptoKey","decryptToBytes","postAccountKey","updateEmergencyAccesses","updateAllResetPasswordKeys","allowedStatuses","filteredAccesses","updateRequest","KdfRequest","ChangeKdfComponent","kdfOptions","recommendedKdfIterations","postAccountKdf","SecurityKeysComponent","showChangeKdf","viewUserApiKey","viewUserApiKeyModalRef","postUserApiKey","rotateUserApiKey","rotateUserApiKeyModalRef","postUserRotateApiKey","SecurityComponent","showChangePassword","redirectTo","SecurityRoutingModule","getHasPremiumPersonally","hasFamilySponsorshipAvailable","canManageSponsorships","hasPremiumFromOrg","getHasPremiumFromOrganization","billing","getUserBillingHistory","hideSubscription","hasNoHistory","notAllowedValueAsync","valueGetter","caseInsensitive","notAllowedValue","controlValue","resendEmail","SponsoringOrgRowComponent","sponsoringOrg","isSelfHosted","sponsorshipRemoved","statusMessage","statusClass","locale$","setStatus","familySponsorshipToDelete","familySponsorshipValidUntil","familySponsorshipLastSyncDate","revokeSponsorship","revokeSponsorshipPromise","doRevokeSponsorship","resendEmailPromise","postResendSponsorshipOffer","isSentAwaitingSync","familySponsorshipFriendlyName","deleteRevokeSponsorship","toDelete","validUntil","lastSyncDate","forceReload","SponsoredFamiliesComponent","sponsorshipForm","selectedSponsorshipOrgId","sponsorshipEmail","asyncValidators","availableSponsorshipOrgs$","familySponsorshipAvailable","anyOrgsAvailable$","activeSponsorshipOrgs$","anyActiveSponsorships$","postCreateSponsorship","sponsoredEmail","friendlyName","resetForm","sponsorshipEmailControl","BillingHistoryViewComponent","firstLoaded","PremiumComponent","premiumPrice","storageGbPrice","additionalStorage","fd","FormData","postAccountLicense","finalizePremium","paymentComponent","createPaymentToken","taxInfoComponent","taxInfo","country","postalCode","postPremium","paymentResponse","paymentIntentClientSecret","handleStripeCardPayment","additionalStorageTotal","subtotal","taxCharges","taxRate","total","SubscriptionComponent","hasPremium","subscriptionRoute","reinstate","closeUpdateLicense","updateLicense","downloadLicense","adjustStorage","closeStorage","UserSubscriptionComponent","adjustStorageAdd","showAdjustStorage","showUpdateLicense","sub","getUserSubscription","usingInAppPurchase","reinstatePromise","postReinstatePremium","cancelPromise","postCancelPremium","licenseString","license","subscriptionMarkedForCancel","subscription","cancelled","cancelAtEndDate","nextInvoice","upcomingInvoice","storagePercentage","storageGb","toFixed","storageProgressWidth","SubscriptionRoutingModule","usernameGenerationService","comingFromAddEdit","onSelected","usernameOptions","username","avoidAmbiguous","usernameWebsite","passTypeOptions","usernameTypeOptions","desc","subaddressOptions","catchallOptions","initForwardOptions","passwordOptionsResponse","getOptions","ambiguous","subaddressEmail","subaddressType","catchallType","website","websiteOption","generatorOptions","getGeneratorOptions","regenerateWithoutButtonPress","regenerate","setGeneratorOptions","regeneratePassword","regenerateUsername","sliderChanged","savePasswordOptions","addHistory","sliderInput","normalizePasswordOptions","saveOptions","saveUsernameOptions","generateUsername","usernameGeneratingPromise","copyOptions","number","normalizeOptions","forwardOptions","forwardedService","localeCompare","history","getHistory","SelectCopyDirective","el","onCopy","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","PasswordGeneratorHistoryComponent","lengthChanged","minNumberChanged","minSpecialChanged","GeneratorComponent","historyModalRef","ToolsComponent","BulkDialogsModule","UpdateKeyComponent","makeRequest","folderApiService","onSavedFolder","onDeletedFolder","FolderAddEditComponent","onSharedCipher","cipherView","shareWithServer","ShareComponent","VerifyEmailComponent","onVerified","verifyEmail","postAccountVerifyEmail","showVerifyEmail","showBrowserOutdated","showUpdateKey","showPremiumCallout","folderAddEditModalRef","navigator","userAgent","isShowingCards","verified","filterComponent","shareCipher","shareModalRef","selectedColId","updateKeyModalRef","favorites","ImportExportModule","OssRoutingModule","buildFlaggedRoute","flagName","useHash","paramsInheritanceStrategy","HasPremiumGuard","routerState","userHasPremium","BreachReportComponent","breachedAccounts","checkedUsername","ReportBreach","ReportExposedPasswords","ReportInactiveTwoFactor","ReportReusedPasswords","ReportUnsecuredWebsites","ReportWeakPasswords","ReportType","reports","ExposedPasswords","ReusedPasswords","WeakPasswords","UnsecuredWebsites","Inactive2fa","DataBreach","ReportsSharedModule","ReportsHomeComponent","reportRequiresPremium","variant","ReportsLayoutComponent","homepage","ReportsRoutingModule","ReportsModule","CipherReportComponent","requiresPaid","hasLoaded","setCiphers","checkAccess","useTotp","ExposedPasswordsReportComponent","exposedPasswordMap","exposedPasswordCiphers","passwordLeaked","exposedCount","canManageCipher","InactiveTwoFactorReportComponent","services","cipherDocs","load2fa","inactive2faCiphers","docs","hasUris","uris","domain","responseJson","json","service","serviceData","documentation","additionalDomain","ReusedPasswordsReportComponent","ciphersWithPasswords","passwordUseMap","reusedPasswordCiphers","UnsecuredWebsitesReportComponent","unsecuredCiphers","WeakPasswordsReportComponent","passwordStrengthMap","passwordStrengthCache","weakPasswordCiphers","isUserNameNotEmpty","getCacheKey","hasUserName","cacheKey","scoreKey","ReportVariant","ReportCardComponent","requiresPremium","ReportListComponent","StorageRequest","AdjustStorageComponent","interval","onAdjusted","onCanceled","storageAdjustment","storageGbAdjustment","paymentFailed","postAccountStorage","updateStorage","adjustedStorageTotal","ApiKeyComponent","clientSecret","apiKey","TransactionType","BillingHistoryComponent","paymentMethodType","transactionType","invoices","transactions","paymentMethodClasses","OrganizationCreateRequest","OrganizationUpgradeRequest","ProviderOrganizationCreateRequest","clientOwnerEmail","organizationCreateRequest","changedProduct","changedOwnedBusiness","OrganizationPlansComponent","showFree","showCancel","onTrialBillingSuccess","productTypes","singleOrgPolicyBlock","discount","businessOwned","premiumAccessAddon","plans","getPlans","addValidators","selectedPlan","selectedPlanInterval","isAnnual","selectableProducts","validPlans","canBeUsedByBusiness","legacyYear","Free","familyPlan","basePrice","selectablePlans","additionalStoragePriceMonthly","additionalStoragePricePerGb","seatPriceMonthly","seatPrice","hasAdditionalStorageOption","seatTotal","hasAdditionalSeatsOption","subTotal","hasPremiumAccessOption","premiumAccessOptionPrice","freeTrial","trialPeriodDays","taxComponent","paymentDesc","baseSeats","hideBank","method","changeMethod","shareKey","makeShareKey","collectionCt","createSelfHosted","createCloudHosted","updateOrganization","billingSubLabelText","additionalStorageGb","planType","billingAddressCountry","billingAddressPostalCode","upgrade","collectionName","tokenResult","paymentToken","includeTaxId","taxIdNumber","taxId","billingAddressLine1","line1","billingAddressLine2","line2","billingAddressCity","city","billingAddressState","providerRequest","providerKey","getProviderKey","postProviderCreateOrganization","create","createLicense","updateKeys","price","VerifyBankRequest","BitPayInvoiceRequest","AddCreditComponent","onAdded","ppLoading","payPalConfig","ppButtonFormAction","ppButtonBusinessId","creditAmount","ppButtonCustomField","subject","returnUrl","ppButtonFormRef","req","credit","amount","creditAmountNumber","postBitPayInvoice","bitPayUrl","formatAmount","floatAmount","parseFloat","round","PaymentRequest","AdjustPaymentComponent","postAccountPayment","updatePayment","changeCountry","addCredit","closeAddCredit","verifyBank","changePayment","closePayment","submitTaxInfo","PaymentMethodComponent","showAdjustPayment","showAddCredit","verifyBankForm","amount1","amount2","forOrganization","billingPromise","getBilling","orgPromise","getUserBillingPayment","paymentSourceInApp","verifyBankPromise","taxFormPromise","isCreditBalance","balance","creditOrBalance","paymentSource","headerClass","paymentSourceClasses","bank","PaymentComponent","showMethods","hidePaypal","hideCredit","trialFlow","routing_number","account_number","account_holder_name","account_holder_type","currency","btInstance","stripe","stripeElements","stripeCardNumberElement","stripeCardExpiryElement","stripeCardCvcElement","stripeScript","async","onload","Stripe","elements","setStripeElement","btScript","StripeElementStyle","base","fontFamily","fontSize","fontSmoothing","StripeElementClasses","empty","subscribeToTheme","head","appendChild","removeChild","querySelectorAll","btStylesheet","braintree","dropin","authorization","container","paymentOptionPriority","paypal","buttonStyle","label","shape","tagline","createErr","console","requestPaymentMethod","payload","nonce","catch","err","postSetupPayment","handleCardSetup","setupIntent","payment_method","createToken","handleCardPayment","paymentIntent","style","classes","mount","theme$","getComputedStyle","documentElement","getPropertyValue","borderColor","PurgeVaultComponent","postPurgeCiphers","TaxInfoComponent","onCountryChanged","pristine","getTaxInfo","taxRates","getTaxRates","localTaxRate","x","rate","getTaxInfoRequest","hasChanged","updateTaxInfo","putTaxInfo","hasOwnProperty","TwoFactorProviderRequest","TwoFactorBaseComponent","twoFactorProviderType","auth","authResponse","hashedSecret","verificationType","enableFunction","buildRequestModel","putTwoFactorOrganizationDisable","putTwoFactorDisable","requestClass","UpdateTwoFactorDuoRequest","TwoFactorDuoComponent","processResponse","integrationKey","ikey","secretKey","skey","putTwoFactorOrganizationDuo","putTwoFactorDuo","UpdateTwoFactorAuthenticatorRequest","TwoFactorAuthenticatorComponent","qrScript","putTwoFactorAuthenticator","QRious","element","UpdateTwoFactorEmailRequest","TwoFactorEmailComponent","postTwoFactorEmailSetup","sentEmail","putTwoFactorEmail","print","TwoFactorRecoveryComponent","w","write","onafterprint","formatString","UpdateTwoFactorWebAuthnDeleteRequest","UpdateTwoFactorWebAuthnRequest","readKey","TwoFactorWebAuthnComponent","keyIdAvailable","keysConfiguredCount","webAuthnResponse","deviceResponse","putTwoFactorWebAuthn","removePromise","deleteTwoFactorWebAuthn","challengePromise","getTwoFactorWebAuthnChallenge","challenge","readDevice","webAuthnChallenge","log","resetWebAuthn","webAuthnListening","webAuthnError","listening","k","configured","migrated","UpdateTwoFactorYubioOtpRequest","TwoFactorYubiKeyComponent","nfc","key1","key2","key3","key4","key5","putTwoFactorYubiKey","disablePromise","existingKey","padRight","character","showPolicyWarning","twoFactorAuthPolicyAppliesToActiveUser","p2","evaluatePolicies","authenticatorModalRef","yubikeyModalRef","emailModalRef","webAuthnModalRef","recoveryModalRef","ref","TwoFactorVerifyComponent","onAuthed","otp","apiCall","getTwoFactorRecover","getTwoFactorOrganizationDuo","getTwoFactorDuo","getTwoFactorEmail","getTwoFactorWebAuthn","getTwoFactorAuthenticator","getTwoFactorYubiKey","UpdateLicenseComponent","updatePromise","LooseComponentsModule","AsyncActionsModule","AvatarModule","BadgeListModule","ButtonModule","CalloutModule","CheckboxModule","IconButtonModule","DialogModule","IconModule","LinkModule","MenuModule","NavigationModule","TableModule","TabsModule","ToggleGroupModule","ColorPasswordModule","BreadcrumbsModule","SharedModule","addFieldType","linkedFieldOptions","fieldType","eventType","addFieldTypeOptions","addFieldLinkedTypeOption","changes","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","fields","newField","linkedId","removeField","toggleFieldValue","showValue","trackByFunction","drop","previousIndex","currentIndex","linkedFieldOption","i18nKey","TrueFalseValueDirective","elementRef","renderer","trueValue","falseValue","propagateChange","onHostChange","setProperty","AddEditCustomFieldsComponent","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","onGenerateUsername","showCardNumber","showCardCode","currentDate","canUseReprompt","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","uriMatchOptions","autofillOnPageLoadOptions","personalOwnershipPolicyAppliesToActiveUser","myEmail","addEditCipherInfo","getAddEditCipherInfo","setAddEditCipherInfo","card","identity","secureNote","previousCipherId","getCardExpMonthDisplay","expMonth","editCollections","restorePromise","restoreCipher","toggleUriOptions","checkPasswordPromise","matches","createWithServer","updateWithServer","showRevisionDate","hasPasswordHistory","viewingPasswordHistory","showPasswordCount","passwordRevisionDisplayDate","cleanUp","totpUpdateCode","getTimeInterval","totpTick","totpInterval","setInterval","canLaunch","confirmed","showGetPremium","clearInterval","totpCode","half","totpCodeFormatted","intervalSeconds","mod","totpSec","totpDash","totpLow","OrganizationBadgeModule","NestingDelimiter","_collapsedFilterNodes","getCollapsedFilterNodes","buildOrganizationTree","filterFolders","buildFolderTree","collectionViews$","setCollapsedGroupings","getCollapsedGroupings","headNode","getOrganizationFilterHead","myVaultNode","getOrganizationFilterMyVault","orgCopy","myVault","hideOptions","array","storedCollections","getCollectionFilterHead","collectionCopy","n","storedFolders","orgCiphers","oc","getFolderFilterHead","folderCopy","revisionDate","VaultFilterSharedModule","flagEnabled","flag","AccountService","InternalAccountService","ConfigApiServiceAbstraction","EventUploadService","FileUploadService","NotificationsService","SettingsService","SyncNotifierService","UserVerificationApiServiceAbstraction","AccountFactory","accountConstructor","GlobalStateFactory","globalStateConstructor","StateFactory","globalStateFactory","accountFactory","createGlobal","createAccount","StateVersion","stateVersion","One","environmentUrls","NotificationType","NotificationResponse","contextId","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","AuthRequest","AuthRequestResponse","AuthRequestPushNotification","AnonymousHubService","getNotificationsUrl","anonHubConnection","HubConnectionBuilder","withUrl","skipNegotiation","transport","withHubProtocol","MessagePackHubProtocol","build","on","ProcessNotification","notification","authResponsePushNotifiction","DeviceRequest","appId","getDevice","getDeviceString","pushToken","TokenRequest","device","alterIdentityTokenHeaders","headers","setTwoFactor","setPasswordlessAccessCode","passwordlessAuthRequest","toIdentityToken","client_id","deviceName","authRequest","twoFactorToken","twoFactorProvider","twoFactorRemember","UserApiTokenRequest","startsWith","grant_type","client_secret","ApiKeyResponse","AttachmentUploadDataResponse","fileUploadType","cipherMiniResponse","requestDeviceType","requestIpAddress","creationDate","RegisterResponse","BillingResponse","BillingSourceResponse","BillingTransactionResponse","BillingInvoiceResponse","cardBrand","needsVerification","pdfUrl","paid","createdDate","refunded","partiallyRefunded","refundedAmount","BillingHistoryResponse","BillingPaymentResponse","BreachAccountResponse","addedDate","breachDate","dataClasses","isActive","isVerified","logoPath","modifiedDate","pwnCount","CollectionResponse","CollectionDetailsResponse","CollectionAccessDetailsResponse","DeviceVerificationResponse","isDeviceVerificationSectionEnabled","unknownDeviceVerificationEnabled","GlobalDomainResponse","DomainsResponse","EventResponse","IdentityCaptchaResponse","IdentityTokenResponse","accessToken","access_token","expiresIn","expires_in","refreshToken","refresh_token","tokenType","token_type","apiUseKeyConnector","keyConnectorUrl","IdentityTwoFactorResponse","twoFactorProviders2","prop","parseInt","KeyConnectorUserKeyResponse","OrganizationConnectionResponse","configType","rawConfig","OrganizationExportResponse","OrganizationSponsorshipSyncStatusResponse","ProfileOrganizationResponse","useDirectory","use2fa","useKeyConnector","useScim","useCustomPermissions","useSecretsManager","selfHost","usersGetPremium","seats","ssoBound","providerName","familySponsorshipLastSyncDateString","familySponsorshipValidUntilString","ProfileProviderOrganizationResponse","ProfileProviderResponse","ProfileResponse","providerOrganizations","premiumPersonally","premiumFromOrganization","twoFactorEnabled","securityStamp","PaymentResponse","userProfile","PlanResponse","nameLocalizationKey","descriptionLocalizationKey","baseStorageGb","maxUsers","maxAdditionalSeats","maxAdditionalStorage","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","has2fa","hasApi","hasSso","hasResetPassword","upgradeSortOrder","displaySortOrder","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","PreloginResponse","ProviderOrganizationResponse","userCount","ProviderOrganizationOrganizationDetailsResponse","OrganizationUserBulkPublicKeyResponse","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","ProviderUserUserDetailsResponse","ProviderResponse","SendAccessResponse","SendFileDownloadDataResponse","SendResponse","notes","maxAccessCount","accessCount","SendFileUploadDataResponse","SsoPreValidateResponse","SubscriptionResponse","storageName","expiration","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","trialEndDate","periodStartDate","periodEndDate","cancelledDate","BillingSubscriptionItemResponse","quantity","sponsoredSubscriptionItem","FolderResponse","SyncResponse","TaxInfoResponse","taxIdType","TaxRateResponse","TwoFactorAuthenticatorResponse","TwoFactorDuoResponse","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","TwoFactorWebAuthnResponse","KeyResponse","ChallengeResponse","attestation","authenticatorSelection","excludeCredentials","extensions","pubKeyCredParams","rp","TwoFactorYubiKeyResponse","UserKeyResponse","AuditService","hashBytes","hashStart","hashEnding","nativeFetch","getHibpBreach","throttleKey","propertyKey","descriptor","originalMethod","allThrottles","throttles","getThrottles","argsThrottleKey","queue","exec","onFinally","apply","PasswordTokenRequest","AuthResult","requiresCaptcha","LogInStrategy","tokenRequest","startLogIn","clearSelectedProvider","postIdentityToken","processTwoFactorResponse","processCaptchaResponse","processTokenResponse","buildDeviceRequest","buildTwoFactor","userProvidedTwoFactor","storedTwoFactorToken","getTwoFactorToken","saveAccountInformation","tokenResponse","accountInformation","decodeToken","hasPremiumPersonally","kdfType","tokens","setTwoFactorToken","setUserKey","createKeyPairForOldAccount","setProviders","postAccountKeys","PasswordLogInStrategy","PasswordlessLogInStrategy","passwordlessCredentials","SsoTokenRequest","code_verifier","redirect_uri","SsoLogInStrategy","newSsoUser","convertNewSsoUserToKeyConnector","getAndSetKey","UserApiLogInStrategy","getKeyConnectorUrl","setApiKeyClientId","setApiKeyClientSecret","PreloginRequest","sequentialize","caches","getCache","argsCacheKey","SortedCiphersCache","comparator","sortedCiphersByUrl","timeouts","isCached","addCiphers","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","lastUsedIndex","localData","lastLaunched","y","valueOf","getNextIndex","CipherBulkMoveRequest","CipherBulkRestoreRequest","CipherBulkShareRequest","CipherPartialRequest","CipherShareRequest","DomainMatchBlacklist","CipherService","settingsService","fileUploadService","encryptService","sortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","getDecryptedCiphers","setDecryptedCipherCache","setDecryptedCiphers","clearIndex","clearCache","clearDecryptedCiphersState","existingCipher","passwordHistory","ph","lastUsedDate","passwordRevisionDate","hasFields","existingHiddenFields","hiddenFields","ef","matchedField","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","encAttachments","sizeName","fieldsModel","encFields","reduce","encField","encryptField","fieldModel","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getLocalData","reindexCiphers","hasKey","getOrgKeys","userKey","getKeyForUserEncryption","grouped","agg","entries","groupedCiphers","decryptItems","flat","indexedEntityId","getAllDecryptedForGrouping","groupingId","getAllDecryptedForUrl","includeOtherTypes","defaultMatch","eqDomainsPromise","settings$","eqDomain","matchingDomains","getDefaultUriMatch","domainUrlHost","urlHost","RegExp","test","getCiphersOrganization","cr","getLastUsedForUrl","autofillOnPageLoad","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","setLocalData","decryptedCipherCache","cached","updateLastLaunchedDate","saveNeverDomain","getNeverDomains","setNeverDomains","postCipherCreate","postCipher","upsert","putCipher","putPartialCipher","attachmentPromises","shareAttachmentWithServer","encCipher","putShareCipher","encCiphers","putShareCiphers","toCipherData","unencryptedFile","reader","FileReader","readAsArrayBuffer","evt","cData","onerror","filename","encFileName","dataEncKey","encData","encryptToBytes","fileSize","byteLength","adminRequest","uploadDataResponse","postCipherAttachment","uploadCipherAttachment","legacyServerAttachmentFileUpload","blob","Blob","Buffer","filepath","contentType","postCipherAttachmentAdminLegacy","postCipherAttachmentLegacy","putCipherCollections","clearEncryptedCiphersState","putMoveCiphers","deleteManyCiphers","deleteAttachment","aLastUsed","bLastUsed","bothNotNull","sortCiphersByLastUsedThenName","aName","bName","softDelete","setDeletedDate","putDeleteCipher","putDeleteManyCiphers","clearDeletedDate","putRestoreCipher","putRestoreManyCiphers","restores","attachmentView","attachmentResponse","postShareCipherAttachment","theProp","theObj","modelProp","loginUri","cardholderName","brand","expYear","firstName","middleName","lastName","address1","address2","address3","company","phone","ssn","passportNumber","licenseNumber","lastUsed","autofillOnPageLoadDefault","getAutoFillOnPageLoadDefault","clearSortedCiphers","ServerConfigResponse","gitHash","server","ThirdPartyServerConfigResponse","environment","EnvironmentServerConfigResponse","vault","api","notifications","ServerConfig","serverConfigData","utcDate","getAgeInMilliseconds","expiresSoon","EFFLongWordList","BaseEncryptedOrganizationKey","EncryptedOrganizationKey","ProviderEncryptedOrganizationKey","decValue","toData","CryptoService","setCryptoMasterKey","storeKey","keyHash","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","setDecryptedPrivateKey","setEncryptedPrivateKey","setOrgKeys","providerOrgs","encOrgKeyData","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setProviderKeys","providerKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","keySuffix","inMemoryKey","getCryptoMasterKey","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","warning","clearSecretKeyStore","storedKeyHash","getEncKeyHelper","getPublicKey","inMemoryPublicKey","rsaExtractPublicKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","keyFingerprint","userFingerprint","hkdfExpand","hashPhrase","decryptedOrganizationKeys","getDecryptedOrganizationKeys","getEncryptedOrganizationKeys","encOrgKey","fromData","decOrgKey","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","encProviderKeys","getEncryptedProviderKeys","hasKeyInMemory","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","getEncryptedCryptoSymmetricKey","clearKey","clearSecretStorage","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","clearOrgKeys","clearProviderKeys","clearPinProtectedKey","setEncryptedPinProtected","clearKeys","toggleKey","salt","protectedKeyCs","pinProtectedKey","getEncryptedPinProtected","randomBytes","keyPair","stretchKey","keyMaterial","sendKey","hkdf","hashPurpose","iterations","theKey","buildEncKey","plainValue","encBytes","encValue","privateKeyValue","headerPieces","encPieces","encType","alg","encString","keyForEnc","encBuffer","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","Uint8Array","shouldStoreKey","keyB64","getBiometricUnlock","getCryptoMasterKeyBiometric","macKey","minimumEntropy","entropyPerWord","numWords","hashArr","phrase","hashNumber","remainder","divide","encKeyEnc","getDecryptedCryptoSymmetricKey","decEncKey","encKeyCipher","encryptionType","symmetricCryptoKey","EncryptedObject","EncryptServiceImplementation","logMacFailures","plainBuf","encObj","aesEncrypt","iv","mac","macLen","resolveLegacyKey","fastParams","aesDecryptFastParameters","computedMac","hmacFast","macData","compareFast","logMacFailed","aesDecryptFast","encThing","macBytes","ivBytes","dataBytes","hmac","aesDecrypt","classInitializers","MultithreadEncryptServiceImplementation","clear$","worker","Worker","restartTimeout","fromEvent","jsonItem","className","initializerKey","defaultIfEmpty","terminate","EventRequest","EventExport","FileUploadType","AzureFileUploadService","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","Headers","toUTCString","searchParams","blobResponse","baseUrl","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","blockData","blockHeaders","blockRequest","blockResponse","blockListUrl","blockListXml","expiry","utfBlockId","blockIdList","xml","Version","month","day","Number","compareTo","BitwardenFileUploadService","encryptedFileName","encryptedFileData","SetKeyConnectorKeyRequest","KeyConnectorUserKeyRequest","LoginService","_email","_rememberEmail","OrganizationUserResponse","OrganizationUserUserDetailsResponse","OrganizationUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","encryptedPrivateKey","OrganizationUserBulkResponse","OrganizationUserBulkRequest","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","OrganizationApiKeyInformationResponse","OrganizationAutoEnrollStatusResponse","KeysResponse","OrganizationKeysResponse","OrganizationResponse","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","maxAutoscaleSeats","OrganizationSubscriptionResponse","SsoConfigApi","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpDisableOutboundLogoutRequests","idpWantAuthnRequestsSigned","OpenIdConnect","openId","Saml2","saml","idpAllowOutboundLogoutRequests","OrganizationSsoResponse","urls","SsoUrls","callbackPath","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","PasswordGeneratorPolicyOptions","useUppercase","useLowercase","numberCount","specialCount","inEffect","DefaultOptions","minNumber","minUppercase","minLowercase","wordSeparator","ResetPasswordPolicyOptions","ProviderUserStatusType","ProviderUserType","Provider","canAccess","isProviderAdmin","canCreateOrganizations","canManageUsers","canAccessEventLogs","ProviderAdmin","SearchService","indexing","immediateSearchLocales","defaultSearchableMinLength","searchableMinLength","registeredPipeline","lunr","Pipeline","registerFunction","normalizeAccentsPipelineFunction","query","normalizeSearchQuery","builder","Builder","pipeline","boost","extractor","subTitle","uriExtractor","fieldExtractor","attachmentExtractor","results","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","toLocaleLowerCase","sendsMatched","lowPriorityMatched","joined","hasAttachments","hostname","protocolIndex","queryIndex","searchableFields","metadata","normalize","Send","getCryptoService","TokenService","decoded","setTokens","clientIdClientSecret","setToken","setRefreshToken","setClientId","setClientSecret","getClientId","getApiKeyClientId","getClientSecret","getApiKeyClientSecret","setAccessToken","getToken","getAccessToken","getRefreshToken","clearTwoFactorToken","clearToken","getTokenExpirationDate","exp","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","tokenNeedsRefresh","email_verified","getIssuer","iss","getIsExternal","amr","v1Keys","alwaysShowDock","autoConfirmFingerprints","autoFillOnPageLoadDefault","biometricAwaitingAcceptance","biometricFingerprintValidated","biometricUnlock","clearClipboard","collapsedGroupings","convertAccountToKeyConnector","defaultUriMatch","disableAddLoginNotification","disableAutoBiometricsPrompt","disableAutoTotpCopy","disableBadgeCounter","disableChangedPasswordNotification","disableContextMenuItem","disableGa","dontShowCardsCurrentTab","dontShowIdentitiesCurrentTab","enableAlwaysOnTop","enableAutoFillOnPageLoad","enableBiometric","enableBrowserIntegration","enableBrowserIntegrationFingerprint","enableCloseToTray","enableMinimizeToTray","enableStartToTray","enableTray","encOrgKeys","encPrivate","entityType","eventCollection","installedVersion","lastActive","mainWindowSize","minimizeOnCopyToClipboard","neverDomains","noAutoPromptBiometricsText","openAtLogin","passwordGenerationOptions","pinProtected","ssoIdentifier","ssoState","stamp","usesConnector","rememberedEmail","v1KeyPrefixes","lastSync","partialKeys","needsMigration","currentStateVersion","getCurrentStateVersion","Latest","migrate","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","Four","authenticatedAccounts","getAuthenticatedAccounts","migratedAccount","migrateAccountFrom4To5","setCurrentStateVersion","Five","migrateAccountFrom5To6","Six","clearV1Keys","clearingUserId","keyPrefix","globals","noAutoPromptBiometrics","ssoOrganizationIdentifier","defaultAccount","accountSettings","autoConfirmFingerPrints","decrypted","encrypted","passwordGenerationHistory","apiKeyClientSecret","cryptoMasterKey","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","cryptoSymmetricKey","legacyEtmKey","organizationKeys","apiKeyClientId","authenticationStatus","everBeenUnlocked","decodedToken","accountActivity","authenticatedUserIds","getGlobals","encryptedOrgKeys","htmlStorageLocation","newVersion","OrganizationData","SyncService","logoutCallback","syncInProgress","toJSON","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","getSync","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","syncUpsertFolder","isEdit","localFolder","remoteFolder","syncDeleteFolder","syncUpsertCipher","shouldUpdate","localCipher","checkCollections","remoteCipher","getFullCipherDetails","syncDeleteCipher","syncUpsertSend","localSend","remoteSend","getSend","syncDeleteSend","getAccountRevisionDate","getSecurityStamp","setSecurityStamp","setEmailVerified","setHasPremiumPersonally","setHasPremiumFromOrganization","setForcePasswordReset","setUsesKeyConnector","isProviderUser","userNeedsMigration","setConvertAccountRequired","eqDomains","setEquivalentDomains","B32Chars","SteamChars","VerifyOTPRequest","OTP","AnonAddyForwarder","generate","anonaddy","requestInit","redirect","Authorization","DuckDuckGoForwarder","address","FastmailForwarder","accountId","getAccountId","using","methodCalls","emailPrefix","fastmail","prefix","methodResponses","created","notCreated","primaryAccounts","FirefoxRelayForwarder","generated_for","full_address","ForwarderOptions","FastmailForwarderOptions","AnonAddyForwarderOptions","SimpleLoginForwarder","Authentication","note","alias","wordCapitalize","wordIncludeNumber","forwardedAnonAddyDomain","DecryptParameters","BroadcasterService","subscribers","messageCallback","ThemeBuilder","configuredTheme","systemTheme","effectiveTheme","updateSystemTheme","ThemingService","_theme","monitorThemeChanges","getSystemTheme","monitorConfiguredThemeChanges","monitorSystemThemeChanges","setTheme","matchMedia","JslibServicesModule","useFactory","deps","language","makeAndGetAppId","getAnonymousAppId","existingId","guid","pushNotificationSubject","logInStrategy","strategy","clearState","saveState","callback","getEverBeenUnlocked","preloginResponse","postPrelogin","startSessionTimeout","clearSessionTimeout","sessionTimeout","P","_folders","_folderViews","activeAccountUnlocked$","unlocked","updateObservables","getAllFromState","getFromState","getAllDecryptedFromState","decryptFolders","updates","cId","foldersMap","decryptFolderPromises","decryptedFolders","noneFolder","postFolder","putFolder","deleteFolder","accountService","verificationRequest","setDecryptedCollections","decCollections","getDecryptedCollections","getAllNested","getNested","urlsSubject","scimUrl","setUrlsFromStorage","notificationsUrl","getIconsUrl","iconsUrl","getApiUrl","apiUrl","identityUrl","getEventsUrl","eventsUrl","getScimUrl","getEnvironmentUrls","envUrls","webVault","icons","keyConnector","setUrls","formatUrl","scim","setEnvironmentUrls","getUrls","isCloud","period","digits","keyB32","isOtpAuth","isSteamAuth","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","timeBytes","keyBytes","b32ToBytes","sign","offset","binary","fullCode","trunc","l","b32ToHex","cleanedInput","bits","hex","byteIndex","chunk","signature","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","getPasswordGenerationOptions","setPasswordGenerationOptions","enforcedOptions","enforcePasswordGeneratorPoliciesOnOptions","getPasswordGeneratorPolicyOptions","currentPolicy","getDecryptedPasswordGenerationHistory","getEncryptedPasswordGenerationHistory","decryptHistory","setDecryptedPasswordGenerationHistory","currentHistory","matchesPrevious","unshift","newHistory","encryptHistory","setEncryptedPasswordGenerationHistory","userInputs","globalUserInputs","finalUserInputs","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","generateCatchall","generateSubaddress","generateForwarded","generateWord","word","zeroPad","atIndex","emailBeginning","emailEnding","subaddressString","randomString","catchallDomain","startString","forwarder","forwarderOptions","forwardedSimpleLoginApiKey","forwardedAnonAddyApiToken","forwardedFirefoxApiToken","forwardedFastmailApiToken","forwardedDuckDuckGoToken","getUsernameGenerationOptions","setUsernameGenerationOptions","charSet","customUserAgent","isWebClient","isDesktopClient","Accept","identityToken","getClientType","qsStringify","getCredentials","isJsonResponse","TwoFactorProviders2","HCaptcha_SiteKey","doAuthRefresh","postSetKeyConnectorKey","postIapCheck","postConvertToKeyConnector","getSends","postSend","postFileTypeSend","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","postImportCiphers","postImportOrganizationCiphers","putRestoreCipherAdmin","renewAttachmentUploadUrl","postAttachmentFile","dr","deleteCollectionUser","deleteGroupUser","postPublicImportDirectory","rawId","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","getDeviceVerificationSettings","putDeviceVerificationSettings","getCloudCommunicationsEnabled","getOrganizationConnection","createOrganizationConnection","updateOrganizationConnection","organizationConnectionId","deleteOrganizationConnection","postProviderSetup","getProvider","putProvider","getProviderUsers","getProviderUser","postProviderUserInvite","postProviderUserReinvite","postManyProviderUserReinvite","postProviderUserBulkConfirm","deleteManyProviderUsers","postProviderUserAccept","postProviderUserConfirm","postProviderUsersPublicKey","putProviderUser","deleteProviderUser","getProviderClients","postProviderAddOrganization","deleteProviderOrganization","getEvents","addEventParameters","getEventsOrganization","getEventsProvider","postEventsCollect","authHeader","getActiveBearerToken","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getKeyConnectorAlive","getOrganizationExport","getApplicationVersionNumber","sponsoredOrgId","getSponsorshipSyncStatus","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","doRefreshToken","doApiTokenRefresh","deviceRequest","hasResponse","alterHeaders","requestUrl","responseType","responseIsJson","tokenError","isTextResponse","Message","typeHeader","azureFileUploadService","bitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","_settings","getSettings","setSettings","setVaultTimeout","currentAction","setVaultTimeoutAction","setProtectedPin","lockedCallback","loggedOutCallback","inited","checkOnInterval","startCheck","checkVaultTimeout","isViewOpen","accounts","accounts$","shouldLock","executeTimeoutAction","getLastActive","vaultTimeoutSeconds","getExport","format","getEncryptedExport","getDecryptedExport","getPasswordProtectedExport","clearText","encKeyValidation","encText","jsonDoc","passwordProtected","encKeyValidation_DO_NOT_EDIT","getOrganizationEncryptedExport","getOrganizationDecryptedExport","extension","padNumber","getSeconds","decFolders","exportCiphers","buildCommonCipher","exportData","exportPromises","decCol","decCipher","collectionsMap","padCharacter","numString","login_uri","login_username","login_password","login_totp","connected","inactive","reconnectTimer","signalrConnection","off","accessTokenFactory","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","sync","reconnectFromActivity","disconnectFromInactivity","isAuthenticated","payloadUserId","UserId","myUserId","random","crypto","subtle","algorithm","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","ikm","outputByteSize","hkdfParams","prk","hashLen","infoBuf","infoArr","runningOkmLength","previousT","okm","md","valueBytes","toByteString","update","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","bytes","getBytes","rand","Uint32Array","putInt32","meta","encKeyByteString","macKeyByteString","encKeyB64","macKeyB64","parameters","dataBuffer","decipher","finish","output","rsaParams","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","arr","getRandomValues","buf","cryptoFunctionservice","uploadEvents","getEventCollection","clearEvents","setEventCollection","eventUploadService","uploadImmediately","orgIds","_policies","getEncryptedPolicies","decryptedPolicies","getDecryptedPolicies","diskPolicies","prototype","call","setDecryptedPolicies","obsPolicies","filteredPolicies","policyFilter","checkPoliciesThatApplyToUser","newPassword","toLocaleUpperCase","resetPasswordPolicyOptions","policiesResponse","setEncryptedPolicies","isExcemptFromPolicies","isExemptFromPolicies","policiesMap","policySet","getPoliciesByInvitedUser","setDecryptedSends","fileData","ArrayBuffer","encryptFileData","parseFile","decSends","getDecryptedSends","legacyServerSendFileUpload","loggedInUsingSso","requiredByOrganization","userIsNotUsingKeyConnector","keyConnectorRequest","handleKeyConnectorError","userKeyResponse","keyArr","pubKey","privKey","setPasswordRequest","setConvertAccountToKeyConnector","getConvertAccountRequired","getConvertAccountToKeyConnector","userVerificationApiService","alreadyHashed","validateInput","postAccountVerifyOTP","postAccountRequestOTP","_organizations","getOrganizations","organizationsMap","hasOrganizations","getByIdentifier","setOrganizations","getOrganizationUserGroups","includeCollections","getOrganizationUserResetPasswordDetails","postOrganizationUserReinvite","postManyOrganizationUserReinvite","postOrganizationUserConfirm","putOrganizationUserGroups","putOrganizationUserResetPassword","deleteOrganizationUser","revokeOrganizationUser","revokeManyOrganizationUsers","restoreOrganizationUser","restoreManyOrganizationUsers","controlErrors","keyError","getSubscription","getLicense","updateSubscription","updateSeats","importDirectory","getApiKeyInformation","organizationApiKeyType","getSso","updateSso","_sync","sync$","configApiService","_serverConfig","serverConfig$","timer","E","buildServerConfig","serverConfig","getServerConfig","fetchServerConfig","setServerConfig","defaultErrorMessage","validationErrors","getAllMessages","MemoryStorageService","store","BroadcasterMessagingService","subscriber","arg","HtmlStorageService","defaultOptions","localStorage","getItem","sessionStorage","setItem","removeItem","ContainerService","attachToGlobal","bitwardenContainerService","getEncryptService","InitService","notificationsService","ModalService","applicationRef","modalOpen","setupHandlers","onCreated","modals","shown","onClose","PasswordRepromptComponent","PasswordRepromptService","FileDownloadBuilder","_request","fileType","fileNameLower","endsWith","WebFileDownloadService","createObjectURL","position","ClientType","WebPlatformUtilsService","browserCache","chrome","Web","isChrome","isEdge","isOpera","isVivaldi","isMacAppStore","rel","PublicKeyCredential","supportsDuo","confirmText","cancelText","bodyIsHtml","iconClasses","bootstrapModal","removeAttribute","iconHtmlStr","heightAuto","buttonsStyling","iconHtml","html","titleText","showCancelButton","cancelButtonText","showConfirmButton","confirmButtonText","doc","clipboardData","setData","queryCommandSupported","textarea","textContent","copyEl","contains","execCommand","warn","readFromClipboard","authenticateBiometric","CoreModule","parentModule","initService","systemLanguage","localesDirectory","getLocalesJson","_locale","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","p3","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","content","replaceToken","replaceContent","filePath","localesResult","migrationStateFrom1To2","LoginModule","VerticalStepperModule","TrialInitiationModule","OrganizationManageModule","OrganizationUserModule","OssModule","WildcardRoutingModule","ProviderAddOrganizationRequest","WebProviderService","addOrganizationToProvider","encryptedOrgKey","detachOrganizastion","AddOrganizationComponent","webProviderService","onAddedOrganization","ProviderPermissionsGuard","providerPermissions","ProvidersComponent","addExistingOrganization","DisallowedPlanTypes","ClientsComponent","manageOrganizations","showAddExisting","pagedClientsCount","clients","candidateOrgs","allowedOrgsIds","addableOrganizations","pagedClients","addModalRef","ProviderUserAcceptRequest","AcceptProviderComponent","EventsComponent","providerUsersUserIdMap","providerUsersIdMap","ProviderUserBulkRequest","ProviderUserConfirmRequest","ProviderUserBulkConfirmRequest","ProviderUserInviteRequest","ProviderUserUpdateRequest","UserAddEditComponent","onSavedUser","onDeletedUser","ServiceUser","userType","bulkConfirm","PeopleComponent","bulkRemove","bulkRemoveModalRef","bulkReinvite","showBulkStatus","bulkConfirmModalRef","successfullMessage","bulkStatusModalRef","onShown","keyedErrors","keyedFilteredUsers","ProvidersLayoutComponent","showMenuBar","showManageTab","showSettingsTab","manageRoute","ProviderUpdateRequest","SetupProviderComponent","ProviderSetupRequest","SetupComponent","ProvidersRoutingModule","ProvidersModule","registerComponentFactoryResolver","SecretsManagerModule","AppRoutingModule","toastrService","sanitizer","lastActivity","idleTimer","isIdle","lang","runOutsideAngular","onmousemove","recordActivity","onmousedown","ontouchstart","onclick","onscroll","onkeypress","setFullWidth","clean","setLastActive","idleStateChanged","sanitize","enableHtml","trustedHtml","timeOut","DisablePersonalVaultExportPolicy","DisablePersonalVaultExportPolicyComponent","MaximumVaultTimeoutPolicy","MaximumVaultTimeoutPolicyComponent","AppComponent","ScimConfigApi","scimProvider","ScimConfigRequest","copyScimUrl","toggleScimKey","rotateScimKey","copyScimKey","ScimComponent","showScimSettings","showScimKey","formData","endpointUrl","connection","setConnectionFormValues","loadApiKey","apiKeyRequest","apiKeyResponse","getScimEndpointUrl","rotatePromise","existingConnectionId","OrganizationSsoRequest","SsoConfigView","InputStripSpacesDirective","onInput","CopyClickDirective","valueToCopy","LaunchClickDirective","uriToLaunch","BaseCvaComponent","controlDir","internalControl","onValueChangesInternal","describedById","showDescribedBy","controlId","helperText","isRequired","onBlurInternal","InputCheckboxComponent","validateKeyConnectorUrl","toggleOpenIdCustomizations","defaultSigningAlgorithm","ssoType","ssoTypeOptions","None","samlSigningAlgorithms","saml2SigningBehaviourOptions","IfIdpWantAuthnRequestsSigned","Always","saml2BindingTypeOptions","HttpRedirect","HttpPost","saml2NameIdFormatOptions","NotConfigured","Unspecified","EmailAddress","X509SubjectName","WindowsDomainQualifiedName","KerberosPrincipalName","EntityIdentifier","Persistent","Transient","connectRedirectOptions","RedirectGet","FormPost","destory$","showOpenIdCustomizations","haveTestedKeyConnector","openIdForm","samlForm","ssoConfigForm","newType","ssoSettings","populateForm","validateForm","readOutErrors","fromView","markAsPending","invalidUrl","getErrorCount","acc","enableTestKeyConnector","samlSigningAlgorithmOptions","markAsDirty","ssoConfigView","errorCount","errorCountText","div","innerText","existing","OrganizationsModule","AppModule","bootstrapModule","preserveWhitespaces","CalloutComponent","useAlertRole","calloutStyle","enforcedPolicyMessage","getPasswordScoreAlertDisplay","FallbackSrcDirective","onError","appFallbackSrc","cardIcons","Visa","Mastercard","Amex","Discover","JCB","Maestro","UnionPay","RuPay","Mir","IconComponent","image","fallbackImage","imageEnabled","setLoginIcon","setCardIcon","hostnameUri","isWebsite","ModalRef","_onCreated","_onClose","_onClosed","_onShow","_onShown","onShow","lastResult","toPromise","A11yTitleDirective","appA11yTitle","hasAttribute","ApiActionDirective","appApiAction","AutofocusDirective","appAutofocus","condition","autofocus","InputVerbatimDirective","appInputVerbatim","disableComplete","StopClickDirective","$event","preventDefault","StopPropDirective","stopPropagation","AuthGuard","promptBiometric","LockGuard","loginpage","UnauthGuard","BitwardenToast","toastPackage","BitwardenToastGlobalConfig","toastComponent","BitwardenToastModule","ngModule","default","numberFormats","cardLength","blocks","Other","CreditCardNumberPipe","creditCardNumber","rules","matchingRule","chunks","JslibModule","forRoot","maxOpened","autoDismiss","closeButton","I18nPipe","SearchPipe","prop1","prop2","prop3","propValue","UserNamePipe","WINDOW","MEMORY_STORAGE","SECURE_STORAGE","STATE_FACTORY","STATE_SERVICE_USE_CACHE","LOGOUT_CALLBACK","LOCKED_CALLBACK","LOCALES_DIRECTORY","SYSTEM_LANGUAGE","LOG_MAC_FAILURES","DynamicModalComponent","cd","focusTrapFactory","loadChildComponent","childComponentType","setComponentParameters","componentRef","focusTrap","focusFirstTabbableElementWhenReady","componentType","componentFactory","modalContentRef","destroy","getFocus","autoFocusEl","ModalInjector","_parentInjector","_additionalTokens","notFoundValue","flags","ModalConfig","modalList","factoryResolvers","modalCount","topModal","viewContainerRef","modalComponentRef","openInternal","hostView","replaceTopModal","closeAll","attachToDom","createModalComponent","attachView","domElem","rootNodes","detachView","backdrop","modalEl","dialogEl","zIndex","prepend","closeElement","WeakMap","AbstractThemingService","PasswordStrengthComponent","passwordScoreColor","scoreWidth","updatePasswordStrength","masterPasswordScoreColor","masterPasswordScoreText","masterPasswordStrengthTimeout","setPasswordScoreText","AccountApiService","ApiService","AppIdService","AuthService","CollectionService","CryptoFunctionService","EncryptService","EnvironmentService","EventCollectionService","ExportService","FileDownloadService","FolderApiServiceAbstraction","FolderService","InternalFolderService","FormValidationErrorsService","I18nService","KeyConnectorService","LogService","MessagingService","OrganizationUserService","OrganizationUserResetPasswordRequest","OrganizationApiServiceAbstraction","canAccessVaultTab","canManageGroups","canAccessSettingsTab","canAccessMembersTab","canManageUsersPassword","canAccessGroupsTab","canAccessReportingTab","canAccessReports","canAccessBillingTab","canAccessOrgAdmin","getOrganizationById","canAccessAdmin","isNotProviderUser","OrganizationService","InternalOrganizationService","PasswordGenerationService","PlatformUtilsService","PolicyApiServiceAbstraction","PolicyService","InternalPolicyService","ProviderService","SendService","StateMigrationService","AbstractStorageService","TotpService","TwoFactorService","UserVerificationService","UsernameGenerationService","ValidationService","VaultTimeoutService","VaultTimeoutSettingsService","AuthenticationStatus","AuthenticationType","CipherRepromptType","CipherType","DeviceType","EncryptionType","EventType","FieldType","HashPurpose","HtmlStorageLocation","KdfType","DEFAULT_KDF_TYPE","PBKDF2_SHA256","DEFAULT_KDF_ITERATIONS","SEND_KDF_ITERATIONS","KeySuffixOptions","LoginLinkedId","CardLinkedId","IdentityLinkedId","LogLevelType","OrganizationApiKeyType","OrganizationConnectionType","OrganizationUserStatusType","OrganizationUserType","PaymentMethodType","PlanType","PolicyType","ProductType","SecureNoteType","SendType","ThemeType","TwoFactorProviderType","UriMatchType","VerificationType","getFlags","envFlags","LinkedMetadata","_i18nKey","ServiceUtils","nodeTree","partIndex","delimiter","partName","nestedTraverse","newPartName","getTreeNodeObject","getTreeNodeObjectFromList","nodeURL","Utils","isNode","process","release","isBrowser","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","binaryString","atob","charCodeAt","fromB64ToArray","fromUrlB64ToB64","strUtf8","unescape","fromB64toUrlB64","fromBufferToB64","b64Str","encodedString","decodeURIComponent","escape","urlB64Str","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","uriString","isNullOrWhitespace","validHosts","getUrl","parseResult","isIp","pair","source","getUrlObject","bgColor","threshold","svgTextFill","bgColorHexNums","fromEntries","record","destination","mobile","vendor","opera","ms","hasProtocol","anchor","regexpEmojiPresentation","CardApi","FieldApi","IdentityApi","LoginUriApi","LoginApi","PermissionsApi","accessEventLogs","accessImportExport","accessReports","manageAllCollections","manageAssignedCollections","createNewCollections","editAnyCollection","deleteAnyCollection","editAssignedCollections","deleteAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","manageScim","SecureNoteApi","SendFileApi","SendTextApi","AttachmentData","CardData","CipherData","CollectionData","EventData","FieldData","FolderData","IdentityData","LoginUriData","LoginData","PasswordHistoryData","PolicyData","ProviderData","SecureNoteData","SendFileData","SendTextData","SendData","ServerConfigData","serverConfigResponse","ThirdPartyServerConfigData","EnvironmentServerConfigData","fromJSON","EncryptionPair","decryptedFromJson","encryptedFromJson","DataEncryptionPair","TemporaryDataEncryption","AccountData","AccountKeys","initRecordEncryptionPairsFromJSON","decObj","AccountProfile","AccountTokens","Attachment","decryptAttachmentKey","getKeyForDecryption","toAttachmentData","buildDataModel","Card","toCardData","Cipher","decAttachment","decField","decPh","toLoginData","toSecureNoteData","toIdentityData","toFieldData","toPasswordHistoryData","Collection","Domain","dataObj","notEncList","objProp","notEncStringList","viewModel","mapProp","EncArrayBuffer","minimumLength","ENC_TYPE_LENGTH","throwDecryptionError","arrayBuffer","b64","EncString","encryptedStringOrType","initFromData","initFromEncryptedString","parseEncryptedString","decryptedValue","EnvironmentUrls","Field","Folder","GeneratedPasswordHistory","Identity","LoginUri","toLoginUriData","Login","MasterPasswordPolicyOptions","Organization","isManager","isAdmin","hasProvider","Password","Policy","SecureNote","SendFile","SendText","SymmetricCryptoKey","TreeNode","WindowState","CardExport","FieldExport","IdentityExport","LoginUriExport","LoginExport","toView","toDomain","SecureNoteExport","CipherExport","CipherWithIdExport","CollectionExport","CollectionWithIdExport","FolderExport","FolderWithIdExport","CipherBulkDeleteRequest","CipherCollectionsRequest","CipherCreateRequest","CipherWithIdRequest","AttachmentRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","CollectionRequest","FolderRequest","TokenTwoFactorRequest","KeysRequest","OrganizationApiKeyRequest","OrganizationConnectionRequest","OrganizationKeysRequest","OrganizationTaxInfoUpdateRequest","SecretVerificationRequest","SelectionReadOnlyRequest","SendRequest","fileLength","TaxInfoUpdateRequest","TwoFactorEmailRequest","AttachmentResponse","BaseResponse","propertyName","exactName","otherCasePropertyName","PasswordHistoryResponse","CipherResponse","EmergencyAccessGranteeDetailsResponse","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","EmergencyAccessViewResponse","ErrorResponse","identityResponse","errorModel","responseErrorModel","messages","lastSep","ListResponse","PolicyResponse","SelectionReadOnlyResponse","AttachmentView","CardView","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","formatYear","CipherView","linkedFieldValue","linkedFieldI18nKey","CollectionView","FieldView","showCount","maskedValue","FolderView","IdentityView","_firstName","_lastName","fullName","fullAddress","fullAddressPart2","addressPart2","ItemView","CanLaunchWhitelist","LoginUriView","_uri","_domain","_hostname","_host","_canLaunch","hostnameOrUri","hostOrUri","LoginView","maskedPassword","PasswordHistoryView","SecureNoteView","SendFileView","SendTextView","SendView","maxAccessCountReached","pendingDelete","ConsoleLogService","timersMap","level","InitializerKey","StorageLocation","State","accountDeserializer","buildAccountMapFromJSON","jsonAccounts","DDG_SHARED_KEY","accountsSubject","activeAccountSubject","activeAccountUnlockedSubject","hasBeenInited","isRecoveredSession","accountDiskCache","setState","createGlobals","initAccountState","updateState","syncAccountFromDisk","storedActiveUser","activeUserId","pushAccounts","diskAccount","getAccountFromDisk","setAccountEnvironmentUrls","scaffoldNewAccountStorage","setActiveUser","clearDecryptedDataForActiveUser","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getTimeoutBasedStorageOptions","getAccount","saveAccount","getAlwaysShowDock","defaultOnDiskOptions","setAlwaysShowDock","saveGlobals","setAutoFillOnPageLoadDefault","getBiometricAwaitingAcceptance","setBiometricAwaitingAcceptance","getBiometricFingerprintValidated","setBiometricFingerprintValidated","setBiometricText","setBiometricUnlock","hasPremiumFromOrganization","getClearClipboard","defaultOnDiskLocalOptions","setClearClipboard","nextValue","defaultSecureStorageOptions","saveSecureStorageKey","getCryptoMasterKeyB64","setCryptoMasterKeyB64","setDefaultUriMatch","getDisableAddLoginNotification","setDisableAddLoginNotification","getDisableAutoBiometricsPrompt","setDisableAutoBiometricsPrompt","getDisableAutoTotpCopy","setDisableAutoTotpCopy","getDisableBadgeCounter","setDisableBadgeCounter","getDisableChangedPasswordNotification","setDisableChangedPasswordNotification","getDisableContextMenuItem","setDisableContextMenuItem","getDisableGa","setDisableGa","getDontShowCardsCurrentTab","setDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","setDontShowIdentitiesCurrentTab","getDuckDuckGoSharedKey","setDuckDuckGoSharedKey","getEnableAlwaysOnTop","accountPreference","globalPreference","setEnableAlwaysOnTop","getEnableAutoFillOnPageLoad","setEnableAutoFillOnPageLoad","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","setEnableCloseToTray","getEnableDuckDuckGoBrowserIntegration","enableDuckDuckGoBrowserIntegration","setEnableDuckDuckGoBrowserIntegration","getEnableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","setEnableStartToTray","getEnableTray","setEnableTray","defaultOnDiskMemoryOptions","getEntityId","setEntityId","getEntityType","setEntityType","getGlobalEnvironmentUrls","getEquivalentDomains","getForcePasswordReset","getInstalledVersion","setInstalledVersion","getMainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","getNoAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","setOpenAtLogin","organizationInvitation","usernameGenerationOptions","accountVaultTimeoutAction","globalVaultTimeoutAction","getStateVersion","setStateVersion","getWindow","setWindow","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","setDiskCache","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deleteDiskCache","deepClone","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","timeoutAction","deserializer","stateUpdater","updatedState","withPrototypeForArrayMembers","memberConstructor","memberConverter","originalResult","getOwnPropertyDescriptors","withPrototypeForObjectValues","valuesConstructor","valuesConverter","TwoFactorProviders","priority","selectedTwoFactorProviderType","twoFactorProvidersData","providerPriority","_value","setSelectedProvider","clearProviders","BitActionDirective","buttonComponent","_loading$","loading$","handler","BitSubmitDirective","formGroupDirective","_disabled$","disabled$","ngSubmit","awaitable","statusChanges","BitFormButtonDirective","submitDirective","actionDirective","SizeClasses","large","small","AvatarComponent","border","svgCharCount","svgFontSize","svgFontWeight","svgSize","chars","upperCaseText","svg","getFirstLetters","unicodeSafeSubstring","hexColor","createSvgElement","charObj","createTextElement","svgHtml","bypassSecurityTrustResourceUrl","svgTag","backgroundColor","textTag","fontWeight","BadgeListComponent","filteredItems","isFiltered","badgeType","maxItems","_maxItems","styles","primary","secondary","danger","hoverStyles","BadgeDirective","hasHoverEffects","nodeName","BadgeModule","focusRing","buttonStyles","unstyled","ButtonComponent","block","disabledAttr","setButtonType","defaultIcon","defaultI18n","calloutClass","CharacterType","ColorPasswordComponent","characterStyles","Emoji","Letter","Special","passwordArray","getCharacterClass","charType","getCharacterType","charClass","DialogService","componentOrTemplateRef","backdropClass","DialogComponent","dialogSize","_disablePadding","disablePadding","DialogCloseDirective","dialogResult","DialogTitleContainerDirective","simple","containerInstance","_ariaLabelledBy","IconDirective","SimpleDialogComponent","hasIcon","FormControlModule","BitHintComponent","BitLabel","BitErrorSummary","errorString","dirty","untouched","BitFormFieldControl","BitErrorComponent","displayError","requiredLength","BitFormFieldComponent","ngAfterContentChecked","InputModule","FormFieldModule","BitPasswordInputToggleDirective","button","formField","toggled","toggledChange","spellcheck","PrefixClasses","PrefixButtonClasses","PrefixStaticContentClasses","BitPrefixDirective","BitSuffixDirective","contrast","main","muted","light","sizes","BitIconButtonComponent","iconClass","BitIconComponent","domSanitizer","innerHtml","bypassSecurityTrustHtml","Icon","isIcon","DynamicContentNotAllowedError","svgIcon","strings","Search","BitInputDirective","hasPrefix","hasSuffix","ariaInvalid","setSelectionRange","linkStyles","commonStyles","LinkDirective","linkType","AnchorLinkDirective","ButtonLinkDirective","MenuDividerComponent","MenuItemDirective","MenuTriggerForDirective","overlay","isOpen","defaultMenuConfig","panelClass","hasBackdrop","scrollStrategy","scrollStrategies","reposition","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","withLockedPosition","withFlexibleDimensions","withPush","hasPopup","menu","ariaRole","toggleMenu","destroyMenu","openMenu","disposeAll","overlayRef","templatePortal","attach","closedEventsSub","getClosedEvents","keyDownEventsSub","keyManager","keydownEvents","onKeydown","detachments","escKey","backdropClick","menuClosed","dispose","MenuComponent","menuItems","withWrap","MultiSelectModule","ButtonLikeAbstraction","CellDirective","RowDirective","alignContent","alignmentClass","TableComponent","TabHeaderComponent","TabListContainerDirective","TabListItemDirective","baseClassList","active","activeClassList","disabledClassList","textColorClassList","TabBodyComponent","preserveContent","_active","_firstRender","tabContent","selectTab","TabGroupComponent","_indexToSelect","_selectedIndex","selectedIndexChange","selectedTabChange","_groupId","getTabContentId","getTabLabelId","indexToSelect","_clampTabIndex","isFirstRun","tabs","setActiveItem","tabLabels","withHorizontalOrientation","withHomeAndEnd","selectedTab","TabLabelDirective","TabComponent","_viewContainerRef","textLabel","_contentPortal","implicitContent","TabLinkComponent","_tabNavBar","routerLinkMatchOptions","matrixParams","paths","fragment","onKeyDown","tabItem","routerLinkActive","isActiveChange","updateActiveLink","TabNavBarComponent","updateActiveItem","functionToObservable","func","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","O","chunkIds","notFulfilled","Infinity","fulfilled","getter","__esModule","definition","defineProperty","enumerable","chunkId","miniCssF","globalThis","Function","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","nc","onScriptComplete","prev","doneFns","parentNode","Symbol","toStringTag","nmd","scriptUrl","importScripts","currentScript","baseURI","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}